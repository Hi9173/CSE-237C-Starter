// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cordiccart2pol_cordiccart2pol,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.160000,HLS_SYN_LAT=54,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1045,HLS_SYN_LUT=939,HLS_VERSION=2024_2}" *)

module cordiccart2pol (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        y,
        r,
        r_ap_vld,
        theta,
        theta_ap_vld
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] x;
input  [31:0] y;
output  [31:0] r;
output   r_ap_vld;
output  [31:0] theta;
output   theta_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg r_ap_vld;
reg theta_ap_vld;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [30:0] select_ln18_fu_124_p3;
reg   [30:0] select_ln18_reg_186;
wire   [31:0] x_new_fu_133_p3;
reg   [31:0] x_new_reg_191;
wire   [31:0] y_new_fu_142_p3;
reg   [31:0] y_new_reg_196;
wire    ap_CS_fsm_state3;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_done;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_idle;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_ready;
wire   [31:0] grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_current_theta_2_out;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_current_theta_2_out_ap_vld;
wire   [31:0] grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_x_new_1_out;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_x_new_1_out_ap_vld;
reg    grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start_reg;
wire    ap_CS_fsm_state2;
reg   [31:0] current_theta_2_loc_fu_56;
reg  signed [31:0] x_new_1_loc_fu_52;
wire    ap_CS_fsm_state4;
wire   [29:0] grp_fu_99_p1;
wire   [0:0] tmp_fu_104_p3;
wire   [31:0] sub_ln19_fu_112_p2;
wire   [31:0] sub_ln24_fu_118_p2;
wire   [60:0] grp_fu_99_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start_reg = 1'b0;
end

cordiccart2pol_cordiccart2pol_Pipeline_VITIS_LOOP_30_1 grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start),
    .ap_done(grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_done),
    .ap_idle(grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_idle),
    .ap_ready(grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_ready),
    .select_ln18(select_ln18_reg_186),
    .y_new(y_new_reg_196),
    .x_new(x_new_reg_191),
    .current_theta_2_out(grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_current_theta_2_out),
    .current_theta_2_out_ap_vld(grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_current_theta_2_out_ap_vld),
    .x_new_1_out(grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_x_new_1_out),
    .x_new_1_out_ap_vld(grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_x_new_1_out_ap_vld)
);

cordiccart2pol_mul_32s_30ns_61_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 30 ),
    .dout_WIDTH( 61 ))
mul_32s_30ns_61_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_new_1_loc_fu_52),
    .din1(grp_fu_99_p1),
    .ce(1'b1),
    .dout(grp_fu_99_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start_reg <= 1'b1;
        end else if ((grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_ready == 1'b1)) begin
            grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_current_theta_2_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        current_theta_2_loc_fu_56 <= grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_current_theta_2_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        select_ln18_reg_186[30 : 3] <= select_ln18_fu_124_p3[30 : 3];
        x_new_reg_191 <= x_new_fu_133_p3;
        y_new_reg_196 <= y_new_fu_142_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_x_new_1_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        x_new_1_loc_fu_52 <= grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_x_new_1_out;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        r_ap_vld = 1'b1;
    end else begin
        r_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        theta_ap_vld = 1'b1;
    end else begin
        theta_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start = grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start_reg;

assign grp_fu_99_p1 = 61'd325880643;

assign r = {{grp_fu_99_p2[60:29]}};

assign select_ln18_fu_124_p3 = ((tmp_fu_104_p3[0:0] == 1'b1) ? 31'd1304166820 : 31'd843316828);

assign sub_ln19_fu_112_p2 = (32'd0 - y);

assign sub_ln24_fu_118_p2 = (32'd0 - x);

assign theta = current_theta_2_loc_fu_56;

assign tmp_fu_104_p3 = y[32'd31];

assign x_new_fu_133_p3 = ((tmp_fu_104_p3[0:0] == 1'b1) ? sub_ln19_fu_112_p2 : y);

assign y_new_fu_142_p3 = ((tmp_fu_104_p3[0:0] == 1'b1) ? x : sub_ln24_fu_118_p2);

always @ (posedge ap_clk) begin
    select_ln18_reg_186[2:0] <= 3'b100;
end

endmodule //cordiccart2pol
