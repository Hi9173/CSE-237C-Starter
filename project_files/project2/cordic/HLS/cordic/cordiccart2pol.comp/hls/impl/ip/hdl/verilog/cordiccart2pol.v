// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cordiccart2pol_cordiccart2pol,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=210,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1305,HLS_SYN_LUT=2124,HLS_VERSION=2024_2}" *)

module cordiccart2pol (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        y,
        r,
        r_ap_vld,
        theta,
        theta_ap_vld
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] x;
input  [31:0] y;
output  [31:0] r;
output   r_ap_vld;
output  [31:0] theta;
output   theta_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg r_ap_vld;
reg theta_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] y_read_reg_267;
wire   [0:0] grp_fu_114_p2;
reg   [0:0] tmp_1_reg_286;
wire    ap_CS_fsm_state2;
wire   [31:0] current_theta_fu_224_p3;
reg   [31:0] current_theta_reg_291;
wire    ap_CS_fsm_state3;
wire   [31:0] x_new_4_fu_233_p3;
reg   [31:0] x_new_4_reg_296;
wire   [31:0] y_new_4_fu_241_p3;
reg   [31:0] y_new_4_reg_301;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_start;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_done;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_idle;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_ready;
wire   [31:0] grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_current_theta_2_out;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_current_theta_2_out_ap_vld;
wire   [31:0] grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_x_new_6_out;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_x_new_6_out_ap_vld;
wire   [31:0] grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_109_p_din0;
wire   [31:0] grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_109_p_din1;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_109_p_ce;
wire   [31:0] grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_114_p_din0;
wire   [31:0] grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_114_p_din1;
wire   [4:0] grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_114_p_opcode;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_114_p_ce;
reg    grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_start_reg;
wire    ap_CS_fsm_state4;
reg   [31:0] x_new_6_loc_fu_62;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state8;
reg   [31:0] grp_fu_109_p0;
reg   [31:0] grp_fu_109_p1;
reg   [31:0] grp_fu_114_p0;
reg   [31:0] grp_fu_114_p1;
wire   [31:0] bitcast_ln32_fu_120_p1;
wire   [7:0] tmp_fu_123_p4;
wire   [22:0] trunc_ln32_fu_133_p1;
wire   [0:0] icmp_ln32_1_fu_143_p2;
wire   [0:0] icmp_ln32_fu_137_p2;
wire   [0:0] or_ln32_fu_149_p2;
wire   [0:0] bit_sel1_fu_160_p3;
wire   [0:0] xor_ln33_fu_168_p2;
wire   [30:0] trunc_ln33_fu_174_p1;
wire   [31:0] xor_ln_fu_178_p3;
wire   [31:0] bitcast_ln38_fu_190_p1;
wire   [0:0] bit_sel_fu_194_p3;
wire   [0:0] xor_ln38_fu_202_p2;
wire   [30:0] trunc_ln38_fu_208_p1;
wire   [31:0] xor_ln1_fu_212_p3;
wire   [0:0] and_ln32_fu_155_p2;
wire   [31:0] x_new_fu_186_p1;
wire   [31:0] y_new_fu_220_p1;
wire   [31:0] grp_fu_109_p2;
reg    grp_fu_109_ce;
reg    grp_fu_114_ce;
reg   [4:0] grp_fu_114_opcode;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_start_reg = 1'b0;
end

cordiccart2pol_cordiccart2pol_Pipeline_VITIS_LOOP_44_1 grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_start),
    .ap_done(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_done),
    .ap_idle(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_idle),
    .ap_ready(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_ready),
    .y_new_5(y_new_4_reg_301),
    .x_new_5(x_new_4_reg_296),
    .current_theta(current_theta_reg_291),
    .current_theta_2_out(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_current_theta_2_out),
    .current_theta_2_out_ap_vld(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_current_theta_2_out_ap_vld),
    .x_new_6_out(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_x_new_6_out),
    .x_new_6_out_ap_vld(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_x_new_6_out_ap_vld),
    .grp_fu_109_p_din0(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_109_p_din0),
    .grp_fu_109_p_din1(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_109_p_din1),
    .grp_fu_109_p_dout0(grp_fu_109_p2),
    .grp_fu_109_p_ce(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_109_p_ce),
    .grp_fu_114_p_din0(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_114_p_din0),
    .grp_fu_114_p_din1(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_114_p_din1),
    .grp_fu_114_p_opcode(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_114_p_opcode),
    .grp_fu_114_p_dout0(grp_fu_114_p2),
    .grp_fu_114_p_ce(grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_114_p_ce)
);

cordiccart2pol_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_109_p0),
    .din1(grp_fu_109_p1),
    .ce(grp_fu_109_ce),
    .dout(grp_fu_109_p2)
);

cordiccart2pol_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_114_p0),
    .din1(grp_fu_114_p1),
    .ce(grp_fu_114_ce),
    .opcode(grp_fu_114_opcode),
    .dout(grp_fu_114_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_start_reg <= 1'b1;
        end else if ((grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_ready == 1'b1)) begin
            grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        current_theta_reg_291[31] <= current_theta_fu_224_p3[31];
        x_new_4_reg_296 <= x_new_4_fu_233_p3;
        y_new_4_reg_301 <= y_new_4_fu_241_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_1_reg_286 <= grp_fu_114_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_x_new_6_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        x_new_6_loc_fu_62 <= grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_x_new_6_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        y_read_reg_267 <= y;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_109_ce = grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_109_p_ce;
    end else begin
        grp_fu_109_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_109_p0 = grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_109_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_109_p0 = x_new_6_loc_fu_62;
    end else begin
        grp_fu_109_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_109_p1 = grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_109_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_109_p1 = 32'd1058764014;
    end else begin
        grp_fu_109_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_114_ce = grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_114_p_ce;
    end else begin
        grp_fu_114_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_114_opcode = grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_114_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        grp_fu_114_opcode = 5'd4;
    end else begin
        grp_fu_114_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_114_p0 = grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_114_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_114_p0 = y;
    end else begin
        grp_fu_114_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_114_p1 = grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_grp_fu_114_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_114_p1 = 32'd0;
    end else begin
        grp_fu_114_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        r_ap_vld = 1'b1;
    end else begin
        r_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        theta_ap_vld = 1'b1;
    end else begin
        theta_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln32_fu_155_p2 = (tmp_1_reg_286 & or_ln32_fu_149_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign bit_sel1_fu_160_p3 = bitcast_ln32_fu_120_p1[32'd31];

assign bit_sel_fu_194_p3 = bitcast_ln38_fu_190_p1[32'd31];

assign bitcast_ln32_fu_120_p1 = y_read_reg_267;

assign bitcast_ln38_fu_190_p1 = x;

assign current_theta_fu_224_p3 = ((and_ln32_fu_155_p2[0:0] == 1'b1) ? 32'd3217625081 : 32'd1070141433);

assign grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_start = grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_ap_start_reg;

assign icmp_ln32_1_fu_143_p2 = ((trunc_ln32_fu_133_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_137_p2 = ((tmp_fu_123_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln32_fu_149_p2 = (icmp_ln32_fu_137_p2 | icmp_ln32_1_fu_143_p2);

assign r = grp_fu_109_p2;

assign theta = grp_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_fu_96_current_theta_2_out;

assign tmp_fu_123_p4 = {{bitcast_ln32_fu_120_p1[30:23]}};

assign trunc_ln32_fu_133_p1 = bitcast_ln32_fu_120_p1[22:0];

assign trunc_ln33_fu_174_p1 = bitcast_ln32_fu_120_p1[30:0];

assign trunc_ln38_fu_208_p1 = bitcast_ln38_fu_190_p1[30:0];

assign x_new_4_fu_233_p3 = ((and_ln32_fu_155_p2[0:0] == 1'b1) ? x_new_fu_186_p1 : y_read_reg_267);

assign x_new_fu_186_p1 = xor_ln_fu_178_p3;

assign xor_ln1_fu_212_p3 = {{xor_ln38_fu_202_p2}, {trunc_ln38_fu_208_p1}};

assign xor_ln33_fu_168_p2 = (bit_sel1_fu_160_p3 ^ 1'd1);

assign xor_ln38_fu_202_p2 = (bit_sel_fu_194_p3 ^ 1'd1);

assign xor_ln_fu_178_p3 = {{xor_ln33_fu_168_p2}, {trunc_ln33_fu_174_p1}};

assign y_new_4_fu_241_p3 = ((and_ln32_fu_155_p2[0:0] == 1'b1) ? x : y_new_fu_220_p1);

assign y_new_fu_220_p1 = xor_ln1_fu_212_p3;

always @ (posedge ap_clk) begin
    current_theta_reg_291[30:0] <= 31'b0111111110010010000111111111001;
end

endmodule //cordiccart2pol
