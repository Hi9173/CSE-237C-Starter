// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cordiccart2pol_cordiccart2pol_Pipeline_VITIS_LOOP_44_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        y_new_5,
        x_new_5,
        current_theta,
        current_theta_2_out,
        current_theta_2_out_ap_vld,
        x_new_6_out,
        x_new_6_out_ap_vld,
        grp_fu_123_p_din0,
        grp_fu_123_p_din1,
        grp_fu_123_p_dout0,
        grp_fu_123_p_ce,
        grp_fu_128_p_din0,
        grp_fu_128_p_din1,
        grp_fu_128_p_opcode,
        grp_fu_128_p_dout0,
        grp_fu_128_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 10'd1;
parameter    ap_ST_fsm_pp0_stage1 = 10'd2;
parameter    ap_ST_fsm_pp0_stage2 = 10'd4;
parameter    ap_ST_fsm_pp0_stage3 = 10'd8;
parameter    ap_ST_fsm_pp0_stage4 = 10'd16;
parameter    ap_ST_fsm_pp0_stage5 = 10'd32;
parameter    ap_ST_fsm_pp0_stage6 = 10'd64;
parameter    ap_ST_fsm_pp0_stage7 = 10'd128;
parameter    ap_ST_fsm_pp0_stage8 = 10'd256;
parameter    ap_ST_fsm_pp0_stage9 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] y_new_5;
input  [31:0] x_new_5;
input  [31:0] current_theta;
output  [31:0] current_theta_2_out;
output   current_theta_2_out_ap_vld;
output  [31:0] x_new_6_out;
output   x_new_6_out_ap_vld;
output  [31:0] grp_fu_123_p_din0;
output  [31:0] grp_fu_123_p_din1;
input  [31:0] grp_fu_123_p_dout0;
output   grp_fu_123_p_ce;
output  [31:0] grp_fu_128_p_din0;
output  [31:0] grp_fu_128_p_din1;
output  [4:0] grp_fu_128_p_opcode;
input  [0:0] grp_fu_128_p_dout0;
output   grp_fu_128_p_ce;

reg ap_idle;
reg current_theta_2_out_ap_vld;
reg x_new_6_out_ap_vld;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [0:0] icmp_ln44_reg_334;
reg    ap_condition_exit_pp0_iter0_stage9;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [4:0] Kvalues_address0;
wire   [31:0] Kvalues_q0;
wire   [4:0] angles_address0;
wire   [31:0] angles_q0;
wire   [31:0] grp_fu_130_p2;
reg   [31:0] reg_151;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] and_ln47_reg_370;
wire   [31:0] grp_fu_134_p2;
reg   [31:0] reg_155;
wire   [0:0] icmp_ln44_fu_194_p2;
reg   [0:0] icmp_ln44_reg_334_pp0_iter1_reg;
reg   [31:0] Kvalues_load_reg_338;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] angles_load_reg_344;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] current_x_17_load_reg_356;
reg   [31:0] current_y_19_load_reg_362;
wire   [0:0] and_ln47_fu_253_p2;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
reg   [31:0] mul1_reg_377;
wire   [31:0] grp_fu_142_p2;
reg   [31:0] mul2_reg_382;
wire   [31:0] current_theta_1_fu_259_p3;
reg   [31:0] current_theta_1_reg_387;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln44_fu_182_p1;
wire    ap_block_pp0_stage0;
reg   [4:0] i4_fu_56;
wire   [4:0] i_fu_188_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_i4_load;
reg   [31:0] current_theta_15_fu_60;
wire    ap_block_pp0_stage2;
reg   [31:0] current_x_17_fu_64;
wire   [31:0] current_x_fu_271_p3;
reg   [31:0] current_y_19_fu_68;
wire   [31:0] current_y_fu_279_p3;
reg    ap_loop_exit_ready_pp0_iter1_reg;
wire    ap_block_pp0_stage9_11001;
reg    ap_condition_exit_pp0_iter1_stage1;
reg    ap_idle_pp0_0to0;
wire    ap_block_pp0_stage1_01001;
reg    Kvalues_ce0_local;
reg    angles_ce0_local;
reg   [31:0] grp_fu_130_p0;
reg   [31:0] grp_fu_130_p1;
wire    ap_block_pp0_stage6;
reg   [31:0] grp_fu_134_p0;
reg   [31:0] grp_fu_134_p1;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire   [31:0] bitcast_ln47_fu_218_p1;
wire   [7:0] tmp_2_fu_221_p4;
wire   [22:0] trunc_ln47_fu_231_p1;
wire   [0:0] icmp_ln47_1_fu_241_p2;
wire   [0:0] icmp_ln47_fu_235_p2;
wire   [0:0] or_ln47_fu_247_p2;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage1;
reg   [1:0] grp_fu_130_opcode;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage2_00001;
reg   [1:0] grp_fu_134_opcode;
wire    ap_block_pp0_stage4_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [9:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i4_fu_56 = 5'd0;
#0 current_theta_15_fu_60 = 32'd0;
#0 current_x_17_fu_64 = 32'd0;
#0 current_y_19_fu_68 = 32'd0;
#0 ap_done_reg = 1'b0;
end

cordiccart2pol_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_Kvalues_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
Kvalues_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Kvalues_address0),
    .ce0(Kvalues_ce0_local),
    .q0(Kvalues_q0)
);

cordiccart2pol_cordiccart2pol_Pipeline_VITIS_LOOP_44_1_angles_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
angles_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(angles_address0),
    .ce0(angles_ce0_local),
    .q0(angles_q0)
);

cordiccart2pol_faddfsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_130_p0),
    .din1(grp_fu_130_p1),
    .opcode(grp_fu_130_opcode),
    .ce(1'b1),
    .dout(grp_fu_130_p2)
);

cordiccart2pol_faddfsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_134_p0),
    .din1(grp_fu_134_p1),
    .opcode(grp_fu_134_opcode),
    .ce(1'b1),
    .dout(grp_fu_134_p2)
);

cordiccart2pol_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(current_x_17_fu_64),
    .din1(Kvalues_load_reg_338),
    .ce(1'b1),
    .dout(grp_fu_142_p2)
);

cordiccart2pol_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage9),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1)))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        current_theta_15_fu_60 <= current_theta;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        current_theta_15_fu_60 <= current_theta_1_fu_259_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        current_x_17_fu_64 <= x_new_5;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        current_x_17_fu_64 <= current_x_fu_271_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        current_y_19_fu_68 <= y_new_5;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        current_y_19_fu_68 <= current_y_fu_279_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
            i4_fu_56 <= i_fu_188_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i4_fu_56 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Kvalues_load_reg_338 <= Kvalues_q0;
        angles_load_reg_344 <= angles_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln47_reg_370 <= and_ln47_fu_253_p2;
        mul1_reg_377 <= grp_fu_123_p_dout0;
        mul2_reg_382 <= grp_fu_142_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        current_theta_1_reg_387 <= current_theta_1_fu_259_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        current_x_17_load_reg_356 <= current_x_17_fu_64;
        current_y_19_load_reg_362 <= current_y_19_fu_68;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln44_reg_334 <= icmp_ln44_fu_194_p2;
        icmp_ln44_reg_334_pp0_iter1_reg <= icmp_ln44_reg_334;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == and_ln47_reg_370) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln47_reg_370)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_151 <= grp_fu_130_p2;
        reg_155 <= grp_fu_134_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Kvalues_ce0_local = 1'b1;
    end else begin
        Kvalues_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        angles_ce0_local = 1'b1;
    end else begin
        angles_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln44_reg_334 == 1'd1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        ap_condition_exit_pp0_iter0_stage9 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln44_reg_334_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i4_load = 5'd0;
    end else begin
        ap_sig_allocacmp_i4_load = i4_fu_56;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln44_reg_334_pp0_iter1_reg == 1'd1))) begin
        current_theta_2_out_ap_vld = 1'b1;
    end else begin
        current_theta_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln47_reg_370) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_00001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_00001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_130_opcode = 2'd1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_00001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'd0 == and_ln47_reg_370))) begin
        grp_fu_130_opcode = 2'd0;
    end else begin
        grp_fu_130_opcode = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln47_reg_370) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'd0 == and_ln47_reg_370)))) begin
        grp_fu_130_p0 = current_x_17_load_reg_356;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_130_p0 = current_theta_15_fu_60;
    end else begin
        grp_fu_130_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln47_reg_370) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'd0 == and_ln47_reg_370)))) begin
        grp_fu_130_p1 = mul1_reg_377;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_130_p1 = angles_load_reg_344;
    end else begin
        grp_fu_130_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_00001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'd0 == and_ln47_reg_370))) begin
        grp_fu_134_opcode = 2'd1;
    end else if ((((1'd1 == and_ln47_reg_370) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_00001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_00001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_134_opcode = 2'd0;
    end else begin
        grp_fu_134_opcode = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln47_reg_370) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'd0 == and_ln47_reg_370)))) begin
        grp_fu_134_p0 = current_y_19_load_reg_362;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_134_p0 = current_theta_15_fu_60;
    end else begin
        grp_fu_134_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln47_reg_370) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'd0 == and_ln47_reg_370)))) begin
        grp_fu_134_p1 = mul2_reg_382;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_134_p1 = angles_load_reg_344;
    end else begin
        grp_fu_134_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln44_reg_334_pp0_iter1_reg == 1'd1))) begin
        x_new_6_out_ap_vld = 1'b1;
    end else begin
        x_new_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Kvalues_address0 = zext_ln44_fu_182_p1;

assign and_ln47_fu_253_p2 = (or_ln47_fu_247_p2 & grp_fu_128_p_dout0);

assign angles_address0 = zext_ln44_fu_182_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage9;

assign ap_ready = ap_ready_sig;

assign bitcast_ln47_fu_218_p1 = current_y_19_load_reg_362;

assign current_theta_1_fu_259_p3 = ((and_ln47_reg_370[0:0] == 1'b1) ? reg_151 : reg_155);

assign current_theta_2_out = current_theta_1_reg_387;

assign current_x_fu_271_p3 = ((and_ln47_reg_370[0:0] == 1'b1) ? reg_151 : reg_151);

assign current_y_fu_279_p3 = ((and_ln47_reg_370[0:0] == 1'b1) ? reg_155 : reg_155);

assign grp_fu_123_p_ce = 1'b1;

assign grp_fu_123_p_din0 = current_y_19_fu_68;

assign grp_fu_123_p_din1 = Kvalues_load_reg_338;

assign grp_fu_128_p_ce = 1'b1;

assign grp_fu_128_p_din0 = current_y_19_load_reg_362;

assign grp_fu_128_p_din1 = 32'd0;

assign grp_fu_128_p_opcode = 5'd4;

assign i_fu_188_p2 = (ap_sig_allocacmp_i4_load + 5'd1);

assign icmp_ln44_fu_194_p2 = ((ap_sig_allocacmp_i4_load == 5'd19) ? 1'b1 : 1'b0);

assign icmp_ln47_1_fu_241_p2 = ((trunc_ln47_fu_231_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_235_p2 = ((tmp_2_fu_221_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln47_fu_247_p2 = (icmp_ln47_fu_235_p2 | icmp_ln47_1_fu_241_p2);

assign tmp_2_fu_221_p4 = {{bitcast_ln47_fu_218_p1[30:23]}};

assign trunc_ln47_fu_231_p1 = bitcast_ln47_fu_218_p1[22:0];

assign x_new_6_out = ((and_ln47_reg_370[0:0] == 1'b1) ? reg_151 : reg_151);

assign zext_ln44_fu_182_p1 = ap_sig_allocacmp_i4_load;

endmodule //cordiccart2pol_cordiccart2pol_Pipeline_VITIS_LOOP_44_1
