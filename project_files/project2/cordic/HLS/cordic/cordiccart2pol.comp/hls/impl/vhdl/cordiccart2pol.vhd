-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cordiccart2pol is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (31 downto 0);
    y : IN STD_LOGIC_VECTOR (31 downto 0);
    r : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_ap_vld : OUT STD_LOGIC;
    theta : OUT STD_LOGIC_VECTOR (31 downto 0);
    theta_ap_vld : OUT STD_LOGIC );
end;


architecture behav of cordiccart2pol is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cordiccart2pol_cordiccart2pol,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.160000,HLS_SYN_LAT=54,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1045,HLS_SYN_LUT=939,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv61_136C8B43 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000010011011011001000101101000011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_4DBC01A4 : STD_LOGIC_VECTOR (30 downto 0) := "1001101101111000000000110100100";
    constant ap_const_lv31_3243FE5C : STD_LOGIC_VECTOR (30 downto 0) := "0110010010000111111111001011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal select_ln18_fu_124_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln18_reg_186 : STD_LOGIC_VECTOR (30 downto 0);
    signal x_new_fu_133_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_new_reg_191 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_new_fu_142_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_new_reg_196 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start : STD_LOGIC;
    signal grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_done : STD_LOGIC;
    signal grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_idle : STD_LOGIC;
    signal grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_ready : STD_LOGIC;
    signal grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_current_theta_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_current_theta_2_out_ap_vld : STD_LOGIC;
    signal grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_x_new_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_x_new_1_out_ap_vld : STD_LOGIC;
    signal grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal current_theta_2_loc_fu_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_new_1_loc_fu_52 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_99_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_fu_104_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln19_fu_112_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln24_fu_118_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_99_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cordiccart2pol_cordiccart2pol_Pipeline_VITIS_LOOP_30_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_ln18 : IN STD_LOGIC_VECTOR (30 downto 0);
        y_new : IN STD_LOGIC_VECTOR (31 downto 0);
        x_new : IN STD_LOGIC_VECTOR (31 downto 0);
        current_theta_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        current_theta_2_out_ap_vld : OUT STD_LOGIC;
        x_new_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        x_new_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component cordiccart2pol_mul_32s_30ns_61_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (29 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (60 downto 0) );
    end component;



begin
    grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86 : component cordiccart2pol_cordiccart2pol_Pipeline_VITIS_LOOP_30_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start,
        ap_done => grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_done,
        ap_idle => grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_idle,
        ap_ready => grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_ready,
        select_ln18 => select_ln18_reg_186,
        y_new => y_new_reg_196,
        x_new => x_new_reg_191,
        current_theta_2_out => grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_current_theta_2_out,
        current_theta_2_out_ap_vld => grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_current_theta_2_out_ap_vld,
        x_new_1_out => grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_x_new_1_out,
        x_new_1_out_ap_vld => grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_x_new_1_out_ap_vld);

    mul_32s_30ns_61_2_1_U11 : component cordiccart2pol_mul_32s_30ns_61_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 30,
        dout_WIDTH => 61)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x_new_1_loc_fu_52,
        din1 => grp_fu_99_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_99_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_ready = ap_const_logic_1)) then 
                    grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_current_theta_2_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                current_theta_2_loc_fu_56 <= grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_current_theta_2_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    select_ln18_reg_186(30 downto 3) <= select_ln18_fu_124_p3(30 downto 3);
                x_new_reg_191 <= x_new_fu_133_p3;
                y_new_reg_196 <= y_new_fu_142_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_x_new_1_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                x_new_1_loc_fu_52 <= grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_x_new_1_out;
            end if;
        end if;
    end process;
    select_ln18_reg_186(2 downto 0) <= "100";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_done, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_done)
    begin
        if ((grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start <= grp_cordiccart2pol_Pipeline_VITIS_LOOP_30_1_fu_86_ap_start_reg;
    grp_fu_99_p1 <= ap_const_lv61_136C8B43(30 - 1 downto 0);
    r <= grp_fu_99_p2(60 downto 29);

    r_ap_vld_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_ap_vld <= ap_const_logic_1;
        else 
            r_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln18_fu_124_p3 <= 
        ap_const_lv31_4DBC01A4 when (tmp_fu_104_p3(0) = '1') else 
        ap_const_lv31_3243FE5C;
    sub_ln19_fu_112_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(y));
    sub_ln24_fu_118_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(x));
    theta <= current_theta_2_loc_fu_56;

    theta_ap_vld_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            theta_ap_vld <= ap_const_logic_1;
        else 
            theta_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_104_p3 <= y(31 downto 31);
    x_new_fu_133_p3 <= 
        sub_ln19_fu_112_p2 when (tmp_fu_104_p3(0) = '1') else 
        y;
    y_new_fu_142_p3 <= 
        x when (tmp_fu_104_p3(0) = '1') else 
        sub_ln24_fu_118_p2;
end behav;
