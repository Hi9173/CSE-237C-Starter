# 1 "cordiccart2pol.cpp"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 376 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/autopilot_ssdm_op.h" 1
# 105 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/autopilot_ssdm_op.h"
extern "C" {






    void _ssdm_op_IfRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_IfWrite(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_IfNbRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_IfNbWrite(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_IfCanRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_IfCanWrite(...) __attribute__ ((nothrow)) __attribute__((overloadable));


    void _ssdm_StreamRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_StreamWrite(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_StreamNbRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_StreamNbWrite(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_StreamCanRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_StreamCanWrite(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned _ssdm_StreamSize(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_ReadReq(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_Read(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_WriteReq(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_Write(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_NbReadReq(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_CanReadReq(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_NbWriteReq(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    unsigned int __attribute__ ((bitwidth(1))) _ssdm_op_CanWriteReq(...) __attribute__ ((nothrow)) __attribute__((overloadable));




    void _ssdm_op_MemShiftRead(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_PrintNone(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_PrintInt(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_PrintDouble(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_Wait(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_Poll(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_Return(...) __attribute__ ((nothrow)) __attribute__((overloadable));


    void _ssdm_op_SpecSynModule(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecTopModule(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecProcessDecl(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecProcessDef(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecPort(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecConnection(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecChannel(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecSensitive(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecModuleInst(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecPortMap(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecReset(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecPlatform(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecClockDomain(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecPowerDomain(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    int _ssdm_op_SpecRegionBegin(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    int _ssdm_op_SpecRegionEnd(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecLoopName(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecLoopTripCount(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    int _ssdm_op_SpecStateBegin(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    int _ssdm_op_SpecStateEnd(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecInterface(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecPipeline(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecDataflowPipeline(...) __attribute__ ((nothrow)) __attribute__((overloadable));


    void _ssdm_op_SpecLatency(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecParallel(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecProtocol(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecOccurrence(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecResource(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecResourceLimit(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecCHCore(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecFUCore(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecIFCore(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecIPCore(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecMemCore(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecExt(...) __attribute__ ((nothrow)) __attribute__((overloadable));




    void _ssdm_SpecArrayDimSize(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_RegionBegin(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_RegionEnd(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_InlineAll(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_InlineLoop(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_Inline(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_InlineSelf(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_InlineRegion(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_SpecArrayMap(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecArrayPartition(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecArrayReshape(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_SpecStream(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecStable(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecStableContent(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecBindPort(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecPipoDepth(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_SpecExpr(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecExprBalance(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_SpecDependence(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_SpecLoopMerge(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecLoopFlatten(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecLoopRewind(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_SpecFuncInstantiation(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecFuncBuffer(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecFuncExtract(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecConstant(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_DataPack(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_SpecDataPack(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void _ssdm_op_SpecBitsMap(...) __attribute__ ((nothrow)) __attribute__((overloadable));
    void _ssdm_op_SpecLicense(...) __attribute__ ((nothrow)) __attribute__((overloadable));

    void __xilinx_ip_top(...) __attribute__ ((nothrow)) __attribute__((overloadable));


}
# 2 "<built-in>" 2
# 1 "cordiccart2pol.cpp" 2
# 1 "./cordiccart2pol.h" 1



# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_fixed.h" 1








# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" 1
# 41 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h"
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_decl.h" 1
# 54 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_decl.h"
enum ap_q_mode {
  AP_RND,
  AP_RND_ZERO,
  AP_RND_MIN_INF,
  AP_RND_INF,
  AP_RND_CONV,
  AP_TRN,
  AP_TRN_ZERO,
};
# 76 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_decl.h"
enum ap_o_mode {
  AP_SAT,
  AP_SAT_ZERO,
  AP_SAT_SYM,
  AP_WRAP,
  AP_WRAP_SM,
};
# 133 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_decl.h"
template <int _AP_W, bool _AP_S>
struct ap_int_base;

template <int _AP_W>
struct ap_int;

template <int _AP_W>
struct ap_uint;

template <int _AP_W, bool _AP_S>
struct ap_range_ref;

template <int _AP_W, bool _AP_S>
struct ap_bit_ref;

template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2>
struct ap_concat_ref;

template <int _AP_W, int _AP_I, bool _AP_S = true, ap_q_mode _AP_Q = AP_TRN,
          ap_o_mode _AP_O = AP_WRAP, int _AP_N = 0>
struct ap_fixed_base;

template <int _AP_W, int _AP_I, ap_q_mode _AP_Q = AP_TRN,
          ap_o_mode _AP_O = AP_WRAP, int _AP_N = 0>
struct ap_fixed;

template <int _AP_W, int _AP_I, ap_q_mode _AP_Q = AP_TRN,
          ap_o_mode _AP_O = AP_WRAP, int _AP_N = 0>
struct ap_ufixed;

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
struct af_range_ref;

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
struct af_bit_ref;


enum BaseMode { AP_BIN = 2, AP_OCT = 8, AP_DEC = 10, AP_HEX = 16 };
# 187 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_decl.h"
typedef signed long long ap_slong;
typedef unsigned long long ap_ulong;


enum {
  _AP_SIZE_char = 8,
  _AP_SIZE_short = sizeof(short) * 8,
  _AP_SIZE_int = sizeof(int) * 8,
  _AP_SIZE_long = sizeof(long) * 8,
  _AP_SIZE_ap_slong = sizeof(ap_slong) * 8
};
# 42 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" 2
# 164 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h"
enum { CHAR_IS_SIGNED = (char)-1 < 0 };


namespace _ap_type {
template <typename _Tp>
struct is_signed {
  static const bool value = _Tp(-1) < _Tp(1);
};

template <typename _Tp>
struct is_integral {
  static const bool value = false;
};





template <> struct is_integral<bool> { static const bool value = true; };
template <> struct is_integral<char> { static const bool value = true; };
template <> struct is_integral<signed char> { static const bool value = true; };
template <> struct is_integral<unsigned char> { static const bool value = true; };
template <> struct is_integral<short> { static const bool value = true; };
template <> struct is_integral<unsigned short> { static const bool value = true; };
template <> struct is_integral<int> { static const bool value = true; };
template <> struct is_integral<unsigned int> { static const bool value = true; };
template <> struct is_integral<long> { static const bool value = true; };
template <> struct is_integral<unsigned long> { static const bool value = true; };
template <> struct is_integral<ap_slong> { static const bool value = true; };
template <> struct is_integral<ap_ulong> { static const bool value = true; };


template <bool, typename _Tp = void>
struct enable_if {};

template <typename _Tp>
struct enable_if<true, _Tp> {
  typedef _Tp type;
};

template <typename _Tp>
struct remove_const {
  typedef _Tp type;
};

template <typename _Tp>
struct remove_const<_Tp const> {
  typedef _Tp type;
};
}
# 507 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h"
template <int _AP_N, bool _AP_S>
struct ssdm_int;

template <int _AP_N>
struct ssdm_int<_AP_N, true> {
  typedef int __attribute__((bitwidth(_AP_N))) DataType;
  int V __attribute__((bitwidth(_AP_N)));
  inline __attribute__((always_inline)) ssdm_int<_AP_N, true>() = default;
                inline __attribute__((always_inline)) ssdm_int<_AP_N, true>(int o __attribute__((bitwidth(_AP_N)))):V(o){};
};

template <int _AP_N>
struct ssdm_int<_AP_N, false> {
  typedef unsigned __attribute__((bitwidth(_AP_N))) DataType;
  unsigned V __attribute__((bitwidth(_AP_N)));
  inline __attribute__((always_inline)) ssdm_int<_AP_N, false>() = default;
                inline __attribute__((always_inline)) ssdm_int<_AP_N, false>(unsigned o __attribute__((bitwidth(_AP_N)))):V(o){};
};
# 575 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h"
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/autopilot_ssdm_bits.h" 1
# 576 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" 2

extern "C" void _ssdm_string2bits(...);
# 587 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h"
static inline unsigned char guess_radix(const char* s) {
  unsigned char rd = 10;
  const char* p = s;

  if (p[0] == '-' || p[0] == '+') ++p;

  if (p[0] == '0') {
    if (p[1] == 'b' || p[1] == 'B') {
      rd = 2;
    } else if (p[1] == 'o' || p[1] == 'O') {
      rd = 8;
    } else if (p[1] == 'x' || p[1] == 'X') {
      rd = 16;
    } else if (p[1] == 'd' || p[1] == 'D') {
      rd = 10;
    }
  }
  return rd;
}







typedef __fp16 half;
# 710 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h"
inline __attribute__((always_inline)) ap_ulong doubleToRawBits(double pf) {
  union {
    ap_ulong __L;
    double __D;
  } LD;
  LD.__D = pf;
  return LD.__L;
}

inline __attribute__((always_inline)) unsigned int floatToRawBits(float pf) {
  union {
    unsigned int __L;
    float __D;
  } LD;
  LD.__D = pf;
  return LD.__L;
}

inline __attribute__((always_inline)) unsigned short halfToRawBits(half pf) {

  union {
    unsigned short __L;
    half __D;
  } LD;
  LD.__D = pf;
  return LD.__L;



}


inline __attribute__((always_inline)) double rawBitsToDouble(ap_ulong pi) {
  union {
    ap_ulong __L;
    double __D;
  } LD;
  LD.__L = pi;
  return LD.__D;
}


inline __attribute__((always_inline)) float rawBitsToFloat(unsigned long pi) {
  union {
    unsigned int __L;
    float __D;
  } LD;
  LD.__L = pi;
  return LD.__D;
}


inline __attribute__((always_inline)) half rawBitsToHalf(unsigned short pi) {

  union {
    unsigned short __L;
    half __D;
  } LD;
  LD.__L = pi;
  return LD.__D;






}
# 10 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_fixed.h" 2
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h" 1
# 16 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_int.h" 1
# 11 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_int.h"
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h" 1
# 56 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_N, bool _AP_S>
struct retval;


template <int _AP_N>
struct retval<_AP_N, true> {
  typedef ap_slong Type;
};

template <int _AP_N>
struct retval<_AP_N, false> {
  typedef ap_ulong Type;
};


template <>
struct retval<1, true> {
  typedef signed char Type;
};

template <>
struct retval<1, false> {
  typedef unsigned char Type;
};


template <>
struct retval<2, true> {
  typedef short Type;
};

template <>
struct retval<2, false> {
  typedef unsigned short Type;
};


template <>
struct retval<3, true> {
  typedef long Type;
};

template <>
struct retval<3, false> {
  typedef unsigned long Type;
};

template <>
struct retval<4, true> {
  typedef long Type;
};

template <>
struct retval<4, false> {
  typedef unsigned long Type;
};




template <int _AP_W2, bool _AP_S2>
struct _ap_int_factory;
template <int _AP_W2>
struct _ap_int_factory<_AP_W2,true> { typedef ap_int<_AP_W2> type; };
template <int _AP_W2>
struct _ap_int_factory<_AP_W2,false> { typedef ap_uint<_AP_W2> type; };

template <int _AP_W, bool _AP_S>
struct ap_int_base : public ssdm_int<_AP_W, _AP_S> {
 static_assert(_AP_W > 0, "ap_int_base bitwidth must be positive");

 private:
                inline __attribute__((always_inline)) __attribute__((nodebug)) int countLeadingOnes() const {




    return 0;

  }

 public:
  typedef ssdm_int<_AP_W, _AP_S> Base;







  typedef typename retval<(((_AP_W + 7) / 8) > (8) ? ((_AP_W + 7) / 8) : (8)), _AP_S>::Type RetType;

  static const int width = _AP_W;
  static const bool sign_flag = _AP_S;

  template <int _AP_W2, bool _AP_S2>
  struct RType {
    enum {
      mult_w = _AP_W + _AP_W2,
      mult_s = _AP_S || _AP_S2,
      plus_w =
          ((_AP_W + (_AP_S2 && !_AP_S)) > (_AP_W2 + (_AP_S && !_AP_S2)) ? (_AP_W + (_AP_S2 && !_AP_S)) : (_AP_W2 + (_AP_S && !_AP_S2))) + 1,
      plus_s = _AP_S || _AP_S2,
      minus_w =
          ((_AP_W + (_AP_S2 && !_AP_S)) > (_AP_W2 + (_AP_S && !_AP_S2)) ? (_AP_W + (_AP_S2 && !_AP_S)) : (_AP_W2 + (_AP_S && !_AP_S2))) + 1,
      minus_s = true,
      div_w = _AP_W + _AP_S2,
      div_s = _AP_S || _AP_S2,
      mod_w = ((_AP_W) < (_AP_W2 + (!_AP_S2 && _AP_S)) ? (_AP_W) : (_AP_W2 + (!_AP_S2 && _AP_S))),
      mod_s = _AP_S,
      logic_w = ((_AP_W + (_AP_S2 && !_AP_S)) > (_AP_W2 + (_AP_S && !_AP_S2)) ? (_AP_W + (_AP_S2 && !_AP_S)) : (_AP_W2 + (_AP_S && !_AP_S2))),
      logic_s = _AP_S || _AP_S2
    };


    typedef ap_int_base<mult_w, mult_s> mult_base;
    typedef ap_int_base<plus_w, plus_s> plus_base;
    typedef ap_int_base<minus_w, minus_s> minus_base;
    typedef ap_int_base<logic_w, logic_s> logic_base;
    typedef ap_int_base<div_w, div_s> div_base;
    typedef ap_int_base<mod_w, mod_s> mod_base;
    typedef ap_int_base<_AP_W, _AP_S> arg1_base;

    typedef typename _ap_int_factory<mult_w, mult_s>::type mult;
    typedef typename _ap_int_factory<plus_w, plus_s>::type plus;
    typedef typename _ap_int_factory<minus_w, minus_s>::type minus;
    typedef typename _ap_int_factory<logic_w, logic_s>::type logic;
    typedef typename _ap_int_factory<div_w, div_s>::type div;
    typedef typename _ap_int_factory<mod_w, mod_s>::type mod;
    typedef typename _ap_int_factory<_AP_W, _AP_S>::type arg1;
    typedef bool reduce;
  };





  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base() = default;


  template <int _AP_W2, bool _AP_S2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const ap_int_base<_AP_W2, _AP_S2>& op):Base(op.V) {
    Base::V = op.V;
  }


  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const volatile ap_int_base<_AP_W2, _AP_S2>& op) {
    Base::V = op.V;
  }
# 220 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const bool op):Base(op) { Base::V = op; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const char op):Base(op) { Base::V = op; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const signed char op):Base(op) { Base::V = op; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const unsigned char op):Base(op) { Base::V = op; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const short op):Base(op) { Base::V = op; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const unsigned short op):Base(op) { Base::V = op; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const int op):Base(op) { Base::V = op; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const unsigned int op):Base(op) { Base::V = op; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const long op):Base(op) { Base::V = op; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const unsigned long op):Base(op) { Base::V = op; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const ap_slong op):Base(op) { Base::V = op; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const ap_ulong op):Base(op) { Base::V = op; }




  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(half op) {
    ap_int_base<_AP_W, _AP_S> t((float)op);
    Base::V = t.V;
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(float op) {
    const int BITS = 23 + 8 + 1;
    ap_int_base<BITS, false> reg;
    reg.V = floatToRawBits(op);
    bool is_neg = ({ typeof(reg.V) __Val2__ = reg.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), BITS - 1); __Result__; });

    ap_int_base<8 + 1, true> exp = 0;
    exp.V = ({ typename _ap_type::remove_const<typeof(reg.V)>::type __Result__ = 0; typeof(reg.V) __Val2__ = reg.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 23, BITS - 2); __Result__; });
    exp = exp - ((1 << (8 - 1)) - 1);

    ap_int_base<23 + 2, true> man;
    man.V = ({ typename _ap_type::remove_const<typeof(reg.V)>::type __Result__ = 0; typeof(reg.V) __Val2__ = reg.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, 23 - 1); __Result__; });

    (static_cast<void>(0));


    man.V = ({ typename _ap_type::remove_const<typeof(man.V)>::type __Result__ = 0; typeof(man.V) __Val2__ = man.V; typeof(1) __Repl2__ = !!1; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), 23, 23); __Result__; });


    if ((reg.V & 0x7ffffffful) == 0) {
      Base::V = 0;
    } else {
      int sh_amt = 23 - exp.V;
      if (sh_amt == 0) {
        Base::V = man.V;
      } else if (sh_amt > 0) {
        if (sh_amt < 23 + 2) {
          ap_int_base<23 + 2, true> man_shift;
          man_shift.V = (man.V >> sh_amt);






          Base::V = man_shift.V;
        } else {



            Base::V = 0;
        }
      } else {
        sh_amt = -sh_amt;
        if (sh_amt < _AP_W) {
          Base::V = man.V;
          Base::V <<= sh_amt;
        } else {



          Base::V = 0;
        }
      }
    }
    if (is_neg) *this = -(*this);
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(double op) {
    const int BITS = 52 + 11 + 1;
    ap_int_base<BITS, false> reg;
    reg.V = doubleToRawBits(op);
    bool is_neg = ({ typeof(reg.V) __Val2__ = reg.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), BITS - 1); __Result__; });

    ap_int_base<11 + 1, true> exp, bias = ((1 << (11 - 1)) - 1);
    exp.V = ({ typename _ap_type::remove_const<typeof(reg.V)>::type __Result__ = 0; typeof(reg.V) __Val2__ = reg.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 52, BITS - 2); __Result__; });
    exp = exp - bias;

    ap_int_base<52 + 2, true> man;
    man.V = ({ typename _ap_type::remove_const<typeof(reg.V)>::type __Result__ = 0; typeof(reg.V) __Val2__ = reg.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, 52 - 1); __Result__; });

    (static_cast<void>(0));


    man.V = ({ typename _ap_type::remove_const<typeof(man.V)>::type __Result__ = 0; typeof(man.V) __Val2__ = man.V; typeof(1) __Repl2__ = !!1; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), 52, 52); __Result__; });


    if ((reg.V & 0x7fffffffffffffffull) == 0) {
      Base::V = 0;
    } else {
      int sh_amt = 52 - exp.V;
      if (sh_amt == 0) {
        Base::V = man.V;
      } else if (sh_amt > 0) {
        if (sh_amt < 52 + 2) {
          ap_int_base<23 + 2, true> man_shift;
          man_shift.V = (man.V >> sh_amt);






          Base::V = man_shift.V;
        } else {



           Base::V = 0;
        }
      } else {
        sh_amt = -sh_amt;
        if (sh_amt < _AP_W) {
          Base::V = man.V;
          Base::V <<= sh_amt;
        } else {



          Base::V = 0;
        }
      }
    }
    if (is_neg) *this = -(*this);
  }


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op) {
    op.checkOverflowCsimFix(_AP_W, _AP_S);
    Base::V = op.to_ap_int_base().V;
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const ap_range_ref<_AP_W2, _AP_S2>& ref) {
    Base::V = (ref.get()).V;
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const ap_bit_ref<_AP_W2, _AP_S2>& ref) {
    Base::V = ref.operator bool();
  }

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref) {
    const ap_int_base<ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>::_AP_WR,
                      false>
        tmp = ref.get();
    Base::V = tmp.V;
  }
# 399 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const char* s) {
    typeof(Base::V) t;
    _ssdm_string2bits((void*)(&t), (const char*)(s), 10, _AP_W, _AP_S,
                      AP_TRN, AP_WRAP, 0, true);
    Base::V = t;
  }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(const char* s, signed char rd) {
    typeof(Base::V) t;
    _ssdm_string2bits((void*)(&t), (const char*)(s), rd, _AP_W, _AP_S,
                      AP_TRN, AP_WRAP, 0, true);
    Base::V = t;
  }


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& val) {
    Base::V = (val.get()).V;
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& val) {
    Base::V = val.operator bool();
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base read() volatile {

    ap_int_base ret;
    ret.V = Base::V;
    return ret;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) void write(const ap_int_base<_AP_W, _AP_S>& op2) volatile {

    *((volatile typename Base::DataType *)(&(Base::V))) = op2.V;
  }


  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) void operator=(
      const volatile ap_int_base<_AP_W2, _AP_S2>& op2) volatile {
    *((volatile typename Base::DataType *)(&(Base::V))) = op2.V;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) void operator=(
      const volatile ap_int_base<_AP_W, _AP_S>& op2) volatile {
    *((volatile typename Base::DataType *)(&(Base::V))) = op2.V;
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) void operator=(const ap_int_base<_AP_W2, _AP_S2>& op2) volatile {
    *((volatile typename Base::DataType *)(&(Base::V))) = op2.V;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) void operator=(const ap_int_base<_AP_W, _AP_S>& op2) volatile {
    *((volatile typename Base::DataType *)(&(Base::V))) = op2.V;
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(
      const volatile ap_int_base<_AP_W2, _AP_S2>& op2) {
    Base::V = op2.V;
    return *this;
  }

  template <int _AP_W2, bool _AP_S2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(const ap_int_base<_AP_W2, _AP_S2>& op2) {
    Base::V = op2.V;
    return *this;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(const volatile ap_int_base<_AP_W, _AP_S>& op2) {
    Base::V = op2.V;
    return *this;
  }


  ap_int_base& operator=(const ap_int_base<_AP_W, _AP_S>& op2) = default;
# 493 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(bool op) { Base::V = op; return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(char op) { Base::V = op; return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(signed char op) { Base::V = op; return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(unsigned char op) { Base::V = op; return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(short op) { Base::V = op; return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(unsigned short op) { Base::V = op; return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(int op) { Base::V = op; return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(unsigned int op) { Base::V = op; return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(long op) { Base::V = op; return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(unsigned long op) { Base::V = op; return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(ap_slong op) { Base::V = op; return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(ap_ulong op) { Base::V = op; return *this; }



  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(const ap_bit_ref<_AP_W2, _AP_S2>& op2) {
    Base::V = (bool)op2;
    return *this;
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    Base::V = (ap_int_base<_AP_W2, false>(op2)).V;
    return *this;
  }

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(
      const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& op2) {
    Base::V = op2.get().V;
    return *this;
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op) {
    Base::V = op.to_ap_int_base().V;
    return *this;
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op) {
    Base::V = (bool)op;
    return *this;
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator=(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op) {
    Base::V = ((const ap_int_base<_AP_W2, false>)(op)).V;
    return *this;
  }





                inline __attribute__((always_inline)) __attribute__((nodebug)) operator RetType() const { return (RetType)(Base::V); }




                inline __attribute__((always_inline)) __attribute__((nodebug)) bool to_bool() const { return (bool)(Base::V); }
                inline __attribute__((always_inline)) __attribute__((nodebug)) char to_char() const { return (char)(Base::V); }
                inline __attribute__((always_inline)) __attribute__((nodebug)) signed char to_schar() const { return (signed char)(Base::V); }
                inline __attribute__((always_inline)) __attribute__((nodebug)) unsigned char to_uchar() const { return (unsigned char)(Base::V); }
                inline __attribute__((always_inline)) __attribute__((nodebug)) short to_short() const { return (short)(Base::V); }
                inline __attribute__((always_inline)) __attribute__((nodebug)) unsigned short to_ushort() const { return (unsigned short)(Base::V); }
                inline __attribute__((always_inline)) __attribute__((nodebug)) int to_int() const { return (int)(Base::V); }
                inline __attribute__((always_inline)) __attribute__((nodebug)) unsigned to_uint() const { return (unsigned)(Base::V); }
                inline __attribute__((always_inline)) __attribute__((nodebug)) long to_long() const { return (long)(Base::V); }
                inline __attribute__((always_inline)) __attribute__((nodebug)) unsigned long to_ulong() const { return (unsigned long)(Base::V); }
                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_slong to_int64() const { return (ap_slong)(Base::V); }
                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ulong to_uint64() const { return (ap_ulong)(Base::V); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) half to_half() const { return (float)(Base::V); }
                inline __attribute__((always_inline)) __attribute__((nodebug)) float to_float() const { return (float)(Base::V); }
                inline __attribute__((always_inline)) __attribute__((nodebug)) double to_double() const { return (double)(Base::V); }
# 598 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) int length() const volatile { return _AP_W; }
                inline __attribute__((always_inline)) __attribute__((nodebug)) int length() const { return _AP_W; }


                inline __attribute__((always_inline)) __attribute__((nodebug)) bool iszero() const { return Base::V == 0; }


                inline __attribute__((always_inline)) __attribute__((nodebug)) bool is_zero() const { return Base::V == 0; }


                      inline __attribute__((always_inline)) __attribute__((nodebug)) bool sign() const {
    if (_AP_S &&
        ({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W - 1); __Result__; }))
      return true;
    else
      return false;
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) void clear(int i) {
                                                           ;
    Base::V = ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; typeof(0) __Repl2__ = !!0; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), i, i); __Result__; });
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) void invert(int i) {
                                                           ;
    bool val = ({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), i); __Result__; });
    if (val)
      Base::V = ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; typeof(0) __Repl2__ = !!0; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), i, i); __Result__; });
    else
      Base::V = ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; typeof(1) __Repl2__ = !!1; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), i, i); __Result__; });
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) bool test(int i) const {
                                                           ;
    return ({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), i); __Result__; });
  }


                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& get() { return *this; }


  inline __attribute__((always_inline)) __attribute__((nodebug)) void set(int i) {
                                                           ;
    Base::V = ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; typeof(1) __Repl2__ = !!1; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), i, i); __Result__; });
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) void set(int i, bool v) {
                                                           ;
    Base::V = ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; typeof(v) __Repl2__ = !!v; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), i, i); __Result__; });
  }



  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& lrotate(int n) {
                                                              ;


    typeof(Base::V) l_p = Base::V << n;
    typeof(Base::V) r_p = Base::V >> (_AP_W - n);
    Base::V = l_p | r_p;



    return *this;
  }



  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& rrotate(int n) {
                                                              ;


    typeof(Base::V) l_p = Base::V << (_AP_W - n);
    typeof(Base::V) r_p = Base::V >> n;
    Base::V = l_p | r_p;



    return *this;
  }



  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& reverse() {
    Base::V = ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), _AP_W - 1, 0); __Result__; });
    return *this;
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) void set_bit(int i, bool v) {
    Base::V = ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; typeof(v) __Repl2__ = !!v; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), i, i); __Result__; });
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) bool get_bit(int i) const {
    return (bool)({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), i); __Result__; });
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) void b_not() { Base::V = ~Base::V; }

  template<typename T>
                inline __attribute__((always_inline)) __attribute__((nodebug)) void checkOverflowBaseC(T val) {
# 769 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
    (void)val;

    return;
  }

                inline __attribute__((always_inline)) __attribute__((nodebug)) bool checkOverflowCsim(int _ap_w2, bool _ap_s2,
          bool print = true) const {
# 819 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
      (void)_ap_w2;
      (void)_ap_s2;
      (void)print;

      return 0;
  }
# 853 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
  template <int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator *=(const ap_int_base<_AP_W2, _AP_S2>& op2) { Base::V *= op2.V; return *this; }
  template <int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator +=(const ap_int_base<_AP_W2, _AP_S2>& op2) { Base::V += op2.V; return *this; }
  template <int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator -=(const ap_int_base<_AP_W2, _AP_S2>& op2) { Base::V -= op2.V; return *this; }
  template <int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator /=(const ap_int_base<_AP_W2, _AP_S2>& op2) { Base::V /= op2.V; return *this; }
  template <int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator %=(const ap_int_base<_AP_W2, _AP_S2>& op2) { Base::V %= op2.V; return *this; }
# 871 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
  template <int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator &=(const ap_int_base<_AP_W2, _AP_S2>& op2) { (static_cast<void>(0)); Base::V &= op2.V; return *this; }
  template <int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator |=(const ap_int_base<_AP_W2, _AP_S2>& op2) { (static_cast<void>(0)); Base::V |= op2.V; return *this; }
  template <int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator ^=(const ap_int_base<_AP_W2, _AP_S2>& op2) { (static_cast<void>(0)); Base::V ^= op2.V; return *this; }





  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator++() {
    operator+=((ap_int_base<1, false>)1);
    return *this;
  }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator--() {
    operator-=((ap_int_base<1, false>)1);
    return *this;
  }




  inline __attribute__((always_inline)) __attribute__((nodebug)) const typename RType<_AP_W,_AP_S>::arg1 operator++(int) {
    ap_int_base t = *this;
    operator+=((ap_int_base<1, false>)1);
    return t;
  }
  inline __attribute__((always_inline)) __attribute__((nodebug)) const typename RType<_AP_W,_AP_S>::arg1 operator--(int) {
    ap_int_base t = *this;
    operator-=((ap_int_base<1, false>)1);
    return t;
  }




                inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<_AP_W,_AP_S>::arg1 operator+() const { return *this; }


                inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<1, false>::minus operator-() const {
    return ap_int_base<1, false>(0) - *this;
  }




                inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator!() const { return Base::V == 0; }





                inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<_AP_W,_AP_S>::arg1 operator~() const {
    ap_int_base<_AP_W, _AP_S> r(0);
    r.V = ~Base::V;
    return r;
  }




  template <int _AP_W2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<_AP_W,_AP_S>::arg1 operator<<(const ap_int_base<_AP_W2, true>& op2) const {
    bool isNeg = ({ typeof(op2.V) __Val2__ = op2.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W2 - 1); __Result__; });
    ap_int_base<_AP_W2, false> sh = op2;
    if (isNeg) {
      sh = -op2;
      return operator>>(sh);
    } else
      return operator<<(sh);
  }

  template <int _AP_W2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<_AP_W,_AP_S>::arg1 operator<<(const ap_int_base<_AP_W2, false>& op2) const {
    ap_int_base r(0);
    r.V = Base::V << op2.to_uint();
    return r;
  }

  template <int _AP_W2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<_AP_W,_AP_S>::arg1 operator>>(const ap_int_base<_AP_W2, true>& op2) const {
    bool isNeg = ({ typeof(op2.V) __Val2__ = op2.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W2 - 1); __Result__; });
    ap_int_base<_AP_W2, false> sh = op2;
    if (isNeg) {
      sh = -op2;
      return operator<<(sh);
    }
    return operator>>(sh);
  }

  template <int _AP_W2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<_AP_W,_AP_S>::arg1 operator>>(const ap_int_base<_AP_W2, false>& op2) const {
    ap_int_base r(0);
    r.V = Base::V >> op2.to_uint();
    return r;
  }
# 982 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
  template <int _AP_W2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator<<=(const ap_int_base<_AP_W2, true>& op2) {
    bool isNeg = ({ typeof(op2.V) __Val2__ = op2.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W2 - 1); __Result__; });
    ap_int_base<_AP_W2, false> sh = op2;
    if (isNeg) {
      sh = -op2;
      return operator>>=(sh);
    } else
      return operator<<=(sh);
  }

  template <int _AP_W2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator<<=(const ap_int_base<_AP_W2, false>& op2) {
    Base::V <<= op2.to_uint();
    return *this;
  }

  template <int _AP_W2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator>>=(const ap_int_base<_AP_W2, true>& op2) {
    bool isNeg = ({ typeof(op2.V) __Val2__ = op2.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W2 - 1); __Result__; });
    ap_int_base<_AP_W2, false> sh = op2;
    if (isNeg) {
      sh = -op2;
      return operator<<=(sh);
    }
    return operator>>=(sh);
  }

  template <int _AP_W2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base& operator>>=(const ap_int_base<_AP_W2, false>& op2) {
    Base::V >>= op2.to_uint();
    return *this;
  }
# 1031 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
  template <int _AP_W2, bool _AP_S2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator==(const ap_int_base<_AP_W2, _AP_S2>& op2) const {
    return Base::V == op2.V;
  }
  template <int _AP_W2, bool _AP_S2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator!=(const ap_int_base<_AP_W2, _AP_S2>& op2) const {
    return !(Base::V == op2.V);
  }
  template <int _AP_W2, bool _AP_S2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator<(const ap_int_base<_AP_W2, _AP_S2>& op2) const {
    return Base::V < op2.V;
  }
  template <int _AP_W2, bool _AP_S2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator>=(const ap_int_base<_AP_W2, _AP_S2>& op2) const {
    return Base::V >= op2.V;
  }
  template <int _AP_W2, bool _AP_S2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator>(const ap_int_base<_AP_W2, _AP_S2>& op2) const {
    return Base::V > op2.V;
  }
  template <int _AP_W2, bool _AP_S2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator<=(const ap_int_base<_AP_W2, _AP_S2>& op2) const {
    return Base::V <= op2.V;
  }




  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S> range(int Hi, int Lo) {
    (static_cast<void>(0));
    (static_cast<void>(0));
    return ap_range_ref<_AP_W, _AP_S>(this, Hi, Lo);
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S> range(int Hi, int Lo) const {
    (static_cast<void>(0));
    (static_cast<void>(0));
    return ap_range_ref<_AP_W, _AP_S>(const_cast<ap_int_base*>(this), Hi, Lo);
  }

  template <int _AP_W2, bool _AP_S2, int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S> range(
      const ap_int_base<_AP_W2, _AP_S2>& HiIdx,
      const ap_int_base<_AP_W3, _AP_S3>& LoIdx) {
    int Hi = HiIdx.to_int();
    int Lo = LoIdx.to_int();
    return this->range(Hi, Lo);
  }

  template <int _AP_W2, bool _AP_S2, int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S> range(
      const ap_int_base<_AP_W2, _AP_S2>& HiIdx,
      const ap_int_base<_AP_W3, _AP_S3>& LoIdx) const {
    int Hi = HiIdx.to_int();
    int Lo = LoIdx.to_int();
    return this->range(Hi, Lo);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S> range() {
    return this->range(_AP_W - 1, 0);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S> range() const {
    return this->range(_AP_W - 1, 0);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S> operator()(int Hi, int Lo) {
    return this->range(Hi, Lo);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S> operator()(int Hi, int Lo) const {
    return this->range(Hi, Lo);
  }

  template <int _AP_W2, bool _AP_S2, int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S> operator()(
      const ap_int_base<_AP_W2, _AP_S2>& HiIdx,
      const ap_int_base<_AP_W3, _AP_S3>& LoIdx) {
    int Hi = HiIdx.to_int();
    int Lo = LoIdx.to_int();
    return this->range(Hi, Lo);
  }

  template <int _AP_W2, bool _AP_S2, int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S> operator()(
      const ap_int_base<_AP_W2, _AP_S2>& HiIdx,
      const ap_int_base<_AP_W3, _AP_S3>& LoIdx) const {
    int Hi = HiIdx.to_int();
    int Lo = LoIdx.to_int();
    return this->range(Hi, Lo);
  }
# 1140 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W, _AP_S> operator[](int index) {
                                                                       ;
                                                                 ;
    ap_bit_ref<_AP_W, _AP_S> bvh(this, index);
    return bvh;
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W, _AP_S> operator[](
      const ap_int_base<_AP_W2, _AP_S2>& index) {
                                                                       ;
                                                                 ;
    ap_bit_ref<_AP_W, _AP_S> bvh(this, index.to_int());
    return bvh;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator[](int index) const {
                                                                       ;
                                                                 ;
    ap_bit_ref<_AP_W, _AP_S> br(this, index);
    return br.to_bool();
  }
  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator[](const ap_int_base<_AP_W2, _AP_S2>& index) const {
                                                                 ;
    ap_bit_ref<_AP_W, _AP_S> br(this, index.to_int());
    return br.to_bool();
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W, _AP_S> bit(int index) {
                                                                       ;
                                                                 ;
    ap_bit_ref<_AP_W, _AP_S> bvh(this, index);
    return bvh;
  }
  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W, _AP_S> bit(
      const ap_int_base<_AP_W2, _AP_S2>& index) {
                                                                       ;
                                                                 ;
    ap_bit_ref<_AP_W, _AP_S> bvh(this, index.to_int());
    return bvh;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) bool bit(int index) const {
                                                                       ;
                                                                 ;
    ap_bit_ref<_AP_W, _AP_S> br(this, index);
    return br.to_bool();
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool bit(const ap_int_base<_AP_W2, _AP_S2>& index) const {
    return bit(index.to_int());
  }
# 1207 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
                inline __attribute__((always_inline)) __attribute__((nodebug)) int countLeadingZeros() const {

    return __fpga_ctlz(this->V);



  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
  concat(const ap_int_base<_AP_W2, _AP_S2>& a2) const {
    return ap_concat_ref<_AP_W, ap_int_base, _AP_W2,
                         ap_int_base<_AP_W2, _AP_S2> >(
        const_cast<ap_int_base<_AP_W, _AP_S>&>(*this),
        const_cast<ap_int_base<_AP_W2, _AP_S2>&>(a2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
  concat(ap_int_base<_AP_W2, _AP_S2>& a2) {
    return ap_concat_ref<_AP_W, ap_int_base, _AP_W2,
                         ap_int_base<_AP_W2, _AP_S2> >(*this, a2);
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline))
      __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, _AP_W2, ap_range_ref<_AP_W2, _AP_S2> >
      operator,(const ap_range_ref<_AP_W2, _AP_S2> &a2) const {
    return ap_concat_ref<_AP_W, ap_int_base, _AP_W2,
                         ap_range_ref<_AP_W2, _AP_S2> >(
        const_cast<ap_int_base<_AP_W, _AP_S>&>(*this),
        const_cast<ap_range_ref<_AP_W2, _AP_S2>&>(a2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline))
      __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, _AP_W2, ap_range_ref<_AP_W2, _AP_S2> >
      operator,(ap_range_ref<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<_AP_W, ap_int_base, _AP_W2,
                         ap_range_ref<_AP_W2, _AP_S2> >(*this, a2);
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
  operator,(const ap_int_base<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<_AP_W, ap_int_base, _AP_W2,
                         ap_int_base<_AP_W2, _AP_S2> >(
        *this, const_cast<ap_int_base<_AP_W2, _AP_S2>&>(a2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
  operator,(ap_int_base<_AP_W2, _AP_S2> &a2) const {
    return ap_concat_ref<_AP_W, ap_int_base, _AP_W2,
                         ap_int_base<_AP_W2, _AP_S2> >(
        const_cast<ap_int_base<_AP_W, _AP_S>&>(*this), a2);
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
  operator,(const ap_int_base<_AP_W2, _AP_S2> &a2) const {
    return ap_concat_ref<_AP_W, ap_int_base, _AP_W2,
                         ap_int_base<_AP_W2, _AP_S2> >(
        const_cast<ap_int_base<_AP_W, _AP_S>&>(*this),
        const_cast<ap_int_base<_AP_W2, _AP_S2>&>(a2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
  operator,(ap_int_base<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<_AP_W, ap_int_base, _AP_W2,
                         ap_int_base<_AP_W2, _AP_S2> >(*this, a2);
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, 1, ap_bit_ref<_AP_W2, _AP_S2> >
  operator,(const ap_bit_ref<_AP_W2, _AP_S2> &a2) const {
    return ap_concat_ref<_AP_W, ap_int_base, 1, ap_bit_ref<_AP_W2, _AP_S2> >(
        const_cast<ap_int_base<_AP_W, _AP_S>&>(*this),
        const_cast<ap_bit_ref<_AP_W2, _AP_S2>&>(a2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, 1, ap_bit_ref<_AP_W2, _AP_S2> >
  operator,(ap_bit_ref<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<_AP_W, ap_int_base, 1, ap_bit_ref<_AP_W2, _AP_S2> >(
        *this, a2);
  }

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, _AP_W2 + _AP_W3,
                       ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> >
  operator,(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> &a2) {
    return ap_concat_ref<_AP_W, ap_int_base, _AP_W2 + _AP_W3,
                         ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> >(
        const_cast<ap_int_base<_AP_W, _AP_S>&>(*this),
        const_cast<ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>&>(a2));
  }

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, _AP_W2 + _AP_W3,
                       ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> >
  operator,(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> &a2) {
    return ap_concat_ref<_AP_W, ap_int_base, _AP_W2 + _AP_W3,
                         ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> >(*this,
                                                                         a2);
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<
      _AP_W, ap_int_base, _AP_W2,
      af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >
  operator,(const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>
                &a2) const {
    return ap_concat_ref<
        _AP_W, ap_int_base, _AP_W2,
        af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >(
        const_cast<ap_int_base<_AP_W, _AP_S>&>(*this),
        const_cast<
            af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&>(a2));
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<
      _AP_W, ap_int_base, _AP_W2,
      af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >
  operator,(af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> &a2) {
    return ap_concat_ref<
        _AP_W, ap_int_base, _AP_W2,
        af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >(*this,
                                                                       a2);
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline))
      __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, 1,
                    af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >
      operator,(const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>
                    &a2) const {
    return ap_concat_ref<
        _AP_W, ap_int_base, 1,
        af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >(
        const_cast<ap_int_base<_AP_W, _AP_S>&>(*this),
        const_cast<af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&>(
            a2));
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline))
      __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_int_base, 1,
                    af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >
      operator,(
          af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> &a2) {
    return ap_concat_ref<
        _AP_W, ap_int_base, 1,
        af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >(*this, a2);
  }

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<((_AP_W2 + _AP_W3) > (_AP_W) ? (_AP_W2 + _AP_W3) : (_AP_W)), _AP_S> operator&(
      const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& a2) {
    return *this & a2.get();
  }

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<((_AP_W2 + _AP_W3) > (_AP_W) ? (_AP_W2 + _AP_W3) : (_AP_W)), _AP_S> operator|(
      const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& a2) {
    return *this | a2.get();
  }

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<((_AP_W2 + _AP_W3) > (_AP_W) ? (_AP_W2 + _AP_W3) : (_AP_W)), _AP_S> operator^(
      const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& a2) {
    return *this ^ a2.get();
  }

  template <int _AP_W3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) void set(const ap_int_base<_AP_W3, false>& val) {
    Base::V = val.V;
  }





  inline __attribute__((always_inline)) __attribute__((nodebug)) bool and_reduce() const { return ({ typeof(Base::V) __what2__ = Base::V; __builtin_bit_and_reduce((void*)(&__what2__)); }); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool nand_reduce() const { return ({ typeof(Base::V) __what2__ = Base::V; __builtin_bit_nand_reduce((void*)(&__what2__)); }); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool or_reduce() const { return ({ typeof(Base::V) __what2__ = Base::V; __builtin_bit_or_reduce((void*)(&__what2__)); }); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool nor_reduce() const { return !(({ typeof(Base::V) __what2__ = Base::V; __builtin_bit_or_reduce((void*)(&__what2__)); })); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool xor_reduce() const { return ({ typeof(Base::V) __what2__ = Base::V; __builtin_bit_xor_reduce((void*)(&__what2__)); }); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool xnor_reduce() const {
    return !(({ typeof(Base::V) __what2__ = Base::V; __builtin_bit_xor_reduce((void*)(&__what2__)); }));
  }
# 1416 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) char* to_string(signed char rd = 2, bool sign = _AP_S) const {
    (void)(rd);
    (void)(sign);
    return 0;
  }

};
# 1477 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W2, _AP_S2>::mult operator *(const ap_int_base<_AP_W, _AP_S>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::mult_base lhs(op); typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::mult_base rhs(op2); typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::mult_base ret(0); ret.V = lhs.V * rhs.V; return ret; }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W2, _AP_S2>::plus operator +(const ap_int_base<_AP_W, _AP_S>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::plus_base lhs(op); typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::plus_base rhs(op2); typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::plus_base ret(0); ret.V = lhs.V + rhs.V; return ret; }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W2, _AP_S2>::minus operator -(const ap_int_base<_AP_W, _AP_S>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::minus_base lhs(op); typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::minus_base rhs(op2); typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::minus_base ret(0); ret.V = lhs.V - rhs.V; return ret; }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W2, _AP_S2>::logic operator &(const ap_int_base<_AP_W, _AP_S>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::logic_base lhs(op); typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::logic_base rhs(op2); typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::logic_base ret(0); ret.V = lhs.V & rhs.V; return ret; }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W2, _AP_S2>::logic operator |(const ap_int_base<_AP_W, _AP_S>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::logic_base lhs(op); typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::logic_base rhs(op2); typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::logic_base ret(0); ret.V = lhs.V | rhs.V; return ret; }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W2, _AP_S2>::logic operator ^(const ap_int_base<_AP_W, _AP_S>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::logic_base lhs(op); typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::logic_base rhs(op2); typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::logic_base ret(0); ret.V = lhs.V ^ rhs.V; return ret; }
# 1496 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W2, _AP_S2>::div operator /(const ap_int_base<_AP_W, _AP_S>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::div_base ret(0); ret.V = op.V / op2.V; return ret; }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W2, _AP_S2>::mod operator %(const ap_int_base<_AP_W, _AP_S>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { typename ap_int_base<_AP_W, _AP_S>::template RType< _AP_W2, _AP_S2>::mod_base ret(0); ret.V = op.V % op2.V; return ret; }
# 1524 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <typename PTR_TYPE, int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) PTR_TYPE* operator +(PTR_TYPE* i_op, const ap_int_base<_AP_W, _AP_S>& op) { ap_slong op2 = op.to_int64(); return i_op + op2; } template <typename PTR_TYPE, int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) PTR_TYPE* operator +(const ap_int_base<_AP_W, _AP_S>& op, PTR_TYPE* i_op) { ap_slong op2 = op.to_int64(); return op2 + i_op; }
template <typename PTR_TYPE, int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) PTR_TYPE* operator -(PTR_TYPE* i_op, const ap_int_base<_AP_W, _AP_S>& op) { ap_slong op2 = op.to_int64(); return i_op - op2; } template <typename PTR_TYPE, int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) PTR_TYPE* operator -(const ap_int_base<_AP_W, _AP_S>& op, PTR_TYPE* i_op) { ap_slong op2 = op.to_int64(); return op2 - i_op; }
# 1553 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) float operator *(float i_op, const ap_int_base<_AP_W, _AP_S>& op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return i_op * op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) float operator *(const ap_int_base<_AP_W, _AP_S>& op, float i_op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return op2 * i_op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) float operator /(float i_op, const ap_int_base<_AP_W, _AP_S>& op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return i_op / op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) float operator /(const ap_int_base<_AP_W, _AP_S>& op, float i_op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return op2 / i_op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) float operator +(float i_op, const ap_int_base<_AP_W, _AP_S>& op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return i_op + op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) float operator +(const ap_int_base<_AP_W, _AP_S>& op, float i_op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return op2 + i_op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) float operator -(float i_op, const ap_int_base<_AP_W, _AP_S>& op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return i_op - op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) float operator -(const ap_int_base<_AP_W, _AP_S>& op, float i_op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return op2 - i_op; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) double operator *(double i_op, const ap_int_base<_AP_W, _AP_S>& op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return i_op * op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) double operator *(const ap_int_base<_AP_W, _AP_S>& op, double i_op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return op2 * i_op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) double operator /(double i_op, const ap_int_base<_AP_W, _AP_S>& op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return i_op / op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) double operator /(const ap_int_base<_AP_W, _AP_S>& op, double i_op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return op2 / i_op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) double operator +(double i_op, const ap_int_base<_AP_W, _AP_S>& op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return i_op + op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) double operator +(const ap_int_base<_AP_W, _AP_S>& op, double i_op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return op2 + i_op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) double operator -(double i_op, const ap_int_base<_AP_W, _AP_S>& op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return i_op - op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) double operator -(const ap_int_base<_AP_W, _AP_S>& op, double i_op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return op2 - i_op; }
# 1578 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) half operator *(half i_op, const ap_int_base<_AP_W, _AP_S>& op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return i_op * op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) half operator *(const ap_int_base<_AP_W, _AP_S>& op, half i_op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return op2 * i_op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) half operator /(half i_op, const ap_int_base<_AP_W, _AP_S>& op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return i_op / op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) half operator /(const ap_int_base<_AP_W, _AP_S>& op, half i_op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return op2 / i_op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) half operator +(half i_op, const ap_int_base<_AP_W, _AP_S>& op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return i_op + op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) half operator +(const ap_int_base<_AP_W, _AP_S>& op, half i_op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return op2 + i_op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) half operator -(half i_op, const ap_int_base<_AP_W, _AP_S>& op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return i_op - op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) half operator -(const ap_int_base<_AP_W, _AP_S>& op, half i_op) { typename ap_int_base<_AP_W, _AP_S>::RetType op2 = op; return op2 - i_op; }
# 1610 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::mult operator *(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) *(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::mult operator *(const ap_int_base<_AP_W, _AP_S>& op, bool i_op) { return op * ap_int_base<1, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::plus operator +(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) +(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::plus operator +(const ap_int_base<_AP_W, _AP_S>& op, bool i_op) { return op + ap_int_base<1, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::minus operator -(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) -(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::minus operator -(const ap_int_base<_AP_W, _AP_S>& op, bool i_op) { return op - ap_int_base<1, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::div operator /(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) /(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::div operator /(const ap_int_base<_AP_W, _AP_S>& op, bool i_op) { return op / ap_int_base<1, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::mod operator %(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) %(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::mod operator %(const ap_int_base<_AP_W, _AP_S>& op, bool i_op) { return op % ap_int_base<1, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::logic operator &(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) &(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::logic operator &(const ap_int_base<_AP_W, _AP_S>& op, bool i_op) { return op & ap_int_base<1, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::logic operator |(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) |(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::logic operator |(const ap_int_base<_AP_W, _AP_S>& op, bool i_op) { return op | ap_int_base<1, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::logic operator ^(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) ^(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<1, false>::logic operator ^(const ap_int_base<_AP_W, _AP_S>& op, bool i_op) { return op ^ ap_int_base<1, false>(i_op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::mult operator *(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) *(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::mult operator *(const ap_int_base<_AP_W, _AP_S>& op, char i_op) { return op * ap_int_base<8, CHAR_IS_SIGNED>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::plus operator +(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) +(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::plus operator +(const ap_int_base<_AP_W, _AP_S>& op, char i_op) { return op + ap_int_base<8, CHAR_IS_SIGNED>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::minus operator -(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) -(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::minus operator -(const ap_int_base<_AP_W, _AP_S>& op, char i_op) { return op - ap_int_base<8, CHAR_IS_SIGNED>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::div operator /(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) /(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::div operator /(const ap_int_base<_AP_W, _AP_S>& op, char i_op) { return op / ap_int_base<8, CHAR_IS_SIGNED>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::mod operator %(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) %(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::mod operator %(const ap_int_base<_AP_W, _AP_S>& op, char i_op) { return op % ap_int_base<8, CHAR_IS_SIGNED>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::logic operator &(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) &(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::logic operator &(const ap_int_base<_AP_W, _AP_S>& op, char i_op) { return op & ap_int_base<8, CHAR_IS_SIGNED>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::logic operator |(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) |(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::logic operator |(const ap_int_base<_AP_W, _AP_S>& op, char i_op) { return op | ap_int_base<8, CHAR_IS_SIGNED>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::logic operator ^(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) ^(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, CHAR_IS_SIGNED>::logic operator ^(const ap_int_base<_AP_W, _AP_S>& op, char i_op) { return op ^ ap_int_base<8, CHAR_IS_SIGNED>(i_op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::mult operator *(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) *(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::mult operator *(const ap_int_base<_AP_W, _AP_S>& op, signed char i_op) { return op * ap_int_base<8, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::plus operator +(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) +(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::plus operator +(const ap_int_base<_AP_W, _AP_S>& op, signed char i_op) { return op + ap_int_base<8, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::minus operator -(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) -(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::minus operator -(const ap_int_base<_AP_W, _AP_S>& op, signed char i_op) { return op - ap_int_base<8, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::div operator /(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) /(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::div operator /(const ap_int_base<_AP_W, _AP_S>& op, signed char i_op) { return op / ap_int_base<8, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::mod operator %(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) %(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::mod operator %(const ap_int_base<_AP_W, _AP_S>& op, signed char i_op) { return op % ap_int_base<8, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::logic operator &(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) &(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::logic operator &(const ap_int_base<_AP_W, _AP_S>& op, signed char i_op) { return op & ap_int_base<8, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::logic operator |(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) |(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::logic operator |(const ap_int_base<_AP_W, _AP_S>& op, signed char i_op) { return op | ap_int_base<8, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::logic operator ^(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) ^(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, true>::logic operator ^(const ap_int_base<_AP_W, _AP_S>& op, signed char i_op) { return op ^ ap_int_base<8, true>(i_op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::mult operator *(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) *(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::mult operator *(const ap_int_base<_AP_W, _AP_S>& op, unsigned char i_op) { return op * ap_int_base<8, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::plus operator +(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) +(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::plus operator +(const ap_int_base<_AP_W, _AP_S>& op, unsigned char i_op) { return op + ap_int_base<8, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::minus operator -(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) -(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::minus operator -(const ap_int_base<_AP_W, _AP_S>& op, unsigned char i_op) { return op - ap_int_base<8, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::div operator /(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) /(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::div operator /(const ap_int_base<_AP_W, _AP_S>& op, unsigned char i_op) { return op / ap_int_base<8, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::mod operator %(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) %(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::mod operator %(const ap_int_base<_AP_W, _AP_S>& op, unsigned char i_op) { return op % ap_int_base<8, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::logic operator &(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) &(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::logic operator &(const ap_int_base<_AP_W, _AP_S>& op, unsigned char i_op) { return op & ap_int_base<8, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::logic operator |(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) |(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::logic operator |(const ap_int_base<_AP_W, _AP_S>& op, unsigned char i_op) { return op | ap_int_base<8, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::logic operator ^(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) ^(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<8, false>::logic operator ^(const ap_int_base<_AP_W, _AP_S>& op, unsigned char i_op) { return op ^ ap_int_base<8, false>(i_op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::mult operator *(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) *(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::mult operator *(const ap_int_base<_AP_W, _AP_S>& op, short i_op) { return op * ap_int_base<_AP_SIZE_short, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::plus operator +(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) +(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::plus operator +(const ap_int_base<_AP_W, _AP_S>& op, short i_op) { return op + ap_int_base<_AP_SIZE_short, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::minus operator -(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) -(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::minus operator -(const ap_int_base<_AP_W, _AP_S>& op, short i_op) { return op - ap_int_base<_AP_SIZE_short, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::div operator /(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) /(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::div operator /(const ap_int_base<_AP_W, _AP_S>& op, short i_op) { return op / ap_int_base<_AP_SIZE_short, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::mod operator %(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) %(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::mod operator %(const ap_int_base<_AP_W, _AP_S>& op, short i_op) { return op % ap_int_base<_AP_SIZE_short, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::logic operator &(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) &(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::logic operator &(const ap_int_base<_AP_W, _AP_S>& op, short i_op) { return op & ap_int_base<_AP_SIZE_short, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::logic operator |(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) |(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::logic operator |(const ap_int_base<_AP_W, _AP_S>& op, short i_op) { return op | ap_int_base<_AP_SIZE_short, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::logic operator ^(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) ^(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, true>::logic operator ^(const ap_int_base<_AP_W, _AP_S>& op, short i_op) { return op ^ ap_int_base<_AP_SIZE_short, true>(i_op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::mult operator *(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) *(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::mult operator *(const ap_int_base<_AP_W, _AP_S>& op, unsigned short i_op) { return op * ap_int_base<_AP_SIZE_short, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::plus operator +(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) +(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::plus operator +(const ap_int_base<_AP_W, _AP_S>& op, unsigned short i_op) { return op + ap_int_base<_AP_SIZE_short, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::minus operator -(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) -(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::minus operator -(const ap_int_base<_AP_W, _AP_S>& op, unsigned short i_op) { return op - ap_int_base<_AP_SIZE_short, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::div operator /(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) /(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::div operator /(const ap_int_base<_AP_W, _AP_S>& op, unsigned short i_op) { return op / ap_int_base<_AP_SIZE_short, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::mod operator %(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) %(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::mod operator %(const ap_int_base<_AP_W, _AP_S>& op, unsigned short i_op) { return op % ap_int_base<_AP_SIZE_short, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::logic operator &(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) &(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::logic operator &(const ap_int_base<_AP_W, _AP_S>& op, unsigned short i_op) { return op & ap_int_base<_AP_SIZE_short, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::logic operator |(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) |(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::logic operator |(const ap_int_base<_AP_W, _AP_S>& op, unsigned short i_op) { return op | ap_int_base<_AP_SIZE_short, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::logic operator ^(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) ^(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_short, false>::logic operator ^(const ap_int_base<_AP_W, _AP_S>& op, unsigned short i_op) { return op ^ ap_int_base<_AP_SIZE_short, false>(i_op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::mult operator *(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) *(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::mult operator *(const ap_int_base<_AP_W, _AP_S>& op, int i_op) { return op * ap_int_base<_AP_SIZE_int, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::plus operator +(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) +(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::plus operator +(const ap_int_base<_AP_W, _AP_S>& op, int i_op) { return op + ap_int_base<_AP_SIZE_int, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::minus operator -(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) -(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::minus operator -(const ap_int_base<_AP_W, _AP_S>& op, int i_op) { return op - ap_int_base<_AP_SIZE_int, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::div operator /(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) /(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::div operator /(const ap_int_base<_AP_W, _AP_S>& op, int i_op) { return op / ap_int_base<_AP_SIZE_int, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::mod operator %(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) %(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::mod operator %(const ap_int_base<_AP_W, _AP_S>& op, int i_op) { return op % ap_int_base<_AP_SIZE_int, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::logic operator &(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) &(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::logic operator &(const ap_int_base<_AP_W, _AP_S>& op, int i_op) { return op & ap_int_base<_AP_SIZE_int, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::logic operator |(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) |(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::logic operator |(const ap_int_base<_AP_W, _AP_S>& op, int i_op) { return op | ap_int_base<_AP_SIZE_int, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::logic operator ^(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) ^(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, true>::logic operator ^(const ap_int_base<_AP_W, _AP_S>& op, int i_op) { return op ^ ap_int_base<_AP_SIZE_int, true>(i_op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::mult operator *(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) *(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::mult operator *(const ap_int_base<_AP_W, _AP_S>& op, unsigned int i_op) { return op * ap_int_base<_AP_SIZE_int, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::plus operator +(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) +(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::plus operator +(const ap_int_base<_AP_W, _AP_S>& op, unsigned int i_op) { return op + ap_int_base<_AP_SIZE_int, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::minus operator -(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) -(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::minus operator -(const ap_int_base<_AP_W, _AP_S>& op, unsigned int i_op) { return op - ap_int_base<_AP_SIZE_int, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::div operator /(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) /(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::div operator /(const ap_int_base<_AP_W, _AP_S>& op, unsigned int i_op) { return op / ap_int_base<_AP_SIZE_int, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::mod operator %(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) %(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::mod operator %(const ap_int_base<_AP_W, _AP_S>& op, unsigned int i_op) { return op % ap_int_base<_AP_SIZE_int, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::logic operator &(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) &(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::logic operator &(const ap_int_base<_AP_W, _AP_S>& op, unsigned int i_op) { return op & ap_int_base<_AP_SIZE_int, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::logic operator |(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) |(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::logic operator |(const ap_int_base<_AP_W, _AP_S>& op, unsigned int i_op) { return op | ap_int_base<_AP_SIZE_int, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::logic operator ^(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) ^(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_int, false>::logic operator ^(const ap_int_base<_AP_W, _AP_S>& op, unsigned int i_op) { return op ^ ap_int_base<_AP_SIZE_int, false>(i_op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::mult operator *(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) *(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::mult operator *(const ap_int_base<_AP_W, _AP_S>& op, long i_op) { return op * ap_int_base<_AP_SIZE_long, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::plus operator +(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) +(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::plus operator +(const ap_int_base<_AP_W, _AP_S>& op, long i_op) { return op + ap_int_base<_AP_SIZE_long, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::minus operator -(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) -(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::minus operator -(const ap_int_base<_AP_W, _AP_S>& op, long i_op) { return op - ap_int_base<_AP_SIZE_long, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::div operator /(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) /(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::div operator /(const ap_int_base<_AP_W, _AP_S>& op, long i_op) { return op / ap_int_base<_AP_SIZE_long, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::mod operator %(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) %(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::mod operator %(const ap_int_base<_AP_W, _AP_S>& op, long i_op) { return op % ap_int_base<_AP_SIZE_long, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::logic operator &(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) &(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::logic operator &(const ap_int_base<_AP_W, _AP_S>& op, long i_op) { return op & ap_int_base<_AP_SIZE_long, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::logic operator |(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) |(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::logic operator |(const ap_int_base<_AP_W, _AP_S>& op, long i_op) { return op | ap_int_base<_AP_SIZE_long, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::logic operator ^(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) ^(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, true>::logic operator ^(const ap_int_base<_AP_W, _AP_S>& op, long i_op) { return op ^ ap_int_base<_AP_SIZE_long, true>(i_op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::mult operator *(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) *(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::mult operator *(const ap_int_base<_AP_W, _AP_S>& op, unsigned long i_op) { return op * ap_int_base<_AP_SIZE_long, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::plus operator +(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) +(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::plus operator +(const ap_int_base<_AP_W, _AP_S>& op, unsigned long i_op) { return op + ap_int_base<_AP_SIZE_long, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::minus operator -(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) -(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::minus operator -(const ap_int_base<_AP_W, _AP_S>& op, unsigned long i_op) { return op - ap_int_base<_AP_SIZE_long, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::div operator /(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) /(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::div operator /(const ap_int_base<_AP_W, _AP_S>& op, unsigned long i_op) { return op / ap_int_base<_AP_SIZE_long, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::mod operator %(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) %(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::mod operator %(const ap_int_base<_AP_W, _AP_S>& op, unsigned long i_op) { return op % ap_int_base<_AP_SIZE_long, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::logic operator &(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) &(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::logic operator &(const ap_int_base<_AP_W, _AP_S>& op, unsigned long i_op) { return op & ap_int_base<_AP_SIZE_long, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::logic operator |(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) |(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::logic operator |(const ap_int_base<_AP_W, _AP_S>& op, unsigned long i_op) { return op | ap_int_base<_AP_SIZE_long, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::logic operator ^(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) ^(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_long, false>::logic operator ^(const ap_int_base<_AP_W, _AP_S>& op, unsigned long i_op) { return op ^ ap_int_base<_AP_SIZE_long, false>(i_op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::mult operator *(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) *(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::mult operator *(const ap_int_base<_AP_W, _AP_S>& op, ap_slong i_op) { return op * ap_int_base<_AP_SIZE_ap_slong, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::plus operator +(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) +(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::plus operator +(const ap_int_base<_AP_W, _AP_S>& op, ap_slong i_op) { return op + ap_int_base<_AP_SIZE_ap_slong, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::minus operator -(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) -(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::minus operator -(const ap_int_base<_AP_W, _AP_S>& op, ap_slong i_op) { return op - ap_int_base<_AP_SIZE_ap_slong, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::div operator /(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) /(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::div operator /(const ap_int_base<_AP_W, _AP_S>& op, ap_slong i_op) { return op / ap_int_base<_AP_SIZE_ap_slong, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::mod operator %(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) %(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::mod operator %(const ap_int_base<_AP_W, _AP_S>& op, ap_slong i_op) { return op % ap_int_base<_AP_SIZE_ap_slong, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::logic operator &(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) &(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::logic operator &(const ap_int_base<_AP_W, _AP_S>& op, ap_slong i_op) { return op & ap_int_base<_AP_SIZE_ap_slong, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::logic operator |(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) |(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::logic operator |(const ap_int_base<_AP_W, _AP_S>& op, ap_slong i_op) { return op | ap_int_base<_AP_SIZE_ap_slong, true>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::logic operator ^(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) ^(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, true>::logic operator ^(const ap_int_base<_AP_W, _AP_S>& op, ap_slong i_op) { return op ^ ap_int_base<_AP_SIZE_ap_slong, true>(i_op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::mult operator *(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) *(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::mult operator *(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong i_op) { return op * ap_int_base<_AP_SIZE_ap_slong, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::plus operator +(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) +(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::plus operator +(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong i_op) { return op + ap_int_base<_AP_SIZE_ap_slong, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::minus operator -(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) -(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::minus operator -(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong i_op) { return op - ap_int_base<_AP_SIZE_ap_slong, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::div operator /(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) /(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::div operator /(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong i_op) { return op / ap_int_base<_AP_SIZE_ap_slong, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::mod operator %(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) %(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::mod operator %(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong i_op) { return op % ap_int_base<_AP_SIZE_ap_slong, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::logic operator &(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) &(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::logic operator &(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong i_op) { return op & ap_int_base<_AP_SIZE_ap_slong, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::logic operator |(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) |(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::logic operator |(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong i_op) { return op | ap_int_base<_AP_SIZE_ap_slong, false>(i_op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::logic operator ^(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) ^(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_SIZE_ap_slong, false>::logic operator ^(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong i_op) { return op ^ ap_int_base<_AP_SIZE_ap_slong, false>(i_op); }
# 1649 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator<<( const ap_int_base<_AP_W, _AP_S>& op, char op2) { ap_int_base<_AP_W, _AP_S> r(0); if (CHAR_IS_SIGNED) r.V = op2 >= 0 ? (op.V << op2) : (op.V >> (-op2)); else r.V = op.V << op2; return r; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator>>( const ap_int_base<_AP_W, _AP_S>& op, char op2) { ap_int_base<_AP_W, _AP_S> r(0); if (CHAR_IS_SIGNED) r.V = op2 >= 0 ? (op.V >> op2) : (op.V << (-op2)); else r.V = op.V >> op2; return r; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator<<( const ap_int_base<_AP_W, _AP_S>& op, signed char op2) { ap_int_base<_AP_W, _AP_S> r(0); if (true) r.V = op2 >= 0 ? (op.V << op2) : (op.V >> (-op2)); else r.V = op.V << op2; return r; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator>>( const ap_int_base<_AP_W, _AP_S>& op, signed char op2) { ap_int_base<_AP_W, _AP_S> r(0); if (true) r.V = op2 >= 0 ? (op.V >> op2) : (op.V << (-op2)); else r.V = op.V >> op2; return r; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator<<( const ap_int_base<_AP_W, _AP_S>& op, short op2) { ap_int_base<_AP_W, _AP_S> r(0); if (true) r.V = op2 >= 0 ? (op.V << op2) : (op.V >> (-op2)); else r.V = op.V << op2; return r; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator>>( const ap_int_base<_AP_W, _AP_S>& op, short op2) { ap_int_base<_AP_W, _AP_S> r(0); if (true) r.V = op2 >= 0 ? (op.V >> op2) : (op.V << (-op2)); else r.V = op.V >> op2; return r; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator<<( const ap_int_base<_AP_W, _AP_S>& op, int op2) { ap_int_base<_AP_W, _AP_S> r(0); if (true) r.V = op2 >= 0 ? (op.V << op2) : (op.V >> (-op2)); else r.V = op.V << op2; return r; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator>>( const ap_int_base<_AP_W, _AP_S>& op, int op2) { ap_int_base<_AP_W, _AP_S> r(0); if (true) r.V = op2 >= 0 ? (op.V >> op2) : (op.V << (-op2)); else r.V = op.V >> op2; return r; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator<<( const ap_int_base<_AP_W, _AP_S>& op, long op2) { ap_int_base<_AP_W, _AP_S> r(0); if (true) r.V = op2 >= 0 ? (op.V << op2) : (op.V >> (-op2)); else r.V = op.V << op2; return r; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator>>( const ap_int_base<_AP_W, _AP_S>& op, long op2) { ap_int_base<_AP_W, _AP_S> r(0); if (true) r.V = op2 >= 0 ? (op.V >> op2) : (op.V << (-op2)); else r.V = op.V >> op2; return r; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator<<( const ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { ap_int_base<_AP_W, _AP_S> r(0); if (true) r.V = op2 >= 0 ? (op.V << op2) : (op.V >> (-op2)); else r.V = op.V << op2; return r; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator>>( const ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { ap_int_base<_AP_W, _AP_S> r(0); if (true) r.V = op2 >= 0 ? (op.V >> op2) : (op.V << (-op2)); else r.V = op.V >> op2; return r; }
# 1673 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator<<( const ap_int_base<_AP_W, _AP_S>& op, bool op2) { ap_int_base<_AP_W, _AP_S> r(0); r.V = op.V << op2; return r; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator>>( const ap_int_base<_AP_W, _AP_S>& op, bool op2) { ap_int_base<_AP_W, _AP_S> r(0); r.V = op.V >> op2; return r; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator<<( const ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { ap_int_base<_AP_W, _AP_S> r(0); r.V = op.V << op2; return r; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator>>( const ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { ap_int_base<_AP_W, _AP_S> r(0); r.V = op.V >> op2; return r; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator<<( const ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { ap_int_base<_AP_W, _AP_S> r(0); r.V = op.V << op2; return r; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator>>( const ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { ap_int_base<_AP_W, _AP_S> r(0); r.V = op.V >> op2; return r; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator<<( const ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { ap_int_base<_AP_W, _AP_S> r(0); r.V = op.V << op2; return r; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator>>( const ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { ap_int_base<_AP_W, _AP_S> r(0); r.V = op.V >> op2; return r; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator<<( const ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { ap_int_base<_AP_W, _AP_S> r(0); r.V = op.V << op2; return r; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator>>( const ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { ap_int_base<_AP_W, _AP_S> r(0); r.V = op.V >> op2; return r; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator<<( const ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { ap_int_base<_AP_W, _AP_S> r(0); r.V = op.V << op2; return r; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, _AP_S>::template RType<_AP_W,_AP_S>::arg1 operator>>( const ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { ap_int_base<_AP_W, _AP_S> r(0); r.V = op.V >> op2; return r; }
# 1704 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator +=( ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op += ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator -=( ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op -= ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator *=( ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op *= ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator /=( ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op /= ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator %=( ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op %= ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator &=( ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op &= ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator |=( ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op |= ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator ^=( ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op ^= ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator >>=( ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op >>= ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator <<=( ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op <<= ap_int_base<1, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator +=( ap_int_base<_AP_W, _AP_S>& op, char op2) { return op += ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator -=( ap_int_base<_AP_W, _AP_S>& op, char op2) { return op -= ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator *=( ap_int_base<_AP_W, _AP_S>& op, char op2) { return op *= ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator /=( ap_int_base<_AP_W, _AP_S>& op, char op2) { return op /= ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator %=( ap_int_base<_AP_W, _AP_S>& op, char op2) { return op %= ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator &=( ap_int_base<_AP_W, _AP_S>& op, char op2) { return op &= ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator |=( ap_int_base<_AP_W, _AP_S>& op, char op2) { return op |= ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator ^=( ap_int_base<_AP_W, _AP_S>& op, char op2) { return op ^= ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator >>=( ap_int_base<_AP_W, _AP_S>& op, char op2) { return op >>= ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator <<=( ap_int_base<_AP_W, _AP_S>& op, char op2) { return op <<= ap_int_base<8, CHAR_IS_SIGNED>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator +=( ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op += ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator -=( ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op -= ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator *=( ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op *= ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator /=( ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op /= ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator %=( ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op %= ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator &=( ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op &= ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator |=( ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op |= ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator ^=( ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op ^= ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator >>=( ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op >>= ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator <<=( ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op <<= ap_int_base<8, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator +=( ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op += ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator -=( ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op -= ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator *=( ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op *= ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator /=( ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op /= ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator %=( ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op %= ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator &=( ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op &= ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator |=( ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op |= ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator ^=( ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op ^= ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator >>=( ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op >>= ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator <<=( ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op <<= ap_int_base<8, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator +=( ap_int_base<_AP_W, _AP_S>& op, short op2) { return op += ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator -=( ap_int_base<_AP_W, _AP_S>& op, short op2) { return op -= ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator *=( ap_int_base<_AP_W, _AP_S>& op, short op2) { return op *= ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator /=( ap_int_base<_AP_W, _AP_S>& op, short op2) { return op /= ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator %=( ap_int_base<_AP_W, _AP_S>& op, short op2) { return op %= ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator &=( ap_int_base<_AP_W, _AP_S>& op, short op2) { return op &= ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator |=( ap_int_base<_AP_W, _AP_S>& op, short op2) { return op |= ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator ^=( ap_int_base<_AP_W, _AP_S>& op, short op2) { return op ^= ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator >>=( ap_int_base<_AP_W, _AP_S>& op, short op2) { return op >>= ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator <<=( ap_int_base<_AP_W, _AP_S>& op, short op2) { return op <<= ap_int_base<_AP_SIZE_short, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator +=( ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op += ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator -=( ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op -= ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator *=( ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op *= ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator /=( ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op /= ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator %=( ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op %= ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator &=( ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op &= ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator |=( ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op |= ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator ^=( ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op ^= ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator >>=( ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op >>= ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator <<=( ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op <<= ap_int_base<_AP_SIZE_short, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator +=( ap_int_base<_AP_W, _AP_S>& op, int op2) { return op += ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator -=( ap_int_base<_AP_W, _AP_S>& op, int op2) { return op -= ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator *=( ap_int_base<_AP_W, _AP_S>& op, int op2) { return op *= ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator /=( ap_int_base<_AP_W, _AP_S>& op, int op2) { return op /= ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator %=( ap_int_base<_AP_W, _AP_S>& op, int op2) { return op %= ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator &=( ap_int_base<_AP_W, _AP_S>& op, int op2) { return op &= ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator |=( ap_int_base<_AP_W, _AP_S>& op, int op2) { return op |= ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator ^=( ap_int_base<_AP_W, _AP_S>& op, int op2) { return op ^= ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator >>=( ap_int_base<_AP_W, _AP_S>& op, int op2) { return op >>= ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator <<=( ap_int_base<_AP_W, _AP_S>& op, int op2) { return op <<= ap_int_base<_AP_SIZE_int, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator +=( ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op += ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator -=( ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op -= ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator *=( ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op *= ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator /=( ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op /= ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator %=( ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op %= ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator &=( ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op &= ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator |=( ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op |= ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator ^=( ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op ^= ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator >>=( ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op >>= ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator <<=( ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op <<= ap_int_base<_AP_SIZE_int, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator +=( ap_int_base<_AP_W, _AP_S>& op, long op2) { return op += ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator -=( ap_int_base<_AP_W, _AP_S>& op, long op2) { return op -= ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator *=( ap_int_base<_AP_W, _AP_S>& op, long op2) { return op *= ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator /=( ap_int_base<_AP_W, _AP_S>& op, long op2) { return op /= ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator %=( ap_int_base<_AP_W, _AP_S>& op, long op2) { return op %= ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator &=( ap_int_base<_AP_W, _AP_S>& op, long op2) { return op &= ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator |=( ap_int_base<_AP_W, _AP_S>& op, long op2) { return op |= ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator ^=( ap_int_base<_AP_W, _AP_S>& op, long op2) { return op ^= ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator >>=( ap_int_base<_AP_W, _AP_S>& op, long op2) { return op >>= ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator <<=( ap_int_base<_AP_W, _AP_S>& op, long op2) { return op <<= ap_int_base<_AP_SIZE_long, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator +=( ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op += ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator -=( ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op -= ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator *=( ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op *= ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator /=( ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op /= ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator %=( ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op %= ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator &=( ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op &= ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator |=( ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op |= ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator ^=( ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op ^= ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator >>=( ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op >>= ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator <<=( ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op <<= ap_int_base<_AP_SIZE_long, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator +=( ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op += ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator -=( ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op -= ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator *=( ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op *= ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator /=( ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op /= ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator %=( ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op %= ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator &=( ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op &= ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator |=( ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op |= ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator ^=( ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op ^= ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator >>=( ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op >>= ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator <<=( ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op <<= ap_int_base<_AP_SIZE_ap_slong, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator +=( ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op += ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator -=( ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op -= ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator *=( ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op *= ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator /=( ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op /= ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator %=( ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op %= ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator &=( ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op &= ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator |=( ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op |= ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator ^=( ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op ^= ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator >>=( ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op >>= ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, _AP_S>& operator <<=( ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op <<= ap_int_base<_AP_SIZE_ap_slong, false>(op2); }
# 1737 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) half& operator +=( half& op2, ap_int_base<_AP_W, _AP_S>& op) { half op_rt = op.to_half(); return op2 += op_rt; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) half& operator -=( half& op2, ap_int_base<_AP_W, _AP_S>& op) { half op_rt = op.to_half(); return op2 -= op_rt; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) half& operator *=( half& op2, ap_int_base<_AP_W, _AP_S>& op) { half op_rt = op.to_half(); return op2 *= op_rt; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) half& operator /=( half& op2, ap_int_base<_AP_W, _AP_S>& op) { half op_rt = op.to_half(); return op2 /= op_rt; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) float& operator +=( float& op2, ap_int_base<_AP_W, _AP_S>& op) { float op_rt = op.to_float(); return op2 += op_rt; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) float& operator -=( float& op2, ap_int_base<_AP_W, _AP_S>& op) { float op_rt = op.to_float(); return op2 -= op_rt; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) float& operator *=( float& op2, ap_int_base<_AP_W, _AP_S>& op) { float op_rt = op.to_float(); return op2 *= op_rt; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) float& operator /=( float& op2, ap_int_base<_AP_W, _AP_S>& op) { float op_rt = op.to_float(); return op2 /= op_rt; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) double& operator +=( double& op2, ap_int_base<_AP_W, _AP_S>& op) { double op_rt = op.to_double(); return op2 += op_rt; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) double& operator -=( double& op2, ap_int_base<_AP_W, _AP_S>& op) { double op_rt = op.to_double(); return op2 -= op_rt; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) double& operator *=( double& op2, ap_int_base<_AP_W, _AP_S>& op) { double op_rt = op.to_double(); return op2 *= op_rt; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) double& operator /=( double& op2, ap_int_base<_AP_W, _AP_S>& op) { double op_rt = op.to_double(); return op2 /= op_rt; }
# 1765 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) > op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op > ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) < op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op < ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) >= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op >= ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) <= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op <= ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) == op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op == ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(bool i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<1, false>(i_op) != op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op, bool op2) { return op != ap_int_base<1, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) > op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op, char op2) { return op > ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) < op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op, char op2) { return op < ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) >= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op, char op2) { return op >= ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) <= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op, char op2) { return op <= ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) == op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op, char op2) { return op == ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, CHAR_IS_SIGNED>(i_op) != op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op, char op2) { return op != ap_int_base<8, CHAR_IS_SIGNED>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) > op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op > ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) < op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op < ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) >= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op >= ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) <= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op <= ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) == op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op == ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(signed char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, true>(i_op) != op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op, signed char op2) { return op != ap_int_base<8, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) > op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op > ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) < op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op < ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) >= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op >= ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) <= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op <= ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) == op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op == ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(unsigned char i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<8, false>(i_op) != op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op, unsigned char op2) { return op != ap_int_base<8, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) > op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op, short op2) { return op > ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) < op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op, short op2) { return op < ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) >= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op, short op2) { return op >= ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) <= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op, short op2) { return op <= ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) == op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op, short op2) { return op == ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, true>(i_op) != op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op, short op2) { return op != ap_int_base<_AP_SIZE_short, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) > op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op > ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) < op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op < ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) >= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op >= ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) <= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op <= ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) == op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op == ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(unsigned short i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_short, false>(i_op) != op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op, unsigned short op2) { return op != ap_int_base<_AP_SIZE_short, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) > op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op, int op2) { return op > ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) < op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op, int op2) { return op < ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) >= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op, int op2) { return op >= ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) <= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op, int op2) { return op <= ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) == op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op, int op2) { return op == ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, true>(i_op) != op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op, int op2) { return op != ap_int_base<_AP_SIZE_int, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) > op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op > ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) < op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op < ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) >= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op >= ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) <= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op <= ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) == op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op == ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(unsigned int i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_int, false>(i_op) != op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op, unsigned int op2) { return op != ap_int_base<_AP_SIZE_int, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) > op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op, long op2) { return op > ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) < op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op, long op2) { return op < ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) >= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op, long op2) { return op >= ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) <= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op, long op2) { return op <= ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) == op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op, long op2) { return op == ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, true>(i_op) != op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op, long op2) { return op != ap_int_base<_AP_SIZE_long, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) > op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op > ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) < op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op < ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) >= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op >= ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) <= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op <= ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) == op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op == ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(unsigned long i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_long, false>(i_op) != op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op, unsigned long op2) { return op != ap_int_base<_AP_SIZE_long, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) > op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op > ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) < op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op < ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) >= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op >= ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) <= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op <= ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) == op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op == ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(ap_slong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, true>(i_op) != op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op, ap_slong op2) { return op != ap_int_base<_AP_SIZE_ap_slong, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) > op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op > ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) < op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op < ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) >= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op >= ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) <= op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op <= ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) == op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op == ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(ap_ulong i_op, const ap_int_base<_AP_W, _AP_S>& op) { return ap_int_base<_AP_SIZE_ap_slong, false>(i_op) != op; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op, ap_ulong op2) { return op != ap_int_base<_AP_SIZE_ap_slong, false>(op2); }
# 1802 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
  template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op1, double op2) { return op1.to_double() > op2 ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(double op1, const ap_int_base<_AP_W, _AP_S>& op2) { return op1 > op2.to_double() ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W, _AP_S>& op1, float op2) { return op1.to_double() > op2 ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(float op1, const ap_int_base<_AP_W, _AP_S>& op2) { return op1 > op2.to_double() ; }
  template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op1, double op2) { return op1.to_double() < op2 ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(double op1, const ap_int_base<_AP_W, _AP_S>& op2) { return op1 < op2.to_double() ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W, _AP_S>& op1, float op2) { return op1.to_double() < op2 ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(float op1, const ap_int_base<_AP_W, _AP_S>& op2) { return op1 < op2.to_double() ; }
  template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op1, double op2) { return op1.to_double() >= op2 ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(double op1, const ap_int_base<_AP_W, _AP_S>& op2) { return op1 >= op2.to_double() ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W, _AP_S>& op1, float op2) { return op1.to_double() >= op2 ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(float op1, const ap_int_base<_AP_W, _AP_S>& op2) { return op1 >= op2.to_double() ; }
  template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op1, double op2) { return op1.to_double() <= op2 ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(double op1, const ap_int_base<_AP_W, _AP_S>& op2) { return op1 <= op2.to_double() ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W, _AP_S>& op1, float op2) { return op1.to_double() <= op2 ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(float op1, const ap_int_base<_AP_W, _AP_S>& op2) { return op1 <= op2.to_double() ; }
  template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op1, double op2) { return op1.to_double() == op2 ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(double op1, const ap_int_base<_AP_W, _AP_S>& op2) { return op1 == op2.to_double() ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W, _AP_S>& op1, float op2) { return op1.to_double() == op2 ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(float op1, const ap_int_base<_AP_W, _AP_S>& op2) { return op1 == op2.to_double() ; }
  template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op1, double op2) { return op1.to_double() != op2 ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(double op1, const ap_int_base<_AP_W, _AP_S>& op2) { return op1 != op2.to_double() ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W, _AP_S>& op1, float op2) { return op1.to_double() != op2 ; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(float op1, const ap_int_base<_AP_W, _AP_S>& op2) { return op1 != op2.to_double() ; }
# 1832 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::plus operator +(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1) + op2; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::plus operator +(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 + ap_int_base<_AP_W2, false>(op2); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::minus operator -(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1) - op2; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::minus operator -(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 - ap_int_base<_AP_W2, false>(op2); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::mult operator *(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1) * op2; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::mult operator *(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 * ap_int_base<_AP_W2, false>(op2); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::div operator /(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1) / op2; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::div operator /(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 / ap_int_base<_AP_W2, false>(op2); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::mod operator %(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1) % op2; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::mod operator %(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 % ap_int_base<_AP_W2, false>(op2); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::logic operator &(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1) & op2; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::logic operator &(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 & ap_int_base<_AP_W2, false>(op2); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::logic operator |(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1) | op2; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::logic operator |(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 | ap_int_base<_AP_W2, false>(op2); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::logic operator ^(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1) ^ op2; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::logic operator ^(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 ^ ap_int_base<_AP_W2, false>(op2); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::arg1 operator >>(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1) >> op2; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::arg1 operator >>(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 >> ap_int_base<_AP_W2, false>(op2); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::arg1 operator <<(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1) << op2; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<_AP_W2, _AP_S2>::arg1 operator <<(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 << ap_int_base<_AP_W2, false>(op2); }
# 1863 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator +=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 += ap_int_base<_AP_W2, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W1, _AP_S1>& operator +=( ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<_AP_W1, false> tmp(op1); tmp += op2; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator -=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 -= ap_int_base<_AP_W2, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W1, _AP_S1>& operator -=( ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<_AP_W1, false> tmp(op1); tmp -= op2; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator *=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 *= ap_int_base<_AP_W2, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W1, _AP_S1>& operator *=( ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<_AP_W1, false> tmp(op1); tmp *= op2; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator /=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 /= ap_int_base<_AP_W2, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W1, _AP_S1>& operator /=( ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<_AP_W1, false> tmp(op1); tmp /= op2; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator %=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 %= ap_int_base<_AP_W2, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W1, _AP_S1>& operator %=( ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<_AP_W1, false> tmp(op1); tmp %= op2; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator >>=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 >>= ap_int_base<_AP_W2, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W1, _AP_S1>& operator >>=( ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<_AP_W1, false> tmp(op1); tmp >>= op2; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator <<=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1 <<= ap_int_base<_AP_W2, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W1, _AP_S1>& operator <<=( ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<_AP_W1, false> tmp(op1); tmp <<= op2; op1 = tmp; return op1; }
# 1895 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator &=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { ap_int_base<_AP_W2, false> tmp(op2); op1.V &= tmp.V; return op1; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W1, _AP_S1>& operator &=( ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<_AP_W1, false> tmp(op1); tmp.V &= op2.V; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator |=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { ap_int_base<_AP_W2, false> tmp(op2); op1.V |= tmp.V; return op1; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W1, _AP_S1>& operator |=( ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<_AP_W1, false> tmp(op1); tmp.V |= op2.V; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator ^=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { ap_int_base<_AP_W2, false> tmp(op2); op1.V ^= tmp.V; return op1; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W1, _AP_S1>& operator ^=( ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<_AP_W1, false> tmp(op1); tmp.V ^= op2.V; op1 = tmp; return op1; }
# 1914 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1).operator ==(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1.operator ==(op2.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1).operator !=(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1.operator !=(op2.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1).operator >(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1.operator >(op2.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1).operator >=(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1.operator >=(op2.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1).operator <(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1.operator <(op2.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_range_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<_AP_W1, false>(op1).operator <=(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_range_ref<_AP_W2, _AP_S2>& op2) { return op1.operator <=(op2.operator ap_int_base<_AP_W2, false>()); }
# 1941 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<1, false>::plus operator +(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 + ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<1, false>::template RType<_AP_W2, _AP_S2>::plus operator +(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) + op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<1, false>::minus operator -(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 - ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<1, false>::template RType<_AP_W2, _AP_S2>::minus operator -(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) - op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<1, false>::mult operator *(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 * ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<1, false>::template RType<_AP_W2, _AP_S2>::mult operator *(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) * op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<1, false>::div operator /(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 / ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<1, false>::template RType<_AP_W2, _AP_S2>::div operator /(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) / op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<1, false>::mod operator %(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 % ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<1, false>::template RType<_AP_W2, _AP_S2>::mod operator %(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) % op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<1, false>::logic operator &(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 & ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<1, false>::template RType<_AP_W2, _AP_S2>::logic operator &(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) & op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<1, false>::logic operator |(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 | ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<1, false>::template RType<_AP_W2, _AP_S2>::logic operator |(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) | op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<1, false>::logic operator ^(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 ^ ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<1, false>::template RType<_AP_W2, _AP_S2>::logic operator ^(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) ^ op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<1, false>::arg1 operator >>(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 >> ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<1, false>::template RType<_AP_W2, _AP_S2>::arg1 operator >>(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) >> op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W1, _AP_S1>::template RType<1, false>::arg1 operator <<(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 << ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<1, false>::template RType<_AP_W2, _AP_S2>::arg1 operator <<(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) << op2; }
# 1972 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator +=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 += ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W1, _AP_S1>& operator +=( ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<1, false> tmp(op1); tmp += op2; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator -=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 -= ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W1, _AP_S1>& operator -=( ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<1, false> tmp(op1); tmp -= op2; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator *=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 *= ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W1, _AP_S1>& operator *=( ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<1, false> tmp(op1); tmp *= op2; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator /=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 /= ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W1, _AP_S1>& operator /=( ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<1, false> tmp(op1); tmp /= op2; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator %=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 %= ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W1, _AP_S1>& operator %=( ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<1, false> tmp(op1); tmp %= op2; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator >>=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 >>= ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W1, _AP_S1>& operator >>=( ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<1, false> tmp(op1); tmp >>= op2; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator <<=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 <<= ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W1, _AP_S1>& operator <<=( ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<1, false> tmp(op1); tmp <<= op2; op1 = tmp; return op1; }
# 2004 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator &=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { ap_int_base<1, false> tmp(op2); op1.V &= tmp.V; return op1; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W1, _AP_S1>& operator &=( ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<1, false> tmp(op1); tmp.V &= op2.V; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator |=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { ap_int_base<1, false> tmp(op2); op1.V |= tmp.V; return op1; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W1, _AP_S1>& operator |=( ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<1, false> tmp(op1); tmp.V |= op2.V; op1 = tmp; return op1; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W1, _AP_S1>& operator ^=( ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { ap_int_base<1, false> tmp(op2); op1.V ^= tmp.V; return op1; } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref<_AP_W1, _AP_S1>& operator ^=( ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { ap_int_base<1, false> tmp(op1); tmp.V ^= op2.V; op1 = tmp; return op1; }
# 2023 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 == ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) == op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 != ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) != op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 > ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) > op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 >= ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) >= op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 < ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) < op2; }
template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_int_base<_AP_W1, _AP_S1>& op1, const ap_bit_ref<_AP_W2, _AP_S2>& op2) { return op1 <= ap_int_base<1, false>(op2); } template <int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_bit_ref<_AP_W1, _AP_S1>& op1, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op1) <= op2; }
# 2130 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_base.h"
template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2, int _AP_W3, bool _AP_S3> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_int_base<_AP_W3, _AP_S3>& op1, const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& op2) { return op1 == op2.get(); } template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2, int _AP_W3, bool _AP_S3> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& op1, const ap_int_base<_AP_W3, _AP_S3>& op2) { return op1.get() == op2; }
template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2, int _AP_W3, bool _AP_S3> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_int_base<_AP_W3, _AP_S3>& op1, const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& op2) { return op1 != op2.get(); } template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2, int _AP_W3, bool _AP_S3> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& op1, const ap_int_base<_AP_W3, _AP_S3>& op2) { return op1.get() != op2; }
template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2, int _AP_W3, bool _AP_S3> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_int_base<_AP_W3, _AP_S3>& op1, const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& op2) { return op1 > op2.get(); } template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2, int _AP_W3, bool _AP_S3> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& op1, const ap_int_base<_AP_W3, _AP_S3>& op2) { return op1.get() > op2; }
template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2, int _AP_W3, bool _AP_S3> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_int_base<_AP_W3, _AP_S3>& op1, const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& op2) { return op1 >= op2.get(); } template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2, int _AP_W3, bool _AP_S3> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& op1, const ap_int_base<_AP_W3, _AP_S3>& op2) { return op1.get() >= op2; }
template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2, int _AP_W3, bool _AP_S3> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_int_base<_AP_W3, _AP_S3>& op1, const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& op2) { return op1 < op2.get(); } template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2, int _AP_W3, bool _AP_S3> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& op1, const ap_int_base<_AP_W3, _AP_S3>& op2) { return op1.get() < op2; }
template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2, int _AP_W3, bool _AP_S3> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_int_base<_AP_W3, _AP_S3>& op1, const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& op2) { return op1 <= op2.get(); } template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2, int _AP_W3, bool _AP_S3> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& op1, const ap_int_base<_AP_W3, _AP_S3>& op2) { return op1.get() <= op2; }
# 12 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_int.h" 2
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h" 1
# 27 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
template <int _AP_W1, typename _AP_T1, int _AP_W2, typename _AP_T2>
struct ap_concat_ref {
  enum {
    _AP_WR = _AP_W1 + _AP_W2,
  };

  _AP_T1& mbv1;
  _AP_T2& mbv2;

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref(const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& ref)
      : mbv1(ref.mbv1), mbv2(ref.mbv2) {}

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref(_AP_T1& bv1, _AP_T2& bv2) : mbv1(bv1), mbv2(bv2) {}

  template <int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(const ap_int_base<_AP_W3, _AP_S3>& val) {
    ap_int_base<_AP_W1 + _AP_W2, false> vval(val);
    int W_ref1 = mbv1.length();
    int W_ref2 = mbv2.length();
    ap_int_base<_AP_W1, false> Part1;
    Part1.V = ({ typename _ap_type::remove_const<typeof(vval.V)>::type __Result__ = 0; typeof(vval.V) __Val2__ = vval.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), W_ref2, W_ref1 + W_ref2 - 1); __Result__; });
    mbv1.set(Part1);
    ap_int_base<_AP_W2, false> Part2;
    Part2.V = ({ typename _ap_type::remove_const<typeof(vval.V)>::type __Result__ = 0; typeof(vval.V) __Val2__ = vval.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, W_ref2 - 1); __Result__; });
    mbv2.set(Part2);
    return *this;
  }
# 70 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(bool val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(char val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(signed char val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(unsigned char val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(short val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(unsigned short val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(int val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(unsigned int val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(long val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(unsigned long val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(ap_slong val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(ap_ulong val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(half val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(float val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(double val) { ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val); return operator=(tmpVal); }





  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(
      const ap_concat_ref<_AP_W1, _AP_T1, _AP_W2, _AP_T2>& val) {
    ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val);
    return operator=(tmpVal);
  }

  template <int _AP_W3, typename _AP_T3, int _AP_W4, typename _AP_T4>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(
      const ap_concat_ref<_AP_W3, _AP_T3, _AP_W4, _AP_T4>& val) {
    ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val);
    return operator=(tmpVal);
  }

  template <int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(const ap_bit_ref<_AP_W3, _AP_S3>& val) {
    ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val);
    return operator=(tmpVal);
  }
  template <int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(const ap_range_ref<_AP_W3, _AP_S3>& val) {
    ap_int_base<_AP_W1 + _AP_W2, false> tmpVal(val);
    return operator=(tmpVal);
  }

  template <int _AP_W3, int _AP_I3, bool _AP_S3, ap_q_mode _AP_Q3,
            ap_o_mode _AP_O3, int _AP_N3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(
      const af_range_ref<_AP_W3, _AP_I3, _AP_S3, _AP_Q3, _AP_O3, _AP_N3>& val) {
    return operator=((const ap_int_base<_AP_W3, false>)(val));
  }

  template <int _AP_W3, int _AP_I3, bool _AP_S3, ap_q_mode _AP_Q3,
            ap_o_mode _AP_O3, int _AP_N3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(
      const ap_fixed_base<_AP_W3, _AP_I3, _AP_S3, _AP_Q3, _AP_O3, _AP_N3>&
          val) {
    return operator=(val.to_ap_int_base());
  }

  template <int _AP_W3, int _AP_I3, bool _AP_S3, ap_q_mode _AP_Q3,
            ap_o_mode _AP_O3, int _AP_N3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref& operator=(
      const af_bit_ref<_AP_W3, _AP_I3, _AP_S3, _AP_Q3, _AP_O3, _AP_N3>& val) {
    return operator=((ap_ulong)(bool)(val));
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) operator ap_int_base<_AP_WR, false>() const { return get(); }

  inline __attribute__((always_inline)) __attribute__((nodebug)) operator ap_ulong() const { return get().to_uint64(); }

  template <int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_WR, ap_concat_ref, _AP_W3,
                       ap_range_ref<_AP_W3, _AP_S3> >
  operator,(const ap_range_ref<_AP_W3, _AP_S3> &a2) {
    return ap_concat_ref<_AP_WR, ap_concat_ref, _AP_W3,
                         ap_range_ref<_AP_W3, _AP_S3> >(
        *this, const_cast<ap_range_ref<_AP_W3, _AP_S3>&>(a2));
  }

  template <int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_WR, ap_concat_ref, _AP_W3, ap_int_base<_AP_W3, _AP_S3> >
      operator,(ap_int_base<_AP_W3, _AP_S3> &a2) {
    return ap_concat_ref<_AP_WR, ap_concat_ref, _AP_W3,
                         ap_int_base<_AP_W3, _AP_S3> >(*this, a2);
  }

  template <int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_WR, ap_concat_ref, _AP_W3, ap_int_base<_AP_W3, _AP_S3> >
      operator,(volatile ap_int_base<_AP_W3, _AP_S3> &a2) {
    return ap_concat_ref<_AP_WR, ap_concat_ref, _AP_W3,
                         ap_int_base<_AP_W3, _AP_S3> >(
        *this, const_cast<ap_int_base<_AP_W3, _AP_S3>&>(a2));
  }

  template <int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_WR, ap_concat_ref, _AP_W3, ap_int_base<_AP_W3, _AP_S3> >
      operator,(const ap_int_base<_AP_W3, _AP_S3> &a2) {
    return ap_concat_ref<_AP_WR, ap_concat_ref, _AP_W3,
                         ap_int_base<_AP_W3, _AP_S3> >(
        *this, const_cast<ap_int_base<_AP_W3, _AP_S3>&>(a2));
  }

  template <int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_WR, ap_concat_ref, _AP_W3, ap_int_base<_AP_W3, _AP_S3> >
      operator,(const volatile ap_int_base<_AP_W3, _AP_S3> &a2) {

    ap_int_base<_AP_W3, _AP_S3> op(a2);
    return ap_concat_ref<_AP_WR, ap_concat_ref, _AP_W3,
                         ap_int_base<_AP_W3, _AP_S3> >(
        *this, const_cast<ap_int_base<_AP_W3, _AP_S3>&>(op));
  }

  template <int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_WR, ap_concat_ref, 1, ap_bit_ref<_AP_W3, _AP_S3> >
  operator,(const ap_bit_ref<_AP_W3, _AP_S3> &a2) {
    return ap_concat_ref<_AP_WR, ap_concat_ref, 1, ap_bit_ref<_AP_W3, _AP_S3> >(
        *this, const_cast<ap_bit_ref<_AP_W3, _AP_S3>&>(a2));
  }

  template <int _AP_W3, typename _AP_T3, int _AP_W4, typename _AP_T4>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_WR, ap_concat_ref, _AP_W3 + _AP_W4,
                       ap_concat_ref<_AP_W3, _AP_T3, _AP_W4, _AP_T4> >
  operator,(const ap_concat_ref<_AP_W3, _AP_T3, _AP_W4, _AP_T4> &a2) {
    return ap_concat_ref<_AP_WR, ap_concat_ref, _AP_W3 + _AP_W4,
                         ap_concat_ref<_AP_W3, _AP_T3, _AP_W4, _AP_T4> >(
        *this, const_cast<ap_concat_ref<_AP_W3, _AP_T3, _AP_W4, _AP_T4>&>(a2));
  }

  template <int _AP_W3, int _AP_I3, bool _AP_S3, ap_q_mode _AP_Q3,
            ap_o_mode _AP_O3, int _AP_N3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<
      _AP_WR, ap_concat_ref, _AP_W3,
      af_range_ref<_AP_W3, _AP_I3, _AP_S3, _AP_Q3, _AP_O3, _AP_N3> >
  operator,(
      const af_range_ref<_AP_W3, _AP_I3, _AP_S3, _AP_Q3, _AP_O3, _AP_N3> &a2) {
    return ap_concat_ref<
        _AP_WR, ap_concat_ref, _AP_W3,
        af_range_ref<_AP_W3, _AP_I3, _AP_S3, _AP_Q3, _AP_O3, _AP_N3> >(
        *this,
        const_cast<
            af_range_ref<_AP_W3, _AP_I3, _AP_S3, _AP_Q3, _AP_O3, _AP_N3>&>(a2));
  }

  template <int _AP_W3, int _AP_I3, bool _AP_S3, ap_q_mode _AP_Q3,
            ap_o_mode _AP_O3, int _AP_N3>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_WR, ap_concat_ref, 1,
                    af_bit_ref<_AP_W3, _AP_I3, _AP_S3, _AP_Q3, _AP_O3, _AP_N3> >
      operator,(const af_bit_ref<_AP_W3, _AP_I3, _AP_S3, _AP_Q3, _AP_O3, _AP_N3>
                    &a2) {
    return ap_concat_ref<
        _AP_WR, ap_concat_ref, 1,
        af_bit_ref<_AP_W3, _AP_I3, _AP_S3, _AP_Q3, _AP_O3, _AP_N3> >(
        *this,
        const_cast<af_bit_ref<_AP_W3, _AP_I3, _AP_S3, _AP_Q3, _AP_O3, _AP_N3>&>(
            a2));
  }

  template <int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<((_AP_WR) > (_AP_W3) ? (_AP_WR) : (_AP_W3)), _AP_S3> operator&(
      const ap_int_base<_AP_W3, _AP_S3>& a2) {
    return get() & a2;
  }

  template <int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<((_AP_WR) > (_AP_W3) ? (_AP_WR) : (_AP_W3)), _AP_S3> operator|(
      const ap_int_base<_AP_W3, _AP_S3>& a2) {
    return get() | a2;
  }

  template <int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<((_AP_WR) > (_AP_W3) ? (_AP_WR) : (_AP_W3)), _AP_S3> operator^(
      const ap_int_base<_AP_W3, _AP_S3>& a2) {
    return get() ^ a2;
  }
# 258 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_WR, false> get() const {
    ap_int_base<_AP_WR, false> tmpVal(0);
    int W_ref1 = mbv1.length();
    int W_ref2 = mbv2.length();
    ap_int_base<_AP_W2, false> v2(mbv2);
    ap_int_base<_AP_W1, false> v1(mbv1);
    tmpVal.V = ({ typename _ap_type::remove_const<typeof(tmpVal.V)>::type __Result__ = 0; typeof(tmpVal.V) __Val2__ = tmpVal.V; typeof(v2.V) __Repl2__ = v2.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), 0, W_ref2 - 1); __Result__; });
    tmpVal.V =
        ({ typename _ap_type::remove_const<typeof(tmpVal.V)>::type __Result__ = 0; typeof(tmpVal.V) __Val2__ = tmpVal.V; typeof(v1.V) __Repl2__ = v1.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), W_ref2, W_ref1 + W_ref2 - 1); __Result__; });
    return tmpVal;
  }

  template <int _AP_W3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) void set(const ap_int_base<_AP_W3, false>& val) {
    ap_int_base<_AP_W1 + _AP_W2, false> vval(val);
    int W_ref1 = mbv1.length();
    int W_ref2 = mbv2.length();
    ap_int_base<_AP_W1, false> tmpVal1;
    tmpVal1.V = ({ typename _ap_type::remove_const<typeof(vval.V)>::type __Result__ = 0; typeof(vval.V) __Val2__ = vval.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), W_ref2, W_ref1 + W_ref2 - 1); __Result__; });
    mbv1.set(tmpVal1);
    ap_int_base<_AP_W2, false> tmpVal2;
    tmpVal2.V = ({ typename _ap_type::remove_const<typeof(vval.V)>::type __Result__ = 0; typeof(vval.V) __Val2__ = vval.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, W_ref2 - 1); __Result__; });
    mbv2.set(tmpVal2);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) int length() const { return mbv1.length() + mbv2.length(); }
};




template <int _AP_W, bool _AP_S>
struct ap_range_ref {



  typedef ap_int_base<_AP_W, _AP_S> ref_type;
  ref_type& d_bv;
  int l_index;
  int h_index;

 public:
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref(const ap_range_ref<_AP_W, _AP_S>& ref)
      : d_bv(ref.d_bv), l_index(ref.l_index), h_index(ref.h_index) {}

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref(ref_type* bv, int h, int l)
      : d_bv(*bv), l_index(l), h_index(h) {}

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref(const ref_type* bv, int h, int l)
      : d_bv(*const_cast<ref_type*>(bv)), l_index(l), h_index(h) {}

  inline __attribute__((always_inline)) __attribute__((nodebug)) operator ap_int_base<_AP_W, false>() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return ret;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) operator ap_ulong() const { return to_uint64(); }
# 339 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(bool val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(char val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(signed char val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(unsigned char val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(short val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(unsigned short val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(int val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(unsigned int val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(long val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(unsigned long val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(ap_slong val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(ap_ulong val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(half val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(float val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(double val) { ap_int_base<_AP_W, false> tmp(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }




  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(const char* val) {
    const ap_int_base<_AP_W, false> tmp(val);
    d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; });
    return *this;
  }


  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(const ap_int_base<_AP_W2, _AP_S2>& val) {
    ap_int_base<_AP_W, false> tmp(val);
    d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; });
    return *this;
  }




  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(const ap_range_ref& val) {
    return operator=((const ap_int_base<_AP_W, false>)val);
  }


  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(const ap_range_ref<_AP_W2, _AP_S2>& val) {
    return operator=((const ap_int_base<_AP_W2, false>)val);
  }


  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(const ap_bit_ref<_AP_W2, _AP_S2>& val) {
    return operator=((ap_ulong)(bool)(val));
  }


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&
          val) {
    return operator=(val.to_ap_int_base());
  }


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& val) {
    return operator=((const ap_int_base<_AP_W2, false>)val);
  }


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& val) {
    return operator=((ap_ulong)(bool)(val));
  }


  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref& operator=(
      const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& val) {
    return operator=((const ap_int_base<_AP_W2 + _AP_W3, false>)(val));
  }


  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_W, ap_range_ref, _AP_W2, ap_range_ref<_AP_W2, _AP_S2> >
      operator,(const ap_range_ref<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<_AP_W, ap_range_ref, _AP_W2,
                         ap_range_ref<_AP_W2, _AP_S2> >(
        *this, const_cast<ap_range_ref<_AP_W2, _AP_S2>&>(a2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_W, ap_range_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
      operator,(ap_int_base<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<_AP_W, ap_range_ref, _AP_W2,
                         ap_int_base<_AP_W2, _AP_S2> >(*this, a2);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug))
  ap_concat_ref<_AP_W, ap_range_ref, _AP_W, ap_int_base<_AP_W, _AP_S> >
  operator,(ap_int_base<_AP_W, _AP_S>& a2) {
    return ap_concat_ref<_AP_W, ap_range_ref, _AP_W,
                         ap_int_base<_AP_W, _AP_S> >(*this, a2);
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_W, ap_range_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
      operator,(volatile ap_int_base<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<_AP_W, ap_range_ref, _AP_W2,
                         ap_int_base<_AP_W2, _AP_S2> >(
        *this, const_cast<ap_int_base<_AP_W2, _AP_S2>&>(a2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_W, ap_range_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
      operator,(const ap_int_base<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<_AP_W, ap_range_ref, _AP_W2,
                         ap_int_base<_AP_W2, _AP_S2> >(
        *this, const_cast<ap_int_base<_AP_W2, _AP_S2>&>(a2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_W, ap_range_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
      operator,(const volatile ap_int_base<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<_AP_W, ap_range_ref, _AP_W2,
                         ap_int_base<_AP_W2, _AP_S2> >(
        *this, const_cast<ap_int_base<_AP_W2, _AP_S2>&>(a2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_range_ref, 1, ap_bit_ref<_AP_W2, _AP_S2> >
  operator,(const ap_bit_ref<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<_AP_W, ap_range_ref, 1, ap_bit_ref<_AP_W2, _AP_S2> >(
        *this, const_cast<ap_bit_ref<_AP_W2, _AP_S2>&>(a2));
  }

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, ap_range_ref, _AP_W2 + _AP_W3,
                       ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> >
  operator,(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> &a2) {
    return ap_concat_ref<_AP_W, ap_range_ref, _AP_W2 + _AP_W3,
                         ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> >(
        *this, const_cast<ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>&>(a2));
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<
      _AP_W, ap_range_ref, _AP_W2,
      af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >
  operator,(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> a2) {
    return ap_concat_ref<
        _AP_W, ap_range_ref, _AP_W2,
        af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >(
        *this,
        const_cast<
            af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&>(a2));
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_W, ap_range_ref, 1,
                    af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >
      operator,(const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>
                    &a2) {
    return ap_concat_ref<
        _AP_W, ap_range_ref, 1,
        af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >(
        *this,
        const_cast<af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&>(
            a2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator==(const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    ap_int_base<_AP_W, false> lop(*this);
    ap_int_base<_AP_W2, false> hop(op2);
    return lop == hop;
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator!=(const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    return !(operator==(op2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator<(const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    ap_int_base<_AP_W, false> lop(*this);
    ap_int_base<_AP_W2, false> hop(op2);
    return lop < hop;
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator<=(const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    ap_int_base<_AP_W, false> lop(*this);
    ap_int_base<_AP_W2, false> hop(op2);
    return lop <= hop;
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator>(const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    return !(operator<=(op2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator>=(const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    return !(operator<(op2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S>& operator|=(
      const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    (this->d_bv).V |= (op2.d_bv).V;
    return *this;
  };

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S>& operator|=(
      const ap_int_base<_AP_W2, _AP_S2>& op2) {
    (this->d_bv).V |= op2.V;
    return *this;
  };

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S>& operator&=(
      const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    (this->d_bv).V &= (op2.d_bv).V;
    return *this;
  };

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S>& operator&=(
      const ap_int_base<_AP_W2, _AP_S2>& op2) {
    (this->d_bv).V &= op2.V;
    return *this;
  };

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S>& operator^=(
      const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    (this->d_bv).V ^= (op2.d_bv).V;
    return *this;
  };

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_range_ref<_AP_W, _AP_S>& operator^=(
      const ap_int_base<_AP_W2, _AP_S2>& op2) {
    (this->d_bv).V ^= op2.V;
    return *this;
  };



  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, false> operator~() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return (~ret);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, false> operator!() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return (!ret);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, false> operator+() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return ret;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, false> operator-() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return (-ret);
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, false> get() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return ret;
  }

  template <int _AP_W2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) void set(const ap_int_base<_AP_W2, false>& val) {
    d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val.V) __Repl2__ = val.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; });
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) int length() const {
    return h_index >= l_index ? h_index - l_index + 1 : l_index - h_index + 1;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) int to_int() const {
    return (int)(({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; }));
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) unsigned to_uint() const {
    ap_int_base<_AP_W, false> t;
    t.V = d_bv.V;
    return (unsigned)(({ typename _ap_type::remove_const<typeof(t.V)>::type __Result__ = 0; typeof(t.V) __Val2__ = t.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; }));
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) long to_long() const {
    return (long)(({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; }));
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) unsigned long to_ulong() const {
    ap_int_base<_AP_W, false> t;
    t.V = d_bv.V;
    return (unsigned long)(({ typename _ap_type::remove_const<typeof(t.V)>::type __Result__ = 0; typeof(t.V) __Val2__ = t.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; }));
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_slong to_int64() const {
    return (ap_slong)(({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; }));
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ulong to_uint64() const {
    ap_int_base<_AP_W, false> t;
    t.V = d_bv.V;
    return (ap_ulong)(({ typename _ap_type::remove_const<typeof(t.V)>::type __Result__ = 0; typeof(t.V) __Val2__ = t.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; }));
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) bool and_reduce() const {
    bool ret = true;
    bool reverse = l_index > h_index;
    unsigned low = reverse ? h_index : l_index;
    unsigned high = reverse ? l_index : h_index;
    VITIS_LOOP_676_1: for (unsigned i = low; i != high+1; ++i) {

#pragma HLS unroll

 ret &= ({ typeof(d_bv.V) __Val2__ = d_bv.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), i); __Result__; });
    }
    return ret;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) bool or_reduce() const {
    bool ret = false;
    bool reverse = l_index > h_index;
    unsigned low = reverse ? h_index : l_index;
    unsigned high = reverse ? l_index : h_index;
    VITIS_LOOP_690_1: for (unsigned i = low; i != high+1; ++i) {

#pragma HLS unroll

 ret |= ({ typeof(d_bv.V) __Val2__ = d_bv.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), i); __Result__; });
    }
    return ret;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) bool xor_reduce() const {
    bool ret = false;
    bool reverse = l_index > h_index;
    unsigned low = reverse ? h_index : l_index;
    unsigned high = reverse ? l_index : h_index;
    VITIS_LOOP_704_1: for (unsigned i = low; i != high+1; ++i) {

#pragma HLS unroll

 ret ^= ({ typeof(d_bv.V) __Val2__ = d_bv.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), i); __Result__; });
    }
    return ret;
  }
# 720 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) char* to_string(signed char radix = 2) const {
    (void)(radix);
    return 0;
  }

};
# 760 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
template <int _AP_W, bool _AP_S>
struct ap_bit_ref {



  typedef ap_int_base<_AP_W, _AP_S> ref_type;
  ref_type& d_bv;
  int d_index;

 public:

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref(const ap_bit_ref<_AP_W, _AP_S>& ref)
      : d_bv(ref.d_bv), d_index(ref.d_index) {}

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref(ref_type* bv, int index = 0) : d_bv(*bv), d_index(index) {}

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref(const ref_type* bv, int index = 0)
      : d_bv(*const_cast<ref_type*>(bv)), d_index(index) {}

  inline __attribute__((always_inline)) __attribute__((nodebug)) operator bool() const { return ({ typeof(d_bv.V) __Val2__ = d_bv.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), d_index); __Result__; }); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool to_bool() const { return ({ typeof(d_bv.V) __Val2__ = d_bv.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), d_index); __Result__; }); }
# 798 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(bool val) { d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val) __Repl2__ = !!val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(char val) { d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val) __Repl2__ = !!val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(signed char val) { d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val) __Repl2__ = !!val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(unsigned char val) { d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val) __Repl2__ = !!val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(short val) { d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val) __Repl2__ = !!val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(unsigned short val) { d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val) __Repl2__ = !!val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(int val) { d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val) __Repl2__ = !!val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(unsigned int val) { d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val) __Repl2__ = !!val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(long val) { d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val) __Repl2__ = !!val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(unsigned long val) { d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val) __Repl2__ = !!val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(ap_slong val) { d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val) __Repl2__ = !!val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(ap_ulong val) { d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val) __Repl2__ = !!val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
# 820 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(half val) { bool tmp_val = val; d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp_val) __Repl2__ = !!tmp_val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(float val) { bool tmp_val = val; d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp_val) __Repl2__ = !!tmp_val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(double val) { bool tmp_val = val; d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp_val) __Repl2__ = !!tmp_val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; }); return *this; }




  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(const ap_int_base<_AP_W2, _AP_S2>& val) {
    return operator=((ap_ulong)(val.V != 0));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(const ap_range_ref<_AP_W2, _AP_S2>& val) {
    return operator=((ap_int_base<_AP_W2, false>)val);
  }



  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(const ap_bit_ref& val) {
    return operator=((ap_ulong)(bool)val);
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(const ap_bit_ref<_AP_W2, _AP_S2>& val) {
    return operator=((ap_ulong)(bool)val);
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& val) {
    return operator=((const ap_int_base<_AP_W2, false>)val);
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& val) {
    return operator=((ap_ulong)(bool)val);
  }

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator=(
      const ap_concat_ref<_AP_W2, _AP_T3, _AP_W3, _AP_T3>& val) {
    return operator=((const ap_int_base<_AP_W2 + _AP_W3, false>)val);
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<1, ap_bit_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
  operator,(ap_int_base<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<1, ap_bit_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >(
        *this, a2);
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<1, ap_bit_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
  operator,(volatile ap_int_base<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<1, ap_bit_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >(
        *this, const_cast<ap_int_base<_AP_W2, _AP_S2>&>(a2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<1, ap_bit_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
  operator,(const ap_int_base<_AP_W2, _AP_S2> &a2) {
    ap_int_base<_AP_W2, _AP_S2> op(a2);
    return ap_concat_ref<1, ap_bit_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >(
        *this, const_cast<ap_int_base<_AP_W2, _AP_S2>&>(op));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<1, ap_bit_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
  operator,(const volatile ap_int_base<_AP_W2, _AP_S2> &a2) {
    ap_int_base<_AP_W2, _AP_S2> op(a2);
    return ap_concat_ref<1, ap_bit_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >(
        *this, const_cast<ap_int_base<_AP_W2, _AP_S2>&>(op));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<1, ap_bit_ref, _AP_W2, ap_range_ref<_AP_W2, _AP_S2> >
  operator,(const ap_range_ref<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<1, ap_bit_ref, _AP_W2, ap_range_ref<_AP_W2, _AP_S2> >(
        *this, const_cast<ap_range_ref<_AP_W2, _AP_S2>&>(a2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<1, ap_bit_ref, 1, ap_bit_ref<_AP_W2, _AP_S2> > operator,(
      const ap_bit_ref<_AP_W2, _AP_S2> &a2) {
    return ap_concat_ref<1, ap_bit_ref, 1, ap_bit_ref<_AP_W2, _AP_S2> >(
        *this, const_cast<ap_bit_ref<_AP_W2, _AP_S2>&>(a2));
  }

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<1, ap_bit_ref, _AP_W2 + _AP_W3,
                       ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> >
  operator,(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> &a2) {
    return ap_concat_ref<1, ap_bit_ref, _AP_W2 + _AP_W3,
                         ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> >(
        *this, const_cast<ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>&>(a2));
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<
      1, ap_bit_ref, _AP_W2,
      af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >
  operator,(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> &a2) {
    return ap_concat_ref<
        1, ap_bit_ref, _AP_W2,
        af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >(
        *this,
        const_cast<
            af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&>(a2));
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<1, ap_bit_ref, 1, af_bit_ref<_AP_W2, _AP_I2, _AP_S2,
                                                    _AP_Q2, _AP_O2, _AP_N2> >
  operator,(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> &a2) {
    return ap_concat_ref<1, ap_bit_ref, 1, af_bit_ref<_AP_W2, _AP_I2, _AP_S2,
                                                      _AP_Q2, _AP_O2, _AP_N2> >(
        *this,
        const_cast<af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&>(
            a2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator==(const ap_bit_ref<_AP_W2, _AP_S2>& op) {
    return get() == op.get();
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator!=(const ap_bit_ref<_AP_W2, _AP_S2>& op) {
    return get() != op.get();
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) bool get() const { return ({ typeof(d_bv.V) __Val2__ = d_bv.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), d_index); __Result__; }); }

  inline __attribute__((always_inline)) __attribute__((nodebug)) bool get() { return ({ typeof(d_bv.V) __Val2__ = d_bv.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), d_index); __Result__; }); }

  template <int _AP_W3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) void set(const ap_int_base<_AP_W3, false>& val) {
    operator=(val);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator~() const {
    bool bit = ({ typeof(d_bv.V) __Val2__ = d_bv.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), d_index); __Result__; });
    return bit ? false : true;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) int length() const { return 1; }

  template <typename _RT>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator&=(const _RT& r) {
    operator=(get() & ap_int_base<1, false>(r));
    return *this;
  }

  template <typename _RT>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator|=(const _RT& r) {
    operator=(get() | ap_int_base<1, false>(r));
    return *this;
  }

  template <typename _RT>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_bit_ref& operator^=(const _RT& r) {
    operator=(get() ^ ap_int_base<1, false>(r));
    return *this;
  }





  inline __attribute__((always_inline)) __attribute__((nodebug)) char* to_string() const { return 0; }

};
# 1036 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_bit_ref<_AP_W, _AP_S>& op, bool op2) { return bool(op) > op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(bool op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 > bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, bool op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) > ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_bit_ref<_AP_W, _AP_S>& op, bool op2) { return bool(op) < op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(bool op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 < bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, bool op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) < ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_bit_ref<_AP_W, _AP_S>& op, bool op2) { return bool(op) >= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(bool op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 >= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, bool op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) >= ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_bit_ref<_AP_W, _AP_S>& op, bool op2) { return bool(op) <= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(bool op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 <= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, bool op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) <= ap_int_base<1, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_bit_ref<_AP_W, _AP_S>& op, char op2) { return bool(op) > op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 > bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) > ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_bit_ref<_AP_W, _AP_S>& op, char op2) { return bool(op) < op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 < bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) < ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_bit_ref<_AP_W, _AP_S>& op, char op2) { return bool(op) >= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 >= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) >= ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_bit_ref<_AP_W, _AP_S>& op, char op2) { return bool(op) <= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 <= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) <= ap_int_base<8, CHAR_IS_SIGNED>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_bit_ref<_AP_W, _AP_S>& op, signed char op2) { return bool(op) > op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(signed char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 > bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, signed char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) > ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_bit_ref<_AP_W, _AP_S>& op, signed char op2) { return bool(op) < op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(signed char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 < bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, signed char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) < ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_bit_ref<_AP_W, _AP_S>& op, signed char op2) { return bool(op) >= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(signed char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 >= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, signed char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) >= ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_bit_ref<_AP_W, _AP_S>& op, signed char op2) { return bool(op) <= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(signed char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 <= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, signed char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) <= ap_int_base<8, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned char op2) { return bool(op) > op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(unsigned char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 > bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) > ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned char op2) { return bool(op) < op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(unsigned char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 < bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) < ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned char op2) { return bool(op) >= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(unsigned char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 >= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) >= ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned char op2) { return bool(op) <= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(unsigned char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 <= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) <= ap_int_base<8, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_bit_ref<_AP_W, _AP_S>& op, short op2) { return bool(op) > op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(short op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 > bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, short op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) > ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_bit_ref<_AP_W, _AP_S>& op, short op2) { return bool(op) < op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(short op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 < bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, short op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) < ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_bit_ref<_AP_W, _AP_S>& op, short op2) { return bool(op) >= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(short op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 >= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, short op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) >= ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_bit_ref<_AP_W, _AP_S>& op, short op2) { return bool(op) <= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(short op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 <= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, short op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) <= ap_int_base<_AP_SIZE_short, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned short op2) { return bool(op) > op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(unsigned short op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 > bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned short op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) > ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned short op2) { return bool(op) < op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(unsigned short op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 < bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned short op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) < ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned short op2) { return bool(op) >= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(unsigned short op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 >= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned short op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) >= ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned short op2) { return bool(op) <= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(unsigned short op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 <= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned short op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) <= ap_int_base<_AP_SIZE_short, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_bit_ref<_AP_W, _AP_S>& op, int op2) { return bool(op) > op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(int op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 > bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, int op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) > ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_bit_ref<_AP_W, _AP_S>& op, int op2) { return bool(op) < op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(int op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 < bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, int op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) < ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_bit_ref<_AP_W, _AP_S>& op, int op2) { return bool(op) >= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(int op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 >= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, int op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) >= ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_bit_ref<_AP_W, _AP_S>& op, int op2) { return bool(op) <= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(int op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 <= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, int op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) <= ap_int_base<_AP_SIZE_int, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned int op2) { return bool(op) > op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(unsigned int op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 > bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned int op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) > ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned int op2) { return bool(op) < op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(unsigned int op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 < bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned int op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) < ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned int op2) { return bool(op) >= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(unsigned int op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 >= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned int op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) >= ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned int op2) { return bool(op) <= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(unsigned int op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 <= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned int op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) <= ap_int_base<_AP_SIZE_int, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_bit_ref<_AP_W, _AP_S>& op, long op2) { return bool(op) > op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(long op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 > bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, long op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) > ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_bit_ref<_AP_W, _AP_S>& op, long op2) { return bool(op) < op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(long op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 < bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, long op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) < ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_bit_ref<_AP_W, _AP_S>& op, long op2) { return bool(op) >= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(long op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 >= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, long op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) >= ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_bit_ref<_AP_W, _AP_S>& op, long op2) { return bool(op) <= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(long op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 <= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, long op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) <= ap_int_base<_AP_SIZE_long, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned long op2) { return bool(op) > op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(unsigned long op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 > bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned long op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) > ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned long op2) { return bool(op) < op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(unsigned long op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 < bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned long op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) < ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned long op2) { return bool(op) >= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(unsigned long op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 >= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned long op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) >= ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned long op2) { return bool(op) <= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(unsigned long op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 <= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned long op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) <= ap_int_base<_AP_SIZE_long, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_bit_ref<_AP_W, _AP_S>& op, ap_slong op2) { return bool(op) > op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(ap_slong op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 > bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, ap_slong op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) > ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_bit_ref<_AP_W, _AP_S>& op, ap_slong op2) { return bool(op) < op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(ap_slong op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 < bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, ap_slong op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) < ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_bit_ref<_AP_W, _AP_S>& op, ap_slong op2) { return bool(op) >= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(ap_slong op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 >= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, ap_slong op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) >= ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_bit_ref<_AP_W, _AP_S>& op, ap_slong op2) { return bool(op) <= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(ap_slong op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 <= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, ap_slong op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) <= ap_int_base<_AP_SIZE_ap_slong, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_bit_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return bool(op) > op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(ap_ulong op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 > bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, ap_ulong op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) > ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_bit_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return bool(op) < op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(ap_ulong op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 < bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, ap_ulong op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) < ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_bit_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return bool(op) >= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(ap_ulong op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 >= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, ap_ulong op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) >= ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_bit_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return bool(op) <= op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(ap_ulong op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 <= bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, ap_ulong op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) <= ap_int_base<_AP_SIZE_ap_slong, false>(op2); }






template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_bit_ref<_AP_W, _AP_S>& op, bool op2) { return bool(op) == op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(bool op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 == bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, bool op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) == ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<1, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_bit_ref<_AP_W, _AP_S>& op, bool op2) { return bool(op) != op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(bool op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 != bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, bool op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) != ap_int_base<1, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_bit_ref<_AP_W, _AP_S>& op, char op2) { return bool(op) == op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 == bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) == ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<8, CHAR_IS_SIGNED>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_bit_ref<_AP_W, _AP_S>& op, char op2) { return bool(op) != op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 != bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) != ap_int_base<8, CHAR_IS_SIGNED>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_bit_ref<_AP_W, _AP_S>& op, signed char op2) { return bool(op) == op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(signed char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 == bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, signed char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) == ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<8, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_bit_ref<_AP_W, _AP_S>& op, signed char op2) { return bool(op) != op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(signed char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 != bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, signed char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) != ap_int_base<8, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned char op2) { return bool(op) == op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(unsigned char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 == bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) == ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<8, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned char op2) { return bool(op) != op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(unsigned char op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 != bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned char op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) != ap_int_base<8, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_bit_ref<_AP_W, _AP_S>& op, short op2) { return bool(op) == op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(short op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 == bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, short op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) == ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<_AP_SIZE_short, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_bit_ref<_AP_W, _AP_S>& op, short op2) { return bool(op) != op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(short op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 != bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, short op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) != ap_int_base<_AP_SIZE_short, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned short op2) { return bool(op) == op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(unsigned short op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 == bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned short op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) == ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<_AP_SIZE_short, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned short op2) { return bool(op) != op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(unsigned short op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 != bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned short op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) != ap_int_base<_AP_SIZE_short, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_bit_ref<_AP_W, _AP_S>& op, int op2) { return bool(op) == op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(int op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 == bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, int op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) == ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<_AP_SIZE_int, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_bit_ref<_AP_W, _AP_S>& op, int op2) { return bool(op) != op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(int op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 != bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, int op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) != ap_int_base<_AP_SIZE_int, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned int op2) { return bool(op) == op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(unsigned int op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 == bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned int op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) == ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<_AP_SIZE_int, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned int op2) { return bool(op) != op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(unsigned int op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 != bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned int op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) != ap_int_base<_AP_SIZE_int, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_bit_ref<_AP_W, _AP_S>& op, long op2) { return bool(op) == op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(long op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 == bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, long op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) == ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<_AP_SIZE_long, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_bit_ref<_AP_W, _AP_S>& op, long op2) { return bool(op) != op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(long op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 != bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, long op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) != ap_int_base<_AP_SIZE_long, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned long op2) { return bool(op) == op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(unsigned long op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 == bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned long op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) == ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<_AP_SIZE_long, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_bit_ref<_AP_W, _AP_S>& op, unsigned long op2) { return bool(op) != op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(unsigned long op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 != bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, unsigned long op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) != ap_int_base<_AP_SIZE_long, false>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_bit_ref<_AP_W, _AP_S>& op, ap_slong op2) { return bool(op) == op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(ap_slong op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 == bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, ap_slong op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) == ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<_AP_SIZE_ap_slong, true>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_bit_ref<_AP_W, _AP_S>& op, ap_slong op2) { return bool(op) != op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(ap_slong op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 != bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, ap_slong op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) != ap_int_base<_AP_SIZE_ap_slong, true>(op2); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_bit_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return bool(op) == op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(ap_ulong op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 == bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, ap_ulong op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) == ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<_AP_SIZE_ap_slong, false>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_bit_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return bool(op) != op2; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(ap_ulong op2, const ap_bit_ref<_AP_W, _AP_S>& op) { return op2 != bool(op); } template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1>& op, ap_ulong op2) { return ap_int_base<_AP_W + _AP_W1, false>(op) != ap_int_base<_AP_SIZE_ap_slong, false>(op2); }
# 1095 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(1), (false)>::plus operator +(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) + ap_int_base<(1), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(1), (false)>::template RType<_AP_W, false>::plus operator +(bool op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(1), (false)>(op2) + ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(1), (false)>::minus operator -(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) - ap_int_base<(1), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(1), (false)>::template RType<_AP_W, false>::minus operator -(bool op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(1), (false)>(op2) - ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(1), (false)>::mult operator *(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) * ap_int_base<(1), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(1), (false)>::template RType<_AP_W, false>::mult operator *(bool op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(1), (false)>(op2) * ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(1), (false)>::div operator /(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) / ap_int_base<(1), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(1), (false)>::template RType<_AP_W, false>::div operator /(bool op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(1), (false)>(op2) / ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(1), (false)>::mod operator %(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) % ap_int_base<(1), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(1), (false)>::template RType<_AP_W, false>::mod operator %(bool op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(1), (false)>(op2) % ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (CHAR_IS_SIGNED)>::plus operator +(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) + ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (CHAR_IS_SIGNED)>::template RType<_AP_W, false>::plus operator +(char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) + ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (CHAR_IS_SIGNED)>::minus operator -(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) - ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (CHAR_IS_SIGNED)>::template RType<_AP_W, false>::minus operator -(char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) - ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (CHAR_IS_SIGNED)>::mult operator *(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) * ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (CHAR_IS_SIGNED)>::template RType<_AP_W, false>::mult operator *(char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) * ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (CHAR_IS_SIGNED)>::div operator /(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) / ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (CHAR_IS_SIGNED)>::template RType<_AP_W, false>::div operator /(char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) / ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (CHAR_IS_SIGNED)>::mod operator %(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) % ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (CHAR_IS_SIGNED)>::template RType<_AP_W, false>::mod operator %(char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) % ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (true)>::plus operator +(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) + ap_int_base<(8), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (true)>::template RType<_AP_W, false>::plus operator +(signed char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (true)>(op2) + ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (true)>::minus operator -(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) - ap_int_base<(8), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (true)>::template RType<_AP_W, false>::minus operator -(signed char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (true)>(op2) - ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (true)>::mult operator *(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) * ap_int_base<(8), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (true)>::template RType<_AP_W, false>::mult operator *(signed char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (true)>(op2) * ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (true)>::div operator /(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) / ap_int_base<(8), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (true)>::template RType<_AP_W, false>::div operator /(signed char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (true)>(op2) / ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (true)>::mod operator %(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) % ap_int_base<(8), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (true)>::template RType<_AP_W, false>::mod operator %(signed char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (true)>(op2) % ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (false)>::plus operator +(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) + ap_int_base<(8), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (false)>::template RType<_AP_W, false>::plus operator +(unsigned char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (false)>(op2) + ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (false)>::minus operator -(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) - ap_int_base<(8), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (false)>::template RType<_AP_W, false>::minus operator -(unsigned char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (false)>(op2) - ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (false)>::mult operator *(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) * ap_int_base<(8), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (false)>::template RType<_AP_W, false>::mult operator *(unsigned char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (false)>(op2) * ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (false)>::div operator /(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) / ap_int_base<(8), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (false)>::template RType<_AP_W, false>::div operator /(unsigned char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (false)>(op2) / ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (false)>::mod operator %(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) % ap_int_base<(8), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (false)>::template RType<_AP_W, false>::mod operator %(unsigned char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (false)>(op2) % ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (true)>::plus operator +(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) + ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (true)>::template RType<_AP_W, false>::plus operator +(short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) + ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (true)>::minus operator -(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) - ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (true)>::template RType<_AP_W, false>::minus operator -(short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) - ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (true)>::mult operator *(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) * ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (true)>::template RType<_AP_W, false>::mult operator *(short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) * ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (true)>::div operator /(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) / ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (true)>::template RType<_AP_W, false>::div operator /(short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) / ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (true)>::mod operator %(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) % ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (true)>::template RType<_AP_W, false>::mod operator %(short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) % ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (false)>::plus operator +(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) + ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (false)>::template RType<_AP_W, false>::plus operator +(unsigned short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) + ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (false)>::minus operator -(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) - ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (false)>::template RType<_AP_W, false>::minus operator -(unsigned short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) - ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (false)>::mult operator *(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) * ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (false)>::template RType<_AP_W, false>::mult operator *(unsigned short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) * ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (false)>::div operator /(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) / ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (false)>::template RType<_AP_W, false>::div operator /(unsigned short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) / ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (false)>::mod operator %(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) % ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (false)>::template RType<_AP_W, false>::mod operator %(unsigned short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) % ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (true)>::plus operator +(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) + ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (true)>::template RType<_AP_W, false>::plus operator +(int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) + ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (true)>::minus operator -(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) - ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (true)>::template RType<_AP_W, false>::minus operator -(int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) - ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (true)>::mult operator *(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) * ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (true)>::template RType<_AP_W, false>::mult operator *(int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) * ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (true)>::div operator /(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) / ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (true)>::template RType<_AP_W, false>::div operator /(int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) / ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (true)>::mod operator %(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) % ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (true)>::template RType<_AP_W, false>::mod operator %(int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) % ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (false)>::plus operator +(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) + ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (false)>::template RType<_AP_W, false>::plus operator +(unsigned int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) + ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (false)>::minus operator -(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) - ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (false)>::template RType<_AP_W, false>::minus operator -(unsigned int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) - ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (false)>::mult operator *(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) * ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (false)>::template RType<_AP_W, false>::mult operator *(unsigned int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) * ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (false)>::div operator /(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) / ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (false)>::template RType<_AP_W, false>::div operator /(unsigned int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) / ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (false)>::mod operator %(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) % ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (false)>::template RType<_AP_W, false>::mod operator %(unsigned int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) % ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (true)>::plus operator +(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) + ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (true)>::template RType<_AP_W, false>::plus operator +(long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) + ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (true)>::minus operator -(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) - ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (true)>::template RType<_AP_W, false>::minus operator -(long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) - ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (true)>::mult operator *(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) * ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (true)>::template RType<_AP_W, false>::mult operator *(long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) * ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (true)>::div operator /(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) / ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (true)>::template RType<_AP_W, false>::div operator /(long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) / ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (true)>::mod operator %(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) % ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (true)>::template RType<_AP_W, false>::mod operator %(long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) % ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (false)>::plus operator +(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) + ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (false)>::template RType<_AP_W, false>::plus operator +(unsigned long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) + ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (false)>::minus operator -(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) - ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (false)>::template RType<_AP_W, false>::minus operator -(unsigned long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) - ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (false)>::mult operator *(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) * ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (false)>::template RType<_AP_W, false>::mult operator *(unsigned long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) * ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (false)>::div operator /(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) / ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (false)>::template RType<_AP_W, false>::div operator /(unsigned long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) / ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (false)>::mod operator %(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) % ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (false)>::template RType<_AP_W, false>::mod operator %(unsigned long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) % ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (true)>::plus operator +(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) + ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (true)>::template RType<_AP_W, false>::plus operator +(ap_slong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) + ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (true)>::minus operator -(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) - ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (true)>::template RType<_AP_W, false>::minus operator -(ap_slong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) - ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (true)>::mult operator *(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) * ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (true)>::template RType<_AP_W, false>::mult operator *(ap_slong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) * ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (true)>::div operator /(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) / ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (true)>::template RType<_AP_W, false>::div operator /(ap_slong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) / ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (true)>::mod operator %(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) % ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (true)>::template RType<_AP_W, false>::mod operator %(ap_slong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) % ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (false)>::plus operator +(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) + ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (false)>::template RType<_AP_W, false>::plus operator +(ap_ulong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) + ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (false)>::minus operator -(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) - ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (false)>::template RType<_AP_W, false>::minus operator -(ap_ulong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) - ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (false)>::mult operator *(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) * ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (false)>::template RType<_AP_W, false>::mult operator *(ap_ulong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) * ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (false)>::div operator /(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) / ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (false)>::template RType<_AP_W, false>::div operator /(ap_ulong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) / ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (false)>::mod operator %(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) % ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (false)>::template RType<_AP_W, false>::mod operator %(ap_ulong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) % ap_int_base<_AP_W, false>(op); }
# 1118 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(1), (false)>::logic operator &(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) & ap_int_base<(1), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(1), (false)>::template RType<_AP_W, false>::logic operator &(bool op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(1), (false)>(op2) & ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(1), (false)>::logic operator |(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) | ap_int_base<(1), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(1), (false)>::template RType<_AP_W, false>::logic operator |(bool op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(1), (false)>(op2) | ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(1), (false)>::logic operator ^(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) ^ ap_int_base<(1), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(1), (false)>::template RType<_AP_W, false>::logic operator ^(bool op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(1), (false)>(op2) ^ ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(1), (false)>::arg1 operator >>(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) >> ap_int_base<(1), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(1), (false)>::template RType<_AP_W, false>::arg1 operator >>(bool op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(1), (false)>(op2) >> ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(1), (false)>::arg1 operator <<(const ap_range_ref<_AP_W, _AP_S>& op, bool op2) { return ap_int_base<_AP_W, false>(op) << ap_int_base<(1), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(1), (false)>::template RType<_AP_W, false>::arg1 operator <<(bool op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(1), (false)>(op2) << ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (CHAR_IS_SIGNED)>::logic operator &(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) & ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (CHAR_IS_SIGNED)>::template RType<_AP_W, false>::logic operator &(char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) & ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (CHAR_IS_SIGNED)>::logic operator |(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) | ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (CHAR_IS_SIGNED)>::template RType<_AP_W, false>::logic operator |(char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) | ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (CHAR_IS_SIGNED)>::logic operator ^(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) ^ ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (CHAR_IS_SIGNED)>::template RType<_AP_W, false>::logic operator ^(char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) ^ ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (CHAR_IS_SIGNED)>::arg1 operator >>(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) >> ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (CHAR_IS_SIGNED)>::template RType<_AP_W, false>::arg1 operator >>(char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) >> ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (CHAR_IS_SIGNED)>::arg1 operator <<(const ap_range_ref<_AP_W, _AP_S>& op, char op2) { return ap_int_base<_AP_W, false>(op) << ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (CHAR_IS_SIGNED)>::template RType<_AP_W, false>::arg1 operator <<(char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) << ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (true)>::logic operator &(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) & ap_int_base<(8), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (true)>::template RType<_AP_W, false>::logic operator &(signed char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (true)>(op2) & ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (true)>::logic operator |(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) | ap_int_base<(8), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (true)>::template RType<_AP_W, false>::logic operator |(signed char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (true)>(op2) | ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (true)>::logic operator ^(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) ^ ap_int_base<(8), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (true)>::template RType<_AP_W, false>::logic operator ^(signed char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (true)>(op2) ^ ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (true)>::arg1 operator >>(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) >> ap_int_base<(8), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (true)>::template RType<_AP_W, false>::arg1 operator >>(signed char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (true)>(op2) >> ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (true)>::arg1 operator <<(const ap_range_ref<_AP_W, _AP_S>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) << ap_int_base<(8), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (true)>::template RType<_AP_W, false>::arg1 operator <<(signed char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (true)>(op2) << ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (false)>::logic operator &(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) & ap_int_base<(8), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (false)>::template RType<_AP_W, false>::logic operator &(unsigned char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (false)>(op2) & ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (false)>::logic operator |(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) | ap_int_base<(8), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (false)>::template RType<_AP_W, false>::logic operator |(unsigned char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (false)>(op2) | ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (false)>::logic operator ^(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) ^ ap_int_base<(8), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (false)>::template RType<_AP_W, false>::logic operator ^(unsigned char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (false)>(op2) ^ ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (false)>::arg1 operator >>(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) >> ap_int_base<(8), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (false)>::template RType<_AP_W, false>::arg1 operator >>(unsigned char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (false)>(op2) >> ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(8), (false)>::arg1 operator <<(const ap_range_ref<_AP_W, _AP_S>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) << ap_int_base<(8), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(8), (false)>::template RType<_AP_W, false>::arg1 operator <<(unsigned char op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(8), (false)>(op2) << ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (true)>::logic operator &(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) & ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (true)>::template RType<_AP_W, false>::logic operator &(short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) & ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (true)>::logic operator |(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) | ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (true)>::template RType<_AP_W, false>::logic operator |(short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) | ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (true)>::logic operator ^(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) ^ ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (true)>::template RType<_AP_W, false>::logic operator ^(short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) ^ ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (true)>::arg1 operator >>(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) >> ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (true)>::template RType<_AP_W, false>::arg1 operator >>(short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) >> ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (true)>::arg1 operator <<(const ap_range_ref<_AP_W, _AP_S>& op, short op2) { return ap_int_base<_AP_W, false>(op) << ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (true)>::template RType<_AP_W, false>::arg1 operator <<(short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) << ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (false)>::logic operator &(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) & ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (false)>::template RType<_AP_W, false>::logic operator &(unsigned short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) & ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (false)>::logic operator |(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) | ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (false)>::template RType<_AP_W, false>::logic operator |(unsigned short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) | ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (false)>::logic operator ^(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) ^ ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (false)>::template RType<_AP_W, false>::logic operator ^(unsigned short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) ^ ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (false)>::arg1 operator >>(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) >> ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (false)>::template RType<_AP_W, false>::arg1 operator >>(unsigned short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) >> ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_short), (false)>::arg1 operator <<(const ap_range_ref<_AP_W, _AP_S>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) << ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_short), (false)>::template RType<_AP_W, false>::arg1 operator <<(unsigned short op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) << ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (true)>::logic operator &(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) & ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (true)>::template RType<_AP_W, false>::logic operator &(int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) & ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (true)>::logic operator |(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) | ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (true)>::template RType<_AP_W, false>::logic operator |(int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) | ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (true)>::logic operator ^(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) ^ ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (true)>::template RType<_AP_W, false>::logic operator ^(int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) ^ ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (true)>::arg1 operator >>(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) >> ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (true)>::template RType<_AP_W, false>::arg1 operator >>(int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) >> ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (true)>::arg1 operator <<(const ap_range_ref<_AP_W, _AP_S>& op, int op2) { return ap_int_base<_AP_W, false>(op) << ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (true)>::template RType<_AP_W, false>::arg1 operator <<(int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) << ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (false)>::logic operator &(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) & ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (false)>::template RType<_AP_W, false>::logic operator &(unsigned int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) & ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (false)>::logic operator |(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) | ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (false)>::template RType<_AP_W, false>::logic operator |(unsigned int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) | ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (false)>::logic operator ^(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) ^ ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (false)>::template RType<_AP_W, false>::logic operator ^(unsigned int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) ^ ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (false)>::arg1 operator >>(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) >> ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (false)>::template RType<_AP_W, false>::arg1 operator >>(unsigned int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) >> ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_int), (false)>::arg1 operator <<(const ap_range_ref<_AP_W, _AP_S>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) << ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_int), (false)>::template RType<_AP_W, false>::arg1 operator <<(unsigned int op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) << ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (true)>::logic operator &(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) & ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (true)>::template RType<_AP_W, false>::logic operator &(long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) & ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (true)>::logic operator |(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) | ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (true)>::template RType<_AP_W, false>::logic operator |(long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) | ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (true)>::logic operator ^(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) ^ ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (true)>::template RType<_AP_W, false>::logic operator ^(long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) ^ ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (true)>::arg1 operator >>(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) >> ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (true)>::template RType<_AP_W, false>::arg1 operator >>(long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) >> ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (true)>::arg1 operator <<(const ap_range_ref<_AP_W, _AP_S>& op, long op2) { return ap_int_base<_AP_W, false>(op) << ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (true)>::template RType<_AP_W, false>::arg1 operator <<(long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) << ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (false)>::logic operator &(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) & ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (false)>::template RType<_AP_W, false>::logic operator &(unsigned long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) & ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (false)>::logic operator |(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) | ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (false)>::template RType<_AP_W, false>::logic operator |(unsigned long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) | ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (false)>::logic operator ^(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) ^ ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (false)>::template RType<_AP_W, false>::logic operator ^(unsigned long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) ^ ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (false)>::arg1 operator >>(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) >> ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (false)>::template RType<_AP_W, false>::arg1 operator >>(unsigned long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) >> ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_long), (false)>::arg1 operator <<(const ap_range_ref<_AP_W, _AP_S>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) << ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_long), (false)>::template RType<_AP_W, false>::arg1 operator <<(unsigned long op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) << ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (true)>::logic operator &(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) & ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (true)>::template RType<_AP_W, false>::logic operator &(ap_slong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) & ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (true)>::logic operator |(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) | ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (true)>::template RType<_AP_W, false>::logic operator |(ap_slong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) | ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (true)>::logic operator ^(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) ^ ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (true)>::template RType<_AP_W, false>::logic operator ^(ap_slong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) ^ ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (true)>::arg1 operator >>(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) >> ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (true)>::template RType<_AP_W, false>::arg1 operator >>(ap_slong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) >> ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (true)>::arg1 operator <<(const ap_range_ref<_AP_W, _AP_S>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) << ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (true)>::template RType<_AP_W, false>::arg1 operator <<(ap_slong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) << ap_int_base<_AP_W, false>(op); }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (false)>::logic operator &(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) & ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (false)>::template RType<_AP_W, false>::logic operator &(ap_ulong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) & ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (false)>::logic operator |(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) | ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (false)>::template RType<_AP_W, false>::logic operator |(ap_ulong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) | ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (false)>::logic operator ^(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) ^ ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (false)>::template RType<_AP_W, false>::logic operator ^(ap_ulong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) ^ ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (false)>::arg1 operator >>(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) >> ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (false)>::template RType<_AP_W, false>::arg1 operator >>(ap_ulong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) >> ap_int_base<_AP_W, false>(op); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<(_AP_SIZE_ap_slong), (false)>::arg1 operator <<(const ap_range_ref<_AP_W, _AP_S>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) << ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<(_AP_SIZE_ap_slong), (false)>::template RType<_AP_W, false>::arg1 operator <<(ap_ulong op2, const ap_range_ref<_AP_W, _AP_S>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) << ap_int_base<_AP_W, false>(op); }
# 1146 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<_AP_W2, false>::plus operator +(const ap_range_ref<_AP_W, _AP_S>& lhs, const ap_range_ref<_AP_W2, _AP_S2>& rhs) { return (lhs.operator ap_int_base<_AP_W, false>())+( rhs.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<_AP_W2, false>::minus operator -(const ap_range_ref<_AP_W, _AP_S>& lhs, const ap_range_ref<_AP_W2, _AP_S2>& rhs) { return (lhs.operator ap_int_base<_AP_W, false>())-( rhs.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<_AP_W2, false>::mult operator *(const ap_range_ref<_AP_W, _AP_S>& lhs, const ap_range_ref<_AP_W2, _AP_S2>& rhs) { return (lhs.operator ap_int_base<_AP_W, false>())*( rhs.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<_AP_W2, false>::div operator /(const ap_range_ref<_AP_W, _AP_S>& lhs, const ap_range_ref<_AP_W2, _AP_S2>& rhs) { return (lhs.operator ap_int_base<_AP_W, false>())/( rhs.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<_AP_W2, false>::mod operator %(const ap_range_ref<_AP_W, _AP_S>& lhs, const ap_range_ref<_AP_W2, _AP_S2>& rhs) { return (lhs.operator ap_int_base<_AP_W, false>())%( rhs.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<_AP_W2, false>::logic operator &(const ap_range_ref<_AP_W, _AP_S>& lhs, const ap_range_ref<_AP_W2, _AP_S2>& rhs) { return (lhs.operator ap_int_base<_AP_W, false>())&( rhs.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<_AP_W2, false>::logic operator |(const ap_range_ref<_AP_W, _AP_S>& lhs, const ap_range_ref<_AP_W2, _AP_S2>& rhs) { return (lhs.operator ap_int_base<_AP_W, false>())|( rhs.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<_AP_W2, false>::logic operator ^(const ap_range_ref<_AP_W, _AP_S>& lhs, const ap_range_ref<_AP_W2, _AP_S2>& rhs) { return (lhs.operator ap_int_base<_AP_W, false>())^( rhs.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<_AP_W2, false>::arg1 operator >>(const ap_range_ref<_AP_W, _AP_S>& lhs, const ap_range_ref<_AP_W2, _AP_S2>& rhs) { return (lhs.operator ap_int_base<_AP_W, false>())>>( rhs.operator ap_int_base<_AP_W2, false>()); }
template <int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_W, false>::template RType<_AP_W2, false>::arg1 operator <<(const ap_range_ref<_AP_W, _AP_S>& lhs, const ap_range_ref<_AP_W2, _AP_S2>& rhs) { return (lhs.operator ap_int_base<_AP_W, false>())<<( rhs.operator ap_int_base<_AP_W2, false>()); }
# 1195 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
template <int _AP_LW1, typename _AP_LT1, int _AP_LW2, typename _AP_LT2, int _AP_RW1, typename _AP_RT1, int _AP_RW2, typename _AP_RT2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_LW1 + _AP_LW2, false>::template RType< _AP_RW1 + _AP_RW2, false>::plus operator +( const ap_concat_ref<_AP_LW1, _AP_LT1, _AP_LW2, _AP_LT2>& lhs, const ap_concat_ref<_AP_RW1, _AP_RT1, _AP_RW2, _AP_RT2>& rhs) { return lhs.get() + rhs.get(); }
template <int _AP_LW1, typename _AP_LT1, int _AP_LW2, typename _AP_LT2, int _AP_RW1, typename _AP_RT1, int _AP_RW2, typename _AP_RT2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_LW1 + _AP_LW2, false>::template RType< _AP_RW1 + _AP_RW2, false>::minus operator -( const ap_concat_ref<_AP_LW1, _AP_LT1, _AP_LW2, _AP_LT2>& lhs, const ap_concat_ref<_AP_RW1, _AP_RT1, _AP_RW2, _AP_RT2>& rhs) { return lhs.get() - rhs.get(); }
template <int _AP_LW1, typename _AP_LT1, int _AP_LW2, typename _AP_LT2, int _AP_RW1, typename _AP_RT1, int _AP_RW2, typename _AP_RT2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_LW1 + _AP_LW2, false>::template RType< _AP_RW1 + _AP_RW2, false>::mult operator *( const ap_concat_ref<_AP_LW1, _AP_LT1, _AP_LW2, _AP_LT2>& lhs, const ap_concat_ref<_AP_RW1, _AP_RT1, _AP_RW2, _AP_RT2>& rhs) { return lhs.get() * rhs.get(); }
template <int _AP_LW1, typename _AP_LT1, int _AP_LW2, typename _AP_LT2, int _AP_RW1, typename _AP_RT1, int _AP_RW2, typename _AP_RT2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_LW1 + _AP_LW2, false>::template RType< _AP_RW1 + _AP_RW2, false>::div operator /( const ap_concat_ref<_AP_LW1, _AP_LT1, _AP_LW2, _AP_LT2>& lhs, const ap_concat_ref<_AP_RW1, _AP_RT1, _AP_RW2, _AP_RT2>& rhs) { return lhs.get() / rhs.get(); }
template <int _AP_LW1, typename _AP_LT1, int _AP_LW2, typename _AP_LT2, int _AP_RW1, typename _AP_RT1, int _AP_RW2, typename _AP_RT2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_LW1 + _AP_LW2, false>::template RType< _AP_RW1 + _AP_RW2, false>::mod operator %( const ap_concat_ref<_AP_LW1, _AP_LT1, _AP_LW2, _AP_LT2>& lhs, const ap_concat_ref<_AP_RW1, _AP_RT1, _AP_RW2, _AP_RT2>& rhs) { return lhs.get() % rhs.get(); }
template <int _AP_LW1, typename _AP_LT1, int _AP_LW2, typename _AP_LT2, int _AP_RW1, typename _AP_RT1, int _AP_RW2, typename _AP_RT2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_LW1 + _AP_LW2, false>::template RType< _AP_RW1 + _AP_RW2, false>::logic operator &( const ap_concat_ref<_AP_LW1, _AP_LT1, _AP_LW2, _AP_LT2>& lhs, const ap_concat_ref<_AP_RW1, _AP_RT1, _AP_RW2, _AP_RT2>& rhs) { return lhs.get() & rhs.get(); }
template <int _AP_LW1, typename _AP_LT1, int _AP_LW2, typename _AP_LT2, int _AP_RW1, typename _AP_RT1, int _AP_RW2, typename _AP_RT2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_LW1 + _AP_LW2, false>::template RType< _AP_RW1 + _AP_RW2, false>::logic operator |( const ap_concat_ref<_AP_LW1, _AP_LT1, _AP_LW2, _AP_LT2>& lhs, const ap_concat_ref<_AP_RW1, _AP_RT1, _AP_RW2, _AP_RT2>& rhs) { return lhs.get() | rhs.get(); }
template <int _AP_LW1, typename _AP_LT1, int _AP_LW2, typename _AP_LT2, int _AP_RW1, typename _AP_RT1, int _AP_RW2, typename _AP_RT2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_LW1 + _AP_LW2, false>::template RType< _AP_RW1 + _AP_RW2, false>::logic operator ^( const ap_concat_ref<_AP_LW1, _AP_LT1, _AP_LW2, _AP_LT2>& lhs, const ap_concat_ref<_AP_RW1, _AP_RT1, _AP_RW2, _AP_RT2>& rhs) { return lhs.get() ^ rhs.get(); }
template <int _AP_LW1, typename _AP_LT1, int _AP_LW2, typename _AP_LT2, int _AP_RW1, typename _AP_RT1, int _AP_RW2, typename _AP_RT2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_LW1 + _AP_LW2, false>::template RType< _AP_RW1 + _AP_RW2, false>::arg1 operator >>( const ap_concat_ref<_AP_LW1, _AP_LT1, _AP_LW2, _AP_LT2>& lhs, const ap_concat_ref<_AP_RW1, _AP_RT1, _AP_RW2, _AP_RT2>& rhs) { return lhs.get() >> rhs.get(); }
template <int _AP_LW1, typename _AP_LT1, int _AP_LW2, typename _AP_LT2, int _AP_RW1, typename _AP_RT1, int _AP_RW2, typename _AP_RT2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_int_base<_AP_LW1 + _AP_LW2, false>::template RType< _AP_RW1 + _AP_RW2, false>::arg1 operator <<( const ap_concat_ref<_AP_LW1, _AP_LT1, _AP_LW2, _AP_LT2>& lhs, const ap_concat_ref<_AP_RW1, _AP_RT1, _AP_RW2, _AP_RT2>& rhs) { return lhs.get() << rhs.get(); }
# 1342 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 1, false> operator,( const ap_int_base<_AP_W, _AP_S> &op1, bool op2) { ap_int_base<1 + _AP_W, false> val(op2); ap_int_base<1 + _AP_W, false> ret(op1); ret <<= 1; if (false) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 1, false> operator,( bool op1, const ap_int_base<_AP_W, _AP_S> &op2) { ap_int_base<1 + _AP_W, false> val(op1); ap_int_base<1 + _AP_W, false> ret(op2); if (_AP_S) { ret <<= 1; ret >>= 1; } ret |= val << _AP_W; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 1, false> operator,( const ap_range_ref<_AP_W, _AP_S> &op1, bool op2) { ap_int_base<1 + _AP_W, false> val(op2); ap_int_base<1 + _AP_W, false> ret(op1); ret <<= 1; if (false) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 1, false> operator,( bool op1, const ap_range_ref<_AP_W, _AP_S> &op2) { ap_int_base<1 + _AP_W, false> val(op1); ap_int_base<1 + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + 1, false> operator,( const ap_bit_ref<_AP_W, _AP_S> &op1, bool op2) { ap_int_base<1 + 1, false> val(op2); val[1] = op1; return val; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + 1, false> operator,( bool op1, const ap_bit_ref<_AP_W, _AP_S> &op2) { ap_int_base<1 + 1, false> val(op1); val <<= 1; val[0] = op2; return val; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + 1, false> operator,( const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op1, bool op2) { ap_int_base<1 + _AP_W + _AP_W2, false> val(op2); ap_int_base<1 + _AP_W + _AP_W2, false> ret(op1); if (false) { val <<= _AP_W + _AP_W2; val >>= _AP_W + _AP_W2; } ret <<= 1; ret |= val; return ret; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + 1, false> operator,( bool op1, const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op2) { ap_int_base<1 + _AP_W + _AP_W2, false> val(op1); ap_int_base<1 + _AP_W + _AP_W2, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 1, false> operator,( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, bool op2) { ap_int_base<1 + _AP_W, false> val(op2); ap_int_base<1 + _AP_W, false> ret(op1); if (false) { val <<= _AP_W; val >>= _AP_W; } ret <<= 1; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 1, false> operator,( bool op1, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<1 + _AP_W, false> val(op1); ap_int_base<1 + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + 1, false> operator,( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, bool op2) { ap_int_base<1 + 1, false> val(op2); val[1] = op1; return val; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + 1, false> operator,( bool op1, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<1 + 1, false> val(op1); val <<= 1; val[0] = op2; return val; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( const ap_int_base<_AP_W, _AP_S> &op1, char op2) { ap_int_base<8 + _AP_W, false> val(op2); ap_int_base<8 + _AP_W, false> ret(op1); ret <<= 8; if (CHAR_IS_SIGNED) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( char op1, const ap_int_base<_AP_W, _AP_S> &op2) { ap_int_base<8 + _AP_W, false> val(op1); ap_int_base<8 + _AP_W, false> ret(op2); if (_AP_S) { ret <<= 8; ret >>= 8; } ret |= val << _AP_W; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( const ap_range_ref<_AP_W, _AP_S> &op1, char op2) { ap_int_base<8 + _AP_W, false> val(op2); ap_int_base<8 + _AP_W, false> ret(op1); ret <<= 8; if (CHAR_IS_SIGNED) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( char op1, const ap_range_ref<_AP_W, _AP_S> &op2) { ap_int_base<8 + _AP_W, false> val(op1); ap_int_base<8 + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<8 + 1, false> operator,( const ap_bit_ref<_AP_W, _AP_S> &op1, char op2) { ap_int_base<8 + 1, false> val(op2); val[8] = op1; return val; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<8 + 1, false> operator,( char op1, const ap_bit_ref<_AP_W, _AP_S> &op2) { ap_int_base<8 + 1, false> val(op1); val <<= 1; val[0] = op2; return val; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + 8, false> operator,( const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op1, char op2) { ap_int_base<8 + _AP_W + _AP_W2, CHAR_IS_SIGNED> val(op2); ap_int_base<8 + _AP_W + _AP_W2, CHAR_IS_SIGNED> ret(op1); if (CHAR_IS_SIGNED) { val <<= _AP_W + _AP_W2; val >>= _AP_W + _AP_W2; } ret <<= 8; ret |= val; return ret; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + 8, false> operator,( char op1, const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op2) { ap_int_base<8 + _AP_W + _AP_W2, CHAR_IS_SIGNED> val(op1); ap_int_base<8 + _AP_W + _AP_W2, CHAR_IS_SIGNED> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, char op2) { ap_int_base<8 + _AP_W, false> val(op2); ap_int_base<8 + _AP_W, false> ret(op1); if (CHAR_IS_SIGNED) { val <<= _AP_W; val >>= _AP_W; } ret <<= 8; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( char op1, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<8 + _AP_W, false> val(op1); ap_int_base<8 + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + 8, false> operator,( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, char op2) { ap_int_base<8 + 1, CHAR_IS_SIGNED> val(op2); val[8] = op1; return val; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + 8, false> operator,( char op1, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<8 + 1, CHAR_IS_SIGNED> val(op1); val <<= 1; val[0] = op2; return val; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( const ap_int_base<_AP_W, _AP_S> &op1, signed char op2) { ap_int_base<8 + _AP_W, false> val(op2); ap_int_base<8 + _AP_W, false> ret(op1); ret <<= 8; if (true) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( signed char op1, const ap_int_base<_AP_W, _AP_S> &op2) { ap_int_base<8 + _AP_W, false> val(op1); ap_int_base<8 + _AP_W, false> ret(op2); if (_AP_S) { ret <<= 8; ret >>= 8; } ret |= val << _AP_W; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( const ap_range_ref<_AP_W, _AP_S> &op1, signed char op2) { ap_int_base<8 + _AP_W, false> val(op2); ap_int_base<8 + _AP_W, false> ret(op1); ret <<= 8; if (true) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( signed char op1, const ap_range_ref<_AP_W, _AP_S> &op2) { ap_int_base<8 + _AP_W, false> val(op1); ap_int_base<8 + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<8 + 1, false> operator,( const ap_bit_ref<_AP_W, _AP_S> &op1, signed char op2) { ap_int_base<8 + 1, false> val(op2); val[8] = op1; return val; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<8 + 1, false> operator,( signed char op1, const ap_bit_ref<_AP_W, _AP_S> &op2) { ap_int_base<8 + 1, false> val(op1); val <<= 1; val[0] = op2; return val; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + 8, false> operator,( const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op1, signed char op2) { ap_int_base<8 + _AP_W + _AP_W2, true> val(op2); ap_int_base<8 + _AP_W + _AP_W2, true> ret(op1); if (true) { val <<= _AP_W + _AP_W2; val >>= _AP_W + _AP_W2; } ret <<= 8; ret |= val; return ret; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + 8, false> operator,( signed char op1, const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op2) { ap_int_base<8 + _AP_W + _AP_W2, true> val(op1); ap_int_base<8 + _AP_W + _AP_W2, true> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, signed char op2) { ap_int_base<8 + _AP_W, false> val(op2); ap_int_base<8 + _AP_W, false> ret(op1); if (true) { val <<= _AP_W; val >>= _AP_W; } ret <<= 8; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( signed char op1, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<8 + _AP_W, false> val(op1); ap_int_base<8 + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + 8, false> operator,( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, signed char op2) { ap_int_base<8 + 1, true> val(op2); val[8] = op1; return val; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + 8, false> operator,( signed char op1, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<8 + 1, true> val(op1); val <<= 1; val[0] = op2; return val; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( const ap_int_base<_AP_W, _AP_S> &op1, unsigned char op2) { ap_int_base<8 + _AP_W, false> val(op2); ap_int_base<8 + _AP_W, false> ret(op1); ret <<= 8; if (false) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( unsigned char op1, const ap_int_base<_AP_W, _AP_S> &op2) { ap_int_base<8 + _AP_W, false> val(op1); ap_int_base<8 + _AP_W, false> ret(op2); if (_AP_S) { ret <<= 8; ret >>= 8; } ret |= val << _AP_W; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( const ap_range_ref<_AP_W, _AP_S> &op1, unsigned char op2) { ap_int_base<8 + _AP_W, false> val(op2); ap_int_base<8 + _AP_W, false> ret(op1); ret <<= 8; if (false) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( unsigned char op1, const ap_range_ref<_AP_W, _AP_S> &op2) { ap_int_base<8 + _AP_W, false> val(op1); ap_int_base<8 + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<8 + 1, false> operator,( const ap_bit_ref<_AP_W, _AP_S> &op1, unsigned char op2) { ap_int_base<8 + 1, false> val(op2); val[8] = op1; return val; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<8 + 1, false> operator,( unsigned char op1, const ap_bit_ref<_AP_W, _AP_S> &op2) { ap_int_base<8 + 1, false> val(op1); val <<= 1; val[0] = op2; return val; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + 8, false> operator,( const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op1, unsigned char op2) { ap_int_base<8 + _AP_W + _AP_W2, false> val(op2); ap_int_base<8 + _AP_W + _AP_W2, false> ret(op1); if (false) { val <<= _AP_W + _AP_W2; val >>= _AP_W + _AP_W2; } ret <<= 8; ret |= val; return ret; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + 8, false> operator,( unsigned char op1, const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op2) { ap_int_base<8 + _AP_W + _AP_W2, false> val(op1); ap_int_base<8 + _AP_W + _AP_W2, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, unsigned char op2) { ap_int_base<8 + _AP_W, false> val(op2); ap_int_base<8 + _AP_W, false> ret(op1); if (false) { val <<= _AP_W; val >>= _AP_W; } ret <<= 8; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + 8, false> operator,( unsigned char op1, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<8 + _AP_W, false> val(op1); ap_int_base<8 + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + 8, false> operator,( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, unsigned char op2) { ap_int_base<8 + 1, false> val(op2); val[8] = op1; return val; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + 8, false> operator,( unsigned char op1, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<8 + 1, false> val(op1); val <<= 1; val[0] = op2; return val; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_short, false> operator,( const ap_int_base<_AP_W, _AP_S> &op1, short op2) { ap_int_base<_AP_SIZE_short + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_short + _AP_W, false> ret(op1); ret <<= _AP_SIZE_short; if (true) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_short, false> operator,( short op1, const ap_int_base<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_short + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_short + _AP_W, false> ret(op2); if (_AP_S) { ret <<= _AP_SIZE_short; ret >>= _AP_SIZE_short; } ret |= val << _AP_W; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_short, false> operator,( const ap_range_ref<_AP_W, _AP_S> &op1, short op2) { ap_int_base<_AP_SIZE_short + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_short + _AP_W, false> ret(op1); ret <<= _AP_SIZE_short; if (true) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_short, false> operator,( short op1, const ap_range_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_short + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_short + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_short + 1, false> operator,( const ap_bit_ref<_AP_W, _AP_S> &op1, short op2) { ap_int_base<_AP_SIZE_short + 1, false> val(op2); val[_AP_SIZE_short] = op1; return val; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_short + 1, false> operator,( short op1, const ap_bit_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_short + 1, false> val(op1); val <<= 1; val[0] = op2; return val; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_short, false> operator,( const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op1, short op2) { ap_int_base<_AP_SIZE_short + _AP_W + _AP_W2, true> val(op2); ap_int_base<_AP_SIZE_short + _AP_W + _AP_W2, true> ret(op1); if (true) { val <<= _AP_W + _AP_W2; val >>= _AP_W + _AP_W2; } ret <<= _AP_SIZE_short; ret |= val; return ret; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_short, false> operator,( short op1, const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op2) { ap_int_base<_AP_SIZE_short + _AP_W + _AP_W2, true> val(op1); ap_int_base<_AP_SIZE_short + _AP_W + _AP_W2, true> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_short, false> operator,( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, short op2) { ap_int_base<_AP_SIZE_short + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_short + _AP_W, false> ret(op1); if (true) { val <<= _AP_W; val >>= _AP_W; } ret <<= _AP_SIZE_short; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_short, false> operator,( short op1, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_short + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_short + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_short, false> operator,( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, short op2) { ap_int_base<_AP_SIZE_short + 1, true> val(op2); val[_AP_SIZE_short] = op1; return val; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_short, false> operator,( short op1, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_short + 1, true> val(op1); val <<= 1; val[0] = op2; return val; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_short, false> operator,( const ap_int_base<_AP_W, _AP_S> &op1, unsigned short op2) { ap_int_base<_AP_SIZE_short + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_short + _AP_W, false> ret(op1); ret <<= _AP_SIZE_short; if (false) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_short, false> operator,( unsigned short op1, const ap_int_base<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_short + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_short + _AP_W, false> ret(op2); if (_AP_S) { ret <<= _AP_SIZE_short; ret >>= _AP_SIZE_short; } ret |= val << _AP_W; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_short, false> operator,( const ap_range_ref<_AP_W, _AP_S> &op1, unsigned short op2) { ap_int_base<_AP_SIZE_short + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_short + _AP_W, false> ret(op1); ret <<= _AP_SIZE_short; if (false) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_short, false> operator,( unsigned short op1, const ap_range_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_short + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_short + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_short + 1, false> operator,( const ap_bit_ref<_AP_W, _AP_S> &op1, unsigned short op2) { ap_int_base<_AP_SIZE_short + 1, false> val(op2); val[_AP_SIZE_short] = op1; return val; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_short + 1, false> operator,( unsigned short op1, const ap_bit_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_short + 1, false> val(op1); val <<= 1; val[0] = op2; return val; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_short, false> operator,( const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op1, unsigned short op2) { ap_int_base<_AP_SIZE_short + _AP_W + _AP_W2, false> val(op2); ap_int_base<_AP_SIZE_short + _AP_W + _AP_W2, false> ret(op1); if (false) { val <<= _AP_W + _AP_W2; val >>= _AP_W + _AP_W2; } ret <<= _AP_SIZE_short; ret |= val; return ret; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_short, false> operator,( unsigned short op1, const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op2) { ap_int_base<_AP_SIZE_short + _AP_W + _AP_W2, false> val(op1); ap_int_base<_AP_SIZE_short + _AP_W + _AP_W2, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_short, false> operator,( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, unsigned short op2) { ap_int_base<_AP_SIZE_short + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_short + _AP_W, false> ret(op1); if (false) { val <<= _AP_W; val >>= _AP_W; } ret <<= _AP_SIZE_short; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_short, false> operator,( unsigned short op1, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_short + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_short + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_short, false> operator,( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, unsigned short op2) { ap_int_base<_AP_SIZE_short + 1, false> val(op2); val[_AP_SIZE_short] = op1; return val; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_short, false> operator,( unsigned short op1, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_short + 1, false> val(op1); val <<= 1; val[0] = op2; return val; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_int, false> operator,( const ap_int_base<_AP_W, _AP_S> &op1, int op2) { ap_int_base<_AP_SIZE_int + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_int + _AP_W, false> ret(op1); ret <<= _AP_SIZE_int; if (true) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_int, false> operator,( int op1, const ap_int_base<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_int + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_int + _AP_W, false> ret(op2); if (_AP_S) { ret <<= _AP_SIZE_int; ret >>= _AP_SIZE_int; } ret |= val << _AP_W; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_int, false> operator,( const ap_range_ref<_AP_W, _AP_S> &op1, int op2) { ap_int_base<_AP_SIZE_int + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_int + _AP_W, false> ret(op1); ret <<= _AP_SIZE_int; if (true) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_int, false> operator,( int op1, const ap_range_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_int + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_int + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_int + 1, false> operator,( const ap_bit_ref<_AP_W, _AP_S> &op1, int op2) { ap_int_base<_AP_SIZE_int + 1, false> val(op2); val[_AP_SIZE_int] = op1; return val; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_int + 1, false> operator,( int op1, const ap_bit_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_int + 1, false> val(op1); val <<= 1; val[0] = op2; return val; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_int, false> operator,( const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op1, int op2) { ap_int_base<_AP_SIZE_int + _AP_W + _AP_W2, true> val(op2); ap_int_base<_AP_SIZE_int + _AP_W + _AP_W2, true> ret(op1); if (true) { val <<= _AP_W + _AP_W2; val >>= _AP_W + _AP_W2; } ret <<= _AP_SIZE_int; ret |= val; return ret; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_int, false> operator,( int op1, const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op2) { ap_int_base<_AP_SIZE_int + _AP_W + _AP_W2, true> val(op1); ap_int_base<_AP_SIZE_int + _AP_W + _AP_W2, true> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_int, false> operator,( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, int op2) { ap_int_base<_AP_SIZE_int + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_int + _AP_W, false> ret(op1); if (true) { val <<= _AP_W; val >>= _AP_W; } ret <<= _AP_SIZE_int; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_int, false> operator,( int op1, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_int + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_int + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_int, false> operator,( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, int op2) { ap_int_base<_AP_SIZE_int + 1, true> val(op2); val[_AP_SIZE_int] = op1; return val; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_int, false> operator,( int op1, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_int + 1, true> val(op1); val <<= 1; val[0] = op2; return val; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_int, false> operator,( const ap_int_base<_AP_W, _AP_S> &op1, unsigned int op2) { ap_int_base<_AP_SIZE_int + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_int + _AP_W, false> ret(op1); ret <<= _AP_SIZE_int; if (false) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_int, false> operator,( unsigned int op1, const ap_int_base<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_int + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_int + _AP_W, false> ret(op2); if (_AP_S) { ret <<= _AP_SIZE_int; ret >>= _AP_SIZE_int; } ret |= val << _AP_W; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_int, false> operator,( const ap_range_ref<_AP_W, _AP_S> &op1, unsigned int op2) { ap_int_base<_AP_SIZE_int + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_int + _AP_W, false> ret(op1); ret <<= _AP_SIZE_int; if (false) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_int, false> operator,( unsigned int op1, const ap_range_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_int + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_int + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_int + 1, false> operator,( const ap_bit_ref<_AP_W, _AP_S> &op1, unsigned int op2) { ap_int_base<_AP_SIZE_int + 1, false> val(op2); val[_AP_SIZE_int] = op1; return val; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_int + 1, false> operator,( unsigned int op1, const ap_bit_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_int + 1, false> val(op1); val <<= 1; val[0] = op2; return val; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_int, false> operator,( const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op1, unsigned int op2) { ap_int_base<_AP_SIZE_int + _AP_W + _AP_W2, false> val(op2); ap_int_base<_AP_SIZE_int + _AP_W + _AP_W2, false> ret(op1); if (false) { val <<= _AP_W + _AP_W2; val >>= _AP_W + _AP_W2; } ret <<= _AP_SIZE_int; ret |= val; return ret; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_int, false> operator,( unsigned int op1, const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op2) { ap_int_base<_AP_SIZE_int + _AP_W + _AP_W2, false> val(op1); ap_int_base<_AP_SIZE_int + _AP_W + _AP_W2, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_int, false> operator,( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, unsigned int op2) { ap_int_base<_AP_SIZE_int + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_int + _AP_W, false> ret(op1); if (false) { val <<= _AP_W; val >>= _AP_W; } ret <<= _AP_SIZE_int; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_int, false> operator,( unsigned int op1, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_int + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_int + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_int, false> operator,( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, unsigned int op2) { ap_int_base<_AP_SIZE_int + 1, false> val(op2); val[_AP_SIZE_int] = op1; return val; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_int, false> operator,( unsigned int op1, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_int + 1, false> val(op1); val <<= 1; val[0] = op2; return val; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_long, false> operator,( const ap_int_base<_AP_W, _AP_S> &op1, long op2) { ap_int_base<_AP_SIZE_long + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_long + _AP_W, false> ret(op1); ret <<= _AP_SIZE_long; if (true) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_long, false> operator,( long op1, const ap_int_base<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_long + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_long + _AP_W, false> ret(op2); if (_AP_S) { ret <<= _AP_SIZE_long; ret >>= _AP_SIZE_long; } ret |= val << _AP_W; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_long, false> operator,( const ap_range_ref<_AP_W, _AP_S> &op1, long op2) { ap_int_base<_AP_SIZE_long + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_long + _AP_W, false> ret(op1); ret <<= _AP_SIZE_long; if (true) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_long, false> operator,( long op1, const ap_range_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_long + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_long + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_long + 1, false> operator,( const ap_bit_ref<_AP_W, _AP_S> &op1, long op2) { ap_int_base<_AP_SIZE_long + 1, false> val(op2); val[_AP_SIZE_long] = op1; return val; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_long + 1, false> operator,( long op1, const ap_bit_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_long + 1, false> val(op1); val <<= 1; val[0] = op2; return val; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_long, false> operator,( const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op1, long op2) { ap_int_base<_AP_SIZE_long + _AP_W + _AP_W2, true> val(op2); ap_int_base<_AP_SIZE_long + _AP_W + _AP_W2, true> ret(op1); if (true) { val <<= _AP_W + _AP_W2; val >>= _AP_W + _AP_W2; } ret <<= _AP_SIZE_long; ret |= val; return ret; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_long, false> operator,( long op1, const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op2) { ap_int_base<_AP_SIZE_long + _AP_W + _AP_W2, true> val(op1); ap_int_base<_AP_SIZE_long + _AP_W + _AP_W2, true> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_long, false> operator,( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, long op2) { ap_int_base<_AP_SIZE_long + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_long + _AP_W, false> ret(op1); if (true) { val <<= _AP_W; val >>= _AP_W; } ret <<= _AP_SIZE_long; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_long, false> operator,( long op1, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_long + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_long + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_long, false> operator,( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, long op2) { ap_int_base<_AP_SIZE_long + 1, true> val(op2); val[_AP_SIZE_long] = op1; return val; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_long, false> operator,( long op1, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_long + 1, true> val(op1); val <<= 1; val[0] = op2; return val; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_long, false> operator,( const ap_int_base<_AP_W, _AP_S> &op1, unsigned long op2) { ap_int_base<_AP_SIZE_long + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_long + _AP_W, false> ret(op1); ret <<= _AP_SIZE_long; if (false) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_long, false> operator,( unsigned long op1, const ap_int_base<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_long + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_long + _AP_W, false> ret(op2); if (_AP_S) { ret <<= _AP_SIZE_long; ret >>= _AP_SIZE_long; } ret |= val << _AP_W; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_long, false> operator,( const ap_range_ref<_AP_W, _AP_S> &op1, unsigned long op2) { ap_int_base<_AP_SIZE_long + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_long + _AP_W, false> ret(op1); ret <<= _AP_SIZE_long; if (false) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_long, false> operator,( unsigned long op1, const ap_range_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_long + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_long + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_long + 1, false> operator,( const ap_bit_ref<_AP_W, _AP_S> &op1, unsigned long op2) { ap_int_base<_AP_SIZE_long + 1, false> val(op2); val[_AP_SIZE_long] = op1; return val; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_long + 1, false> operator,( unsigned long op1, const ap_bit_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_long + 1, false> val(op1); val <<= 1; val[0] = op2; return val; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_long, false> operator,( const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op1, unsigned long op2) { ap_int_base<_AP_SIZE_long + _AP_W + _AP_W2, false> val(op2); ap_int_base<_AP_SIZE_long + _AP_W + _AP_W2, false> ret(op1); if (false) { val <<= _AP_W + _AP_W2; val >>= _AP_W + _AP_W2; } ret <<= _AP_SIZE_long; ret |= val; return ret; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_long, false> operator,( unsigned long op1, const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op2) { ap_int_base<_AP_SIZE_long + _AP_W + _AP_W2, false> val(op1); ap_int_base<_AP_SIZE_long + _AP_W + _AP_W2, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_long, false> operator,( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, unsigned long op2) { ap_int_base<_AP_SIZE_long + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_long + _AP_W, false> ret(op1); if (false) { val <<= _AP_W; val >>= _AP_W; } ret <<= _AP_SIZE_long; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_long, false> operator,( unsigned long op1, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_long + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_long + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_long, false> operator,( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, unsigned long op2) { ap_int_base<_AP_SIZE_long + 1, false> val(op2); val[_AP_SIZE_long] = op1; return val; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_long, false> operator,( unsigned long op1, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_long + 1, false> val(op1); val <<= 1; val[0] = op2; return val; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_ap_slong, false> operator,( const ap_int_base<_AP_W, _AP_S> &op1, ap_slong op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> ret(op1); ret <<= _AP_SIZE_ap_slong; if (true) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_ap_slong, false> operator,( ap_slong op1, const ap_int_base<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> ret(op2); if (_AP_S) { ret <<= _AP_SIZE_ap_slong; ret >>= _AP_SIZE_ap_slong; } ret |= val << _AP_W; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_ap_slong, false> operator,( const ap_range_ref<_AP_W, _AP_S> &op1, ap_slong op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> ret(op1); ret <<= _AP_SIZE_ap_slong; if (true) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_ap_slong, false> operator,( ap_slong op1, const ap_range_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_ap_slong + 1, false> operator,( const ap_bit_ref<_AP_W, _AP_S> &op1, ap_slong op2) { ap_int_base<_AP_SIZE_ap_slong + 1, false> val(op2); val[_AP_SIZE_ap_slong] = op1; return val; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_ap_slong + 1, false> operator,( ap_slong op1, const ap_bit_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_ap_slong + 1, false> val(op1); val <<= 1; val[0] = op2; return val; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_ap_slong, false> operator,( const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op1, ap_slong op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W + _AP_W2, true> val(op2); ap_int_base<_AP_SIZE_ap_slong + _AP_W + _AP_W2, true> ret(op1); if (true) { val <<= _AP_W + _AP_W2; val >>= _AP_W + _AP_W2; } ret <<= _AP_SIZE_ap_slong; ret |= val; return ret; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_ap_slong, false> operator,( ap_slong op1, const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W + _AP_W2, true> val(op1); ap_int_base<_AP_SIZE_ap_slong + _AP_W + _AP_W2, true> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_ap_slong, false> operator,( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, ap_slong op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> ret(op1); if (true) { val <<= _AP_W; val >>= _AP_W; } ret <<= _AP_SIZE_ap_slong; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_ap_slong, false> operator,( ap_slong op1, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_ap_slong, false> operator,( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, ap_slong op2) { ap_int_base<_AP_SIZE_ap_slong + 1, true> val(op2); val[_AP_SIZE_ap_slong] = op1; return val; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_ap_slong, false> operator,( ap_slong op1, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_ap_slong + 1, true> val(op1); val <<= 1; val[0] = op2; return val; }
template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_ap_slong, false> operator,( const ap_int_base<_AP_W, _AP_S> &op1, ap_ulong op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> ret(op1); ret <<= _AP_SIZE_ap_slong; if (false) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_ap_slong, false> operator,( ap_ulong op1, const ap_int_base<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> ret(op2); if (_AP_S) { ret <<= _AP_SIZE_ap_slong; ret >>= _AP_SIZE_ap_slong; } ret |= val << _AP_W; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_ap_slong, false> operator,( const ap_range_ref<_AP_W, _AP_S> &op1, ap_ulong op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> ret(op1); ret <<= _AP_SIZE_ap_slong; if (false) { val <<= _AP_W; val >>= _AP_W; } ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_ap_slong, false> operator,( ap_ulong op1, const ap_range_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_ap_slong + 1, false> operator,( const ap_bit_ref<_AP_W, _AP_S> &op1, ap_ulong op2) { ap_int_base<_AP_SIZE_ap_slong + 1, false> val(op2); val[_AP_SIZE_ap_slong] = op1; return val; } template <int _AP_W, bool _AP_S> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_SIZE_ap_slong + 1, false> operator,( ap_ulong op1, const ap_bit_ref<_AP_W, _AP_S> &op2) { ap_int_base<_AP_SIZE_ap_slong + 1, false> val(op1); val <<= 1; val[0] = op2; return val; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_ap_slong, false> operator,( const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op1, ap_ulong op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W + _AP_W2, false> val(op2); ap_int_base<_AP_SIZE_ap_slong + _AP_W + _AP_W2, false> ret(op1); if (false) { val <<= _AP_W + _AP_W2; val >>= _AP_W + _AP_W2; } ret <<= _AP_SIZE_ap_slong; ret |= val; return ret; } template <int _AP_W, typename _AP_T, int _AP_W2, typename _AP_T2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_W2 + _AP_SIZE_ap_slong, false> operator,( ap_ulong op1, const ap_concat_ref<_AP_W, _AP_T, _AP_W2, _AP_T2> &op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W + _AP_W2, false> val(op1); ap_int_base<_AP_SIZE_ap_slong + _AP_W + _AP_W2, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_ap_slong, false> operator,( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, ap_ulong op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> val(op2); ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> ret(op1); if (false) { val <<= _AP_W; val >>= _AP_W; } ret <<= _AP_SIZE_ap_slong; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W + _AP_SIZE_ap_slong, false> operator,( ap_ulong op1, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> val(op1); ap_int_base<_AP_SIZE_ap_slong + _AP_W, false> ret(op2); int len = op2.length(); val <<= len; ret |= val; return ret; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_ap_slong, false> operator,( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op1, ap_ulong op2) { ap_int_base<_AP_SIZE_ap_slong + 1, false> val(op2); val[_AP_SIZE_ap_slong] = op1; return val; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<1 + _AP_SIZE_ap_slong, false> operator,( ap_ulong op1, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> &op2) { ap_int_base<_AP_SIZE_ap_slong + 1, false> val(op1); val <<= 1; val[0] = op2; return val; }
# 1366 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_ref.h"
template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint<_AP_W + _AP_W1> operator <<( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1> lhs, int rhs) { return ap_uint<_AP_W + _AP_W1>(lhs).get() << int(rhs); }
template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint<_AP_W + _AP_W1> operator <<( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1> lhs, unsigned int rhs) { return ap_uint<_AP_W + _AP_W1>(lhs).get() << int(rhs); }
template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint<_AP_W + _AP_W1> operator <<( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1> lhs, long rhs) { return ap_uint<_AP_W + _AP_W1>(lhs).get() << int(rhs); }
template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint<_AP_W + _AP_W1> operator <<( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1> lhs, unsigned long rhs) { return ap_uint<_AP_W + _AP_W1>(lhs).get() << int(rhs); }
template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint<_AP_W + _AP_W1> operator <<( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1> lhs, ap_slong rhs) { return ap_uint<_AP_W + _AP_W1>(lhs).get() << int(rhs); }
template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint<_AP_W + _AP_W1> operator <<( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1> lhs, ap_ulong rhs) { return ap_uint<_AP_W + _AP_W1>(lhs).get() << int(rhs); }

template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint<_AP_W + _AP_W1> operator >>( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1> lhs, int rhs) { return ap_uint<_AP_W + _AP_W1>(lhs).get() >> int(rhs); }
template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint<_AP_W + _AP_W1> operator >>( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1> lhs, unsigned int rhs) { return ap_uint<_AP_W + _AP_W1>(lhs).get() >> int(rhs); }
template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint<_AP_W + _AP_W1> operator >>( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1> lhs, long rhs) { return ap_uint<_AP_W + _AP_W1>(lhs).get() >> int(rhs); }
template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint<_AP_W + _AP_W1> operator >>( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1> lhs, unsigned long rhs) { return ap_uint<_AP_W + _AP_W1>(lhs).get() >> int(rhs); }
template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint<_AP_W + _AP_W1> operator >>( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1> lhs, ap_slong rhs) { return ap_uint<_AP_W + _AP_W1>(lhs).get() >> int(rhs); }
template <int _AP_W, typename _AP_T, int _AP_W1, typename _AP_T1> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint<_AP_W + _AP_W1> operator >>( const ap_concat_ref<_AP_W, _AP_T, _AP_W1, _AP_T1> lhs, ap_ulong rhs) { return ap_uint<_AP_W + _AP_W1>(lhs).get() >> int(rhs); }
# 13 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_int.h" 2




template <int _AP_W>
struct ap_int : ap_int_base<_AP_W, true> {
  static_assert(_AP_W > 0, "ap_int bitwidth must be positive");

  typedef ap_int_base<_AP_W, true> Base;

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int() = default;
  template <int _AP_W2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(const ap_int<_AP_W2>& op): Base((ap_int_base<_AP_W2, true>)op){



    op.checkOverflowCsim(_AP_W, true);

    Base::V = op.V;
  }

  template <int _AP_W2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(const volatile ap_int<_AP_W2>& op) {
    const_cast<const ap_int<_AP_W2>& >(op).checkOverflowCsim(_AP_W, true);
    Base::V = op.V;
  }

  template <int _AP_W2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(const ap_uint<_AP_W2>& op): Base((ap_int_base<_AP_W2, false>)op){



    op.checkOverflowCsim(_AP_W, true);

    Base::V = op.V;
  }

  template <int _AP_W2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(const volatile ap_uint<_AP_W2>& op) {
    const_cast<const ap_uint<_AP_W2>& >(op).checkOverflowCsim(_AP_W, true);
    Base::V = op.V;
  }




                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(unsigned V __attribute__((bitwidth(_AP_W))), bool raw): Base(0) {
    Base::V = V;
    (void)(raw);
  }



  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
      : Base(ref) {}

  template <int _AP_W2, int _AP_I2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2,
            int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base((ap_fixed_base<_AP_W2, _AP_I2, true, _AP_Q2, _AP_O2, _AP_N2>)op) {}

  template <int _AP_W2, int _AP_I2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2,
            int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base((ap_fixed_base<_AP_W2, _AP_I2, false, _AP_Q2, _AP_O2, _AP_N2>)op) {
  }

  template <int _AP_W2, int _AP_I2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2,
            int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(
      const volatile ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base((ap_fixed_base<_AP_W2, _AP_I2, true, _AP_Q2, _AP_O2, _AP_N2>)op) {}

  template <int _AP_W2, int _AP_I2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2,
            int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(
      const volatile ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base((ap_fixed_base<_AP_W2, _AP_I2, false, _AP_Q2, _AP_O2, _AP_N2>)op) {
  }

  template <int _AP_W2, bool _AP_S2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(const ap_int_base<_AP_W2, _AP_S2>& op):Base(op) {

  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base(op) {}

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base(op) {}

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base(op) {}







  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(bool val):Base(val){ this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(char val):Base(val){ this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(signed char val):Base(val){ this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(unsigned char val):Base(val){ this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(short val):Base(val){ this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(unsigned short val):Base(val){ this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(int val):Base(val){ this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(unsigned int val):Base(val){ this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(long val):Base(val){ this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(unsigned long val):Base(val){ this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(ap_slong val):Base(val){ this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(ap_ulong val):Base(val){ this->checkOverflowBaseC(val); }

                ap_int(double val) : Base(val) {}
                ap_int(float val) : Base(val) {}
  ap_int(half val) : Base(val) {}


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(const char* s) : Base(s) {}

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int(const char* s, signed char rd) : Base(s, rd) {}




  ap_int &operator=(const ap_int<_AP_W> &op2) = default;
# 163 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_int.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int& operator=(const volatile ap_int<_AP_W>& op2) {
    Base::V = op2.V;
    return *this;
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) void operator=(const ap_int<_AP_W>& op2) volatile {
    *((volatile typename Base::Base::DataType *)(&(Base::V))) = op2.V;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) void operator=(const volatile ap_int<_AP_W>& op2) volatile {
    *((volatile typename Base::Base::DataType *)(&(Base::V))) = op2.V;
  }

};




template <int _AP_W>
struct ap_uint : ap_int_base<_AP_W, false> {
  static_assert(_AP_W > 0, "ap_uint bitwidth must be positive");

  typedef ap_int_base<_AP_W, false> Base;

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint() = default;
  template <int _AP_W2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(const ap_uint<_AP_W2>& op):Base((ap_int_base<_AP_W2, false>)op) {
    op.checkOverflowCsim(_AP_W, false);

  }

  template <int _AP_W2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(const ap_int<_AP_W2>& op):Base((ap_int_base<_AP_W2, true>)op) {
    op.checkOverflowCsim(_AP_W, false);

  }

  template <int _AP_W2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(const volatile ap_uint<_AP_W2>& op) {
    const_cast<const ap_uint<_AP_W2>& >(op).checkOverflowCsim(_AP_W, false);
    Base::V = op.V;
  }

  template <int _AP_W2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(const volatile ap_int<_AP_W2>& op) {
    const_cast<const ap_int<_AP_W2>& >(op).checkOverflowCsim(_AP_W, false);
    Base::V = op.V;
  }




                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(unsigned V __attribute__((bitwidth(_AP_W))), bool raw):Base(0) {
    Base::V = V;
    (void)(raw);
  }



  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(const ap_range_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(const ap_bit_ref<_AP_W2, _AP_S2>& ref) : Base(ref) {}

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& ref)
      : Base(ref) {}

  template <int _AP_W2, int _AP_I2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2,
            int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(const ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base((ap_fixed_base<_AP_W2, _AP_I2, true, _AP_Q2, _AP_O2, _AP_N2>)op) {}

  template <int _AP_W2, int _AP_I2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2,
            int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(const ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base((ap_fixed_base<_AP_W2, _AP_I2, false, _AP_Q2, _AP_O2, _AP_N2>)op) {
  }

  template <int _AP_W2, int _AP_I2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2,
            int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(
      const volatile ap_fixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base((ap_fixed_base<_AP_W2, _AP_I2, true, _AP_Q2, _AP_O2, _AP_N2>)op) {}

  template <int _AP_W2, int _AP_I2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2,
            int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(
      const volatile ap_ufixed<_AP_W2, _AP_I2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base((ap_fixed_base<_AP_W2, _AP_I2, false, _AP_Q2, _AP_O2, _AP_N2>)op) {
  }

  template <int _AP_W2, bool _AP_S2>
                inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(const ap_int_base<_AP_W2, _AP_S2>& op):Base(op) {

  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base(op) {}

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base(op) {}

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base(op) {}






  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(bool val):Base(val) { this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(char val):Base(val) { this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(signed char val):Base(val) { this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(unsigned char val):Base(val) { this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(short val):Base(val) { this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(unsigned short val):Base(val) { this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(int val):Base(val) { this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(unsigned int val):Base(val) { this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(long val):Base(val) { this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(unsigned long val):Base(val) { this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(ap_slong val):Base(val) { this->checkOverflowBaseC(val); }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(ap_ulong val):Base(val) { this->checkOverflowBaseC(val); }

                ap_uint(double val) : Base(val) {}
                ap_uint(float val) : Base(val) {}
  ap_uint(half val) : Base(val) {}


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(const char* s) : Base(s) {}

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint(const char* s, signed char rd) : Base(s, rd) {}





  ap_uint &operator=(const ap_uint<_AP_W> &op2) = default;
# 321 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_int.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_uint& operator=(const volatile ap_uint<_AP_W>& op2) {
    Base::V = op2.V;
    return *this;
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) void operator=(const ap_uint<_AP_W>& op2) volatile {
    *((volatile typename Base::Base::DataType *)(&(Base::V))) = op2.V;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) void operator=(const volatile ap_uint<_AP_W>& op2) volatile {
    *((volatile typename Base::Base::DataType *)(&(Base::V))) = op2.V;
  }

};
# 356 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_int.h"
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_special.h" 1
# 20 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_special.h"
namespace std {
template<typename _Tp> class complex;
}







namespace std {
# 48 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_special.h"
template <int _AP_W>
class complex<ap_int<_AP_W> > {
 public:
  typedef ap_int<_AP_W> _Tp;
  typedef _Tp value_type;




  __attribute__((nodebug)) complex() = default;


  __attribute__((nodebug)) complex(const _Tp &__r, const _Tp &__i = _Tp(0))
      : _M_real(__r), _M_imag(__i) {}


  template <typename _Up>
  __attribute__((nodebug)) complex(const complex<_Up> &__z) : _M_real(__z.real()), _M_imag(__z.imag()) {}


  __attribute__((nodebug)) const _Tp& real() const { return _M_real; }
  const _Tp& imag() const { return _M_imag; }







  __attribute__((nodebug)) void real(_Tp __val) { _M_real = __val; }

  __attribute__((nodebug)) void imag(_Tp __val) { _M_imag = __val; }



  __attribute__((nodebug)) complex<_Tp> &operator=(const _Tp __t) {
    _M_real = __t;
    _M_imag = _Tp(0);
    return *this;
  }



  __attribute__((nodebug)) complex<_Tp> &operator+=(const _Tp &__t) {
    _M_real += __t;
    return *this;
  }



  __attribute__((nodebug)) complex<_Tp> &operator-=(const _Tp &__t) {
    _M_real -= __t;
    return *this;
  }



  __attribute__((nodebug)) complex<_Tp> &operator*=(const _Tp &__t) {
    _M_real *= __t;
    _M_imag *= __t;
    return *this;
  }



  __attribute__((nodebug)) complex<_Tp> &operator/=(const _Tp &__t) {
    _M_real /= __t;
    _M_imag /= __t;
    return *this;
  }


  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator=(const complex<_Up> &__z) {
    _M_real = __z.real();
    _M_imag = __z.imag();
    return *this;
  }



  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator+=(const complex<_Up> &__z) {
    _M_real += __z.real();
    _M_imag += __z.imag();
    return *this;
  }



  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator-=(const complex<_Up> &__z) {
    _M_real -= __z.real();
    _M_imag -= __z.imag();
    return *this;
  }



  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator*=(const complex<_Up> &__z) {
    const _Tp __r = _M_real * __z.real() - _M_imag * __z.imag();
    _M_imag = _M_real * __z.imag() + _M_imag * __z.real();
    _M_real = __r;
    return *this;
  }



  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator/=(const complex<_Up> &__z) {
    complex<_Tp> cj (__z.real(), -__z.imag());
    complex<_Tp> a = (*this) * cj;
    complex<_Tp> b = cj * __z;
    _M_real = a.real() / b.real();
    _M_imag = a.imag() / b.real();
    return *this;
  }

 private:
  _Tp _M_real;
  _Tp _M_imag;

};
# 181 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_int_special.h"
template <int _AP_W>
inline __attribute__((nodebug)) bool operator==(const complex<ap_int<_AP_W> > &__x, const ap_int<_AP_W> &__y) {
  return __x.real() == __y &&
         __x.imag() == 0;
}


template <int _AP_W>
inline __attribute__((nodebug)) bool operator==(const ap_int<_AP_W> &__x, const complex<ap_int<_AP_W> > &__y) {
  return __x == __y.real() &&
         0 == __y.imag();
}


template <int _AP_W>
inline __attribute__((nodebug)) bool operator!=(const complex<ap_int<_AP_W> > &__x, const ap_int<_AP_W> &__y) {
  return __x.real() != __y ||
         __x.imag() != 0;
}


template <int _AP_W>
inline __attribute__((nodebug)) bool operator!=(const ap_int<_AP_W> &__x, const complex<ap_int<_AP_W> > &__y) {
  return __x != __y.real() ||
         0 != __y.imag();
}

}
# 357 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_int.h" 2
# 17 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h" 2
# 87 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
template <int _AP_W2, int _AP_I2, bool _AP_S2>
struct _ap_fixed_factory;
template <int _AP_W2, int _AP_I2>
struct _ap_fixed_factory<_AP_W2, _AP_I2, true> {
  typedef ap_fixed<_AP_W2, _AP_I2> type;
};
template <int _AP_W2, int _AP_I2>
struct _ap_fixed_factory<_AP_W2, _AP_I2, false> {
  typedef ap_ufixed<_AP_W2, _AP_I2> type;
};
# 108 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
struct ap_fixed_base : ssdm_int<_AP_W, _AP_S> {
 static_assert(_AP_W > 0, "ap_fixed_base bitwidth must be positive");

 public:
  typedef ssdm_int<_AP_W, _AP_S> Base;
  static const int width = _AP_W;
  static const int iwidth = _AP_I;
  static const ap_q_mode qmode = _AP_Q;
  static const ap_o_mode omode = _AP_O;


  template <int _AP_W2, int _AP_I2, bool _AP_S2>
  struct RType {
    enum {
      _AP_F = _AP_W - _AP_I,
      F2 = _AP_W2 - _AP_I2,
      mult_w = _AP_W + _AP_W2,
      mult_i = _AP_I + _AP_I2,
      mult_s = _AP_S || _AP_S2,
      plus_w = ((_AP_I + (_AP_S2 && !_AP_S)) > (_AP_I2 + (_AP_S && !_AP_S2)) ? (_AP_I + (_AP_S2 && !_AP_S)) : (_AP_I2 + (_AP_S && !_AP_S2))) +
               1 + ((_AP_F) > (F2) ? (_AP_F) : (F2)),
      plus_i =
          ((_AP_I + (_AP_S2 && !_AP_S)) > (_AP_I2 + (_AP_S && !_AP_S2)) ? (_AP_I + (_AP_S2 && !_AP_S)) : (_AP_I2 + (_AP_S && !_AP_S2))) + 1,
      plus_s = _AP_S || _AP_S2,
      minus_w =
          ((_AP_I + (_AP_S2 && !_AP_S)) > (_AP_I2 + (_AP_S && !_AP_S2)) ? (_AP_I + (_AP_S2 && !_AP_S)) : (_AP_I2 + (_AP_S && !_AP_S2))) + 1 +
          ((_AP_F) > (F2) ? (_AP_F) : (F2)),
      minus_i =
          ((_AP_I + (_AP_S2 && !_AP_S)) > (_AP_I2 + (_AP_S && !_AP_S2)) ? (_AP_I + (_AP_S2 && !_AP_S)) : (_AP_I2 + (_AP_S && !_AP_S2))) + 1,
      minus_s = true,

      div_w = _AP_S2 + _AP_W + ((F2) > (0) ? (F2) : (0)),



      div_i = _AP_S2 + _AP_I + F2,
      div_s = _AP_S || _AP_S2,
      logic_w =
          ((_AP_I + (_AP_S2 && !_AP_S)) > (_AP_I2 + (_AP_S && !_AP_S2)) ? (_AP_I + (_AP_S2 && !_AP_S)) : (_AP_I2 + (_AP_S && !_AP_S2))) +
          ((_AP_F) > (F2) ? (_AP_F) : (F2)),
      logic_i = ((_AP_I + (_AP_S2 && !_AP_S)) > (_AP_I2 + (_AP_S && !_AP_S2)) ? (_AP_I + (_AP_S2 && !_AP_S)) : (_AP_I2 + (_AP_S && !_AP_S2))),
      logic_s = _AP_S || _AP_S2
    };

    typedef ap_fixed_base<_AP_W, _AP_I, _AP_S> lhs;
    typedef ap_fixed_base<_AP_W2, _AP_I2, _AP_S2> rhs;

    typedef ap_fixed_base<mult_w, mult_i, mult_s> mult_base;
    typedef ap_fixed_base<plus_w, plus_i, plus_s> plus_base;
    typedef ap_fixed_base<minus_w, minus_i, minus_s> minus_base;
    typedef ap_fixed_base<logic_w, logic_i, logic_s> logic_base;
    typedef ap_fixed_base<div_w, div_i, div_s> div_base;
    typedef ap_fixed_base<_AP_W, _AP_I, _AP_S> arg1_base;

    typedef typename _ap_fixed_factory<mult_w, mult_i, mult_s>::type mult;
    typedef typename _ap_fixed_factory<plus_w, plus_i, plus_s>::type plus;
    typedef typename _ap_fixed_factory<minus_w, minus_i, minus_s>::type minus;
    typedef typename _ap_fixed_factory<logic_w, logic_i, logic_s>::type logic;
    typedef typename _ap_fixed_factory<div_w, div_i, div_s>::type div;
    typedef typename _ap_fixed_factory<_AP_W, _AP_I, _AP_S>::type arg1;
  };

 private:
# 297 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
                      inline __attribute__((always_inline)) __attribute__((nodebug)) void report() {}




                      inline __attribute__((always_inline)) __attribute__((nodebug)) void overflow_adjust(bool underflow, bool overflow, bool lD,
                              bool sign) {
    if (!underflow && !overflow) return;
    if (_AP_O == AP_WRAP) {
      if (_AP_N == 0) return;
      if (_AP_S) {


        Base::V = ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; typeof(sign) __Repl2__ = !!sign; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), _AP_W - 1, _AP_W - 1); __Result__; });
        if (_AP_N > 1) {

          ap_int_base<_AP_W, false> mask(-1);
          if (sign) mask.V = 0;
          Base::V =
              ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; typeof(mask.V) __Repl2__ = mask.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), _AP_W - _AP_N, _AP_W - 2); __Result__; });
        }
      } else {

        ap_int_base<_AP_W, false> mask(-1);
        Base::V =
            ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; typeof(mask.V) __Repl2__ = mask.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), _AP_W - _AP_N, _AP_W - 1); __Result__; });
      }
    } else if (_AP_O == AP_SAT_ZERO) {
      Base::V = 0;
    } else if (_AP_O == AP_WRAP_SM && _AP_S) {
      bool Ro = ({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W - 1); __Result__; });
      if (_AP_N == 0) {
        if (lD != Ro) {
          Base::V = ~Base::V;
          Base::V = ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; typeof(lD) __Repl2__ = !!lD; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), _AP_W - 1, _AP_W - 1); __Result__; });
        }
      } else {
        if (_AP_N == 1 && sign != Ro) {
          Base::V = ~Base::V;
        } else if (_AP_N > 1) {
          bool lNo = ({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W - _AP_N); __Result__; });
          if (lNo == sign) Base::V = ~Base::V;
          ap_int_base<_AP_W, false> mask(-1);
          if (sign) mask.V = 0;
          Base::V =
              ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; typeof(mask.V) __Repl2__ = mask.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), _AP_W - _AP_N, _AP_W - 2); __Result__; });
        }
        Base::V = ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; typeof(sign) __Repl2__ = !!sign; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), _AP_W - 1, _AP_W - 1); __Result__; });
      }
    } else {
      if (_AP_S) {
        if (overflow) {
          Base::V = 1;
          Base::V <<= _AP_W - 1;
          Base::V = ~Base::V;
        } else if (underflow) {
          Base::V = 1;
          Base::V <<= _AP_W - 1;
          if (_AP_O == AP_SAT_SYM) Base::V |= 1;
        }
      } else {
        if (overflow)
          Base::V = ~(ap_int_base<_AP_W, false>(0).V);
        else if (underflow)
          Base::V = 0;
      }
    }
  }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) bool quantization_adjust(bool qb, bool r, bool s) {
    bool carry = (bool)({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W - 1); __Result__; });
    if (_AP_Q == AP_TRN) return false;
    if (_AP_Q == AP_RND_ZERO)
      qb &= s || r;
    else if (_AP_Q == AP_RND_MIN_INF)
      qb &= r;
    else if (_AP_Q == AP_RND_INF)
      qb &= !s || r;
    else if (_AP_Q == AP_RND_CONV)
      qb &= ({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), 0); __Result__; }) || r;
    else if (_AP_Q == AP_TRN_ZERO)
      qb = s && (qb || r);
    Base::V += qb;
    return carry && (!(bool)({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W - 1); __Result__; }));
  }


                      inline __attribute__((always_inline)) __attribute__((nodebug)) int countLeadingOnes() const {




    return 0;

  }

 public:



  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base() = default;


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op):Base(op.V) {

    operator=(op);



    report();
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(
      const volatile ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op) {
    operator=(op);
    report();
  }

  template <int _AP_W2, bool _AP_S2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const ap_int_base<_AP_W2, _AP_S2>& op):Base(op.V) {
    ap_fixed_base<_AP_W2, _AP_W2, _AP_S2> tmp(0);
    tmp.V = op.V;

    operator=(tmp);



    report();
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const volatile ap_int_base<_AP_W2, _AP_S2>& op) {
    ap_fixed_base<_AP_W2, _AP_W2, _AP_S2> tmp;
    tmp.V = op.V;
    operator=(tmp);
    report();
  }
# 460 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const char* s) {
    typeof(Base::V) t;
    _ssdm_string2bits((void*)(&t), (const char*)(s), 10, _AP_I, _AP_S, _AP_Q,
                      _AP_O, _AP_N, true);
    Base::V = t;
  }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const char* s, signed char rd) {
    typeof(Base::V) t;
    _ssdm_string2bits((void*)(&t), (const char*)(s), rd, _AP_I, _AP_S, _AP_Q,
                      _AP_O, _AP_N, true);
    Base::V = t;
  }


  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const ap_bit_ref<_AP_W2, _AP_S2>& op) {
    *this = ((bool)op);
    report();
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const ap_range_ref<_AP_W2, _AP_S2>& op) {
    *this = (ap_int_base<_AP_W2, false>(op));
    report();
  }

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(
      const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& op) {
    *this = (ap_int_base<_AP_W2 + _AP_W3, false>(op));
    report();
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op) {
    *this = (bool(op));
    report();
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op) {
    *this = (ap_int_base<_AP_W2, false>(op));
    report();
  }
# 528 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const bool x) { ap_fixed_base<(1), (1), (false)> tmp; tmp.V = x; *this = tmp; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const char x) { ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)> tmp; tmp.V = x; *this = tmp; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const signed char x) { ap_fixed_base<(8), (8), (true)> tmp; tmp.V = x; *this = tmp; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const unsigned char x) { ap_fixed_base<(8), (8), (false)> tmp; tmp.V = x; *this = tmp; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const short x) { ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)> tmp; tmp.V = x; *this = tmp; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const unsigned short x) { ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)> tmp; tmp.V = x; *this = tmp; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const int x) { ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)> tmp; tmp.V = x; *this = tmp; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const unsigned int x) { ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)> tmp; tmp.V = x; *this = tmp; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const long x) { ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)> tmp; tmp.V = x; *this = tmp; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const unsigned long x) { ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)> tmp; tmp.V = x; *this = tmp; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const ap_slong x) { ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)> tmp; tmp.V = x; *this = tmp; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(const ap_ulong x) { ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)> tmp; tmp.V = x; *this = tmp; }







          __attribute__((nodebug)) ap_fixed_base(double d) {
    ap_int_base<64, false> ireg;
    ireg.V = doubleToRawBits(d);
    bool isneg = ({ typeof(ireg.V) __Val2__ = ireg.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), 63); __Result__; });

    ap_int_base<11 + 1, true> exp, bias = ((1 << (11 - 1)) - 1);
    ap_int_base<11, false> exp_tmp;
    exp_tmp.V = ({ typename _ap_type::remove_const<typeof(ireg.V)>::type __Result__ = 0; typeof(ireg.V) __Val2__ = ireg.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 52, 52 + 11 - 1); __Result__; });
    exp = exp_tmp - bias;
    ap_int_base<52 + 2, true> man;
    man.V = ({ typename _ap_type::remove_const<typeof(ireg.V)>::type __Result__ = 0; typeof(ireg.V) __Val2__ = ireg.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, 52 - 1); __Result__; });


    (static_cast<void>(0));

    man.V = ({ typename _ap_type::remove_const<typeof(man.V)>::type __Result__ = 0; typeof(man.V) __Val2__ = man.V; typeof(1) __Repl2__ = !!1; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), 52, 52); __Result__; });
    if (isneg) man = -man;
    if ((ireg.V & 0x7fffffffffffffffLL) == 0) {
      Base::V = 0;
    } else {
      int _AP_W2 = 52 + 2, _AP_I2 = exp.V + 2, _AP_F = _AP_W - _AP_I,
          F2 = _AP_W2 - _AP_I2;
      bool _AP_S2 = true,
           QUAN_INC = F2 > _AP_F &&
                      !(_AP_Q == AP_TRN || (_AP_Q == AP_TRN_ZERO && !_AP_S2));
      bool carry = false;

      unsigned sh_amt = (F2 > _AP_F) ? F2 - _AP_F : _AP_F - F2;
      if (F2 == _AP_F)
        Base::V = man.V;
      else if (F2 > _AP_F) {
        if (sh_amt < 52 + 2)
          Base::V = man.V >> sh_amt;
        else {
          Base::V = isneg ? -1 : 0;
        }
        if ((_AP_Q != AP_TRN) && !((_AP_Q == AP_TRN_ZERO) && !_AP_S2)) {
          bool qb = (F2 - _AP_F > _AP_W2) ? isneg : (bool)({ typeof(man.V) __Val2__ = man.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), F2 - _AP_F - 1); __Result__; });

          bool r =
              (F2 > _AP_F + 1)
                  ? ({ typename _ap_type::remove_const<typeof(man.V)>::type __Result__ = 0; typeof(man.V) __Val2__ = man.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, (F2 - _AP_F - 2 < _AP_W2) ? (F2 - _AP_F - 2) : (_AP_W2 - 1)); __Result__; }) != 0


                  : false;
          carry = quantization_adjust(qb, r, isneg);
        }
      } else {
        Base::V = man.V;
        if (sh_amt < _AP_W)
          Base::V = Base::V << sh_amt;
        else
          Base::V = 0;
      }

      if ((_AP_O != AP_WRAP || _AP_N != 0) &&
          ((!_AP_S && _AP_S2) ||
           _AP_I - _AP_S <
               _AP_I2 - _AP_S2 +
                   (QUAN_INC ||
                    (_AP_S2 && (_AP_O == AP_SAT_SYM))))) {
        bool deleted_zeros = _AP_S2 ? true : !carry, deleted_ones = true;
        bool neg_src = isneg;
        bool lD = false;
        int pos1 = F2 - _AP_F + _AP_W;
        int pos2 = F2 - _AP_F + _AP_W + 1;
        bool newsignbit = ({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W - 1); __Result__; });
        if (pos1 < _AP_W2 && pos1 >= 0)

          lD = (man.V >> pos1) & 1;
        if (pos1 < _AP_W2) {
          bool Range1_all_ones = true;
          bool Range1_all_zeros = true;
          bool Range2_all_ones = true;
          ap_int_base<52 + 2, false> Range2;
          ap_int_base<52 + 2, false> all_ones(-1);

          if (pos2 >= 0 && pos2 < _AP_W2) {


            Range2.V = man.V;
            Range2.V >>= pos2;
            Range2_all_ones = Range2 == (all_ones >> pos2);
          } else if (pos2 < 0)
            Range2_all_ones = false;
          if (pos1 >= 0 && pos2 < _AP_W2) {
            Range1_all_ones = Range2_all_ones && lD;
            Range1_all_zeros = !Range2.V && !lD;
          } else if (pos2 == _AP_W2) {
            Range1_all_ones = lD;
            Range1_all_zeros = !lD;
          } else if (pos1 < 0) {
            Range1_all_zeros = !man.V;
            Range1_all_ones = false;
          }

          deleted_zeros =
              deleted_zeros && (carry ? Range1_all_ones : Range1_all_zeros);
          deleted_ones =
              carry ? Range2_all_ones && (pos1 < 0 || !lD) : Range1_all_ones;
          neg_src = isneg && !(carry && Range1_all_ones);
        } else
          neg_src = isneg && newsignbit;
        bool neg_trg = _AP_S && newsignbit;
        bool overflow = (neg_trg || !deleted_zeros) && !isneg;
        bool underflow = (!neg_trg || !deleted_ones) && neg_src;
        if ((_AP_O == AP_SAT_SYM) && _AP_S2 && _AP_S)
          underflow |=
              neg_src &&
              (_AP_W > 1 ? ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, _AP_W - 2); __Result__; }) == 0
                         : true);
        overflow_adjust(underflow, overflow, lD, neg_src);
      }
    }
    report();
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(float d) { *this = ap_fixed_base(double(d)); }


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base(half d) { *this = ap_fixed_base(double(d)); }
# 802 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator=(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op) {

    const int _AP_F = _AP_W - _AP_I;
    const int F2 = _AP_W2 - _AP_I2;
    const int QUAN_INC =
          F2 > _AP_F && !(_AP_Q == AP_TRN || (_AP_Q == AP_TRN_ZERO && !_AP_S2));

    if (!op) Base::V = 0;
    bool carry = false;
    bool signbit = ({ typeof(op.V) __Val2__ = op.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W2 - 1); __Result__; });
    bool isneg = signbit && _AP_S2;
    if (F2 == _AP_F)
      Base::V = op.V;
    else if (F2 > _AP_F) {
      unsigned int sh_amt = F2 - _AP_F;

      if (sh_amt < _AP_W2) {
        Base::V = op.V >> sh_amt;
      } else {
        Base::V = isneg ? -1 : 0;
      }
      if (_AP_Q != AP_TRN && !(_AP_Q == AP_TRN_ZERO && !_AP_S2)) {

        bool qb = (F2 - _AP_F > _AP_W2) ? _AP_S2 && signbit : ({ typeof(op.V) __Val2__ = op.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), F2 - _AP_F - 1); __Result__; });
        enum { hi = ((F2 - _AP_F - 2) < _AP_W2) ? (F2 - _AP_F - 2) : (_AP_W2 - 1) };

        bool r = (F2 > _AP_F + 1) ? (({ typename _ap_type::remove_const<typeof(op.V)>::type __Result__ = 0; typeof(op.V) __Val2__ = op.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, hi); __Result__; }) != 0) : false;
        carry = quantization_adjust(qb, r, isneg);
      }
    } else {
      unsigned sh_amt = _AP_F - F2;

      if (sh_amt < _AP_W) {
        if (_AP_W > _AP_W2) {

          Base::V = op.V;
          Base::V <<= sh_amt;
        } else {

          Base::V = op.V << sh_amt;
        }
      } else {
        Base::V = 0;
      }
    }

    if ((_AP_O != AP_WRAP || _AP_N != 0) &&
        ((!_AP_S && _AP_S2) ||
         _AP_I - _AP_S <
             _AP_I2 - _AP_S2 +
                 (QUAN_INC || (_AP_S2 && _AP_O == AP_SAT_SYM)))) {
      bool deleted_zeros = _AP_S2 ? true : !carry;
      bool deleted_ones = true;
      bool neg_src = isneg;
      bool newsignbit = ({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W - 1); __Result__; });
      enum { pos1 = F2 - _AP_F + _AP_W, pos2 = F2 - _AP_F + _AP_W + 1 };
      bool lD = (pos1 < _AP_W2 && pos1 >= 0) ? ({ typeof(op.V) __Val2__ = op.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), pos1); __Result__; })
                                             : false;
      if (pos1 < _AP_W2) {
        bool Range1_all_ones = true;
        bool Range1_all_zeros = true;
        bool Range2_all_ones = true;
        ap_int_base<_AP_W2, false> all_ones(-1);

        if (pos2 < _AP_W2 && pos2 >= 0) {
          ap_int_base<_AP_W2, false> Range2(0);
          Range2.V = ({ typename _ap_type::remove_const<typeof(op.V)>::type __Result__ = 0; typeof(op.V) __Val2__ = op.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), pos2, _AP_W2 - 1); __Result__; });
          Range2_all_ones = Range2 == (all_ones >> pos2);
        } else if (pos2 < 0) {
          Range2_all_ones = false;
        }

        if (pos1 >= 0 && pos2 < _AP_W2) {
          ap_int_base<_AP_W2, false> Range1(0);
          Range1.V = ({ typename _ap_type::remove_const<typeof(op.V)>::type __Result__ = 0; typeof(op.V) __Val2__ = op.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), pos1, _AP_W2 - 1); __Result__; });
          Range1_all_ones = Range1 == (all_ones >> pos1);
          Range1_all_zeros = !Range1.V;
        } else if (pos2 == _AP_W2) {
          Range1_all_ones = lD;
          Range1_all_zeros = !lD;
        } else if (pos1 < 0) {
          Range1_all_zeros = !op.V;
          Range1_all_ones = false;
        }

        deleted_zeros =
            deleted_zeros && (carry ? Range1_all_ones : Range1_all_zeros);
        deleted_ones =
            carry ? Range2_all_ones && (pos1 < 0 || !lD) : Range1_all_ones;
        neg_src = isneg && !(carry && Range1_all_ones);
      } else
        neg_src = isneg && newsignbit;
      bool neg_trg = _AP_S && newsignbit;
      bool overflow = (neg_trg || !deleted_zeros) && !isneg;
      bool underflow = (!neg_trg || !deleted_ones) && neg_src;
      if ((_AP_O == AP_SAT_SYM) && _AP_S2 && _AP_S)
        underflow |=
            neg_src &&
            (_AP_W > 1 ? ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, _AP_W - 2); __Result__; }) == 0
                       : true);

      overflow_adjust(underflow, overflow, lD, neg_src);
    }
    return *this;
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator=(
      const volatile ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op) {
    operator=(const_cast<const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&>(op));
    return *this;
  }


                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& setBits(ap_ulong bv) {

    Base::V = bv;
    return *this;
  }


  static inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base bitsToFixed(ap_ulong bv) {

    ap_fixed_base t;

    t.V = bv;



    return t;
  }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) void checkOverflowCsimFix(int _ap_w2, bool _ap_s2) const {
# 974 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
      (void)_ap_w2;
      (void)_ap_s2;

      return;
  }





                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<((_AP_I) > (1) ? (_AP_I) : (1)), _AP_S> to_ap_int_base(
      bool Cnative = true) const {
    ap_int_base<((_AP_I) > (1) ? (_AP_I) : (1)), _AP_S> ret(0);
    if (_AP_I == 0) {
      ret.V = 0;
    } else if (_AP_I > 0 && _AP_I <= _AP_W) {
      ret.V = ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), _AP_W - _AP_I, _AP_W - 1); __Result__; });
    } else if (_AP_I > _AP_W) {
      ret.V = ({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, _AP_W - 1); __Result__; });
      ret.V <<= (_AP_I - _AP_W);
    }
# 1003 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
    if (Cnative && _AP_I < _AP_W) {

      if (_AP_S && ({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W - 1); __Result__; }) && (_AP_I < _AP_W) &&
          (({ typename _ap_type::remove_const<typeof(Base::V)>::type __Result__ = 0; typeof(Base::V) __Val2__ = Base::V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, _AP_I < 0 ? _AP_W - 1 : _AP_W - _AP_I - 1); __Result__; }) != (unsigned long)0))


        ret = ret + 1;
    } else {

    }
    return ret;
  };

 public:
  template <int _AP_W2, bool _AP_S2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) operator ap_int_base<_AP_W2, _AP_S2>() const {
    return ap_int_base<_AP_W2, _AP_S2>(to_ap_int_base());
  }


                      inline __attribute__((always_inline)) __attribute__((nodebug)) char to_char() const { return to_ap_int_base().to_char(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) int to_int() const { return to_ap_int_base().to_int(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) unsigned to_uint() const { return to_ap_int_base().to_uint(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_slong to_int64() const { return to_ap_int_base().to_int64(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ulong to_uint64() const { return to_ap_int_base().to_uint64(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int<_AP_I> to_ap_int() const { return ap_int<_AP_I>(to_ap_int_base()); }



  inline __attribute__((always_inline)) __attribute__((nodebug)) double to_double() const {




    enum { BITS = 52 + 11 + 1 };
    if (!Base::V) return 0.0f;
    bool s = _AP_S && ({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W - 1); __Result__; });
    ap_int_base<_AP_W, false> tmp(0);
    if (s)
      tmp.V = -Base::V;
    else
      tmp.V = Base::V;
    int l = tmp.countLeadingZeros();
    int e = _AP_I - l - 1 + ((1 << (11 - 1)) - 1);
    int lsb_index = _AP_W - l - 1 - 52;

    bool a = (lsb_index >=2) ?
        (({ typename _ap_type::remove_const<typeof(tmp.V)>::type __Result__ = 0; typeof(tmp.V) __Val2__ = tmp.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, lsb_index - 2); __Result__; }) != 0) : 0;

    a |= (lsb_index >=0) ? ({ typeof(tmp.V) __Val2__ = tmp.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), lsb_index); __Result__; }) : 0;

    ap_ulong m = 0;

    if (_AP_W > BITS) {
      m = (lsb_index >= 1) ? (ap_ulong)(tmp.V >> (lsb_index - 1))
                           : (ap_ulong)(tmp.V << (1 - lsb_index));
    } else {
      m = (ap_ulong)tmp.V;
      m = (lsb_index >= 1) ? (m >> (lsb_index - 1))
                           : (m << (1 - lsb_index));
    }
    m += a;
    m >>= 1;


    if (({ typeof(m) __Val2__ = m; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), 52 + 1); __Result__; })) {
      e += 1;
    }

    m = ({ typename _ap_type::remove_const<typeof(m)>::type __Result__ = 0; typeof(m) __Val2__ = m; typeof(s) __Repl2__ = !!s; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), BITS - 1, BITS - 1); __Result__; });

    m = ({ typename _ap_type::remove_const<typeof(m)>::type __Result__ = 0; typeof(m) __Val2__ = m; typeof(e) __Repl2__ = e; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), 52, 52 + 11 - 1); __Result__; });


    return rawBitsToDouble(m);
  }



  inline __attribute__((always_inline)) __attribute__((nodebug)) float to_float() const {




    enum { BITS = 23 + 8 + 1 };
    if (!Base::V) return 0.0f;
    bool s = _AP_S && ({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W - 1); __Result__; });
    ap_int_base<_AP_W, false> tmp;
    if (s)
      tmp.V = -Base::V;
    else
      tmp.V = Base::V;
    int l = tmp.countLeadingZeros();
    int e = _AP_I - l - 1 + ((1 << (8 - 1)) - 1);
    int lsb_index = _AP_W - l - 1 - 23;

    bool a = (lsb_index >=2) ?
        (({ typename _ap_type::remove_const<typeof(tmp.V)>::type __Result__ = 0; typeof(tmp.V) __Val2__ = tmp.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, lsb_index - 2); __Result__; }) != 0) : 0;

    a |= (lsb_index >=0) ? ({ typeof(tmp.V) __Val2__ = tmp.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), lsb_index); __Result__; }) : 0;

    unsigned long m;

    if (_AP_W > BITS) {
      m = (lsb_index >= 1) ? (unsigned long)(tmp.V >> (lsb_index - 1))
                           : (unsigned long)(tmp.V << (1 - lsb_index));
    } else {
      m = (unsigned long)tmp.V;
      m = (lsb_index >= 1) ? (m >> (lsb_index - 1))
                           : (m << (1 - lsb_index));
    }
    m += a;
    m >>= 1;

    if (({ typeof(m) __Val2__ = m; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), 23 + 1); __Result__; })) {
      e += 1;
    }

    m = ({ typename _ap_type::remove_const<typeof(m)>::type __Result__ = 0; typeof(m) __Val2__ = m; typeof(s) __Repl2__ = !!s; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), BITS - 1, BITS - 1); __Result__; });
    m = ({ typename _ap_type::remove_const<typeof(m)>::type __Result__ = 0; typeof(m) __Val2__ = m; typeof(e) __Repl2__ = e; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), 23, 23 + 8 - 1); __Result__; });

    return rawBitsToFloat(m);
  }



  inline __attribute__((always_inline)) __attribute__((nodebug)) half to_half() const {




    enum { BITS = 10 + 5 + 1 };
    if (!Base::V) return 0.0f;
    bool s = _AP_S && ({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W - 1); __Result__; });
    ap_int_base<_AP_W, false> tmp;
    if (s)
      tmp.V = -Base::V;
    else
      tmp.V = Base::V;
    int l = tmp.countLeadingZeros();
    int e = _AP_I - l - 1 + ((1 << (5 - 1)) - 1);
    int lsb_index = _AP_W - l - 1 - 10;

    bool a = (lsb_index >=2) ?
        (({ typename _ap_type::remove_const<typeof(tmp.V)>::type __Result__ = 0; typeof(tmp.V) __Val2__ = tmp.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), 0, lsb_index - 2); __Result__; }) != 0) : 0;

    a |= (lsb_index >=0) ? ({ typeof(tmp.V) __Val2__ = tmp.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), lsb_index); __Result__; }) : 0;

    unsigned short m;

    if (_AP_W > BITS) {
      m = (lsb_index >= 1) ? (unsigned short)(tmp.V >> (lsb_index - 1))
                           : (unsigned short)(tmp.V << (1 - lsb_index));
    } else {
      m = (unsigned short)tmp.V;
      m = (lsb_index >= 1) ? (m >> (lsb_index - 1))
                           : (m << (1 - lsb_index));
    }
    m += a;
    m >>= 1;

    if (({ typeof(m) __Val2__ = m; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), 10 + 1); __Result__; })) {
      e += 1;
    }

    m = ({ typename _ap_type::remove_const<typeof(m)>::type __Result__ = 0; typeof(m) __Val2__ = m; typeof(s) __Repl2__ = !!s; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), BITS - 1, BITS - 1); __Result__; });
    m = ({ typename _ap_type::remove_const<typeof(m)>::type __Result__ = 0; typeof(m) __Val2__ = m; typeof(e) __Repl2__ = e; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), 10, 10 + 5 - 1); __Result__; });

    return rawBitsToHalf(m);
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) operator long double() const { return (long double)to_double(); }

  inline __attribute__((always_inline)) __attribute__((nodebug)) operator double() const { return to_double(); }

  inline __attribute__((always_inline)) __attribute__((nodebug)) operator float() const { return to_float(); }

  inline __attribute__((always_inline)) __attribute__((nodebug)) operator half() const { return to_half(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) operator bool() const { return (bool)Base::V != 0; }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) operator char() const { return (char)to_int(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) operator signed char() const { return (signed char)to_int(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) operator unsigned char() const { return (unsigned char)to_uint(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) operator short() const { return (short)to_int(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) operator unsigned short() const { return (unsigned short)to_uint(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) operator int() const { return to_int(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) operator unsigned int() const { return to_uint(); }



                      inline __attribute__((always_inline)) __attribute__((nodebug)) operator long() const { return (long)to_int64(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) operator unsigned long() const { return (unsigned long)to_uint64(); }






                      inline __attribute__((always_inline)) __attribute__((nodebug)) operator ap_ulong() const { return to_uint64(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) operator ap_slong() const { return to_int64(); }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) int length() const { return _AP_W; };
# 1232 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
                      inline __attribute__((always_inline)) __attribute__((nodebug)) int countLeadingZeros() const {


    if (_AP_W <= 32) {
      ap_int_base<32, false> t(-1ULL);
      t.range(_AP_W - 1, 0) = this->range(0, _AP_W - 1);
      return t.V == 0 ? _AP_W : __builtin_ctz(t.V);
    } else if (_AP_W <= 64) {
      ap_int_base<64, false> t(-1ULL);
      t.range(_AP_W - 1, 0) = this->range(0, _AP_W - 1);
      return t.V == 0 ? _AP_W : __builtin_ctzll(t.V);
    } else {
      enum {__N = (_AP_W + 63) / 64};
      int NZeros = 0;
      int i = 0;
      bool hitNonZero = false;
      VITIS_LOOP_1248_1: for (i = 0; i < __N - 1; ++i) {
        ap_int_base<64, false> t;
        t.range(0, 63) = this->range(_AP_W - i * 64 - 64, _AP_W - i * 64 - 1);
        NZeros += hitNonZero ? 0 : (t.V == 0 ? 64 : __builtin_clzll(t.V));
        hitNonZero |= (t != 0);
      }
      if (!hitNonZero) {
        ap_int_base<64, false> t(-1ULL);
        t.range(63 - (_AP_W - 1) % 64, 63) = this->range(0, (_AP_W - 1) % 64);
        NZeros += t.V == 0 ? _AP_W % 64 : __builtin_clzll(t.V);
      }
      return NZeros;
    }



  }



  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<_AP_W2, _AP_I2, _AP_S2>::mult operator*(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2)
      const {
    typename RType<_AP_W2, _AP_I2, _AP_S2>::mult_base r(0), t(0);
    r.V = Base::V;
    t.V = op2.V;
    r.V *= op2.V;
    return r;
  }



  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<_AP_W2, _AP_I2, _AP_S2>::div operator/(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2)
      const {
    typename RType<_AP_W2, _AP_I2, _AP_S2>::div_base r;
# 1302 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
        ap_fixed_base<_AP_W + ((_AP_W2 - _AP_I2) > (0) ? (_AP_W2 - _AP_I2) : (0)),_AP_I, _AP_S> t(*this);



        r.V = t.V / op2.V;
# 1335 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
    return r;
  }
# 1350 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<_AP_W2, _AP_I2, _AP_S2>::plus operator +( const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) const { typename RType<_AP_W2, _AP_I2, _AP_S2>::plus_base ret(0), lhs(*this), rhs(op2); ret.V = lhs.V + rhs.V; return ret; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<_AP_W2, _AP_I2, _AP_S2>::minus operator -( const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) const { typename RType<_AP_W2, _AP_I2, _AP_S2>::minus_base ret(0), lhs(*this), rhs(op2); ret.V = lhs.V - rhs.V; return ret; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<_AP_W2, _AP_I2, _AP_S2>::logic operator &( const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) const { typename RType<_AP_W2, _AP_I2, _AP_S2>::logic_base ret(0), lhs(*this), rhs(op2); ret.V = lhs.V & rhs.V; return ret; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<_AP_W2, _AP_I2, _AP_S2>::logic operator |( const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) const { typename RType<_AP_W2, _AP_I2, _AP_S2>::logic_base ret(0), lhs(*this), rhs(op2); ret.V = lhs.V | rhs.V; return ret; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename RType<_AP_W2, _AP_I2, _AP_S2>::logic operator ^( const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) const { typename RType<_AP_W2, _AP_I2, _AP_S2>::logic_base ret(0), lhs(*this), rhs(op2); ret.V = lhs.V ^ rhs.V; return ret; }
# 1368 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator *=( const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) { *this = operator *(op2); return *this; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator /=( const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) { *this = operator /(op2); return *this; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator +=( const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) { *this = operator +(op2); return *this; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator -=( const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) { *this = operator -(op2); return *this; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator &=( const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) { *this = operator &(op2); return *this; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator |=( const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) { *this = operator |(op2); return *this; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator ^=( const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) { *this = operator ^(op2); return *this; }





  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator++() {
    operator+=(ap_fixed_base<_AP_W - _AP_I + 1, 1, false>(1));
    return *this;
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator--() {
    operator-=(ap_fixed_base<_AP_W - _AP_I + 1, 1, false>(1));
    return *this;
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) const ap_fixed_base operator++(int) {
    ap_fixed_base r(*this);
    operator++();
    return r;
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) const ap_fixed_base operator--(int) {
    ap_fixed_base r(*this);
    operator--();
    return r;
  }



  inline __attribute__((always_inline)) __attribute__((nodebug)) typename _ap_fixed_factory<_AP_W, _AP_I, _AP_S>::type operator+() { return *this; }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) typename _ap_fixed_factory<_AP_W + 1, _AP_I + 1, true>::type operator-() const {
    ap_fixed_base<_AP_W + 1, _AP_I + 1, true> r(*this);
    r.V = -r.V;
    return r;
  }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, true, _AP_Q, _AP_O, _AP_N> getNeg() {
    ap_fixed_base<_AP_W, _AP_I, true, _AP_Q, _AP_O, _AP_N> r(*this);
    r.V = -r.V;
    return r;
  }



                      inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator!() const { return Base::V == (unsigned long)0; }




                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S> operator~() const {
    ap_fixed_base<_AP_W, _AP_I, _AP_S> r(0);
    r.V = ~Base::V;
    return r;
  }




  template <int _AP_SHIFT>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I + _AP_SHIFT, _AP_S> lshift() const {
    ap_fixed_base<_AP_W, _AP_I + _AP_SHIFT, _AP_S> r(0);
    r.V = Base::V;
    return r;
  }

  template <int _AP_SHIFT>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I - _AP_SHIFT, _AP_S> rshift() const {
    ap_fixed_base<_AP_W, _AP_I - _AP_SHIFT, _AP_S> r(0);
    r.V = Base::V;
    return r;
  }





                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base operator<<(unsigned int sh) const {
    ap_fixed_base r(0);
    r.V = Base::V << sh;
# 1486 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
    return r;
  }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base operator>>(unsigned int sh) const {
    ap_fixed_base r(0);
    r.V = Base::V >> sh;
# 1508 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
    return r;
  }


                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base operator<<(int sh) const {
    ap_fixed_base r(0);
    bool isNeg = sh < 0;
    unsigned int ush = isNeg ? -sh : sh;
    if (isNeg) {
      return operator>>(ush);
    } else {
      return operator<<(ush);
    }
  }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base operator>>(int sh) const {
    bool isNeg = sh < 0;
    unsigned int ush = isNeg ? -sh : sh;
    if (isNeg) {
      return operator<<(ush);
    } else {
      return operator>>(ush);
    }
  }


  template <int _AP_W2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base operator<<(const ap_int_base<_AP_W2, true>& op2) const {


    int sh = op2.to_int();
    return operator<<(sh);
  }

  template <int _AP_W2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base operator>>(const ap_int_base<_AP_W2, true>& op2) const {
    int sh = op2.to_int();
    return operator>>(sh);
  }


  template <int _AP_W2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base operator<<(const ap_int_base<_AP_W2, false>& op2) const {
    unsigned int sh = op2.to_uint();
    return operator<<(sh);
  }

  template <int _AP_W2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base operator>>(const ap_int_base<_AP_W2, false>& op2) const {
    unsigned int sh = op2.to_uint();
    return operator>>(sh);
  }


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base operator<<(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&
          op2) {
    return operator<<(op2.to_ap_int_base());
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base operator>>(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&
          op2) {
    return operator>>(op2.to_ap_int_base());
  }





                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator<<=(const int sh) {
    *this = operator<<(sh);
    return *this;
  }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator<<=(const unsigned int sh) {
    *this = operator<<(sh);
    return *this;
  }

  template <int _AP_W2, bool _AP_S2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator<<=(const ap_int_base<_AP_W2, _AP_S2>& sh) {
    *this = operator<<(sh.to_int());
    return *this;
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator<<=(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&
          sh) {
    *this = operator<<(sh.to_int());
    return *this;
  }


                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator>>=(const int sh) {
    *this = operator>>(sh);
    return *this;
  }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator>>=(const unsigned int sh) {
    *this = operator>>(sh);
    return *this;
  }

  template <int _AP_W2, bool _AP_S2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator>>=(const ap_int_base<_AP_W2, _AP_S2>& sh) {
    *this = operator>>(sh.to_int());
    return *this;
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base& operator>>=(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&
          sh) {
    *this = operator>>(sh.to_int());
    return *this;
  }
# 1652 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) const { enum { _AP_F = _AP_W - _AP_I, F2 = _AP_W2 - _AP_I2 }; if (_AP_F == F2) return Base::V > op2.V; else if (_AP_F > F2) return Base::V > ap_fixed_base<((_AP_W2 + _AP_F - F2) > (1) ? (_AP_W2 + _AP_F - F2) : (1)), _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>(op2).V; else return ap_fixed_base<((_AP_W + F2 - _AP_F + 1) > (1) ? (_AP_W + F2 - _AP_F + 1) : (1)), _AP_I + 1, _AP_S, _AP_Q, _AP_O, _AP_N>(*this).V > op2.V; return false; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) const { enum { _AP_F = _AP_W - _AP_I, F2 = _AP_W2 - _AP_I2 }; if (_AP_F == F2) return Base::V < op2.V; else if (_AP_F > F2) return Base::V < ap_fixed_base<((_AP_W2 + _AP_F - F2) > (1) ? (_AP_W2 + _AP_F - F2) : (1)), _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>(op2).V; else return ap_fixed_base<((_AP_W + F2 - _AP_F + 1) > (1) ? (_AP_W + F2 - _AP_F + 1) : (1)), _AP_I + 1, _AP_S, _AP_Q, _AP_O, _AP_N>(*this).V < op2.V; return false; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) const { enum { _AP_F = _AP_W - _AP_I, F2 = _AP_W2 - _AP_I2 }; if (_AP_F == F2) return Base::V >= op2.V; else if (_AP_F > F2) return Base::V >= ap_fixed_base<((_AP_W2 + _AP_F - F2) > (1) ? (_AP_W2 + _AP_F - F2) : (1)), _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>(op2).V; else return ap_fixed_base<((_AP_W + F2 - _AP_F + 1) > (1) ? (_AP_W + F2 - _AP_F + 1) : (1)), _AP_I + 1, _AP_S, _AP_Q, _AP_O, _AP_N>(*this).V >= op2.V; return false; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) const { enum { _AP_F = _AP_W - _AP_I, F2 = _AP_W2 - _AP_I2 }; if (_AP_F == F2) return Base::V <= op2.V; else if (_AP_F > F2) return Base::V <= ap_fixed_base<((_AP_W2 + _AP_F - F2) > (1) ? (_AP_W2 + _AP_F - F2) : (1)), _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>(op2).V; else return ap_fixed_base<((_AP_W + F2 - _AP_F + 1) > (1) ? (_AP_W + F2 - _AP_F + 1) : (1)), _AP_I + 1, _AP_S, _AP_Q, _AP_O, _AP_N>(*this).V <= op2.V; return false; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) const { enum { _AP_F = _AP_W - _AP_I, F2 = _AP_W2 - _AP_I2 }; if (_AP_F == F2) return Base::V == op2.V; else if (_AP_F > F2) return Base::V == ap_fixed_base<((_AP_W2 + _AP_F - F2) > (1) ? (_AP_W2 + _AP_F - F2) : (1)), _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>(op2).V; else return ap_fixed_base<((_AP_W + F2 - _AP_F + 1) > (1) ? (_AP_W + F2 - _AP_F + 1) : (1)), _AP_I + 1, _AP_S, _AP_Q, _AP_O, _AP_N>(*this).V == op2.V; return false; }
  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2, ap_o_mode _AP_O2, int _AP_N2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) const { enum { _AP_F = _AP_W - _AP_I, F2 = _AP_W2 - _AP_I2 }; if (_AP_F == F2) return Base::V != op2.V; else if (_AP_F > F2) return Base::V != ap_fixed_base<((_AP_W2 + _AP_F - F2) > (1) ? (_AP_W2 + _AP_F - F2) : (1)), _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>(op2).V; else return ap_fixed_base<((_AP_W + F2 - _AP_F + 1) > (1) ? (_AP_W + F2 - _AP_F + 1) : (1)), _AP_I + 1, _AP_S, _AP_Q, _AP_O, _AP_N>(*this).V != op2.V; return false; }





  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >(double d) const { return to_double() > d; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <(double d) const { return to_double() < d; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=(double d) const { return to_double() >= d; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=(double d) const { return to_double() <= d; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==(double d) const { return to_double() == d; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=(double d) const { return to_double() != d; }


  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> operator[](
      unsigned index) {
    (static_cast<void>(0));
    return af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>(this, index);
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> operator[](
      const ap_int_base<_AP_W2, _AP_S2>& index) {
    (static_cast<void>(0));
    (static_cast<void>(0));
    return af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>(this,
                                                                index.to_int());
  }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator[](unsigned index) const {
    (static_cast<void>(0));
    return ({ typeof(const_cast<ap_fixed_base*>(this)->V) __Val2__ = const_cast<ap_fixed_base*>(this)->V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), index); __Result__; });
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> bit(
      unsigned index) {
    (static_cast<void>(0));
    return af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>(this, index);
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> bit(
      const ap_int_base<_AP_W2, _AP_S2>& index) {
    (static_cast<void>(0));
    (static_cast<void>(0));
    return af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>(this,
                                                                index.to_int());
  }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) bool bit(unsigned index) const {
    (static_cast<void>(0));
    return ({ typeof(const_cast<ap_fixed_base*>(this)->V) __Val2__ = const_cast<ap_fixed_base*>(this)->V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), index); __Result__; });
  }

  template <int _AP_W2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> get_bit(
      const ap_int_base<_AP_W2, true>& index) {
    (static_cast<void>(0));

    (static_cast<void>(0));
    return af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>(
        this, index.to_int() + _AP_W - _AP_I);
  }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) bool get_bit(int index) const {
    (static_cast<void>(0));
    (static_cast<void>(0));
    return ({ typeof(const_cast<ap_fixed_base*>(this)->V) __Val2__ = const_cast<ap_fixed_base*>(this)->V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), index + _AP_W - _AP_I); __Result__; });

  }
# 1738 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
  template <int _AP_W2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) bool get_bit(const ap_int_base<_AP_W2, true>& index) const {
    (static_cast<void>(0));
    (static_cast<void>(0));
    return ({ typeof(const_cast<ap_fixed_base*>(this)->V) __Val2__ = const_cast<ap_fixed_base*>(this)->V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), index.to_int() + _AP_W - _AP_I); __Result__; });

  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> range(int Hi,
                                                                      int Lo) {
    (static_cast<void>(0));
    return af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>(this, Hi, Lo);
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> range(
      int Hi, int Lo) const {
    (static_cast<void>(0));
    return af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>(
        const_cast<ap_fixed_base*>(this), Hi, Lo);
  }

  template <int _AP_W2, bool _AP_S2, int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> range(
      const ap_int_base<_AP_W2, _AP_S2>& HiIdx,
      const ap_int_base<_AP_W3, _AP_S3>& LoIdx) {
    int Hi = HiIdx.to_int();
    int Lo = LoIdx.to_int();
    return this->range(Hi, Lo);
  }

  template <int _AP_W2, bool _AP_S2, int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> range(
      const ap_int_base<_AP_W2, _AP_S2>& HiIdx,
      const ap_int_base<_AP_W3, _AP_S3>& LoIdx) const {
    int Hi = HiIdx.to_int();
    int Lo = LoIdx.to_int();
    return this->range(Hi, Lo);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> range() {
    return this->range(_AP_W - 1, 0);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> range() const {
    return this->range(_AP_W - 1, 0);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> operator()(
      int Hi, int Lo) {
    return this->range(Hi, Lo);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> operator()(
      int Hi, int Lo) const {
    return this->range(Hi, Lo);
  }

  template <int _AP_W2, bool _AP_S2, int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> operator()(
      const ap_int_base<_AP_W2, _AP_S2>& HiIdx,
      const ap_int_base<_AP_W3, _AP_S3>& LoIdx) {
    int Hi = HiIdx.to_int();
    int Lo = LoIdx.to_int();
    return this->range(Hi, Lo);
  }

  template <int _AP_W2, bool _AP_S2, int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> operator()(
      const ap_int_base<_AP_W2, _AP_S2>& HiIdx,
      const ap_int_base<_AP_W3, _AP_S3>& LoIdx) const {
    int Hi = HiIdx.to_int();
    int Lo = LoIdx.to_int();
    return this->range(Hi, Lo);
  }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) bool is_zero() const { return Base::V == (unsigned long)0; }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) bool is_neg() const {
    if (_AP_S && ({ typeof(Base::V) __Val2__ = Base::V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), _AP_W - 1); __Result__; })) return true;
    return false;
  }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) int wl() const { return _AP_W; }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) int iwl() const { return _AP_I; }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_q_mode q_mode() const { return _AP_Q; }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_o_mode o_mode() const { return _AP_O; }

                      inline __attribute__((always_inline)) __attribute__((nodebug)) int n_bits() const { return _AP_N; }
# 1921 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) char* to_string(unsigned char radix = 2, bool sign = _AP_S) const {
    (void)(radix);
    (void)(sign);
    return 0;
  }

};

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
                    inline __attribute__((always_inline)) __attribute__((nodebug)) void b_not(
    ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& ret,
    const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) {
  ret.V = ~op.V;
}

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
                    inline __attribute__((always_inline)) __attribute__((nodebug)) void b_and(
    ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& ret,
    const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op1,
    const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op2) {
  ret.V = op1.V & op2.V;
}

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
                    inline __attribute__((always_inline)) __attribute__((nodebug)) void b_or(
    ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& ret,
    const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op1,
    const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op2) {
  ret.V = op1.V | op2.V;
}

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
                    inline __attribute__((always_inline)) __attribute__((nodebug)) void b_xor(
    ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& ret,
    const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op1,
    const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op2) {
  ret.V = op1.V ^ op2.V;
}

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N, int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
          ap_o_mode _AP_O2, int _AP_N2>
                    inline __attribute__((always_inline)) __attribute__((nodebug)) void neg(
    ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& ret,
    const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op) {
  ap_fixed_base<_AP_W2 + !_AP_S2, _AP_I2 + !_AP_S2, true, _AP_Q2, _AP_O2,
                _AP_N2>
      t(0);
  t.V = -op.V;
  ret = t;
}

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N, int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
          ap_o_mode _AP_O2, int _AP_N2>
                    inline __attribute__((always_inline)) __attribute__((nodebug)) void lshift(
    ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& ret,
    const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op,
    int i) {
  enum {
    F2 = _AP_W2 - _AP_I2,
    _AP_I3 = ((_AP_I) > (_AP_I2) ? (_AP_I) : (_AP_I2)),
    _AP_W3 = _AP_I3 + F2,
  };

  ap_fixed_base<_AP_W3, _AP_I3, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> t(0);
  t.V = op.V;
  t.V <<= i;

  ret = t;
}

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N, int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
          ap_o_mode _AP_O2, int _AP_N2>
                    inline __attribute__((always_inline)) __attribute__((nodebug)) void rshift(
    ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& ret,
    const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op,
    int i) {
  enum {
    F = _AP_W - _AP_I,
    F2 = _AP_W2 - _AP_I2,
    F3 = ((F) > (F2) ? (F) : (F2)),
    _AP_W3 = _AP_I2 + F3,
    sh = F - F2,
  };

  ap_fixed_base<_AP_W3, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> t(0);
  t.V = op.V;
  if (sh >= 0)
    t.V <<= (int) sh;
  t.V >>= i;

  ret = t;
}
# 2373 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::plus operator +( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator +(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::plus operator +( bool i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(1), (1), (false)>(i_op).operator +(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::minus operator -( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator -(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::minus operator -( bool i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(1), (1), (false)>(i_op).operator -(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::mult operator *( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator *(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::mult operator *( bool i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(1), (1), (false)>(i_op).operator *(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::div operator /( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator /(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::div operator /( bool i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(1), (1), (false)>(i_op).operator /(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::logic operator &( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator &(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::logic operator &( bool i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(1), (1), (false)>(i_op).operator &(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::logic operator |( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator |(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::logic operator |( bool i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(1), (1), (false)>(i_op).operator |(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::logic operator ^( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator ^(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::logic operator ^( bool i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(1), (1), (false)>(i_op).operator ^(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::lhs operator >>( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator >>(ap_int_base<(1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (1), (1), (false)>::lhs operator <<( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator <<(ap_int_base<(1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator +=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator +=(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator -=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator -=(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator *=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator *=(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator /=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator /=(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator &=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator &=(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator |=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator |=(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator ^=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator ^=(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator >>=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator >>=(ap_int_base<(1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator <<=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator <<=(ap_int_base<(1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator >(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( bool i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(1), (1), (false)>(i_op).operator >(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator <(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( bool i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(1), (1), (false)>(i_op).operator <(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator >=(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( bool i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(1), (1), (false)>(i_op).operator >=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator <=(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( bool i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(1), (1), (false)>(i_op).operator <=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator ==(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( bool i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(1), (1), (false)>(i_op).operator ==(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool i_op) { return op.operator !=(ap_fixed_base<(1), (1), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( bool i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(1), (1), (false)>(i_op).operator !=(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::plus operator +( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator +(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::plus operator +( char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op).operator +(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::minus operator -( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator -(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::minus operator -( char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op).operator -(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::mult operator *( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator *(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::mult operator *( char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op).operator *(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::div operator /( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator /(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::div operator /( char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op).operator /(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::logic operator &( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator &(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::logic operator &( char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op).operator &(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::logic operator |( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator |(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::logic operator |( char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op).operator |(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::logic operator ^( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator ^(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::logic operator ^( char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op).operator ^(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::lhs operator >>( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator >>(ap_int_base<(8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (CHAR_IS_SIGNED)>::lhs operator <<( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator <<(ap_int_base<(8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator +=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator +=(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator -=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator -=(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator *=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator *=(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator /=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator /=(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator &=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator &=(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator |=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator |=(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator ^=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator ^=(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator >>=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator >>=(ap_int_base<(8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator <<=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator <<=(ap_int_base<(8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator >(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op).operator >(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator <(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op).operator <(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator >=(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op).operator >=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator <=(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op).operator <=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator ==(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op).operator ==(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char i_op) { return op.operator !=(ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (CHAR_IS_SIGNED)>(i_op).operator !=(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::plus operator +( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator +(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::plus operator +( signed char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (true)>(i_op).operator +(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::minus operator -( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator -(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::minus operator -( signed char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (true)>(i_op).operator -(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::mult operator *( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator *(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::mult operator *( signed char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (true)>(i_op).operator *(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::div operator /( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator /(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::div operator /( signed char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (true)>(i_op).operator /(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::logic operator &( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator &(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::logic operator &( signed char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (true)>(i_op).operator &(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::logic operator |( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator |(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::logic operator |( signed char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (true)>(i_op).operator |(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::logic operator ^( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator ^(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::logic operator ^( signed char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (true)>(i_op).operator ^(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::lhs operator >>( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator >>(ap_int_base<(8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (true)>::lhs operator <<( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator <<(ap_int_base<(8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator +=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator +=(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator -=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator -=(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator *=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator *=(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator /=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator /=(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator &=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator &=(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator |=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator |=(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator ^=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator ^=(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator >>=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator >>=(ap_int_base<(8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator <<=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator <<=(ap_int_base<(8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator >(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( signed char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (true)>(i_op).operator >(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator <(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( signed char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (true)>(i_op).operator <(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator >=(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( signed char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (true)>(i_op).operator >=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator <=(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( signed char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (true)>(i_op).operator <=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator ==(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( signed char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (true)>(i_op).operator ==(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char i_op) { return op.operator !=(ap_fixed_base<(8), (8), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( signed char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (true)>(i_op).operator !=(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::plus operator +( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator +(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::plus operator +( unsigned char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (false)>(i_op).operator +(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::minus operator -( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator -(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::minus operator -( unsigned char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (false)>(i_op).operator -(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::mult operator *( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator *(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::mult operator *( unsigned char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (false)>(i_op).operator *(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::div operator /( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator /(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::div operator /( unsigned char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (false)>(i_op).operator /(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::logic operator &( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator &(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::logic operator &( unsigned char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (false)>(i_op).operator &(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::logic operator |( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator |(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::logic operator |( unsigned char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (false)>(i_op).operator |(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::logic operator ^( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator ^(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::logic operator ^( unsigned char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (false)>(i_op).operator ^(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::lhs operator >>( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator >>(ap_int_base<(8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (8), (8), (false)>::lhs operator <<( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator <<(ap_int_base<(8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator +=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator +=(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator -=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator -=(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator *=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator *=(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator /=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator /=(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator &=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator &=(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator |=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator |=(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator ^=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator ^=(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator >>=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator >>=(ap_int_base<(8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator <<=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator <<=(ap_int_base<(8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator >(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( unsigned char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (false)>(i_op).operator >(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator <(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( unsigned char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (false)>(i_op).operator <(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator >=(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( unsigned char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (false)>(i_op).operator >=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator <=(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( unsigned char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (false)>(i_op).operator <=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator ==(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( unsigned char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (false)>(i_op).operator ==(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char i_op) { return op.operator !=(ap_fixed_base<(8), (8), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( unsigned char i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(8), (8), (false)>(i_op).operator !=(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::plus operator +( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator +(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::plus operator +( short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op).operator +(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::minus operator -( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator -(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::minus operator -( short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op).operator -(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::mult operator *( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator *(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::mult operator *( short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op).operator *(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::div operator /( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator /(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::div operator /( short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op).operator /(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::logic operator &( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator &(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::logic operator &( short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op).operator &(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::logic operator |( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator |(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::logic operator |( short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op).operator |(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::logic operator ^( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator ^(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::logic operator ^( short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op).operator ^(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::lhs operator >>( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator >>(ap_int_base<(_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (true)>::lhs operator <<( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator <<(ap_int_base<(_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator +=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator +=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator -=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator -=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator *=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator *=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator /=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator /=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator &=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator &=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator |=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator |=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator ^=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator ^=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator >>=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator >>=(ap_int_base<(_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator <<=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator <<=(ap_int_base<(_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator >(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op).operator >(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator <(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op).operator <(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator >=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op).operator >=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator <=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op).operator <=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator ==(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op).operator ==(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short i_op) { return op.operator !=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (true)>(i_op).operator !=(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::plus operator +( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator +(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::plus operator +( unsigned short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op).operator +(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::minus operator -( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator -(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::minus operator -( unsigned short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op).operator -(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::mult operator *( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator *(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::mult operator *( unsigned short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op).operator *(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::div operator /( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator /(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::div operator /( unsigned short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op).operator /(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::logic operator &( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator &(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::logic operator &( unsigned short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op).operator &(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::logic operator |( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator |(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::logic operator |( unsigned short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op).operator |(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::logic operator ^( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator ^(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::logic operator ^( unsigned short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op).operator ^(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::lhs operator >>( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator >>(ap_int_base<(_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_short), (_AP_SIZE_short), (false)>::lhs operator <<( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator <<(ap_int_base<(_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator +=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator +=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator -=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator -=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator *=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator *=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator /=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator /=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator &=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator &=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator |=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator |=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator ^=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator ^=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator >>=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator >>=(ap_int_base<(_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator <<=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator <<=(ap_int_base<(_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator >(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( unsigned short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op).operator >(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator <(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( unsigned short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op).operator <(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator >=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( unsigned short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op).operator >=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator <=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( unsigned short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op).operator <=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator ==(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( unsigned short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op).operator ==(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short i_op) { return op.operator !=(ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( unsigned short i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_short), (_AP_SIZE_short), (false)>(i_op).operator !=(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::plus operator +( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator +(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::plus operator +( int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op).operator +(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::minus operator -( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator -(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::minus operator -( int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op).operator -(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::mult operator *( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator *(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::mult operator *( int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op).operator *(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::div operator /( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator /(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::div operator /( int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op).operator /(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::logic operator &( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator &(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::logic operator &( int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op).operator &(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::logic operator |( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator |(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::logic operator |( int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op).operator |(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::logic operator ^( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator ^(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::logic operator ^( int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op).operator ^(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::lhs operator >>( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator >>(ap_int_base<(_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (true)>::lhs operator <<( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator <<(ap_int_base<(_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator +=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator +=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator -=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator -=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator *=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator *=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator /=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator /=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator &=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator &=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator |=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator |=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator ^=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator ^=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator >>=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator >>=(ap_int_base<(_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator <<=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator <<=(ap_int_base<(_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator >(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op).operator >(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator <(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op).operator <(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator >=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op).operator >=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator <=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op).operator <=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator ==(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op).operator ==(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int i_op) { return op.operator !=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (true)>(i_op).operator !=(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::plus operator +( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator +(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::plus operator +( unsigned int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op).operator +(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::minus operator -( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator -(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::minus operator -( unsigned int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op).operator -(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::mult operator *( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator *(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::mult operator *( unsigned int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op).operator *(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::div operator /( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator /(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::div operator /( unsigned int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op).operator /(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::logic operator &( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator &(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::logic operator &( unsigned int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op).operator &(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::logic operator |( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator |(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::logic operator |( unsigned int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op).operator |(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::logic operator ^( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator ^(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::logic operator ^( unsigned int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op).operator ^(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::lhs operator >>( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator >>(ap_int_base<(_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_int), (_AP_SIZE_int), (false)>::lhs operator <<( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator <<(ap_int_base<(_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator +=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator +=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator -=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator -=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator *=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator *=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator /=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator /=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator &=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator &=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator |=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator |=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator ^=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator ^=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator >>=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator >>=(ap_int_base<(_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator <<=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator <<=(ap_int_base<(_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator >(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( unsigned int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op).operator >(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator <(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( unsigned int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op).operator <(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator >=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( unsigned int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op).operator >=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator <=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( unsigned int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op).operator <=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator ==(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( unsigned int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op).operator ==(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int i_op) { return op.operator !=(ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( unsigned int i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_int), (_AP_SIZE_int), (false)>(i_op).operator !=(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::plus operator +( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator +(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::plus operator +( long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op).operator +(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::minus operator -( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator -(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::minus operator -( long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op).operator -(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::mult operator *( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator *(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::mult operator *( long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op).operator *(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::div operator /( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator /(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::div operator /( long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op).operator /(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::logic operator &( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator &(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::logic operator &( long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op).operator &(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::logic operator |( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator |(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::logic operator |( long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op).operator |(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::logic operator ^( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator ^(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::logic operator ^( long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op).operator ^(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::lhs operator >>( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator >>(ap_int_base<(_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (true)>::lhs operator <<( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator <<(ap_int_base<(_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator +=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator +=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator -=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator -=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator *=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator *=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator /=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator /=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator &=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator &=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator |=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator |=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator ^=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator ^=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator >>=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator >>=(ap_int_base<(_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator <<=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator <<=(ap_int_base<(_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator >(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op).operator >(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator <(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op).operator <(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator >=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op).operator >=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator <=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op).operator <=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator ==(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op).operator ==(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long i_op) { return op.operator !=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (true)>(i_op).operator !=(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::plus operator +( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator +(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::plus operator +( unsigned long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op).operator +(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::minus operator -( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator -(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::minus operator -( unsigned long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op).operator -(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::mult operator *( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator *(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::mult operator *( unsigned long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op).operator *(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::div operator /( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator /(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::div operator /( unsigned long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op).operator /(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::logic operator &( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator &(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::logic operator &( unsigned long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op).operator &(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::logic operator |( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator |(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::logic operator |( unsigned long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op).operator |(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::logic operator ^( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator ^(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::logic operator ^( unsigned long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op).operator ^(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::lhs operator >>( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator >>(ap_int_base<(_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_long), (_AP_SIZE_long), (false)>::lhs operator <<( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator <<(ap_int_base<(_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator +=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator +=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator -=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator -=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator *=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator *=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator /=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator /=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator &=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator &=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator |=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator |=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator ^=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator ^=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator >>=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator >>=(ap_int_base<(_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator <<=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator <<=(ap_int_base<(_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator >(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( unsigned long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op).operator >(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator <(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( unsigned long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op).operator <(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator >=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( unsigned long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op).operator >=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator <=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( unsigned long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op).operator <=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator ==(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( unsigned long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op).operator ==(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long i_op) { return op.operator !=(ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( unsigned long i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_long), (_AP_SIZE_long), (false)>(i_op).operator !=(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::plus operator +( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator +(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::plus operator +( ap_slong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op).operator +(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::minus operator -( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator -(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::minus operator -( ap_slong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op).operator -(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::mult operator *( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator *(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::mult operator *( ap_slong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op).operator *(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::div operator /( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator /(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::div operator /( ap_slong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op).operator /(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::logic operator &( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator &(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::logic operator &( ap_slong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op).operator &(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::logic operator |( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator |(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::logic operator |( ap_slong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op).operator |(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::logic operator ^( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator ^(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::logic operator ^( ap_slong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op).operator ^(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::lhs operator >>( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator >>(ap_int_base<(_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>::lhs operator <<( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator <<(ap_int_base<(_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator +=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator +=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator -=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator -=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator *=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator *=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator /=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator /=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator &=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator &=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator |=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator |=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator ^=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator ^=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator >>=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator >>=(ap_int_base<(_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator <<=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator <<=(ap_int_base<(_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator >(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( ap_slong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op).operator >(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator <(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( ap_slong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op).operator <(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator >=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( ap_slong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op).operator >=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator <=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( ap_slong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op).operator <=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator ==(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( ap_slong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op).operator ==(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong i_op) { return op.operator !=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( ap_slong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (true)>(i_op).operator !=(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::plus operator +( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator +(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::plus operator +( ap_ulong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op).operator +(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::minus operator -( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator -(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::minus operator -( ap_ulong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op).operator -(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::mult operator *( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator *(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::mult operator *( ap_ulong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op).operator *(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::div operator /( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator /(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::div operator /( ap_ulong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op).operator /(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::logic operator &( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator &(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::logic operator &( ap_ulong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op).operator &(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::logic operator |( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator |(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::logic operator |( ap_ulong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op).operator |(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::logic operator ^( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator ^(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::logic operator ^( ap_ulong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op).operator ^(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::lhs operator >>( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator >>(ap_int_base<(_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< (_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>::lhs operator <<( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator <<(ap_int_base<(_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator +=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator +=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator -=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator -=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator *=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator *=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator /=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator /=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator &=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator &=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator |=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator |=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator ^=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator ^=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator >>=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator >>=(ap_int_base<(_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator <<=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator <<=(ap_int_base<(_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator >(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( ap_ulong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op).operator >(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator <(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( ap_ulong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op).operator <(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator >=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( ap_ulong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op).operator >=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator <=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( ap_ulong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op).operator <=(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator ==(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( ap_ulong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op).operator ==(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong i_op) { return op.operator !=(ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( ap_ulong i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<(_AP_SIZE_ap_slong), (_AP_SIZE_ap_slong), (false)>(i_op).operator !=(op); }
# 2461 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_base.h"
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>::template RType< _AP_W, _AP_I, _AP_S>::plus operator +( const ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op).operator +(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< _AP_W2, _AP_W2, _AP_S2>::plus operator +( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator +(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>::template RType< _AP_W, _AP_I, _AP_S>::minus operator -( const ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op).operator -(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< _AP_W2, _AP_W2, _AP_S2>::minus operator -( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator -(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>::template RType< _AP_W, _AP_I, _AP_S>::mult operator *( const ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op).operator *(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< _AP_W2, _AP_W2, _AP_S2>::mult operator *( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator *(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>::template RType< _AP_W, _AP_I, _AP_S>::div operator /( const ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op).operator /(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< _AP_W2, _AP_W2, _AP_S2>::div operator /( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator /(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>::template RType< _AP_W, _AP_I, _AP_S>::logic operator &( const ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op).operator &(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< _AP_W2, _AP_W2, _AP_S2>::logic operator &( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator &(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>::template RType< _AP_W, _AP_I, _AP_S>::logic operator |( const ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op).operator |(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< _AP_W2, _AP_W2, _AP_S2>::logic operator |( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator |(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>::template RType< _AP_W, _AP_I, _AP_S>::logic operator ^( const ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op).operator ^(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::template RType< _AP_W2, _AP_W2, _AP_S2>::logic operator ^( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator ^(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); }



template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator +=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator +=(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W2, _AP_S2>& operator +=( ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return i_op.operator +=(op.to_ap_int_base()); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator -=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator -=(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W2, _AP_S2>& operator -=( ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return i_op.operator -=(op.to_ap_int_base()); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator *=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator *=(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W2, _AP_S2>& operator *=( ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return i_op.operator *=(op.to_ap_int_base()); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator /=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator /=(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W2, _AP_S2>& operator /=( ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return i_op.operator /=(op.to_ap_int_base()); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator &=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator &=(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W2, _AP_S2>& operator &=( ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return i_op.operator &=(op.to_ap_int_base()); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator |=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator |=(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W2, _AP_S2>& operator |=( ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return i_op.operator |=(op.to_ap_int_base()); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& operator ^=( ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator ^=(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W2, _AP_S2>& operator ^=( ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return i_op.operator ^=(op.to_ap_int_base()); }



template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator ==(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op).operator ==(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator !=(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op).operator !=(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator >(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op).operator >(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator >=(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op).operator >=(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator <(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op).operator <(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& i_op) { return op.operator <=(ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op)); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_int_base<_AP_W2, _AP_S2>& i_op, const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_fixed_base<_AP_W2, _AP_W2, _AP_S2>(i_op).operator <=(op); }




template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
                    inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator==(
    double op1,
    const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op2) {
  return op2.operator==(op1);
}

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
                    inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator!=(
    double op1,
    const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op2) {
  return op2.operator!=(op1);
}

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
                    inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator>(
    double op1,
    const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op2) {
  return op2.operator<(op1);
}

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
                    inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator>=(
    double op1,
    const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op2) {
  return op2.operator<=(op1);
}

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
                    inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator<(
    double op1,
    const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op2) {
  return op2.operator>(op1);
}

template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
                    inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator<=(
    double op1,
    const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op2) {
  return op2.operator>=(op1);
}
# 11 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_fixed.h" 2
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_ref.h" 1
# 25 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_ref.h"
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
struct af_bit_ref {



  typedef ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> ref_type;
  ref_type& d_bv;
  int d_index;

 public:
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref(
      const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& ref)
      : d_bv(ref.d_bv), d_index(ref.d_index) {






  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref(ref_type* bv, int index = 0) : d_bv(*bv), d_index(index) {}

  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref(const ref_type* bv, int index = 0)
      : d_bv(*const_cast<ref_type*>(bv)), d_index(index) {}


  inline __attribute__((always_inline)) __attribute__((nodebug)) operator bool() const { return ({ typeof(d_bv.V) __Val2__ = d_bv.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), d_index); __Result__; }); }



  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref& operator=(bool val) {
    d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val) __Repl2__ = !!val; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), d_index, d_index); __Result__; });
    return *this;
  }



  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref& operator=(const af_bit_ref& val) {
    return operator=(bool(val));
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref& operator=(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& val) {
    return operator=(bool(val));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref& operator=(const ap_bit_ref<_AP_W2, _AP_S2>& val) {
    return operator=(bool(val));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref& operator=(const ap_int_base<_AP_W2, _AP_S2>& val) {
    return operator=(val != 0);
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref& operator=(const ap_range_ref<_AP_W2, _AP_S2>& val) {
    return operator=(ap_int_base<_AP_W2, false>(val));
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref& operator=(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& val) {
    return operator=(ap_int_base<_AP_W2, false>(val));
  }

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_bit_ref& operator=(
      const ap_concat_ref<_AP_W2, _AP_T3, _AP_W3, _AP_T3>& val) {
    return operator=(ap_int_base<_AP_W2 + _AP_W3, false>(val));
  }




  template <int _AP_W2, int _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<1, af_bit_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
  operator,(ap_int_base<_AP_W2, _AP_S2> &op) {
    return ap_concat_ref<1, af_bit_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >(
        *this, op);
  }

  template <int _AP_W2, int _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<1, af_bit_ref, 1, ap_bit_ref<_AP_W2, _AP_S2> > operator,(
      const ap_bit_ref<_AP_W2, _AP_S2> &op) {
    return ap_concat_ref<1, af_bit_ref, 1, ap_bit_ref<_AP_W2, _AP_S2> >(*this,
                                                                        op);
  }

  template <int _AP_W2, int _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<1, af_bit_ref, _AP_W2, ap_range_ref<_AP_W2, _AP_S2> >
  operator,(const ap_range_ref<_AP_W2, _AP_S2> &op) {
    return ap_concat_ref<1, af_bit_ref, _AP_W2, ap_range_ref<_AP_W2, _AP_S2> >(
        *this, op);
  }

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<1, af_bit_ref, _AP_W2 + _AP_W3,
                       ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> >
  operator,(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> &op) {
    return ap_concat_ref<1, af_bit_ref, _AP_W2 + _AP_W3,
                         ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> >(*this,
                                                                         op);
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<
      1, af_bit_ref, _AP_W2,
      af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >
  operator,(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> &op) {
    return ap_concat_ref<
        1, af_bit_ref, _AP_W2,
        af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >(*this,
                                                                       op);
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<1, af_bit_ref, 1, af_bit_ref<_AP_W2, _AP_I2, _AP_S2,
                                                    _AP_Q2, _AP_O2, _AP_N2> >
  operator,(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> &op) {
    return ap_concat_ref<1, af_bit_ref, 1, af_bit_ref<_AP_W2, _AP_I2, _AP_S2,
                                                      _AP_Q2, _AP_O2, _AP_N2> >(
        *this,
        const_cast<af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&>(
            op));
  }




  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator==(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op) {
    return get() == op.get();
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator!=(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op) {
    return get() != op.get();
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator~() const {
    bool bit = ({ typeof(d_bv.V) __Val2__ = d_bv.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), d_index); __Result__; });
    return bit ? false : true;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) bool get() const { return ({ typeof(d_bv.V) __Val2__ = d_bv.V; bool __Result__ = __builtin_bit_select((void*)(&__Val2__), d_index); __Result__; }); }

  inline __attribute__((always_inline)) __attribute__((nodebug)) int length() const { return 1; }





  inline __attribute__((always_inline)) __attribute__((nodebug)) char* to_string() const { return 0; }

};
# 212 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_ref.h"
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O,
          int _AP_N>
struct af_range_ref {



  typedef ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N> ref_type;
  ref_type& d_bv;
  int l_index;
  int h_index;

 public:

  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref(
      const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& ref)
      : d_bv(ref.d_bv), l_index(ref.l_index), h_index(ref.h_index) {}




  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref(ref_type* bv, int h, int l)
      : d_bv(*bv), l_index(l), h_index(h) {
# 242 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_ref.h"
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref(const ref_type* bv, int h, int l)
      : d_bv(*const_cast<ref_type*>(bv)), l_index(l), h_index(h) {
# 254 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_ref.h"
  }
# 266 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_ref.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const bool val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const char val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const signed char val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const unsigned char val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const short val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const unsigned short val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const int val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const unsigned int val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const long val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const unsigned long val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const ap_slong val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const ap_ulong val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const half val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const float val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const double val) { ap_int_base<_AP_W, false> loc(val); d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(loc.V) __Repl2__ = loc.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; }); return *this; }



  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const char* val) {
    const ap_int_base<_AP_W, false> tmp(val);
    d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(tmp.V) __Repl2__ = tmp.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; });
    return *this;
  }



  template <int _AP_W3, bool _AP_S3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const ap_int_base<_AP_W3, _AP_S3>& val) {
    d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val.V) __Repl2__ = val.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; });
    return *this;
  }


  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const ap_range_ref<_AP_W2, _AP_S2>& val) {
    const ap_int_base<_AP_W2, false> tmp(val);
    return operator=(tmp);
  }


  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const ap_bit_ref<_AP_W2, _AP_S2>& val) {
    const ap_int_base<1, false> tmp((bool)val);
    return operator=(tmp);
  }


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(
      const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&
          val) {
    d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val.V) __Repl2__ = val.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; });
    return *this;
  }




  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(const af_range_ref& val) {
    ap_int_base<_AP_W, false> tmp(val);
    return operator=(tmp);
  }


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& val) {
    ap_int_base<_AP_W2, false> tmp(val);
    return operator=(tmp);
  }


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& val) {
    ap_int_base<1, false> tmp((bool)val);
    return operator=(tmp);
  }


  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) af_range_ref& operator=(
      const ap_concat_ref<_AP_W2, _AP_T3, _AP_W3, _AP_T3>& val) {
    const ap_int_base<_AP_W2 + _AP_W3, false> tmp(val);
    return operator=(tmp);
  }




  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator==(const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    ap_int_base<_AP_W, false> lop(*this);
    ap_int_base<_AP_W2, false> rop(op2);
    return lop == rop;
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator!=(const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    return !(operator==(op2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator<(const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    ap_int_base<_AP_W, false> lop(*this);
    ap_int_base<_AP_W2, false> rop(op2);
    return lop < rop;
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator>(const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    ap_int_base<_AP_W, false> lop(*this);
    ap_int_base<_AP_W2, false> rop(op2);
    return lop > rop;
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator<=(const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    return !(operator>(op2));
  }

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator>=(const ap_range_ref<_AP_W2, _AP_S2>& op2) {
    return !(operator<(op2));
  }




  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator==(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) {
    ap_int_base<_AP_W, false> lop(*this);
    ap_int_base<_AP_W2, false> rop(op2);
    return lop == rop;
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator!=(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) {
    return !(operator==(op2));
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator<(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) {
    ap_int_base<_AP_W, false> lop(*this);
    ap_int_base<_AP_W2, false> rop(op2);
    return lop < rop;
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator>(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) {
    ap_int_base<_AP_W, false> lop(*this);
    ap_int_base<_AP_W2, false> rop(op2);
    return lop > rop;
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator<=(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) {
    return !(operator>(op2));
  }

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator>=(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op2) {
    return !(operator<(op2));
  }





  template <int _AP_W2, int _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_W, af_range_ref, _AP_W2, ap_int_base<_AP_W2, _AP_S2> >
      operator,(ap_int_base<_AP_W2, _AP_S2> &op) {
    return ap_concat_ref<_AP_W, af_range_ref, _AP_W2,
                         ap_int_base<_AP_W2, _AP_S2> >(*this, op);
  }


  template <int _AP_W2, int _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, af_range_ref, 1, ap_bit_ref<_AP_W2, _AP_S2> >
  operator,(const ap_bit_ref<_AP_W2, _AP_S2> &op) {
    return ap_concat_ref<_AP_W, af_range_ref, 1, ap_bit_ref<_AP_W2, _AP_S2> >(
        *this, const_cast<ap_bit_ref<_AP_W2, _AP_S2>&>(op));
  }


  template <int _AP_W2, int _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, af_range_ref, _AP_W2, ap_range_ref<_AP_W2, _AP_S2> >
  operator,(const ap_range_ref<_AP_W2, _AP_S2> &op) {
    return ap_concat_ref<_AP_W, af_range_ref, _AP_W2,
                         ap_range_ref<_AP_W2, _AP_S2> >(
        *this, const_cast<ap_range_ref<_AP_W2, _AP_S2>&>(op));
  }


  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_concat_ref<_AP_W, af_range_ref, _AP_W2 + _AP_W3,
                       ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> >
  operator,(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> &op) {
    return ap_concat_ref<_AP_W, af_range_ref, _AP_W2 + _AP_W3,
                         ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3> >(
        *this, const_cast<ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>&>(op));
  }


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_W, af_range_ref, _AP_W2,
                    af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >
      operator,(const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>
                    &op) {
    return ap_concat_ref<
        _AP_W, af_range_ref, _AP_W2,
        af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >(
        *this,
        const_cast<af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&>(
            op));
  }


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug))
      ap_concat_ref<_AP_W, af_range_ref, 1,
                    af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >
      operator,(
          const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> &op) {
    return ap_concat_ref<
        _AP_W, af_range_ref, 1,
        af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2> >(
        *this,
        const_cast<af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>&>(
            op));
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) operator ap_ulong() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return ret.to_uint64();
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) operator ap_int_base<_AP_W, false>() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return ret;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, false> to_ap_int_base() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return ret;
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) char to_char() const {
    return (char)(({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; }));
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) int to_int() const {
    return (int)(({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; }));
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) unsigned to_uint() const {
    return (unsigned)(({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; }));
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) long to_long() const {
    return (long)(({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; }));
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) unsigned long to_ulong() const {
    return (unsigned long)(({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; }));
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_slong to_int64() const {
    return (ap_slong)(({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; }));
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ulong to_uint64() const {
    return (ap_ulong)(({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; }));
  }



  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, false> operator~() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return (~ret);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, false> operator!() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return (!ret);
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, false> operator+() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return ret;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, false> operator-() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return (-ret);
  }


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_int_base<_AP_W, false> get() const {
    ap_int_base<_AP_W, false> ret;
    ret.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; __builtin_bit_part_select((void*)(&__Result__), (void*)(&__Val2__), l_index, h_index); __Result__; });
    return ret;
  }

  template <int _AP_W2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) void set(const ap_int_base<_AP_W2, false>& val) {
    d_bv.V = ({ typename _ap_type::remove_const<typeof(d_bv.V)>::type __Result__ = 0; typeof(d_bv.V) __Val2__ = d_bv.V; typeof(val.V) __Repl2__ = val.V; __builtin_bit_part_set((void*)(&__Result__), (void*)(&__Val2__), (void*)(&__Repl2__), l_index, h_index); __Result__; });
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) int length() const {
    return h_index >= l_index ? h_index - l_index + 1 : l_index - h_index + 1;
  }
# 615 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_ref.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) char* to_string(signed char rd = 2) const {
     (void)(rd);
    return 0;
  }

};
# 679 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_ref.h"
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<(1), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( bool op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(1), (false)>(op2) > ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool op2) { return bool(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( bool op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<(1), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( bool op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(1), (false)>(op2) < ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool op2) { return bool(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( bool op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<(1), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( bool op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(1), (false)>(op2) >= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool op2) { return bool(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( bool op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<(1), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( bool op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(1), (false)>(op2) <= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool op2) { return bool(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( bool op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<(1), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( bool op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(1), (false)>(op2) == ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool op2) { return bool(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( bool op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<(1), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( bool op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(1), (false)>(op2) != ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, bool op2) { return bool(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( bool op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != bool(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) > ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char op2) { return bool(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) < ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char op2) { return bool(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) >= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char op2) { return bool(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) <= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char op2) { return bool(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) == ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char op2) { return bool(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<(8), (CHAR_IS_SIGNED)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (CHAR_IS_SIGNED)>(op2) != ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, char op2) { return bool(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != bool(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<(8), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( signed char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (true)>(op2) > ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char op2) { return bool(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( signed char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<(8), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( signed char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (true)>(op2) < ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char op2) { return bool(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( signed char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<(8), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( signed char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (true)>(op2) >= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char op2) { return bool(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( signed char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<(8), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( signed char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (true)>(op2) <= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char op2) { return bool(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( signed char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<(8), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( signed char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (true)>(op2) == ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char op2) { return bool(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( signed char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<(8), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( signed char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (true)>(op2) != ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, signed char op2) { return bool(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( signed char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != bool(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<(8), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( unsigned char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (false)>(op2) > ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char op2) { return bool(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( unsigned char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<(8), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( unsigned char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (false)>(op2) < ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char op2) { return bool(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( unsigned char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<(8), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( unsigned char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (false)>(op2) >= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char op2) { return bool(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( unsigned char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<(8), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( unsigned char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (false)>(op2) <= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char op2) { return bool(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( unsigned char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<(8), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( unsigned char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (false)>(op2) == ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char op2) { return bool(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( unsigned char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<(8), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( unsigned char op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(8), (false)>(op2) != ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned char op2) { return bool(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( unsigned char op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != bool(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( short op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) > ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short op2) { return bool(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( short op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( short op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) < ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short op2) { return bool(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( short op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( short op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) >= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short op2) { return bool(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( short op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( short op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) <= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short op2) { return bool(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( short op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( short op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) == ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short op2) { return bool(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( short op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<(_AP_SIZE_short), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( short op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_short), (true)>(op2) != ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, short op2) { return bool(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( short op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != bool(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( unsigned short op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) > ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short op2) { return bool(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( unsigned short op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( unsigned short op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) < ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short op2) { return bool(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( unsigned short op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( unsigned short op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) >= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short op2) { return bool(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( unsigned short op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( unsigned short op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) <= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short op2) { return bool(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( unsigned short op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( unsigned short op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) == ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short op2) { return bool(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( unsigned short op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<(_AP_SIZE_short), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( unsigned short op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_short), (false)>(op2) != ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned short op2) { return bool(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( unsigned short op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != bool(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( int op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) > ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int op2) { return bool(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( int op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( int op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) < ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int op2) { return bool(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( int op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( int op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) >= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int op2) { return bool(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( int op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( int op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) <= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int op2) { return bool(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( int op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( int op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) == ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int op2) { return bool(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( int op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<(_AP_SIZE_int), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( int op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_int), (true)>(op2) != ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, int op2) { return bool(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( int op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != bool(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( unsigned int op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) > ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int op2) { return bool(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( unsigned int op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( unsigned int op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) < ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int op2) { return bool(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( unsigned int op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( unsigned int op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) >= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int op2) { return bool(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( unsigned int op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( unsigned int op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) <= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int op2) { return bool(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( unsigned int op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( unsigned int op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) == ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int op2) { return bool(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( unsigned int op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<(_AP_SIZE_int), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( unsigned int op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_int), (false)>(op2) != ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned int op2) { return bool(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( unsigned int op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != bool(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( long op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) > ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long op2) { return bool(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( long op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( long op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) < ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long op2) { return bool(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( long op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( long op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) >= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long op2) { return bool(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( long op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( long op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) <= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long op2) { return bool(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( long op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( long op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) == ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long op2) { return bool(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( long op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<(_AP_SIZE_long), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( long op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_long), (true)>(op2) != ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, long op2) { return bool(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( long op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != bool(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( unsigned long op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) > ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long op2) { return bool(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( unsigned long op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( unsigned long op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) < ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long op2) { return bool(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( unsigned long op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( unsigned long op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) >= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long op2) { return bool(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( unsigned long op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( unsigned long op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) <= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long op2) { return bool(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( unsigned long op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( unsigned long op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) == ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long op2) { return bool(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( unsigned long op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<(_AP_SIZE_long), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( unsigned long op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_long), (false)>(op2) != ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, unsigned long op2) { return bool(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( unsigned long op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != bool(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( ap_slong op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) > ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong op2) { return bool(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( ap_slong op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( ap_slong op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) < ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong op2) { return bool(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( ap_slong op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( ap_slong op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) >= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong op2) { return bool(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( ap_slong op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( ap_slong op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) <= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong op2) { return bool(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( ap_slong op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( ap_slong op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) == ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong op2) { return bool(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( ap_slong op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( ap_slong op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (true)>(op2) != ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_slong op2) { return bool(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( ap_slong op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != bool(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) > ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( ap_ulong op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) > ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong op2) { return bool(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( ap_ulong op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) < ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( ap_ulong op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) < ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong op2) { return bool(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( ap_ulong op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) >= ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( ap_ulong op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) >= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong op2) { return bool(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( ap_ulong op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) <= ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( ap_ulong op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) <= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong op2) { return bool(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( ap_ulong op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) == ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( ap_ulong op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) == ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong op2) { return bool(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( ap_ulong op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == bool(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong op2) { return ap_int_base<_AP_W, false>(op) != ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( ap_ulong op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return ap_int_base<(_AP_SIZE_ap_slong), (false)>(op2) != ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, ap_ulong op2) { return bool(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( ap_ulong op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != bool(op); }
# 725 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_ref.h"
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S>& op2) { return ap_int_base<_AP_W, false>(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_int_base<_AP_W2, _AP_S2>& op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op) > op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >( const ap_int_base<_AP_W2, _AP_S2>& op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 > ap_int_base<1, false>(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S>& op2) { return ap_int_base<_AP_W, false>(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_int_base<_AP_W2, _AP_S2>& op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op) < op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <( const ap_int_base<_AP_W2, _AP_S2>& op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 < ap_int_base<1, false>(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S>& op2) { return ap_int_base<_AP_W, false>(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_int_base<_AP_W2, _AP_S2>& op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op) >= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator >=( const ap_int_base<_AP_W2, _AP_S2>& op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 >= ap_int_base<1, false>(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S>& op2) { return ap_int_base<_AP_W, false>(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_int_base<_AP_W2, _AP_S2>& op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op) <= op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator <=( const ap_int_base<_AP_W2, _AP_S2>& op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 <= ap_int_base<1, false>(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S>& op2) { return ap_int_base<_AP_W, false>(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_int_base<_AP_W2, _AP_S2>& op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op) == op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator ==( const ap_int_base<_AP_W2, _AP_S2>& op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 == ap_int_base<1, false>(op); }
template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S>& op2) { return ap_int_base<_AP_W, false>(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_int_base<_AP_W2, _AP_S2>& op2, const af_range_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != ap_int_base<_AP_W, false>(op); } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op, const ap_int_base<_AP_W2, _AP_S2>& op2) { return ap_int_base<1, false>(op) != op2; } template <int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N, int _AP_W2, bool _AP_S2> inline __attribute__((always_inline)) __attribute__((nodebug)) bool operator !=( const ap_int_base<_AP_W2, _AP_S2>& op2, const af_bit_ref<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>& op) { return op2 != ap_int_base<1, false>(op); }
# 12 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_fixed.h" 2





template <int _AP_W, int _AP_I, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N>
struct ap_fixed : ap_fixed_base<_AP_W, _AP_I, true, _AP_Q, _AP_O, _AP_N> {
  static_assert(_AP_W > 0, "ap_fixed bitwidth must be positive");

  typedef ap_fixed_base<_AP_W, _AP_I, true, _AP_Q, _AP_O, _AP_N> Base;


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed() = default;


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2,
                                      _AP_O2, _AP_N2>& op)
      : Base(op) {}

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(const volatile ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2,
                                               _AP_O2, _AP_N2>& op)
      : Base(op) {}
# 68 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_fixed.h"
  template <int _AP_W2, bool _AP_S2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(const ap_int_base<_AP_W2, _AP_S2>& op) : Base(op) {}

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(const volatile ap_int_base<_AP_W2, _AP_S2>& op) : Base(op) {}




  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(unsigned V __attribute__((bitwidth(_AP_W))), bool raw) {
    Base::V = V;
    (void)(raw);
  }
# 103 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_fixed.h"
  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(const ap_bit_ref<_AP_W2, _AP_S2>& op) : Base(op) {}


  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(const ap_range_ref<_AP_W2, _AP_S2>& op) : Base(op) {}


  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& op)
      : Base(op) {}


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base(op) {}


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base(op) {}





                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(bool v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(char v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(signed char v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(unsigned char v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(short v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(unsigned short v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(int v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(unsigned int v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(long v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(unsigned long v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(ap_slong v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(ap_ulong v) : Base(v) {}
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(half v) : Base(v) {}
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(float v) : Base(v) {}
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(double v) : Base(v) {}


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(const char* s) : Base(s) {}

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed(const char* s, signed char rd) : Base(s, rd) {}







  ap_fixed &
  operator=(const ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> &op) = default;
# 170 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_fixed.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) void operator=(
      const ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N>& op) volatile {
    Base::V = op.V;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_fixed& operator=(
      const volatile ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N>& op) {
    Base::V = op.V;
    return *this;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) void operator=(
      const volatile ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N>& op) volatile {
    Base::V = op.V;
  }
};





template <int _AP_W, int _AP_I, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N>
struct ap_ufixed : ap_fixed_base<_AP_W, _AP_I, false, _AP_Q, _AP_O, _AP_N> {
  static_assert(_AP_W > 0, "ap_ufixed bitwidth must be positive");

  typedef ap_fixed_base<_AP_W, _AP_I, false, _AP_Q, _AP_O, _AP_N> Base;


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed() = default;


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(const ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2,
                                       _AP_O2, _AP_N2>& op)
      : Base(op) {}


  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(const volatile ap_fixed_base<_AP_W2, _AP_I2, _AP_S2, _AP_Q2,
                                                _AP_O2, _AP_N2>& op)
      : Base(op) {}
# 241 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_fixed.h"
  template <int _AP_W2, bool _AP_S2>
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(const ap_int_base<_AP_W2, _AP_S2>& op) : Base(op) {}

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(const volatile ap_int_base<_AP_W2, _AP_S2>& op) : Base(op) {}




  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(unsigned V __attribute__((bitwidth(_AP_W))), bool raw) {
    Base::V = V;
    (void)(raw);
  }
# 273 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_fixed.h"
  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(const ap_bit_ref<_AP_W2, _AP_S2>& op) : Base(op) {}

  template <int _AP_W2, bool _AP_S2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(const ap_range_ref<_AP_W2, _AP_S2>& op) : Base(op) {}

  template <int _AP_W2, typename _AP_T2, int _AP_W3, typename _AP_T3>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(const ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>& op)
      : Base(op) {}

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(
      const af_bit_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base(op) {}

  template <int _AP_W2, int _AP_I2, bool _AP_S2, ap_q_mode _AP_Q2,
            ap_o_mode _AP_O2, int _AP_N2>
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(
      const af_range_ref<_AP_W2, _AP_I2, _AP_S2, _AP_Q2, _AP_O2, _AP_N2>& op)
      : Base(op) {}




                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(bool v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(char v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(signed char v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(unsigned char v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(short v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(unsigned short v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(int v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(unsigned int v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(long v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(unsigned long v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(ap_slong v) : Base(v) {}
                      inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(ap_ulong v) : Base(v) {}
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(half v) : Base(v) {}
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(float v) : Base(v) {}
  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(double v) : Base(v) {}


  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(const char* s) : Base(s) {}

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed(const char* s, signed char rd) : Base(s, rd) {}



  ap_ufixed &
  operator=(const ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> &op) = default;
# 331 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_fixed.h"
  inline __attribute__((always_inline)) __attribute__((nodebug)) void operator=(
      const ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N>& op) volatile {
    Base::V = op.V;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) ap_ufixed& operator=(
      const volatile ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N>& op) {
    Base::V = op.V;
    return *this;
  }

  inline __attribute__((always_inline)) __attribute__((nodebug)) void operator=(const volatile ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O,
                                                 _AP_N>& op) volatile {
    Base::V = op.V;
  }
};
# 369 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_fixed.h"
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_special.h" 1
# 20 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_special.h"
namespace std {
template<typename _Tp> class complex;
}







namespace std {
# 48 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_special.h"
template <int _AP_W, int _AP_I, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N>
class complex<ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> > {
 public:
  typedef ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> _Tp;
  typedef _Tp value_type;




  __attribute__((nodebug)) complex() = default;


  __attribute__((nodebug)) complex(const _Tp &__r, const _Tp &__i = _Tp(0))
      : _M_real(__r), _M_imag(__i) {}


  template <typename _Up>
  __attribute__((nodebug)) complex(const complex<_Up> &__z) : _M_real(__z.real()), _M_imag(__z.imag()) {}


  const __attribute__((nodebug)) _Tp& real() const { return _M_real; }
  const __attribute__((nodebug)) _Tp& imag() const { return _M_imag; }







  __attribute__((nodebug)) void real(_Tp __val) { _M_real = __val; }

  __attribute__((nodebug)) void imag(_Tp __val) { _M_imag = __val; }



  __attribute__((nodebug)) complex<_Tp> &operator=(const _Tp __t) {
    _M_real = __t;
    _M_imag = _Tp(0);
    return *this;
  }



  __attribute__((nodebug)) complex<_Tp> &operator+=(const _Tp &__t) {
    _M_real += __t;
    return *this;
  }



  __attribute__((nodebug)) complex<_Tp> &operator-=(const _Tp &__t) {
    _M_real -= __t;
    return *this;
  }



  __attribute__((nodebug)) complex<_Tp> &operator*=(const _Tp &__t) {
    _M_real *= __t;
    _M_imag *= __t;
    return *this;
  }



  __attribute__((nodebug)) complex<_Tp> &operator/=(const _Tp &__t) {
    _M_real /= __t;
    _M_imag /= __t;
    return *this;
  }


  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator=(const complex<_Up> &__z) {
    auto tmp1 = __z;
    complex<_Tp> tmp2 = {tmp1.real(), tmp1.imag()};
    *this = tmp2;
    return *this;
  }



  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator+=(const complex<_Up> &__z) {
    _M_real += __z.real();
    _M_imag += __z.imag();
    return *this;
  }



  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator-=(const complex<_Up> &__z) {
    _M_real -= __z.real();
    _M_imag -= __z.imag();
    return *this;
  }



  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator*=(const complex<_Up> &__z) {
    const _Tp __r = _M_real * __z.real() - _M_imag * __z.imag();
    _M_imag = _M_real * __z.imag() + _M_imag * __z.real();
    _M_real = __r;
    return *this;
  }



  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator/=(const complex<_Up> &__z) {
    complex<_Tp> cj (__z.real(), -__z.imag());
    complex<_Tp> a = (*this) * cj;
    complex<_Tp> b = cj * __z;
    _M_real = a.real() / b.real();
    _M_imag = a.imag() / b.real();
    return *this;
  }

 private:
  _Tp _M_real;
  _Tp _M_imag;

};
# 190 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_special.h"
template <int _AP_W, int _AP_I, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N>
class complex<ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> > {
 public:
  typedef ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> _Tp;
  typedef _Tp value_type;




  __attribute__((nodebug)) complex() = default;


  __attribute__((nodebug)) complex(const _Tp &__r, const _Tp &__i = _Tp(0))
      : _M_real(__r), _M_imag(__i) {}


  template <typename _Up>
  __attribute__((nodebug)) complex(const complex<_Up> &__z) : _M_real(__z.real()), _M_imag(__z.imag()) {}


  const __attribute__((nodebug)) _Tp& real() const { return _M_real; }
  const __attribute__((nodebug)) _Tp& imag() const { return _M_imag; }







  __attribute__((nodebug)) void real(_Tp __val) { _M_real = __val; }

  __attribute__((nodebug)) void imag(_Tp __val) { _M_imag = __val; }



  __attribute__((nodebug)) complex<_Tp> &operator=(const _Tp __t) {
    _M_real = __t;
    _M_imag = _Tp(0);
    return *this;
  }



  __attribute__((nodebug)) complex<_Tp> &operator+=(const _Tp &__t) {
    _M_real += __t;
    return *this;
  }



  __attribute__((nodebug)) complex<_Tp> &operator-=(const _Tp &__t) {
    _M_real -= __t;
    return *this;
  }



  __attribute__((nodebug)) complex<_Tp> &operator*=(const _Tp &__t) {
    _M_real *= __t;
    _M_imag *= __t;
    return *this;
  }



  __attribute__((nodebug)) complex<_Tp> &operator/=(const _Tp &__t) {
    _M_real /= __t;
    _M_imag /= __t;
    return *this;
  }


  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator=(const complex<_Up> &__z) {
    auto tmp1 = __z;
    complex<_Tp> tmp2 = {tmp1.real(), tmp1.imag()};
    *this = tmp2;
    return *this;
  }



  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator+=(const complex<_Up> &__z) {
    _M_real += __z.real();
    _M_imag += __z.imag();
    return *this;
  }



  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator-=(const complex<_Up> &__z) {
    _M_real -= __z.real();
    _M_imag -= __z.imag();
    return *this;
  }



  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator*=(const complex<_Up> &__z) {
    const _Tp __r = _M_real * __z.real() - _M_imag * __z.imag();
    _M_imag = _M_real * __z.imag() + _M_imag * __z.real();
    _M_real = __r;
    return *this;
  }



  template <typename _Up>
  __attribute__((nodebug)) complex<_Tp> &operator/=(const complex<_Up> &__z) {
    complex<_Tp> cj (__z.real(), -__z.imag());
    complex<_Tp> a = (*this) * cj;
    complex<_Tp> b = cj * __z;
    _M_real = a.real() / b.real();
    _M_imag = a.imag() / b.real();
    return *this;
  }

 private:
  _Tp _M_real;
  _Tp _M_imag;

};
# 323 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/etc/ap_fixed_special.h"
template <int _AP_W, int _AP_I, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N>
inline __attribute__((nodebug)) bool operator==(
    const complex<ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> > &__x,
    const ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> &__y) {
  return __x.real() == __y &&
         __x.imag() == 0;
}


template <int _AP_W, int _AP_I, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N>
inline __attribute__((nodebug)) bool operator==(
    const ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> &__x,
    const complex<ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> > &__y) {
  return __x == __y.real() &&
         0 == __y.imag();
}


template <int _AP_W, int _AP_I, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N>
inline __attribute__((nodebug)) bool operator!=(
    const complex<ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> > &__x,
    const ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> &__y) {
  return __x.real() != __y ||
         __x.imag() != 0;
}


template <int _AP_W, int _AP_I, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N>
inline __attribute__((nodebug)) bool operator!=(
    const ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> &__x,
    const complex<ap_fixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> > &__y) {
  return __x != __y.real() ||
         0 != __y.imag();
}


template <int _AP_W, int _AP_I, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N>
inline __attribute__((nodebug)) bool operator==(
    const complex<ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> > &__x,
    const ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> &__y) {
  return __x.real() == __y &&
         __x.imag() == 0;
}


template <int _AP_W, int _AP_I, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N>
inline __attribute__((nodebug)) bool operator==(
    const ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> &__x,
    const complex<ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> > &__y) {
  return __x == __y.real() &&
         0 == __y.imag();
}


template <int _AP_W, int _AP_I, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N>
inline __attribute__((nodebug)) bool operator!=(
    const complex<ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> > &__x,
    const ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> &__y) {
  return __x.real() != __y ||
         __x.imag() != 0;
}


template <int _AP_W, int _AP_I, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N>
inline __attribute__((nodebug)) bool operator!=(
    const ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> &__x,
    const complex<ap_ufixed<_AP_W, _AP_I, _AP_Q, _AP_O, _AP_N> > &__y) {
  return __x != __y.real() ||
         0 != __y.imag();
}

}
# 370 "/software/common/Xilinx_Vitis/Vitis/2024.2/common/technology/autopilot/ap_fixed.h" 2
# 5 "./cordiccart2pol.h" 2




typedef ap_fixed<8,3> data_t;
# 19 "./cordiccart2pol.h"
__attribute__((sdx_kernel("cordiccart2pol", 0))) void cordiccart2pol(data_t x, data_t y, data_t * r, data_t * theta);
void init_cart2pol_LUTs(data_t my_LUT_th[(1 << (8 << 1))], data_t my_LUT_r[(1 << (8 << 1))]);
# 2 "cordiccart2pol.cpp" 2
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/math.h" 1 3
# 36 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/math.h" 3
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/cmath" 1 3
# 40 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/cmath" 3

# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/x86_64-pc-linux-gnu/bits/c++config.h" 1 3
# 236 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/x86_64-pc-linux-gnu/bits/c++config.h" 3
namespace std
{
  typedef long unsigned int size_t;
  typedef long int ptrdiff_t;


  typedef decltype(nullptr) nullptr_t;

}
# 258 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/x86_64-pc-linux-gnu/bits/c++config.h" 3
namespace std
{
  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
}
namespace __gnu_cxx
{
  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
}
# 508 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/x86_64-pc-linux-gnu/bits/c++config.h" 3
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/x86_64-pc-linux-gnu/bits/os_defines.h" 1 3
# 39 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/x86_64-pc-linux-gnu/bits/os_defines.h" 3
# 1 "/usr/include/features.h" 1 3 4
# 394 "/usr/include/features.h" 3 4
# 1 "/usr/include/features-time64.h" 1 3 4
# 20 "/usr/include/features-time64.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 21 "/usr/include/features-time64.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 2 3 4
# 22 "/usr/include/features-time64.h" 2 3 4
# 395 "/usr/include/features.h" 2 3 4
# 480 "/usr/include/features.h" 3 4
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 481 "/usr/include/features.h" 2 3 4
# 502 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
# 576 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 577 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 578 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 503 "/usr/include/features.h" 2 3 4
# 526 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
# 527 "/usr/include/features.h" 2 3 4
# 40 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/x86_64-pc-linux-gnu/bits/os_defines.h" 2 3
# 509 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/x86_64-pc-linux-gnu/bits/c++config.h" 2 3


# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/x86_64-pc-linux-gnu/bits/cpu_defines.h" 1 3
# 512 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/x86_64-pc-linux-gnu/bits/c++config.h" 2 3
# 42 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/cmath" 2 3
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/bits/cpp_type_traits.h" 1 3
# 36 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/bits/cpp_type_traits.h" 3
# 67 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/bits/cpp_type_traits.h" 3
extern "C++" {

namespace std __attribute__ ((__visibility__ ("default")))
{


  struct __true_type { };
  struct __false_type { };

  template<bool>
    struct __truth_type
    { typedef __false_type __type; };

  template<>
    struct __truth_type<true>
    { typedef __true_type __type; };



  template<class _Sp, class _Tp>
    struct __traitor
    {
      enum { __value = bool(_Sp::__value) || bool(_Tp::__value) };
      typedef typename __truth_type<__value>::__type __type;
    };


  template<typename, typename>
    struct __are_same
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<typename _Tp>
    struct __are_same<_Tp, _Tp>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<typename _Tp>
    struct __is_void
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<>
    struct __is_void<void>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_integer
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };





  template<>
    struct __is_integer<bool>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<signed char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<>
    struct __is_integer<wchar_t>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };



  template<>
    struct __is_integer<char16_t>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<char32_t>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<>
    struct __is_integer<short>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned short>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<int>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned int>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<long long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned long long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };
# 261 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/bits/cpp_type_traits.h" 3
template<> struct __is_integer<__int128> { enum { __value = 1 }; typedef __true_type __type; }; template<> struct __is_integer<unsigned __int128> { enum { __value = 1 }; typedef __true_type __type; };
# 278 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/bits/cpp_type_traits.h" 3
  template<typename _Tp>
    struct __is_floating
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };


  template<>
    struct __is_floating<float>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_floating<double>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_floating<long double>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_pointer
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<typename _Tp>
    struct __is_pointer<_Tp*>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_arithmetic
    : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >
    { };




  template<typename _Tp>
    struct __is_scalar
    : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >
    { };




  template<typename _Tp>
    struct __is_char
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<>
    struct __is_char<char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<>
    struct __is_char<wchar_t>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<typename _Tp>
    struct __is_byte
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<>
    struct __is_byte<char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_byte<signed char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_byte<unsigned char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };
# 408 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/bits/cpp_type_traits.h" 3
  template<typename _Tp>
    struct __is_move_iterator
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };



  template<typename _Iterator>
    inline _Iterator
    __miter_base(_Iterator __it)
    { return __it; }


}
}
# 43 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/cmath" 2 3
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/ext/type_traits.h" 1 3
# 33 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/ext/type_traits.h" 3




extern "C++" {

namespace __gnu_cxx __attribute__ ((__visibility__ ("default")))
{



  template<bool, typename>
    struct __enable_if
    { };

  template<typename _Tp>
    struct __enable_if<true, _Tp>
    { typedef _Tp __type; };



  template<bool _Cond, typename _Iftrue, typename _Iffalse>
    struct __conditional_type
    { typedef _Iftrue __type; };

  template<typename _Iftrue, typename _Iffalse>
    struct __conditional_type<false, _Iftrue, _Iffalse>
    { typedef _Iffalse __type; };



  template<typename _Tp>
    struct __add_unsigned
    {
    private:
      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;

    public:
      typedef typename __if_type::__type __type;
    };

  template<>
    struct __add_unsigned<char>
    { typedef unsigned char __type; };

  template<>
    struct __add_unsigned<signed char>
    { typedef unsigned char __type; };

  template<>
    struct __add_unsigned<short>
    { typedef unsigned short __type; };

  template<>
    struct __add_unsigned<int>
    { typedef unsigned int __type; };

  template<>
    struct __add_unsigned<long>
    { typedef unsigned long __type; };

  template<>
    struct __add_unsigned<long long>
    { typedef unsigned long long __type; };


  template<>
    struct __add_unsigned<bool>;

  template<>
    struct __add_unsigned<wchar_t>;



  template<typename _Tp>
    struct __remove_unsigned
    {
    private:
      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;

    public:
      typedef typename __if_type::__type __type;
    };

  template<>
    struct __remove_unsigned<char>
    { typedef signed char __type; };

  template<>
    struct __remove_unsigned<unsigned char>
    { typedef signed char __type; };

  template<>
    struct __remove_unsigned<unsigned short>
    { typedef short __type; };

  template<>
    struct __remove_unsigned<unsigned int>
    { typedef int __type; };

  template<>
    struct __remove_unsigned<unsigned long>
    { typedef long __type; };

  template<>
    struct __remove_unsigned<unsigned long long>
    { typedef long long __type; };


  template<>
    struct __remove_unsigned<bool>;

  template<>
    struct __remove_unsigned<wchar_t>;



  template<typename _Type>
    inline bool
    __is_null_pointer(_Type* __ptr)
    { return __ptr == 0; }

  template<typename _Type>
    inline bool
    __is_null_pointer(_Type)
    { return false; }


  inline bool
  __is_null_pointer(std::nullptr_t)
  { return true; }



  template<typename _Tp, bool = std::__is_integer<_Tp>::__value>
    struct __promote
    { typedef double __type; };




  template<typename _Tp>
    struct __promote<_Tp, false>
    { };

  template<>
    struct __promote<long double>
    { typedef long double __type; };

  template<>
    struct __promote<double>
    { typedef double __type; };

  template<>
    struct __promote<float>
    { typedef float __type; };

  template<typename _Tp, typename _Up,
           typename _Tp2 = typename __promote<_Tp>::__type,
           typename _Up2 = typename __promote<_Up>::__type>
    struct __promote_2
    {
      typedef __typeof__(_Tp2() + _Up2()) __type;
    };

  template<typename _Tp, typename _Up, typename _Vp,
           typename _Tp2 = typename __promote<_Tp>::__type,
           typename _Up2 = typename __promote<_Up>::__type,
           typename _Vp2 = typename __promote<_Vp>::__type>
    struct __promote_3
    {
      typedef __typeof__(_Tp2() + _Up2() + _Vp2()) __type;
    };

  template<typename _Tp, typename _Up, typename _Vp, typename _Wp,
           typename _Tp2 = typename __promote<_Tp>::__type,
           typename _Up2 = typename __promote<_Up>::__type,
           typename _Vp2 = typename __promote<_Vp>::__type,
           typename _Wp2 = typename __promote<_Wp>::__type>
    struct __promote_4
    {
      typedef __typeof__(_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
    };


}
}
# 44 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/cmath" 2 3

# 1 "/usr/include/math.h" 1 3 4
# 27 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 28 "/usr/include/math.h" 2 3 4






extern "C" {



# 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 2 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;






typedef __int8_t __int_least8_t;
typedef __uint8_t __uint_least8_t;
typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
typedef __int64_t __int_least64_t;
typedef __uint64_t __uint_least64_t;



typedef long int __quad_t;
typedef unsigned long int __u_quad_t;







typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
# 141 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
# 142 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/time64.h" 1 3 4
# 143 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;
typedef long int __suseconds64_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;




typedef int __sig_atomic_t;
# 38 "/usr/include/math.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/math-vector.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/math-vector.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/bits/math-vector.h" 2 3 4
# 41 "/usr/include/math.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 1 3 4
# 119 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 2 3 4
# 214 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
typedef float _Float32;
# 251 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
typedef double _Float64;
# 268 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
typedef double _Float32x;
# 285 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
typedef long double _Float64x;
# 120 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 2 3 4
# 44 "/usr/include/math.h" 2 3 4
# 152 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/flt-eval-method.h" 1 3 4
# 153 "/usr/include/math.h" 2 3 4
# 163 "/usr/include/math.h" 3 4
typedef float float_t;
typedef double double_t;
# 204 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/fp-logb.h" 1 3 4
# 205 "/usr/include/math.h" 2 3 4
# 247 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/fp-fast.h" 1 3 4
# 248 "/usr/include/math.h" 2 3 4



enum
  {
    FP_INT_UPWARD =

      0,
    FP_INT_DOWNWARD =

      1,
    FP_INT_TOWARDZERO =

      2,
    FP_INT_TONEARESTFROMZERO =

      3,
    FP_INT_TONEAREST =

      4,
  };
# 312 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3 4
extern int __fpclassify (double __value) noexcept (true)
     __attribute__ ((__const__));


extern int __signbit (double __value) noexcept (true)
     __attribute__ ((__const__));



extern int __isinf (double __value) noexcept (true)
  __attribute__ ((__const__));


extern int __finite (double __value) noexcept (true)
  __attribute__ ((__const__));


extern int __isnan (double __value) noexcept (true)
  __attribute__ ((__const__));


extern int __iseqsig (double __x, double __y) noexcept (true);


extern int __issignaling (double __value) noexcept (true)
     __attribute__ ((__const__));
# 313 "/usr/include/math.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 1 3 4
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
 extern double acos (double __x) noexcept (true); extern double __acos (double __x) noexcept (true);

 extern double asin (double __x) noexcept (true); extern double __asin (double __x) noexcept (true);

 extern double atan (double __x) noexcept (true); extern double __atan (double __x) noexcept (true);

 extern double atan2 (double __y, double __x) noexcept (true); extern double __atan2 (double __y, double __x) noexcept (true);


 extern double cos (double __x) noexcept (true); extern double __cos (double __x) noexcept (true);

 extern double sin (double __x) noexcept (true); extern double __sin (double __x) noexcept (true);

 extern double tan (double __x) noexcept (true); extern double __tan (double __x) noexcept (true);




 extern double cosh (double __x) noexcept (true); extern double __cosh (double __x) noexcept (true);

 extern double sinh (double __x) noexcept (true); extern double __sinh (double __x) noexcept (true);

 extern double tanh (double __x) noexcept (true); extern double __tanh (double __x) noexcept (true);



 extern void sincos (double __x, double *__sinx, double *__cosx) noexcept (true); extern void __sincos (double __x, double *__sinx, double *__cosx) noexcept (true);





 extern double acosh (double __x) noexcept (true); extern double __acosh (double __x) noexcept (true);

 extern double asinh (double __x) noexcept (true); extern double __asinh (double __x) noexcept (true);

 extern double atanh (double __x) noexcept (true); extern double __atanh (double __x) noexcept (true);





 extern double exp (double __x) noexcept (true); extern double __exp (double __x) noexcept (true);


extern double frexp (double __x, int *__exponent) noexcept (true); extern double __frexp (double __x, int *__exponent) noexcept (true);


extern double ldexp (double __x, int __exponent) noexcept (true); extern double __ldexp (double __x, int __exponent) noexcept (true);


 extern double log (double __x) noexcept (true); extern double __log (double __x) noexcept (true);


 extern double log10 (double __x) noexcept (true); extern double __log10 (double __x) noexcept (true);


extern double modf (double __x, double *__iptr) noexcept (true); extern double __modf (double __x, double *__iptr) noexcept (true) __attribute__ ((__nonnull__ (2)));



 extern double exp10 (double __x) noexcept (true); extern double __exp10 (double __x) noexcept (true);




 extern double expm1 (double __x) noexcept (true); extern double __expm1 (double __x) noexcept (true);


 extern double log1p (double __x) noexcept (true); extern double __log1p (double __x) noexcept (true);


extern double logb (double __x) noexcept (true); extern double __logb (double __x) noexcept (true);




 extern double exp2 (double __x) noexcept (true); extern double __exp2 (double __x) noexcept (true);


 extern double log2 (double __x) noexcept (true); extern double __log2 (double __x) noexcept (true);






 extern double pow (double __x, double __y) noexcept (true); extern double __pow (double __x, double __y) noexcept (true);


extern double sqrt (double __x) noexcept (true); extern double __sqrt (double __x) noexcept (true);



 extern double hypot (double __x, double __y) noexcept (true); extern double __hypot (double __x, double __y) noexcept (true);




 extern double cbrt (double __x) noexcept (true); extern double __cbrt (double __x) noexcept (true);






extern double ceil (double __x) noexcept (true) __attribute__ ((__const__)); extern double __ceil (double __x) noexcept (true) __attribute__ ((__const__));


extern double fabs (double __x) noexcept (true) __attribute__ ((__const__)); extern double __fabs (double __x) noexcept (true) __attribute__ ((__const__));


extern double floor (double __x) noexcept (true) __attribute__ ((__const__)); extern double __floor (double __x) noexcept (true) __attribute__ ((__const__));


extern double fmod (double __x, double __y) noexcept (true); extern double __fmod (double __x, double __y) noexcept (true);
# 183 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern int finite (double __value) noexcept (true)
  __attribute__ ((__const__));


extern double drem (double __x, double __y) noexcept (true); extern double __drem (double __x, double __y) noexcept (true);



extern double significand (double __x) noexcept (true); extern double __significand (double __x) noexcept (true);






extern double copysign (double __x, double __y) noexcept (true) __attribute__ ((__const__)); extern double __copysign (double __x, double __y) noexcept (true) __attribute__ ((__const__));




extern double nan (const char *__tagb) noexcept (true); extern double __nan (const char *__tagb) noexcept (true);
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern double j0 (double) noexcept (true); extern double __j0 (double) noexcept (true);
extern double j1 (double) noexcept (true); extern double __j1 (double) noexcept (true);
extern double jn (int, double) noexcept (true); extern double __jn (int, double) noexcept (true);
extern double y0 (double) noexcept (true); extern double __y0 (double) noexcept (true);
extern double y1 (double) noexcept (true); extern double __y1 (double) noexcept (true);
extern double yn (int, double) noexcept (true); extern double __yn (int, double) noexcept (true);





 extern double erf (double) noexcept (true); extern double __erf (double) noexcept (true);
 extern double erfc (double) noexcept (true); extern double __erfc (double) noexcept (true);
extern double lgamma (double) noexcept (true); extern double __lgamma (double) noexcept (true);




extern double tgamma (double) noexcept (true); extern double __tgamma (double) noexcept (true);





extern double gamma (double) noexcept (true); extern double __gamma (double) noexcept (true);







extern double lgamma_r (double, int *__signgamp) noexcept (true); extern double __lgamma_r (double, int *__signgamp) noexcept (true);






extern double rint (double __x) noexcept (true); extern double __rint (double __x) noexcept (true);


extern double nextafter (double __x, double __y) noexcept (true); extern double __nextafter (double __x, double __y) noexcept (true);

extern double nexttoward (double __x, long double __y) noexcept (true); extern double __nexttoward (double __x, long double __y) noexcept (true);




extern double nextdown (double __x) noexcept (true); extern double __nextdown (double __x) noexcept (true);

extern double nextup (double __x) noexcept (true); extern double __nextup (double __x) noexcept (true);



extern double remainder (double __x, double __y) noexcept (true); extern double __remainder (double __x, double __y) noexcept (true);



extern double scalbn (double __x, int __n) noexcept (true); extern double __scalbn (double __x, int __n) noexcept (true);



extern int ilogb (double __x) noexcept (true); extern int __ilogb (double __x) noexcept (true);




extern long int llogb (double __x) noexcept (true); extern long int __llogb (double __x) noexcept (true);




extern double scalbln (double __x, long int __n) noexcept (true); extern double __scalbln (double __x, long int __n) noexcept (true);



extern double nearbyint (double __x) noexcept (true); extern double __nearbyint (double __x) noexcept (true);



extern double round (double __x) noexcept (true) __attribute__ ((__const__)); extern double __round (double __x) noexcept (true) __attribute__ ((__const__));



extern double trunc (double __x) noexcept (true) __attribute__ ((__const__)); extern double __trunc (double __x) noexcept (true) __attribute__ ((__const__));




extern double remquo (double __x, double __y, int *__quo) noexcept (true); extern double __remquo (double __x, double __y, int *__quo) noexcept (true);






extern long int lrint (double __x) noexcept (true); extern long int __lrint (double __x) noexcept (true);
__extension__
extern long long int llrint (double __x) noexcept (true); extern long long int __llrint (double __x) noexcept (true);



extern long int lround (double __x) noexcept (true); extern long int __lround (double __x) noexcept (true);
__extension__
extern long long int llround (double __x) noexcept (true); extern long long int __llround (double __x) noexcept (true);



extern double fdim (double __x, double __y) noexcept (true); extern double __fdim (double __x, double __y) noexcept (true);



extern double fmax (double __x, double __y) noexcept (true) __attribute__ ((__const__)); extern double __fmax (double __x, double __y) noexcept (true) __attribute__ ((__const__));


extern double fmin (double __x, double __y) noexcept (true) __attribute__ ((__const__)); extern double __fmin (double __x, double __y) noexcept (true) __attribute__ ((__const__));



extern double fma (double __x, double __y, double __z) noexcept (true); extern double __fma (double __x, double __y, double __z) noexcept (true);




extern double roundeven (double __x) noexcept (true) __attribute__ ((__const__)); extern double __roundeven (double __x) noexcept (true) __attribute__ ((__const__));



extern __intmax_t fromfp (double __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfp (double __x, int __round, unsigned int __width) noexcept (true);




extern __uintmax_t ufromfp (double __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfp (double __x, int __round, unsigned int __width) noexcept (true);





extern __intmax_t fromfpx (double __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfpx (double __x, int __round, unsigned int __width) noexcept (true);





extern __uintmax_t ufromfpx (double __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfpx (double __x, int __round, unsigned int __width) noexcept (true);



extern int canonicalize (double *__cx, const double *__x) noexcept (true);






extern double fmaxmag (double __x, double __y) noexcept (true) __attribute__ ((__const__)); extern double __fmaxmag (double __x, double __y) noexcept (true) __attribute__ ((__const__));


extern double fminmag (double __x, double __y) noexcept (true) __attribute__ ((__const__)); extern double __fminmag (double __x, double __y) noexcept (true) __attribute__ ((__const__));




extern double fmaximum (double __x, double __y) noexcept (true) __attribute__ ((__const__)); extern double __fmaximum (double __x, double __y) noexcept (true) __attribute__ ((__const__));


extern double fminimum (double __x, double __y) noexcept (true) __attribute__ ((__const__)); extern double __fminimum (double __x, double __y) noexcept (true) __attribute__ ((__const__));


extern double fmaximum_num (double __x, double __y) noexcept (true) __attribute__ ((__const__)); extern double __fmaximum_num (double __x, double __y) noexcept (true) __attribute__ ((__const__));


extern double fminimum_num (double __x, double __y) noexcept (true) __attribute__ ((__const__)); extern double __fminimum_num (double __x, double __y) noexcept (true) __attribute__ ((__const__));


extern double fmaximum_mag (double __x, double __y) noexcept (true) __attribute__ ((__const__)); extern double __fmaximum_mag (double __x, double __y) noexcept (true) __attribute__ ((__const__));


extern double fminimum_mag (double __x, double __y) noexcept (true) __attribute__ ((__const__)); extern double __fminimum_mag (double __x, double __y) noexcept (true) __attribute__ ((__const__));


extern double fmaximum_mag_num (double __x, double __y) noexcept (true) __attribute__ ((__const__)); extern double __fmaximum_mag_num (double __x, double __y) noexcept (true) __attribute__ ((__const__));


extern double fminimum_mag_num (double __x, double __y) noexcept (true) __attribute__ ((__const__)); extern double __fminimum_mag_num (double __x, double __y) noexcept (true) __attribute__ ((__const__));




extern int totalorder (const double *__x, const double *__y) noexcept (true)

     __attribute__ ((__pure__));


extern int totalordermag (const double *__x, const double *__y) noexcept (true)

     __attribute__ ((__pure__));


extern double getpayload (const double *__x) noexcept (true); extern double __getpayload (const double *__x) noexcept (true);


extern int setpayload (double *__x, double __payload) noexcept (true);


extern int setpayloadsig (double *__x, double __payload) noexcept (true);







extern double scalb (double __x, double __n) noexcept (true); extern double __scalb (double __x, double __n) noexcept (true);
# 314 "/usr/include/math.h" 2 3 4
# 329 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3 4
extern int __fpclassifyf (float __value) noexcept (true)
     __attribute__ ((__const__));


extern int __signbitf (float __value) noexcept (true)
     __attribute__ ((__const__));



extern int __isinff (float __value) noexcept (true)
  __attribute__ ((__const__));


extern int __finitef (float __value) noexcept (true)
  __attribute__ ((__const__));


extern int __isnanf (float __value) noexcept (true)
  __attribute__ ((__const__));


extern int __iseqsigf (float __x, float __y) noexcept (true);


extern int __issignalingf (float __value) noexcept (true)
     __attribute__ ((__const__));
# 330 "/usr/include/math.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 1 3 4
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
 extern float acosf (float __x) noexcept (true); extern float __acosf (float __x) noexcept (true);

 extern float asinf (float __x) noexcept (true); extern float __asinf (float __x) noexcept (true);

 extern float atanf (float __x) noexcept (true); extern float __atanf (float __x) noexcept (true);

 extern float atan2f (float __y, float __x) noexcept (true); extern float __atan2f (float __y, float __x) noexcept (true);


 extern float cosf (float __x) noexcept (true); extern float __cosf (float __x) noexcept (true);

 extern float sinf (float __x) noexcept (true); extern float __sinf (float __x) noexcept (true);

 extern float tanf (float __x) noexcept (true); extern float __tanf (float __x) noexcept (true);




 extern float coshf (float __x) noexcept (true); extern float __coshf (float __x) noexcept (true);

 extern float sinhf (float __x) noexcept (true); extern float __sinhf (float __x) noexcept (true);

 extern float tanhf (float __x) noexcept (true); extern float __tanhf (float __x) noexcept (true);



 extern void sincosf (float __x, float *__sinx, float *__cosx) noexcept (true); extern void __sincosf (float __x, float *__sinx, float *__cosx) noexcept (true);





 extern float acoshf (float __x) noexcept (true); extern float __acoshf (float __x) noexcept (true);

 extern float asinhf (float __x) noexcept (true); extern float __asinhf (float __x) noexcept (true);

 extern float atanhf (float __x) noexcept (true); extern float __atanhf (float __x) noexcept (true);





 extern float expf (float __x) noexcept (true); extern float __expf (float __x) noexcept (true);


extern float frexpf (float __x, int *__exponent) noexcept (true); extern float __frexpf (float __x, int *__exponent) noexcept (true);


extern float ldexpf (float __x, int __exponent) noexcept (true); extern float __ldexpf (float __x, int __exponent) noexcept (true);


 extern float logf (float __x) noexcept (true); extern float __logf (float __x) noexcept (true);


 extern float log10f (float __x) noexcept (true); extern float __log10f (float __x) noexcept (true);


extern float modff (float __x, float *__iptr) noexcept (true); extern float __modff (float __x, float *__iptr) noexcept (true) __attribute__ ((__nonnull__ (2)));



 extern float exp10f (float __x) noexcept (true); extern float __exp10f (float __x) noexcept (true);




 extern float expm1f (float __x) noexcept (true); extern float __expm1f (float __x) noexcept (true);


 extern float log1pf (float __x) noexcept (true); extern float __log1pf (float __x) noexcept (true);


extern float logbf (float __x) noexcept (true); extern float __logbf (float __x) noexcept (true);




 extern float exp2f (float __x) noexcept (true); extern float __exp2f (float __x) noexcept (true);


 extern float log2f (float __x) noexcept (true); extern float __log2f (float __x) noexcept (true);






 extern float powf (float __x, float __y) noexcept (true); extern float __powf (float __x, float __y) noexcept (true);


extern float sqrtf (float __x) noexcept (true); extern float __sqrtf (float __x) noexcept (true);



 extern float hypotf (float __x, float __y) noexcept (true); extern float __hypotf (float __x, float __y) noexcept (true);




 extern float cbrtf (float __x) noexcept (true); extern float __cbrtf (float __x) noexcept (true);






extern float ceilf (float __x) noexcept (true) __attribute__ ((__const__)); extern float __ceilf (float __x) noexcept (true) __attribute__ ((__const__));


extern float fabsf (float __x) noexcept (true) __attribute__ ((__const__)); extern float __fabsf (float __x) noexcept (true) __attribute__ ((__const__));


extern float floorf (float __x) noexcept (true) __attribute__ ((__const__)); extern float __floorf (float __x) noexcept (true) __attribute__ ((__const__));


extern float fmodf (float __x, float __y) noexcept (true); extern float __fmodf (float __x, float __y) noexcept (true);
# 177 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern int isinff (float __value) noexcept (true)
  __attribute__ ((__const__));




extern int finitef (float __value) noexcept (true)
  __attribute__ ((__const__));


extern float dremf (float __x, float __y) noexcept (true); extern float __dremf (float __x, float __y) noexcept (true);



extern float significandf (float __x) noexcept (true); extern float __significandf (float __x) noexcept (true);






extern float copysignf (float __x, float __y) noexcept (true) __attribute__ ((__const__)); extern float __copysignf (float __x, float __y) noexcept (true) __attribute__ ((__const__));




extern float nanf (const char *__tagb) noexcept (true); extern float __nanf (const char *__tagb) noexcept (true);
# 213 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern int isnanf (float __value) noexcept (true)
  __attribute__ ((__const__));





extern float j0f (float) noexcept (true); extern float __j0f (float) noexcept (true);
extern float j1f (float) noexcept (true); extern float __j1f (float) noexcept (true);
extern float jnf (int, float) noexcept (true); extern float __jnf (int, float) noexcept (true);
extern float y0f (float) noexcept (true); extern float __y0f (float) noexcept (true);
extern float y1f (float) noexcept (true); extern float __y1f (float) noexcept (true);
extern float ynf (int, float) noexcept (true); extern float __ynf (int, float) noexcept (true);





 extern float erff (float) noexcept (true); extern float __erff (float) noexcept (true);
 extern float erfcf (float) noexcept (true); extern float __erfcf (float) noexcept (true);
extern float lgammaf (float) noexcept (true); extern float __lgammaf (float) noexcept (true);




extern float tgammaf (float) noexcept (true); extern float __tgammaf (float) noexcept (true);





extern float gammaf (float) noexcept (true); extern float __gammaf (float) noexcept (true);







extern float lgammaf_r (float, int *__signgamp) noexcept (true); extern float __lgammaf_r (float, int *__signgamp) noexcept (true);






extern float rintf (float __x) noexcept (true); extern float __rintf (float __x) noexcept (true);


extern float nextafterf (float __x, float __y) noexcept (true); extern float __nextafterf (float __x, float __y) noexcept (true);

extern float nexttowardf (float __x, long double __y) noexcept (true); extern float __nexttowardf (float __x, long double __y) noexcept (true);




extern float nextdownf (float __x) noexcept (true); extern float __nextdownf (float __x) noexcept (true);

extern float nextupf (float __x) noexcept (true); extern float __nextupf (float __x) noexcept (true);



extern float remainderf (float __x, float __y) noexcept (true); extern float __remainderf (float __x, float __y) noexcept (true);



extern float scalbnf (float __x, int __n) noexcept (true); extern float __scalbnf (float __x, int __n) noexcept (true);



extern int ilogbf (float __x) noexcept (true); extern int __ilogbf (float __x) noexcept (true);




extern long int llogbf (float __x) noexcept (true); extern long int __llogbf (float __x) noexcept (true);




extern float scalblnf (float __x, long int __n) noexcept (true); extern float __scalblnf (float __x, long int __n) noexcept (true);



extern float nearbyintf (float __x) noexcept (true); extern float __nearbyintf (float __x) noexcept (true);



extern float roundf (float __x) noexcept (true) __attribute__ ((__const__)); extern float __roundf (float __x) noexcept (true) __attribute__ ((__const__));



extern float truncf (float __x) noexcept (true) __attribute__ ((__const__)); extern float __truncf (float __x) noexcept (true) __attribute__ ((__const__));




extern float remquof (float __x, float __y, int *__quo) noexcept (true); extern float __remquof (float __x, float __y, int *__quo) noexcept (true);






extern long int lrintf (float __x) noexcept (true); extern long int __lrintf (float __x) noexcept (true);
__extension__
extern long long int llrintf (float __x) noexcept (true); extern long long int __llrintf (float __x) noexcept (true);



extern long int lroundf (float __x) noexcept (true); extern long int __lroundf (float __x) noexcept (true);
__extension__
extern long long int llroundf (float __x) noexcept (true); extern long long int __llroundf (float __x) noexcept (true);



extern float fdimf (float __x, float __y) noexcept (true); extern float __fdimf (float __x, float __y) noexcept (true);



extern float fmaxf (float __x, float __y) noexcept (true) __attribute__ ((__const__)); extern float __fmaxf (float __x, float __y) noexcept (true) __attribute__ ((__const__));


extern float fminf (float __x, float __y) noexcept (true) __attribute__ ((__const__)); extern float __fminf (float __x, float __y) noexcept (true) __attribute__ ((__const__));



extern float fmaf (float __x, float __y, float __z) noexcept (true); extern float __fmaf (float __x, float __y, float __z) noexcept (true);




extern float roundevenf (float __x) noexcept (true) __attribute__ ((__const__)); extern float __roundevenf (float __x) noexcept (true) __attribute__ ((__const__));



extern __intmax_t fromfpf (float __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfpf (float __x, int __round, unsigned int __width) noexcept (true);




extern __uintmax_t ufromfpf (float __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfpf (float __x, int __round, unsigned int __width) noexcept (true);





extern __intmax_t fromfpxf (float __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfpxf (float __x, int __round, unsigned int __width) noexcept (true);





extern __uintmax_t ufromfpxf (float __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfpxf (float __x, int __round, unsigned int __width) noexcept (true);



extern int canonicalizef (float *__cx, const float *__x) noexcept (true);






extern float fmaxmagf (float __x, float __y) noexcept (true) __attribute__ ((__const__)); extern float __fmaxmagf (float __x, float __y) noexcept (true) __attribute__ ((__const__));


extern float fminmagf (float __x, float __y) noexcept (true) __attribute__ ((__const__)); extern float __fminmagf (float __x, float __y) noexcept (true) __attribute__ ((__const__));




extern float fmaximumf (float __x, float __y) noexcept (true) __attribute__ ((__const__)); extern float __fmaximumf (float __x, float __y) noexcept (true) __attribute__ ((__const__));


extern float fminimumf (float __x, float __y) noexcept (true) __attribute__ ((__const__)); extern float __fminimumf (float __x, float __y) noexcept (true) __attribute__ ((__const__));


extern float fmaximum_numf (float __x, float __y) noexcept (true) __attribute__ ((__const__)); extern float __fmaximum_numf (float __x, float __y) noexcept (true) __attribute__ ((__const__));


extern float fminimum_numf (float __x, float __y) noexcept (true) __attribute__ ((__const__)); extern float __fminimum_numf (float __x, float __y) noexcept (true) __attribute__ ((__const__));


extern float fmaximum_magf (float __x, float __y) noexcept (true) __attribute__ ((__const__)); extern float __fmaximum_magf (float __x, float __y) noexcept (true) __attribute__ ((__const__));


extern float fminimum_magf (float __x, float __y) noexcept (true) __attribute__ ((__const__)); extern float __fminimum_magf (float __x, float __y) noexcept (true) __attribute__ ((__const__));


extern float fmaximum_mag_numf (float __x, float __y) noexcept (true) __attribute__ ((__const__)); extern float __fmaximum_mag_numf (float __x, float __y) noexcept (true) __attribute__ ((__const__));


extern float fminimum_mag_numf (float __x, float __y) noexcept (true) __attribute__ ((__const__)); extern float __fminimum_mag_numf (float __x, float __y) noexcept (true) __attribute__ ((__const__));




extern int totalorderf (const float *__x, const float *__y) noexcept (true)

     __attribute__ ((__pure__));


extern int totalordermagf (const float *__x, const float *__y) noexcept (true)

     __attribute__ ((__pure__));


extern float getpayloadf (const float *__x) noexcept (true); extern float __getpayloadf (const float *__x) noexcept (true);


extern int setpayloadf (float *__x, float __payload) noexcept (true);


extern int setpayloadsigf (float *__x, float __payload) noexcept (true);







extern float scalbf (float __x, float __n) noexcept (true); extern float __scalbf (float __x, float __n) noexcept (true);
# 331 "/usr/include/math.h" 2 3 4
# 398 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3 4
extern int __fpclassifyl (long double __value) noexcept (true)
     __attribute__ ((__const__));


extern int __signbitl (long double __value) noexcept (true)
     __attribute__ ((__const__));



extern int __isinfl (long double __value) noexcept (true)
  __attribute__ ((__const__));


extern int __finitel (long double __value) noexcept (true)
  __attribute__ ((__const__));


extern int __isnanl (long double __value) noexcept (true)
  __attribute__ ((__const__));


extern int __iseqsigl (long double __x, long double __y) noexcept (true);


extern int __issignalingl (long double __value) noexcept (true)
     __attribute__ ((__const__));
# 399 "/usr/include/math.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 1 3 4
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
 extern long double acosl (long double __x) noexcept (true); extern long double __acosl (long double __x) noexcept (true);

 extern long double asinl (long double __x) noexcept (true); extern long double __asinl (long double __x) noexcept (true);

 extern long double atanl (long double __x) noexcept (true); extern long double __atanl (long double __x) noexcept (true);

 extern long double atan2l (long double __y, long double __x) noexcept (true); extern long double __atan2l (long double __y, long double __x) noexcept (true);


 extern long double cosl (long double __x) noexcept (true); extern long double __cosl (long double __x) noexcept (true);

 extern long double sinl (long double __x) noexcept (true); extern long double __sinl (long double __x) noexcept (true);

 extern long double tanl (long double __x) noexcept (true); extern long double __tanl (long double __x) noexcept (true);




 extern long double coshl (long double __x) noexcept (true); extern long double __coshl (long double __x) noexcept (true);

 extern long double sinhl (long double __x) noexcept (true); extern long double __sinhl (long double __x) noexcept (true);

 extern long double tanhl (long double __x) noexcept (true); extern long double __tanhl (long double __x) noexcept (true);



 extern void sincosl (long double __x, long double *__sinx, long double *__cosx) noexcept (true); extern void __sincosl (long double __x, long double *__sinx, long double *__cosx) noexcept (true);





 extern long double acoshl (long double __x) noexcept (true); extern long double __acoshl (long double __x) noexcept (true);

 extern long double asinhl (long double __x) noexcept (true); extern long double __asinhl (long double __x) noexcept (true);

 extern long double atanhl (long double __x) noexcept (true); extern long double __atanhl (long double __x) noexcept (true);





 extern long double expl (long double __x) noexcept (true); extern long double __expl (long double __x) noexcept (true);


extern long double frexpl (long double __x, int *__exponent) noexcept (true); extern long double __frexpl (long double __x, int *__exponent) noexcept (true);


extern long double ldexpl (long double __x, int __exponent) noexcept (true); extern long double __ldexpl (long double __x, int __exponent) noexcept (true);


 extern long double logl (long double __x) noexcept (true); extern long double __logl (long double __x) noexcept (true);


 extern long double log10l (long double __x) noexcept (true); extern long double __log10l (long double __x) noexcept (true);


extern long double modfl (long double __x, long double *__iptr) noexcept (true); extern long double __modfl (long double __x, long double *__iptr) noexcept (true) __attribute__ ((__nonnull__ (2)));



 extern long double exp10l (long double __x) noexcept (true); extern long double __exp10l (long double __x) noexcept (true);




 extern long double expm1l (long double __x) noexcept (true); extern long double __expm1l (long double __x) noexcept (true);


 extern long double log1pl (long double __x) noexcept (true); extern long double __log1pl (long double __x) noexcept (true);


extern long double logbl (long double __x) noexcept (true); extern long double __logbl (long double __x) noexcept (true);




 extern long double exp2l (long double __x) noexcept (true); extern long double __exp2l (long double __x) noexcept (true);


 extern long double log2l (long double __x) noexcept (true); extern long double __log2l (long double __x) noexcept (true);






 extern long double powl (long double __x, long double __y) noexcept (true); extern long double __powl (long double __x, long double __y) noexcept (true);


extern long double sqrtl (long double __x) noexcept (true); extern long double __sqrtl (long double __x) noexcept (true);



 extern long double hypotl (long double __x, long double __y) noexcept (true); extern long double __hypotl (long double __x, long double __y) noexcept (true);




 extern long double cbrtl (long double __x) noexcept (true); extern long double __cbrtl (long double __x) noexcept (true);






extern long double ceill (long double __x) noexcept (true) __attribute__ ((__const__)); extern long double __ceill (long double __x) noexcept (true) __attribute__ ((__const__));


extern long double fabsl (long double __x) noexcept (true) __attribute__ ((__const__)); extern long double __fabsl (long double __x) noexcept (true) __attribute__ ((__const__));


extern long double floorl (long double __x) noexcept (true) __attribute__ ((__const__)); extern long double __floorl (long double __x) noexcept (true) __attribute__ ((__const__));


extern long double fmodl (long double __x, long double __y) noexcept (true); extern long double __fmodl (long double __x, long double __y) noexcept (true);
# 177 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern int isinfl (long double __value) noexcept (true)
  __attribute__ ((__const__));




extern int finitel (long double __value) noexcept (true)
  __attribute__ ((__const__));


extern long double dreml (long double __x, long double __y) noexcept (true); extern long double __dreml (long double __x, long double __y) noexcept (true);



extern long double significandl (long double __x) noexcept (true); extern long double __significandl (long double __x) noexcept (true);






extern long double copysignl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__)); extern long double __copysignl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__));




extern long double nanl (const char *__tagb) noexcept (true); extern long double __nanl (const char *__tagb) noexcept (true);
# 213 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern int isnanl (long double __value) noexcept (true)
  __attribute__ ((__const__));





extern long double j0l (long double) noexcept (true); extern long double __j0l (long double) noexcept (true);
extern long double j1l (long double) noexcept (true); extern long double __j1l (long double) noexcept (true);
extern long double jnl (int, long double) noexcept (true); extern long double __jnl (int, long double) noexcept (true);
extern long double y0l (long double) noexcept (true); extern long double __y0l (long double) noexcept (true);
extern long double y1l (long double) noexcept (true); extern long double __y1l (long double) noexcept (true);
extern long double ynl (int, long double) noexcept (true); extern long double __ynl (int, long double) noexcept (true);





 extern long double erfl (long double) noexcept (true); extern long double __erfl (long double) noexcept (true);
 extern long double erfcl (long double) noexcept (true); extern long double __erfcl (long double) noexcept (true);
extern long double lgammal (long double) noexcept (true); extern long double __lgammal (long double) noexcept (true);




extern long double tgammal (long double) noexcept (true); extern long double __tgammal (long double) noexcept (true);





extern long double gammal (long double) noexcept (true); extern long double __gammal (long double) noexcept (true);







extern long double lgammal_r (long double, int *__signgamp) noexcept (true); extern long double __lgammal_r (long double, int *__signgamp) noexcept (true);






extern long double rintl (long double __x) noexcept (true); extern long double __rintl (long double __x) noexcept (true);


extern long double nextafterl (long double __x, long double __y) noexcept (true); extern long double __nextafterl (long double __x, long double __y) noexcept (true);

extern long double nexttowardl (long double __x, long double __y) noexcept (true); extern long double __nexttowardl (long double __x, long double __y) noexcept (true);




extern long double nextdownl (long double __x) noexcept (true); extern long double __nextdownl (long double __x) noexcept (true);

extern long double nextupl (long double __x) noexcept (true); extern long double __nextupl (long double __x) noexcept (true);



extern long double remainderl (long double __x, long double __y) noexcept (true); extern long double __remainderl (long double __x, long double __y) noexcept (true);



extern long double scalbnl (long double __x, int __n) noexcept (true); extern long double __scalbnl (long double __x, int __n) noexcept (true);



extern int ilogbl (long double __x) noexcept (true); extern int __ilogbl (long double __x) noexcept (true);




extern long int llogbl (long double __x) noexcept (true); extern long int __llogbl (long double __x) noexcept (true);




extern long double scalblnl (long double __x, long int __n) noexcept (true); extern long double __scalblnl (long double __x, long int __n) noexcept (true);



extern long double nearbyintl (long double __x) noexcept (true); extern long double __nearbyintl (long double __x) noexcept (true);



extern long double roundl (long double __x) noexcept (true) __attribute__ ((__const__)); extern long double __roundl (long double __x) noexcept (true) __attribute__ ((__const__));



extern long double truncl (long double __x) noexcept (true) __attribute__ ((__const__)); extern long double __truncl (long double __x) noexcept (true) __attribute__ ((__const__));




extern long double remquol (long double __x, long double __y, int *__quo) noexcept (true); extern long double __remquol (long double __x, long double __y, int *__quo) noexcept (true);






extern long int lrintl (long double __x) noexcept (true); extern long int __lrintl (long double __x) noexcept (true);
__extension__
extern long long int llrintl (long double __x) noexcept (true); extern long long int __llrintl (long double __x) noexcept (true);



extern long int lroundl (long double __x) noexcept (true); extern long int __lroundl (long double __x) noexcept (true);
__extension__
extern long long int llroundl (long double __x) noexcept (true); extern long long int __llroundl (long double __x) noexcept (true);



extern long double fdiml (long double __x, long double __y) noexcept (true); extern long double __fdiml (long double __x, long double __y) noexcept (true);



extern long double fmaxl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__)); extern long double __fmaxl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__));


extern long double fminl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__)); extern long double __fminl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__));



extern long double fmal (long double __x, long double __y, long double __z) noexcept (true); extern long double __fmal (long double __x, long double __y, long double __z) noexcept (true);




extern long double roundevenl (long double __x) noexcept (true) __attribute__ ((__const__)); extern long double __roundevenl (long double __x) noexcept (true) __attribute__ ((__const__));



extern __intmax_t fromfpl (long double __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfpl (long double __x, int __round, unsigned int __width) noexcept (true);




extern __uintmax_t ufromfpl (long double __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfpl (long double __x, int __round, unsigned int __width) noexcept (true);





extern __intmax_t fromfpxl (long double __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfpxl (long double __x, int __round, unsigned int __width) noexcept (true);





extern __uintmax_t ufromfpxl (long double __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfpxl (long double __x, int __round, unsigned int __width) noexcept (true);



extern int canonicalizel (long double *__cx, const long double *__x) noexcept (true);






extern long double fmaxmagl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__)); extern long double __fmaxmagl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__));


extern long double fminmagl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__)); extern long double __fminmagl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__));




extern long double fmaximuml (long double __x, long double __y) noexcept (true) __attribute__ ((__const__)); extern long double __fmaximuml (long double __x, long double __y) noexcept (true) __attribute__ ((__const__));


extern long double fminimuml (long double __x, long double __y) noexcept (true) __attribute__ ((__const__)); extern long double __fminimuml (long double __x, long double __y) noexcept (true) __attribute__ ((__const__));


extern long double fmaximum_numl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__)); extern long double __fmaximum_numl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__));


extern long double fminimum_numl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__)); extern long double __fminimum_numl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__));


extern long double fmaximum_magl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__)); extern long double __fmaximum_magl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__));


extern long double fminimum_magl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__)); extern long double __fminimum_magl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__));


extern long double fmaximum_mag_numl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__)); extern long double __fmaximum_mag_numl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__));


extern long double fminimum_mag_numl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__)); extern long double __fminimum_mag_numl (long double __x, long double __y) noexcept (true) __attribute__ ((__const__));




extern int totalorderl (const long double *__x, const long double *__y) noexcept (true)

     __attribute__ ((__pure__));


extern int totalordermagl (const long double *__x, const long double *__y) noexcept (true)

     __attribute__ ((__pure__));


extern long double getpayloadl (const long double *__x) noexcept (true); extern long double __getpayloadl (const long double *__x) noexcept (true);


extern int setpayloadl (long double *__x, long double __payload) noexcept (true);


extern int setpayloadsigl (long double *__x, long double __payload) noexcept (true);







extern long double scalbl (long double __x, long double __n) noexcept (true); extern long double __scalbl (long double __x, long double __n) noexcept (true);
# 400 "/usr/include/math.h" 2 3 4
# 450 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 1 3 4
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
 extern _Float32 acosf32 (_Float32 __x) noexcept (true); extern _Float32 __acosf32 (_Float32 __x) noexcept (true);

 extern _Float32 asinf32 (_Float32 __x) noexcept (true); extern _Float32 __asinf32 (_Float32 __x) noexcept (true);

 extern _Float32 atanf32 (_Float32 __x) noexcept (true); extern _Float32 __atanf32 (_Float32 __x) noexcept (true);

 extern _Float32 atan2f32 (_Float32 __y, _Float32 __x) noexcept (true); extern _Float32 __atan2f32 (_Float32 __y, _Float32 __x) noexcept (true);


 extern _Float32 cosf32 (_Float32 __x) noexcept (true); extern _Float32 __cosf32 (_Float32 __x) noexcept (true);

 extern _Float32 sinf32 (_Float32 __x) noexcept (true); extern _Float32 __sinf32 (_Float32 __x) noexcept (true);

 extern _Float32 tanf32 (_Float32 __x) noexcept (true); extern _Float32 __tanf32 (_Float32 __x) noexcept (true);




 extern _Float32 coshf32 (_Float32 __x) noexcept (true); extern _Float32 __coshf32 (_Float32 __x) noexcept (true);

 extern _Float32 sinhf32 (_Float32 __x) noexcept (true); extern _Float32 __sinhf32 (_Float32 __x) noexcept (true);

 extern _Float32 tanhf32 (_Float32 __x) noexcept (true); extern _Float32 __tanhf32 (_Float32 __x) noexcept (true);



 extern void sincosf32 (_Float32 __x, _Float32 *__sinx, _Float32 *__cosx) noexcept (true); extern void __sincosf32 (_Float32 __x, _Float32 *__sinx, _Float32 *__cosx) noexcept (true);





 extern _Float32 acoshf32 (_Float32 __x) noexcept (true); extern _Float32 __acoshf32 (_Float32 __x) noexcept (true);

 extern _Float32 asinhf32 (_Float32 __x) noexcept (true); extern _Float32 __asinhf32 (_Float32 __x) noexcept (true);

 extern _Float32 atanhf32 (_Float32 __x) noexcept (true); extern _Float32 __atanhf32 (_Float32 __x) noexcept (true);





 extern _Float32 expf32 (_Float32 __x) noexcept (true); extern _Float32 __expf32 (_Float32 __x) noexcept (true);


extern _Float32 frexpf32 (_Float32 __x, int *__exponent) noexcept (true); extern _Float32 __frexpf32 (_Float32 __x, int *__exponent) noexcept (true);


extern _Float32 ldexpf32 (_Float32 __x, int __exponent) noexcept (true); extern _Float32 __ldexpf32 (_Float32 __x, int __exponent) noexcept (true);


 extern _Float32 logf32 (_Float32 __x) noexcept (true); extern _Float32 __logf32 (_Float32 __x) noexcept (true);


 extern _Float32 log10f32 (_Float32 __x) noexcept (true); extern _Float32 __log10f32 (_Float32 __x) noexcept (true);


extern _Float32 modff32 (_Float32 __x, _Float32 *__iptr) noexcept (true); extern _Float32 __modff32 (_Float32 __x, _Float32 *__iptr) noexcept (true) __attribute__ ((__nonnull__ (2)));



 extern _Float32 exp10f32 (_Float32 __x) noexcept (true); extern _Float32 __exp10f32 (_Float32 __x) noexcept (true);




 extern _Float32 expm1f32 (_Float32 __x) noexcept (true); extern _Float32 __expm1f32 (_Float32 __x) noexcept (true);


 extern _Float32 log1pf32 (_Float32 __x) noexcept (true); extern _Float32 __log1pf32 (_Float32 __x) noexcept (true);


extern _Float32 logbf32 (_Float32 __x) noexcept (true); extern _Float32 __logbf32 (_Float32 __x) noexcept (true);




 extern _Float32 exp2f32 (_Float32 __x) noexcept (true); extern _Float32 __exp2f32 (_Float32 __x) noexcept (true);


 extern _Float32 log2f32 (_Float32 __x) noexcept (true); extern _Float32 __log2f32 (_Float32 __x) noexcept (true);






 extern _Float32 powf32 (_Float32 __x, _Float32 __y) noexcept (true); extern _Float32 __powf32 (_Float32 __x, _Float32 __y) noexcept (true);


extern _Float32 sqrtf32 (_Float32 __x) noexcept (true); extern _Float32 __sqrtf32 (_Float32 __x) noexcept (true);



 extern _Float32 hypotf32 (_Float32 __x, _Float32 __y) noexcept (true); extern _Float32 __hypotf32 (_Float32 __x, _Float32 __y) noexcept (true);




 extern _Float32 cbrtf32 (_Float32 __x) noexcept (true); extern _Float32 __cbrtf32 (_Float32 __x) noexcept (true);






extern _Float32 ceilf32 (_Float32 __x) noexcept (true) __attribute__ ((__const__)); extern _Float32 __ceilf32 (_Float32 __x) noexcept (true) __attribute__ ((__const__));


extern _Float32 fabsf32 (_Float32 __x) noexcept (true) __attribute__ ((__const__)); extern _Float32 __fabsf32 (_Float32 __x) noexcept (true) __attribute__ ((__const__));


extern _Float32 floorf32 (_Float32 __x) noexcept (true) __attribute__ ((__const__)); extern _Float32 __floorf32 (_Float32 __x) noexcept (true) __attribute__ ((__const__));


extern _Float32 fmodf32 (_Float32 __x, _Float32 __y) noexcept (true); extern _Float32 __fmodf32 (_Float32 __x, _Float32 __y) noexcept (true);
# 198 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern _Float32 copysignf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__)); extern _Float32 __copysignf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__));




extern _Float32 nanf32 (const char *__tagb) noexcept (true); extern _Float32 __nanf32 (const char *__tagb) noexcept (true);
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern _Float32 j0f32 (_Float32) noexcept (true); extern _Float32 __j0f32 (_Float32) noexcept (true);
extern _Float32 j1f32 (_Float32) noexcept (true); extern _Float32 __j1f32 (_Float32) noexcept (true);
extern _Float32 jnf32 (int, _Float32) noexcept (true); extern _Float32 __jnf32 (int, _Float32) noexcept (true);
extern _Float32 y0f32 (_Float32) noexcept (true); extern _Float32 __y0f32 (_Float32) noexcept (true);
extern _Float32 y1f32 (_Float32) noexcept (true); extern _Float32 __y1f32 (_Float32) noexcept (true);
extern _Float32 ynf32 (int, _Float32) noexcept (true); extern _Float32 __ynf32 (int, _Float32) noexcept (true);





 extern _Float32 erff32 (_Float32) noexcept (true); extern _Float32 __erff32 (_Float32) noexcept (true);
 extern _Float32 erfcf32 (_Float32) noexcept (true); extern _Float32 __erfcf32 (_Float32) noexcept (true);
extern _Float32 lgammaf32 (_Float32) noexcept (true); extern _Float32 __lgammaf32 (_Float32) noexcept (true);




extern _Float32 tgammaf32 (_Float32) noexcept (true); extern _Float32 __tgammaf32 (_Float32) noexcept (true);
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern _Float32 lgammaf32_r (_Float32, int *__signgamp) noexcept (true); extern _Float32 __lgammaf32_r (_Float32, int *__signgamp) noexcept (true);






extern _Float32 rintf32 (_Float32 __x) noexcept (true); extern _Float32 __rintf32 (_Float32 __x) noexcept (true);


extern _Float32 nextafterf32 (_Float32 __x, _Float32 __y) noexcept (true); extern _Float32 __nextafterf32 (_Float32 __x, _Float32 __y) noexcept (true);






extern _Float32 nextdownf32 (_Float32 __x) noexcept (true); extern _Float32 __nextdownf32 (_Float32 __x) noexcept (true);

extern _Float32 nextupf32 (_Float32 __x) noexcept (true); extern _Float32 __nextupf32 (_Float32 __x) noexcept (true);



extern _Float32 remainderf32 (_Float32 __x, _Float32 __y) noexcept (true); extern _Float32 __remainderf32 (_Float32 __x, _Float32 __y) noexcept (true);



extern _Float32 scalbnf32 (_Float32 __x, int __n) noexcept (true); extern _Float32 __scalbnf32 (_Float32 __x, int __n) noexcept (true);



extern int ilogbf32 (_Float32 __x) noexcept (true); extern int __ilogbf32 (_Float32 __x) noexcept (true);




extern long int llogbf32 (_Float32 __x) noexcept (true); extern long int __llogbf32 (_Float32 __x) noexcept (true);




extern _Float32 scalblnf32 (_Float32 __x, long int __n) noexcept (true); extern _Float32 __scalblnf32 (_Float32 __x, long int __n) noexcept (true);



extern _Float32 nearbyintf32 (_Float32 __x) noexcept (true); extern _Float32 __nearbyintf32 (_Float32 __x) noexcept (true);



extern _Float32 roundf32 (_Float32 __x) noexcept (true) __attribute__ ((__const__)); extern _Float32 __roundf32 (_Float32 __x) noexcept (true) __attribute__ ((__const__));



extern _Float32 truncf32 (_Float32 __x) noexcept (true) __attribute__ ((__const__)); extern _Float32 __truncf32 (_Float32 __x) noexcept (true) __attribute__ ((__const__));




extern _Float32 remquof32 (_Float32 __x, _Float32 __y, int *__quo) noexcept (true); extern _Float32 __remquof32 (_Float32 __x, _Float32 __y, int *__quo) noexcept (true);






extern long int lrintf32 (_Float32 __x) noexcept (true); extern long int __lrintf32 (_Float32 __x) noexcept (true);
__extension__
extern long long int llrintf32 (_Float32 __x) noexcept (true); extern long long int __llrintf32 (_Float32 __x) noexcept (true);



extern long int lroundf32 (_Float32 __x) noexcept (true); extern long int __lroundf32 (_Float32 __x) noexcept (true);
__extension__
extern long long int llroundf32 (_Float32 __x) noexcept (true); extern long long int __llroundf32 (_Float32 __x) noexcept (true);



extern _Float32 fdimf32 (_Float32 __x, _Float32 __y) noexcept (true); extern _Float32 __fdimf32 (_Float32 __x, _Float32 __y) noexcept (true);



extern _Float32 fmaxf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__)); extern _Float32 __fmaxf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__));


extern _Float32 fminf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__)); extern _Float32 __fminf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__));



extern _Float32 fmaf32 (_Float32 __x, _Float32 __y, _Float32 __z) noexcept (true); extern _Float32 __fmaf32 (_Float32 __x, _Float32 __y, _Float32 __z) noexcept (true);




extern _Float32 roundevenf32 (_Float32 __x) noexcept (true) __attribute__ ((__const__)); extern _Float32 __roundevenf32 (_Float32 __x) noexcept (true) __attribute__ ((__const__));



extern __intmax_t fromfpf32 (_Float32 __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfpf32 (_Float32 __x, int __round, unsigned int __width) noexcept (true);




extern __uintmax_t ufromfpf32 (_Float32 __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfpf32 (_Float32 __x, int __round, unsigned int __width) noexcept (true);





extern __intmax_t fromfpxf32 (_Float32 __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfpxf32 (_Float32 __x, int __round, unsigned int __width) noexcept (true);





extern __uintmax_t ufromfpxf32 (_Float32 __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfpxf32 (_Float32 __x, int __round, unsigned int __width) noexcept (true);



extern int canonicalizef32 (_Float32 *__cx, const _Float32 *__x) noexcept (true);






extern _Float32 fmaxmagf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__)); extern _Float32 __fmaxmagf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__));


extern _Float32 fminmagf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__)); extern _Float32 __fminmagf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__));




extern _Float32 fmaximumf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__)); extern _Float32 __fmaximumf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__));


extern _Float32 fminimumf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__)); extern _Float32 __fminimumf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__));


extern _Float32 fmaximum_numf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__)); extern _Float32 __fmaximum_numf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__));


extern _Float32 fminimum_numf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__)); extern _Float32 __fminimum_numf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__));


extern _Float32 fmaximum_magf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__)); extern _Float32 __fmaximum_magf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__));


extern _Float32 fminimum_magf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__)); extern _Float32 __fminimum_magf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__));


extern _Float32 fmaximum_mag_numf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__)); extern _Float32 __fmaximum_mag_numf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__));


extern _Float32 fminimum_mag_numf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__)); extern _Float32 __fminimum_mag_numf32 (_Float32 __x, _Float32 __y) noexcept (true) __attribute__ ((__const__));




extern int totalorderf32 (const _Float32 *__x, const _Float32 *__y) noexcept (true)

     __attribute__ ((__pure__));


extern int totalordermagf32 (const _Float32 *__x, const _Float32 *__y) noexcept (true)

     __attribute__ ((__pure__));


extern _Float32 getpayloadf32 (const _Float32 *__x) noexcept (true); extern _Float32 __getpayloadf32 (const _Float32 *__x) noexcept (true);


extern int setpayloadf32 (_Float32 *__x, _Float32 __payload) noexcept (true);


extern int setpayloadsigf32 (_Float32 *__x, _Float32 __payload) noexcept (true);
# 451 "/usr/include/math.h" 2 3 4
# 467 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 1 3 4
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
 extern _Float64 acosf64 (_Float64 __x) noexcept (true); extern _Float64 __acosf64 (_Float64 __x) noexcept (true);

 extern _Float64 asinf64 (_Float64 __x) noexcept (true); extern _Float64 __asinf64 (_Float64 __x) noexcept (true);

 extern _Float64 atanf64 (_Float64 __x) noexcept (true); extern _Float64 __atanf64 (_Float64 __x) noexcept (true);

 extern _Float64 atan2f64 (_Float64 __y, _Float64 __x) noexcept (true); extern _Float64 __atan2f64 (_Float64 __y, _Float64 __x) noexcept (true);


 extern _Float64 cosf64 (_Float64 __x) noexcept (true); extern _Float64 __cosf64 (_Float64 __x) noexcept (true);

 extern _Float64 sinf64 (_Float64 __x) noexcept (true); extern _Float64 __sinf64 (_Float64 __x) noexcept (true);

 extern _Float64 tanf64 (_Float64 __x) noexcept (true); extern _Float64 __tanf64 (_Float64 __x) noexcept (true);




 extern _Float64 coshf64 (_Float64 __x) noexcept (true); extern _Float64 __coshf64 (_Float64 __x) noexcept (true);

 extern _Float64 sinhf64 (_Float64 __x) noexcept (true); extern _Float64 __sinhf64 (_Float64 __x) noexcept (true);

 extern _Float64 tanhf64 (_Float64 __x) noexcept (true); extern _Float64 __tanhf64 (_Float64 __x) noexcept (true);



 extern void sincosf64 (_Float64 __x, _Float64 *__sinx, _Float64 *__cosx) noexcept (true); extern void __sincosf64 (_Float64 __x, _Float64 *__sinx, _Float64 *__cosx) noexcept (true);





 extern _Float64 acoshf64 (_Float64 __x) noexcept (true); extern _Float64 __acoshf64 (_Float64 __x) noexcept (true);

 extern _Float64 asinhf64 (_Float64 __x) noexcept (true); extern _Float64 __asinhf64 (_Float64 __x) noexcept (true);

 extern _Float64 atanhf64 (_Float64 __x) noexcept (true); extern _Float64 __atanhf64 (_Float64 __x) noexcept (true);





 extern _Float64 expf64 (_Float64 __x) noexcept (true); extern _Float64 __expf64 (_Float64 __x) noexcept (true);


extern _Float64 frexpf64 (_Float64 __x, int *__exponent) noexcept (true); extern _Float64 __frexpf64 (_Float64 __x, int *__exponent) noexcept (true);


extern _Float64 ldexpf64 (_Float64 __x, int __exponent) noexcept (true); extern _Float64 __ldexpf64 (_Float64 __x, int __exponent) noexcept (true);


 extern _Float64 logf64 (_Float64 __x) noexcept (true); extern _Float64 __logf64 (_Float64 __x) noexcept (true);


 extern _Float64 log10f64 (_Float64 __x) noexcept (true); extern _Float64 __log10f64 (_Float64 __x) noexcept (true);


extern _Float64 modff64 (_Float64 __x, _Float64 *__iptr) noexcept (true); extern _Float64 __modff64 (_Float64 __x, _Float64 *__iptr) noexcept (true) __attribute__ ((__nonnull__ (2)));



 extern _Float64 exp10f64 (_Float64 __x) noexcept (true); extern _Float64 __exp10f64 (_Float64 __x) noexcept (true);




 extern _Float64 expm1f64 (_Float64 __x) noexcept (true); extern _Float64 __expm1f64 (_Float64 __x) noexcept (true);


 extern _Float64 log1pf64 (_Float64 __x) noexcept (true); extern _Float64 __log1pf64 (_Float64 __x) noexcept (true);


extern _Float64 logbf64 (_Float64 __x) noexcept (true); extern _Float64 __logbf64 (_Float64 __x) noexcept (true);




 extern _Float64 exp2f64 (_Float64 __x) noexcept (true); extern _Float64 __exp2f64 (_Float64 __x) noexcept (true);


 extern _Float64 log2f64 (_Float64 __x) noexcept (true); extern _Float64 __log2f64 (_Float64 __x) noexcept (true);






 extern _Float64 powf64 (_Float64 __x, _Float64 __y) noexcept (true); extern _Float64 __powf64 (_Float64 __x, _Float64 __y) noexcept (true);


extern _Float64 sqrtf64 (_Float64 __x) noexcept (true); extern _Float64 __sqrtf64 (_Float64 __x) noexcept (true);



 extern _Float64 hypotf64 (_Float64 __x, _Float64 __y) noexcept (true); extern _Float64 __hypotf64 (_Float64 __x, _Float64 __y) noexcept (true);




 extern _Float64 cbrtf64 (_Float64 __x) noexcept (true); extern _Float64 __cbrtf64 (_Float64 __x) noexcept (true);






extern _Float64 ceilf64 (_Float64 __x) noexcept (true) __attribute__ ((__const__)); extern _Float64 __ceilf64 (_Float64 __x) noexcept (true) __attribute__ ((__const__));


extern _Float64 fabsf64 (_Float64 __x) noexcept (true) __attribute__ ((__const__)); extern _Float64 __fabsf64 (_Float64 __x) noexcept (true) __attribute__ ((__const__));


extern _Float64 floorf64 (_Float64 __x) noexcept (true) __attribute__ ((__const__)); extern _Float64 __floorf64 (_Float64 __x) noexcept (true) __attribute__ ((__const__));


extern _Float64 fmodf64 (_Float64 __x, _Float64 __y) noexcept (true); extern _Float64 __fmodf64 (_Float64 __x, _Float64 __y) noexcept (true);
# 198 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern _Float64 copysignf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__)); extern _Float64 __copysignf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__));




extern _Float64 nanf64 (const char *__tagb) noexcept (true); extern _Float64 __nanf64 (const char *__tagb) noexcept (true);
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern _Float64 j0f64 (_Float64) noexcept (true); extern _Float64 __j0f64 (_Float64) noexcept (true);
extern _Float64 j1f64 (_Float64) noexcept (true); extern _Float64 __j1f64 (_Float64) noexcept (true);
extern _Float64 jnf64 (int, _Float64) noexcept (true); extern _Float64 __jnf64 (int, _Float64) noexcept (true);
extern _Float64 y0f64 (_Float64) noexcept (true); extern _Float64 __y0f64 (_Float64) noexcept (true);
extern _Float64 y1f64 (_Float64) noexcept (true); extern _Float64 __y1f64 (_Float64) noexcept (true);
extern _Float64 ynf64 (int, _Float64) noexcept (true); extern _Float64 __ynf64 (int, _Float64) noexcept (true);





 extern _Float64 erff64 (_Float64) noexcept (true); extern _Float64 __erff64 (_Float64) noexcept (true);
 extern _Float64 erfcf64 (_Float64) noexcept (true); extern _Float64 __erfcf64 (_Float64) noexcept (true);
extern _Float64 lgammaf64 (_Float64) noexcept (true); extern _Float64 __lgammaf64 (_Float64) noexcept (true);




extern _Float64 tgammaf64 (_Float64) noexcept (true); extern _Float64 __tgammaf64 (_Float64) noexcept (true);
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern _Float64 lgammaf64_r (_Float64, int *__signgamp) noexcept (true); extern _Float64 __lgammaf64_r (_Float64, int *__signgamp) noexcept (true);






extern _Float64 rintf64 (_Float64 __x) noexcept (true); extern _Float64 __rintf64 (_Float64 __x) noexcept (true);


extern _Float64 nextafterf64 (_Float64 __x, _Float64 __y) noexcept (true); extern _Float64 __nextafterf64 (_Float64 __x, _Float64 __y) noexcept (true);






extern _Float64 nextdownf64 (_Float64 __x) noexcept (true); extern _Float64 __nextdownf64 (_Float64 __x) noexcept (true);

extern _Float64 nextupf64 (_Float64 __x) noexcept (true); extern _Float64 __nextupf64 (_Float64 __x) noexcept (true);



extern _Float64 remainderf64 (_Float64 __x, _Float64 __y) noexcept (true); extern _Float64 __remainderf64 (_Float64 __x, _Float64 __y) noexcept (true);



extern _Float64 scalbnf64 (_Float64 __x, int __n) noexcept (true); extern _Float64 __scalbnf64 (_Float64 __x, int __n) noexcept (true);



extern int ilogbf64 (_Float64 __x) noexcept (true); extern int __ilogbf64 (_Float64 __x) noexcept (true);




extern long int llogbf64 (_Float64 __x) noexcept (true); extern long int __llogbf64 (_Float64 __x) noexcept (true);




extern _Float64 scalblnf64 (_Float64 __x, long int __n) noexcept (true); extern _Float64 __scalblnf64 (_Float64 __x, long int __n) noexcept (true);



extern _Float64 nearbyintf64 (_Float64 __x) noexcept (true); extern _Float64 __nearbyintf64 (_Float64 __x) noexcept (true);



extern _Float64 roundf64 (_Float64 __x) noexcept (true) __attribute__ ((__const__)); extern _Float64 __roundf64 (_Float64 __x) noexcept (true) __attribute__ ((__const__));



extern _Float64 truncf64 (_Float64 __x) noexcept (true) __attribute__ ((__const__)); extern _Float64 __truncf64 (_Float64 __x) noexcept (true) __attribute__ ((__const__));




extern _Float64 remquof64 (_Float64 __x, _Float64 __y, int *__quo) noexcept (true); extern _Float64 __remquof64 (_Float64 __x, _Float64 __y, int *__quo) noexcept (true);






extern long int lrintf64 (_Float64 __x) noexcept (true); extern long int __lrintf64 (_Float64 __x) noexcept (true);
__extension__
extern long long int llrintf64 (_Float64 __x) noexcept (true); extern long long int __llrintf64 (_Float64 __x) noexcept (true);



extern long int lroundf64 (_Float64 __x) noexcept (true); extern long int __lroundf64 (_Float64 __x) noexcept (true);
__extension__
extern long long int llroundf64 (_Float64 __x) noexcept (true); extern long long int __llroundf64 (_Float64 __x) noexcept (true);



extern _Float64 fdimf64 (_Float64 __x, _Float64 __y) noexcept (true); extern _Float64 __fdimf64 (_Float64 __x, _Float64 __y) noexcept (true);



extern _Float64 fmaxf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__)); extern _Float64 __fmaxf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__));


extern _Float64 fminf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__)); extern _Float64 __fminf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__));



extern _Float64 fmaf64 (_Float64 __x, _Float64 __y, _Float64 __z) noexcept (true); extern _Float64 __fmaf64 (_Float64 __x, _Float64 __y, _Float64 __z) noexcept (true);




extern _Float64 roundevenf64 (_Float64 __x) noexcept (true) __attribute__ ((__const__)); extern _Float64 __roundevenf64 (_Float64 __x) noexcept (true) __attribute__ ((__const__));



extern __intmax_t fromfpf64 (_Float64 __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfpf64 (_Float64 __x, int __round, unsigned int __width) noexcept (true);




extern __uintmax_t ufromfpf64 (_Float64 __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfpf64 (_Float64 __x, int __round, unsigned int __width) noexcept (true);





extern __intmax_t fromfpxf64 (_Float64 __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfpxf64 (_Float64 __x, int __round, unsigned int __width) noexcept (true);





extern __uintmax_t ufromfpxf64 (_Float64 __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfpxf64 (_Float64 __x, int __round, unsigned int __width) noexcept (true);



extern int canonicalizef64 (_Float64 *__cx, const _Float64 *__x) noexcept (true);






extern _Float64 fmaxmagf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__)); extern _Float64 __fmaxmagf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__));


extern _Float64 fminmagf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__)); extern _Float64 __fminmagf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__));




extern _Float64 fmaximumf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__)); extern _Float64 __fmaximumf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__));


extern _Float64 fminimumf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__)); extern _Float64 __fminimumf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__));


extern _Float64 fmaximum_numf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__)); extern _Float64 __fmaximum_numf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__));


extern _Float64 fminimum_numf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__)); extern _Float64 __fminimum_numf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__));


extern _Float64 fmaximum_magf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__)); extern _Float64 __fmaximum_magf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__));


extern _Float64 fminimum_magf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__)); extern _Float64 __fminimum_magf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__));


extern _Float64 fmaximum_mag_numf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__)); extern _Float64 __fmaximum_mag_numf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__));


extern _Float64 fminimum_mag_numf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__)); extern _Float64 __fminimum_mag_numf64 (_Float64 __x, _Float64 __y) noexcept (true) __attribute__ ((__const__));




extern int totalorderf64 (const _Float64 *__x, const _Float64 *__y) noexcept (true)

     __attribute__ ((__pure__));


extern int totalordermagf64 (const _Float64 *__x, const _Float64 *__y) noexcept (true)

     __attribute__ ((__pure__));


extern _Float64 getpayloadf64 (const _Float64 *__x) noexcept (true); extern _Float64 __getpayloadf64 (const _Float64 *__x) noexcept (true);


extern int setpayloadf64 (_Float64 *__x, _Float64 __payload) noexcept (true);


extern int setpayloadsigf64 (_Float64 *__x, _Float64 __payload) noexcept (true);
# 468 "/usr/include/math.h" 2 3 4
# 501 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 1 3 4
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
 extern _Float32x acosf32x (_Float32x __x) noexcept (true); extern _Float32x __acosf32x (_Float32x __x) noexcept (true);

 extern _Float32x asinf32x (_Float32x __x) noexcept (true); extern _Float32x __asinf32x (_Float32x __x) noexcept (true);

 extern _Float32x atanf32x (_Float32x __x) noexcept (true); extern _Float32x __atanf32x (_Float32x __x) noexcept (true);

 extern _Float32x atan2f32x (_Float32x __y, _Float32x __x) noexcept (true); extern _Float32x __atan2f32x (_Float32x __y, _Float32x __x) noexcept (true);


 extern _Float32x cosf32x (_Float32x __x) noexcept (true); extern _Float32x __cosf32x (_Float32x __x) noexcept (true);

 extern _Float32x sinf32x (_Float32x __x) noexcept (true); extern _Float32x __sinf32x (_Float32x __x) noexcept (true);

 extern _Float32x tanf32x (_Float32x __x) noexcept (true); extern _Float32x __tanf32x (_Float32x __x) noexcept (true);




 extern _Float32x coshf32x (_Float32x __x) noexcept (true); extern _Float32x __coshf32x (_Float32x __x) noexcept (true);

 extern _Float32x sinhf32x (_Float32x __x) noexcept (true); extern _Float32x __sinhf32x (_Float32x __x) noexcept (true);

 extern _Float32x tanhf32x (_Float32x __x) noexcept (true); extern _Float32x __tanhf32x (_Float32x __x) noexcept (true);



 extern void sincosf32x (_Float32x __x, _Float32x *__sinx, _Float32x *__cosx) noexcept (true); extern void __sincosf32x (_Float32x __x, _Float32x *__sinx, _Float32x *__cosx) noexcept (true);





 extern _Float32x acoshf32x (_Float32x __x) noexcept (true); extern _Float32x __acoshf32x (_Float32x __x) noexcept (true);

 extern _Float32x asinhf32x (_Float32x __x) noexcept (true); extern _Float32x __asinhf32x (_Float32x __x) noexcept (true);

 extern _Float32x atanhf32x (_Float32x __x) noexcept (true); extern _Float32x __atanhf32x (_Float32x __x) noexcept (true);





 extern _Float32x expf32x (_Float32x __x) noexcept (true); extern _Float32x __expf32x (_Float32x __x) noexcept (true);


extern _Float32x frexpf32x (_Float32x __x, int *__exponent) noexcept (true); extern _Float32x __frexpf32x (_Float32x __x, int *__exponent) noexcept (true);


extern _Float32x ldexpf32x (_Float32x __x, int __exponent) noexcept (true); extern _Float32x __ldexpf32x (_Float32x __x, int __exponent) noexcept (true);


 extern _Float32x logf32x (_Float32x __x) noexcept (true); extern _Float32x __logf32x (_Float32x __x) noexcept (true);


 extern _Float32x log10f32x (_Float32x __x) noexcept (true); extern _Float32x __log10f32x (_Float32x __x) noexcept (true);


extern _Float32x modff32x (_Float32x __x, _Float32x *__iptr) noexcept (true); extern _Float32x __modff32x (_Float32x __x, _Float32x *__iptr) noexcept (true) __attribute__ ((__nonnull__ (2)));



 extern _Float32x exp10f32x (_Float32x __x) noexcept (true); extern _Float32x __exp10f32x (_Float32x __x) noexcept (true);




 extern _Float32x expm1f32x (_Float32x __x) noexcept (true); extern _Float32x __expm1f32x (_Float32x __x) noexcept (true);


 extern _Float32x log1pf32x (_Float32x __x) noexcept (true); extern _Float32x __log1pf32x (_Float32x __x) noexcept (true);


extern _Float32x logbf32x (_Float32x __x) noexcept (true); extern _Float32x __logbf32x (_Float32x __x) noexcept (true);




 extern _Float32x exp2f32x (_Float32x __x) noexcept (true); extern _Float32x __exp2f32x (_Float32x __x) noexcept (true);


 extern _Float32x log2f32x (_Float32x __x) noexcept (true); extern _Float32x __log2f32x (_Float32x __x) noexcept (true);






 extern _Float32x powf32x (_Float32x __x, _Float32x __y) noexcept (true); extern _Float32x __powf32x (_Float32x __x, _Float32x __y) noexcept (true);


extern _Float32x sqrtf32x (_Float32x __x) noexcept (true); extern _Float32x __sqrtf32x (_Float32x __x) noexcept (true);



 extern _Float32x hypotf32x (_Float32x __x, _Float32x __y) noexcept (true); extern _Float32x __hypotf32x (_Float32x __x, _Float32x __y) noexcept (true);




 extern _Float32x cbrtf32x (_Float32x __x) noexcept (true); extern _Float32x __cbrtf32x (_Float32x __x) noexcept (true);






extern _Float32x ceilf32x (_Float32x __x) noexcept (true) __attribute__ ((__const__)); extern _Float32x __ceilf32x (_Float32x __x) noexcept (true) __attribute__ ((__const__));


extern _Float32x fabsf32x (_Float32x __x) noexcept (true) __attribute__ ((__const__)); extern _Float32x __fabsf32x (_Float32x __x) noexcept (true) __attribute__ ((__const__));


extern _Float32x floorf32x (_Float32x __x) noexcept (true) __attribute__ ((__const__)); extern _Float32x __floorf32x (_Float32x __x) noexcept (true) __attribute__ ((__const__));


extern _Float32x fmodf32x (_Float32x __x, _Float32x __y) noexcept (true); extern _Float32x __fmodf32x (_Float32x __x, _Float32x __y) noexcept (true);
# 198 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern _Float32x copysignf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__)); extern _Float32x __copysignf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__));




extern _Float32x nanf32x (const char *__tagb) noexcept (true); extern _Float32x __nanf32x (const char *__tagb) noexcept (true);
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern _Float32x j0f32x (_Float32x) noexcept (true); extern _Float32x __j0f32x (_Float32x) noexcept (true);
extern _Float32x j1f32x (_Float32x) noexcept (true); extern _Float32x __j1f32x (_Float32x) noexcept (true);
extern _Float32x jnf32x (int, _Float32x) noexcept (true); extern _Float32x __jnf32x (int, _Float32x) noexcept (true);
extern _Float32x y0f32x (_Float32x) noexcept (true); extern _Float32x __y0f32x (_Float32x) noexcept (true);
extern _Float32x y1f32x (_Float32x) noexcept (true); extern _Float32x __y1f32x (_Float32x) noexcept (true);
extern _Float32x ynf32x (int, _Float32x) noexcept (true); extern _Float32x __ynf32x (int, _Float32x) noexcept (true);





 extern _Float32x erff32x (_Float32x) noexcept (true); extern _Float32x __erff32x (_Float32x) noexcept (true);
 extern _Float32x erfcf32x (_Float32x) noexcept (true); extern _Float32x __erfcf32x (_Float32x) noexcept (true);
extern _Float32x lgammaf32x (_Float32x) noexcept (true); extern _Float32x __lgammaf32x (_Float32x) noexcept (true);




extern _Float32x tgammaf32x (_Float32x) noexcept (true); extern _Float32x __tgammaf32x (_Float32x) noexcept (true);
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern _Float32x lgammaf32x_r (_Float32x, int *__signgamp) noexcept (true); extern _Float32x __lgammaf32x_r (_Float32x, int *__signgamp) noexcept (true);






extern _Float32x rintf32x (_Float32x __x) noexcept (true); extern _Float32x __rintf32x (_Float32x __x) noexcept (true);


extern _Float32x nextafterf32x (_Float32x __x, _Float32x __y) noexcept (true); extern _Float32x __nextafterf32x (_Float32x __x, _Float32x __y) noexcept (true);






extern _Float32x nextdownf32x (_Float32x __x) noexcept (true); extern _Float32x __nextdownf32x (_Float32x __x) noexcept (true);

extern _Float32x nextupf32x (_Float32x __x) noexcept (true); extern _Float32x __nextupf32x (_Float32x __x) noexcept (true);



extern _Float32x remainderf32x (_Float32x __x, _Float32x __y) noexcept (true); extern _Float32x __remainderf32x (_Float32x __x, _Float32x __y) noexcept (true);



extern _Float32x scalbnf32x (_Float32x __x, int __n) noexcept (true); extern _Float32x __scalbnf32x (_Float32x __x, int __n) noexcept (true);



extern int ilogbf32x (_Float32x __x) noexcept (true); extern int __ilogbf32x (_Float32x __x) noexcept (true);




extern long int llogbf32x (_Float32x __x) noexcept (true); extern long int __llogbf32x (_Float32x __x) noexcept (true);




extern _Float32x scalblnf32x (_Float32x __x, long int __n) noexcept (true); extern _Float32x __scalblnf32x (_Float32x __x, long int __n) noexcept (true);



extern _Float32x nearbyintf32x (_Float32x __x) noexcept (true); extern _Float32x __nearbyintf32x (_Float32x __x) noexcept (true);



extern _Float32x roundf32x (_Float32x __x) noexcept (true) __attribute__ ((__const__)); extern _Float32x __roundf32x (_Float32x __x) noexcept (true) __attribute__ ((__const__));



extern _Float32x truncf32x (_Float32x __x) noexcept (true) __attribute__ ((__const__)); extern _Float32x __truncf32x (_Float32x __x) noexcept (true) __attribute__ ((__const__));




extern _Float32x remquof32x (_Float32x __x, _Float32x __y, int *__quo) noexcept (true); extern _Float32x __remquof32x (_Float32x __x, _Float32x __y, int *__quo) noexcept (true);






extern long int lrintf32x (_Float32x __x) noexcept (true); extern long int __lrintf32x (_Float32x __x) noexcept (true);
__extension__
extern long long int llrintf32x (_Float32x __x) noexcept (true); extern long long int __llrintf32x (_Float32x __x) noexcept (true);



extern long int lroundf32x (_Float32x __x) noexcept (true); extern long int __lroundf32x (_Float32x __x) noexcept (true);
__extension__
extern long long int llroundf32x (_Float32x __x) noexcept (true); extern long long int __llroundf32x (_Float32x __x) noexcept (true);



extern _Float32x fdimf32x (_Float32x __x, _Float32x __y) noexcept (true); extern _Float32x __fdimf32x (_Float32x __x, _Float32x __y) noexcept (true);



extern _Float32x fmaxf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__)); extern _Float32x __fmaxf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__));


extern _Float32x fminf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__)); extern _Float32x __fminf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__));



extern _Float32x fmaf32x (_Float32x __x, _Float32x __y, _Float32x __z) noexcept (true); extern _Float32x __fmaf32x (_Float32x __x, _Float32x __y, _Float32x __z) noexcept (true);




extern _Float32x roundevenf32x (_Float32x __x) noexcept (true) __attribute__ ((__const__)); extern _Float32x __roundevenf32x (_Float32x __x) noexcept (true) __attribute__ ((__const__));



extern __intmax_t fromfpf32x (_Float32x __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfpf32x (_Float32x __x, int __round, unsigned int __width) noexcept (true);




extern __uintmax_t ufromfpf32x (_Float32x __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfpf32x (_Float32x __x, int __round, unsigned int __width) noexcept (true);





extern __intmax_t fromfpxf32x (_Float32x __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfpxf32x (_Float32x __x, int __round, unsigned int __width) noexcept (true);





extern __uintmax_t ufromfpxf32x (_Float32x __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfpxf32x (_Float32x __x, int __round, unsigned int __width) noexcept (true);



extern int canonicalizef32x (_Float32x *__cx, const _Float32x *__x) noexcept (true);






extern _Float32x fmaxmagf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__)); extern _Float32x __fmaxmagf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__));


extern _Float32x fminmagf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__)); extern _Float32x __fminmagf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__));




extern _Float32x fmaximumf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__)); extern _Float32x __fmaximumf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__));


extern _Float32x fminimumf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__)); extern _Float32x __fminimumf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__));


extern _Float32x fmaximum_numf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__)); extern _Float32x __fmaximum_numf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__));


extern _Float32x fminimum_numf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__)); extern _Float32x __fminimum_numf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__));


extern _Float32x fmaximum_magf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__)); extern _Float32x __fmaximum_magf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__));


extern _Float32x fminimum_magf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__)); extern _Float32x __fminimum_magf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__));


extern _Float32x fmaximum_mag_numf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__)); extern _Float32x __fmaximum_mag_numf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__));


extern _Float32x fminimum_mag_numf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__)); extern _Float32x __fminimum_mag_numf32x (_Float32x __x, _Float32x __y) noexcept (true) __attribute__ ((__const__));




extern int totalorderf32x (const _Float32x *__x, const _Float32x *__y) noexcept (true)

     __attribute__ ((__pure__));


extern int totalordermagf32x (const _Float32x *__x, const _Float32x *__y) noexcept (true)

     __attribute__ ((__pure__));


extern _Float32x getpayloadf32x (const _Float32x *__x) noexcept (true); extern _Float32x __getpayloadf32x (const _Float32x *__x) noexcept (true);


extern int setpayloadf32x (_Float32x *__x, _Float32x __payload) noexcept (true);


extern int setpayloadsigf32x (_Float32x *__x, _Float32x __payload) noexcept (true);
# 502 "/usr/include/math.h" 2 3 4
# 518 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 1 3 4
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
 extern _Float64x acosf64x (_Float64x __x) noexcept (true); extern _Float64x __acosf64x (_Float64x __x) noexcept (true);

 extern _Float64x asinf64x (_Float64x __x) noexcept (true); extern _Float64x __asinf64x (_Float64x __x) noexcept (true);

 extern _Float64x atanf64x (_Float64x __x) noexcept (true); extern _Float64x __atanf64x (_Float64x __x) noexcept (true);

 extern _Float64x atan2f64x (_Float64x __y, _Float64x __x) noexcept (true); extern _Float64x __atan2f64x (_Float64x __y, _Float64x __x) noexcept (true);


 extern _Float64x cosf64x (_Float64x __x) noexcept (true); extern _Float64x __cosf64x (_Float64x __x) noexcept (true);

 extern _Float64x sinf64x (_Float64x __x) noexcept (true); extern _Float64x __sinf64x (_Float64x __x) noexcept (true);

 extern _Float64x tanf64x (_Float64x __x) noexcept (true); extern _Float64x __tanf64x (_Float64x __x) noexcept (true);




 extern _Float64x coshf64x (_Float64x __x) noexcept (true); extern _Float64x __coshf64x (_Float64x __x) noexcept (true);

 extern _Float64x sinhf64x (_Float64x __x) noexcept (true); extern _Float64x __sinhf64x (_Float64x __x) noexcept (true);

 extern _Float64x tanhf64x (_Float64x __x) noexcept (true); extern _Float64x __tanhf64x (_Float64x __x) noexcept (true);



 extern void sincosf64x (_Float64x __x, _Float64x *__sinx, _Float64x *__cosx) noexcept (true); extern void __sincosf64x (_Float64x __x, _Float64x *__sinx, _Float64x *__cosx) noexcept (true);





 extern _Float64x acoshf64x (_Float64x __x) noexcept (true); extern _Float64x __acoshf64x (_Float64x __x) noexcept (true);

 extern _Float64x asinhf64x (_Float64x __x) noexcept (true); extern _Float64x __asinhf64x (_Float64x __x) noexcept (true);

 extern _Float64x atanhf64x (_Float64x __x) noexcept (true); extern _Float64x __atanhf64x (_Float64x __x) noexcept (true);





 extern _Float64x expf64x (_Float64x __x) noexcept (true); extern _Float64x __expf64x (_Float64x __x) noexcept (true);


extern _Float64x frexpf64x (_Float64x __x, int *__exponent) noexcept (true); extern _Float64x __frexpf64x (_Float64x __x, int *__exponent) noexcept (true);


extern _Float64x ldexpf64x (_Float64x __x, int __exponent) noexcept (true); extern _Float64x __ldexpf64x (_Float64x __x, int __exponent) noexcept (true);


 extern _Float64x logf64x (_Float64x __x) noexcept (true); extern _Float64x __logf64x (_Float64x __x) noexcept (true);


 extern _Float64x log10f64x (_Float64x __x) noexcept (true); extern _Float64x __log10f64x (_Float64x __x) noexcept (true);


extern _Float64x modff64x (_Float64x __x, _Float64x *__iptr) noexcept (true); extern _Float64x __modff64x (_Float64x __x, _Float64x *__iptr) noexcept (true) __attribute__ ((__nonnull__ (2)));



 extern _Float64x exp10f64x (_Float64x __x) noexcept (true); extern _Float64x __exp10f64x (_Float64x __x) noexcept (true);




 extern _Float64x expm1f64x (_Float64x __x) noexcept (true); extern _Float64x __expm1f64x (_Float64x __x) noexcept (true);


 extern _Float64x log1pf64x (_Float64x __x) noexcept (true); extern _Float64x __log1pf64x (_Float64x __x) noexcept (true);


extern _Float64x logbf64x (_Float64x __x) noexcept (true); extern _Float64x __logbf64x (_Float64x __x) noexcept (true);




 extern _Float64x exp2f64x (_Float64x __x) noexcept (true); extern _Float64x __exp2f64x (_Float64x __x) noexcept (true);


 extern _Float64x log2f64x (_Float64x __x) noexcept (true); extern _Float64x __log2f64x (_Float64x __x) noexcept (true);






 extern _Float64x powf64x (_Float64x __x, _Float64x __y) noexcept (true); extern _Float64x __powf64x (_Float64x __x, _Float64x __y) noexcept (true);


extern _Float64x sqrtf64x (_Float64x __x) noexcept (true); extern _Float64x __sqrtf64x (_Float64x __x) noexcept (true);



 extern _Float64x hypotf64x (_Float64x __x, _Float64x __y) noexcept (true); extern _Float64x __hypotf64x (_Float64x __x, _Float64x __y) noexcept (true);




 extern _Float64x cbrtf64x (_Float64x __x) noexcept (true); extern _Float64x __cbrtf64x (_Float64x __x) noexcept (true);






extern _Float64x ceilf64x (_Float64x __x) noexcept (true) __attribute__ ((__const__)); extern _Float64x __ceilf64x (_Float64x __x) noexcept (true) __attribute__ ((__const__));


extern _Float64x fabsf64x (_Float64x __x) noexcept (true) __attribute__ ((__const__)); extern _Float64x __fabsf64x (_Float64x __x) noexcept (true) __attribute__ ((__const__));


extern _Float64x floorf64x (_Float64x __x) noexcept (true) __attribute__ ((__const__)); extern _Float64x __floorf64x (_Float64x __x) noexcept (true) __attribute__ ((__const__));


extern _Float64x fmodf64x (_Float64x __x, _Float64x __y) noexcept (true); extern _Float64x __fmodf64x (_Float64x __x, _Float64x __y) noexcept (true);
# 198 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern _Float64x copysignf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__)); extern _Float64x __copysignf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__));




extern _Float64x nanf64x (const char *__tagb) noexcept (true); extern _Float64x __nanf64x (const char *__tagb) noexcept (true);
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern _Float64x j0f64x (_Float64x) noexcept (true); extern _Float64x __j0f64x (_Float64x) noexcept (true);
extern _Float64x j1f64x (_Float64x) noexcept (true); extern _Float64x __j1f64x (_Float64x) noexcept (true);
extern _Float64x jnf64x (int, _Float64x) noexcept (true); extern _Float64x __jnf64x (int, _Float64x) noexcept (true);
extern _Float64x y0f64x (_Float64x) noexcept (true); extern _Float64x __y0f64x (_Float64x) noexcept (true);
extern _Float64x y1f64x (_Float64x) noexcept (true); extern _Float64x __y1f64x (_Float64x) noexcept (true);
extern _Float64x ynf64x (int, _Float64x) noexcept (true); extern _Float64x __ynf64x (int, _Float64x) noexcept (true);





 extern _Float64x erff64x (_Float64x) noexcept (true); extern _Float64x __erff64x (_Float64x) noexcept (true);
 extern _Float64x erfcf64x (_Float64x) noexcept (true); extern _Float64x __erfcf64x (_Float64x) noexcept (true);
extern _Float64x lgammaf64x (_Float64x) noexcept (true); extern _Float64x __lgammaf64x (_Float64x) noexcept (true);




extern _Float64x tgammaf64x (_Float64x) noexcept (true); extern _Float64x __tgammaf64x (_Float64x) noexcept (true);
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern _Float64x lgammaf64x_r (_Float64x, int *__signgamp) noexcept (true); extern _Float64x __lgammaf64x_r (_Float64x, int *__signgamp) noexcept (true);






extern _Float64x rintf64x (_Float64x __x) noexcept (true); extern _Float64x __rintf64x (_Float64x __x) noexcept (true);


extern _Float64x nextafterf64x (_Float64x __x, _Float64x __y) noexcept (true); extern _Float64x __nextafterf64x (_Float64x __x, _Float64x __y) noexcept (true);






extern _Float64x nextdownf64x (_Float64x __x) noexcept (true); extern _Float64x __nextdownf64x (_Float64x __x) noexcept (true);

extern _Float64x nextupf64x (_Float64x __x) noexcept (true); extern _Float64x __nextupf64x (_Float64x __x) noexcept (true);



extern _Float64x remainderf64x (_Float64x __x, _Float64x __y) noexcept (true); extern _Float64x __remainderf64x (_Float64x __x, _Float64x __y) noexcept (true);



extern _Float64x scalbnf64x (_Float64x __x, int __n) noexcept (true); extern _Float64x __scalbnf64x (_Float64x __x, int __n) noexcept (true);



extern int ilogbf64x (_Float64x __x) noexcept (true); extern int __ilogbf64x (_Float64x __x) noexcept (true);




extern long int llogbf64x (_Float64x __x) noexcept (true); extern long int __llogbf64x (_Float64x __x) noexcept (true);




extern _Float64x scalblnf64x (_Float64x __x, long int __n) noexcept (true); extern _Float64x __scalblnf64x (_Float64x __x, long int __n) noexcept (true);



extern _Float64x nearbyintf64x (_Float64x __x) noexcept (true); extern _Float64x __nearbyintf64x (_Float64x __x) noexcept (true);



extern _Float64x roundf64x (_Float64x __x) noexcept (true) __attribute__ ((__const__)); extern _Float64x __roundf64x (_Float64x __x) noexcept (true) __attribute__ ((__const__));



extern _Float64x truncf64x (_Float64x __x) noexcept (true) __attribute__ ((__const__)); extern _Float64x __truncf64x (_Float64x __x) noexcept (true) __attribute__ ((__const__));




extern _Float64x remquof64x (_Float64x __x, _Float64x __y, int *__quo) noexcept (true); extern _Float64x __remquof64x (_Float64x __x, _Float64x __y, int *__quo) noexcept (true);






extern long int lrintf64x (_Float64x __x) noexcept (true); extern long int __lrintf64x (_Float64x __x) noexcept (true);
__extension__
extern long long int llrintf64x (_Float64x __x) noexcept (true); extern long long int __llrintf64x (_Float64x __x) noexcept (true);



extern long int lroundf64x (_Float64x __x) noexcept (true); extern long int __lroundf64x (_Float64x __x) noexcept (true);
__extension__
extern long long int llroundf64x (_Float64x __x) noexcept (true); extern long long int __llroundf64x (_Float64x __x) noexcept (true);



extern _Float64x fdimf64x (_Float64x __x, _Float64x __y) noexcept (true); extern _Float64x __fdimf64x (_Float64x __x, _Float64x __y) noexcept (true);



extern _Float64x fmaxf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__)); extern _Float64x __fmaxf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__));


extern _Float64x fminf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__)); extern _Float64x __fminf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__));



extern _Float64x fmaf64x (_Float64x __x, _Float64x __y, _Float64x __z) noexcept (true); extern _Float64x __fmaf64x (_Float64x __x, _Float64x __y, _Float64x __z) noexcept (true);




extern _Float64x roundevenf64x (_Float64x __x) noexcept (true) __attribute__ ((__const__)); extern _Float64x __roundevenf64x (_Float64x __x) noexcept (true) __attribute__ ((__const__));



extern __intmax_t fromfpf64x (_Float64x __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfpf64x (_Float64x __x, int __round, unsigned int __width) noexcept (true);




extern __uintmax_t ufromfpf64x (_Float64x __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfpf64x (_Float64x __x, int __round, unsigned int __width) noexcept (true);





extern __intmax_t fromfpxf64x (_Float64x __x, int __round, unsigned int __width) noexcept (true); extern __intmax_t __fromfpxf64x (_Float64x __x, int __round, unsigned int __width) noexcept (true);





extern __uintmax_t ufromfpxf64x (_Float64x __x, int __round, unsigned int __width) noexcept (true); extern __uintmax_t __ufromfpxf64x (_Float64x __x, int __round, unsigned int __width) noexcept (true);



extern int canonicalizef64x (_Float64x *__cx, const _Float64x *__x) noexcept (true);






extern _Float64x fmaxmagf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__)); extern _Float64x __fmaxmagf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__));


extern _Float64x fminmagf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__)); extern _Float64x __fminmagf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__));




extern _Float64x fmaximumf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__)); extern _Float64x __fmaximumf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__));


extern _Float64x fminimumf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__)); extern _Float64x __fminimumf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__));


extern _Float64x fmaximum_numf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__)); extern _Float64x __fmaximum_numf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__));


extern _Float64x fminimum_numf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__)); extern _Float64x __fminimum_numf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__));


extern _Float64x fmaximum_magf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__)); extern _Float64x __fmaximum_magf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__));


extern _Float64x fminimum_magf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__)); extern _Float64x __fminimum_magf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__));


extern _Float64x fmaximum_mag_numf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__)); extern _Float64x __fmaximum_mag_numf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__));


extern _Float64x fminimum_mag_numf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__)); extern _Float64x __fminimum_mag_numf64x (_Float64x __x, _Float64x __y) noexcept (true) __attribute__ ((__const__));




extern int totalorderf64x (const _Float64x *__x, const _Float64x *__y) noexcept (true)

     __attribute__ ((__pure__));


extern int totalordermagf64x (const _Float64x *__x, const _Float64x *__y) noexcept (true)

     __attribute__ ((__pure__));


extern _Float64x getpayloadf64x (const _Float64x *__x) noexcept (true); extern _Float64x __getpayloadf64x (const _Float64x *__x) noexcept (true);


extern int setpayloadf64x (_Float64x *__x, _Float64x __payload) noexcept (true);


extern int setpayloadsigf64x (_Float64x *__x, _Float64x __payload) noexcept (true);
# 519 "/usr/include/math.h" 2 3 4
# 566 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3 4
extern float fadd (double __x, double __y) noexcept (true);


extern float fdiv (double __x, double __y) noexcept (true);


extern float ffma (double __x, double __y, double __z) noexcept (true);


extern float fmul (double __x, double __y) noexcept (true);


extern float fsqrt (double __x) noexcept (true);


extern float fsub (double __x, double __y) noexcept (true);
# 567 "/usr/include/math.h" 2 3 4
# 587 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3 4
extern float faddl (long double __x, long double __y) noexcept (true);


extern float fdivl (long double __x, long double __y) noexcept (true);


extern float ffmal (long double __x, long double __y, long double __z) noexcept (true);


extern float fmull (long double __x, long double __y) noexcept (true);


extern float fsqrtl (long double __x) noexcept (true);


extern float fsubl (long double __x, long double __y) noexcept (true);
# 588 "/usr/include/math.h" 2 3 4
# 616 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3 4
extern double daddl (long double __x, long double __y) noexcept (true);


extern double ddivl (long double __x, long double __y) noexcept (true);


extern double dfmal (long double __x, long double __y, long double __z) noexcept (true);


extern double dmull (long double __x, long double __y) noexcept (true);


extern double dsqrtl (long double __x) noexcept (true);


extern double dsubl (long double __x, long double __y) noexcept (true);
# 617 "/usr/include/math.h" 2 3 4
# 697 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3 4
extern _Float32 f32addf32x (_Float32x __x, _Float32x __y) noexcept (true);


extern _Float32 f32divf32x (_Float32x __x, _Float32x __y) noexcept (true);


extern _Float32 f32fmaf32x (_Float32x __x, _Float32x __y, _Float32x __z) noexcept (true);


extern _Float32 f32mulf32x (_Float32x __x, _Float32x __y) noexcept (true);


extern _Float32 f32sqrtf32x (_Float32x __x) noexcept (true);


extern _Float32 f32subf32x (_Float32x __x, _Float32x __y) noexcept (true);
# 698 "/usr/include/math.h" 2 3 4
# 707 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3 4
extern _Float32 f32addf64 (_Float64 __x, _Float64 __y) noexcept (true);


extern _Float32 f32divf64 (_Float64 __x, _Float64 __y) noexcept (true);


extern _Float32 f32fmaf64 (_Float64 __x, _Float64 __y, _Float64 __z) noexcept (true);


extern _Float32 f32mulf64 (_Float64 __x, _Float64 __y) noexcept (true);


extern _Float32 f32sqrtf64 (_Float64 __x) noexcept (true);


extern _Float32 f32subf64 (_Float64 __x, _Float64 __y) noexcept (true);
# 708 "/usr/include/math.h" 2 3 4
# 717 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3 4
extern _Float32 f32addf64x (_Float64x __x, _Float64x __y) noexcept (true);


extern _Float32 f32divf64x (_Float64x __x, _Float64x __y) noexcept (true);


extern _Float32 f32fmaf64x (_Float64x __x, _Float64x __y, _Float64x __z) noexcept (true);


extern _Float32 f32mulf64x (_Float64x __x, _Float64x __y) noexcept (true);


extern _Float32 f32sqrtf64x (_Float64x __x) noexcept (true);


extern _Float32 f32subf64x (_Float64x __x, _Float64x __y) noexcept (true);
# 718 "/usr/include/math.h" 2 3 4
# 747 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3 4
extern _Float32x f32xaddf64 (_Float64 __x, _Float64 __y) noexcept (true);


extern _Float32x f32xdivf64 (_Float64 __x, _Float64 __y) noexcept (true);


extern _Float32x f32xfmaf64 (_Float64 __x, _Float64 __y, _Float64 __z) noexcept (true);


extern _Float32x f32xmulf64 (_Float64 __x, _Float64 __y) noexcept (true);


extern _Float32x f32xsqrtf64 (_Float64 __x) noexcept (true);


extern _Float32x f32xsubf64 (_Float64 __x, _Float64 __y) noexcept (true);
# 748 "/usr/include/math.h" 2 3 4
# 757 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3 4
extern _Float32x f32xaddf64x (_Float64x __x, _Float64x __y) noexcept (true);


extern _Float32x f32xdivf64x (_Float64x __x, _Float64x __y) noexcept (true);


extern _Float32x f32xfmaf64x (_Float64x __x, _Float64x __y, _Float64x __z) noexcept (true);


extern _Float32x f32xmulf64x (_Float64x __x, _Float64x __y) noexcept (true);


extern _Float32x f32xsqrtf64x (_Float64x __x) noexcept (true);


extern _Float32x f32xsubf64x (_Float64x __x, _Float64x __y) noexcept (true);
# 758 "/usr/include/math.h" 2 3 4
# 787 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3 4
extern _Float64 f64addf64x (_Float64x __x, _Float64x __y) noexcept (true);


extern _Float64 f64divf64x (_Float64x __x, _Float64x __y) noexcept (true);


extern _Float64 f64fmaf64x (_Float64x __x, _Float64x __y, _Float64x __z) noexcept (true);


extern _Float64 f64mulf64x (_Float64x __x, _Float64x __y) noexcept (true);


extern _Float64 f64sqrtf64x (_Float64x __x) noexcept (true);


extern _Float64 f64subf64x (_Float64x __x, _Float64x __y) noexcept (true);
# 788 "/usr/include/math.h" 2 3 4
# 854 "/usr/include/math.h" 3 4
extern int signgam;
# 934 "/usr/include/math.h" 3 4
enum
  {
    FP_NAN =

      0,
    FP_INFINITE =

      1,
    FP_ZERO =

      2,
    FP_SUBNORMAL =

      3,
    FP_NORMAL =

      4
  };
# 1055 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3 4
extern int __iscanonicall (long double __x)
     noexcept (true) __attribute__ ((__const__));
# 46 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3 4
extern "C++" {
inline int iscanonical (float __val) { return ((void) (__typeof (__val)) (__val), 1); }
inline int iscanonical (double __val) { return ((void) (__typeof (__val)) (__val), 1); }
inline int iscanonical (long double __val) { return __iscanonicall (__val); }



}
# 1056 "/usr/include/math.h" 2 3 4
# 1067 "/usr/include/math.h" 3 4
extern "C++" {
inline int issignaling (float __val) { return __issignalingf (__val); }
inline int issignaling (double __val) { return __issignaling (__val); }
inline int
issignaling (long double __val)
{



  return __issignalingl (__val);

}





}
# 1098 "/usr/include/math.h" 3 4
extern "C++" {
# 1129 "/usr/include/math.h" 3 4
template <class __T> inline bool
iszero (__T __val)
{
  return __val == 0;
}

}
# 1364 "/usr/include/math.h" 3 4
extern "C++" {
template<typename> struct __iseqsig_type;

template<> struct __iseqsig_type<float>
{
  static int __call (float __x, float __y) throw ()
  {
    return __iseqsigf (__x, __y);
  }
};

template<> struct __iseqsig_type<double>
{
  static int __call (double __x, double __y) throw ()
  {
    return __iseqsig (__x, __y);
  }
};

template<> struct __iseqsig_type<long double>
{
  static int __call (long double __x, long double __y) throw ()
  {

    return __iseqsigl (__x, __y);



  }
};
# 1455 "/usr/include/math.h" 3 4
template<typename _T1, typename _T2>
inline int
iseqsig (_T1 __x, _T2 __y) throw ()
{

  typedef decltype (((__x) + (__y) + 0.0f)) _T3;



  return __iseqsig_type<_T3>::__call (__x, __y);
}

}




}
# 46 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/cmath" 2 3

# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/bits/std_abs.h" 1 3
# 34 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/bits/std_abs.h" 3




# 1 "/usr/include/stdlib.h" 1 3 4
# 26 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/stdlib.h" 2 3 4





# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/lnx64/tools/clang-3.9-csynth/lib/clang/7.0.0/include/stddef.h" 1 3 4
# 62 "/software/common/Xilinx_Vitis/Vitis/2024.2/lnx64/tools/clang-3.9-csynth/lib/clang/7.0.0/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 33 "/usr/include/stdlib.h" 2 3 4

extern "C" {






# 1 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 1 3 4
# 41 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 1 3 4
# 42 "/usr/include/stdlib.h" 2 3 4
# 59 "/usr/include/stdlib.h" 3 4
typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;





__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;
# 98 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) noexcept (true) ;



extern double atof (const char *__nptr)
     noexcept (true) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     noexcept (true) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     noexcept (true) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



__extension__ extern long long int atoll (const char *__nptr)
     noexcept (true) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     noexcept (true) __attribute__ ((__nonnull__ (1)));



extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) noexcept (true) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     noexcept (true) __attribute__ ((__nonnull__ (1)));
# 141 "/usr/include/stdlib.h" 3 4
extern _Float32 strtof32 (const char *__restrict __nptr,
     char **__restrict __endptr)
     noexcept (true) __attribute__ ((__nonnull__ (1)));



extern _Float64 strtof64 (const char *__restrict __nptr,
     char **__restrict __endptr)
     noexcept (true) __attribute__ ((__nonnull__ (1)));
# 159 "/usr/include/stdlib.h" 3 4
extern _Float32x strtof32x (const char *__restrict __nptr,
       char **__restrict __endptr)
     noexcept (true) __attribute__ ((__nonnull__ (1)));



extern _Float64x strtof64x (const char *__restrict __nptr,
       char **__restrict __endptr)
     noexcept (true) __attribute__ ((__nonnull__ (1)));
# 177 "/usr/include/stdlib.h" 3 4
extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     noexcept (true) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     noexcept (true) __attribute__ ((__nonnull__ (1)));



__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     noexcept (true) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     noexcept (true) __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     noexcept (true) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     noexcept (true) __attribute__ ((__nonnull__ (1)));






extern long int strtol (const char *__restrict __nptr, char **__restrict __endptr, int __base) noexcept (true) __asm__ ("" "__isoc23_strtol")


     __attribute__ ((__nonnull__ (1)));
extern unsigned long int strtoul (const char *__restrict __nptr, char **__restrict __endptr, int __base) noexcept (true) __asm__ ("" "__isoc23_strtoul")



     __attribute__ ((__nonnull__ (1)));

__extension__
extern long long int strtoq (const char *__restrict __nptr, char **__restrict __endptr, int __base) noexcept (true) __asm__ ("" "__isoc23_strtoll")


     __attribute__ ((__nonnull__ (1)));
__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr, char **__restrict __endptr, int __base) noexcept (true) __asm__ ("" "__isoc23_strtoull")



     __attribute__ ((__nonnull__ (1)));

__extension__
extern long long int strtoll (const char *__restrict __nptr, char **__restrict __endptr, int __base) noexcept (true) __asm__ ("" "__isoc23_strtoll")


     __attribute__ ((__nonnull__ (1)));
__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr, char **__restrict __endptr, int __base) noexcept (true) __asm__ ("" "__isoc23_strtoull")



     __attribute__ ((__nonnull__ (1)));
# 278 "/usr/include/stdlib.h" 3 4
extern int strfromd (char *__dest, size_t __size, const char *__format,
       double __f)
     noexcept (true) __attribute__ ((__nonnull__ (3)));

extern int strfromf (char *__dest, size_t __size, const char *__format,
       float __f)
     noexcept (true) __attribute__ ((__nonnull__ (3)));

extern int strfroml (char *__dest, size_t __size, const char *__format,
       long double __f)
     noexcept (true) __attribute__ ((__nonnull__ (3)));
# 298 "/usr/include/stdlib.h" 3 4
extern int strfromf32 (char *__dest, size_t __size, const char * __format,
         _Float32 __f)
     noexcept (true) __attribute__ ((__nonnull__ (3)));



extern int strfromf64 (char *__dest, size_t __size, const char * __format,
         _Float64 __f)
     noexcept (true) __attribute__ ((__nonnull__ (3)));
# 316 "/usr/include/stdlib.h" 3 4
extern int strfromf32x (char *__dest, size_t __size, const char * __format,
   _Float32x __f)
     noexcept (true) __attribute__ ((__nonnull__ (3)));



extern int strfromf64x (char *__dest, size_t __size, const char * __format,
   _Float64x __f)
     noexcept (true) __attribute__ ((__nonnull__ (3)));
# 338 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3 4
struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
};

typedef struct __locale_struct *__locale_t;
# 23 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 2 3 4

typedef __locale_t locale_t;
# 339 "/usr/include/stdlib.h" 2 3 4

extern long int strtol_l (const char *__restrict __nptr,
     char **__restrict __endptr, int __base,
     locale_t __loc) noexcept (true) __attribute__ ((__nonnull__ (1, 4)));

extern unsigned long int strtoul_l (const char *__restrict __nptr,
        char **__restrict __endptr,
        int __base, locale_t __loc)
     noexcept (true) __attribute__ ((__nonnull__ (1, 4)));

__extension__
extern long long int strtoll_l (const char *__restrict __nptr,
    char **__restrict __endptr, int __base,
    locale_t __loc)
     noexcept (true) __attribute__ ((__nonnull__ (1, 4)));

__extension__
extern unsigned long long int strtoull_l (const char *__restrict __nptr,
       char **__restrict __endptr,
       int __base, locale_t __loc)
     noexcept (true) __attribute__ ((__nonnull__ (1, 4)));





extern long int strtol_l (const char *__restrict __nptr, char **__restrict __endptr, int __base, locale_t __loc) noexcept (true) __asm__ ("" "__isoc23_strtol_l")



     __attribute__ ((__nonnull__ (1, 4)));
extern unsigned long int strtoul_l (const char *__restrict __nptr, char **__restrict __endptr, int __base, locale_t __loc) noexcept (true) __asm__ ("" "__isoc23_strtoul_l")




     __attribute__ ((__nonnull__ (1, 4)));
__extension__
extern long long int strtoll_l (const char *__restrict __nptr, char **__restrict __endptr, int __base, locale_t __loc) noexcept (true) __asm__ ("" "__isoc23_strtoll_l")




     __attribute__ ((__nonnull__ (1, 4)));
__extension__
extern unsigned long long int strtoull_l (const char *__restrict __nptr, char **__restrict __endptr, int __base, locale_t __loc) noexcept (true) __asm__ ("" "__isoc23_strtoull_l")




     __attribute__ ((__nonnull__ (1, 4)));
# 415 "/usr/include/stdlib.h" 3 4
extern double strtod_l (const char *__restrict __nptr,
   char **__restrict __endptr, locale_t __loc)
     noexcept (true) __attribute__ ((__nonnull__ (1, 3)));

extern float strtof_l (const char *__restrict __nptr,
         char **__restrict __endptr, locale_t __loc)
     noexcept (true) __attribute__ ((__nonnull__ (1, 3)));

extern long double strtold_l (const char *__restrict __nptr,
         char **__restrict __endptr,
         locale_t __loc)
     noexcept (true) __attribute__ ((__nonnull__ (1, 3)));
# 436 "/usr/include/stdlib.h" 3 4
extern _Float32 strtof32_l (const char *__restrict __nptr,
       char **__restrict __endptr,
       locale_t __loc)
     noexcept (true) __attribute__ ((__nonnull__ (1, 3)));



extern _Float64 strtof64_l (const char *__restrict __nptr,
       char **__restrict __endptr,
       locale_t __loc)
     noexcept (true) __attribute__ ((__nonnull__ (1, 3)));
# 457 "/usr/include/stdlib.h" 3 4
extern _Float32x strtof32x_l (const char *__restrict __nptr,
         char **__restrict __endptr,
         locale_t __loc)
     noexcept (true) __attribute__ ((__nonnull__ (1, 3)));



extern _Float64x strtof64x_l (const char *__restrict __nptr,
         char **__restrict __endptr,
         locale_t __loc)
     noexcept (true) __attribute__ ((__nonnull__ (1, 3)));
# 505 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) noexcept (true) ;


extern long int a64l (const char *__s)
     noexcept (true) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





# 1 "/usr/include/x86_64-linux-gnu/sys/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
extern "C" {





typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;


typedef __loff_t loff_t;




typedef __ino_t ino_t;






typedef __ino64_t ino64_t;




typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;






typedef __off64_t off64_t;




typedef __pid_t pid_t;





typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;





# 1 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h" 1 3 4






typedef __clock_t clock_t;
# 127 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h" 1 3 4






typedef __clockid_t clockid_t;
# 129 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 3 4
typedef __time_t time_t;
# 130 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h" 1 3 4






typedef __timer_t timer_t;
# 131 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef __useconds_t useconds_t;



typedef __suseconds_t suseconds_t;






# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/lnx64/tools/clang-3.9-csynth/lib/clang/7.0.0/include/stddef.h" 1 3 4
# 145 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;





# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3 4
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
# 156 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


typedef __uint8_t u_int8_t;
typedef __uint16_t u_int16_t;
typedef __uint32_t u_int32_t;
typedef __uint64_t u_int64_t;


typedef int register_t __attribute__ ((__mode__ (__word__)));
# 176 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 24 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endian.h" 1 3 4
# 35 "/usr/include/x86_64-linux-gnu/bits/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endianness.h" 1 3 4
# 36 "/usr/include/x86_64-linux-gnu/bits/endian.h" 2 3 4
# 25 "/usr/include/endian.h" 2 3 4
# 35 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
static __inline __uint16_t
__bswap_16 (__uint16_t __bsx)
{



  return ((__uint16_t) ((((__bsx) >> 8) & 0xff) | (((__bsx) & 0xff) << 8)));

}






static __inline __uint32_t
__bswap_32 (__uint32_t __bsx)
{



  return ((((__bsx) & 0xff000000u) >> 24) | (((__bsx) & 0x00ff0000u) >> 8) | (((__bsx) & 0x0000ff00u) << 8) | (((__bsx) & 0x000000ffu) << 24));

}
# 69 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
__extension__ static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{



  return ((((__bsx) & 0xff00000000000000ull) >> 56) | (((__bsx) & 0x00ff000000000000ull) >> 40) | (((__bsx) & 0x0000ff0000000000ull) >> 24) | (((__bsx) & 0x000000ff00000000ull) >> 8) | (((__bsx) & 0x00000000ff000000ull) << 8) | (((__bsx) & 0x0000000000ff0000ull) << 24) | (((__bsx) & 0x000000000000ff00ull) << 40) | (((__bsx) & 0x00000000000000ffull) << 56));

}
# 36 "/usr/include/endian.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 1 3 4
# 32 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3 4
static __inline __uint16_t
__uint16_identity (__uint16_t __x)
{
  return __x;
}

static __inline __uint32_t
__uint32_identity (__uint32_t __x)
{
  return __x;
}

static __inline __uint64_t
__uint64_identity (__uint64_t __x)
{
  return __x;
}
# 37 "/usr/include/endian.h" 2 3 4
# 177 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/sys/select.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/select.h" 1 3 4
# 31 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 1 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 1 3 4




typedef struct
{
  unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
} __sigset_t;
# 5 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 2 3 4


typedef __sigset_t sigset_t;
# 34 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 1 3 4







struct timeval
{




  __time_t tv_sec;
  __suseconds_t tv_usec;

};
# 38 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
struct timespec
{



  __time_t tv_sec;




  __syscall_slong_t tv_nsec;
# 31 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
};
# 40 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4
# 49 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
typedef long int __fd_mask;
# 59 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];





  } fd_set;






typedef __fd_mask fd_mask;
# 91 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern "C" {
# 102 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 127 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);
# 153 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
}
# 180 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 219 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;






# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 1 3 4
# 44 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 1 3 4
# 21 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 2 3 4
# 45 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 3 4
typedef union
{
  __extension__ unsigned long long int __value64;
  struct
  {
    unsigned int __low;
    unsigned int __high;
  } __value32;
} __atomic_wide_counter;
# 47 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;

typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;
# 76 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
struct __pthread_mutex_s
{
  int __lock;
  unsigned int __count;
  int __owner;

  unsigned int __nusers;



  int __kind;

  short __spins;
  short __elision;
  __pthread_list_t __list;
# 53 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
};
# 77 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4
# 89 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
struct __pthread_rwlock_arch_t
{
  unsigned int __readers;
  unsigned int __writers;
  unsigned int __wrphase_futex;
  unsigned int __writers_futex;
  unsigned int __pad3;
  unsigned int __pad4;

  int __cur_writer;
  int __shared;
  signed char __rwelision;




  unsigned char __pad1[7];


  unsigned long int __pad2;


  unsigned int __flags;
# 55 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
};
# 90 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




struct __pthread_cond_s
{
  __atomic_wide_counter __wseq;
  __atomic_wide_counter __g1_start;
  unsigned int __g_refs[2] ;
  unsigned int __g_size[2];
  unsigned int __g1_orig_size;
  unsigned int __wrefs;
  unsigned int __g_signals[2];
};

typedef unsigned int __tss_t;
typedef unsigned long int __thrd_t;

typedef struct
{
  int __data ;
} __once_flag;
# 24 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 2 3 4



typedef unsigned long int pthread_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;


union pthread_attr_t
{
  char __size[56];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;




typedef union
{
  struct __pthread_mutex_s __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;


typedef union
{
  struct __pthread_cond_s __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;





typedef union
{
  struct __pthread_rwlock_arch_t __data;
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 228 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


}
# 515 "/usr/include/stdlib.h" 2 3 4






extern long int random (void) noexcept (true);


extern void srandom (unsigned int __seed) noexcept (true);





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) noexcept (true) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) noexcept (true) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) noexcept (true) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     noexcept (true) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     noexcept (true) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     noexcept (true) __attribute__ ((__nonnull__ (1, 2)));





extern int rand (void) noexcept (true);

extern void srand (unsigned int __seed) noexcept (true);



extern int rand_r (unsigned int *__seed) noexcept (true);







extern double drand48 (void) noexcept (true);
extern double erand48 (unsigned short int __xsubi[3]) noexcept (true) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) noexcept (true);
extern long int nrand48 (unsigned short int __xsubi[3])
     noexcept (true) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) noexcept (true);
extern long int jrand48 (unsigned short int __xsubi[3])
     noexcept (true) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) noexcept (true);
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     noexcept (true) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) noexcept (true) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) noexcept (true) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) noexcept (true) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     noexcept (true) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     noexcept (true) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     noexcept (true) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     noexcept (true) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     noexcept (true) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) noexcept (true) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     noexcept (true) __attribute__ ((__nonnull__ (1, 2)));


extern __uint32_t arc4random (void)
     noexcept (true) ;


extern void arc4random_buf (void *__buf, size_t __size)
     noexcept (true) __attribute__ ((__nonnull__ (1)));



extern __uint32_t arc4random_uniform (__uint32_t __upper_bound)
     noexcept (true) ;




extern void *malloc (size_t __size) noexcept (true) __attribute__ ((__malloc__))
                                         ;

extern void *calloc (size_t __nmemb, size_t __size)
     noexcept (true) __attribute__ ((__malloc__)) ;






extern void *realloc (void *__ptr, size_t __size)
     noexcept (true) __attribute__ ((__warn_unused_result__)) ;


extern void free (void *__ptr) noexcept (true);







extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     noexcept (true) __attribute__ ((__warn_unused_result__))

                       ;


extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     noexcept (true) ;




# 1 "/usr/include/alloca.h" 1 3 4
# 24 "/usr/include/alloca.h" 3 4
# 1 "/software/common/Xilinx_Vitis/Vitis/2024.2/lnx64/tools/clang-3.9-csynth/lib/clang/7.0.0/include/stddef.h" 1 3 4
# 25 "/usr/include/alloca.h" 2 3 4

extern "C" {





extern void *alloca (size_t __size) noexcept (true);





}
# 707 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) noexcept (true) __attribute__ ((__malloc__))
                                         ;




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     noexcept (true) __attribute__ ((__nonnull__ (1))) ;




extern void *aligned_alloc (size_t __alignment, size_t __size)
     noexcept (true) __attribute__ ((__malloc__)) __attribute__ ((__alloc_align__ (1)))
                                         ;



extern void abort (void) noexcept (true) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) noexcept (true) __attribute__ ((__nonnull__ (1)));




extern "C++" int at_quick_exit (void (*__func) (void))
     noexcept (true) __asm ("at_quick_exit") __attribute__ ((__nonnull__ (1)));
# 749 "/usr/include/stdlib.h" 3 4
extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     noexcept (true) __attribute__ ((__nonnull__ (1)));





extern void exit (int __status) noexcept (true) __attribute__ ((__noreturn__));





extern void quick_exit (int __status) noexcept (true) __attribute__ ((__noreturn__));





extern void _Exit (int __status) noexcept (true) __attribute__ ((__noreturn__));




extern char *getenv (const char *__name) noexcept (true) __attribute__ ((__nonnull__ (1))) ;




extern char *secure_getenv (const char *__name)
     noexcept (true) __attribute__ ((__nonnull__ (1))) ;






extern int putenv (char *__string) noexcept (true) __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     noexcept (true) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) noexcept (true) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) noexcept (true);
# 814 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) noexcept (true) __attribute__ ((__nonnull__ (1)));
# 827 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 837 "/usr/include/stdlib.h" 3 4
extern int mkstemp64 (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 849 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
# 859 "/usr/include/stdlib.h" 3 4
extern int mkstemps64 (char *__template, int __suffixlen)
     __attribute__ ((__nonnull__ (1))) ;
# 870 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) noexcept (true) __attribute__ ((__nonnull__ (1))) ;
# 881 "/usr/include/stdlib.h" 3 4
extern int mkostemp (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 891 "/usr/include/stdlib.h" 3 4
extern int mkostemp64 (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 901 "/usr/include/stdlib.h" 3 4
extern int mkostemps (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;
# 913 "/usr/include/stdlib.h" 3 4
extern int mkostemps64 (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;
# 923 "/usr/include/stdlib.h" 3 4
extern int system (const char *__command) ;





extern char *canonicalize_file_name (const char *__name)
     noexcept (true) __attribute__ ((__nonnull__ (1))) __attribute__ ((__malloc__))
                              ;
# 940 "/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) noexcept (true) ;






typedef int (*__compar_fn_t) (const void *, const void *);


typedef __compar_fn_t comparison_fn_t;



typedef int (*__compar_d_fn_t) (const void *, const void *, void *);




extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;







extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));

extern void qsort_r (void *__base, size_t __nmemb, size_t __size,
       __compar_d_fn_t __compar, void *__arg)
  __attribute__ ((__nonnull__ (1, 4)));




extern int abs (int __x) noexcept (true) __attribute__ ((__const__)) ;
extern long int labs (long int __x) noexcept (true) __attribute__ ((__const__)) ;


__extension__ extern long long int llabs (long long int __x)
     noexcept (true) __attribute__ ((__const__)) ;






extern div_t div (int __numer, int __denom)
     noexcept (true) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     noexcept (true) __attribute__ ((__const__)) ;


__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     noexcept (true) __attribute__ ((__const__)) ;
# 1012 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) noexcept (true) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) noexcept (true) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *gcvt (double __value, int __ndigit, char *__buf)
     noexcept (true) __attribute__ ((__nonnull__ (3))) ;




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     noexcept (true) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     noexcept (true) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     noexcept (true) __attribute__ ((__nonnull__ (3))) ;




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) noexcept (true) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) noexcept (true) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     noexcept (true) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     noexcept (true) __attribute__ ((__nonnull__ (3, 4, 5)));





extern int mblen (const char *__s, size_t __n) noexcept (true);


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) noexcept (true);


extern int wctomb (char *__s, wchar_t __wchar) noexcept (true);



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) noexcept (true)
                                      ;

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     noexcept (true)

                                    ;






extern int rpmatch (const char *__response) noexcept (true) __attribute__ ((__nonnull__ (1))) ;
# 1099 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     noexcept (true) __attribute__ ((__nonnull__ (1, 2, 3))) ;







extern int posix_openpt (int __oflag) ;







extern int grantpt (int __fd) noexcept (true);



extern int unlockpt (int __fd) noexcept (true);




extern char *ptsname (int __fd) noexcept (true) ;






extern int ptsname_r (int __fd, char *__buf, size_t __buflen)
     noexcept (true) __attribute__ ((__nonnull__ (2))) ;


extern int getpt (void);






extern int getloadavg (double __loadavg[], int __nelem)
     noexcept (true) __attribute__ ((__nonnull__ (1)));
# 1155 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 1 3 4
# 1156 "/usr/include/stdlib.h" 2 3 4
# 1167 "/usr/include/stdlib.h" 3 4
}
# 39 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/bits/std_abs.h" 2 3







extern "C++"
{
namespace std __attribute__ ((__visibility__ ("default")))
{


  using ::abs;


  inline long
  abs(long __i) { return __builtin_labs(__i); }



  inline long long
  abs(long long __x) { return __builtin_llabs (__x); }







  inline constexpr double
  abs(double __x)
  { return __builtin_fabs(__x); }

  inline constexpr float
  abs(float __x)
  { return __builtin_fabsf(__x); }

  inline constexpr long double
  abs(long double __x)
  { return __builtin_fabsl(__x); }



  inline constexpr __int128
  abs(__int128 __x) { return __x >= 0 ? __x : -__x; }
# 100 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/bits/std_abs.h" 3
  inline constexpr
  __float128
  abs(__float128 __x)
  { return __x < 0 ? -__x : __x; }



}
}
# 48 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/cmath" 2 3
# 77 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/cmath" 3
extern "C++"
{
namespace std __attribute__ ((__visibility__ ("default")))
{


  using ::acos;


  inline constexpr float
  acos(float __x)
  { return __builtin_acosf(__x); }

  inline constexpr long double
  acos(long double __x)
  { return __builtin_acosl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    acos(_Tp __x)
    { return __builtin_acos(__x); }

  using ::asin;


  inline constexpr float
  asin(float __x)
  { return __builtin_asinf(__x); }

  inline constexpr long double
  asin(long double __x)
  { return __builtin_asinl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    asin(_Tp __x)
    { return __builtin_asin(__x); }

  using ::atan;


  inline constexpr float
  atan(float __x)
  { return __builtin_atanf(__x); }

  inline constexpr long double
  atan(long double __x)
  { return __builtin_atanl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    atan(_Tp __x)
    { return __builtin_atan(__x); }

  using ::atan2;


  inline constexpr float
  atan2(float __y, float __x)
  { return __builtin_atan2f(__y, __x); }

  inline constexpr long double
  atan2(long double __y, long double __x)
  { return __builtin_atan2l(__y, __x); }


  template<typename _Tp, typename _Up>
    inline constexpr
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    atan2(_Tp __y, _Up __x)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return atan2(__type(__y), __type(__x));
    }

  using ::ceil;


  inline constexpr float
  ceil(float __x)
  { return __builtin_ceilf(__x); }

  inline constexpr long double
  ceil(long double __x)
  { return __builtin_ceill(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    ceil(_Tp __x)
    { return __builtin_ceil(__x); }

  using ::cos;


  inline constexpr float
  cos(float __x)
  { return __builtin_cosf(__x); }

  inline constexpr long double
  cos(long double __x)
  { return __builtin_cosl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    cos(_Tp __x)
    { return __builtin_cos(__x); }

  using ::cosh;


  inline constexpr float
  cosh(float __x)
  { return __builtin_coshf(__x); }

  inline constexpr long double
  cosh(long double __x)
  { return __builtin_coshl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    cosh(_Tp __x)
    { return __builtin_cosh(__x); }

  using ::exp;


  inline constexpr float
  exp(float __x)
  { return __builtin_expf(__x); }

  inline constexpr long double
  exp(long double __x)
  { return __builtin_expl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    exp(_Tp __x)
    { return __builtin_exp(__x); }

  using ::fabs;


  inline constexpr float
  fabs(float __x)
  { return __builtin_fabsf(__x); }

  inline constexpr long double
  fabs(long double __x)
  { return __builtin_fabsl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    fabs(_Tp __x)
    { return __builtin_fabs(__x); }

  using ::floor;


  inline constexpr float
  floor(float __x)
  { return __builtin_floorf(__x); }

  inline constexpr long double
  floor(long double __x)
  { return __builtin_floorl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    floor(_Tp __x)
    { return __builtin_floor(__x); }

  using ::fmod;


  inline constexpr float
  fmod(float __x, float __y)
  { return __builtin_fmodf(__x, __y); }

  inline constexpr long double
  fmod(long double __x, long double __y)
  { return __builtin_fmodl(__x, __y); }


  template<typename _Tp, typename _Up>
    inline constexpr
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    fmod(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return fmod(__type(__x), __type(__y));
    }

  using ::frexp;


  inline float
  frexp(float __x, int* __exp)
  { return __builtin_frexpf(__x, __exp); }

  inline long double
  frexp(long double __x, int* __exp)
  { return __builtin_frexpl(__x, __exp); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    frexp(_Tp __x, int* __exp)
    { return __builtin_frexp(__x, __exp); }

  using ::ldexp;


  inline constexpr float
  ldexp(float __x, int __exp)
  { return __builtin_ldexpf(__x, __exp); }

  inline constexpr long double
  ldexp(long double __x, int __exp)
  { return __builtin_ldexpl(__x, __exp); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    ldexp(_Tp __x, int __exp)
    { return __builtin_ldexp(__x, __exp); }

  using ::log;


  inline constexpr float
  log(float __x)
  { return __builtin_logf(__x); }

  inline constexpr long double
  log(long double __x)
  { return __builtin_logl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    log(_Tp __x)
    { return __builtin_log(__x); }

  using ::log10;


  inline constexpr float
  log10(float __x)
  { return __builtin_log10f(__x); }

  inline constexpr long double
  log10(long double __x)
  { return __builtin_log10l(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    log10(_Tp __x)
    { return __builtin_log10(__x); }

  using ::modf;


  inline float
  modf(float __x, float* __iptr)
  { return __builtin_modff(__x, __iptr); }

  inline long double
  modf(long double __x, long double* __iptr)
  { return __builtin_modfl(__x, __iptr); }


  using ::pow;


  inline constexpr float
  pow(float __x, float __y)
  { return __builtin_powf(__x, __y); }

  inline constexpr long double
  pow(long double __x, long double __y)
  { return __builtin_powl(__x, __y); }
# 412 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/cmath" 3
  template<typename _Tp, typename _Up>
    inline constexpr
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    pow(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return pow(__type(__x), __type(__y));
    }

  using ::sin;


  inline constexpr float
  sin(float __x)
  { return __builtin_sinf(__x); }

  inline constexpr long double
  sin(long double __x)
  { return __builtin_sinl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    sin(_Tp __x)
    { return __builtin_sin(__x); }

  using ::sinh;


  inline constexpr float
  sinh(float __x)
  { return __builtin_sinhf(__x); }

  inline constexpr long double
  sinh(long double __x)
  { return __builtin_sinhl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    sinh(_Tp __x)
    { return __builtin_sinh(__x); }

  using ::sqrt;


  inline constexpr float
  sqrt(float __x)
  { return __builtin_sqrtf(__x); }

  inline constexpr long double
  sqrt(long double __x)
  { return __builtin_sqrtl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    sqrt(_Tp __x)
    { return __builtin_sqrt(__x); }

  using ::tan;


  inline constexpr float
  tan(float __x)
  { return __builtin_tanf(__x); }

  inline constexpr long double
  tan(long double __x)
  { return __builtin_tanl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    tan(_Tp __x)
    { return __builtin_tan(__x); }

  using ::tanh;


  inline constexpr float
  tanh(float __x)
  { return __builtin_tanhf(__x); }

  inline constexpr long double
  tanh(long double __x)
  { return __builtin_tanhl(__x); }


  template<typename _Tp>
    inline constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    tanh(_Tp __x)
    { return __builtin_tanh(__x); }
# 536 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/cmath" 3
  constexpr int
  fpclassify(float __x)
  { return __builtin_fpclassify(0, 1, 4,
    3, 2, __x); }

  constexpr int
  fpclassify(double __x)
  { return __builtin_fpclassify(0, 1, 4,
    3, 2, __x); }

  constexpr int
  fpclassify(long double __x)
  { return __builtin_fpclassify(0, 1, 4,
    3, 2, __x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              int>::__type
    fpclassify(_Tp __x)
    { return __x != 0 ? 4 : 2; }



  constexpr bool
  isfinite(float __x)
  { return __builtin_isfinite(__x); }

  constexpr bool
  isfinite(double __x)
  { return __builtin_isfinite(__x); }

  constexpr bool
  isfinite(long double __x)
  { return __builtin_isfinite(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              bool>::__type
    isfinite(_Tp __x)
    { return true; }



  constexpr bool
  isinf(float __x)
  { return __builtin_isinf(__x); }





  constexpr bool
  isinf(double __x)
  { return __builtin_isinf(__x); }


  constexpr bool
  isinf(long double __x)
  { return __builtin_isinf(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              bool>::__type
    isinf(_Tp __x)
    { return false; }



  constexpr bool
  isnan(float __x)
  { return __builtin_isnan(__x); }





  constexpr bool
  isnan(double __x)
  { return __builtin_isnan(__x); }


  constexpr bool
  isnan(long double __x)
  { return __builtin_isnan(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              bool>::__type
    isnan(_Tp __x)
    { return false; }



  constexpr bool
  isnormal(float __x)
  { return __builtin_isnormal(__x); }

  constexpr bool
  isnormal(double __x)
  { return __builtin_isnormal(__x); }

  constexpr bool
  isnormal(long double __x)
  { return __builtin_isnormal(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              bool>::__type
    isnormal(_Tp __x)
    { return __x != 0 ? true : false; }




  constexpr bool
  signbit(float __x)
  { return __builtin_signbit(__x); }

  constexpr bool
  signbit(double __x)
  { return __builtin_signbit(__x); }

  constexpr bool
  signbit(long double __x)
  { return __builtin_signbit(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              bool>::__type
    signbit(_Tp __x)
    { return __x < 0 ? true : false; }



  constexpr bool
  isgreater(float __x, float __y)
  { return __builtin_isgreater(__x, __y); }

  constexpr bool
  isgreater(double __x, double __y)
  { return __builtin_isgreater(__x, __y); }

  constexpr bool
  isgreater(long double __x, long double __y)
  { return __builtin_isgreater(__x, __y); }



  template<typename _Tp, typename _Up>
    constexpr typename
    __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
       && __is_arithmetic<_Up>::__value), bool>::__type
    isgreater(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return __builtin_isgreater(__type(__x), __type(__y));
    }



  constexpr bool
  isgreaterequal(float __x, float __y)
  { return __builtin_isgreaterequal(__x, __y); }

  constexpr bool
  isgreaterequal(double __x, double __y)
  { return __builtin_isgreaterequal(__x, __y); }

  constexpr bool
  isgreaterequal(long double __x, long double __y)
  { return __builtin_isgreaterequal(__x, __y); }



  template<typename _Tp, typename _Up>
    constexpr typename
    __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
       && __is_arithmetic<_Up>::__value), bool>::__type
    isgreaterequal(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return __builtin_isgreaterequal(__type(__x), __type(__y));
    }



  constexpr bool
  isless(float __x, float __y)
  { return __builtin_isless(__x, __y); }

  constexpr bool
  isless(double __x, double __y)
  { return __builtin_isless(__x, __y); }

  constexpr bool
  isless(long double __x, long double __y)
  { return __builtin_isless(__x, __y); }



  template<typename _Tp, typename _Up>
    constexpr typename
    __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
       && __is_arithmetic<_Up>::__value), bool>::__type
    isless(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return __builtin_isless(__type(__x), __type(__y));
    }



  constexpr bool
  islessequal(float __x, float __y)
  { return __builtin_islessequal(__x, __y); }

  constexpr bool
  islessequal(double __x, double __y)
  { return __builtin_islessequal(__x, __y); }

  constexpr bool
  islessequal(long double __x, long double __y)
  { return __builtin_islessequal(__x, __y); }



  template<typename _Tp, typename _Up>
    constexpr typename
    __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
       && __is_arithmetic<_Up>::__value), bool>::__type
    islessequal(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return __builtin_islessequal(__type(__x), __type(__y));
    }



  constexpr bool
  islessgreater(float __x, float __y)
  { return __builtin_islessgreater(__x, __y); }

  constexpr bool
  islessgreater(double __x, double __y)
  { return __builtin_islessgreater(__x, __y); }

  constexpr bool
  islessgreater(long double __x, long double __y)
  { return __builtin_islessgreater(__x, __y); }



  template<typename _Tp, typename _Up>
    constexpr typename
    __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
       && __is_arithmetic<_Up>::__value), bool>::__type
    islessgreater(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return __builtin_islessgreater(__type(__x), __type(__y));
    }



  constexpr bool
  isunordered(float __x, float __y)
  { return __builtin_isunordered(__x, __y); }

  constexpr bool
  isunordered(double __x, double __y)
  { return __builtin_isunordered(__x, __y); }

  constexpr bool
  isunordered(long double __x, long double __y)
  { return __builtin_isunordered(__x, __y); }



  template<typename _Tp, typename _Up>
    constexpr typename
    __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
       && __is_arithmetic<_Up>::__value), bool>::__type
    isunordered(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return __builtin_isunordered(__type(__x), __type(__y));
    }
# 1065 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/cmath" 3
  using ::double_t;
  using ::float_t;


  using ::acosh;
  using ::acoshf;
  using ::acoshl;

  using ::asinh;
  using ::asinhf;
  using ::asinhl;

  using ::atanh;
  using ::atanhf;
  using ::atanhl;

  using ::cbrt;
  using ::cbrtf;
  using ::cbrtl;

  using ::copysign;
  using ::copysignf;
  using ::copysignl;

  using ::erf;
  using ::erff;
  using ::erfl;

  using ::erfc;
  using ::erfcf;
  using ::erfcl;

  using ::exp2;
  using ::exp2f;
  using ::exp2l;

  using ::expm1;
  using ::expm1f;
  using ::expm1l;

  using ::fdim;
  using ::fdimf;
  using ::fdiml;

  using ::fma;
  using ::fmaf;
  using ::fmal;

  using ::fmax;
  using ::fmaxf;
  using ::fmaxl;

  using ::fmin;
  using ::fminf;
  using ::fminl;

  using ::hypot;
  using ::hypotf;
  using ::hypotl;

  using ::ilogb;
  using ::ilogbf;
  using ::ilogbl;

  using ::lgamma;
  using ::lgammaf;
  using ::lgammal;


  using ::llrint;
  using ::llrintf;
  using ::llrintl;

  using ::llround;
  using ::llroundf;
  using ::llroundl;


  using ::log1p;
  using ::log1pf;
  using ::log1pl;

  using ::log2;
  using ::log2f;
  using ::log2l;

  using ::logb;
  using ::logbf;
  using ::logbl;

  using ::lrint;
  using ::lrintf;
  using ::lrintl;

  using ::lround;
  using ::lroundf;
  using ::lroundl;

  using ::nan;
  using ::nanf;
  using ::nanl;

  using ::nearbyint;
  using ::nearbyintf;
  using ::nearbyintl;

  using ::nextafter;
  using ::nextafterf;
  using ::nextafterl;

  using ::nexttoward;
  using ::nexttowardf;
  using ::nexttowardl;

  using ::remainder;
  using ::remainderf;
  using ::remainderl;

  using ::remquo;
  using ::remquof;
  using ::remquol;

  using ::rint;
  using ::rintf;
  using ::rintl;

  using ::round;
  using ::roundf;
  using ::roundl;

  using ::scalbln;
  using ::scalblnf;
  using ::scalblnl;

  using ::scalbn;
  using ::scalbnf;
  using ::scalbnl;

  using ::tgamma;
  using ::tgammaf;
  using ::tgammal;

  using ::trunc;
  using ::truncf;
  using ::truncl;



  constexpr float
  acosh(float __x)
  { return __builtin_acoshf(__x); }

  constexpr long double
  acosh(long double __x)
  { return __builtin_acoshl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    acosh(_Tp __x)
    { return __builtin_acosh(__x); }



  constexpr float
  asinh(float __x)
  { return __builtin_asinhf(__x); }

  constexpr long double
  asinh(long double __x)
  { return __builtin_asinhl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    asinh(_Tp __x)
    { return __builtin_asinh(__x); }



  constexpr float
  atanh(float __x)
  { return __builtin_atanhf(__x); }

  constexpr long double
  atanh(long double __x)
  { return __builtin_atanhl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    atanh(_Tp __x)
    { return __builtin_atanh(__x); }



  constexpr float
  cbrt(float __x)
  { return __builtin_cbrtf(__x); }

  constexpr long double
  cbrt(long double __x)
  { return __builtin_cbrtl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    cbrt(_Tp __x)
    { return __builtin_cbrt(__x); }



  constexpr float
  copysign(float __x, float __y)
  { return __builtin_copysignf(__x, __y); }

  constexpr long double
  copysign(long double __x, long double __y)
  { return __builtin_copysignl(__x, __y); }



  template<typename _Tp, typename _Up>
    constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    copysign(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return copysign(__type(__x), __type(__y));
    }



  constexpr float
  erf(float __x)
  { return __builtin_erff(__x); }

  constexpr long double
  erf(long double __x)
  { return __builtin_erfl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    erf(_Tp __x)
    { return __builtin_erf(__x); }



  constexpr float
  erfc(float __x)
  { return __builtin_erfcf(__x); }

  constexpr long double
  erfc(long double __x)
  { return __builtin_erfcl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    erfc(_Tp __x)
    { return __builtin_erfc(__x); }



  constexpr float
  exp2(float __x)
  { return __builtin_exp2f(__x); }

  constexpr long double
  exp2(long double __x)
  { return __builtin_exp2l(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    exp2(_Tp __x)
    { return __builtin_exp2(__x); }



  constexpr float
  expm1(float __x)
  { return __builtin_expm1f(__x); }

  constexpr long double
  expm1(long double __x)
  { return __builtin_expm1l(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    expm1(_Tp __x)
    { return __builtin_expm1(__x); }



  constexpr float
  fdim(float __x, float __y)
  { return __builtin_fdimf(__x, __y); }

  constexpr long double
  fdim(long double __x, long double __y)
  { return __builtin_fdiml(__x, __y); }



  template<typename _Tp, typename _Up>
    constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    fdim(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return fdim(__type(__x), __type(__y));
    }



  constexpr float
  fma(float __x, float __y, float __z)
  { return __builtin_fmaf(__x, __y, __z); }

  constexpr long double
  fma(long double __x, long double __y, long double __z)
  { return __builtin_fmal(__x, __y, __z); }



  template<typename _Tp, typename _Up, typename _Vp>
    constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
    fma(_Tp __x, _Up __y, _Vp __z)
    {
      typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
      return fma(__type(__x), __type(__y), __type(__z));
    }



  constexpr float
  fmax(float __x, float __y)
  { return __builtin_fmaxf(__x, __y); }

  constexpr long double
  fmax(long double __x, long double __y)
  { return __builtin_fmaxl(__x, __y); }



  template<typename _Tp, typename _Up>
    constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    fmax(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return fmax(__type(__x), __type(__y));
    }



  constexpr float
  fmin(float __x, float __y)
  { return __builtin_fminf(__x, __y); }

  constexpr long double
  fmin(long double __x, long double __y)
  { return __builtin_fminl(__x, __y); }



  template<typename _Tp, typename _Up>
    constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    fmin(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return fmin(__type(__x), __type(__y));
    }



  constexpr float
  hypot(float __x, float __y)
  { return __builtin_hypotf(__x, __y); }

  constexpr long double
  hypot(long double __x, long double __y)
  { return __builtin_hypotl(__x, __y); }



  template<typename _Tp, typename _Up>
    constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    hypot(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return hypot(__type(__x), __type(__y));
    }



  constexpr int
  ilogb(float __x)
  { return __builtin_ilogbf(__x); }

  constexpr int
  ilogb(long double __x)
  { return __builtin_ilogbl(__x); }



  template<typename _Tp>
    constexpr
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    int>::__type
    ilogb(_Tp __x)
    { return __builtin_ilogb(__x); }



  constexpr float
  lgamma(float __x)
  { return __builtin_lgammaf(__x); }

  constexpr long double
  lgamma(long double __x)
  { return __builtin_lgammal(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    lgamma(_Tp __x)
    { return __builtin_lgamma(__x); }



  constexpr long long
  llrint(float __x)
  { return __builtin_llrintf(__x); }

  constexpr long long
  llrint(long double __x)
  { return __builtin_llrintl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              long long>::__type
    llrint(_Tp __x)
    { return __builtin_llrint(__x); }



  constexpr long long
  llround(float __x)
  { return __builtin_llroundf(__x); }

  constexpr long long
  llround(long double __x)
  { return __builtin_llroundl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              long long>::__type
    llround(_Tp __x)
    { return __builtin_llround(__x); }



  constexpr float
  log1p(float __x)
  { return __builtin_log1pf(__x); }

  constexpr long double
  log1p(long double __x)
  { return __builtin_log1pl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    log1p(_Tp __x)
    { return __builtin_log1p(__x); }




  constexpr float
  log2(float __x)
  { return __builtin_log2f(__x); }

  constexpr long double
  log2(long double __x)
  { return __builtin_log2l(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    log2(_Tp __x)
    { return __builtin_log2(__x); }



  constexpr float
  logb(float __x)
  { return __builtin_logbf(__x); }

  constexpr long double
  logb(long double __x)
  { return __builtin_logbl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    logb(_Tp __x)
    { return __builtin_logb(__x); }



  constexpr long
  lrint(float __x)
  { return __builtin_lrintf(__x); }

  constexpr long
  lrint(long double __x)
  { return __builtin_lrintl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              long>::__type
    lrint(_Tp __x)
    { return __builtin_lrint(__x); }



  constexpr long
  lround(float __x)
  { return __builtin_lroundf(__x); }

  constexpr long
  lround(long double __x)
  { return __builtin_lroundl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              long>::__type
    lround(_Tp __x)
    { return __builtin_lround(__x); }



  constexpr float
  nearbyint(float __x)
  { return __builtin_nearbyintf(__x); }

  constexpr long double
  nearbyint(long double __x)
  { return __builtin_nearbyintl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    nearbyint(_Tp __x)
    { return __builtin_nearbyint(__x); }



  constexpr float
  nextafter(float __x, float __y)
  { return __builtin_nextafterf(__x, __y); }

  constexpr long double
  nextafter(long double __x, long double __y)
  { return __builtin_nextafterl(__x, __y); }



  template<typename _Tp, typename _Up>
    constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    nextafter(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return nextafter(__type(__x), __type(__y));
    }



  constexpr float
  nexttoward(float __x, long double __y)
  { return __builtin_nexttowardf(__x, __y); }

  constexpr long double
  nexttoward(long double __x, long double __y)
  { return __builtin_nexttowardl(__x, __y); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    nexttoward(_Tp __x, long double __y)
    { return __builtin_nexttoward(__x, __y); }



  constexpr float
  remainder(float __x, float __y)
  { return __builtin_remainderf(__x, __y); }

  constexpr long double
  remainder(long double __x, long double __y)
  { return __builtin_remainderl(__x, __y); }



  template<typename _Tp, typename _Up>
    constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    remainder(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return remainder(__type(__x), __type(__y));
    }



  inline float
  remquo(float __x, float __y, int* __pquo)
  { return __builtin_remquof(__x, __y, __pquo); }

  inline long double
  remquo(long double __x, long double __y, int* __pquo)
  { return __builtin_remquol(__x, __y, __pquo); }



  template<typename _Tp, typename _Up>
    inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    remquo(_Tp __x, _Up __y, int* __pquo)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return remquo(__type(__x), __type(__y), __pquo);
    }



  constexpr float
  rint(float __x)
  { return __builtin_rintf(__x); }

  constexpr long double
  rint(long double __x)
  { return __builtin_rintl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    rint(_Tp __x)
    { return __builtin_rint(__x); }



  constexpr float
  round(float __x)
  { return __builtin_roundf(__x); }

  constexpr long double
  round(long double __x)
  { return __builtin_roundl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    round(_Tp __x)
    { return __builtin_round(__x); }



  constexpr float
  scalbln(float __x, long __ex)
  { return __builtin_scalblnf(__x, __ex); }

  constexpr long double
  scalbln(long double __x, long __ex)
  { return __builtin_scalblnl(__x, __ex); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    scalbln(_Tp __x, long __ex)
    { return __builtin_scalbln(__x, __ex); }



  constexpr float
  scalbn(float __x, int __ex)
  { return __builtin_scalbnf(__x, __ex); }

  constexpr long double
  scalbn(long double __x, int __ex)
  { return __builtin_scalbnl(__x, __ex); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    scalbn(_Tp __x, int __ex)
    { return __builtin_scalbn(__x, __ex); }



  constexpr float
  tgamma(float __x)
  { return __builtin_tgammaf(__x); }

  constexpr long double
  tgamma(long double __x)
  { return __builtin_tgammal(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    tgamma(_Tp __x)
    { return __builtin_tgamma(__x); }



  constexpr float
  trunc(float __x)
  { return __builtin_truncf(__x); }

  constexpr long double
  trunc(long double __x)
  { return __builtin_truncl(__x); }



  template<typename _Tp>
    constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                              double>::__type
    trunc(_Tp __x)
    { return __builtin_trunc(__x); }
# 1889 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/cmath" 3
}





}
# 37 "/software/common/Xilinx_Vitis/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/math.h" 2 3

using std::abs;
using std::acos;
using std::asin;
using std::atan;
using std::atan2;
using std::cos;
using std::sin;
using std::tan;
using std::cosh;
using std::sinh;
using std::tanh;
using std::exp;
using std::frexp;
using std::ldexp;
using std::log;
using std::log10;
using std::modf;
using std::pow;
using std::sqrt;
using std::ceil;
using std::fabs;
using std::floor;
using std::fmod;


using std::fpclassify;
using std::isfinite;
using std::isinf;
using std::isnan;
using std::isnormal;
using std::signbit;
using std::isgreater;
using std::isgreaterequal;
using std::isless;
using std::islessequal;
using std::islessgreater;
using std::isunordered;



using std::acosh;
using std::asinh;
using std::atanh;
using std::cbrt;
using std::copysign;
using std::erf;
using std::erfc;
using std::exp2;
using std::expm1;
using std::fdim;
using std::fma;
using std::fmax;
using std::fmin;
using std::hypot;
using std::ilogb;
using std::lgamma;
using std::llrint;
using std::llround;
using std::log1p;
using std::log2;
using std::logb;
using std::lrint;
using std::lround;
using std::nearbyint;
using std::nextafter;
using std::nexttoward;
using std::remainder;
using std::remquo;
using std::rint;
using std::round;
using std::scalbln;
using std::scalbn;
using std::tgamma;
using std::trunc;
# 3 "cordiccart2pol.cpp" 2


# 1 "./cordic_LUTs.hpp" 1
# 39 "./cordic_LUTs.hpp"
const data_t my_LUT_th[] = {0.0, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, 1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, -1.5707963705062866, 0.0, 0.7853981852531433, 1.1071487665176392, 1.249045729637146, 1.3258177042007446, 1.3734008073806763, 1.4056476354599, 1.4288992881774902, 1.4464412927627563, 1.4601391553878784, 1.4711276292800903, 1.4801363945007324, 1.4876550436019897, 1.494024395942688, 1.4994888305664062, 1.504228115081787, 1.5083775520324707, 1.5120404958724976, 1.515297770500183, 1.5182132720947266, 1.5208379030227661, 1.523213267326355, 1.525373101234436, 1.5273454189300537, 1.5291537046432495, 1.5308176279067993, 1.5323537588119507, 1.5337761640548706, 1.5350972414016724, 1.5363272428512573, 1.537475347518921, 1.5385494232177734, 1.5395565032958984, 1.5405025482177734, 1.5413930416107178, 1.542232632637024, 1.5430257320404053, 1.5437759160995483, 1.54448664188385, 1.5451608896255493, 1.5458015203475952, 1.5464109182357788, 1.5469913482666016, 1.5475447177886963, 1.5480729341506958, 1.5485777854919434, 1.549060583114624, 1.5495229959487915, 1.5499659776687622, 1.5503909587860107, 1.550799012184143, 1.551190972328186, 1.5515679121017456, 1.5519306659698486, 1.5522799491882324, 1.5526164770126343, 1.552941083908081, 1.553254246711731, 1.5535566806793213, 1.5538487434387207, 1.5541311502456665, 1.554404377937317, 1.554668664932251, 1.5549246072769165, 1.5551725625991821, 1.5554128885269165, 1.5556459426879883, 1.5558720827102661, 1.556091547012329, 1.5563045740127563, 1.556511640548706, 1.5567127466201782, 1.556908369064331, 1.5570985078811646, 1.557283639907837, 1.5574637651443481, 1.557639241218567, 1.5578100681304932, 1.557976484298706, 1.5581387281417847, 1.5582969188690186, 1.5584512948989868, 1.5586018562316895, 1.558748722076416, 1.5588921308517456, 1.5590322017669678, 1.5591689348220825, 1.559302568435669, 1.5594332218170166, 1.5595608949661255, 1.5596857070922852, 1.5598077774047852, 1.559927225112915, 1.5600440502166748, 1.560158371925354, 1.5602704286575317, 1.560379981994629, 1.5604873895645142, 1.5605926513671875, 1.5606956481933594, 1.5607966184616089, 1.5608956813812256, 1.56099271774292, 1.5610878467559814, 1.5611811876296997, 1.5612728595733643, 1.561362624168396, 1.5614508390426636, 1.5615373849868774, 1.5616222620010376, 1.5617057085037231, 1.5617876052856445, 1.5618679523468018, 1.561946988105774, 1.5620245933532715, 1.562100887298584, 1.5621758699417114, 1.5622495412826538, 1.5623219013214111, 1.5623931884765625, 1.5624631643295288, 1.5625320672988892, 1.562599778175354, 1.562666416168213, 1.5627319812774658, 1.5627964735031128, 1.5628600120544434, 1.562922477722168, -1.5629839897155762, -1.562922477722168, -1.5628600120544434, -1.5627964735031128, -1.5627319812774658, -1.562666416168213, -1.562599778175354, -1.5625320672988892, -1.5624631643295288, -1.5623931884765625, -1.5623219013214111, -1.5622495412826538, -1.5621758699417114, -1.562100887298584, -1.5620245933532715, -1.561946988105774, -1.5618679523468018, -1.5617876052856445, -1.5617057085037231, -1.5616222620010376, -1.5615373849868774, -1.5614508390426636, -1.561362624168396, -1.5612728595733643, -1.5611811876296997, -1.5610878467559814, -1.56099271774292, -1.5608956813812256, -1.5607966184616089, -1.5606956481933594, -1.5605926513671875, -1.5604873895645142, -1.560379981994629, -1.5602704286575317, -1.560158371925354, -1.5600440502166748, -1.559927225112915, -1.5598077774047852, -1.5596857070922852, -1.5595608949661255, -1.5594332218170166, -1.559302568435669, -1.5591689348220825, -1.5590322017669678, -1.5588921308517456, -1.558748722076416, -1.5586018562316895, -1.5584512948989868, -1.5582969188690186, -1.5581387281417847, -1.557976484298706, -1.5578100681304932, -1.557639241218567, -1.5574637651443481, -1.557283639907837, -1.5570985078811646, -1.556908369064331, -1.5567127466201782, -1.556511640548706, -1.5563045740127563, -1.556091547012329, -1.5558720827102661, -1.5556459426879883, -1.5554128885269165, -1.5551725625991821, -1.5549246072769165, -1.554668664932251, -1.554404377937317, -1.5541311502456665, -1.5538487434387207, -1.5535566806793213, -1.553254246711731, -1.552941083908081, -1.5526164770126343, -1.5522799491882324, -1.5519306659698486, -1.5515679121017456, -1.551190972328186, -1.550799012184143, -1.5503909587860107, -1.5499659776687622, -1.5495229959487915, -1.549060583114624, -1.5485777854919434, -1.5480729341506958, -1.5475447177886963, -1.5469913482666016, -1.5464109182357788, -1.5458015203475952, -1.5451608896255493, -1.54448664188385, -1.5437759160995483, -1.5430257320404053, -1.542232632637024, -1.5413930416107178, -1.5405025482177734, -1.5395565032958984, -1.5385494232177734, -1.537475347518921, -1.5363272428512573, -1.5350972414016724, -1.5337761640548706, -1.5323537588119507, -1.5308176279067993, -1.5291537046432495, -1.5273454189300537, -1.525373101234436, -1.523213267326355, -1.5208379030227661, -1.5182132720947266, -1.515297770500183, -1.5120404958724976, -1.5083775520324707, -1.504228115081787, -1.4994888305664062, -1.494024395942688, -1.4876550436019897, -1.4801363945007324, -1.4711276292800903, -1.4601391553878784, -1.4464412927627563, -1.4288992881774902, -1.4056476354599, -1.3734008073806763, -1.3258177042007446, -1.249045729637146, -1.1071487665176392, -0.7853981852531433, 0.0, 0.46364760398864746, 0.7853981852531433, 0.9827937483787537, 1.1071487665176392, 1.1902899742126465, 1.249045729637146, 1.292496681213379, 1.3258177042007446, 1.3521274328231812, 1.3734008073806763, 1.3909428119659424, 1.4056476354599, 1.4181469678878784, 1.4288992881774902, 1.4382448196411133, 1.4464412927627563, 1.4536875486373901, 1.4601391553878784, 1.4659193754196167, 1.4711276292800903, 1.4758446216583252, 1.4801363945007324, 1.4840580224990845, 1.4876550436019897, 1.4909663200378418, 1.494024395942688, 1.4968572854995728, 1.4994888305664062, 1.5019398927688599, 1.504228115081787, 1.5063694715499878, 1.5083775520324707, 1.510264277458191, 1.5120404958724976, 1.5137155055999756, 1.515297770500183, 1.5167948007583618, 1.5182132720947266, 1.5195591449737549, 1.5208379030227661, 1.5220544338226318, 1.523213267326355, 1.5243182182312012, 1.525373101234436, 1.5263811349868774, 1.5273454189300537, 1.528268814086914, 1.5291537046432495, 1.5300025939941406, 1.5308176279067993, 1.5316007137298584, 1.5323537588119507, 1.5330784320831299, 1.5337761640548706, 1.5344487428665161, 1.5350972414016724, 1.5357229709625244, 1.5363272428512573, 1.5369110107421875, 1.537475347518921, 1.538021206855774, 1.5385494232177734, 1.5390609502792358, 1.5395565032958984, 1.5400367975234985, 1.5405025482177734, 1.5409544706344604, 1.5413930416107178, 1.5418189764022827, 1.542232632637024, 1.5426347255706787, 1.5430257320404053, 1.5434058904647827, 1.5437759160995483, 1.5441359281539917, 1.54448664188385, 1.544828176498413, 1.5451608896255493, 1.545485258102417, 1.5458015203475952, 1.5461100339889526, 1.5464109182357788, 1.546704649925232, 1.5469913482666016, 1.5472712516784668, 1.5475447177886963, 1.5478118658065796, 1.5480729341506958, 1.548328161239624, 1.5485777854919434, 1.5488218069076538, 1.549060583114624, 1.5492942333221436, 1.5495229959487915, 1.5497467517852783, 1.5499659776687622, 1.5501806735992432, 1.5503909587860107, 1.550597071647644, 1.550799012184143, 1.5509968996047974, 1.551190972328186, 1.5513813495635986, 1.5515679121017456, 1.5517510175704956, 1.5519306659698486, 1.5521068572998047, 1.5522799491882324, 1.5524497032165527, 1.5526164770126343, 1.552780270576477, 1.552941083908081, 1.5530990362167358, 1.553254246711731, 1.553406834602356, 1.5535566806793213, 1.553704023361206, 1.5538487434387207, 1.5539911985397339, 1.5541311502456665, 1.5542689561843872, 1.554404377937317, 1.5545376539230347, 1.554668664932251, 1.554797649383545, 1.5549246072769165, 1.5550495386123657, -1.5551725625991821, -1.5550495386123657, -1.5549246072769165, -1.554797649383545, -1.554668664932251, -1.5545376539230347, -1.554404377937317, -1.5542689561843872, -1.5541311502456665, -1.5539911985397339, -1.5538487434387207, -1.553704023361206, -1.5535566806793213, -1.553406834602356, -1.553254246711731, -1.5530990362167358, -1.552941083908081, -1.552780270576477, -1.5526164770126343, -1.5524497032165527, -1.5522799491882324, -1.5521068572998047, -1.5519306659698486, -1.5517510175704956, -1.5515679121017456, -1.5513813495635986, -1.551190972328186, -1.5509968996047974, -1.550799012184143, -1.550597071647644, -1.5503909587860107, -1.5501806735992432, -1.5499659776687622, -1.5497467517852783, -1.5495229959487915, -1.5492942333221436, -1.549060583114624, -1.5488218069076538, -1.5485777854919434, -1.548328161239624, -1.5480729341506958, -1.5478118658065796, -1.5475447177886963, -1.5472712516784668, -1.5469913482666016, -1.546704649925232, -1.5464109182357788, -1.5461100339889526, -1.5458015203475952, -1.545485258102417, -1.5451608896255493, -1.544828176498413, -1.54448664188385, -1.5441359281539917, -1.5437759160995483, -1.5434058904647827, -1.5430257320404053, -1.5426347255706787, -1.542232632637024, -1.5418189764022827, -1.5413930416107178, -1.5409544706344604, -1.5405025482177734, -1.5400367975234985, -1.5395565032958984, -1.5390609502792358, -1.5385494232177734, -1.538021206855774, -1.537475347518921, -1.5369110107421875, -1.5363272428512573, -1.5357229709625244, -1.5350972414016724, -1.5344487428665161, -1.5337761640548706, -1.5330784320831299, -1.5323537588119507, -1.5316007137298584, -1.5308176279067993, -1.5300025939941406, -1.5291537046432495, -1.528268814086914, -1.5273454189300537, -1.5263811349868774, -1.525373101234436, -1.5243182182312012, -1.523213267326355, -1.5220544338226318, -1.5208379030227661, -1.5195591449737549, -1.5182132720947266, -1.5167948007583618, -1.515297770500183, -1.5137155055999756, -1.5120404958724976, -1.510264277458191, -1.5083775520324707, -1.5063694715499878, -1.504228115081787, -1.5019398927688599, -1.4994888305664062, -1.4968572854995728, -1.494024395942688, -1.4909663200378418, -1.4876550436019897, -1.4840580224990845, -1.4801363945007324, -1.4758446216583252, -1.4711276292800903, -1.4659193754196167, -1.4601391553878784, -1.4536875486373901, -1.4464412927627563, -1.4382448196411133, -1.4288992881774902, -1.4181469678878784, -1.4056476354599, -1.3909428119659424, -1.3734008073806763, -1.3521274328231812, -1.3258177042007446, -1.292496681213379, -1.249045729637146, -1.1902899742126465, -1.1071487665176392, -0.9827937483787537, -0.7853981852531433, -0.46364760398864746, 0.0, 0.32175055146217346, 0.588002622127533, 0.7853981852531433, 0.9272952079772949, 1.0303767919540405, 1.1071487665176392, 1.1659045219421387, 1.2120256423950195, 1.249045729637146, 1.2793395519256592, 1.3045443296432495, 1.3258177042007446, 1.3439974784851074, 1.3597029447555542, 1.3734008073806763, 1.3854483366012573, 1.3961241245269775, 1.4056476354599, 1.4141944646835327, 1.4219063520431519, 1.4288992881774902, 1.4352686405181885, 1.4410938024520874, 1.4464412927627563, 1.4513673782348633, 1.4559197425842285, 1.4601391553878784, 1.464060664176941, 1.4677146673202515, 1.4711276292800903, 1.4743225574493408, 1.477319598197937, 1.4801363945007324, 1.4827889204025269, 1.4852910041809082, 1.4876550436019897, 1.4898922443389893, 1.49201238155365, 1.494024395942688, 1.4959365129470825, 1.497755765914917, 1.4994888305664062, 1.5011417865753174, 1.5027198791503906, 1.504228115081787, 1.5056711435317993, 1.507053017616272, 1.5083775520324707, 1.5096482038497925, 1.5108681917190552, 1.5120404958724976, 1.5131678581237793, 1.5142529010772705, 1.515297770500183, 1.516304850578308, 1.5172760486602783, 1.5182132720947266, 1.5191181898117065, 1.5199925899505615, 1.5208379030227661, 1.521655559539795, 1.5224469900131226, 1.523213267326355, 1.5239555835723877, 1.5246752500534058, 1.525373101234436, 1.526050090789795, 1.5267072916030884, 1.5273454189300537, 1.5279654264450073, 1.528567910194397, 1.5291537046432495, 1.5297235250473022, 1.530277967453003, 1.5308176279067993, 1.5313431024551392, 1.5318549871444702, 1.5323537588119507, 1.5328398942947388, 1.5333138704299927, 1.5337761640548706, 1.5342272520065308, 1.5346674919128418, 1.5350972414016724, 1.5355168581008911, 1.5359266996383667, 1.5363272428512573, 1.5367186069488525, 1.5371012687683105, 1.537475347518921, 1.5378412008285522, 1.5381991863250732, 1.5385494232177734, 1.5388922691345215, 1.539227843284607, 1.5395565032958984, 1.5398783683776855, 1.5401936769485474, 1.5405025482177734, 1.5408053398132324, 1.5411020517349243, 1.5413930416107178, 1.5416783094406128, 1.541958212852478, 1.542232632637024, 1.5425020456314087, 1.5427663326263428, 1.5430257320404053, 1.5432803630828857, 1.5435303449630737, 1.5437759160995483, 1.54401695728302, 1.544253945350647, 1.54448664188385, 1.5447152853012085, 1.5449399948120117, 1.5451608896255493, 1.5453780889511108, 1.5455915927886963, 1.5458015203475952, 1.5460079908370972, 1.5462111234664917, 1.5464109182357788, 1.546607494354248, 1.546800971031189, 1.5469913482666016, 1.5471786260604858, -1.5473631620407104, -1.5471786260604858, -1.5469913482666016, -1.546800971031189, -1.546607494354248, -1.5464109182357788, -1.5462111234664917, -1.5460079908370972, -1.5458015203475952, -1.5455915927886963, -1.5453780889511108, -1.5451608896255493, -1.5449399948120117, -1.5447152853012085, -1.54448664188385, -1.544253945350647, -1.54401695728302, -1.5437759160995483, -1.5435303449630737, -1.5432803630828857, -1.5430257320404053, -1.5427663326263428, -1.5425020456314087, -1.542232632637024, -1.541958212852478, -1.5416783094406128, -1.5413930416107178, -1.5411020517349243, -1.5408053398132324, -1.5405025482177734, -1.5401936769485474, -1.5398783683776855, -1.5395565032958984, -1.539227843284607, -1.5388922691345215, -1.5385494232177734, -1.5381991863250732, -1.5378412008285522, -1.537475347518921, -1.5371012687683105, -1.5367186069488525, -1.5363272428512573, -1.5359266996383667, -1.5355168581008911, -1.5350972414016724, -1.5346674919128418, -1.5342272520065308, -1.5337761640548706, -1.5333138704299927, -1.5328398942947388, -1.5323537588119507, -1.5318549871444702, -1.5313431024551392, -1.5308176279067993, -1.530277967453003, -1.5297235250473022, -1.5291537046432495, -1.528567910194397, -1.5279654264450073, -1.5273454189300537, -1.5267072916030884, -1.526050090789795, -1.525373101234436, -1.5246752500534058, -1.5239555835723877, -1.523213267326355, -1.5224469900131226, -1.521655559539795, -1.5208379030227661, -1.5199925899505615, -1.5191181898117065, -1.5182132720947266, -1.5172760486602783, -1.516304850578308, -1.515297770500183, -1.5142529010772705, -1.5131678581237793, -1.5120404958724976, -1.5108681917190552, -1.5096482038497925, -1.5083775520324707, -1.507053017616272, -1.5056711435317993, -1.504228115081787, -1.5027198791503906, -1.5011417865753174, -1.4994888305664062, -1.497755765914917, -1.4959365129470825, -1.494024395942688, -1.49201238155365, -1.4898922443389893, -1.4876550436019897, -1.4852910041809082, -1.4827889204025269, -1.4801363945007324, -1.477319598197937, -1.4743225574493408, -1.4711276292800903, -1.4677146673202515, -1.464060664176941, -1.4601391553878784, -1.4559197425842285, -1.4513673782348633, -1.4464412927627563, -1.4410938024520874, -1.4352686405181885, -1.4288992881774902, -1.4219063520431519, -1.4141944646835327, -1.4056476354599, -1.3961241245269775, -1.3854483366012573, -1.3734008073806763, -1.3597029447555542, -1.3439974784851074, -1.3258177042007446, -1.3045443296432495, -1.2793395519256592, -1.249045729637146, -1.2120256423950195, -1.1659045219421387, -1.1071487665176392, -1.0303767919540405, -0.9272952079772949, -0.7853981852531433, -0.588002622127533, -0.32175055146217346, 0.0, 0.244978666305542, 0.46364760398864746, 0.6435011029243469, 0.7853981852531433, 0.8960554003715515, 0.9827937483787537, 1.0516501665115356, 1.1071487665176392, 1.1525720357894897, 1.1902899742126465, 1.2220252752304077, 1.249045729637146, 1.2722973823547363, 1.292496681213379, 1.3101938962936401, 1.3258177042007446, 1.3397057056427002, 1.3521274328231812, 1.363300085067749, 1.3734008073806763, 1.3825747966766357, 1.3909428119659424, 1.398605465888977, 1.4056476354599, 1.4121410846710205, 1.4181469678878784, 1.423717975616455, 1.4288992881774902, 1.433730125427246, 1.4382448196411133, 1.44247305393219, 1.4464412927627563, 1.4501726627349854, 1.4536875486373901, 1.4570043087005615, 1.4601391553878784, 1.4631065130233765, 1.4659193754196167, 1.4685896635055542, 1.4711276292800903, 1.4735431671142578, 1.4758446216583252, 1.4780399799346924, 1.4801363945007324, 1.4821404218673706, 1.4840580224990845, 1.4858945608139038, 1.4876550436019897, 1.4893442392349243, 1.4909663200378418, 1.4925252199172974, 1.494024395942688, 1.4954674243927002, 1.4968572854995728, 1.4981968402862549, 1.4994888305664062, 1.5007357597351074, 1.5019398927688599, 1.503103256225586, 1.504228115081787, 1.5053162574768066, 1.5063694715499878, 1.5073894262313843, 1.5083775520324707, 1.5093353986740112, 1.510264277458191, 1.5111656188964844, 1.5120404958724976, 1.512890100479126, 1.5137155055999756, 1.5145177841186523, 1.515297770500183, 1.5160565376281738, 1.5167948007583618, 1.5175135135650635, 1.5182132720947266, 1.518894910812378, 1.5195591449737549, 1.5202065706253052, 1.5208379030227661, 1.5214537382125854, 1.5220544338226318, 1.5226408243179321, 1.523213267326355, 1.5237722396850586, 1.5243182182312012, 1.524851679801941, 1.525373101234436, 1.5258827209472656, 1.5263811349868774, 1.5268685817718506, 1.5273454189300537, 1.527812123298645, 1.528268814086914, 1.528715968132019, 1.5291537046432495, 1.5295826196670532, 1.5300025939941406, 1.5304142236709595, 1.5308176279067993, 1.5312130451202393, 1.5316007137298584, 1.5319808721542358, 1.5323537588119507, 1.5327194929122925, 1.5330784320831299, 1.533430576324463, 1.5337761640548706, 1.5341155529022217, 1.5344487428665161, 1.5347758531570435, 1.5350972414016724, 1.5354129076004028, 1.5357229709625244, 1.5360277891159058, 1.5363272428512573, 1.5366215705871582, 1.5369110107421875, 1.5371955633163452, 1.537475347518921, 1.537750482559204, 1.538021206855774, 1.5382874011993408, 1.5385494232177734, 1.5388072729110718, 1.5390609502792358, 1.5393106937408447, -1.5395565032958984, -1.5393106937408447, -1.5390609502792358, -1.5388072729110718, -1.5385494232177734, -1.5382874011993408, -1.538021206855774, -1.537750482559204, -1.537475347518921, -1.5371955633163452, -1.5369110107421875, -1.5366215705871582, -1.5363272428512573, -1.5360277891159058, -1.5357229709625244, -1.5354129076004028, -1.5350972414016724, -1.5347758531570435, -1.5344487428665161, -1.5341155529022217, -1.5337761640548706, -1.533430576324463, -1.5330784320831299, -1.5327194929122925, -1.5323537588119507, -1.5319808721542358, -1.5316007137298584, -1.5312130451202393, -1.5308176279067993, -1.5304142236709595, -1.5300025939941406, -1.5295826196670532, -1.5291537046432495, -1.528715968132019, -1.528268814086914, -1.527812123298645, -1.5273454189300537, -1.5268685817718506, -1.5263811349868774, -1.5258827209472656, -1.525373101234436, -1.524851679801941, -1.5243182182312012, -1.5237722396850586, -1.523213267326355, -1.5226408243179321, -1.5220544338226318, -1.5214537382125854, -1.5208379030227661, -1.5202065706253052, -1.5195591449737549, -1.518894910812378, -1.5182132720947266, -1.5175135135650635, -1.5167948007583618, -1.5160565376281738, -1.515297770500183, -1.5145177841186523, -1.5137155055999756, -1.512890100479126, -1.5120404958724976, -1.5111656188964844, -1.510264277458191, -1.5093353986740112, -1.5083775520324707, -1.5073894262313843, -1.5063694715499878, -1.5053162574768066, -1.504228115081787, -1.503103256225586, -1.5019398927688599, -1.5007357597351074, -1.4994888305664062, -1.4981968402862549, -1.4968572854995728, -1.4954674243927002, -1.494024395942688, -1.4925252199172974, -1.4909663200378418, -1.4893442392349243, -1.4876550436019897, -1.4858945608139038, -1.4840580224990845, -1.4821404218673706, -1.4801363945007324, -1.4780399799346924, -1.4758446216583252, -1.4735431671142578, -1.4711276292800903, -1.4685896635055542, -1.4659193754196167, -1.4631065130233765, -1.4601391553878784, -1.4570043087005615, -1.4536875486373901, -1.4501726627349854, -1.4464412927627563, -1.44247305393219, -1.4382448196411133, -1.433730125427246, -1.4288992881774902, -1.423717975616455, -1.4181469678878784, -1.4121410846710205, -1.4056476354599, -1.398605465888977, -1.3909428119659424, -1.3825747966766357, -1.3734008073806763, -1.363300085067749, -1.3521274328231812, -1.3397057056427002, -1.3258177042007446, -1.3101938962936401, -1.292496681213379, -1.2722973823547363, -1.249045729637146, -1.2220252752304077, -1.1902899742126465, -1.1525720357894897, -1.1071487665176392, -1.0516501665115356, -0.9827937483787537, -0.8960554003715515, -0.7853981852531433, -0.6435011029243469, -0.46364760398864746, -0.244978666305542, 0.0, 0.19739556312561035, 0.38050636649131775, 0.5404195189476013, 0.6747409701347351, 0.7853981852531433, 0.876058042049408, 0.9505468606948853, 1.0121970176696777, 1.0636978149414062, 1.1071487665176392, 1.1441688537597656, 1.176005244255066, 1.2036224603652954, 1.2277723550796509, 1.249045729637146, 1.267911434173584, 1.2847448587417603, 1.299849510192871, 1.3134726285934448, 1.3258177042007446, 1.3370531797409058, 1.3473197221755981, 1.3567355871200562, 1.3654009103775024, 1.3734008073806763, 1.3808079957962036, 1.3876855373382568, 1.3940874338150024, 1.4000611305236816, 1.4056476354599, 1.4108831882476807, 1.415799617767334, 1.4204249382019043, 1.4247840642929077, 1.4288992881774902, 1.4327902793884277, 1.4364749193191528, 1.4399689435958862, 1.4432867765426636, 1.4464412927627563, 1.44944429397583, 1.4523063898086548, 1.4550371170043945, 1.457645297050476, 1.4601391553878784, 1.462525725364685, 1.46481192111969, 1.4670039415359497, 1.4691075086593628, 1.4711276292800903, 1.473069429397583, 1.4749372005462646, 1.4767351150512695, 1.4784669876098633, 1.4801363945007324, 1.481746792793274, 1.483301043510437, 1.484802007675171, 1.4862525463104248, 1.4876550436019897, 1.4890120029449463, 1.4903253316879272, 1.491597294807434, 1.49282968044281, 1.494024395942688, 1.4951832294464111, 1.4963074922561646, 1.4973989725112915, 1.498458981513977, 1.4994888305664062, 1.5004898309707642, 1.5014631748199463, 1.5024099349975586, 1.5033313035964966, 1.504228115081787, 1.5051015615463257, 1.5059523582458496, 1.5067813396453857, 1.5075894594192505, 1.5083775520324707, 1.5091462135314941, 1.509896159172058, 1.5106281042099, 1.5113426446914673, 1.5120404958724976, 1.512722134590149, 1.5133881568908691, 1.514039158821106, 1.514675498008728, 1.515297770500183, 1.5159064531326294, 1.5165019035339355, 1.5170845985412598, 1.5176548957824707, 1.5182132720947266, 1.5187599658966064, 1.519295573234558, 1.5198200941085815, 1.5203341245651245, 1.5208379030227661, 1.521331787109375, 1.5218158960342407, 1.5222907066345215, 1.5227563381195068, 1.523213267326355, 1.523661494255066, 1.5241013765335083, 1.5245330333709717, 1.5249569416046143, 1.525373101234436, 1.5257817506790161, 1.5261831283569336, 1.526577353477478, 1.526964783668518, 1.5273454189300537, 1.527719497680664, 1.5280872583389282, 1.5284488201141357, 1.5288041830062866, 1.5291537046432495, 1.529497504234314, 1.5298357009887695, 1.5301682949066162, 1.530495524406433, 1.5308176279067993, 1.5311346054077148, 1.5314465761184692, -1.531753659248352, -1.5314465761184692, -1.5311346054077148, -1.5308176279067993, -1.530495524406433, -1.5301682949066162, -1.5298357009887695, -1.529497504234314, -1.5291537046432495, -1.5288041830062866, -1.5284488201141357, -1.5280872583389282, -1.527719497680664, -1.5273454189300537, -1.526964783668518, -1.526577353477478, -1.5261831283569336, -1.5257817506790161, -1.525373101234436, -1.5249569416046143, -1.5245330333709717, -1.5241013765335083, -1.523661494255066, -1.523213267326355, -1.5227563381195068, -1.5222907066345215, -1.5218158960342407, -1.521331787109375, -1.5208379030227661, -1.5203341245651245, -1.5198200941085815, -1.519295573234558, -1.5187599658966064, -1.5182132720947266, -1.5176548957824707, -1.5170845985412598, -1.5165019035339355, -1.5159064531326294, -1.515297770500183, -1.514675498008728, -1.514039158821106, -1.5133881568908691, -1.512722134590149, -1.5120404958724976, -1.5113426446914673, -1.5106281042099, -1.509896159172058, -1.5091462135314941, -1.5083775520324707, -1.5075894594192505, -1.5067813396453857, -1.5059523582458496, -1.5051015615463257, -1.504228115081787, -1.5033313035964966, -1.5024099349975586, -1.5014631748199463, -1.5004898309707642, -1.4994888305664062, -1.498458981513977, -1.4973989725112915, -1.4963074922561646, -1.4951832294464111, -1.494024395942688, -1.49282968044281, -1.491597294807434, -1.4903253316879272, -1.4890120029449463, -1.4876550436019897, -1.4862525463104248, -1.484802007675171, -1.483301043510437, -1.481746792793274, -1.4801363945007324, -1.4784669876098633, -1.4767351150512695, -1.4749372005462646, -1.473069429397583, -1.4711276292800903, -1.4691075086593628, -1.4670039415359497, -1.46481192111969, -1.462525725364685, -1.4601391553878784, -1.457645297050476, -1.4550371170043945, -1.4523063898086548, -1.44944429397583, -1.4464412927627563, -1.4432867765426636, -1.4399689435958862, -1.4364749193191528, -1.4327902793884277, -1.4288992881774902, -1.4247840642929077, -1.4204249382019043, -1.415799617767334, -1.4108831882476807, -1.4056476354599, -1.4000611305236816, -1.3940874338150024, -1.3876855373382568, -1.3808079957962036, -1.3734008073806763, -1.3654009103775024, -1.3567355871200562, -1.3473197221755981, -1.3370531797409058, -1.3258177042007446, -1.3134726285934448, -1.299849510192871, -1.2847448587417603, -1.267911434173584, -1.249045729637146, -1.2277723550796509, -1.2036224603652954, -1.176005244255066, -1.1441688537597656, -1.1071487665176392, -1.0636978149414062, -1.0121970176696777, -0.9505468606948853, -0.876058042049408, -0.7853981852531433, -0.6747409701347351, -0.5404195189476013, -0.38050636649131775, -0.19739556312561035, 0.0, 0.16514867544174194, 0.32175055146217346, 0.46364760398864746, 0.588002622127533, 0.6947382688522339, 0.7853981852531433, 0.8621700406074524, 0.9272952079772949, 0.9827937483787537, 1.0303767919540405, 1.071449637413025, 1.1071487665176392, 1.1383885145187378, 1.1659045219421387, 1.1902899742126465, 1.2120256423950195, 1.2315037250518799, 1.249045729637146, 1.2649174928665161, 1.2793395519256592, 1.292496681213379, 1.3045443296432495, 1.3156139850616455, 1.3258177042007446, 1.3352513313293457, 1.3439974784851074, 1.3521274328231812, 1.3597029447555542, 1.3667783737182617, 1.3734008073806763, 1.379611849784851, 1.3854483366012573, 1.3909428119659424, 1.3961241245269775, 1.4010180234909058, 1.4056476354599, 1.4100335836410522, 1.4141944646835327, 1.4181469678878784, 1.4219063520431519, 1.4254863262176514, 1.4288992881774902, 1.4321565628051758, 1.4352686405181885, 1.4382448196411133, 1.4410938024520874, 1.4438235759735107, 1.4464412927627563, 1.4489538669586182, 1.4513673782348633, 1.4536875486373901, 1.4559197425842285, 1.4580687284469604, 1.4601391553878784, 1.4621350765228271, 1.464060664176941, 1.4659193754196167, 1.4677146673202515, 1.4694498777389526, 1.4711276292800903, 1.4727510213851929, 1.4743225574493408, 1.4758446216583252, 1.477319598197937, 1.4787495136260986, 1.4801363945007324, 1.4814823865890503, 1.4827889204025269, 1.4840580224990845, 1.4852910041809082, 1.4864896535873413, 1.4876550436019897, 1.4887888431549072, 1.4898922443389893, 1.4909663200378418, 1.49201238155365, 1.49303138256073, 1.494024395942688, 1.4949924945831299, 1.4959365129470825, 1.4968572854995728, 1.497755765914917, 1.4986326694488525, 1.4994888305664062, 1.5003249645233154, 1.5011417865753174, 1.5019398927688599, 1.5027198791503906, 1.503482460975647, 1.504228115081787, 1.5049575567245483, 1.5056711435317993, 1.5063694715499878, 1.507053017616272, 1.50772225856781, 1.5083775520324707, 1.509019374847412, 1.5096482038497925, 1.510264277458191, 1.5108681917190552, 1.5114600658416748, 1.5120404958724976, 1.512609601020813, 1.5131678581237793, 1.5137155055999756, 1.5142529010772705, 1.5147801637649536, 1.515297770500183, 1.515805959701538, 1.516304850578308, 1.5167948007583618, 1.5172760486602783, 1.5177488327026367, 1.5182132720947266, 1.5186697244644165, 1.5191181898117065, 1.5195591449737549, 1.5199925899505615, 1.5204187631607056, 1.5208379030227661, 1.5212501287460327, 1.521655559539795, 1.5220544338226318, 1.5224469900131226, 1.5228331089019775, 1.523213267326355, 1.5235873460769653, -1.5239555835723877, -1.5235873460769653, -1.523213267326355, -1.5228331089019775, -1.5224469900131226, -1.5220544338226318, -1.521655559539795, -1.5212501287460327, -1.5208379030227661, -1.5204187631607056, -1.5199925899505615, -1.5195591449737549, -1.5191181898117065, -1.5186697244644165, -1.5182132720947266, -1.5177488327026367, -1.5172760486602783, -1.5167948007583618, -1.516304850578308, -1.515805959701538, -1.515297770500183, -1.5147801637649536, -1.5142529010772705, -1.5137155055999756, -1.5131678581237793, -1.512609601020813, -1.5120404958724976, -1.5114600658416748, -1.5108681917190552, -1.510264277458191, -1.5096482038497925, -1.509019374847412, -1.5083775520324707, -1.50772225856781, -1.507053017616272, -1.5063694715499878, -1.5056711435317993, -1.5049575567245483, -1.504228115081787, -1.503482460975647, -1.5027198791503906, -1.5019398927688599, -1.5011417865753174, -1.5003249645233154, -1.4994888305664062, -1.4986326694488525, -1.497755765914917, -1.4968572854995728, -1.4959365129470825, -1.4949924945831299, -1.494024395942688, -1.49303138256073, -1.49201238155365, -1.4909663200378418, -1.4898922443389893, -1.4887888431549072, -1.4876550436019897, -1.4864896535873413, -1.4852910041809082, -1.4840580224990845, -1.4827889204025269, -1.4814823865890503, -1.4801363945007324, -1.4787495136260986, -1.477319598197937, -1.4758446216583252, -1.4743225574493408, -1.4727510213851929, -1.4711276292800903, -1.4694498777389526, -1.4677146673202515, -1.4659193754196167, -1.464060664176941, -1.4621350765228271, -1.4601391553878784, -1.4580687284469604, -1.4559197425842285, -1.4536875486373901, -1.4513673782348633, -1.4489538669586182, -1.4464412927627563, -1.4438235759735107, -1.4410938024520874, -1.4382448196411133, -1.4352686405181885, -1.4321565628051758, -1.4288992881774902, -1.4254863262176514, -1.4219063520431519, -1.4181469678878784, -1.4141944646835327, -1.4100335836410522, -1.4056476354599, -1.4010180234909058, -1.3961241245269775, -1.3909428119659424, -1.3854483366012573, -1.379611849784851, -1.3734008073806763, -1.3667783737182617, -1.3597029447555542, -1.3521274328231812, -1.3439974784851074, -1.3352513313293457, -1.3258177042007446, -1.3156139850616455, -1.3045443296432495, -1.292496681213379, -1.2793395519256592, -1.2649174928665161, -1.249045729637146, -1.2315037250518799, -1.2120256423950195, -1.1902899742126465, -1.1659045219421387, -1.1383885145187378, -1.1071487665176392, -1.071449637413025, -1.0303767919540405, -0.9827937483787537, -0.9272952079772949, -0.8621700406074524, -0.7853981852531433, -0.6947382688522339, -0.588002622127533, -0.46364760398864746, -0.32175055146217346, -0.16514867544174194, 0.0, 0.141897052526474, 0.2782996594905853, 0.4048917889595032, 0.5191460847854614, 0.6202495098114014, 0.7086262702941895, 0.7853981852531433, 0.8519663214683533, 0.909753143787384, 0.9600703716278076, 1.004067063331604, 1.0427218675613403, 1.076854944229126, 1.1071487665176392, 1.1341692209243774, 1.1583858728408813, 1.1801892518997192, 1.1999050378799438, 1.2178059816360474, 1.234121561050415, 1.249045729637146, 1.262743592262268, 1.2753554582595825, 1.2870022058486938, 1.2977876663208008, 1.307801604270935, 1.317122220993042, 1.3258177042007446, 1.3339475393295288, 1.341564416885376, 1.3487144708633423, 1.3554385900497437, 1.3617733716964722, 1.367751121520996, 1.3734008073806763, 1.3787482976913452, 1.3838170766830444, 1.3886280059814453, 1.393200159072876, 1.3975507020950317, 1.4016951322555542, 1.4056476354599, 1.4094212055206299, 1.4130276441574097, 1.4164775609970093, 1.419780969619751, 1.4229469299316406, 1.4259837865829468, 1.4288992881774902, 1.431700348854065, 1.4343937635421753, 1.4369853734970093, 1.4394809007644653, 1.4418855905532837, 1.4442042112350464, 1.4464412927627563, 1.4486011266708374, 1.4506876468658447, 1.4527043104171753, 1.4546546936035156, 1.4565420150756836, 1.458369255065918, 1.4601391553878784, 1.461854338645935, 1.463517427444458, 1.4651306867599487, 1.4666963815689087, 1.4682164192199707, 1.4696929454803467, 1.4711276292800903, 1.4725223779678345, 1.4738787412643433, 1.4751981496810913, 1.4764823913574219, 1.477732539176941, 1.4789501428604126, 1.4801363945007324, 1.481292486190796, 1.482419490814209, 1.4835186004638672, 1.484590768814087, 1.4856369495391846, 1.4866580963134766, 1.4876550436019897, 1.4886287450790405, 1.4895800352096558, 1.4905095100402832, 1.4914180040359497, 1.4923062324523926, 1.4931747913360596, 1.494024395942688, 1.4948556423187256, 1.4956691265106201, 1.4964654445648193, 1.4972450733184814, 1.4980084896087646, 1.4987562894821167, 1.4994888305664062, 1.500206708908081, 1.5009102821350098, 1.5016000270843506, 1.5022763013839722, 1.5029394626617432, 1.5035899877548218, 1.504228115081787, 1.5048543214797974, 1.5054688453674316, 1.5060720443725586, 1.5066641569137573, 1.507245659828186, 1.5078166723251343, 1.5083775520324707, 1.5089285373687744, 1.5094698667526245, 1.5100017786026, 1.5105246305465698, 1.5110385417938232, 1.5115437507629395, 1.5120404958724976, 1.5125290155410767, 1.5130095481872559, 1.5134820938110352, 1.5139471292495728, 1.514404535293579, 1.5148547887802124, 1.515297770500183, 1.5157339572906494, -1.5161632299423218, -1.5157339572906494, -1.515297770500183, -1.5148547887802124, -1.514404535293579, -1.5139471292495728, -1.5134820938110352, -1.5130095481872559, -1.5125290155410767, -1.5120404958724976, -1.5115437507629395, -1.5110385417938232, -1.5105246305465698, -1.5100017786026, -1.5094698667526245, -1.5089285373687744, -1.5083775520324707, -1.5078166723251343, -1.507245659828186, -1.5066641569137573, -1.5060720443725586, -1.5054688453674316, -1.5048543214797974, -1.504228115081787, -1.5035899877548218, -1.5029394626617432, -1.5022763013839722, -1.5016000270843506, -1.5009102821350098, -1.500206708908081, -1.4994888305664062, -1.4987562894821167, -1.4980084896087646, -1.4972450733184814, -1.4964654445648193, -1.4956691265106201, -1.4948556423187256, -1.494024395942688, -1.4931747913360596, -1.4923062324523926, -1.4914180040359497, -1.4905095100402832, -1.4895800352096558, -1.4886287450790405, -1.4876550436019897, -1.4866580963134766, -1.4856369495391846, -1.484590768814087, -1.4835186004638672, -1.482419490814209, -1.481292486190796, -1.4801363945007324, -1.4789501428604126, -1.477732539176941, -1.4764823913574219, -1.4751981496810913, -1.4738787412643433, -1.4725223779678345, -1.4711276292800903, -1.4696929454803467, -1.4682164192199707, -1.4666963815689087, -1.4651306867599487, -1.463517427444458, -1.461854338645935, -1.4601391553878784, -1.458369255065918, -1.4565420150756836, -1.4546546936035156, -1.4527043104171753, -1.4506876468658447, -1.4486011266708374, -1.4464412927627563, -1.4442042112350464, -1.4418855905532837, -1.4394809007644653, -1.4369853734970093, -1.4343937635421753, -1.431700348854065, -1.4288992881774902, -1.4259837865829468, -1.4229469299316406, -1.419780969619751, -1.4164775609970093, -1.4130276441574097, -1.4094212055206299, -1.4056476354599, -1.4016951322555542, -1.3975507020950317, -1.393200159072876, -1.3886280059814453, -1.3838170766830444, -1.3787482976913452, -1.3734008073806763, -1.367751121520996, -1.3617733716964722, -1.3554385900497437, -1.3487144708633423, -1.341564416885376, -1.3339475393295288, -1.3258177042007446, -1.317122220993042, -1.307801604270935, -1.2977876663208008, -1.2870022058486938, -1.2753554582595825, -1.262743592262268, -1.249045729637146, -1.234121561050415, -1.2178059816360474, -1.1999050378799438, -1.1801892518997192, -1.1583858728408813, -1.1341692209243774, -1.1071487665176392, -1.076854944229126, -1.0427218675613403, -1.004067063331604, -0.9600703716278076, -0.909753143787384, -0.8519663214683533, -0.7853981852531433, -0.7086262702941895, -0.6202495098114014, -0.5191460847854614, -0.4048917889595032, -0.2782996594905853, -0.141897052526474, 0.0, 0.12435499578714371, 0.244978666305542, 0.3587706685066223, 0.46364760398864746, 0.5585992932319641, 0.6435011029243469, 0.7188299894332886, 0.7853981852531433, 0.8441540002822876, 0.8960554003715515, 0.9420000314712524, 0.9827937483787537, 1.0191413164138794, 1.0516501665115356, 1.0808390378952026, 1.1071487665176392, 1.1309537887573242, 1.1525720357894897, 1.172273874282837, 1.1902899742126465, 1.206817388534546, 1.2220252752304077, 1.236059546470642, 1.249045729637146, 1.2610933780670166, 1.2722973823547363, 1.282740831375122, 1.292496681213379, 1.301628828048706, 1.3101938962936401, 1.318242073059082, 1.3258177042007446, 1.3329603672027588, 1.3397057056427002, 1.3460851907730103, 1.3521274328231812, 1.3578579425811768, 1.363300085067749, 1.3684747219085693, 1.3734008073806763, 1.3780956268310547, 1.3825747966766357, 1.3868528604507446, 1.3909428119659424, 1.3948566913604736, 1.398605465888977, 1.402199387550354, 1.4056476354599, 1.408958911895752, 1.4121410846710205, 1.4152015447616577, 1.4181469678878784, 1.420983910560608, 1.423717975616455, 1.4263547658920288, 1.4288992881774902, 1.4313563108444214, 1.433730125427246, 1.4360250234603882, 1.4382448196411133, 1.4403929710388184, 1.44247305393219, 1.4444881677627563, 1.4464412927627563, 1.4483352899551392, 1.4501726627349854, 1.451956033706665, 1.4536875486373901, 1.4553697109222412, 1.4570043087005615, 1.458593487739563, 1.4601391553878784, 1.461642861366272, 1.4631065130233765, 1.464531421661377, 1.4659193754196167, 1.4672716856002808, 1.4685896635055542, 1.4698745012283325, 1.4711276292800903, 1.4723501205444336, 1.4735431671142578, 1.4747076034545898, 1.4758446216583252, 1.4769550561904907, 1.4780399799346924, 1.479100227355957, 1.4801363945007324, 1.4811495542526245, 1.4821404218673706, 1.483109712600708, 1.4840580224990845, 1.4849860668182373, 1.4858945608139038, 1.4867839813232422, 1.4876550436019897, 1.4885083436965942, 1.4893442392349243, 1.4901634454727173, 1.4909663200378418, 1.4917534589767456, 1.4925252199172974, 1.4932820796966553, 1.494024395942688, 1.4947527647018433, 1.4954674243927002, 1.496168851852417, 1.4968572854995728, 1.4975332021713257, 1.4981968402862549, 1.4988486766815186, 1.4994888305664062, 1.5001177787780762, 1.5007357597351074, 1.501343011856079, 1.5019398927688599, 1.5025265216827393, 1.503103256225586, 1.5036704540252686, 1.504228115081787, 1.5047767162322998, 1.5053162574768066, 1.5058472156524658, 1.5063694715499878, 1.5068835020065308, 1.5073894262313843, 1.507887363433838, -1.5083775520324707, -1.507887363433838, -1.5073894262313843, -1.5068835020065308, -1.5063694715499878, -1.5058472156524658, -1.5053162574768066, -1.5047767162322998, -1.504228115081787, -1.5036704540252686, -1.503103256225586, -1.5025265216827393, -1.5019398927688599, -1.501343011856079, -1.5007357597351074, -1.5001177787780762, -1.4994888305664062, -1.4988486766815186, -1.4981968402862549, -1.4975332021713257, -1.4968572854995728, -1.496168851852417, -1.4954674243927002, -1.4947527647018433, -1.494024395942688, -1.4932820796966553, -1.4925252199172974, -1.4917534589767456, -1.4909663200378418, -1.4901634454727173, -1.4893442392349243, -1.4885083436965942, -1.4876550436019897, -1.4867839813232422, -1.4858945608139038, -1.4849860668182373, -1.4840580224990845, -1.483109712600708, -1.4821404218673706, -1.4811495542526245, -1.4801363945007324, -1.479100227355957, -1.4780399799346924, -1.4769550561904907, -1.4758446216583252, -1.4747076034545898, -1.4735431671142578, -1.4723501205444336, -1.4711276292800903, -1.4698745012283325, -1.4685896635055542, -1.4672716856002808, -1.4659193754196167, -1.464531421661377, -1.4631065130233765, -1.461642861366272, -1.4601391553878784, -1.458593487739563, -1.4570043087005615, -1.4553697109222412, -1.4536875486373901, -1.451956033706665, -1.4501726627349854, -1.4483352899551392, -1.4464412927627563, -1.4444881677627563, -1.44247305393219, -1.4403929710388184, -1.4382448196411133, -1.4360250234603882, -1.433730125427246, -1.4313563108444214, -1.4288992881774902, -1.4263547658920288, -1.423717975616455, -1.420983910560608, -1.4181469678878784, -1.4152015447616577, -1.4121410846710205, -1.408958911895752, -1.4056476354599, -1.402199387550354, -1.398605465888977, -1.3948566913604736, -1.3909428119659424, -1.3868528604507446, -1.3825747966766357, -1.3780956268310547, -1.3734008073806763, -1.3684747219085693, -1.363300085067749, -1.3578579425811768, -1.3521274328231812, -1.3460851907730103, -1.3397057056427002, -1.3329603672027588, -1.3258177042007446, -1.318242073059082, -1.3101938962936401, -1.301628828048706, -1.292496681213379, -1.282740831375122, -1.2722973823547363, -1.2610933780670166, -1.249045729637146, -1.236059546470642, -1.2220252752304077, -1.206817388534546, -1.1902899742126465, -1.172273874282837, -1.1525720357894897, -1.1309537887573242, -1.1071487665176392, -1.0808390378952026, -1.0516501665115356, -1.0191413164138794, -0.9827937483787537, -0.9420000314712524, -0.8960554003715515, -0.8441540002822876, -0.7853981852531433, -0.7188299894332886, -0.6435011029243469, -0.5585992932319641, -0.46364760398864746, -0.3587706685066223, -0.244978666305542, -0.12435499578714371, 0.0, 0.1106572225689888, 0.21866895258426666, 0.32175055146217346, 0.4182243347167969, 0.5070984959602356, 0.588002622127533, 0.6610431671142578, 0.726642370223999, 0.7853981852531433, 0.8379812240600586, 0.88506680727005, 0.9272952079772949, 0.9652516841888428, 0.9994588494300842, 1.0303767919540405, 1.0584068298339844, 1.0838971138000488, 1.1071487665176392, 1.1284221410751343, 1.1479424238204956, 1.1659045219421387, 1.182477593421936, 1.1978086233139038, 1.2120256423950195, 1.225240707397461, 1.2375520467758179, 1.249045729637146, 1.2597980499267578, 1.2698761224746704, 1.2793395519256592, 1.2882413864135742, 1.2966288328170776, 1.3045443296432495, 1.3120254278182983, 1.3191063404083252, 1.3258177042007446, 1.3321870565414429, 1.3382394313812256, 1.3439974784851074, 1.3494819402694702, 1.3547114133834839, 1.3597029447555542, 1.3644723892211914, 1.369033932685852, 1.3734008073806763, 1.3775848150253296, 1.3815972805023193, 1.3854483366012573, 1.3891475200653076, 1.3927034139633179, 1.3961241245269775, 1.3994171619415283, 1.4025895595550537, 1.4056476354599, 1.408597469329834, 1.4114446640014648, 1.4141944646835327, 1.4168516397476196, 1.419420838356018, 1.4219063520431519, 1.4243121147155762, 1.4266419410705566, 1.4288992881774902, 1.4310874938964844, 1.4332095384597778, 1.4352686405181885, 1.4372673034667969, 1.4392081499099731, 1.4410938024520874, 1.4429264068603516, 1.444708228111267, 1.4464412927627563, 1.4481276273727417, 1.449769139289856, 1.4513673782348633, 1.4529242515563965, 1.4544411897659302, 1.4559197425842285, 1.4573613405227661, 1.4587674140930176, 1.4601391553878784, 1.4614777565002441, 1.4627846479415894, 1.464060664176941, 1.4653069972991943, 1.4665247201919556, 1.4677146673202515, 1.468877911567688, 1.470015287399292, 1.4711276292800903, 1.4722157716751099, 1.4732805490493774, 1.4743225574493408, 1.4753426313400269, 1.4763413667678833, 1.477319598197937, 1.4782776832580566, 1.479216456413269, 1.4801363945007324, 1.4810380935668945, 1.4819221496582031, 1.4827889204025269, 1.4836390018463135, 1.4844728708267212, 1.4852910041809082, 1.4860937595367432, 1.4868817329406738, 1.4876550436019897, 1.4884144067764282, 1.4891599416732788, 1.4898922443389893, 1.4906114339828491, 1.4913181066513062, 1.49201238155365, 1.492694616317749, 1.4933652877807617, 1.494024395942688, 1.4946725368499756, 1.495309829711914, 1.4959365129470825, 1.49655282497406, 1.4971592426300049, 1.497755765914917, 1.498342752456665, 1.4989203214645386, 1.4994888305664062, 1.5000485181808472, -1.5005993843078613, -1.5000485181808472, -1.4994888305664062, -1.4989203214645386, -1.498342752456665, -1.497755765914917, -1.4971592426300049, -1.49655282497406, -1.4959365129470825, -1.495309829711914, -1.4946725368499756, -1.494024395942688, -1.4933652877807617, -1.492694616317749, -1.49201238155365, -1.4913181066513062, -1.4906114339828491, -1.4898922443389893, -1.4891599416732788, -1.4884144067764282, -1.4876550436019897, -1.4868817329406738, -1.4860937595367432, -1.4852910041809082, -1.4844728708267212, -1.4836390018463135, -1.4827889204025269, -1.4819221496582031, -1.4810380935668945, -1.4801363945007324, -1.479216456413269, -1.4782776832580566, -1.477319598197937, -1.4763413667678833, -1.4753426313400269, -1.4743225574493408, -1.4732805490493774, -1.4722157716751099, -1.4711276292800903, -1.470015287399292, -1.468877911567688, -1.4677146673202515, -1.4665247201919556, -1.4653069972991943, -1.464060664176941, -1.4627846479415894, -1.4614777565002441, -1.4601391553878784, -1.4587674140930176, -1.4573613405227661, -1.4559197425842285, -1.4544411897659302, -1.4529242515563965, -1.4513673782348633, -1.449769139289856, -1.4481276273727417, -1.4464412927627563, -1.444708228111267, -1.4429264068603516, -1.4410938024520874, -1.4392081499099731, -1.4372673034667969, -1.4352686405181885, -1.4332095384597778, -1.4310874938964844, -1.4288992881774902, -1.4266419410705566, -1.4243121147155762, -1.4219063520431519, -1.419420838356018, -1.4168516397476196, -1.4141944646835327, -1.4114446640014648, -1.408597469329834, -1.4056476354599, -1.4025895595550537, -1.3994171619415283, -1.3961241245269775, -1.3927034139633179, -1.3891475200653076, -1.3854483366012573, -1.3815972805023193, -1.3775848150253296, -1.3734008073806763, -1.369033932685852, -1.3644723892211914, -1.3597029447555542, -1.3547114133834839, -1.3494819402694702, -1.3439974784851074, -1.3382394313812256, -1.3321870565414429, -1.3258177042007446, -1.3191063404083252, -1.3120254278182983, -1.3045443296432495, -1.2966288328170776, -1.2882413864135742, -1.2793395519256592, -1.2698761224746704, -1.2597980499267578, -1.249045729637146, -1.2375520467758179, -1.225240707397461, -1.2120256423950195, -1.1978086233139038, -1.182477593421936, -1.1659045219421387, -1.1479424238204956, -1.1284221410751343, -1.1071487665176392, -1.0838971138000488, -1.0584068298339844, -1.0303767919540405, -0.9994588494300842, -0.9652516841888428, -0.9272952079772949, -0.88506680727005, -0.8379812240600586, -0.7853981852531433, -0.726642370223999, -0.6610431671142578, -0.588002622127533, -0.5070984959602356, -0.4182243347167969, -0.32175055146217346, -0.21866895258426666, -0.1106572225689888, 0.0, 0.09966865181922913, 0.19739556312561035, 0.29145678877830505, 0.38050636649131775, 0.46364760398864746, 0.5404195189476013, 0.6107259392738342, 0.6747409701347351, 0.7328150868415833, 0.7853981852531433, 0.832981288433075, 0.876058042049408, 0.9151006937026978, 0.9505468606948853, 0.9827937483787537, 1.0121970176696777, 1.0390722751617432, 1.0636978149414062, 1.0863183736801147, 1.1071487665176392, 1.1263771057128906, 1.1441688537597656, 1.160668969154358, 1.176005244255066, 1.1902899742126465, 1.2036224603652954, 1.2160906791687012, 1.2277723550796509, 1.238736867904663, 1.249045729637146, 1.2587542533874512, 1.267911434173584, 1.2765617370605469, 1.2847448587417603, 1.292496681213379, 1.299849510192871, 1.3068325519561768, 1.3134726285934448, 1.3197935819625854, 1.3258177042007446, 1.3315647840499878, 1.3370531797409058, 1.3422996997833252, 1.3473197221755981, 1.3521274328231812, 1.3567355871200562, 1.3611564636230469, 1.3654009103775024, 1.3694791793823242, 1.3734008073806763, 1.3771743774414062, 1.3808079957962036, 1.3843094110488892, 1.3876855373382568, 1.3909428119659424, 1.3940874338150024, 1.3971251249313354, 1.4000611305236816, 1.4029004573822021, 1.4056476354599, 1.4083071947097778, 1.4108831882476807, 1.413379430770874, 1.415799617767334, 1.4181469678878784, 1.4204249382019043, 1.4226362705230713, 1.4247840642929077, 1.4268708229064941, 1.4288992881774902, 1.430871605873108, 1.4327902793884277, 1.434657335281372, 1.4364749193191528, 1.4382448196411133, 1.4399689435958862, 1.441649079322815, 1.4432867765426636, 1.4448837041854858, 1.4464412927627563, 1.4479610919952393, 1.44944429397583, 1.4508923292160034, 1.4523063898086548, 1.4536875486373901, 1.4550371170043945, 1.4563560485839844, 1.457645297050476, 1.4589060544967651, 1.4601391553878784, 1.4613454341888428, 1.462525725364685, 1.4636809825897217, 1.46481192111969, 1.4659193754196167, 1.4670039415359497, 1.4680664539337158, 1.4691075086593628, 1.4701277017593384, 1.4711276292800903, 1.4721081256866455, 1.473069429397583, 1.4740122556686401, 1.4749372005462646, 1.4758446216583252, 1.4767351150512695, 1.4776090383529663, 1.4784669876098633, 1.479309320449829, 1.4801363945007324, 1.480948805809021, 1.481746792793274, 1.4825307130813599, 1.483301043510437, 1.4840580224990845, 1.484802007675171, 1.4855334758758545, 1.4862525463104248, 1.48695969581604, 1.4876550436019897, 1.4883390665054321, 1.4890120029449463, 1.4896739721298218, 1.4903253316879272, 1.4909663200378418, 1.491597294807434, 1.492218255996704, -1.49282968044281, -1.492218255996704, -1.491597294807434, -1.4909663200378418, -1.4903253316879272, -1.4896739721298218, -1.4890120029449463, -1.4883390665054321, -1.4876550436019897, -1.48695969581604, -1.4862525463104248, -1.4855334758758545, -1.484802007675171, -1.4840580224990845, -1.483301043510437, -1.4825307130813599, -1.481746792793274, -1.480948805809021, -1.4801363945007324, -1.479309320449829, -1.4784669876098633, -1.4776090383529663, -1.4767351150512695, -1.4758446216583252, -1.4749372005462646, -1.4740122556686401, -1.473069429397583, -1.4721081256866455, -1.4711276292800903, -1.4701277017593384, -1.4691075086593628, -1.4680664539337158, -1.4670039415359497, -1.4659193754196167, -1.46481192111969, -1.4636809825897217, -1.462525725364685, -1.4613454341888428, -1.4601391553878784, -1.4589060544967651, -1.457645297050476, -1.4563560485839844, -1.4550371170043945, -1.4536875486373901, -1.4523063898086548, -1.4508923292160034, -1.44944429397583, -1.4479610919952393, -1.4464412927627563, -1.4448837041854858, -1.4432867765426636, -1.441649079322815, -1.4399689435958862, -1.4382448196411133, -1.4364749193191528, -1.434657335281372, -1.4327902793884277, -1.430871605873108, -1.4288992881774902, -1.4268708229064941, -1.4247840642929077, -1.4226362705230713, -1.4204249382019043, -1.4181469678878784, -1.415799617767334, -1.413379430770874, -1.4108831882476807, -1.4083071947097778, -1.4056476354599, -1.4029004573822021, -1.4000611305236816, -1.3971251249313354, -1.3940874338150024, -1.3909428119659424, -1.3876855373382568, -1.3843094110488892, -1.3808079957962036, -1.3771743774414062, -1.3734008073806763, -1.3694791793823242, -1.3654009103775024, -1.3611564636230469, -1.3567355871200562, -1.3521274328231812, -1.3473197221755981, -1.3422996997833252, -1.3370531797409058, -1.3315647840499878, -1.3258177042007446, -1.3197935819625854, -1.3134726285934448, -1.3068325519561768, -1.299849510192871, -1.292496681213379, -1.2847448587417603, -1.2765617370605469, -1.267911434173584, -1.2587542533874512, -1.249045729637146, -1.238736867904663, -1.2277723550796509, -1.2160906791687012, -1.2036224603652954, -1.1902899742126465, -1.176005244255066, -1.160668969154358, -1.1441688537597656, -1.1263771057128906, -1.1071487665176392, -1.0863183736801147, -1.0636978149414062, -1.0390722751617432, -1.0121970176696777, -0.9827937483787537, -0.9505468606948853, -0.9151006937026978, -0.876058042049408, -0.832981288433075, -0.7853981852531433, -0.7328150868415833, -0.6747409701347351, -0.6107259392738342, -0.5404195189476013, -0.46364760398864746, -0.38050636649131775, -0.29145678877830505, -0.19739556312561035, -0.09966865181922913, 0.0, 0.09065988659858704, 0.17985349893569946, 0.2662520408630371, 0.34877100586891174, 0.4266274869441986, 0.4993467330932617, 0.5667291879653931, 0.6287962794303894, 0.6857295036315918, 0.7378150820732117, 0.7853981852531433, 0.8288490772247314, 0.8685393929481506, 0.9048271179199219, 0.938047468662262, 0.9685089588165283, 0.9964914917945862, 1.0222469568252563, 1.046000599861145, 1.067953109741211, 1.0882830619812012, 1.1071487665176392, 1.1246907711029053, 1.1410340070724487, 1.1562894582748413, 1.1705557107925415, 1.1839206218719482, 1.1964627504348755, 1.2082520723342896, 1.2193515300750732, 1.2298173904418945, 1.239700198173523, 1.249045729637146, 1.2578951120376587, 1.2662854194641113, 1.2742505073547363, 1.2818208932876587, 1.2890244722366333, 1.295886516571045, 1.3024301528930664, 1.3086764812469482, 1.3146449327468872, 1.3203532695770264, 1.3258177042007446, 1.3310532569885254, 1.3360737562179565, 1.34089195728302, 1.3455195426940918, 1.3499675989151, 1.3542460203170776, 1.3583643436431885, 1.3623311519622803, 1.3661545515060425, 1.3698420524597168, 1.3734008073806763, 1.376837134361267, 1.380157470703125, 1.3833671808242798, 1.3864718675613403, 1.3894765377044678, 1.3923858404159546, 1.3952041864395142, 1.3979357481002808, 1.4005844593048096, 1.403153896331787, 1.4056476354599, 1.4080688953399658, 1.4104208946228027, 1.4127063751220703, 1.4149280786514282, 1.4170887470245361, 1.4191908836364746, 1.4212366342544556, 1.4232282638549805, 1.4251679182052612, 1.4270576238632202, 1.4288992881774902, 1.430694580078125, 1.4324454069137573, 1.4341531991958618, 1.4358196258544922, 1.437446117401123, 1.439034104347229, 1.4405848979949951, 1.4420998096466064, 1.443580150604248, 1.4450268745422363, 1.4464412927627563, 1.447824478149414, 1.4491772651672363, 1.4505008459091187, 1.451796054840088, 1.453063726425171, 1.454304814338684, 1.4555201530456543, 1.4567105770111084, 1.4578766822814941, 1.4590193033218384, 1.4601391553878784, 1.461236834526062, 1.4623130559921265, 1.4633684158325195, 1.464403510093689, 1.4654189348220825, 1.4664151668548584, 1.467392921447754, 1.4683524370193481, 1.469294548034668, 1.470219373703003, 1.4711276292800903, 1.4720197916030884, 1.4728959798812866, 1.4737569093704224, 1.4746029376983643, 1.4754343032836914, 1.476251482963562, 1.4770548343658447, 1.4778445959091187, 1.478621244430542, 1.4793851375579834, 1.4801363945007324, 1.4808754920959473, 1.481602668762207, 1.4823182821273804, 1.4830224514007568, 1.483715534210205, 1.4843977689743042, -1.4850693941116333, -1.4843977689743042, -1.483715534210205, -1.4830224514007568, -1.4823182821273804, -1.481602668762207, -1.4808754920959473, -1.4801363945007324, -1.4793851375579834, -1.478621244430542, -1.4778445959091187, -1.4770548343658447, -1.476251482963562, -1.4754343032836914, -1.4746029376983643, -1.4737569093704224, -1.4728959798812866, -1.4720197916030884, -1.4711276292800903, -1.470219373703003, -1.469294548034668, -1.4683524370193481, -1.467392921447754, -1.4664151668548584, -1.4654189348220825, -1.464403510093689, -1.4633684158325195, -1.4623130559921265, -1.461236834526062, -1.4601391553878784, -1.4590193033218384, -1.4578766822814941, -1.4567105770111084, -1.4555201530456543, -1.454304814338684, -1.453063726425171, -1.451796054840088, -1.4505008459091187, -1.4491772651672363, -1.447824478149414, -1.4464412927627563, -1.4450268745422363, -1.443580150604248, -1.4420998096466064, -1.4405848979949951, -1.439034104347229, -1.437446117401123, -1.4358196258544922, -1.4341531991958618, -1.4324454069137573, -1.430694580078125, -1.4288992881774902, -1.4270576238632202, -1.4251679182052612, -1.4232282638549805, -1.4212366342544556, -1.4191908836364746, -1.4170887470245361, -1.4149280786514282, -1.4127063751220703, -1.4104208946228027, -1.4080688953399658, -1.4056476354599, -1.403153896331787, -1.4005844593048096, -1.3979357481002808, -1.3952041864395142, -1.3923858404159546, -1.3894765377044678, -1.3864718675613403, -1.3833671808242798, -1.380157470703125, -1.376837134361267, -1.3734008073806763, -1.3698420524597168, -1.3661545515060425, -1.3623311519622803, -1.3583643436431885, -1.3542460203170776, -1.3499675989151, -1.3455195426940918, -1.34089195728302, -1.3360737562179565, -1.3310532569885254, -1.3258177042007446, -1.3203532695770264, -1.3146449327468872, -1.3086764812469482, -1.3024301528930664, -1.295886516571045, -1.2890244722366333, -1.2818208932876587, -1.2742505073547363, -1.2662854194641113, -1.2578951120376587, -1.249045729637146, -1.239700198173523, -1.2298173904418945, -1.2193515300750732, -1.2082520723342896, -1.1964627504348755, -1.1839206218719482, -1.1705557107925415, -1.1562894582748413, -1.1410340070724487, -1.1246907711029053, -1.1071487665176392, -1.0882830619812012, -1.067953109741211, -1.046000599861145, -1.0222469568252563, -0.9964914917945862, -0.9685089588165283, -0.938047468662262, -0.9048271179199219, -0.8685393929481506, -0.8288490772247314, -0.7853981852531433, -0.7378150820732117, -0.6857295036315918, -0.6287962794303894, -0.5667291879653931, -0.4993467330932617, -0.4266274869441986, -0.34877100586891174, -0.2662520408630371, -0.17985349893569946, -0.09065988659858704, 0.0, 0.08314123004674911, 0.16514867544174194, 0.244978666305542, 0.32175055146217346, 0.3947911262512207, 0.46364760398864746, 0.5280744433403015, 0.588002622127533, 0.6435011029243469, 0.6947382688522339, 0.7419472932815552, 0.7853981852531433, 0.8253768682479858, 0.8621700406074524, 0.8960554003715515, 0.9272952079772949, 0.9561333656311035, 0.9827937483787537, 1.0074800252914429, 1.0303767919540405, 1.0516501665115356, 1.071449637413025, 1.0899090766906738, 1.1071487665176392, 1.1232763528823853, 1.1383885145187378, 1.1525720357894897, 1.1659045219421387, 1.17845618724823, 1.1902899742126465, 1.2014626264572144, 1.2120256423950195, 1.2220252752304077, 1.2315037250518799, 1.2404990196228027, 1.249045729637146, 1.2571756839752197, 1.2649174928665161, 1.2722973823547363, 1.2793395519256592, 1.286065936088562, 1.292496681213379, 1.2986503839492798, 1.3045443296432495, 1.3101938962936401, 1.3156139850616455, 1.3208177089691162, 1.3258177042007446, 1.330625295639038, 1.3352513313293457, 1.3397057056427002, 1.3439974784851074, 1.3481353521347046, 1.3521274328231812, 1.3559808731079102, 1.3597029447555542, 1.363300085067749, 1.3667783737182617, 1.3701434135437012, 1.3734008073806763, 1.376555323600769, 1.379611849784851, 1.3825747966766357, 1.3854483366012573, 1.3882365226745605, 1.3909428119659424, 1.393570899963379, 1.3961241245269775, 1.398605465888977, 1.4010180234909058, 1.4033645391464233, 1.4056476354599, 1.407869815826416, 1.4100335836410522, 1.4121410846710205, 1.4141944646835327, 1.4161957502365112, 1.4181469678878784, 1.4200499057769775, 1.4219063520431519, 1.423717975616455, 1.4254863262176514, 1.4272129535675049, 1.4288992881774902, 1.430546760559082, 1.4321565628051758, 1.433730125427246, 1.4352686405181885, 1.4367731809616089, 1.4382448196411133, 1.4396846294403076, 1.4410938024520874, 1.44247305393219, 1.4438235759735107, 1.4451459646224976, 1.4464412927627563, 1.447710394859314, 1.4489538669586182, 1.4501726627349854, 1.4513673782348633, 1.4525388479232788, 1.4536875486373901, 1.4548143148422241, 1.4559197425842285, 1.4570043087005615, 1.4580687284469604, 1.4591134786605835, 1.4601391553878784, 1.4611461162567139, 1.4621350765228271, 1.4631065130233765, 1.464060664176941, 1.4649981260299683, 1.4659193754196167, 1.4668247699737549, 1.4677146673202515, 1.4685896635055542, 1.4694498777389526, 1.470295786857605, 1.4711276292800903, 1.4719460010528564, 1.4727510213851929, 1.4735431671142578, 1.4743225574493408, 1.4750896692276, 1.4758446216583252, 1.4765878915786743, -1.477319598197937, -1.4765878915786743, -1.4758446216583252, -1.4750896692276, -1.4743225574493408, -1.4735431671142578, -1.4727510213851929, -1.4719460010528564, -1.4711276292800903, -1.470295786857605, -1.4694498777389526, -1.4685896635055542, -1.4677146673202515, -1.4668247699737549, -1.4659193754196167, -1.4649981260299683, -1.464060664176941, -1.4631065130233765, -1.4621350765228271, -1.4611461162567139, -1.4601391553878784, -1.4591134786605835, -1.4580687284469604, -1.4570043087005615, -1.4559197425842285, -1.4548143148422241, -1.4536875486373901, -1.4525388479232788, -1.4513673782348633, -1.4501726627349854, -1.4489538669586182, -1.447710394859314, -1.4464412927627563, -1.4451459646224976, -1.4438235759735107, -1.44247305393219, -1.4410938024520874, -1.4396846294403076, -1.4382448196411133, -1.4367731809616089, -1.4352686405181885, -1.433730125427246, -1.4321565628051758, -1.430546760559082, -1.4288992881774902, -1.4272129535675049, -1.4254863262176514, -1.423717975616455, -1.4219063520431519, -1.4200499057769775, -1.4181469678878784, -1.4161957502365112, -1.4141944646835327, -1.4121410846710205, -1.4100335836410522, -1.407869815826416, -1.4056476354599, -1.4033645391464233, -1.4010180234909058, -1.398605465888977, -1.3961241245269775, -1.393570899963379, -1.3909428119659424, -1.3882365226745605, -1.3854483366012573, -1.3825747966766357, -1.379611849784851, -1.376555323600769, -1.3734008073806763, -1.3701434135437012, -1.3667783737182617, -1.363300085067749, -1.3597029447555542, -1.3559808731079102, -1.3521274328231812, -1.3481353521347046, -1.3439974784851074, -1.3397057056427002, -1.3352513313293457, -1.330625295639038, -1.3258177042007446, -1.3208177089691162, -1.3156139850616455, -1.3101938962936401, -1.3045443296432495, -1.2986503839492798, -1.292496681213379, -1.286065936088562, -1.2793395519256592, -1.2722973823547363, -1.2649174928665161, -1.2571756839752197, -1.249045729637146, -1.2404990196228027, -1.2315037250518799, -1.2220252752304077, -1.2120256423950195, -1.2014626264572144, -1.1902899742126465, -1.17845618724823, -1.1659045219421387, -1.1525720357894897, -1.1383885145187378, -1.1232763528823853, -1.1071487665176392, -1.0899090766906738, -1.071449637413025, -1.0516501665115356, -1.0303767919540405, -1.0074800252914429, -0.9827937483787537, -0.9561333656311035, -0.9272952079772949, -0.8960554003715515, -0.8621700406074524, -0.8253768682479858, -0.7853981852531433, -0.7419472932815552, -0.6947382688522339, -0.6435011029243469, -0.588002622127533, -0.5280744433403015, -0.46364760398864746, -0.3947911262512207, -0.32175055146217346, -0.244978666305542, -0.16514867544174194, -0.08314123004674911, 0.0, 0.07677189260721207, 0.15264932811260223, 0.22679884731769562, 0.2984989285469055, 0.36717382073402405, 0.43240776658058167, 0.49394136667251587, 0.5516549944877625, 0.6055446863174438, 0.6556956171989441, 0.7022569179534912, 0.7454195022583008, 0.7853981852531433, 0.8224182724952698, 0.8567056059837341, 0.8884797692298889, 0.9179496765136719, 0.9453113079071045, 0.9707460999488831, 0.994421124458313, 1.016488790512085, 1.03708815574646, 1.056344985961914, 1.0743736028671265, 1.091277003288269, 1.1071487665176392, 1.1220729351043701, 1.136126160621643, 1.1493771076202393, 1.1618884801864624, 1.1737169027328491, 1.1849136352539062, 1.1955255270004272, 1.2055948972702026, 1.2151604890823364, 1.224257469177246, 1.2329181432724, 1.241171956062317, 1.249045729637146, 1.2565643787384033, 1.2637505531311035, 1.270625114440918, 1.277207374572754, 1.2835148572921753, 1.2895641326904297, 1.2953702211380005, 1.3009471893310547, 1.3063079118728638, 1.311464548110962, 1.316428303718567, 1.32120943069458, 1.3258177042007446, 1.3302620649337769, 1.3345510959625244, 1.338692545890808, 1.3426936864852905, 1.3465615510940552, 1.3503025770187378, 1.353922724723816, 1.357427716255188, 1.3608227968215942, 1.3641130924224854, 1.3673032522201538, 1.3703978061676025, 1.3734008073806763, 1.3763161897659302, 1.3791478872299194, 1.381899118423462, 1.3845734596252441, 1.3871740102767944, 1.389703631401062, 1.3921653032302856, 1.3945616483688354, 1.396895170211792, 1.3991682529449463, 1.4013832807540894, 1.403542399406433, 1.4056476354599, 1.407701015472412, 1.4097044467926025, 1.411659598350525, 1.4135682582855225, 1.415432095527649, 1.417252540588379, 1.4190311431884766, 1.4207693338394165, 1.4224685430526733, 1.424129843711853, 1.4257546663284302, 1.4273440837860107, 1.4288992881774902, 1.4304213523864746, 1.4319113492965698, 1.4333702325820923, 1.4347989559173584, 1.436198353767395, 1.4375696182250977, 1.4389132261276245, 1.4402302503585815, 1.4415212869644165, 1.4427872896194458, 1.4440287351608276, 1.4452465772628784, 1.4464412927627563, 1.4476137161254883, 1.4487642049789429, 1.449893593788147, 1.4510023593902588, 1.4520909786224365, 1.4531601667404175, 1.4542102813720703, 1.4552420377731323, 1.4562556743621826, 1.4572516679763794, 1.45823073387146, 1.4591929912567139, 1.4601391553878784, 1.4610693454742432, 1.4619841575622559, 1.4628838300704956, 1.4637688398361206, 1.4646395444869995, 1.4654961824417114, 1.4663392305374146, 1.4671688079833984, 1.4679855108261108, 1.4687894582748413, -1.469580888748169, -1.4687894582748413, -1.4679855108261108, -1.4671688079833984, -1.4663392305374146, -1.4654961824417114, -1.4646395444869995, -1.4637688398361206, -1.4628838300704956, -1.4619841575622559, -1.4610693454742432, -1.4601391553878784, -1.4591929912567139, -1.45823073387146, -1.4572516679763794, -1.4562556743621826, -1.4552420377731323, -1.4542102813720703, -1.4531601667404175, -1.4520909786224365, -1.4510023593902588, -1.449893593788147, -1.4487642049789429, -1.4476137161254883, -1.4464412927627563, -1.4452465772628784, -1.4440287351608276, -1.4427872896194458, -1.4415212869644165, -1.4402302503585815, -1.4389132261276245, -1.4375696182250977, -1.436198353767395, -1.4347989559173584, -1.4333702325820923, -1.4319113492965698, -1.4304213523864746, -1.4288992881774902, -1.4273440837860107, -1.4257546663284302, -1.424129843711853, -1.4224685430526733, -1.4207693338394165, -1.4190311431884766, -1.417252540588379, -1.415432095527649, -1.4135682582855225, -1.411659598350525, -1.4097044467926025, -1.407701015472412, -1.4056476354599, -1.403542399406433, -1.4013832807540894, -1.3991682529449463, -1.396895170211792, -1.3945616483688354, -1.3921653032302856, -1.389703631401062, -1.3871740102767944, -1.3845734596252441, -1.381899118423462, -1.3791478872299194, -1.3763161897659302, -1.3734008073806763, -1.3703978061676025, -1.3673032522201538, -1.3641130924224854, -1.3608227968215942, -1.357427716255188, -1.353922724723816, -1.3503025770187378, -1.3465615510940552, -1.3426936864852905, -1.338692545890808, -1.3345510959625244, -1.3302620649337769, -1.3258177042007446, -1.32120943069458, -1.316428303718567, -1.311464548110962, -1.3063079118728638, -1.3009471893310547, -1.2953702211380005, -1.2895641326904297, -1.2835148572921753, -1.277207374572754, -1.270625114440918, -1.2637505531311035, -1.2565643787384033, -1.249045729637146, -1.241171956062317, -1.2329181432724, -1.224257469177246, -1.2151604890823364, -1.2055948972702026, -1.1955255270004272, -1.1849136352539062, -1.1737169027328491, -1.1618884801864624, -1.1493771076202393, -1.136126160621643, -1.1220729351043701, -1.1071487665176392, -1.091277003288269, -1.0743736028671265, -1.056344985961914, -1.03708815574646, -1.016488790512085, -0.994421124458313, -0.9707460999488831, -0.9453113079071045, -0.9179496765136719, -0.8884797692298889, -0.8567056059837341, -0.8224182724952698, -0.7853981852531433, -0.7454195022583008, -0.7022569179534912, -0.6556956171989441, -0.6055446863174438, -0.5516549944877625, -0.49394136667251587, -0.43240776658058167, -0.36717382073402405, -0.2984989285469055, -0.22679884731769562, -0.15264932811260223, -0.07677189260721207, 0.0, 0.0713074654340744, 0.141897052526474, 0.21109333634376526, 0.2782996594905853, 0.3430239260196686, 0.4048917889595032, 0.46364760398864746, 0.5191460847854614, 0.5713374614715576, 0.6202495098114014, 0.6659692525863647, 0.7086262702941895, 0.7483780384063721, 0.7853981852531433, 0.8198672533035278, 0.8519663214683533, 0.8818719387054443, 0.909753143787384, 0.9357696175575256, 0.9600703716278076, 0.9827937483787537, 1.004067063331604, 1.0240074396133423, 1.0427218675613403, 1.0603079795837402, 1.076854944229126, 1.0924439430236816, 1.1071487665176392, 1.1210367679595947, 1.1341692209243774, 1.146601915359497, 1.1583858728408813, 1.169567584991455, 1.1801892518997192, 1.1902899742126465, 1.1999050378799438, 1.2090671062469482, 1.2178059816360474, 1.2261489629745483, 1.234121561050415, 1.2417466640472412, 1.249045729637146, 1.2560386657714844, 1.262743592262268, 1.2691773176193237, 1.2753554582595825, 1.2812926769256592, 1.2870022058486938, 1.292496681213379, 1.2977876663208008, 1.302885890007019, 1.307801604270935, 1.3125441074371338, 1.317122220993042, 1.3215441703796387, 1.3258177042007446, 1.3299498558044434, 1.3339475393295288, 1.3378170728683472, 1.341564416885376, 1.3451950550079346, 1.3487144708633423, 1.3521274328231812, 1.3554385900497437, 1.3586525917053223, 1.3617733716964722, 1.364804983139038, 1.367751121520996, 1.3706152439117432, 1.3734008073806763, 1.3761107921600342, 1.3787482976913452, 1.3813161849975586, 1.3838170766830444, 1.3862534761428833, 1.3886280059814453, 1.3909428119659424, 1.393200159072876, 1.3954020738601685, 1.3975507020950317, 1.3996477127075195, 1.4016951322555542, 1.4036945104599, 1.4056476354599, 1.4075560569763184, 1.4094212055206299, 1.4112446308135986, 1.4130276441574097, 1.4147714376449585, 1.4164775609970093, 1.4181469678878784, 1.419780969619751, 1.421380639076233, 1.4229469299316406, 1.4244810342788696, 1.4259837865829468, 1.427456259727478, 1.4288992881774902, 1.4303137063980103, 1.431700348854065, 1.4330601692199707, 1.4343937635421753, 1.435701847076416, 1.4369853734970093, 1.4382448196411133, 1.4394809007644653, 1.4406942129135132, 1.4418855905532837, 1.4430553913116455, 1.4442042112350464, 1.445332646369934, 1.4464412927627563, 1.4475306272506714, 1.4486011266708374, 1.4496532678604126, 1.4506876468658447, 1.4517043828964233, 1.4527043104171753, 1.4536875486373901, 1.4546546936035156, 1.4556061029434204, 1.4565420150756836, 1.4574629068374634, 1.458369255065918, 1.459261178970337, 1.4601391553878784, 1.4610034227371216, -1.461854338645935, -1.4610034227371216, -1.4601391553878784, -1.459261178970337, -1.458369255065918, -1.4574629068374634, -1.4565420150756836, -1.4556061029434204, -1.4546546936035156, -1.4536875486373901, -1.4527043104171753, -1.4517043828964233, -1.4506876468658447, -1.4496532678604126, -1.4486011266708374, -1.4475306272506714, -1.4464412927627563, -1.445332646369934, -1.4442042112350464, -1.4430553913116455, -1.4418855905532837, -1.4406942129135132, -1.4394809007644653, -1.4382448196411133, -1.4369853734970093, -1.435701847076416, -1.4343937635421753, -1.4330601692199707, -1.431700348854065, -1.4303137063980103, -1.4288992881774902, -1.427456259727478, -1.4259837865829468, -1.4244810342788696, -1.4229469299316406, -1.421380639076233, -1.419780969619751, -1.4181469678878784, -1.4164775609970093, -1.4147714376449585, -1.4130276441574097, -1.4112446308135986, -1.4094212055206299, -1.4075560569763184, -1.4056476354599, -1.4036945104599, -1.4016951322555542, -1.3996477127075195, -1.3975507020950317, -1.3954020738601685, -1.393200159072876, -1.3909428119659424, -1.3886280059814453, -1.3862534761428833, -1.3838170766830444, -1.3813161849975586, -1.3787482976913452, -1.3761107921600342, -1.3734008073806763, -1.3706152439117432, -1.367751121520996, -1.364804983139038, -1.3617733716964722, -1.3586525917053223, -1.3554385900497437, -1.3521274328231812, -1.3487144708633423, -1.3451950550079346, -1.341564416885376, -1.3378170728683472, -1.3339475393295288, -1.3299498558044434, -1.3258177042007446, -1.3215441703796387, -1.317122220993042, -1.3125441074371338, -1.307801604270935, -1.302885890007019, -1.2977876663208008, -1.292496681213379, -1.2870022058486938, -1.2812926769256592, -1.2753554582595825, -1.2691773176193237, -1.262743592262268, -1.2560386657714844, -1.249045729637146, -1.2417466640472412, -1.234121561050415, -1.2261489629745483, -1.2178059816360474, -1.2090671062469482, -1.1999050378799438, -1.1902899742126465, -1.1801892518997192, -1.169567584991455, -1.1583858728408813, -1.146601915359497, -1.1341692209243774, -1.1210367679595947, -1.1071487665176392, -1.0924439430236816, -1.076854944229126, -1.0603079795837402, -1.0427218675613403, -1.0240074396133423, -1.004067063331604, -0.9827937483787537, -0.9600703716278076, -0.9357696175575256, -0.909753143787384, -0.8818719387054443, -0.8519663214683533, -0.8198672533035278, -0.7853981852531433, -0.7483780384063721, -0.7086262702941895, -0.6659692525863647, -0.6202495098114014, -0.5713374614715576, -0.5191460847854614, -0.46364760398864746, -0.4048917889595032, -0.3430239260196686, -0.2782996594905853, -0.21109333634376526, -0.141897052526474, -0.0713074654340744, 0.0, 0.06656816601753235, 0.13255153596401215, 0.19739556312561035, 0.2606023848056793, 0.32175055146217346, 0.38050636649131775, 0.4366271495819092, 0.489957332611084, 0.5404195189476013, 0.588002622127533, 0.6327488422393799, 0.6747409701347351, 0.7140907049179077, 0.750929057598114, 0.7853981852531433, 0.8176450729370117, 0.8478169441223145, 0.876058042049408, 0.9025068879127502, 0.9272952079772949, 0.9505468606948853, 0.9723774194717407, 0.9928944110870361, 1.0121970176696777, 1.0303767919540405, 1.047518014907837, 1.0636978149414062, 1.0789871215820312, 1.093450903892517, 1.1071487665176392, 1.120134949684143, 1.1324597597122192, 1.1441688537597656, 1.155304193496704, 1.1659045219421387, 1.176005244255066, 1.1856387853622437, 1.1948354244232178, 1.2036224603652954, 1.2120256423950195, 1.220068335533142, 1.2277723550796509, 1.2351577281951904, 1.2422431707382202, 1.249045729637146, 1.2555816173553467, 1.2618656158447266, 1.267911434173584, 1.27373206615448, 1.2793395519256592, 1.2847448587417603, 1.2899585962295532, 1.2949904203414917, 1.299849510192871, 1.3045443296432495, 1.3090828657150269, 1.3134726285934448, 1.317720651626587, 1.321833610534668, 1.3258177042007446, 1.3296786546707153, 1.333422064781189, 1.3370531797409058, 1.3405767679214478, 1.3439974784851074, 1.3473197221755981, 1.3505475521087646, 1.3536850214004517, 1.3567355871200562, 1.3597029447555542, 1.3625904321670532, 1.3654009103775024, 1.3681377172470093, 1.3708033561706543, 1.3734008073806763, 1.3759324550628662, 1.3784006834030151, 1.3808079957962036, 1.3831565380096436, 1.3854483366012573, 1.3876855373382568, 1.3898698091506958, 1.3920032978057861, 1.3940874338150024, 1.3961241245269775, 1.398114800453186, 1.4000611305236816, 1.4019644260406494, 1.403826117515564, 1.4056476354599, 1.4074301719665527, 1.409174919128418, 1.4108831882476807, 1.4125560522079468, 1.4141944646835327, 1.415799617767334, 1.4173723459243774, 1.4189138412475586, 1.4204249382019043, 1.4219063520431519, 1.4233591556549072, 1.4247840642929077, 1.4261819124221802, 1.427553415298462, 1.4288992881774902, 1.4302202463150024, 1.4315171241760254, 1.4327902793884277, 1.4340406656265259, 1.4352686405181885, 1.4364749193191528, 1.4376599788665771, 1.4388245344161987, 1.4399689435958862, 1.4410938024520874, 1.4421995878219604, 1.4432867765426636, 1.444355845451355, 1.4454071521759033, 1.4464412927627563, 1.4474586248397827, 1.448459506034851, 1.44944429397583, 1.450413465499878, 1.4513673782348633, 1.4523063898086548, 1.4532307386398315, -1.4541409015655518, -1.4532307386398315, -1.4523063898086548, -1.4513673782348633, -1.450413465499878, -1.44944429397583, -1.448459506034851, -1.4474586248397827, -1.4464412927627563, -1.4454071521759033, -1.444355845451355, -1.4432867765426636, -1.4421995878219604, -1.4410938024520874, -1.4399689435958862, -1.4388245344161987, -1.4376599788665771, -1.4364749193191528, -1.4352686405181885, -1.4340406656265259, -1.4327902793884277, -1.4315171241760254, -1.4302202463150024, -1.4288992881774902, -1.427553415298462, -1.4261819124221802, -1.4247840642929077, -1.4233591556549072, -1.4219063520431519, -1.4204249382019043, -1.4189138412475586, -1.4173723459243774, -1.415799617767334, -1.4141944646835327, -1.4125560522079468, -1.4108831882476807, -1.409174919128418, -1.4074301719665527, -1.4056476354599, -1.403826117515564, -1.4019644260406494, -1.4000611305236816, -1.398114800453186, -1.3961241245269775, -1.3940874338150024, -1.3920032978057861, -1.3898698091506958, -1.3876855373382568, -1.3854483366012573, -1.3831565380096436, -1.3808079957962036, -1.3784006834030151, -1.3759324550628662, -1.3734008073806763, -1.3708033561706543, -1.3681377172470093, -1.3654009103775024, -1.3625904321670532, -1.3597029447555542, -1.3567355871200562, -1.3536850214004517, -1.3505475521087646, -1.3473197221755981, -1.3439974784851074, -1.3405767679214478, -1.3370531797409058, -1.333422064781189, -1.3296786546707153, -1.3258177042007446, -1.321833610534668, -1.317720651626587, -1.3134726285934448, -1.3090828657150269, -1.3045443296432495, -1.299849510192871, -1.2949904203414917, -1.2899585962295532, -1.2847448587417603, -1.2793395519256592, -1.27373206615448, -1.267911434173584, -1.2618656158447266, -1.2555816173553467, -1.249045729637146, -1.2422431707382202, -1.2351577281951904, -1.2277723550796509, -1.220068335533142, -1.2120256423950195, -1.2036224603652954, -1.1948354244232178, -1.1856387853622437, -1.176005244255066, -1.1659045219421387, -1.155304193496704, -1.1441688537597656, -1.1324597597122192, -1.120134949684143, -1.1071487665176392, -1.093450903892517, -1.0789871215820312, -1.0636978149414062, -1.047518014907837, -1.0303767919540405, -1.0121970176696777, -0.9928944110870361, -0.9723774194717407, -0.9505468606948853, -0.9272952079772949, -0.9025068879127502, -0.876058042049408, -0.8478169441223145, -0.8176450729370117, -0.7853981852531433, -0.750929057598114, -0.7140907049179077, -0.6747409701347351, -0.6327488422393799, -0.588002622127533, -0.5404195189476013, -0.489957332611084, -0.4366271495819092, -0.38050636649131775, -0.32175055146217346, -0.2606023848056793, -0.19739556312561035, -0.13255153596401215, -0.06656816601753235, 0.0, 0.06241881102323532, 0.12435499578714371, 0.18534794449806213, 0.244978666305542, 0.30288487672805786, 0.3587706685066223, 0.4124104380607605, 0.46364760398864746, 0.5123894810676575, 0.5585992932319641, 0.6022873520851135, 0.6435011029243469, 0.6823165416717529, 0.7188299894332886, 0.7531512975692749, 0.7853981852531433, 0.8156919479370117, 0.8441540002822876, 0.8709034323692322, 0.8960554003715515, 0.9197195768356323, 0.9420000314712524, 0.9629943370819092, 0.9827937483787537, 1.0014830827713013, 1.0191413164138794, 1.0358412265777588, 1.0516501665115356, 1.0666303634643555, 1.0808390378952026, 1.0943288803100586, 1.1071487665176392, 1.1193432807922363, 1.1309537887573242, 1.1420183181762695, 1.1525720357894897, 1.1626472473144531, 1.172273874282837, 1.181479573249817, 1.1902899742126465, 1.1987285614013672, 1.206817388534546, 1.2145767211914062, 1.2220252752304077, 1.2291808128356934, 1.236059546470642, 1.2426763772964478, 1.249045729637146, 1.2551807165145874, 1.2610933780670166, 1.2667953968048096, 1.2722973823547363, 1.2776094675064087, 1.282740831375122, 1.2877005338668823, 1.292496681213379, 1.2971370220184326, 1.301628828048706, 1.3059790134429932, 1.3101938962936401, 1.3142796754837036, 1.318242073059082, 1.3220863342285156, 1.3258177042007446, 1.3294408321380615, 1.3329603672027588, 1.3363806009292603, 1.3397057056427002, 1.3429392576217651, 1.3460851907730103, 1.3491467237472534, 1.3521274328231812, 1.3550301790237427, 1.3578579425811768, 1.3606137037277222, 1.363300085067749, 1.365919589996338, 1.3684747219085693, 1.3709676265716553, 1.3734008073806763, 1.3757760524749756, 1.3780956268310547, 1.3803611993789673, 1.3825747966766357, 1.3847382068634033, 1.3868528604507446, 1.388920545578003, 1.3909428119659424, 1.3929210901260376, 1.3948566913604736, 1.396751046180725, 1.398605465888977, 1.4004212617874146, 1.402199387550354, 1.4039411544799805, 1.4056476354599, 1.4073199033737183, 1.408958911895752, 1.4105656147003174, 1.4121410846710205, 1.4136860370635986, 1.4152015447616577, 1.4166882038116455, 1.4181469678878784, 1.4195786714553833, 1.420983910560608, 1.4223634004592896, 1.423717975616455, 1.4250482320785522, 1.4263547658920288, 1.427638292312622, 1.4288992881774902, 1.4301384687423706, 1.4313563108444214, 1.4325532913208008, 1.433730125427246, 1.434887170791626, 1.4360250234603882, 1.4371440410614014, 1.4382448196411133, 1.439327597618103, 1.4403929710388184, 1.4414414167404175, 1.44247305393219, 1.443488597869873, 1.4444881677627563, 1.4454723596572876, -1.4464412927627563, -1.4454723596572876, -1.4444881677627563, -1.443488597869873, -1.44247305393219, -1.4414414167404175, -1.4403929710388184, -1.439327597618103, -1.4382448196411133, -1.4371440410614014, -1.4360250234603882, -1.434887170791626, -1.433730125427246, -1.4325532913208008, -1.4313563108444214, -1.4301384687423706, -1.4288992881774902, -1.427638292312622, -1.4263547658920288, -1.4250482320785522, -1.423717975616455, -1.4223634004592896, -1.420983910560608, -1.4195786714553833, -1.4181469678878784, -1.4166882038116455, -1.4152015447616577, -1.4136860370635986, -1.4121410846710205, -1.4105656147003174, -1.408958911895752, -1.4073199033737183, -1.4056476354599, -1.4039411544799805, -1.402199387550354, -1.4004212617874146, -1.398605465888977, -1.396751046180725, -1.3948566913604736, -1.3929210901260376, -1.3909428119659424, -1.388920545578003, -1.3868528604507446, -1.3847382068634033, -1.3825747966766357, -1.3803611993789673, -1.3780956268310547, -1.3757760524749756, -1.3734008073806763, -1.3709676265716553, -1.3684747219085693, -1.365919589996338, -1.363300085067749, -1.3606137037277222, -1.3578579425811768, -1.3550301790237427, -1.3521274328231812, -1.3491467237472534, -1.3460851907730103, -1.3429392576217651, -1.3397057056427002, -1.3363806009292603, -1.3329603672027588, -1.3294408321380615, -1.3258177042007446, -1.3220863342285156, -1.318242073059082, -1.3142796754837036, -1.3101938962936401, -1.3059790134429932, -1.301628828048706, -1.2971370220184326, -1.292496681213379, -1.2877005338668823, -1.282740831375122, -1.2776094675064087, -1.2722973823547363, -1.2667953968048096, -1.2610933780670166, -1.2551807165145874, -1.249045729637146, -1.2426763772964478, -1.236059546470642, -1.2291808128356934, -1.2220252752304077, -1.2145767211914062, -1.206817388534546, -1.1987285614013672, -1.1902899742126465, -1.181479573249817, -1.172273874282837, -1.1626472473144531, -1.1525720357894897, -1.1420183181762695, -1.1309537887573242, -1.1193432807922363, -1.1071487665176392, -1.0943288803100586, -1.0808390378952026, -1.0666303634643555, -1.0516501665115356, -1.0358412265777588, -1.0191413164138794, -1.0014830827713013, -0.9827937483787537, -0.9629943370819092, -0.9420000314712524, -0.9197195768356323, -0.8960554003715515, -0.8709034323692322, -0.8441540002822876, -0.8156919479370117, -0.7853981852531433, -0.7531512975692749, -0.7188299894332886, -0.6823165416717529, -0.6435011029243469, -0.6022873520851135, -0.5585992932319641, -0.5123894810676575, -0.46364760398864746, -0.4124104380607605, -0.3587706685066223, -0.30288487672805786, -0.244978666305542, -0.18534794449806213, -0.12435499578714371, -0.06241881102323532, 0.0, 0.058755822479724884, 0.11710874736309052, 0.1746722012758255, 0.23109066486358643, 0.2860514521598816, 0.33929261565208435, 0.3906070291996002, 0.4398425817489624, 0.4868992269039154, 0.5317240953445435, 0.5743048191070557, 0.6146629452705383, 0.65284663438797, 0.6889243721961975, 0.7229793667793274, 0.7551044225692749, 0.7853981852531433, 0.8139618039131165, 0.8408966660499573, 0.8663022518157959, 0.8902751207351685, 0.9129077196121216, 0.9342880845069885, 0.954499363899231, 0.9736196398735046, 0.991722047328949, 1.008874773979187, 1.0251412391662598, 1.0405805110931396, 1.0552473068237305, 1.0691922903060913, 1.0824624300003052, 1.0951011180877686, 1.1071487665176392, 1.1186424493789673, 1.1296168565750122, 1.140103816986084, 1.1501330137252808, 1.1597317457199097, 1.1689256429672241, 1.1777383089065552, 1.1861915588378906, 1.1943060159683228, 1.202100396156311, 1.209592580795288, 1.2167989015579224, 1.223734736442566, 1.2304143905639648, 1.2368512153625488, 1.2430578470230103, 1.249045729637146, 1.2548260688781738, 1.260408878326416, 1.2658039331436157, 1.2710202932357788, 1.2760661840438843, 1.2809498310089111, 1.2856786251068115, 1.2902594804763794, 1.2946993112564087, 1.2990041971206665, 1.3031799793243408, 1.3072324991226196, 1.3111666440963745, 1.3149877786636353, 1.3187003135681152, 1.322308897972107, 1.3258177042007446, 1.3292306661605835, 1.3325515985488892, 1.3357840776443481, 1.338931679725647, 1.341997504234314, 1.3449846506118774, 1.3478960990905762, 1.3507345914840698, 1.353502869606018, 1.3562034368515015, 1.358838677406311, 1.3614109754562378, 1.363922357559204, 1.3663750886917114, 1.3687711954116821, 1.3711124658584595, 1.3734008073806763, 1.3756378889083862, 1.3778254985809326, 1.3799651861190796, 1.3820585012435913, 1.384106993675232, 1.3861119747161865, 1.3880747556686401, 1.3899967670440674, 1.3918792009353638, 1.3937231302261353, 1.3955299854278564, 1.3973006010055542, 1.399036169052124, 1.4007377624511719, 1.4024062156677246, 1.4040424823760986, 1.4056476354599, 1.4072225093841553, 1.408767819404602, 1.410284399986267, 1.4117732048034668, 1.4132347106933594, 1.4146699905395508, 1.4160795211791992, 1.4174638986587524, 1.4188240766525269, 1.4201604127883911, 1.4214736223220825, 1.4227644205093384, 1.4240331649780273, 1.4252804517745972, 1.4265068769454956, 1.4277130365371704, 1.4288992881774902, 1.4300661087036133, 1.4312140941619873, 1.432343602180481, 1.433454990386963, 1.4345489740371704, 1.435625672340393, 1.436685562133789, 1.4377291202545166, -1.4387565851211548, -1.4377291202545166, -1.436685562133789, -1.435625672340393, -1.4345489740371704, -1.433454990386963, -1.432343602180481, -1.4312140941619873, -1.4300661087036133, -1.4288992881774902, -1.4277130365371704, -1.4265068769454956, -1.4252804517745972, -1.4240331649780273, -1.4227644205093384, -1.4214736223220825, -1.4201604127883911, -1.4188240766525269, -1.4174638986587524, -1.4160795211791992, -1.4146699905395508, -1.4132347106933594, -1.4117732048034668, -1.410284399986267, -1.408767819404602, -1.4072225093841553, -1.4056476354599, -1.4040424823760986, -1.4024062156677246, -1.4007377624511719, -1.399036169052124, -1.3973006010055542, -1.3955299854278564, -1.3937231302261353, -1.3918792009353638, -1.3899967670440674, -1.3880747556686401, -1.3861119747161865, -1.384106993675232, -1.3820585012435913, -1.3799651861190796, -1.3778254985809326, -1.3756378889083862, -1.3734008073806763, -1.3711124658584595, -1.3687711954116821, -1.3663750886917114, -1.363922357559204, -1.3614109754562378, -1.358838677406311, -1.3562034368515015, -1.353502869606018, -1.3507345914840698, -1.3478960990905762, -1.3449846506118774, -1.341997504234314, -1.338931679725647, -1.3357840776443481, -1.3325515985488892, -1.3292306661605835, -1.3258177042007446, -1.322308897972107, -1.3187003135681152, -1.3149877786636353, -1.3111666440963745, -1.3072324991226196, -1.3031799793243408, -1.2990041971206665, -1.2946993112564087, -1.2902594804763794, -1.2856786251068115, -1.2809498310089111, -1.2760661840438843, -1.2710202932357788, -1.2658039331436157, -1.260408878326416, -1.2548260688781738, -1.249045729637146, -1.2430578470230103, -1.2368512153625488, -1.2304143905639648, -1.223734736442566, -1.2167989015579224, -1.209592580795288, -1.202100396156311, -1.1943060159683228, -1.1861915588378906, -1.1777383089065552, -1.1689256429672241, -1.1597317457199097, -1.1501330137252808, -1.140103816986084, -1.1296168565750122, -1.1186424493789673, -1.1071487665176392, -1.0951011180877686, -1.0824624300003052, -1.0691922903060913, -1.0552473068237305, -1.0405805110931396, -1.0251412391662598, -1.008874773979187, -0.991722047328949, -0.9736196398735046, -0.954499363899231, -0.9342880845069885, -0.9129077196121216, -0.8902751207351685, -0.8663022518157959, -0.8408966660499573, -0.8139618039131165, -0.7853981852531433, -0.7551044225692749, -0.7229793667793274, -0.6889243721961975, -0.65284663438797, -0.6146629452705383, -0.5743048191070557, -0.5317240953445435, -0.4868992269039154, -0.4398425817489624, -0.3906070291996002, -0.33929261565208435, -0.2860514521598816, -0.23109066486358643, -0.1746722012758255, -0.11710874736309052, -0.058755822479724884, 0.0, 0.055498506873846054, 0.1106572225689888, 0.16514867544174194, 0.21866895258426666, 0.2709468603134155, 0.32175055146217346, 0.3708913028240204, 0.4182243347167969, 0.46364760398864746, 0.5070984959602356, 0.5485494136810303, 0.588002622127533, 0.6254850625991821, 0.6610431671142578, 0.6947382688522339, 0.726642370223999, 0.7568345069885254, 0.7853981852531433, 0.8124186396598816, 0.8379812240600586, 0.8621700406074524, 0.88506680727005, 0.9067501425743103, 0.9272952079772949, 0.9467732906341553, 0.9652516841888428, 0.9827937483787537, 0.9994588494300842, 1.0153025388717651, 1.0303767919540405, 1.0447299480438232, 1.0584068298339844, 1.071449637413025, 1.0838971138000488, 1.0957856178283691, 1.1071487665176392, 1.1180179119110107, 1.1284221410751343, 1.1383885145187378, 1.1479424238204956, 1.1571071147918701, 1.1659045219421387, 1.1743550300598145, 1.182477593421936, 1.1902899742126465, 1.1978086233139038, 1.2050490379333496, 1.2120256423950195, 1.2187520265579224, 1.225240707397461, 1.2315037250518799, 1.2375520467758179, 1.2433961629867554, 1.249045729637146, 1.2545101642608643, 1.2597980499267578, 1.2649174928665161, 1.2698761224746704, 1.2746812105178833, 1.2793395519256592, 1.2838575839996338, 1.2882413864135742, 1.292496681213379, 1.2966288328170776, 1.3006430864334106, 1.3045443296432495, 1.3083369731903076, 1.3120254278182983, 1.3156139850616455, 1.3191063404083252, 1.3225064277648926, 1.3258177042007446, 1.3290435075759888, 1.3321870565414429, 1.3352513313293457, 1.3382394313812256, 1.341153860092163, 1.3439974784851074, 1.3467726707458496, 1.3494819402694702, 1.3521274328231812, 1.3547114133834839, 1.3572359085083008, 1.3597029447555542, 1.3621145486831665, 1.3644723892211914, 1.3667783737182617, 1.369033932685852, 1.3712409734725952, 1.3734008073806763, 1.3755149841308594, 1.3775848150253296, 1.379611849784851, 1.3815972805023193, 1.3835424184799194, 1.3854483366012573, 1.387316346168518, 1.3891475200653076, 1.3909428119659424, 1.3927034139633179, 1.394430160522461, 1.3961241245269775, 1.3977861404418945, 1.3994171619415283, 1.4010180234909058, 1.4025895595550537, 1.4041324853897095, 1.4056476354599, 1.4071357250213623, 1.408597469329834, 1.4100335836410522, 1.4114446640014648, 1.412831425666809, 1.4141944646835327, 1.4155343770980835, 1.4168516397476196, 1.4181469678878784, 1.419420838356018, 1.4206738471984863, 1.4219063520431519, 1.4231189489364624, 1.4243121147155762, 1.4254863262176514, 1.4266419410705566, 1.4277794361114502, 1.4288992881774902, 1.4300018548965454, -1.4310874938964844, -1.4300018548965454, -1.4288992881774902, -1.4277794361114502, -1.4266419410705566, -1.4254863262176514, -1.4243121147155762, -1.4231189489364624, -1.4219063520431519, -1.4206738471984863, -1.419420838356018, -1.4181469678878784, -1.4168516397476196, -1.4155343770980835, -1.4141944646835327, -1.412831425666809, -1.4114446640014648, -1.4100335836410522, -1.408597469329834, -1.4071357250213623, -1.4056476354599, -1.4041324853897095, -1.4025895595550537, -1.4010180234909058, -1.3994171619415283, -1.3977861404418945, -1.3961241245269775, -1.394430160522461, -1.3927034139633179, -1.3909428119659424, -1.3891475200653076, -1.387316346168518, -1.3854483366012573, -1.3835424184799194, -1.3815972805023193, -1.379611849784851, -1.3775848150253296, -1.3755149841308594, -1.3734008073806763, -1.3712409734725952, -1.369033932685852, -1.3667783737182617, -1.3644723892211914, -1.3621145486831665, -1.3597029447555542, -1.3572359085083008, -1.3547114133834839, -1.3521274328231812, -1.3494819402694702, -1.3467726707458496, -1.3439974784851074, -1.341153860092163, -1.3382394313812256, -1.3352513313293457, -1.3321870565414429, -1.3290435075759888, -1.3258177042007446, -1.3225064277648926, -1.3191063404083252, -1.3156139850616455, -1.3120254278182983, -1.3083369731903076, -1.3045443296432495, -1.3006430864334106, -1.2966288328170776, -1.292496681213379, -1.2882413864135742, -1.2838575839996338, -1.2793395519256592, -1.2746812105178833, -1.2698761224746704, -1.2649174928665161, -1.2597980499267578, -1.2545101642608643, -1.249045729637146, -1.2433961629867554, -1.2375520467758179, -1.2315037250518799, -1.225240707397461, -1.2187520265579224, -1.2120256423950195, -1.2050490379333496, -1.1978086233139038, -1.1902899742126465, -1.182477593421936, -1.1743550300598145, -1.1659045219421387, -1.1571071147918701, -1.1479424238204956, -1.1383885145187378, -1.1284221410751343, -1.1180179119110107, -1.1071487665176392, -1.0957856178283691, -1.0838971138000488, -1.071449637413025, -1.0584068298339844, -1.0447299480438232, -1.0303767919540405, -1.0153025388717651, -0.9994588494300842, -0.9827937483787537, -0.9652516841888428, -0.9467732906341553, -0.9272952079772949, -0.9067501425743103, -0.88506680727005, -0.8621700406074524, -0.8379812240600586, -0.8124186396598816, -0.7853981852531433, -0.7568345069885254, -0.726642370223999, -0.6947382688522339, -0.6610431671142578, -0.6254850625991821, -0.588002622127533, -0.5485494136810303, -0.5070984959602356, -0.46364760398864746, -0.4182243347167969, -0.3708913028240204, -0.32175055146217346, -0.2709468603134155, -0.21866895258426666, -0.16514867544174194, -0.1106572225689888, -0.055498506873846054, 0.0, 0.052583061158657074, 0.10487693548202515, 0.15660187602043152, 0.20749622583389282, 0.2573237121105194, 0.3058788776397705, 0.35299038887023926, 0.39852243661880493, 0.44237422943115234, 0.4844779372215271, 0.5247957706451416, 0.563316285610199, 0.6000502109527588, 0.635026752948761, 0.6682894229888916, 0.6998928785324097, 0.7298996448516846, 0.758377730846405, 0.7853981852531433, 0.8110335469245911, 0.8353565335273743, 0.8584387302398682, 0.88034987449646, 0.9011573791503906, 0.9209258556365967, 0.9397169351577759, 0.9575889706611633, 0.974597156047821, 0.9907935261726379, 1.006226897239685, 1.0209431648254395, 1.034985065460205, 1.04839289188385, 1.0612040758132935, 1.073453664779663, 1.0851742029190063, 1.0963964462280273, 1.1071487665176392, 1.117457628250122, 1.1273479461669922, 1.136842966079712, 1.1459641456604004, 1.1547318696975708, 1.1631648540496826, 1.171280860900879, 1.1790963411331177, 1.18662691116333, 1.1938871145248413, 1.200890302658081, 1.2076493501663208, 1.2141761779785156, 1.2204821109771729, 1.226577639579773, 1.2324726581573486, 1.2381765842437744, 1.243698239326477, 1.249045729637146, 1.2542270421981812, 1.2592494487762451, 1.2641199827194214, 1.2688452005386353, 1.2734311819076538, 1.2778838872909546, 1.2822089195251465, 1.2864115238189697, 1.2904967069625854, 1.2944689989089966, 1.2983331680297852, 1.302093267440796, 1.305753469467163, 1.3093174695968628, 1.3127890825271606, 1.316171646118164, 1.3194684982299805, 1.3226828575134277, 1.3258177042007446, 1.3288757801055908, 1.331859827041626, 1.3347727060317993, 1.3376165628433228, 1.3403939008712769, 1.343106985092163, 1.345758080482483, 1.3483490943908691, 1.3508820533752441, 1.3533588647842407, 1.3557814359664917, 1.3581514358520508, 1.3604704141616821, 1.362740159034729, 1.364962100982666, 1.3671377897262573, 1.369268536567688, 1.3713557720184326, 1.3734008073806763, 1.375404715538025, 1.3773690462112427, 1.3792946338653564, 1.3811826705932617, 1.383034348487854, 1.3848506212234497, 1.3866325616836548, 1.3883808851242065, 1.3900967836380005, 1.3917810916900635, 1.3934345245361328, 1.395058035850525, 1.396652340888977, 1.3982183933258057, 1.399756669998169, 1.4012681245803833, 1.4027533531188965, 1.4042129516601562, 1.4056476354599, 1.4070581197738647, 1.408444881439209, 1.4098085165023804, 1.4111496210098267, 1.4124687910079956, 1.4137665033340454, 1.4150433540344238, 1.4162997007369995, 1.4175361394882202, 1.4187530279159546, 1.4199509620666504, 1.4211302995681763, 1.4222913980484009, -1.423434853553772, -1.4222913980484009, -1.4211302995681763, -1.4199509620666504, -1.4187530279159546, -1.4175361394882202, -1.4162997007369995, -1.4150433540344238, -1.4137665033340454, -1.4124687910079956, -1.4111496210098267, -1.4098085165023804, -1.408444881439209, -1.4070581197738647, -1.4056476354599, -1.4042129516601562, -1.4027533531188965, -1.4012681245803833, -1.399756669998169, -1.3982183933258057, -1.396652340888977, -1.395058035850525, -1.3934345245361328, -1.3917810916900635, -1.3900967836380005, -1.3883808851242065, -1.3866325616836548, -1.3848506212234497, -1.383034348487854, -1.3811826705932617, -1.3792946338653564, -1.3773690462112427, -1.375404715538025, -1.3734008073806763, -1.3713557720184326, -1.369268536567688, -1.3671377897262573, -1.364962100982666, -1.362740159034729, -1.3604704141616821, -1.3581514358520508, -1.3557814359664917, -1.3533588647842407, -1.3508820533752441, -1.3483490943908691, -1.345758080482483, -1.343106985092163, -1.3403939008712769, -1.3376165628433228, -1.3347727060317993, -1.331859827041626, -1.3288757801055908, -1.3258177042007446, -1.3226828575134277, -1.3194684982299805, -1.316171646118164, -1.3127890825271606, -1.3093174695968628, -1.305753469467163, -1.302093267440796, -1.2983331680297852, -1.2944689989089966, -1.2904967069625854, -1.2864115238189697, -1.2822089195251465, -1.2778838872909546, -1.2734311819076538, -1.2688452005386353, -1.2641199827194214, -1.2592494487762451, -1.2542270421981812, -1.249045729637146, -1.243698239326477, -1.2381765842437744, -1.2324726581573486, -1.226577639579773, -1.2204821109771729, -1.2141761779785156, -1.2076493501663208, -1.200890302658081, -1.1938871145248413, -1.18662691116333, -1.1790963411331177, -1.171280860900879, -1.1631648540496826, -1.1547318696975708, -1.1459641456604004, -1.136842966079712, -1.1273479461669922, -1.117457628250122, -1.1071487665176392, -1.0963964462280273, -1.0851742029190063, -1.073453664779663, -1.0612040758132935, -1.04839289188385, -1.034985065460205, -1.0209431648254395, -1.006226897239685, -0.9907935261726379, -0.974597156047821, -0.9575889706611633, -0.9397169351577759, -0.9209258556365967, -0.9011573791503906, -0.88034987449646, -0.8584387302398682, -0.8353565335273743, -0.8110335469245911, -0.7853981852531433, -0.758377730846405, -0.7298996448516846, -0.6998928785324097, -0.6682894229888916, -0.635026752948761, -0.6000502109527588, -0.563316285610199, -0.5247957706451416, -0.4844779372215271, -0.44237422943115234, -0.39852243661880493, -0.35299038887023926, -0.3058788776397705, -0.2573237121105194, -0.20749622583389282, -0.15660187602043152, -0.10487693548202515, -0.052583061158657074, 0.0, 0.04995839670300484, 0.09966865181922913, 0.1488899439573288, 0.19739556312561035, 0.244978666305542, 0.29145678877830505, 0.3366748094558716, 0.38050636649131775, 0.42285391688346863, 0.46364760398864746, 0.5028432011604309, 0.5404195189476013, 0.5763752460479736, 0.6107259392738342, 0.6435011029243469, 0.6747409701347351, 0.704494059085846, 0.7328150868415833, 0.7597627639770508, 0.7853981852531433, 0.8097835779190063, 0.832981288433075, 0.8550527095794678, 0.876058042049408, 0.8960554003715515, 0.9151006937026978, 0.9332475066184998, 0.9505468606948853, 0.9670469760894775, 0.9827937483787537, 0.9978302121162415, 1.0121970176696777, 1.0259324312210083, 1.0390722751617432, 1.0516501665115356, 1.0636978149414062, 1.075244665145874, 1.0863183736801147, 1.09694504737854, 1.1071487665176392, 1.1169523000717163, 1.1263771057128906, 1.135443091392517, 1.1441688537597656, 1.1525720357894897, 1.160668969154358, 1.1684752702713013, 1.176005244255066, 1.1832724809646606, 1.1902899742126465, 1.197069525718689, 1.2036224603652954, 1.2099595069885254, 1.2160906791687012, 1.2220252752304077, 1.2277723550796509, 1.2333402633666992, 1.238736867904663, 1.2439696788787842, 1.249045729637146, 1.253971815109253, 1.2587542533874512, 1.2633988857269287, 1.267911434173584, 1.2722973823547363, 1.2765617370605469, 1.2807093858718872, 1.2847448587417603, 1.2886725664138794, 1.292496681213379, 1.2962210178375244, 1.299849510192871, 1.3033854961395264, 1.3068325519561768, 1.3101938962936401, 1.3134726285934448, 1.31667160987854, 1.3197935819625854, 1.3228415250778198, 1.3258177042007446, 1.3287246227264404, 1.3315647840499878, 1.334340214729309, 1.3370531797409058, 1.3397057056427002, 1.3422996997833252, 1.3448370695114136, 1.3473197221755981, 1.349749207496643, 1.3521274328231812, 1.3544557094573975, 1.3567355871200562, 1.358968734741211, 1.3611564636230469, 1.363300085067749, 1.3654009103775024, 1.3674602508544922, 1.3694791793823242, 1.3714590072631836, 1.3734008073806763, 1.3753055334091187, 1.3771743774414062, 1.379008173942566, 1.3808079957962036, 1.3825747966766357, 1.3843094110488892, 1.3860126733779907, 1.3876855373382568, 1.3893285989761353, 1.3909428119659424, 1.3925288915634155, 1.3940874338150024, 1.39561927318573, 1.3971251249313354, 1.398605465888977, 1.4000611305236816, 1.4014925956726074, 1.4029004573822021, 1.4042853116989136, 1.4056476354599, 1.4069881439208984, 1.4083071947097778, 1.4096053838729858, 1.4108831882476807, 1.4121410846710205, 1.413379430770874, 1.414598822593689, -1.415799617767334, -1.414598822593689, -1.413379430770874, -1.4121410846710205, -1.4108831882476807, -1.4096053838729858, -1.4083071947097778, -1.4069881439208984, -1.4056476354599, -1.4042853116989136, -1.4029004573822021, -1.4014925956726074, -1.4000611305236816, -1.398605465888977, -1.3971251249313354, -1.39561927318573, -1.3940874338150024, -1.3925288915634155, -1.3909428119659424, -1.3893285989761353, -1.3876855373382568, -1.3860126733779907, -1.3843094110488892, -1.3825747966766357, -1.3808079957962036, -1.379008173942566, -1.3771743774414062, -1.3753055334091187, -1.3734008073806763, -1.3714590072631836, -1.3694791793823242, -1.3674602508544922, -1.3654009103775024, -1.363300085067749, -1.3611564636230469, -1.358968734741211, -1.3567355871200562, -1.3544557094573975, -1.3521274328231812, -1.349749207496643, -1.3473197221755981, -1.3448370695114136, -1.3422996997833252, -1.3397057056427002, -1.3370531797409058, -1.334340214729309, -1.3315647840499878, -1.3287246227264404, -1.3258177042007446, -1.3228415250778198, -1.3197935819625854, -1.31667160987854, -1.3134726285934448, -1.3101938962936401, -1.3068325519561768, -1.3033854961395264, -1.299849510192871, -1.2962210178375244, -1.292496681213379, -1.2886725664138794, -1.2847448587417603, -1.2807093858718872, -1.2765617370605469, -1.2722973823547363, -1.267911434173584, -1.2633988857269287, -1.2587542533874512, -1.253971815109253, -1.249045729637146, -1.2439696788787842, -1.238736867904663, -1.2333402633666992, -1.2277723550796509, -1.2220252752304077, -1.2160906791687012, -1.2099595069885254, -1.2036224603652954, -1.197069525718689, -1.1902899742126465, -1.1832724809646606, -1.176005244255066, -1.1684752702713013, -1.160668969154358, -1.1525720357894897, -1.1441688537597656, -1.135443091392517, -1.1263771057128906, -1.1169523000717163, -1.1071487665176392, -1.09694504737854, -1.0863183736801147, -1.075244665145874, -1.0636978149414062, -1.0516501665115356, -1.0390722751617432, -1.0259324312210083, -1.0121970176696777, -0.9978302121162415, -0.9827937483787537, -0.9670469760894775, -0.9505468606948853, -0.9332475066184998, -0.9151006937026978, -0.8960554003715515, -0.876058042049408, -0.8550527095794678, -0.832981288433075, -0.8097835779190063, -0.7853981852531433, -0.7597627639770508, -0.7328150868415833, -0.704494059085846, -0.6747409701347351, -0.6435011029243469, -0.6107259392738342, -0.5763752460479736, -0.5404195189476013, -0.5028432011604309, -0.46364760398864746, -0.42285391688346863, -0.38050636649131775, -0.3366748094558716, -0.29145678877830505, -0.244978666305542, -0.19739556312561035, -0.1488899439573288, -0.09966865181922913, -0.04995839670300484, 0.0, 0.04758310317993164, 0.09495170414447784, 0.141897052526474, 0.1882214993238449, 0.23374317586421967, 0.2782996594905853, 0.32175055146217346, 0.36397895216941833, 0.4048917889595032, 0.4444192051887512, 0.48251330852508545, 0.5191460847854614, 0.5543075203895569, 0.588002622127533, 0.6202495098114014, 0.6510767340660095, 0.6805212497711182, 0.7086262702941895, 0.7354397773742676, 0.7610127329826355, 0.7853981852531433, 0.8086497783660889, 0.8308214545249939, 0.8519663214683533, 0.8721364736557007, 0.8913825154304504, 0.909753143787384, 0.9272952079772949, 0.9440534114837646, 0.9600703716278076, 0.9753864407539368, 0.9900399446487427, 1.004067063331604, 1.017501950263977, 1.0303767919540405, 1.0427218675613403, 1.054565668106079, 1.0659348964691162, 1.076854944229126, 1.08734929561615, 1.097440242767334, 1.1071487665176392, 1.1164942979812622, 1.1254953145980835, 1.1341692209243774, 1.142532229423523, 1.1505995988845825, 1.1583858728408813, 1.1659045219421387, 1.1731683015823364, 1.1801892518997192, 1.1869786977767944, 1.193547248840332, 1.1999050378799438, 1.2060614824295044, 1.2120256423950195, 1.2178059816360474, 1.2234103679656982, 1.228846549987793, 1.234121561050415, 1.2392421960830688, 1.2442148923873901, 1.249045729637146, 1.2537405490875244, 1.2583047151565552, 1.262743592262268, 1.2670618295669556, 1.2712643146514893, 1.2753554582595825, 1.2793395519256592, 1.2832205295562744, 1.2870022058486938, 1.290688395500183, 1.2942824363708496, 1.2977876663208008, 1.3012073040008545, 1.3045443296432495, 1.307801604270935, 1.3109819889068604, 1.314087986946106, 1.317122220993042, 1.3200870752334595, 1.3229848146438599, 1.3258177042007446, 1.3285877704620361, 1.3312970399856567, 1.3339475393295288, 1.3365410566329956, 1.33907949924469, 1.341564416885376, 1.3439974784851074, 1.346380352973938, 1.3487144708633423, 1.351001262664795, 1.3532421588897705, 1.3554385900497437, 1.3575917482376099, 1.3597029447555542, 1.3617733716964722, 1.3638041019439697, 1.3657963275909424, 1.367751121520996, 1.3696694374084473, 1.3715523481369019, 1.3734008073806763, 1.3752156496047974, 1.3769978284835815, 1.3787482976913452, 1.3804677724838257, 1.3821570873260498, 1.3838170766830444, 1.3854483366012573, 1.3870518207550049, 1.3886280059814453, 1.3901777267456055, 1.391701579093933, 1.393200159072876, 1.3946741819381714, 1.3961241245269775, 1.3975507020950317, 1.3989542722702026, 1.400335669517517, 1.4016951322555542, 1.4030332565307617, 1.4043506383895874, 1.4056476354599, 1.406924843788147, -1.4081825017929077, -1.406924843788147, -1.4056476354599, -1.4043506383895874, -1.4030332565307617, -1.4016951322555542, -1.400335669517517, -1.3989542722702026, -1.3975507020950317, -1.3961241245269775, -1.3946741819381714, -1.393200159072876, -1.391701579093933, -1.3901777267456055, -1.3886280059814453, -1.3870518207550049, -1.3854483366012573, -1.3838170766830444, -1.3821570873260498, -1.3804677724838257, -1.3787482976913452, -1.3769978284835815, -1.3752156496047974, -1.3734008073806763, -1.3715523481369019, -1.3696694374084473, -1.367751121520996, -1.3657963275909424, -1.3638041019439697, -1.3617733716964722, -1.3597029447555542, -1.3575917482376099, -1.3554385900497437, -1.3532421588897705, -1.351001262664795, -1.3487144708633423, -1.346380352973938, -1.3439974784851074, -1.341564416885376, -1.33907949924469, -1.3365410566329956, -1.3339475393295288, -1.3312970399856567, -1.3285877704620361, -1.3258177042007446, -1.3229848146438599, -1.3200870752334595, -1.317122220993042, -1.314087986946106, -1.3109819889068604, -1.307801604270935, -1.3045443296432495, -1.3012073040008545, -1.2977876663208008, -1.2942824363708496, -1.290688395500183, -1.2870022058486938, -1.2832205295562744, -1.2793395519256592, -1.2753554582595825, -1.2712643146514893, -1.2670618295669556, -1.262743592262268, -1.2583047151565552, -1.2537405490875244, -1.249045729637146, -1.2442148923873901, -1.2392421960830688, -1.234121561050415, -1.228846549987793, -1.2234103679656982, -1.2178059816360474, -1.2120256423950195, -1.2060614824295044, -1.1999050378799438, -1.193547248840332, -1.1869786977767944, -1.1801892518997192, -1.1731683015823364, -1.1659045219421387, -1.1583858728408813, -1.1505995988845825, -1.142532229423523, -1.1341692209243774, -1.1254953145980835, -1.1164942979812622, -1.1071487665176392, -1.097440242767334, -1.08734929561615, -1.076854944229126, -1.0659348964691162, -1.054565668106079, -1.0427218675613403, -1.0303767919540405, -1.017501950263977, -1.004067063331604, -0.9900399446487427, -0.9753864407539368, -0.9600703716278076, -0.9440534114837646, -0.9272952079772949, -0.909753143787384, -0.8913825154304504, -0.8721364736557007, -0.8519663214683533, -0.8308214545249939, -0.8086497783660889, -0.7853981852531433, -0.7610127329826355, -0.7354397773742676, -0.7086262702941895, -0.6805212497711182, -0.6510767340660095, -0.6202495098114014, -0.588002622127533, -0.5543075203895569, -0.5191460847854614, -0.48251330852508545, -0.4444192051887512, -0.4048917889595032, -0.36397895216941833, -0.32175055146217346, -0.2782996594905853, -0.23374317586421967, -0.1882214993238449, -0.141897052526474, -0.09495170414447784, -0.04758310317993164, 0.0, 0.04542328044772148, 0.09065988659858704, 0.13552771508693695, 0.17985349893569946, 0.2234766036272049, 0.2662520408630371, 0.30805277824401855, 0.34877100586891174, 0.3883187174797058, 0.4266274869441986, 0.46364760398864746, 0.4993467330932617, 0.5337082147598267, 0.5667291879653931, 0.5984188914299011, 0.6287962794303894, 0.6578885912895203, 0.6857295036315918, 0.7123575806617737, 0.7378150820732117, 0.762146532535553, 0.7853981852531433, 0.8076167106628418, 0.8288490772247314, 0.8491414785385132, 0.8685393929481506, 0.8870869874954224, 0.9048271179199219, 0.9218007922172546, 0.938047468662262, 0.9536049365997314, 0.9685089588165283, 0.9827937483787537, 0.9964914917945862, 1.00963294506073, 1.0222469568252563, 1.0343608856201172, 1.046000599861145, 1.0571902990341187, 1.067953109741211, 1.0783106088638306, 1.0882830619812012, 1.09788978099823, 1.1071487665176392, 1.1160770654678345, 1.1246907711029053, 1.1330050230026245, 1.1410340070724487, 1.1487913131713867, 1.1562894582748413, 1.1635404825210571, 1.1705557107925415, 1.177345633506775, 1.1839206218719482, 1.1902899742126465, 1.1964627504348755, 1.2024474143981934, 1.2082520723342896, 1.2138843536376953, 1.2193515300750732, 1.2246603965759277, 1.2298173904418945, 1.2348287105560303, 1.239700198173523, 1.2444374561309814, 1.249045729637146, 1.2535300254821777, 1.2578951120376587, 1.2621455192565918, 1.2662854194641113, 1.2703191041946411, 1.2742505073547363, 1.2780832052230835, 1.2818208932876587, 1.2854669094085693, 1.2890244722366333, 1.292496681213379, 1.295886516571045, 1.299196720123291, 1.3024301528930664, 1.305589199066162, 1.3086764812469482, 1.3116942644119263, 1.3146449327468872, 1.3175305128097534, 1.3203532695770264, 1.3231149911880493, 1.3258177042007446, 1.3284631967544556, 1.3310532569885254, 1.3335895538330078, 1.3360737562179565, 1.3385072946548462, 1.34089195728302, 1.343228816986084, 1.3455195426940918, 1.347765326499939, 1.3499675989151, 1.3521274328231812, 1.3542460203170776, 1.3563246726989746, 1.3583643436431885, 1.3603661060333252, 1.3623311519622803, 1.364260196685791, 1.3661545515060425, 1.3680148124694824, 1.3698420524597168, 1.3716371059417725, 1.3734008073806763, 1.3751338720321655, 1.376837134361267, 1.3785114288330078, 1.380157470703125, 1.3817757368087769, 1.3833671808242798, 1.3849323987960815, 1.3864718675613403, 1.387986421585083, 1.3894765377044678, 1.3909428119659424, 1.3923858404159546, 1.3938060998916626, 1.3952041864395142, 1.3965805768966675, 1.3979357481002808, 1.3992701768875122, -1.4005844593048096, -1.3992701768875122, -1.3979357481002808, -1.3965805768966675, -1.3952041864395142, -1.3938060998916626, -1.3923858404159546, -1.3909428119659424, -1.3894765377044678, -1.387986421585083, -1.3864718675613403, -1.3849323987960815, -1.3833671808242798, -1.3817757368087769, -1.380157470703125, -1.3785114288330078, -1.376837134361267, -1.3751338720321655, -1.3734008073806763, -1.3716371059417725, -1.3698420524597168, -1.3680148124694824, -1.3661545515060425, -1.364260196685791, -1.3623311519622803, -1.3603661060333252, -1.3583643436431885, -1.3563246726989746, -1.3542460203170776, -1.3521274328231812, -1.3499675989151, -1.347765326499939, -1.3455195426940918, -1.343228816986084, -1.34089195728302, -1.3385072946548462, -1.3360737562179565, -1.3335895538330078, -1.3310532569885254, -1.3284631967544556, -1.3258177042007446, -1.3231149911880493, -1.3203532695770264, -1.3175305128097534, -1.3146449327468872, -1.3116942644119263, -1.3086764812469482, -1.305589199066162, -1.3024301528930664, -1.299196720123291, -1.295886516571045, -1.292496681213379, -1.2890244722366333, -1.2854669094085693, -1.2818208932876587, -1.2780832052230835, -1.2742505073547363, -1.2703191041946411, -1.2662854194641113, -1.2621455192565918, -1.2578951120376587, -1.2535300254821777, -1.249045729637146, -1.2444374561309814, -1.239700198173523, -1.2348287105560303, -1.2298173904418945, -1.2246603965759277, -1.2193515300750732, -1.2138843536376953, -1.2082520723342896, -1.2024474143981934, -1.1964627504348755, -1.1902899742126465, -1.1839206218719482, -1.177345633506775, -1.1705557107925415, -1.1635404825210571, -1.1562894582748413, -1.1487913131713867, -1.1410340070724487, -1.1330050230026245, -1.1246907711029053, -1.1160770654678345, -1.1071487665176392, -1.09788978099823, -1.0882830619812012, -1.0783106088638306, -1.067953109741211, -1.0571902990341187, -1.046000599861145, -1.0343608856201172, -1.0222469568252563, -1.00963294506073, -0.9964914917945862, -0.9827937483787537, -0.9685089588165283, -0.9536049365997314, -0.938047468662262, -0.9218007922172546, -0.9048271179199219, -0.8870869874954224, -0.8685393929481506, -0.8491414785385132, -0.8288490772247314, -0.8076167106628418, -0.7853981852531433, -0.762146532535553, -0.7378150820732117, -0.7123575806617737, -0.6857295036315918, -0.6578885912895203, -0.6287962794303894, -0.5984188914299011, -0.5667291879653931, -0.5337082147598267, -0.4993467330932617, -0.46364760398864746, -0.4266274869441986, -0.3883187174797058, -0.34877100586891174, -0.30805277824401855, -0.2662520408630371, -0.2234766036272049, -0.17985349893569946, -0.13552771508693695, -0.09065988659858704, -0.04542328044772148, 0.0, 0.04345089569687843, 0.08673834055662155, 0.12970253825187683, 0.1721908152103424, 0.2140606790781021, 0.2551823854446411, 0.29544082283973694, 0.33473682403564453, 0.3729877173900604, 0.41012734174728394, 0.4461055397987366, 0.4808872938156128, 0.5144513249397278, 0.5467888116836548, 0.5779019594192505, 0.6078019738197327, 0.6365082263946533, 0.6640461683273315, 0.6904464364051819, 0.7157436013221741, 0.739974856376648, 0.7631796002388, 0.7853981852531433, 0.8066715598106384, 0.8270407319068909, 0.8465463519096375, 0.8652281761169434, 0.8831250667572021, 0.9002747535705566, 0.9167135953903198, 0.9324765205383301, 0.9475969672203064, 0.9621070027351379, 0.9760370850563049, 0.9894161224365234, 1.0022717714309692, 1.0146300792694092, 1.0265158414840698, 1.0379524230957031, 1.0489619970321655, 1.0595656633377075, 1.0697829723358154, 1.0796327590942383, 1.0891326665878296, 1.0982993841171265, 1.1071487665176392, 1.1156954765319824, 1.1239538192749023, 1.131937026977539, 1.1396576166152954, 1.147127389907837, 1.154357671737671, 1.1613590717315674, 1.1681417226791382, 1.1747149229049683, 1.1810877323150635, 1.187268853187561, 1.1932661533355713, 1.199087381362915, 1.2047398090362549, 1.2102303504943848, 1.2155654430389404, 1.220751404762268, 1.2257941961288452, 1.2306991815567017, 1.2354719638824463, 1.2401174306869507, 1.2446404695510864, 1.249045729637146, 1.2533376216888428, 1.2575201988220215, 1.2615973949432373, 1.2655731439590454, 1.2694511413574219, 1.2732346057891846, 1.2769269943237305, 1.280531406402588, 1.2840509414672852, 1.287488341331482, 1.2908464670181274, 1.2941279411315918, 1.2973353862762451, 1.3004709482192993, 1.3035372495651245, 1.306536316871643, 1.309470295906067, 1.312341332435608, 1.3151514530181885, 1.3179022073745728, 1.3205957412719727, 1.323233723640442, 1.3258177042007446, 1.3283493518829346, 1.3308300971984863, 1.3332617282867432, 1.335645318031311, 1.3379825353622437, 1.340274453163147, 1.3425225019454956, 1.3447279930114746, 1.3468918800354004, 1.3490153551101685, 1.3510996103286743, 1.353145718574524, 1.3551546335220337, 1.35712730884552, 1.3590648174285889, 1.360967993736267, 1.362837791442871, 1.3646749258041382, 1.3664804697036743, 1.3682550191879272, 1.3699994087219238, 1.371714472770691, 1.3734008073806763, 1.3750591278076172, 1.3766902685165405, 1.3782947063446045, 1.3798731565475464, 1.3814263343811035, 1.3829545974731445, 1.3844587802886963, 1.3859392404556274, 1.3873966932296753, 1.388831615447998, 1.390244483947754, 1.391635775566101, -1.3930060863494873, -1.391635775566101, -1.390244483947754, -1.388831615447998, -1.3873966932296753, -1.3859392404556274, -1.3844587802886963, -1.3829545974731445, -1.3814263343811035, -1.3798731565475464, -1.3782947063446045, -1.3766902685165405, -1.3750591278076172, -1.3734008073806763, -1.371714472770691, -1.3699994087219238, -1.3682550191879272, -1.3664804697036743, -1.3646749258041382, -1.362837791442871, -1.360967993736267, -1.3590648174285889, -1.35712730884552, -1.3551546335220337, -1.353145718574524, -1.3510996103286743, -1.3490153551101685, -1.3468918800354004, -1.3447279930114746, -1.3425225019454956, -1.340274453163147, -1.3379825353622437, -1.335645318031311, -1.3332617282867432, -1.3308300971984863, -1.3283493518829346, -1.3258177042007446, -1.323233723640442, -1.3205957412719727, -1.3179022073745728, -1.3151514530181885, -1.312341332435608, -1.309470295906067, -1.306536316871643, -1.3035372495651245, -1.3004709482192993, -1.2973353862762451, -1.2941279411315918, -1.2908464670181274, -1.287488341331482, -1.2840509414672852, -1.280531406402588, -1.2769269943237305, -1.2732346057891846, -1.2694511413574219, -1.2655731439590454, -1.2615973949432373, -1.2575201988220215, -1.2533376216888428, -1.249045729637146, -1.2446404695510864, -1.2401174306869507, -1.2354719638824463, -1.2306991815567017, -1.2257941961288452, -1.220751404762268, -1.2155654430389404, -1.2102303504943848, -1.2047398090362549, -1.199087381362915, -1.1932661533355713, -1.187268853187561, -1.1810877323150635, -1.1747149229049683, -1.1681417226791382, -1.1613590717315674, -1.154357671737671, -1.147127389907837, -1.1396576166152954, -1.131937026977539, -1.1239538192749023, -1.1156954765319824, -1.1071487665176392, -1.0982993841171265, -1.0891326665878296, -1.0796327590942383, -1.0697829723358154, -1.0595656633377075, -1.0489619970321655, -1.0379524230957031, -1.0265158414840698, -1.0146300792694092, -1.0022717714309692, -0.9894161224365234, -0.9760370850563049, -0.9621070027351379, -0.9475969672203064, -0.9324765205383301, -0.9167135953903198, -0.9002747535705566, -0.8831250667572021, -0.8652281761169434, -0.8465463519096375, -0.8270407319068909, -0.8066715598106384, -0.7853981852531433, -0.7631796002388, -0.739974856376648, -0.7157436013221741, -0.6904464364051819, -0.6640461683273315, -0.6365082263946533, -0.6078019738197327, -0.5779019594192505, -0.5467888116836548, -0.5144513249397278, -0.4808872938156128, -0.4461055397987366, -0.41012734174728394, -0.3729877173900604, -0.33473682403564453, -0.29544082283973694, -0.2551823854446411, -0.2140606790781021, -0.1721908152103424, -0.12970253825187683, -0.08673834055662155, -0.04345089569687843, 0.0, 0.041642580181360245, 0.08314123004674911, 0.12435499578714371, 0.16514867544174194, 0.2053953856229782, 0.244978666305542, 0.283794105052948, 0.32175055146217346, 0.3587706685066223, 0.3947911262512207, 0.4297622740268707, 0.46364760398864746, 0.49642276763916016, 0.5280744433403015, 0.5585992932319641, 0.588002622127533, 0.6162969470024109, 0.6435011029243469, 0.6696389317512512, 0.6947382688522339, 0.7188299894332886, 0.7419472932815552, 0.7641247510910034, 0.7853981852531433, 0.8058034777641296, 0.8253768682479858, 0.8441540002822876, 0.8621700406074524, 0.8794593811035156, 0.8960554003715515, 0.9119902849197388, 0.9272952079772949, 0.9420000314712524, 0.9561333656311035, 0.9697225689888, 0.9827937483787537, 0.9953716993331909, 1.0074800252914429, 1.0191413164138794, 1.0303767919540405, 1.04120671749115, 1.0516501665115356, 1.0617254972457886, 1.071449637413025, 1.0808390378952026, 1.0899090766906738, 1.0986742973327637, 1.1071487665176392, 1.1153452396392822, 1.1232763528823853, 1.1309537887573242, 1.1383885145187378, 1.1455912590026855, 1.1525720357894897, 1.1593400239944458, 1.1659045219421387, 1.172273874282837, 1.17845618724823, 1.1844590902328491, 1.1902899742126465, 1.1959556341171265, 1.2014626264572144, 1.206817388534546, 1.2120256423950195, 1.2170932292938232, 1.2220252752304077, 1.2268272638320923, 1.2315037250518799, 1.236059546470642, 1.2404990196228027, 1.2448264360427856, 1.249045729637146, 1.2531609535217285, 1.2571756839752197, 1.2610933780670166, 1.2649174928665161, 1.2686511278152466, 1.2722973823547363, 1.2758592367172241, 1.2793395519256592, 1.282740831375122, 1.286065936088562, 1.289317011833191, 1.292496681213379, 1.295607089996338, 1.2986503839492798, 1.301628828048706, 1.3045443296432495, 1.3073986768722534, 1.3101938962936401, 1.312931776046753, 1.3156139850616455, 1.318242073059082, 1.3208177089691162, 1.3233424425125122, 1.3258177042007446, 1.3282448053359985, 1.330625295639038, 1.3329603672027588, 1.3352513313293457, 1.3374993801116943, 1.3397057056427002, 1.3418713808059692, 1.3439974784851074, 1.3460851907730103, 1.3481353521347046, 1.350149154663086, 1.3521274328231812, 1.354071021080017, 1.3559808731079102, 1.3578579425811768, 1.3597029447555542, 1.3615168333053589, 1.363300085067749, 1.3650537729263306, 1.3667783737182617, 1.3684747219085693, 1.3701434135437012, 1.371785283088684, 1.3734008073806763, 1.3749905824661255, 1.376555323600769, 1.3780956268310547, 1.379611849784851, 1.381104826927185, 1.3825747966766357, 1.3840224742889404, -1.3854483366012573, -1.3840224742889404, -1.3825747966766357, -1.381104826927185, -1.379611849784851, -1.3780956268310547, -1.376555323600769, -1.3749905824661255, -1.3734008073806763, -1.371785283088684, -1.3701434135437012, -1.3684747219085693, -1.3667783737182617, -1.3650537729263306, -1.363300085067749, -1.3615168333053589, -1.3597029447555542, -1.3578579425811768, -1.3559808731079102, -1.354071021080017, -1.3521274328231812, -1.350149154663086, -1.3481353521347046, -1.3460851907730103, -1.3439974784851074, -1.3418713808059692, -1.3397057056427002, -1.3374993801116943, -1.3352513313293457, -1.3329603672027588, -1.330625295639038, -1.3282448053359985, -1.3258177042007446, -1.3233424425125122, -1.3208177089691162, -1.318242073059082, -1.3156139850616455, -1.312931776046753, -1.3101938962936401, -1.3073986768722534, -1.3045443296432495, -1.301628828048706, -1.2986503839492798, -1.295607089996338, -1.292496681213379, -1.289317011833191, -1.286065936088562, -1.282740831375122, -1.2793395519256592, -1.2758592367172241, -1.2722973823547363, -1.2686511278152466, -1.2649174928665161, -1.2610933780670166, -1.2571756839752197, -1.2531609535217285, -1.249045729637146, -1.2448264360427856, -1.2404990196228027, -1.236059546470642, -1.2315037250518799, -1.2268272638320923, -1.2220252752304077, -1.2170932292938232, -1.2120256423950195, -1.206817388534546, -1.2014626264572144, -1.1959556341171265, -1.1902899742126465, -1.1844590902328491, -1.17845618724823, -1.172273874282837, -1.1659045219421387, -1.1593400239944458, -1.1525720357894897, -1.1455912590026855, -1.1383885145187378, -1.1309537887573242, -1.1232763528823853, -1.1153452396392822, -1.1071487665176392, -1.0986742973327637, -1.0899090766906738, -1.0808390378952026, -1.071449637413025, -1.0617254972457886, -1.0516501665115356, -1.04120671749115, -1.0303767919540405, -1.0191413164138794, -1.0074800252914429, -0.9953716993331909, -0.9827937483787537, -0.9697225689888, -0.9561333656311035, -0.9420000314712524, -0.9272952079772949, -0.9119902849197388, -0.8960554003715515, -0.8794593811035156, -0.8621700406074524, -0.8441540002822876, -0.8253768682479858, -0.8058034777641296, -0.7853981852531433, -0.7641247510910034, -0.7419472932815552, -0.7188299894332886, -0.6947382688522339, -0.6696389317512512, -0.6435011029243469, -0.6162969470024109, -0.588002622127533, -0.5585992932319641, -0.5280744433403015, -0.49642276763916016, -0.46364760398864746, -0.4297622740268707, -0.3947911262512207, -0.3587706685066223, -0.32175055146217346, -0.283794105052948, -0.244978666305542, -0.2053953856229782, -0.16514867544174194, -0.12435499578714371, -0.08314123004674911, -0.041642580181360245, 0.0, 0.03997868672013283, 0.07982998341321945, 0.11942892521619797, 0.15865525603294373, 0.19739556312561035, 0.23554497957229614, 0.27300870418548584, 0.30970293283462524, 0.3455555737018585, 0.38050636649131775, 0.4145068824291229, 0.447519987821579, 0.4795192778110504, 0.5104883313179016, 0.5404195189476013, 0.5693131685256958, 0.5971766710281372, 0.6240230798721313, 0.6498704552650452, 0.6747409701347351, 0.6986598372459412, 0.7216548323631287, 0.743755578994751, 0.7649928331375122, 0.7853981852531433, 0.8050035238265991, 0.8238407373428345, 0.8419415950775146, 0.8593372106552124, 0.876058042049408, 0.8921338319778442, 0.907593309879303, 0.9224643111228943, 0.9367735981941223, 0.9505468606948853, 0.9638086557388306, 0.9765826463699341, 0.9888911843299866, 1.0007559061050415, 1.0121970176696777, 1.0232341289520264, 1.0338855981826782, 1.0441690683364868, 1.0541012287139893, 1.0636978149414062, 1.0729739665985107, 1.0819439888000488, 1.0906213521957397, 1.0990188121795654, 1.1071487665176392, 1.1150225400924683, 1.1226513385772705, 1.1300455331802368, 1.1372148990631104, 1.1441688537597656, 1.150916337966919, 1.157465934753418, 1.163825511932373, 1.1700029373168945, 1.176005244255066, 1.1818394660949707, 1.1875121593475342, 1.1930296421051025, 1.1983978748321533, 1.2036224603652954, 1.2087088823318481, 1.2136622667312622, 1.2184876203536987, 1.2231894731521606, 1.2277723550796509, 1.2322406768798828, 1.236598253250122, 1.240849256515503, 1.244997262954712, 1.249045729637146, 1.2529983520507812, 1.2568581104278564, 1.2606282234191895, 1.2643117904663086, 1.267911434173584, 1.2714301347732544, 1.2748702764511108, 1.278234601020813, 1.2815253734588623, 1.2847448587417603, 1.2878954410552979, 1.290979266166687, 1.293998122215271, 1.2969542741775513, 1.299849510192871, 1.3026854991912842, 1.305464267730713, 1.3081872463226318, 1.3108562231063843, 1.3134726285934448, 1.3160380125045776, 1.3185539245605469, 1.321021556854248, 1.3234423398971558, 1.3258177042007446, 1.328148603439331, 1.3304365873336792, 1.332682490348816, 1.3348877429962158, 1.3370531797409058, 1.3391798734664917, 1.3412690162658691, 1.3433213233947754, 1.345337986946106, 1.3473197221755981, 1.3492674827575684, 1.351182222366333, 1.3530645370483398, 1.3549154996871948, 1.3567355871200562, 1.3585258722305298, 1.3602867126464844, 1.3620191812515259, 1.363723635673523, 1.3654009103775024, 1.367051601409912, 1.3686764240264893, 1.3702757358551025, 1.3718503713607788, 1.3734008073806763, 1.3749275207519531, 1.3764311075210571, -1.3779120445251465, -1.3764311075210571, -1.3749275207519531, -1.3734008073806763, -1.3718503713607788, -1.3702757358551025, -1.3686764240264893, -1.367051601409912, -1.3654009103775024, -1.363723635673523, -1.3620191812515259, -1.3602867126464844, -1.3585258722305298, -1.3567355871200562, -1.3549154996871948, -1.3530645370483398, -1.351182222366333, -1.3492674827575684, -1.3473197221755981, -1.345337986946106, -1.3433213233947754, -1.3412690162658691, -1.3391798734664917, -1.3370531797409058, -1.3348877429962158, -1.332682490348816, -1.3304365873336792, -1.328148603439331, -1.3258177042007446, -1.3234423398971558, -1.321021556854248, -1.3185539245605469, -1.3160380125045776, -1.3134726285934448, -1.3108562231063843, -1.3081872463226318, -1.305464267730713, -1.3026854991912842, -1.299849510192871, -1.2969542741775513, -1.293998122215271, -1.290979266166687, -1.2878954410552979, -1.2847448587417603, -1.2815253734588623, -1.278234601020813, -1.2748702764511108, -1.2714301347732544, -1.267911434173584, -1.2643117904663086, -1.2606282234191895, -1.2568581104278564, -1.2529983520507812, -1.249045729637146, -1.244997262954712, -1.240849256515503, -1.236598253250122, -1.2322406768798828, -1.2277723550796509, -1.2231894731521606, -1.2184876203536987, -1.2136622667312622, -1.2087088823318481, -1.2036224603652954, -1.1983978748321533, -1.1930296421051025, -1.1875121593475342, -1.1818394660949707, -1.176005244255066, -1.1700029373168945, -1.163825511932373, -1.157465934753418, -1.150916337966919, -1.1441688537597656, -1.1372148990631104, -1.1300455331802368, -1.1226513385772705, -1.1150225400924683, -1.1071487665176392, -1.0990188121795654, -1.0906213521957397, -1.0819439888000488, -1.0729739665985107, -1.0636978149414062, -1.0541012287139893, -1.0441690683364868, -1.0338855981826782, -1.0232341289520264, -1.0121970176696777, -1.0007559061050415, -0.9888911843299866, -0.9765826463699341, -0.9638086557388306, -0.9505468606948853, -0.9367735981941223, -0.9224643111228943, -0.907593309879303, -0.8921338319778442, -0.876058042049408, -0.8593372106552124, -0.8419415950775146, -0.8238407373428345, -0.8050035238265991, -0.7853981852531433, -0.7649928331375122, -0.743755578994751, -0.7216548323631287, -0.6986598372459412, -0.6747409701347351, -0.6498704552650452, -0.6240230798721313, -0.5971766710281372, -0.5693131685256958, -0.5404195189476013, -0.5104883313179016, -0.4795192778110504, -0.447519987821579, -0.4145068824291229, -0.38050636649131775, -0.3455555737018585, -0.30970293283462524, -0.27300870418548584, -0.23554497957229614, -0.19739556312561035, -0.15865525603294373, -0.11942892521619797, -0.07982998341321945, -0.03997868672013283, 0.0, 0.03844258934259415, 0.07677189260721207, 0.11487660557031631, 0.15264932811260223, 0.18998828530311584, 0.22679884731769562, 0.2629947364330292, 0.2984989285469055, 0.33324429392814636, 0.36717382073402405, 0.4002406597137451, 0.43240776658058167, 0.46364760398864746, 0.49394136667251587, 0.5232782959938049, 0.5516549944877625, 0.5790742635726929, 0.6055446863174438, 0.631079375743866, 0.6556956171989441, 0.6794137954711914, 0.7022569179534912, 0.7242500185966492, 0.7454195022583008, 0.7657928466796875, 0.7853981852531433, 0.8042638301849365, 0.8224182724952698, 0.839889645576477, 0.8567056059837341, 0.8728935122489929, 0.8884797692298889, 0.9034901857376099, 0.9179496765136719, 0.9318823218345642, 0.9453113079071045, 0.9582587480545044, 0.9707460999488831, 0.9827937483787537, 0.994421124458313, 1.0056469440460205, 1.016488790512085, 1.0269638299942017, 1.03708815574646, 1.0468770265579224, 1.056344985961914, 1.065506100654602, 1.0743736028671265, 1.0829598903656006, 1.091277003288269, 1.0993363857269287, 1.1071487665176392, 1.1147242784500122, 1.1220729351043701, 1.1292039155960083, 1.136126160621643, 1.1428477764129639, 1.1493771076202393, 1.1557215452194214, 1.1618884801864624, 1.1678847074508667, 1.1737169027328491, 1.1793911457061768, 1.1849136352539062, 1.1902899742126465, 1.1955255270004272, 1.2006255388259888, 1.2055948972702026, 1.2104383707046509, 1.2151604890823364, 1.2197654247283936, 1.224257469177246, 1.2286404371261597, 1.2329181432724, 1.2370941638946533, 1.241171956062317, 1.2451547384262085, 1.249045729637146, 1.2528480291366577, 1.2565643787384033, 1.2601977586746216, 1.2637505531311035, 1.2672256231307983, 1.270625114440918, 1.2739516496658325, 1.277207374572754, 1.280394434928894, 1.2835148572921753, 1.2865707874298096, 1.2895641326904297, 1.292496681213379, 1.2953702211380005, 1.2981865406036377, 1.3009471893310547, 1.3036538362503052, 1.3063079118728638, 1.3089110851287842, 1.311464548110962, 1.3139698505401611, 1.316428303718567, 1.3188409805297852, 1.32120943069458, 1.323534607887268, 1.3258177042007446, 1.3280597925186157, 1.3302620649337769, 1.3324254751205444, 1.3345510959625244, 1.3366397619247437, 1.338692545890808, 1.340710163116455, 1.3426936864852905, 1.3446439504623413, 1.3465615510940552, 1.348447561264038, 1.3503025770187378, 1.3521274328231812, 1.353922724723816, 1.355689287185669, 1.357427716255188, 1.3591386079788208, 1.3608227968215942, 1.3624807596206665, 1.3641130924224854, 1.3657203912734985, 1.3673032522201538, 1.368862271308899, -1.3703978061676025, -1.368862271308899, -1.3673032522201538, -1.3657203912734985, -1.3641130924224854, -1.3624807596206665, -1.3608227968215942, -1.3591386079788208, -1.357427716255188, -1.355689287185669, -1.353922724723816, -1.3521274328231812, -1.3503025770187378, -1.348447561264038, -1.3465615510940552, -1.3446439504623413, -1.3426936864852905, -1.340710163116455, -1.338692545890808, -1.3366397619247437, -1.3345510959625244, -1.3324254751205444, -1.3302620649337769, -1.3280597925186157, -1.3258177042007446, -1.323534607887268, -1.32120943069458, -1.3188409805297852, -1.316428303718567, -1.3139698505401611, -1.311464548110962, -1.3089110851287842, -1.3063079118728638, -1.3036538362503052, -1.3009471893310547, -1.2981865406036377, -1.2953702211380005, -1.292496681213379, -1.2895641326904297, -1.2865707874298096, -1.2835148572921753, -1.280394434928894, -1.277207374572754, -1.2739516496658325, -1.270625114440918, -1.2672256231307983, -1.2637505531311035, -1.2601977586746216, -1.2565643787384033, -1.2528480291366577, -1.249045729637146, -1.2451547384262085, -1.241171956062317, -1.2370941638946533, -1.2329181432724, -1.2286404371261597, -1.224257469177246, -1.2197654247283936, -1.2151604890823364, -1.2104383707046509, -1.2055948972702026, -1.2006255388259888, -1.1955255270004272, -1.1902899742126465, -1.1849136352539062, -1.1793911457061768, -1.1737169027328491, -1.1678847074508667, -1.1618884801864624, -1.1557215452194214, -1.1493771076202393, -1.1428477764129639, -1.136126160621643, -1.1292039155960083, -1.1220729351043701, -1.1147242784500122, -1.1071487665176392, -1.0993363857269287, -1.091277003288269, -1.0829598903656006, -1.0743736028671265, -1.065506100654602, -1.056344985961914, -1.0468770265579224, -1.03708815574646, -1.0269638299942017, -1.016488790512085, -1.0056469440460205, -0.994421124458313, -0.9827937483787537, -0.9707460999488831, -0.9582587480545044, -0.9453113079071045, -0.9318823218345642, -0.9179496765136719, -0.9034901857376099, -0.8884797692298889, -0.8728935122489929, -0.8567056059837341, -0.839889645576477, -0.8224182724952698, -0.8042638301849365, -0.7853981852531433, -0.7657928466796875, -0.7454195022583008, -0.7242500185966492, -0.7022569179534912, -0.6794137954711914, -0.6556956171989441, -0.631079375743866, -0.6055446863174438, -0.5790742635726929, -0.5516549944877625, -0.5232782959938049, -0.49394136667251587, -0.46364760398864746, -0.43240776658058167, -0.4002406597137451, -0.36717382073402405, -0.33324429392814636, -0.2984989285469055, -0.2629947364330292, -0.22679884731769562, -0.18998828530311584, -0.15264932811260223, -0.11487660557031631, -0.07677189260721207, -0.03844258934259415, 0.0, 0.03702011704444885, 0.07393904030323029, 0.1106572225689888, 0.14707835018634796, 0.1831108182668686, 0.21866895258426666, 0.25367408990859985, 0.2880554497241974, 0.32175055146217346, 0.35470566153526306, 0.386875718832016, 0.4182243347167969, 0.44872334599494934, 0.478352427482605, 0.5070984959602356, 0.5349550843238831, 0.5619215369224548, 0.588002622127533, 0.6132073402404785, 0.6375488042831421, 0.6610431671142578, 0.6837093234062195, 0.7055681943893433, 0.726642370223999, 0.7469555735588074, 0.7665324807167053, 0.7853981852531433, 0.8035779595375061, 0.8210972547531128, 0.8379812240600586, 0.8542546629905701, 0.8699418902397156, 0.88506680727005, 0.8996524810791016, 0.9137213826179504, 0.9272952079772949, 0.9403948783874512, 0.953040599822998, 0.9652516841888428, 0.9770466685295105, 0.9884433746337891, 0.9994588494300842, 1.010109305381775, 1.020410418510437, 1.0303767919540405, 1.040022850036621, 1.0493619441986084, 1.0584068298339844, 1.0671700239181519, 1.0756630897521973, 1.0838971138000488, 1.0918827056884766, 1.0996301174163818, 1.1071487665176392, 1.114447832107544, 1.1215362548828125, 1.1284221410751343, 1.1351134777069092, 1.141617774963379, 1.1479424238204956, 1.1540940999984741, 1.1600793600082397, 1.1659045219421387, 1.1715755462646484, 1.1770981550216675, 1.182477593421936, 1.1877192258834839, 1.1928280591964722, 1.1978086233139038, 1.2026655673980713, 1.2074031829833984, 1.2120256423950195, 1.2165368795394897, 1.2209407091140747, 1.225240707397461, 1.229440450668335, 1.2335431575775146, 1.2375520467758179, 1.241470217704773, 1.2453004121780396, 1.249045729637146, 1.2527087926864624, 1.2562919855117798, 1.2597980499267578, 1.263229250907898, 1.2665878534317017, 1.2698761224746704, 1.2730960845947266, 1.276249885559082, 1.2793395519256592, 1.2823667526245117, 1.285333514213562, 1.2882413864135742, 1.2910921573638916, 1.2938874959945679, 1.2966288328170776, 1.2993178367614746, 1.3019558191299438, 1.3045443296432495, 1.3070844411849976, 1.3095778226852417, 1.3120254278182983, 1.314428687095642, 1.3167885541915894, 1.3191063404083252, 1.3213831186294556, 1.3236198425292969, 1.3258177042007446, 1.3279775381088257, 1.3301002979278564, 1.3321870565414429, 1.3342385292053223, 1.336255669593811, 1.3382394313812256, 1.3401904106140137, 1.3421094417572021, 1.3439974784851074, 1.3458551168441772, 1.3476829528808594, 1.3494819402694702, 1.3512524366378784, 1.3529953956604004, 1.3547114133834839, 1.3564008474349976, 1.3580645322799683, 1.3597029447555542, 1.3613168001174927, -1.3629064559936523, -1.3613168001174927, -1.3597029447555542, -1.3580645322799683, -1.3564008474349976, -1.3547114133834839, -1.3529953956604004, -1.3512524366378784, -1.3494819402694702, -1.3476829528808594, -1.3458551168441772, -1.3439974784851074, -1.3421094417572021, -1.3401904106140137, -1.3382394313812256, -1.336255669593811, -1.3342385292053223, -1.3321870565414429, -1.3301002979278564, -1.3279775381088257, -1.3258177042007446, -1.3236198425292969, -1.3213831186294556, -1.3191063404083252, -1.3167885541915894, -1.314428687095642, -1.3120254278182983, -1.3095778226852417, -1.3070844411849976, -1.3045443296432495, -1.3019558191299438, -1.2993178367614746, -1.2966288328170776, -1.2938874959945679, -1.2910921573638916, -1.2882413864135742, -1.285333514213562, -1.2823667526245117, -1.2793395519256592, -1.276249885559082, -1.2730960845947266, -1.2698761224746704, -1.2665878534317017, -1.263229250907898, -1.2597980499267578, -1.2562919855117798, -1.2527087926864624, -1.249045729637146, -1.2453004121780396, -1.241470217704773, -1.2375520467758179, -1.2335431575775146, -1.229440450668335, -1.225240707397461, -1.2209407091140747, -1.2165368795394897, -1.2120256423950195, -1.2074031829833984, -1.2026655673980713, -1.1978086233139038, -1.1928280591964722, -1.1877192258834839, -1.182477593421936, -1.1770981550216675, -1.1715755462646484, -1.1659045219421387, -1.1600793600082397, -1.1540940999984741, -1.1479424238204956, -1.141617774963379, -1.1351134777069092, -1.1284221410751343, -1.1215362548828125, -1.114447832107544, -1.1071487665176392, -1.0996301174163818, -1.0918827056884766, -1.0838971138000488, -1.0756630897521973, -1.0671700239181519, -1.0584068298339844, -1.0493619441986084, -1.040022850036621, -1.0303767919540405, -1.020410418510437, -1.010109305381775, -0.9994588494300842, -0.9884433746337891, -0.9770466685295105, -0.9652516841888428, -0.953040599822998, -0.9403948783874512, -0.9272952079772949, -0.9137213826179504, -0.8996524810791016, -0.88506680727005, -0.8699418902397156, -0.8542546629905701, -0.8379812240600586, -0.8210972547531128, -0.8035779595375061, -0.7853981852531433, -0.7665324807167053, -0.7469555735588074, -0.726642370223999, -0.7055681943893433, -0.6837093234062195, -0.6610431671142578, -0.6375488042831421, -0.6132073402404785, -0.588002622127533, -0.5619215369224548, -0.5349550843238831, -0.5070984959602356, -0.478352427482605, -0.44872334599494934, -0.4182243347167969, -0.386875718832016, -0.35470566153526306, -0.32175055146217346, -0.2880554497241974, -0.25367408990859985, -0.21866895258426666, -0.1831108182668686, -0.14707835018634796, -0.1106572225689888, -0.07393904030323029, -0.03702011704444885, 0.0, 0.035699114203453064, 0.0713074654340744, 0.10673566907644272, 0.141897052526474, 0.1767088621854782, 0.21109333634376526, 0.244978666305542, 0.2782996594905853, 0.3109982907772064, 0.3430239260196686, 0.37433362007141113, 0.4048917889595032, 0.43467020988464355, 0.46364760398864746, 0.4918091893196106, 0.5191460847854614, 0.5456550717353821, 0.5713374614715576, 0.5961991548538208, 0.6202495098114014, 0.6435011029243469, 0.6659692525863647, 0.6876712441444397, 0.7086262702941895, 0.7288547158241272, 0.7483780384063721, 0.7672183513641357, 0.7853981852531433, 0.8029402494430542, 0.8198672533035278, 0.8362018465995789, 0.8519663214683533, 0.8671825528144836, 0.8818719387054443, 0.8960554003715515, 0.909753143787384, 0.9229848980903625, 0.9357696175575256, 0.9481255412101746, 0.9600703716278076, 0.9716209769248962, 0.9827937483787537, 0.9936041235923767, 1.004067063331604, 1.0141969919204712, 1.0240074396133423, 1.0335116386413574, 1.0427218675613403, 1.0516501665115356, 1.0603079795837402, 1.0687061548233032, 1.076854944229126, 1.0847643613815308, 1.0924439430236816, 1.0999025106430054, 1.1071487665176392, 1.1141908168792725, 1.1210367679595947, 1.127693772315979, 1.1341692209243774, 1.1404696702957153, 1.146601915359497, 1.1525720357894897, 1.1583858728408813, 1.1640492677688599, 1.169567584991455, 1.1749458312988281, 1.1801892518997192, 1.185302495956421, 1.1902899742126465, 1.1951560974121094, 1.1999050378799438, 1.204540729522705, 1.2090671062469482, 1.2134876251220703, 1.2178059816360474, 1.2220252752304077, 1.2261489629745483, 1.2301801443099976, 1.234121561050415, 1.23797607421875, 1.2417466640472412, 1.2454357147216797, 1.249045729637146, 1.2525793313980103, 1.2560386657714844, 1.2594259977340698, 1.262743592262268, 1.265993356704712, 1.2691773176193237, 1.2722973823547363, 1.2753554582595825, 1.2783533334732056, 1.2812926769256592, 1.2841750383377075, 1.2870022058486938, 1.2897756099700928, 1.292496681213379, 1.2951668500900269, 1.2977876663208008, 1.3003602027893066, 1.302885890007019, 1.3053659200668335, 1.307801604270935, 1.3101938962936401, 1.3125441074371338, 1.3148531913757324, 1.317122220993042, 1.3193522691726685, 1.3215441703796387, 1.3236989974975586, 1.3258177042007446, 1.327901005744934, 1.3299498558044434, 1.3319650888442993, 1.3339475393295288, 1.3358979225158691, 1.3378170728683472, 1.3397057056427002, 1.341564416885376, 1.3433939218521118, 1.3451950550079346, 1.346968412399292, 1.3487144708633423, 1.3504339456558228, 1.3521274328231812, 1.3537954092025757, -1.3554385900497437, -1.3537954092025757, -1.3521274328231812, -1.3504339456558228, -1.3487144708633423, -1.346968412399292, -1.3451950550079346, -1.3433939218521118, -1.341564416885376, -1.3397057056427002, -1.3378170728683472, -1.3358979225158691, -1.3339475393295288, -1.3319650888442993, -1.3299498558044434, -1.327901005744934, -1.3258177042007446, -1.3236989974975586, -1.3215441703796387, -1.3193522691726685, -1.317122220993042, -1.3148531913757324, -1.3125441074371338, -1.3101938962936401, -1.307801604270935, -1.3053659200668335, -1.302885890007019, -1.3003602027893066, -1.2977876663208008, -1.2951668500900269, -1.292496681213379, -1.2897756099700928, -1.2870022058486938, -1.2841750383377075, -1.2812926769256592, -1.2783533334732056, -1.2753554582595825, -1.2722973823547363, -1.2691773176193237, -1.265993356704712, -1.262743592262268, -1.2594259977340698, -1.2560386657714844, -1.2525793313980103, -1.249045729637146, -1.2454357147216797, -1.2417466640472412, -1.23797607421875, -1.234121561050415, -1.2301801443099976, -1.2261489629745483, -1.2220252752304077, -1.2178059816360474, -1.2134876251220703, -1.2090671062469482, -1.204540729522705, -1.1999050378799438, -1.1951560974121094, -1.1902899742126465, -1.185302495956421, -1.1801892518997192, -1.1749458312988281, -1.169567584991455, -1.1640492677688599, -1.1583858728408813, -1.1525720357894897, -1.146601915359497, -1.1404696702957153, -1.1341692209243774, -1.127693772315979, -1.1210367679595947, -1.1141908168792725, -1.1071487665176392, -1.0999025106430054, -1.0924439430236816, -1.0847643613815308, -1.076854944229126, -1.0687061548233032, -1.0603079795837402, -1.0516501665115356, -1.0427218675613403, -1.0335116386413574, -1.0240074396133423, -1.0141969919204712, -1.004067063331604, -0.9936041235923767, -0.9827937483787537, -0.9716209769248962, -0.9600703716278076, -0.9481255412101746, -0.9357696175575256, -0.9229848980903625, -0.909753143787384, -0.8960554003715515, -0.8818719387054443, -0.8671825528144836, -0.8519663214683533, -0.8362018465995789, -0.8198672533035278, -0.8029402494430542, -0.7853981852531433, -0.7672183513641357, -0.7483780384063721, -0.7288547158241272, -0.7086262702941895, -0.6876712441444397, -0.6659692525863647, -0.6435011029243469, -0.6202495098114014, -0.5961991548538208, -0.5713374614715576, -0.5456550717353821, -0.5191460847854614, -0.4918091893196106, -0.46364760398864746, -0.43467020988464355, -0.4048917889595032, -0.37433362007141113, -0.3430239260196686, -0.3109982907772064, -0.2782996594905853, -0.244978666305542, -0.21109333634376526, -0.1767088621854782, -0.141897052526474, -0.10673566907644272, -0.0713074654340744, -0.035699114203453064, 0.0, 0.03446910157799721, 0.06885649263858795, 0.1030816063284874, 0.13706617057323456, 0.1707352101802826, 0.2040179818868637, 0.23684875667095184, 0.2691674828529358, 0.3009202480316162, 0.33205947279930115, 0.3625442385673523, 0.39234015345573425, 0.4214192032814026, 0.4497596025466919, 0.47734537720680237, 0.5041659474372864, 0.5302157998085022, 0.5554937124252319, 0.5800027847290039, 0.6037493348121643, 0.6267428994178772, 0.648995578289032, 0.6705215573310852, 0.6913369297981262, 0.7114591002464294, 0.7309067249298096, 0.749699056148529, 0.7678561210632324, 0.7853981852531433, 0.8023456931114197, 0.8187191486358643, 0.8345388770103455, 0.8498250246047974, 0.8645972609519958, 0.8788749575614929, 0.8926770091056824, 0.9060218334197998, 0.9189271926879883, 0.9314104318618774, 0.9434881210327148, 0.9551764130592346, 0.9664908051490784, 0.9774461984634399, 0.9880568385124207, 0.9983364939689636, 1.008298397064209, 1.0179550647735596, 1.0273187160491943, 1.0364007949829102, 1.0452125072479248, 1.0537643432617188, 1.0620665550231934, 1.0701285600662231, 1.0779598951339722, 1.0855693817138672, 1.0929652452468872, 1.1001558303833008, 1.1071487665176392, 1.113951325416565, 1.1205707788467407, 1.1270136833190918, 1.1332865953445435, 1.1393955945968628, 1.1453466415405273, 1.1511454582214355, 1.1567972898483276, 1.1623073816299438, 1.1676807403564453, 1.1729220151901245, 1.1780356168746948, 1.1830261945724487, 1.1878975629806519, 1.192654013633728, 1.1972991228103638, 1.2018368244171143, 1.2062703371047974, 1.2106032371520996, 1.2148386240005493, 1.2189795970916748, 1.223029375076294, 1.2269905805587769, 1.2308659553527832, 1.2346582412719727, 1.2383700609207153, 1.2420036792755127, 1.2455614805221558, 1.249045729637146, 1.2524586915969849, 1.2558023929595947, 1.259078860282898, 1.2622900009155273, 1.2654377222061157, 1.2685238122940063, 1.2715500593185425, 1.2745180130004883, 1.2774293422698975, 1.2802855968475342, 1.2830883264541626, 1.2858389616012573, 1.288538932800293, 1.291189432144165, 1.2937920093536377, 1.296347737312317, 1.2988579273223877, 1.301323652267456, 1.303746223449707, 1.306126594543457, 1.308465838432312, 1.310765027999878, 1.3130252361297607, 1.3152471780776978, 1.317432165145874, 1.3195807933807373, 1.321694016456604, 1.323772668838501, 1.3258177042007446, 1.3278297185897827, 1.3298096656799316, 1.3317581415176392, 1.3336760997772217, 1.3355638980865479, 1.3374226093292236, 1.3392525911331177, 1.3410545587539673, 1.3428292274475098, 1.3445771932601929, 1.3462989330291748, -1.3479951620101929, -1.3462989330291748, -1.3445771932601929, -1.3428292274475098, -1.3410545587539673, -1.3392525911331177, -1.3374226093292236, -1.3355638980865479, -1.3336760997772217, -1.3317581415176392, -1.3298096656799316, -1.3278297185897827, -1.3258177042007446, -1.323772668838501, -1.321694016456604, -1.3195807933807373, -1.317432165145874, -1.3152471780776978, -1.3130252361297607, -1.310765027999878, -1.308465838432312, -1.306126594543457, -1.303746223449707, -1.301323652267456, -1.2988579273223877, -1.296347737312317, -1.2937920093536377, -1.291189432144165, -1.288538932800293, -1.2858389616012573, -1.2830883264541626, -1.2802855968475342, -1.2774293422698975, -1.2745180130004883, -1.2715500593185425, -1.2685238122940063, -1.2654377222061157, -1.2622900009155273, -1.259078860282898, -1.2558023929595947, -1.2524586915969849, -1.249045729637146, -1.2455614805221558, -1.2420036792755127, -1.2383700609207153, -1.2346582412719727, -1.2308659553527832, -1.2269905805587769, -1.223029375076294, -1.2189795970916748, -1.2148386240005493, -1.2106032371520996, -1.2062703371047974, -1.2018368244171143, -1.1972991228103638, -1.192654013633728, -1.1878975629806519, -1.1830261945724487, -1.1780356168746948, -1.1729220151901245, -1.1676807403564453, -1.1623073816299438, -1.1567972898483276, -1.1511454582214355, -1.1453466415405273, -1.1393955945968628, -1.1332865953445435, -1.1270136833190918, -1.1205707788467407, -1.113951325416565, -1.1071487665176392, -1.1001558303833008, -1.0929652452468872, -1.0855693817138672, -1.0779598951339722, -1.0701285600662231, -1.0620665550231934, -1.0537643432617188, -1.0452125072479248, -1.0364007949829102, -1.0273187160491943, -1.0179550647735596, -1.008298397064209, -0.9983364939689636, -0.9880568385124207, -0.9774461984634399, -0.9664908051490784, -0.9551764130592346, -0.9434881210327148, -0.9314104318618774, -0.9189271926879883, -0.9060218334197998, -0.8926770091056824, -0.8788749575614929, -0.8645972609519958, -0.8498250246047974, -0.8345388770103455, -0.8187191486358643, -0.8023456931114197, -0.7853981852531433, -0.7678561210632324, -0.749699056148529, -0.7309067249298096, -0.7114591002464294, -0.6913369297981262, -0.6705215573310852, -0.648995578289032, -0.6267428994178772, -0.6037493348121643, -0.5800027847290039, -0.5554937124252319, -0.5302157998085022, -0.5041659474372864, -0.47734537720680237, -0.4497596025466919, -0.4214192032814026, -0.39234015345573425, -0.3625442385673523, -0.33205947279930115, -0.3009202480316162, -0.2691674828529358, -0.23684875667095184, -0.2040179818868637, -0.1707352101802826, -0.13706617057323456, -0.1030816063284874, -0.06885649263858795, -0.03446910157799721, 0.0, 0.03332099691033363, 0.06656816601753235, 0.09966865181922913, 0.13255153596401215, 0.16514867544174194, 0.19739556312561035, 0.22923193871974945, 0.2606023848056793, 0.29145678877830505, 0.32175055146217346, 0.3514447808265686, 0.38050636649131775, 0.40890783071517944, 0.4366271495819092, 0.46364760398864746, 0.489957332611084, 0.5155490040779114, 0.5404195189476013, 0.5645694136619568, 0.588002622127533, 0.6107259392738342, 0.6327488422393799, 0.654082715511322, 0.6747409701347351, 0.6947382688522339, 0.7140907049179077, 0.7328150868415833, 0.750929057598114, 0.7684506177902222, 0.7853981852531433, 0.8017901182174683, 0.8176450729370117, 0.832981288433075, 0.8478169441223145, 0.8621700406074524, 0.876058042049408, 0.8894981145858765, 0.9025068879127502, 0.9151006937026978, 0.9272952079772949, 0.9391056895256042, 0.9505468606948853, 0.9616328477859497, 0.9723774194717407, 0.9827937483787537, 0.9928944110870361, 1.002691626548767, 1.0121970176696777, 1.0214217901229858, 1.0303767919540405, 1.0390722751617432, 1.047518014907837, 1.0557235479354858, 1.0636978149414062, 1.071449637413025, 1.0789871215820312, 1.0863183736801147, 1.093450903892517, 1.1003921031951904, 1.1071487665176392, 1.1137275695800781, 1.120134949684143, 1.1263771057128906, 1.1324597597122192, 1.1383885145187378, 1.1441688537597656, 1.1498057842254639, 1.155304193496704, 1.160668969154358, 1.1659045219421387, 1.1710152626037598, 1.176005244255066, 1.1808785200119019, 1.1856387853622437, 1.1902899742126465, 1.1948354244232178, 1.199278473854065, 1.2036224603652954, 1.207870602607727, 1.2120256423950195, 1.2160906791687012, 1.220068335533142, 1.2239614725112915, 1.2277723550796509, 1.2315037250518799, 1.2351577281951904, 1.238736867904663, 1.2422431707382202, 1.2456787824630737, 1.249045729637146, 1.2523460388183594, 1.2555816173553467, 1.2587542533874512, 1.2618656158447266, 1.2649174928665161, 1.267911434173584, 1.2708492279052734, 1.27373206615448, 1.2765617370605469, 1.2793395519256592, 1.282066822052002, 1.2847448587417603, 1.2873750925064087, 1.2899585962295532, 1.292496681213379, 1.2949904203414917, 1.297441005706787, 1.299849510192871, 1.30221688747406, 1.3045443296432495, 1.3068325519561768, 1.3090828657150269, 1.3112958669662476, 1.3134726285934448, 1.3156139850616455, 1.317720651626587, 1.3197935819625854, 1.321833610534668, 1.3238413333892822, 1.3258177042007446, 1.3277631998062134, 1.3296786546707153, 1.3315647840499878, 1.333422064781189, 1.3352513313293457, 1.3370531797409058, 1.3388280868530273, -1.3405767679214478, -1.3388280868530273, -1.3370531797409058, -1.3352513313293457, -1.333422064781189, -1.3315647840499878, -1.3296786546707153, -1.3277631998062134, -1.3258177042007446, -1.3238413333892822, -1.321833610534668, -1.3197935819625854, -1.317720651626587, -1.3156139850616455, -1.3134726285934448, -1.3112958669662476, -1.3090828657150269, -1.3068325519561768, -1.3045443296432495, -1.30221688747406, -1.299849510192871, -1.297441005706787, -1.2949904203414917, -1.292496681213379, -1.2899585962295532, -1.2873750925064087, -1.2847448587417603, -1.282066822052002, -1.2793395519256592, -1.2765617370605469, -1.27373206615448, -1.2708492279052734, -1.267911434173584, -1.2649174928665161, -1.2618656158447266, -1.2587542533874512, -1.2555816173553467, -1.2523460388183594, -1.249045729637146, -1.2456787824630737, -1.2422431707382202, -1.238736867904663, -1.2351577281951904, -1.2315037250518799, -1.2277723550796509, -1.2239614725112915, -1.220068335533142, -1.2160906791687012, -1.2120256423950195, -1.207870602607727, -1.2036224603652954, -1.199278473854065, -1.1948354244232178, -1.1902899742126465, -1.1856387853622437, -1.1808785200119019, -1.176005244255066, -1.1710152626037598, -1.1659045219421387, -1.160668969154358, -1.155304193496704, -1.1498057842254639, -1.1441688537597656, -1.1383885145187378, -1.1324597597122192, -1.1263771057128906, -1.120134949684143, -1.1137275695800781, -1.1071487665176392, -1.1003921031951904, -1.093450903892517, -1.0863183736801147, -1.0789871215820312, -1.071449637413025, -1.0636978149414062, -1.0557235479354858, -1.047518014907837, -1.0390722751617432, -1.0303767919540405, -1.0214217901229858, -1.0121970176696777, -1.002691626548767, -0.9928944110870361, -0.9827937483787537, -0.9723774194717407, -0.9616328477859497, -0.9505468606948853, -0.9391056895256042, -0.9272952079772949, -0.9151006937026978, -0.9025068879127502, -0.8894981145858765, -0.876058042049408, -0.8621700406074524, -0.8478169441223145, -0.832981288433075, -0.8176450729370117, -0.8017901182174683, -0.7853981852531433, -0.7684506177902222, -0.750929057598114, -0.7328150868415833, -0.7140907049179077, -0.6947382688522339, -0.6747409701347351, -0.654082715511322, -0.6327488422393799, -0.6107259392738342, -0.588002622127533, -0.5645694136619568, -0.5404195189476013, -0.5155490040779114, -0.489957332611084, -0.46364760398864746, -0.4366271495819092, -0.40890783071517944, -0.38050636649131775, -0.3514447808265686, -0.32175055146217346, -0.29145678877830505, -0.2606023848056793, -0.22923193871974945, -0.19739556312561035, -0.16514867544174194, -0.13255153596401215, -0.09966865181922913, -0.06656816601753235, -0.03332099691033363, 0.0, 0.03224688395857811, 0.06442683935165405, 0.09647377580404282, 0.12832322716712952, 0.15991312265396118, 0.19118446111679077, 0.22208189964294434, 0.2525542676448822, 0.28255495429039, 0.31204211711883545, 0.3409789502620697, 0.3693336546421051, 0.3970794379711151, 0.4241943955421448, 0.4506613314151764, 0.47646743059158325, 0.5016040802001953, 0.5260664224624634, 0.5498532056808472, 0.5729661583900452, 0.5954098701477051, 0.6171913743019104, 0.6383197903633118, 0.6588060259819031, 0.6786624789237976, 0.6979027986526489, 0.7165416479110718, 0.734594464302063, 0.7520771622657776, 0.7690061926841736, 0.7853981852531433, 0.8012698292732239, 0.8166379928588867, 0.8315193057060242, 0.8459301590919495, 0.8598869442939758, 0.8734055161476135, 0.8865015506744385, 0.8991901874542236, 0.9114862680435181, 0.9234042167663574, 0.9349579215049744, 0.9461609125137329, 0.9570262432098389, 0.9675664901733398, 0.9777937531471252, 0.9877197742462158, 0.9973558187484741, 1.006712555885315, 1.0158005952835083, 1.0246297121047974, 1.0332096815109253, 1.041549563407898, 1.049658179283142, 1.0575441122055054, 1.0652152299880981, 1.0726796388626099, 1.0799444913864136, 1.0870171785354614, 1.0939044952392578, 1.1006128787994385, 1.1071487665176392, 1.1135179996490479, 1.1197266578674316, 1.1257801055908203, 1.1316837072372437, 1.1374424695968628, 1.1430613994598389, 1.1485451459884644, 1.1538982391357422, 1.1591249704360962, 1.1642295122146606, 1.1692157983779907, 1.174087643623352, 1.1788487434387207, 1.1835026741027832, 1.188052773475647, 1.1925023794174194, 1.1968543529510498, 1.2011120319366455, 1.2052781581878662, 1.2093554735183716, 1.2133466005325317, 1.217254400253296, 1.221081018447876, 1.224829077720642, 1.2285007238388062, 1.2320982217788696, 1.2356237173080444, 1.2390793561935425, 1.242466926574707, 1.2457884550094604, 1.249045729637146, 1.2522406578063965, 1.255374789237976, 1.258449912071228, 1.261467456817627, 1.2644292116165161, 1.267336368560791, 1.270190715789795, 1.2729933261871338, 1.2757456302642822, 1.2784490585327148, 1.2811048030853271, 1.283713936805725, 1.2862778902053833, 1.2887974977493286, 1.2912741899490356, 1.2937088012695312, 1.2961024045944214, 1.298456072807312, 1.3007707595825195, 1.3030472993850708, 1.3052866458892822, 1.3074897527694702, 1.3096574544906616, 1.3117905855178833, 1.313889741897583, 1.3159559965133667, 1.3179900646209717, 1.3199925422668457, 1.321964144706726, 1.32390558719635, 1.3258177042007446, 1.3277008533477783, 1.3295559883117676, 1.331383466720581, -1.333184003829956, -1.331383466720581, -1.3295559883117676, -1.3277008533477783, -1.3258177042007446, -1.32390558719635, -1.321964144706726, -1.3199925422668457, -1.3179900646209717, -1.3159559965133667, -1.313889741897583, -1.3117905855178833, -1.3096574544906616, -1.3074897527694702, -1.3052866458892822, -1.3030472993850708, -1.3007707595825195, -1.298456072807312, -1.2961024045944214, -1.2937088012695312, -1.2912741899490356, -1.2887974977493286, -1.2862778902053833, -1.283713936805725, -1.2811048030853271, -1.2784490585327148, -1.2757456302642822, -1.2729933261871338, -1.270190715789795, -1.267336368560791, -1.2644292116165161, -1.261467456817627, -1.258449912071228, -1.255374789237976, -1.2522406578063965, -1.249045729637146, -1.2457884550094604, -1.242466926574707, -1.2390793561935425, -1.2356237173080444, -1.2320982217788696, -1.2285007238388062, -1.224829077720642, -1.221081018447876, -1.217254400253296, -1.2133466005325317, -1.2093554735183716, -1.2052781581878662, -1.2011120319366455, -1.1968543529510498, -1.1925023794174194, -1.188052773475647, -1.1835026741027832, -1.1788487434387207, -1.174087643623352, -1.1692157983779907, -1.1642295122146606, -1.1591249704360962, -1.1538982391357422, -1.1485451459884644, -1.1430613994598389, -1.1374424695968628, -1.1316837072372437, -1.1257801055908203, -1.1197266578674316, -1.1135179996490479, -1.1071487665176392, -1.1006128787994385, -1.0939044952392578, -1.0870171785354614, -1.0799444913864136, -1.0726796388626099, -1.0652152299880981, -1.0575441122055054, -1.049658179283142, -1.041549563407898, -1.0332096815109253, -1.0246297121047974, -1.0158005952835083, -1.006712555885315, -0.9973558187484741, -0.9877197742462158, -0.9777937531471252, -0.9675664901733398, -0.9570262432098389, -0.9461609125137329, -0.9349579215049744, -0.9234042167663574, -0.9114862680435181, -0.8991901874542236, -0.8865015506744385, -0.8734055161476135, -0.8598869442939758, -0.8459301590919495, -0.8315193057060242, -0.8166379928588867, -0.8012698292732239, -0.7853981852531433, -0.7690061926841736, -0.7520771622657776, -0.734594464302063, -0.7165416479110718, -0.6979027986526489, -0.6786624789237976, -0.6588060259819031, -0.6383197903633118, -0.6171913743019104, -0.5954098701477051, -0.5729661583900452, -0.5498532056808472, -0.5260664224624634, -0.5016040802001953, -0.47646743059158325, -0.4506613314151764, -0.4241943955421448, -0.3970794379711151, -0.3693336546421051, -0.3409789502620697, -0.31204211711883545, -0.28255495429039, -0.2525542676448822, -0.22208189964294434, -0.19118446111679077, -0.15991312265396118, -0.12832322716712952, -0.09647377580404282, -0.06442683935165405, -0.03224688395857811, 0.0, 0.031239833682775497, 0.06241881102323532, 0.0934767797589302, 0.12435499578714371, 0.15499673783779144, 0.18534794449806213, 0.215357705950737, 0.244978666305542, 0.2741674482822418, 0.30288487672805786, 0.3310960829257965, 0.3587706685066223, 0.3858826756477356, 0.4124104380607605, 0.4383365511894226, 0.46364760398864746, 0.48833394050598145, 0.5123894810676575, 0.5358112454414368, 0.5585992932319641, 0.5807563662528992, 0.6022873520851135, 0.6231993436813354, 0.6435011029243469, 0.6632030010223389, 0.6823165416717529, 0.7008544206619263, 0.7188299894332886, 0.7362574338912964, 0.7531512975692749, 0.769526481628418, 0.7853981852531433, 0.8007815480232239, 0.8156919479370117, 0.8301444053649902, 0.8441540002822876, 0.8577355146408081, 0.8709034323692322, 0.8836721181869507, 0.8960554003715515, 0.9080668091773987, 0.9197195768356323, 0.9310265183448792, 0.9420000314712524, 0.952652096748352, 0.9629943370819092, 0.9730379581451416, 0.9827937483787537, 0.992272138595581, 1.0014830827713013, 1.0104364156723022, 1.0191413164138794, 1.027606725692749, 1.0358412265777588, 1.0438530445098877, 1.0516501665115356, 1.0592402219772339, 1.0666303634643555, 1.0738277435302734, 1.0808390378952026, 1.0876706838607788, 1.0943288803100586, 1.100819706916809, 1.1071487665176392, 1.1133214235305786, 1.1193432807922363, 1.1252189874649048, 1.1309537887573242, 1.1365519762039185, 1.1420183181762695, 1.1473568677902222, 1.1525720357894897, 1.1576675176620483, 1.1626472473144531, 1.1675148010253906, 1.172273874282837, 1.1769276857376099, 1.181479573249817, 1.1859326362609863, 1.1902899742126465, 1.194554328918457, 1.1987285614013672, 1.2028154134750366, 1.206817388534546, 1.2107369899749756, 1.2145767211914062, 1.2183387279510498, 1.2220252752304077, 1.2256386280059814, 1.2291808128356934, 1.2326538562774658, 1.236059546470642, 1.239399790763855, 1.2426763772964478, 1.2458912134170532, 1.249045729637146, 1.2521417140960693, 1.2551807165145874, 1.2581640481948853, 1.2610933780670166, 1.2639700174331665, 1.2667953968048096, 1.2695707082748413, 1.2722973823547363, 1.2749766111373901, 1.2776094675064087, 1.2801971435546875, 1.282740831375122, 1.2852416038513184, 1.2877005338668823, 1.2901185750961304, 1.292496681213379, 1.2948358058929443, 1.2971370220184326, 1.299401044845581, 1.301628828048706, 1.3038212060928345, 1.3059790134429932, 1.3081029653549194, 1.3101938962936401, 1.3122526407241821, 1.3142796754837036, 1.316275954246521, 1.318242073059082, 1.3201786279678345, 1.3220863342285156, 1.3239657878875732, -1.3258177042007446, -1.3239657878875732, -1.3220863342285156, -1.3201786279678345, -1.318242073059082, -1.316275954246521, -1.3142796754837036, -1.3122526407241821, -1.3101938962936401, -1.3081029653549194, -1.3059790134429932, -1.3038212060928345, -1.301628828048706, -1.299401044845581, -1.2971370220184326, -1.2948358058929443, -1.292496681213379, -1.2901185750961304, -1.2877005338668823, -1.2852416038513184, -1.282740831375122, -1.2801971435546875, -1.2776094675064087, -1.2749766111373901, -1.2722973823547363, -1.2695707082748413, -1.2667953968048096, -1.2639700174331665, -1.2610933780670166, -1.2581640481948853, -1.2551807165145874, -1.2521417140960693, -1.249045729637146, -1.2458912134170532, -1.2426763772964478, -1.239399790763855, -1.236059546470642, -1.2326538562774658, -1.2291808128356934, -1.2256386280059814, -1.2220252752304077, -1.2183387279510498, -1.2145767211914062, -1.2107369899749756, -1.206817388534546, -1.2028154134750366, -1.1987285614013672, -1.194554328918457, -1.1902899742126465, -1.1859326362609863, -1.181479573249817, -1.1769276857376099, -1.172273874282837, -1.1675148010253906, -1.1626472473144531, -1.1576675176620483, -1.1525720357894897, -1.1473568677902222, -1.1420183181762695, -1.1365519762039185, -1.1309537887573242, -1.1252189874649048, -1.1193432807922363, -1.1133214235305786, -1.1071487665176392, -1.100819706916809, -1.0943288803100586, -1.0876706838607788, -1.0808390378952026, -1.0738277435302734, -1.0666303634643555, -1.0592402219772339, -1.0516501665115356, -1.0438530445098877, -1.0358412265777588, -1.027606725692749, -1.0191413164138794, -1.0104364156723022, -1.0014830827713013, -0.992272138595581, -0.9827937483787537, -0.9730379581451416, -0.9629943370819092, -0.952652096748352, -0.9420000314712524, -0.9310265183448792, -0.9197195768356323, -0.9080668091773987, -0.8960554003715515, -0.8836721181869507, -0.8709034323692322, -0.8577355146408081, -0.8441540002822876, -0.8301444053649902, -0.8156919479370117, -0.8007815480232239, -0.7853981852531433, -0.769526481628418, -0.7531512975692749, -0.7362574338912964, -0.7188299894332886, -0.7008544206619263, -0.6823165416717529, -0.6632030010223389, -0.6435011029243469, -0.6231993436813354, -0.6022873520851135, -0.5807563662528992, -0.5585992932319641, -0.5358112454414368, -0.5123894810676575, -0.48833394050598145, -0.46364760398864746, -0.4383365511894226, -0.4124104380607605, -0.3858826756477356, -0.3587706685066223, -0.3310960829257965, -0.30288487672805786, -0.2741674482822418, -0.244978666305542, -0.215357705950737, -0.18534794449806213, -0.15499673783779144, -0.12435499578714371, -0.0934767797589302, -0.06241881102323532, -0.031239833682775497, 0.0, 0.03029376082122326, 0.060532018542289734, 0.09065988659858704, 0.12062367051839828, 0.15037143230438232, 0.17985349893569946, 0.20902293920516968, 0.23783592879772186, 0.2662520408630371, 0.29423457384109497, 0.32175055146217346, 0.34877100586891174, 0.375270813703537, 0.40122878551483154, 0.4266274869441986, 0.4514530897140503, 0.4756952226161957, 0.4993467330932617, 0.5224034190177917, 0.5448639392852783, 0.5667291879653931, 0.588002622127533, 0.6086893081665039, 0.6287962794303894, 0.6483319997787476, 0.667306125164032, 0.6857295036315918, 0.7036137580871582, 0.7209713459014893, 0.7378150820732117, 0.7541583180427551, 0.770014762878418, 0.7853981852531433, 0.800322413444519, 0.8148014545440674, 0.8288490772247314, 0.8424789309501648, 0.8557046055793762, 0.8685393929481506, 0.8809962868690491, 0.8930880427360535, 0.9048271179199219, 0.9162255525588989, 0.9272952079772949, 0.938047468662262, 0.948493480682373, 0.9586438536643982, 0.9685089588165283, 0.9780989289283752, 0.987423300743103, 0.9964914917945862, 1.005312442779541, 1.01389479637146, 1.0222469568252563, 1.0303767919540405, 1.0382921695709229, 1.046000599861145, 1.053508996963501, 1.0608242750167847, 1.067953109741211, 1.074901819229126, 1.0816764831542969, 1.0882830619812012, 1.0947270393371582, 1.1010137796401978, 1.1071487665176392, 1.113136649131775, 1.1189824342727661, 1.1246907711029053, 1.1302659511566162, 1.1357123851776123, 1.1410340070724487, 1.1462349891662598, 1.151318907737732, 1.1562894582748413, 1.1611502170562744, 1.1659045219421387, 1.1705557107925415, 1.1751067638397217, 1.1795607805252075, 1.1839206218719482, 1.188189148902893, 1.192368984222412, 1.1964627504348755, 1.2004729509353638, 1.204401969909668, 1.2082520723342896, 1.2120256423950195, 1.2157248258590698, 1.2193515300750732, 1.2229079008102417, 1.2263959646224976, 1.2298173904418945, 1.2331740856170654, 1.2364678382873535, 1.239700198173523, 1.242872953414917, 1.2459876537322998, 1.249045729637146, 1.2520487308502197, 1.2549980878829956, 1.2578951120376587, 1.260741114616394, 1.2635375261306763, 1.2662854194641113, 1.2689861059188843, 1.2716407775878906, 1.2742505073547363, 1.2768163681030273, 1.2793395519256592, 1.2818208932876587, 1.2842615842819214, 1.2866624593734741, 1.2890244722366333, 1.2913485765457153, 1.293635606765747, 1.295886516571045, 1.2981020212173462, 1.3002829551696777, 1.3024301528930664, 1.3045443296432495, 1.3066262006759644, 1.3086764812469482, 1.3106958866119385, 1.312685251235962, 1.3146449327468872, 1.3165757656097412, -1.3184783458709717, -1.3165757656097412, -1.3146449327468872, -1.312685251235962, -1.3106958866119385, -1.3086764812469482, -1.3066262006759644, -1.3045443296432495, -1.3024301528930664, -1.3002829551696777, -1.2981020212173462, -1.295886516571045, -1.293635606765747, -1.2913485765457153, -1.2890244722366333, -1.2866624593734741, -1.2842615842819214, -1.2818208932876587, -1.2793395519256592, -1.2768163681030273, -1.2742505073547363, -1.2716407775878906, -1.2689861059188843, -1.2662854194641113, -1.2635375261306763, -1.260741114616394, -1.2578951120376587, -1.2549980878829956, -1.2520487308502197, -1.249045729637146, -1.2459876537322998, -1.242872953414917, -1.239700198173523, -1.2364678382873535, -1.2331740856170654, -1.2298173904418945, -1.2263959646224976, -1.2229079008102417, -1.2193515300750732, -1.2157248258590698, -1.2120256423950195, -1.2082520723342896, -1.204401969909668, -1.2004729509353638, -1.1964627504348755, -1.192368984222412, -1.188189148902893, -1.1839206218719482, -1.1795607805252075, -1.1751067638397217, -1.1705557107925415, -1.1659045219421387, -1.1611502170562744, -1.1562894582748413, -1.151318907737732, -1.1462349891662598, -1.1410340070724487, -1.1357123851776123, -1.1302659511566162, -1.1246907711029053, -1.1189824342727661, -1.113136649131775, -1.1071487665176392, -1.1010137796401978, -1.0947270393371582, -1.0882830619812012, -1.0816764831542969, -1.074901819229126, -1.067953109741211, -1.0608242750167847, -1.053508996963501, -1.046000599861145, -1.0382921695709229, -1.0303767919540405, -1.0222469568252563, -1.01389479637146, -1.005312442779541, -0.9964914917945862, -0.987423300743103, -0.9780989289283752, -0.9685089588165283, -0.9586438536643982, -0.948493480682373, -0.938047468662262, -0.9272952079772949, -0.9162255525588989, -0.9048271179199219, -0.8930880427360535, -0.8809962868690491, -0.8685393929481506, -0.8557046055793762, -0.8424789309501648, -0.8288490772247314, -0.8148014545440674, -0.800322413444519, -0.7853981852531433, -0.770014762878418, -0.7541583180427551, -0.7378150820732117, -0.7209713459014893, -0.7036137580871582, -0.6857295036315918, -0.667306125164032, -0.6483319997787476, -0.6287962794303894, -0.6086893081665039, -0.588002622127533, -0.5667291879653931, -0.5448639392852783, -0.5224034190177917, -0.4993467330932617, -0.4756952226161957, -0.4514530897140503, -0.4266274869441986, -0.40122878551483154, -0.375270813703537, -0.34877100586891174, -0.32175055146217346, -0.29423457384109497, -0.2662520408630371, -0.23783592879772186, -0.20902293920516968, -0.17985349893569946, -0.15037143230438232, -0.12062367051839828, -0.09065988659858704, -0.060532018542289734, -0.03029376082122326, 0.0, 0.029403287917375565, 0.058755822479724884, 0.0880073755979538, 0.11710874736309052, 0.14601226150989532, 0.1746722012758255, 0.20304521918296814, 0.23109066486358643, 0.2587708830833435, 0.2860514521598816, 0.31290122866630554, 0.33929261565208435, 0.3652014434337616, 0.3906070291996002, 0.41549208760261536, 0.4398425817489624, 0.46364760398864746, 0.4868992269039154, 0.5095922350883484, 0.5317240953445435, 0.55329430103302, 0.5743048191070557, 0.5947592854499817, 0.6146629452705383, 0.6340227127075195, 0.65284663438797, 0.6711438298225403, 0.6889243721961975, 0.7061991095542908, 0.7229793667793274, 0.7392770648002625, 0.7551044225692749, 0.7704738974571228, 0.7853981852531433, 0.7998899221420288, 0.8139618039131165, 0.8276265859603882, 0.8408966660499573, 0.8537845015525818, 0.8663022518157959, 0.8784618973731995, 0.8902751207351685, 0.901753306388855, 0.9129077196121216, 0.9237491488456726, 0.9342880845069885, 0.9445348978042603, 0.954499363899231, 0.964191198348999, 0.9736196398735046, 0.9827937483787537, 0.991722047328949, 1.0004130601882935, 1.008874773979187, 1.0171149969100952, 1.0251412391662598, 1.0329607725143433, 1.0405805110931396, 1.0480072498321533, 1.0552473068237305, 1.0623070001602173, 1.0691922903060913, 1.075908899307251, 1.0824624300003052, 1.0888581275939941, 1.0951011180877686, 1.1011964082717896, 1.1071487665176392, 1.1129626035690308, 1.1186424493789673, 1.124192476272583, 1.1296168565750122, 1.1349194049835205, 1.140103816986084, 1.1451739072799683, 1.1501330137252808, 1.1549845933914185, 1.1597317457199097, 1.1643778085708618, 1.1689256429672241, 1.1733782291412354, 1.1777383089065552, 1.1820086240768433, 1.1861915588378906, 1.1902899742126465, 1.1943060159683228, 1.1982420682907104, 1.202100396156311, 1.205883264541626, 1.209592580795288, 1.2132304906845093, 1.2167989015579224, 1.2202997207641602, 1.223734736442566, 1.227105736732483, 1.2304143905639648, 1.2336623668670654, 1.2368512153625488, 1.2399826049804688, 1.2430578470230103, 1.246078372001648, 1.249045729637146, 1.2519612312316895, 1.2548260688781738, 1.2576415538787842, 1.260408878326416, 1.2631293535232544, 1.2658039331436157, 1.268433928489685, 1.2710202932357788, 1.2735639810562134, 1.2760661840438843, 1.278527855873108, 1.2809498310089111, 1.2833330631256104, 1.2856786251068115, 1.2879871129989624, 1.2902594804763794, 1.292496681213379, 1.2946993112564087, 1.2968682050704956, 1.2990041971206665, 1.3011078834533691, 1.3031799793243408, 1.3052213191986084, 1.3072324991226196, 1.3092139959335327, -1.3111666440963745, -1.3092139959335327, -1.3072324991226196, -1.3052213191986084, -1.3031799793243408, -1.3011078834533691, -1.2990041971206665, -1.2968682050704956, -1.2946993112564087, -1.292496681213379, -1.2902594804763794, -1.2879871129989624, -1.2856786251068115, -1.2833330631256104, -1.2809498310089111, -1.278527855873108, -1.2760661840438843, -1.2735639810562134, -1.2710202932357788, -1.268433928489685, -1.2658039331436157, -1.2631293535232544, -1.260408878326416, -1.2576415538787842, -1.2548260688781738, -1.2519612312316895, -1.249045729637146, -1.246078372001648, -1.2430578470230103, -1.2399826049804688, -1.2368512153625488, -1.2336623668670654, -1.2304143905639648, -1.227105736732483, -1.223734736442566, -1.2202997207641602, -1.2167989015579224, -1.2132304906845093, -1.209592580795288, -1.205883264541626, -1.202100396156311, -1.1982420682907104, -1.1943060159683228, -1.1902899742126465, -1.1861915588378906, -1.1820086240768433, -1.1777383089065552, -1.1733782291412354, -1.1689256429672241, -1.1643778085708618, -1.1597317457199097, -1.1549845933914185, -1.1501330137252808, -1.1451739072799683, -1.140103816986084, -1.1349194049835205, -1.1296168565750122, -1.124192476272583, -1.1186424493789673, -1.1129626035690308, -1.1071487665176392, -1.1011964082717896, -1.0951011180877686, -1.0888581275939941, -1.0824624300003052, -1.075908899307251, -1.0691922903060913, -1.0623070001602173, -1.0552473068237305, -1.0480072498321533, -1.0405805110931396, -1.0329607725143433, -1.0251412391662598, -1.0171149969100952, -1.008874773979187, -1.0004130601882935, -0.991722047328949, -0.9827937483787537, -0.9736196398735046, -0.964191198348999, -0.954499363899231, -0.9445348978042603, -0.9342880845069885, -0.9237491488456726, -0.9129077196121216, -0.901753306388855, -0.8902751207351685, -0.8784618973731995, -0.8663022518157959, -0.8537845015525818, -0.8408966660499573, -0.8276265859603882, -0.8139618039131165, -0.7998899221420288, -0.7853981852531433, -0.7704738974571228, -0.7551044225692749, -0.7392770648002625, -0.7229793667793274, -0.7061991095542908, -0.6889243721961975, -0.6711438298225403, -0.65284663438797, -0.6340227127075195, -0.6146629452705383, -0.5947592854499817, -0.5743048191070557, -0.55329430103302, -0.5317240953445435, -0.5095922350883484, -0.4868992269039154, -0.46364760398864746, -0.4398425817489624, -0.41549208760261536, -0.3906070291996002, -0.3652014434337616, -0.33929261565208435, -0.31290122866630554, -0.2860514521598816, -0.2587708830833435, -0.23109066486358643, -0.20304521918296814, -0.1746722012758255, -0.14601226150989532, -0.11710874736309052, -0.0880073755979538, -0.058755822479724884, -0.029403287917375565, 0.0, 0.02856365777552128, 0.05708078294992447, 0.08550529181957245, 0.11379200965166092, 0.141897052526474, 0.1697782725095749, 0.19739556312561035, 0.22471116483211517, 0.25168997049331665, 0.2782996594905853, 0.3045108914375305, 0.3302973508834839, 0.3556358814239502, 0.38050636649131775, 0.4048917889595032, 0.4287780225276947, 0.45215386152267456, 0.4750107526779175, 0.49734270572662354, 0.5191460847854614, 0.5404195189476013, 0.5611634254455566, 0.5813801884651184, 0.6010737419128418, 0.6202495098114014, 0.6389139890670776, 0.6570749282836914, 0.6747409701347351, 0.6919213533401489, 0.7086262702941895, 0.7248661518096924, 0.7406519055366516, 0.7559948563575745, 0.7709064483642578, 0.7853981852531433, 0.7994817495346069, 0.8131688237190247, 0.8264709711074829, 0.8393996357917786, 0.8519663214683533, 0.8641821146011353, 0.876058042049408, 0.8876048922538757, 0.898833155632019, 0.909753143787384, 0.9203749299049377, 0.9307081699371338, 0.9407624006271362, 0.9505468606948853, 0.9600703716278076, 0.9693416357040405, 0.9783689975738525, 0.9871605038642883, 0.9957240223884583, 1.004067063331604, 1.0121970176696777, 1.0201207399368286, 1.0278451442718506, 1.035376787185669, 1.0427218675613403, 1.0498865842819214, 1.0568766593933105, 1.0636978149414062, 1.0703555345535278, 1.076854944229126, 1.0832011699676514, 1.0893990993499756, 1.0954533815383911, 1.1013684272766113, 1.1071487665176392, 1.1127983331680298, 1.118321418762207, 1.1237218379974365, 1.1290031671524048, 1.1341692209243774, 1.1392232179641724, 1.1441688537597656, 1.149009108543396, 1.1537470817565918, 1.1583858728408813, 1.1629283428192139, 1.1673773527145386, 1.171735405921936, 1.176005244255066, 1.1801892518997192, 1.1842900514602661, 1.1883097887039185, 1.1922507286071777, 1.1961151361465454, 1.1999050378799438, 1.2036224603652954, 1.2072694301605225, 1.2108478546142578, 1.2143594026565552, 1.2178059816360474, 1.221189260482788, 1.2245107889175415, 1.2277723550796509, 1.2309755086898804, 1.234121561050415, 1.237212061882019, 1.2402483224868774, 1.2432318925857544, 1.2461639642715454, 1.249045729637146, 1.2518786191940308, 1.2546637058258057, 1.2574021816253662, 1.2600950002670288, 1.262743592262268, 1.2653486728668213, 1.267911434173584, 1.2704328298568726, 1.272913932800293, 1.2753554582595825, 1.2777584791183472, 1.2801238298416138, 1.2824523448944092, 1.2847448587417603, 1.2870022058486938, 1.2892251014709473, 1.2914143800735474, 1.2935707569122314, 1.2956949472427368, 1.2977876663208008, 1.299849510192871, 1.301881194114685, -1.3038833141326904, -1.301881194114685, -1.299849510192871, -1.2977876663208008, -1.2956949472427368, -1.2935707569122314, -1.2914143800735474, -1.2892251014709473, -1.2870022058486938, -1.2847448587417603, -1.2824523448944092, -1.2801238298416138, -1.2777584791183472, -1.2753554582595825, -1.272913932800293, -1.2704328298568726, -1.267911434173584, -1.2653486728668213, -1.262743592262268, -1.2600950002670288, -1.2574021816253662, -1.2546637058258057, -1.2518786191940308, -1.249045729637146, -1.2461639642715454, -1.2432318925857544, -1.2402483224868774, -1.237212061882019, -1.234121561050415, -1.2309755086898804, -1.2277723550796509, -1.2245107889175415, -1.221189260482788, -1.2178059816360474, -1.2143594026565552, -1.2108478546142578, -1.2072694301605225, -1.2036224603652954, -1.1999050378799438, -1.1961151361465454, -1.1922507286071777, -1.1883097887039185, -1.1842900514602661, -1.1801892518997192, -1.176005244255066, -1.171735405921936, -1.1673773527145386, -1.1629283428192139, -1.1583858728408813, -1.1537470817565918, -1.149009108543396, -1.1441688537597656, -1.1392232179641724, -1.1341692209243774, -1.1290031671524048, -1.1237218379974365, -1.118321418762207, -1.1127983331680298, -1.1071487665176392, -1.1013684272766113, -1.0954533815383911, -1.0893990993499756, -1.0832011699676514, -1.076854944229126, -1.0703555345535278, -1.0636978149414062, -1.0568766593933105, -1.0498865842819214, -1.0427218675613403, -1.035376787185669, -1.0278451442718506, -1.0201207399368286, -1.0121970176696777, -1.004067063331604, -0.9957240223884583, -0.9871605038642883, -0.9783689975738525, -0.9693416357040405, -0.9600703716278076, -0.9505468606948853, -0.9407624006271362, -0.9307081699371338, -0.9203749299049377, -0.909753143787384, -0.898833155632019, -0.8876048922538757, -0.876058042049408, -0.8641821146011353, -0.8519663214683533, -0.8393996357917786, -0.8264709711074829, -0.8131688237190247, -0.7994817495346069, -0.7853981852531433, -0.7709064483642578, -0.7559948563575745, -0.7406519055366516, -0.7248661518096924, -0.7086262702941895, -0.6919213533401489, -0.6747409701347351, -0.6570749282836914, -0.6389139890670776, -0.6202495098114014, -0.6010737419128418, -0.5813801884651184, -0.5611634254455566, -0.5404195189476013, -0.5191460847854614, -0.49734270572662354, -0.4750107526779175, -0.45215386152267456, -0.4287780225276947, -0.4048917889595032, -0.38050636649131775, -0.3556358814239502, -0.3302973508834839, -0.3045108914375305, -0.2782996594905853, -0.25168997049331665, -0.22471116483211517, -0.19739556312561035, -0.1697782725095749, -0.141897052526474, -0.11379200965166092, -0.08550529181957245, -0.05708078294992447, -0.02856365777552128, 0.0, 0.0277706366032362, 0.055498506873846054, 0.08314123004674911, 0.1106572225689888, 0.13800601661205292, 0.16514867544174194, 0.19204801321029663, 0.21866895258426666, 0.244978666305542, 0.2709468603134155, 0.2965458035469055, 0.32175055146217346, 0.34653887152671814, 0.3708913028240204, 0.3947911262512207, 0.4182243347167969, 0.441179484128952, 0.46364760398864746, 0.4856221079826355, 0.5070984959602356, 0.5280744433403015, 0.5485494136810303, 0.5685245394706726, 0.588002622127533, 0.6069876551628113, 0.6254850625991821, 0.6435011029243469, 0.6610431671142578, 0.6781193017959595, 0.6947382688522339, 0.710909366607666, 0.726642370223999, 0.7419472932815552, 0.7568345069885254, 0.7713145613670349, 0.7853981852531433, 0.7990959286689758, 0.8124186396598816, 0.8253768682479858, 0.8379812240600586, 0.8502421975135803, 0.8621700406074524, 0.8737749457359314, 0.88506680727005, 0.8960554003715515, 0.9067501425743103, 0.9171604514122009, 0.9272952079772949, 0.9371632933616638, 0.9467732906341553, 0.9561333656311035, 0.9652516841888428, 0.9741359353065491, 0.9827937483787537, 0.9912323355674744, 0.9994588494300842, 1.0074800252914429, 1.0153025388717651, 1.022932767868042, 1.0303767919540405, 1.0376405715942383, 1.0447299480438232, 1.0516501665115356, 1.0584068298339844, 1.0650050640106201, 1.071449637413025, 1.0777454376220703, 1.0838971138000488, 1.0899090766906738, 1.0957856178283691, 1.1015307903289795, 1.1071487665176392, 1.1126431226730347, 1.1180179119110107, 1.1232763528823853, 1.1284221410751343, 1.1334583759307861, 1.1383885145187378, 1.143215537071228, 1.1479424238204956, 1.1525720357894897, 1.1571071147918701, 1.1615504026412964, 1.1659045219421387, 1.1701719760894775, 1.1743550300598145, 1.17845618724823, 1.182477593421936, 1.186421513557434, 1.1902899742126465, 1.1940850019454956, 1.1978086233139038, 1.2014626264572144, 1.2050490379333496, 1.2085694074630737, 1.2120256423950195, 1.2154192924499512, 1.2187520265579224, 1.2220252752304077, 1.225240707397461, 1.2283997535705566, 1.2315037250518799, 1.2345540523529053, 1.2375520467758179, 1.2404990196228027, 1.2433961629867554, 1.2462446689605713, 1.249045729637146, 1.251800537109375, 1.2545101642608643, 1.2571756839752197, 1.2597980499267578, 1.2623783349990845, 1.2649174928665161, 1.2674163579940796, 1.2698761224746704, 1.2722973823547363, 1.2746812105178833, 1.2770283222198486, 1.2793395519256592, 1.2816157341003418, 1.2838575839996338, 1.286065936088562, 1.2882413864135742, 1.2903847694396973, 1.292496681213379, 1.2945778369903564, -1.2966288328170776, -1.2945778369903564, -1.292496681213379, -1.2903847694396973, -1.2882413864135742, -1.286065936088562, -1.2838575839996338, -1.2816157341003418, -1.2793395519256592, -1.2770283222198486, -1.2746812105178833, -1.2722973823547363, -1.2698761224746704, -1.2674163579940796, -1.2649174928665161, -1.2623783349990845, -1.2597980499267578, -1.2571756839752197, -1.2545101642608643, -1.251800537109375, -1.249045729637146, -1.2462446689605713, -1.2433961629867554, -1.2404990196228027, -1.2375520467758179, -1.2345540523529053, -1.2315037250518799, -1.2283997535705566, -1.225240707397461, -1.2220252752304077, -1.2187520265579224, -1.2154192924499512, -1.2120256423950195, -1.2085694074630737, -1.2050490379333496, -1.2014626264572144, -1.1978086233139038, -1.1940850019454956, -1.1902899742126465, -1.186421513557434, -1.182477593421936, -1.17845618724823, -1.1743550300598145, -1.1701719760894775, -1.1659045219421387, -1.1615504026412964, -1.1571071147918701, -1.1525720357894897, -1.1479424238204956, -1.143215537071228, -1.1383885145187378, -1.1334583759307861, -1.1284221410751343, -1.1232763528823853, -1.1180179119110107, -1.1126431226730347, -1.1071487665176392, -1.1015307903289795, -1.0957856178283691, -1.0899090766906738, -1.0838971138000488, -1.0777454376220703, -1.071449637413025, -1.0650050640106201, -1.0584068298339844, -1.0516501665115356, -1.0447299480438232, -1.0376405715942383, -1.0303767919540405, -1.022932767868042, -1.0153025388717651, -1.0074800252914429, -0.9994588494300842, -0.9912323355674744, -0.9827937483787537, -0.9741359353065491, -0.9652516841888428, -0.9561333656311035, -0.9467732906341553, -0.9371632933616638, -0.9272952079772949, -0.9171604514122009, -0.9067501425743103, -0.8960554003715515, -0.88506680727005, -0.8737749457359314, -0.8621700406074524, -0.8502421975135803, -0.8379812240600586, -0.8253768682479858, -0.8124186396598816, -0.7990959286689758, -0.7853981852531433, -0.7713145613670349, -0.7568345069885254, -0.7419472932815552, -0.726642370223999, -0.710909366607666, -0.6947382688522339, -0.6781193017959595, -0.6610431671142578, -0.6435011029243469, -0.6254850625991821, -0.6069876551628113, -0.588002622127533, -0.5685245394706726, -0.5485494136810303, -0.5280744433403015, -0.5070984959602356, -0.4856221079826355, -0.46364760398864746, -0.441179484128952, -0.4182243347167969, -0.3947911262512207, -0.3708913028240204, -0.34653887152671814, -0.32175055146217346, -0.2965458035469055, -0.2709468603134155, -0.244978666305542, -0.21866895258426666, -0.19204801321029663, -0.16514867544174194, -0.13800601661205292, -0.1106572225689888, -0.08314123004674911, -0.055498506873846054, -0.0277706366032362, 0.0, 0.027020448818802834, 0.054001498967409134, 0.08090409636497498, 0.10768987238407135, 0.1343214362859726, 0.1607627421617508, 0.1869792640209198, 0.2129383534193039, 0.23860932886600494, 0.2639637291431427, 0.28897541761398315, 0.3136206567287445, 0.33787819743156433, 0.361729234457016, 0.3851574957370758, 0.4081490933895111, 0.43069252371788025, 0.4527784585952759, 0.4743998944759369, 0.4955516755580902, 0.5162306427955627, 0.5364354848861694, 0.5561662316322327, 0.5754246711730957, 0.5942137241363525, 0.6125375628471375, 0.6304014325141907, 0.6478114128112793, 0.664774477481842, 0.6812981963157654, 0.6973907947540283, 0.7130608558654785, 0.728317379951477, 0.7431697845458984, 0.757627546787262, 0.771700382232666, 0.7853981852531433, 0.798730731010437, 0.8117078542709351, 0.8243395090103149, 0.8366353511810303, 0.8486049771308899, 0.8602579832077026, 0.8716037273406982, 0.8826513886451721, 0.8934099078178406, 0.9038881063461304, 0.9140946865081787, 0.9240378737449646, 0.9337260127067566, 0.9431669116020203, 0.9523683190345764, 0.9613378047943115, 0.9700825214385986, 0.9786096215248108, 0.9869259595870972, 0.9950380325317383, 1.0029523372650146, 1.0106749534606934, 1.0182119607925415, 1.025569200515747, 1.0327521562576294, 1.0397661924362183, 1.0466166734695435, 1.0533086061477661, 1.0598467588424683, 1.066235899925232, 1.07248055934906, 1.0785850286483765, 1.0845537185668945, 1.0903905630111694, 1.0960994958877563, 1.101684331893921, 1.1071487665176392, 1.112496256828308, 1.1177303791046143, 1.122854232788086, 1.1278711557388306, 1.132784128189087, 1.1375961303710938, 1.1423101425170898, 1.1469286680221558, 1.1514546871185303, 1.1558905839920044, 1.1602388620376587, 1.1645020246505737, 1.168682336807251, 1.172782063484192, 1.1768033504486084, 1.1807482242584229, 1.1846189498901367, 1.1884173154830933, 1.1921452283859253, 1.1958045959472656, 1.1993972063064575, 1.2029246091842651, 1.2063887119293213, 1.2097910642623901, 1.2131330966949463, 1.216416358947754, 1.2196425199508667, 1.2228127717971802, 1.225928544998169, 1.228991150856018, 1.2320020198822021, 1.2349622249603271, 1.2378730773925781, 1.2407357692718506, 1.2435513734817505, 1.2463209629058838, 1.249045729637146, 1.251726746559143, 1.2543648481369019, 1.2569612264633179, 1.2595165967941284, 1.2620320320129395, 1.2645084857940674, 1.2669466733932495, 1.2693475484848022, 1.2717119455337524, 1.2740405797958374, 1.276334285736084, 1.2785937786102295, 1.2808198928833008, 1.2830133438110352, 1.2851746082305908, 1.2873046398162842, -1.2894039154052734, -1.2873046398162842, -1.2851746082305908, -1.2830133438110352, -1.2808198928833008, -1.2785937786102295, -1.276334285736084, -1.2740405797958374, -1.2717119455337524, -1.2693475484848022, -1.2669466733932495, -1.2645084857940674, -1.2620320320129395, -1.2595165967941284, -1.2569612264633179, -1.2543648481369019, -1.251726746559143, -1.249045729637146, -1.2463209629058838, -1.2435513734817505, -1.2407357692718506, -1.2378730773925781, -1.2349622249603271, -1.2320020198822021, -1.228991150856018, -1.225928544998169, -1.2228127717971802, -1.2196425199508667, -1.216416358947754, -1.2131330966949463, -1.2097910642623901, -1.2063887119293213, -1.2029246091842651, -1.1993972063064575, -1.1958045959472656, -1.1921452283859253, -1.1884173154830933, -1.1846189498901367, -1.1807482242584229, -1.1768033504486084, -1.172782063484192, -1.168682336807251, -1.1645020246505737, -1.1602388620376587, -1.1558905839920044, -1.1514546871185303, -1.1469286680221558, -1.1423101425170898, -1.1375961303710938, -1.132784128189087, -1.1278711557388306, -1.122854232788086, -1.1177303791046143, -1.112496256828308, -1.1071487665176392, -1.101684331893921, -1.0960994958877563, -1.0903905630111694, -1.0845537185668945, -1.0785850286483765, -1.07248055934906, -1.066235899925232, -1.0598467588424683, -1.0533086061477661, -1.0466166734695435, -1.0397661924362183, -1.0327521562576294, -1.025569200515747, -1.0182119607925415, -1.0106749534606934, -1.0029523372650146, -0.9950380325317383, -0.9869259595870972, -0.9786096215248108, -0.9700825214385986, -0.9613378047943115, -0.9523683190345764, -0.9431669116020203, -0.9337260127067566, -0.9240378737449646, -0.9140946865081787, -0.9038881063461304, -0.8934099078178406, -0.8826513886451721, -0.8716037273406982, -0.8602579832077026, -0.8486049771308899, -0.8366353511810303, -0.8243395090103149, -0.8117078542709351, -0.798730731010437, -0.7853981852531433, -0.771700382232666, -0.757627546787262, -0.7431697845458984, -0.728317379951477, -0.7130608558654785, -0.6973907947540283, -0.6812981963157654, -0.664774477481842, -0.6478114128112793, -0.6304014325141907, -0.6125375628471375, -0.5942137241363525, -0.5754246711730957, -0.5561662316322327, -0.5364354848861694, -0.5162306427955627, -0.4955516755580902, -0.4743998944759369, -0.4527784585952759, -0.43069252371788025, -0.4081490933895111, -0.3851574957370758, -0.361729234457016, -0.33787819743156433, -0.3136206567287445, -0.28897541761398315, -0.2639637291431427, -0.23860932886600494, -0.2129383534193039, -0.1869792640209198, -0.1607627421617508, -0.1343214362859726, -0.10768987238407135, -0.08090409636497498, -0.054001498967409134, -0.027020448818802834, 0.0, 0.026309717446565628, 0.052583061158657074, 0.07878395915031433, 0.10487693548202515, 0.130827397108078, 0.15660187602043152, 0.18216830492019653, 0.20749622583389282, 0.23255693912506104, 0.2573237121105194, 0.28177186846733093, 0.3058788776397705, 0.3296244144439697, 0.35299038887023926, 0.37596094608306885, 0.39852243661880493, 0.42066335678100586, 0.44237422943115234, 0.46364760398864746, 0.4844779372215271, 0.5048613548278809, 0.5247957706451416, 0.544280469417572, 0.563316285610199, 0.5819051265716553, 0.6000502109527588, 0.6177557110786438, 0.635026752948761, 0.6518691182136536, 0.6682894229888916, 0.6842948198318481, 0.6998928785324097, 0.7150917053222656, 0.7298996448516846, 0.7443253993988037, 0.758377730846405, 0.7720656394958496, 0.7853981852531433, 0.798384428024292, 0.8110335469245911, 0.8233546018600464, 0.8353565335273743, 0.8470483422279358, 0.8584387302398682, 0.8695363998413086, 0.88034987449646, 0.8908874988555908, 0.9011573791503906, 0.911167562007904, 0.9209258556365967, 0.9304398894309998, 0.9397169351577759, 0.9487643241882324, 0.9575889706611633, 0.9661977291107178, 0.974597156047821, 0.9827937483787537, 0.9907935261726379, 0.9986026883125305, 1.006226897239685, 1.0136719942092896, 1.0209431648254395, 1.0280457735061646, 1.034985065460205, 1.041765809059143, 1.04839289188385, 1.054870843887329, 1.0612040758132935, 1.0673969984054565, 1.073453664779663, 1.0793781280517578, 1.0851742029190063, 1.0908458232879639, 1.0963964462280273, 1.1018296480178833, 1.1071487665176392, 1.1123570203781128, 1.117457628250122, 1.1224536895751953, 1.1273479461669922, 1.132143497467041, 1.136842966079712, 1.141448974609375, 1.1459641456604004, 1.1503909826278687, 1.1547318696975708, 1.1589890718460083, 1.1631648540496826, 1.1672613620758057, 1.171280860900879, 1.1752251386642456, 1.1790963411331177, 1.182896375656128, 1.18662691116333, 1.1902899742126465, 1.1938871145248413, 1.1974200010299683, 1.200890302658081, 1.2042995691299438, 1.2076493501663208, 1.2109410762786865, 1.2141761779785156, 1.2173560857772827, 1.2204821109771729, 1.223555564880371, 1.226577639579773, 1.2295496463775635, 1.2324726581573486, 1.2353479862213135, 1.2381765842437744, 1.240959644317627, 1.243698239326477, 1.2463932037353516, 1.249045729637146, 1.2516567707061768, 1.2542270421981812, 1.2567577362060547, 1.2592494487762451, 1.261703372001648, 1.2641199827194214, 1.2665003538131714, 1.2688452005386353, 1.2711552381515503, 1.2734311819076538, 1.2756738662719727, 1.2778838872909546, 1.2800620794296265, -1.2822089195251465, -1.2800620794296265, -1.2778838872909546, -1.2756738662719727, -1.2734311819076538, -1.2711552381515503, -1.2688452005386353, -1.2665003538131714, -1.2641199827194214, -1.261703372001648, -1.2592494487762451, -1.2567577362060547, -1.2542270421981812, -1.2516567707061768, -1.249045729637146, -1.2463932037353516, -1.243698239326477, -1.240959644317627, -1.2381765842437744, -1.2353479862213135, -1.2324726581573486, -1.2295496463775635, -1.226577639579773, -1.223555564880371, -1.2204821109771729, -1.2173560857772827, -1.2141761779785156, -1.2109410762786865, -1.2076493501663208, -1.2042995691299438, -1.200890302658081, -1.1974200010299683, -1.1938871145248413, -1.1902899742126465, -1.18662691116333, -1.182896375656128, -1.1790963411331177, -1.1752251386642456, -1.171280860900879, -1.1672613620758057, -1.1631648540496826, -1.1589890718460083, -1.1547318696975708, -1.1503909826278687, -1.1459641456604004, -1.141448974609375, -1.136842966079712, -1.132143497467041, -1.1273479461669922, -1.1224536895751953, -1.117457628250122, -1.1123570203781128, -1.1071487665176392, -1.1018296480178833, -1.0963964462280273, -1.0908458232879639, -1.0851742029190063, -1.0793781280517578, -1.073453664779663, -1.0673969984054565, -1.0612040758132935, -1.054870843887329, -1.04839289188385, -1.041765809059143, -1.034985065460205, -1.0280457735061646, -1.0209431648254395, -1.0136719942092896, -1.006226897239685, -0.9986026883125305, -0.9907935261726379, -0.9827937483787537, -0.974597156047821, -0.9661977291107178, -0.9575889706611633, -0.9487643241882324, -0.9397169351577759, -0.9304398894309998, -0.9209258556365967, -0.911167562007904, -0.9011573791503906, -0.8908874988555908, -0.88034987449646, -0.8695363998413086, -0.8584387302398682, -0.8470483422279358, -0.8353565335273743, -0.8233546018600464, -0.8110335469245911, -0.798384428024292, -0.7853981852531433, -0.7720656394958496, -0.758377730846405, -0.7443253993988037, -0.7298996448516846, -0.7150917053222656, -0.6998928785324097, -0.6842948198318481, -0.6682894229888916, -0.6518691182136536, -0.635026752948761, -0.6177557110786438, -0.6000502109527588, -0.5819051265716553, -0.563316285610199, -0.544280469417572, -0.5247957706451416, -0.5048613548278809, -0.4844779372215271, -0.46364760398864746, -0.44237422943115234, -0.42066335678100586, -0.39852243661880493, -0.37596094608306885, -0.35299038887023926, -0.3296244144439697, -0.3058788776397705, -0.28177186846733093, -0.2573237121105194, -0.23255693912506104, -0.20749622583389282, -0.18216830492019653, -0.15660187602043152, -0.130827397108078, -0.10487693548202515, -0.07878395915031433, -0.052583061158657074, -0.026309717446565628, 0.0, 0.025635408237576485, 0.05123716592788696, 0.07677189260721207, 0.10220671445131302, 0.12750956416130066, 0.15264932811260223, 0.17759616672992706, 0.2023216336965561, 0.22679884731769562, 0.251002699136734, 0.2749098539352417, 0.2984989285469055, 0.32175055146217346, 0.3446473181247711, 0.36717382073402405, 0.38931670784950256, 0.4110645353794098, 0.43240776658058167, 0.4533386826515198, 0.4738513231277466, 0.49394136667251587, 0.5136060118675232, 0.5328438878059387, 0.5516549944877625, 0.5700404644012451, 0.588002622127533, 0.6055446863174438, 0.6226707696914673, 0.6393858790397644, 0.6556956171989441, 0.671606183052063, 0.6871241927146912, 0.7022569179534912, 0.7170118093490601, 0.7313966751098633, 0.7454195022583008, 0.7590884566307068, 0.7724118828773499, 0.7853981852531433, 0.7980557084083557, 0.8103929758071899, 0.8224182724952698, 0.8341400027275085, 0.8455663919448853, 0.8567056059837341, 0.8675656914710999, 0.878154456615448, 0.8884797692298889, 0.8985491394996643, 0.9083700180053711, 0.9179496765136719, 0.9272952079772949, 0.9364135265350342, 0.9453113079071045, 0.9539951086044312, 0.9624713063240051, 0.9707460999488831, 0.9788255095481873, 0.9867152571678162, 0.994421124458313, 1.0019484758377075, 1.0093026161193848, 1.016488790512085, 1.0235118865966797, 1.0303767919540405, 1.03708815574646, 1.0436503887176514, 1.0500679016113281, 1.056344985961914, 1.062485694885254, 1.0684939622879028, 1.0743736028671265, 1.0801283121109009, 1.085761547088623, 1.091277003288269, 1.0966778993606567, 1.101967453956604, 1.1071487665176392, 1.112224817276001, 1.1171985864639282, 1.1220729351043701, 1.1268506050109863, 1.1315340995788574, 1.136126160621643, 1.1406290531158447, 1.145045280456543, 1.1493771076202393, 1.153626799583435, 1.1577966213226318, 1.1618884801864624, 1.1659045219421387, 1.1698466539382935, 1.1737169027328491, 1.1775169372558594, 1.1812485456466675, 1.1849136352539062, 1.1885137557983398, 1.1920504570007324, 1.1955255270004272, 1.1989402770996094, 1.202296257019043, 1.2055948972702026, 1.208837628364563, 1.2120256423950195, 1.2151604890823364, 1.2182432413101196, 1.2212750911712646, 1.224257469177246, 1.2271913290023804, 1.230077862739563, 1.2329181432724, 1.235713243484497, 1.238464117050171, 1.241171956062317, 1.2438374757766724, 1.2464617490768433, 1.249045729637146, 1.2515902519226074, 1.254096269607544, 1.2565643787384033, 1.2589956521987915, 1.2613908052444458, 1.2637505531311035, 1.2660757303237915, 1.268367052078247, 1.270625114440918, 1.272850751876831, -1.2750446796417236, -1.272850751876831, -1.270625114440918, -1.268367052078247, -1.2660757303237915, -1.2637505531311035, -1.2613908052444458, -1.2589956521987915, -1.2565643787384033, -1.254096269607544, -1.2515902519226074, -1.249045729637146, -1.2464617490768433, -1.2438374757766724, -1.241171956062317, -1.238464117050171, -1.235713243484497, -1.2329181432724, -1.230077862739563, -1.2271913290023804, -1.224257469177246, -1.2212750911712646, -1.2182432413101196, -1.2151604890823364, -1.2120256423950195, -1.208837628364563, -1.2055948972702026, -1.202296257019043, -1.1989402770996094, -1.1955255270004272, -1.1920504570007324, -1.1885137557983398, -1.1849136352539062, -1.1812485456466675, -1.1775169372558594, -1.1737169027328491, -1.1698466539382935, -1.1659045219421387, -1.1618884801864624, -1.1577966213226318, -1.153626799583435, -1.1493771076202393, -1.145045280456543, -1.1406290531158447, -1.136126160621643, -1.1315340995788574, -1.1268506050109863, -1.1220729351043701, -1.1171985864639282, -1.112224817276001, -1.1071487665176392, -1.101967453956604, -1.0966778993606567, -1.091277003288269, -1.085761547088623, -1.0801283121109009, -1.0743736028671265, -1.0684939622879028, -1.062485694885254, -1.056344985961914, -1.0500679016113281, -1.0436503887176514, -1.03708815574646, -1.0303767919540405, -1.0235118865966797, -1.016488790512085, -1.0093026161193848, -1.0019484758377075, -0.994421124458313, -0.9867152571678162, -0.9788255095481873, -0.9707460999488831, -0.9624713063240051, -0.9539951086044312, -0.9453113079071045, -0.9364135265350342, -0.9272952079772949, -0.9179496765136719, -0.9083700180053711, -0.8985491394996643, -0.8884797692298889, -0.878154456615448, -0.8675656914710999, -0.8567056059837341, -0.8455663919448853, -0.8341400027275085, -0.8224182724952698, -0.8103929758071899, -0.7980557084083557, -0.7853981852531433, -0.7724118828773499, -0.7590884566307068, -0.7454195022583008, -0.7313966751098633, -0.7170118093490601, -0.7022569179534912, -0.6871241927146912, -0.671606183052063, -0.6556956171989441, -0.6393858790397644, -0.6226707696914673, -0.6055446863174438, -0.588002622127533, -0.5700404644012451, -0.5516549944877625, -0.5328438878059387, -0.5136060118675232, -0.49394136667251587, -0.4738513231277466, -0.4533386826515198, -0.43240776658058167, -0.4110645353794098, -0.38931670784950256, -0.36717382073402405, -0.3446473181247711, -0.32175055146217346, -0.2984989285469055, -0.2749098539352417, -0.251002699136734, -0.22679884731769562, -0.2023216336965561, -0.17759616672992706, -0.15264932811260223, -0.12750956416130066, -0.10220671445131302, -0.07677189260721207, -0.05123716592788696, -0.025635408237576485, 0.0, 0.02499479427933693, 0.04995839670300484, 0.0748598501086235, 0.09966865181922913, 0.12435499578714371, 0.1488899439573288, 0.17324566841125488, 0.19739556312561035, 0.2213144451379776, 0.244978666305542, 0.2683662176132202, 0.29145678877830505, 0.31423190236091614, 0.3366748094558716, 0.3587706685066223, 0.38050636649131775, 0.40187063813209534, 0.42285391688346863, 0.44344833493232727, 0.46364760398864746, 0.48344701528549194, 0.5028432011604309, 0.5218342542648315, 0.5404195189476013, 0.5585992932319641, 0.5763752460479736, 0.5937496423721313, 0.6107259392738342, 0.627308189868927, 0.6435011029243469, 0.6593100428581238, 0.6747409701347351, 0.6898000240325928, 0.704494059085846, 0.7188299894332886, 0.7328150868415833, 0.7464568018913269, 0.7597627639770508, 0.7727406024932861, 0.7853981852531433, 0.7977432012557983, 0.8097835779190063, 0.8215270042419434, 0.832981288433075, 0.8441540002822876, 0.8550527095794678, 0.865684986114502, 0.876058042049408, 0.8861791491508484, 0.8960554003715515, 0.9056936502456665, 0.9151006937026978, 0.9242832064628601, 0.9332475066184998, 0.9420000314712524, 0.9505468606948853, 0.958893895149231, 0.9670469760894775, 0.9750117659568787, 0.9827937483787537, 0.9903981685638428, 0.9978302121162415, 1.0050948858261108, 1.0121970176696777, 1.0191413164138794, 1.0259324312210083, 1.0325746536254883, 1.0390722751617432, 1.0454294681549072, 1.0516501665115356, 1.0577384233474731, 1.0636978149414062, 1.069532036781311, 1.075244665145874, 1.0808390378952026, 1.0863183736801147, 1.0916860103607178, 1.09694504737854, 1.1020982265472412, 1.1071487665176392, 1.1120991706848145, 1.1169523000717163, 1.1217107772827148, 1.1263771057128906, 1.1309537887573242, 1.135443091392517, 1.1398473978042603, 1.1441688537597656, 1.1484097242355347, 1.1525720357894897, 1.1566578149795532, 1.160668969154358, 1.1646075248718262, 1.1684752702713013, 1.172273874282837, 1.176005244255066, 1.1796709299087524, 1.1832724809646606, 1.1868116855621338, 1.1902899742126465, 1.1937087774276733, 1.197069525718689, 1.200373649597168, 1.2036224603652954, 1.206817388534546, 1.2099595069885254, 1.2130502462387085, 1.2160906791687012, 1.219081997871399, 1.2220252752304077, 1.2249218225479126, 1.2277723550796509, 1.2305781841278076, 1.2333402633666992, 1.236059546470642, 1.238736867904663, 1.2413733005523682, 1.2439696788787842, 1.246526837348938, 1.249045729637146, 1.251527190208435, 1.253971815109253, 1.256380558013916, 1.2587542533874512, 1.2610933780670166, 1.2633988857269287, 1.2656713724136353, -1.267911434173584, -1.2656713724136353, -1.2633988857269287, -1.2610933780670166, -1.2587542533874512, -1.256380558013916, -1.253971815109253, -1.251527190208435, -1.249045729637146, -1.246526837348938, -1.2439696788787842, -1.2413733005523682, -1.238736867904663, -1.236059546470642, -1.2333402633666992, -1.2305781841278076, -1.2277723550796509, -1.2249218225479126, -1.2220252752304077, -1.219081997871399, -1.2160906791687012, -1.2130502462387085, -1.2099595069885254, -1.206817388534546, -1.2036224603652954, -1.200373649597168, -1.197069525718689, -1.1937087774276733, -1.1902899742126465, -1.1868116855621338, -1.1832724809646606, -1.1796709299087524, -1.176005244255066, -1.172273874282837, -1.1684752702713013, -1.1646075248718262, -1.160668969154358, -1.1566578149795532, -1.1525720357894897, -1.1484097242355347, -1.1441688537597656, -1.1398473978042603, -1.135443091392517, -1.1309537887573242, -1.1263771057128906, -1.1217107772827148, -1.1169523000717163, -1.1120991706848145, -1.1071487665176392, -1.1020982265472412, -1.09694504737854, -1.0916860103607178, -1.0863183736801147, -1.0808390378952026, -1.075244665145874, -1.069532036781311, -1.0636978149414062, -1.0577384233474731, -1.0516501665115356, -1.0454294681549072, -1.0390722751617432, -1.0325746536254883, -1.0259324312210083, -1.0191413164138794, -1.0121970176696777, -1.0050948858261108, -0.9978302121162415, -0.9903981685638428, -0.9827937483787537, -0.9750117659568787, -0.9670469760894775, -0.958893895149231, -0.9505468606948853, -0.9420000314712524, -0.9332475066184998, -0.9242832064628601, -0.9151006937026978, -0.9056936502456665, -0.8960554003715515, -0.8861791491508484, -0.876058042049408, -0.865684986114502, -0.8550527095794678, -0.8441540002822876, -0.832981288433075, -0.8215270042419434, -0.8097835779190063, -0.7977432012557983, -0.7853981852531433, -0.7727406024932861, -0.7597627639770508, -0.7464568018913269, -0.7328150868415833, -0.7188299894332886, -0.704494059085846, -0.6898000240325928, -0.6747409701347351, -0.6593100428581238, -0.6435011029243469, -0.627308189868927, -0.6107259392738342, -0.5937496423721313, -0.5763752460479736, -0.5585992932319641, -0.5404195189476013, -0.5218342542648315, -0.5028432011604309, -0.48344701528549194, -0.46364760398864746, -0.44344833493232727, -0.42285391688346863, -0.40187063813209534, -0.38050636649131775, -0.3587706685066223, -0.3366748094558716, -0.31423190236091614, -0.29145678877830505, -0.2683662176132202, -0.244978666305542, -0.2213144451379776, -0.19739556312561035, -0.17324566841125488, -0.1488899439573288, -0.12435499578714371, -0.09966865181922913, -0.0748598501086235, -0.04995839670300484, -0.02499479427933693, 0.0, 0.02438540942966938, 0.04874185100197792, 0.07304056733846664, 0.09725319594144821, 0.12135200202465057, 0.14531001448631287, 0.16910122334957123, 0.19270075857639313, 0.21608497202396393, 0.23923160135746002, 0.2621198296546936, 0.2847304344177246, 0.30704572796821594, 0.3290497064590454, 0.35072794556617737, 0.37206774950027466, 0.39305803179740906, 0.4136892259120941, 0.4339533746242523, 0.45384401082992554, 0.4733560383319855, 0.49248576164245605, 0.5112307071685791, 0.5295895934104919, 0.5475622415542603, 0.5651494264602661, 0.5823529362678528, 0.5991753339767456, 0.6156198978424072, 0.6316906213760376, 0.6473921537399292, 0.6627295017242432, 0.6777082681655884, 0.6923344135284424, 0.7066141963005066, 0.7205541133880615, 0.7341610193252563, 0.7474417090415955, 0.7604033946990967, 0.7730531096458435, 0.7853981852531433, 0.7974457740783691, 0.8092032074928284, 0.820677638053894, 0.831876277923584, 0.8428062796592712, 0.8534746170043945, 0.8638882637023926, 0.8740540742874146, 0.8839786648750305, 0.8936687707901001, 0.9031307101249695, 0.9123709797859192, 0.9213955998420715, 0.9302106499671936, 0.9388220906257629, 0.9472355842590332, 0.9554567933082581, 0.9634910821914673, 0.9713438153266907, 0.9790201783180237, 0.9865250587463379, 0.9938634037971497, 1.0010398626327515, 1.0080591440200806, 1.014925479888916, 1.0216434001922607, 1.0282169580459595, 1.0346503257751465, 1.0409471988677979, 1.0471116304397583, 1.0531471967697144, 1.0590574741363525, 1.0648459196090698, 1.0705158710479736, 1.0760706663131714, 1.0815132856369019, 1.086846947669983, 1.0920745134353638, 1.0971988439559937, 1.1022226810455322, 1.1071487665176392, 1.111979603767395, 1.11671781539917, 1.1213657855987549, 1.125925898551941, 1.13040030002594, 1.1347914934158325, 1.139101266860962, 1.1433320045471191, 1.147485613822937, 1.1515638828277588, 1.1555689573287964, 1.159502625465393, 1.163366436958313, 1.1671624183654785, 1.1708920001983643, 1.1745569705963135, 1.1781588792800903, 1.1816990375518799, 1.1851792335510254, 1.188600778579712, 1.1919649839401245, 1.1952732801437378, 1.1985269784927368, 1.2017273902893066, 1.2048755884170532, 1.2079730033874512, 1.211020588874817, 1.2140196561813354, 1.2169711589813232, 1.2198762893676758, 1.2227360010147095, 1.2255513668060303, 1.2283233404159546, 1.2310528755187988, 1.2337408065795898, 1.2363882064819336, 1.238995909690857, 1.2415646314620972, 1.2440953254699707, 1.2465888261795044, 1.249045729637146, 1.2514671087265015, 1.253853440284729, 1.2562055587768555, 1.2585241794586182, -1.2608098983764648, -1.2585241794586182, -1.2562055587768555, -1.253853440284729, -1.2514671087265015, -1.249045729637146, -1.2465888261795044, -1.2440953254699707, -1.2415646314620972, -1.238995909690857, -1.2363882064819336, -1.2337408065795898, -1.2310528755187988, -1.2283233404159546, -1.2255513668060303, -1.2227360010147095, -1.2198762893676758, -1.2169711589813232, -1.2140196561813354, -1.211020588874817, -1.2079730033874512, -1.2048755884170532, -1.2017273902893066, -1.1985269784927368, -1.1952732801437378, -1.1919649839401245, -1.188600778579712, -1.1851792335510254, -1.1816990375518799, -1.1781588792800903, -1.1745569705963135, -1.1708920001983643, -1.1671624183654785, -1.163366436958313, -1.159502625465393, -1.1555689573287964, -1.1515638828277588, -1.147485613822937, -1.1433320045471191, -1.139101266860962, -1.1347914934158325, -1.13040030002594, -1.125925898551941, -1.1213657855987549, -1.11671781539917, -1.111979603767395, -1.1071487665176392, -1.1022226810455322, -1.0971988439559937, -1.0920745134353638, -1.086846947669983, -1.0815132856369019, -1.0760706663131714, -1.0705158710479736, -1.0648459196090698, -1.0590574741363525, -1.0531471967697144, -1.0471116304397583, -1.0409471988677979, -1.0346503257751465, -1.0282169580459595, -1.0216434001922607, -1.014925479888916, -1.0080591440200806, -1.0010398626327515, -0.9938634037971497, -0.9865250587463379, -0.9790201783180237, -0.9713438153266907, -0.9634910821914673, -0.9554567933082581, -0.9472355842590332, -0.9388220906257629, -0.9302106499671936, -0.9213955998420715, -0.9123709797859192, -0.9031307101249695, -0.8936687707901001, -0.8839786648750305, -0.8740540742874146, -0.8638882637023926, -0.8534746170043945, -0.8428062796592712, -0.831876277923584, -0.820677638053894, -0.8092032074928284, -0.7974457740783691, -0.7853981852531433, -0.7730531096458435, -0.7604033946990967, -0.7474417090415955, -0.7341610193252563, -0.7205541133880615, -0.7066141963005066, -0.6923344135284424, -0.6777082681655884, -0.6627295017242432, -0.6473921537399292, -0.6316906213760376, -0.6156198978424072, -0.5991753339767456, -0.5823529362678528, -0.5651494264602661, -0.5475622415542603, -0.5295895934104919, -0.5112307071685791, -0.49248576164245605, -0.4733560383319855, -0.45384401082992554, -0.4339533746242523, -0.4136892259120941, -0.39305803179740906, -0.37206774950027466, -0.35072794556617737, -0.3290497064590454, -0.30704572796821594, -0.2847304344177246, -0.2621198296546936, -0.23923160135746002, -0.21608497202396393, -0.19270075857639313, -0.16910122334957123, -0.14531001448631287, -0.12135200202465057, -0.09725319594144821, -0.07304056733846664, -0.04874185100197792, -0.02438540942966938, 0.0, 0.023805025964975357, 0.04758310317993164, 0.0713074654340744, 0.09495170414447784, 0.11848995834589005, 0.141897052526474, 0.16514867544174194, 0.1882214993238449, 0.21109333634376526, 0.23374317586421967, 0.25615137815475464, 0.2782996594905853, 0.3001711666584015, 0.32175055146217346, 0.3430239260196686, 0.36397895216941833, 0.38460472226142883, 0.4048917889595032, 0.42483216524124146, 0.4444192051887512, 0.46364760398864746, 0.48251330852508545, 0.5010133981704712, 0.5191460847854614, 0.5369107723236084, 0.5543075203895569, 0.5713374614715576, 0.588002622127533, 0.6043055057525635, 0.6202495098114014, 0.6358384490013123, 0.6510767340660095, 0.6659692525863647, 0.6805212497711182, 0.6947382688522339, 0.7086262702941895, 0.722191333770752, 0.7354397773742676, 0.7483780384063721, 0.7610127329826355, 0.7733505368232727, 0.7853981852531433, 0.7971623539924622, 0.8086497783660889, 0.8198672533035278, 0.8308214545249939, 0.8415189385414124, 0.8519663214683533, 0.8621700406074524, 0.8721364736557007, 0.8818719387054443, 0.8913825154304504, 0.9006742835044861, 0.909753143787384, 0.9186249375343323, 0.9272952079772949, 0.9357696175575256, 0.9440534114837646, 0.9521519541740417, 0.9600703716278076, 0.9678135514259338, 0.9753864407539368, 0.9827937483787537, 0.9900399446487427, 0.9971296787261963, 1.004067063331604, 1.0108565092086792, 1.017501950263977, 1.0240074396133423, 1.0303767919540405, 1.0366137027740479, 1.0427218675613403, 1.048704743385315, 1.054565668106079, 1.0603079795837402, 1.0659348964691162, 1.071449637413025, 1.076854944229126, 1.0821539163589478, 1.08734929561615, 1.0924439430236816, 1.097440242767334, 1.1023410558700562, 1.1071487665176392, 1.1118656396865845, 1.1164942979812622, 1.1210367679595947, 1.1254953145980835, 1.1298720836639404, 1.1341692209243774, 1.1383885145187378, 1.142532229423523, 1.146601915359497, 1.1505995988845825, 1.1545270681381226, 1.1583858728408813, 1.1621778011322021, 1.1659045219421387, 1.169567584991455, 1.1731683015823364, 1.176708459854126, 1.1801892518997192, 1.1836122274398804, 1.1869786977767944, 1.1902899742126465, 1.193547248840332, 1.1967519521713257, 1.1999050378799438, 1.2030078172683716, 1.2060614824295044, 1.2090671062469482, 1.2120256423950195, 1.2149382829666138, 1.2178059816360474, 1.2206296920776367, 1.2234103679656982, 1.2261489629745483, 1.228846549987793, 1.2315037250518799, 1.234121561050415, 1.2367007732391357, 1.2392421960830688, 1.2417466640472412, 1.2442148923873901, 1.2466477155685425, 1.249045729637146, 1.251409888267517, -1.2537405490875244, -1.251409888267517, -1.249045729637146, -1.2466477155685425, -1.2442148923873901, -1.2417466640472412, -1.2392421960830688, -1.2367007732391357, -1.234121561050415, -1.2315037250518799, -1.228846549987793, -1.2261489629745483, -1.2234103679656982, -1.2206296920776367, -1.2178059816360474, -1.2149382829666138, -1.2120256423950195, -1.2090671062469482, -1.2060614824295044, -1.2030078172683716, -1.1999050378799438, -1.1967519521713257, -1.193547248840332, -1.1902899742126465, -1.1869786977767944, -1.1836122274398804, -1.1801892518997192, -1.176708459854126, -1.1731683015823364, -1.169567584991455, -1.1659045219421387, -1.1621778011322021, -1.1583858728408813, -1.1545270681381226, -1.1505995988845825, -1.146601915359497, -1.142532229423523, -1.1383885145187378, -1.1341692209243774, -1.1298720836639404, -1.1254953145980835, -1.1210367679595947, -1.1164942979812622, -1.1118656396865845, -1.1071487665176392, -1.1023410558700562, -1.097440242767334, -1.0924439430236816, -1.08734929561615, -1.0821539163589478, -1.076854944229126, -1.071449637413025, -1.0659348964691162, -1.0603079795837402, -1.054565668106079, -1.048704743385315, -1.0427218675613403, -1.0366137027740479, -1.0303767919540405, -1.0240074396133423, -1.017501950263977, -1.0108565092086792, -1.004067063331604, -0.9971296787261963, -0.9900399446487427, -0.9827937483787537, -0.9753864407539368, -0.9678135514259338, -0.9600703716278076, -0.9521519541740417, -0.9440534114837646, -0.9357696175575256, -0.9272952079772949, -0.9186249375343323, -0.909753143787384, -0.9006742835044861, -0.8913825154304504, -0.8818719387054443, -0.8721364736557007, -0.8621700406074524, -0.8519663214683533, -0.8415189385414124, -0.8308214545249939, -0.8198672533035278, -0.8086497783660889, -0.7971623539924622, -0.7853981852531433, -0.7733505368232727, -0.7610127329826355, -0.7483780384063721, -0.7354397773742676, -0.722191333770752, -0.7086262702941895, -0.6947382688522339, -0.6805212497711182, -0.6659692525863647, -0.6510767340660095, -0.6358384490013123, -0.6202495098114014, -0.6043055057525635, -0.588002622127533, -0.5713374614715576, -0.5543075203895569, -0.5369107723236084, -0.5191460847854614, -0.5010133981704712, -0.48251330852508545, -0.46364760398864746, -0.4444192051887512, -0.42483216524124146, -0.4048917889595032, -0.38460472226142883, -0.36397895216941833, -0.3430239260196686, -0.32175055146217346, -0.3001711666584015, -0.2782996594905853, -0.25615137815475464, -0.23374317586421967, -0.21109333634376526, -0.1882214993238449, -0.16514867544174194, -0.141897052526474, -0.11848995834589005, -0.09495170414447784, -0.0713074654340744, -0.04758310317993164, -0.023805025964975357, 0.0, 0.023251622915267944, 0.04647812992334366, 0.06965457648038864, 0.09275632351636887, 0.1157592162489891, 0.13863973319530487, 0.16137510538101196, 0.18394345045089722, 0.20632389187812805, 0.22849664092063904, 0.25044310092926025, 0.2721458971500397, 0.2935889959335327, 0.31475767493247986, 0.33563855290412903, 0.35621964931488037, 0.3764903247356415, 0.3964412808418274, 0.4160645008087158, 0.43535327911376953, 0.4543020725250244, 0.47290658950805664, 0.49116361141204834, 0.509070873260498, 0.526627242565155, 0.5438324809074402, 0.5606870055198669, 0.5771921873092651, 0.5933501720428467, 0.6091634631156921, 0.6246353983879089, 0.6397697925567627, 0.6545707583427429, 0.6690430045127869, 0.6831914186477661, 0.6970213651657104, 0.7105383276939392, 0.723747968673706, 0.7366563081741333, 0.7492693066596985, 0.7615931630134583, 0.7736340165138245, 0.7853981852531433, 0.7968919277191162, 0.8081215023994446, 0.8190932869911194, 0.8298133611679077, 0.8402880430221558, 0.8505233526229858, 0.8605253100395203, 0.8702999353408813, 0.8798530697822571, 0.8891904950141907, 0.898317813873291, 0.907240629196167, 0.9159642457962036, 0.9244940876960754, 0.9328353404998779, 0.9409930109977722, 0.9489720463752747, 0.9567772746086121, 0.9644134640693665, 0.971885085105896, 0.9791966080665588, 0.9863524436950684, 0.9933567047119141, 1.000213623046875, 1.0069270133972168, 1.0135008096694946, 1.0199388265609741, 1.0262446403503418, 1.0324218273162842, 1.0384738445281982, 1.0444039106369019, 1.050215482711792, 1.0559115409851074, 1.0614951848983765, 1.066969394683838, 1.0723369121551514, 1.0776007175445557, 1.0827633142471313, 1.087827444076538, 1.0927956104278564, 1.097670316696167, 1.1024539470672607, 1.1071487665176392, 1.1117569208145142, 1.1162809133529663, 1.1207225322723389, 1.1250840425491333, 1.1293672323226929, 1.1335742473602295, 1.1377068758010864, 1.141766905784607, 1.1457561254501343, 1.1496762037277222, 1.1535289287567139, 1.1573158502578735, 1.1610383987426758, 1.1646982431411743, 1.1682969331741333, 1.1718356609344482, 1.1753159761428833, 1.178739309310913, 1.182106852531433, 1.1854199171066284, 1.1886796951293945, 1.191887378692627, 1.1950442790985107, 1.1981514692306519, 1.2012099027633667, 1.2042208909988403, 1.2071853876113892, 1.2101044654846191, 1.2129789590835571, 1.215809941291809, 1.2185983657836914, 1.221345067024231, 1.2240509986877441, 1.2267169952392578, 1.2293438911437988, 1.231932520866394, 1.2344837188720703, 1.236998200416565, 1.2394766807556152, 1.241919994354248, 1.2443288564682007, -1.246703863143921, -1.2443288564682007, -1.241919994354248, -1.2394766807556152, -1.236998200416565, -1.2344837188720703, -1.231932520866394, -1.2293438911437988, -1.2267169952392578, -1.2240509986877441, -1.221345067024231, -1.2185983657836914, -1.215809941291809, -1.2129789590835571, -1.2101044654846191, -1.2071853876113892, -1.2042208909988403, -1.2012099027633667, -1.1981514692306519, -1.1950442790985107, -1.191887378692627, -1.1886796951293945, -1.1854199171066284, -1.182106852531433, -1.178739309310913, -1.1753159761428833, -1.1718356609344482, -1.1682969331741333, -1.1646982431411743, -1.1610383987426758, -1.1573158502578735, -1.1535289287567139, -1.1496762037277222, -1.1457561254501343, -1.141766905784607, -1.1377068758010864, -1.1335742473602295, -1.1293672323226929, -1.1250840425491333, -1.1207225322723389, -1.1162809133529663, -1.1117569208145142, -1.1071487665176392, -1.1024539470672607, -1.097670316696167, -1.0927956104278564, -1.087827444076538, -1.0827633142471313, -1.0776007175445557, -1.0723369121551514, -1.066969394683838, -1.0614951848983765, -1.0559115409851074, -1.050215482711792, -1.0444039106369019, -1.0384738445281982, -1.0324218273162842, -1.0262446403503418, -1.0199388265609741, -1.0135008096694946, -1.0069270133972168, -1.000213623046875, -0.9933567047119141, -0.9863524436950684, -0.9791966080665588, -0.971885085105896, -0.9644134640693665, -0.9567772746086121, -0.9489720463752747, -0.9409930109977722, -0.9328353404998779, -0.9244940876960754, -0.9159642457962036, -0.907240629196167, -0.898317813873291, -0.8891904950141907, -0.8798530697822571, -0.8702999353408813, -0.8605253100395203, -0.8505233526229858, -0.8402880430221558, -0.8298133611679077, -0.8190932869911194, -0.8081215023994446, -0.7968919277191162, -0.7853981852531433, -0.7736340165138245, -0.7615931630134583, -0.7492693066596985, -0.7366563081741333, -0.723747968673706, -0.7105383276939392, -0.6970213651657104, -0.6831914186477661, -0.6690430045127869, -0.6545707583427429, -0.6397697925567627, -0.6246353983879089, -0.6091634631156921, -0.5933501720428467, -0.5771921873092651, -0.5606870055198669, -0.5438324809074402, -0.526627242565155, -0.509070873260498, -0.49116361141204834, -0.47290658950805664, -0.4543020725250244, -0.43535327911376953, -0.4160645008087158, -0.3964412808418274, -0.3764903247356415, -0.35621964931488037, -0.33563855290412903, -0.31475767493247986, -0.2935889959335327, -0.2721458971500397, -0.25044310092926025, -0.22849664092063904, -0.20632389187812805, -0.18394345045089722, -0.16137510538101196, -0.13863973319530487, -0.1157592162489891, -0.09275632351636887, -0.06965457648038864, -0.04647812992334366, -0.023251622915267944, 0.0, 0.022723359987139702, 0.04542328044772148, 0.06807646155357361, 0.09065988659858704, 0.11315098404884338, 0.13552771508693695, 0.15776874125003815, 0.17985349893569946, 0.2017623484134674, 0.2234766036272049, 0.244978666305542, 0.2662520408630371, 0.28728145360946655, 0.30805277824401855, 0.328553169965744, 0.34877100586891174, 0.3686959147453308, 0.3883187174797058, 0.407631516456604, 0.4266274869441986, 0.4453010559082031, 0.46364760398864746, 0.48166367411613464, 0.4993467330932617, 0.5166951417922974, 0.5337082147598267, 0.5503859519958496, 0.5667291879653931, 0.5827394723892212, 0.5984188914299011, 0.613770067691803, 0.6287962794303894, 0.6435011029243469, 0.6578885912895203, 0.6719631552696228, 0.6857295036315918, 0.6991925835609436, 0.7123575806617737, 0.7252299189567566, 0.7378150820732117, 0.7501186728477478, 0.762146532535553, 0.7739044427871704, 0.7853981852531433, 0.7966336607933044, 0.8076167106628418, 0.8183532357215881, 0.8288490772247314, 0.8391098976135254, 0.8491414785385132, 0.8589494824409485, 0.8685393929481506, 0.8779168128967285, 0.8870869874954224, 0.8960554003715515, 0.9048271179199219, 0.9134072065353394, 0.9218007922172546, 0.930012583732605, 0.938047468662262, 0.9459100961685181, 0.9536049365997314, 0.9611364603042603, 0.9685089588165283, 0.9757267236709595, 0.9827937483787537, 0.9897140264511108, 0.9964914917945862, 1.0031299591064453, 1.00963294506073, 1.0160040855407715, 1.0222469568252563, 1.0283647775650024, 1.0343608856201172, 1.040238380432129, 1.046000599861145, 1.0516501665115356, 1.0571902990341187, 1.0626237392425537, 1.067953109741211, 1.07318115234375, 1.0783106088638306, 1.083343744277954, 1.0882830619812012, 1.0931309461593628, 1.09788978099823, 1.102561593055725, 1.1071487665176392, 1.111653208732605, 1.1160770654678345, 1.1204222440719604, 1.1246907711029053, 1.1288844347000122, 1.1330050230026245, 1.1370543241500854, 1.1410340070724487, 1.1449458599090576, 1.1487913131713867, 1.1525720357894897, 1.1562894582748413, 1.1599451303482056, 1.1635404825210571, 1.167076826095581, 1.1705557107925415, 1.1739782094955444, 1.177345633506775, 1.1806594133377075, 1.1839206218719482, 1.1871304512023926, 1.1902899742126465, 1.1934003829956055, 1.1964627504348755, 1.199478030204773, 1.2024474143981934, 1.2053717374801636, 1.2082520723342896, 1.2110893726348877, 1.2138843536376953, 1.216638207435608, 1.2193515300750732, 1.2220252752304077, 1.2246603965759277, 1.227257490158081, 1.2298173904418945, 1.232340931892395, 1.2348287105560303, 1.2372815608978271, -1.239700198173523, -1.2372815608978271, -1.2348287105560303, -1.232340931892395, -1.2298173904418945, -1.227257490158081, -1.2246603965759277, -1.2220252752304077, -1.2193515300750732, -1.216638207435608, -1.2138843536376953, -1.2110893726348877, -1.2082520723342896, -1.2053717374801636, -1.2024474143981934, -1.199478030204773, -1.1964627504348755, -1.1934003829956055, -1.1902899742126465, -1.1871304512023926, -1.1839206218719482, -1.1806594133377075, -1.177345633506775, -1.1739782094955444, -1.1705557107925415, -1.167076826095581, -1.1635404825210571, -1.1599451303482056, -1.1562894582748413, -1.1525720357894897, -1.1487913131713867, -1.1449458599090576, -1.1410340070724487, -1.1370543241500854, -1.1330050230026245, -1.1288844347000122, -1.1246907711029053, -1.1204222440719604, -1.1160770654678345, -1.111653208732605, -1.1071487665176392, -1.102561593055725, -1.09788978099823, -1.0931309461593628, -1.0882830619812012, -1.083343744277954, -1.0783106088638306, -1.07318115234375, -1.067953109741211, -1.0626237392425537, -1.0571902990341187, -1.0516501665115356, -1.046000599861145, -1.040238380432129, -1.0343608856201172, -1.0283647775650024, -1.0222469568252563, -1.0160040855407715, -1.00963294506073, -1.0031299591064453, -0.9964914917945862, -0.9897140264511108, -0.9827937483787537, -0.9757267236709595, -0.9685089588165283, -0.9611364603042603, -0.9536049365997314, -0.9459100961685181, -0.938047468662262, -0.930012583732605, -0.9218007922172546, -0.9134072065353394, -0.9048271179199219, -0.8960554003715515, -0.8870869874954224, -0.8779168128967285, -0.8685393929481506, -0.8589494824409485, -0.8491414785385132, -0.8391098976135254, -0.8288490772247314, -0.8183532357215881, -0.8076167106628418, -0.7966336607933044, -0.7853981852531433, -0.7739044427871704, -0.762146532535553, -0.7501186728477478, -0.7378150820732117, -0.7252299189567566, -0.7123575806617737, -0.6991925835609436, -0.6857295036315918, -0.6719631552696228, -0.6578885912895203, -0.6435011029243469, -0.6287962794303894, -0.613770067691803, -0.5984188914299011, -0.5827394723892212, -0.5667291879653931, -0.5503859519958496, -0.5337082147598267, -0.5166951417922974, -0.4993467330932617, -0.48166367411613464, -0.46364760398864746, -0.4453010559082031, -0.4266274869441986, -0.407631516456604, -0.3883187174797058, -0.3686959147453308, -0.34877100586891174, -0.328553169965744, -0.30805277824401855, -0.28728145360946655, -0.2662520408630371, -0.244978666305542, -0.2234766036272049, -0.2017623484134674, -0.17985349893569946, -0.15776874125003815, -0.13552771508693695, -0.11315098404884338, -0.09065988659858704, -0.06807646155357361, -0.04542328044772148, -0.022723359987139702, 0.0, 0.02221856452524662, 0.04441521689295769, 0.06656816601753235, 0.08865588158369064, 0.1106572225689888, 0.13255153596401215, 0.15431877970695496, 0.1759396195411682, 0.19739556312561035, 0.21866895258426666, 0.23974311351776123, 0.2606023848056793, 0.28123220801353455, 0.3016190528869629, 0.32175055146217346, 0.3416154980659485, 0.36120375990867615, 0.38050636649131775, 0.3995154798030853, 0.4182243347167969, 0.4366271495819092, 0.45471927523612976, 0.4724969267845154, 0.489957332611084, 0.5070984959602356, 0.5239193439483643, 0.5404195189476013, 0.5565993189811707, 0.5724598169326782, 0.588002622127533, 0.6032298803329468, 0.6181442141532898, 0.6327488422393799, 0.647047221660614, 0.6610431671142578, 0.6747409701347351, 0.6881449818611145, 0.7012599110603333, 0.7140907049179077, 0.726642370223999, 0.7389200329780579, 0.750929057598114, 0.7626748085021973, 0.7741627097129822, 0.7853981852531433, 0.79638671875, 0.8071338534355164, 0.8176450729370117, 0.8279256820678711, 0.8379812240600586, 0.8478169441223145, 0.8574382066726685, 0.8668501973152161, 0.876058042049408, 0.88506680727005, 0.8938814997673035, 0.9025068879127502, 0.9109479188919067, 0.9192091226577759, 0.9272952079772949, 0.935210645198822, 0.942959725856781, 0.9505468606948853, 0.9579761028289795, 0.9652516841888428, 0.9723774194717407, 0.9793573021888733, 0.9861950874328613, 0.9928944110870361, 0.9994588494300842, 1.0058919191360474, 1.0121970176696777, 1.018377423286438, 1.024436354637146, 1.0303767919540405, 1.0362019538879395, 1.0419148206710815, 1.047518014907837, 1.0530145168304443, 1.0584068298339844, 1.0636978149414062, 1.068889856338501, 1.0739855766296387, 1.0789871215820312, 1.0838971138000488, 1.0887175798416138, 1.093450903892517, 1.0980992317199707, 1.1026644706726074, 1.1071487665176392, 1.1115540266036987, 1.115882158279419, 1.120134949684143, 1.1243144273757935, 1.1284221410751343, 1.1324597597122192, 1.1364290714263916, 1.140331506729126, 1.1441688537597656, 1.1479424238204956, 1.15165376663208, 1.155304193496704, 1.1588952541351318, 1.1624282598495483, 1.1659045219421387, 1.1693252325057983, 1.172691822052002, 1.176005244255066, 1.1792668104171753, 1.182477593421936, 1.1856387853622437, 1.188751459121704, 1.1918166875839233, 1.1948354244232178, 1.1978086233139038, 1.2007373571395874, 1.2036224603652954, 1.2064650058746338, 1.2092658281326294, 1.2120256423950195, 1.2147455215454102, 1.2174261808395386, 1.220068335533142, 1.222672939300537, 1.225240707397461, 1.2277723550796509, 1.2302685976028442, -1.2327301502227783, -1.2302685976028442, -1.2277723550796509, -1.225240707397461, -1.222672939300537, -1.220068335533142, -1.2174261808395386, -1.2147455215454102, -1.2120256423950195, -1.2092658281326294, -1.2064650058746338, -1.2036224603652954, -1.2007373571395874, -1.1978086233139038, -1.1948354244232178, -1.1918166875839233, -1.188751459121704, -1.1856387853622437, -1.182477593421936, -1.1792668104171753, -1.176005244255066, -1.172691822052002, -1.1693252325057983, -1.1659045219421387, -1.1624282598495483, -1.1588952541351318, -1.155304193496704, -1.15165376663208, -1.1479424238204956, -1.1441688537597656, -1.140331506729126, -1.1364290714263916, -1.1324597597122192, -1.1284221410751343, -1.1243144273757935, -1.120134949684143, -1.115882158279419, -1.1115540266036987, -1.1071487665176392, -1.1026644706726074, -1.0980992317199707, -1.093450903892517, -1.0887175798416138, -1.0838971138000488, -1.0789871215820312, -1.0739855766296387, -1.068889856338501, -1.0636978149414062, -1.0584068298339844, -1.0530145168304443, -1.047518014907837, -1.0419148206710815, -1.0362019538879395, -1.0303767919540405, -1.024436354637146, -1.018377423286438, -1.0121970176696777, -1.0058919191360474, -0.9994588494300842, -0.9928944110870361, -0.9861950874328613, -0.9793573021888733, -0.9723774194717407, -0.9652516841888428, -0.9579761028289795, -0.9505468606948853, -0.942959725856781, -0.935210645198822, -0.9272952079772949, -0.9192091226577759, -0.9109479188919067, -0.9025068879127502, -0.8938814997673035, -0.88506680727005, -0.876058042049408, -0.8668501973152161, -0.8574382066726685, -0.8478169441223145, -0.8379812240600586, -0.8279256820678711, -0.8176450729370117, -0.8071338534355164, -0.79638671875, -0.7853981852531433, -0.7741627097129822, -0.7626748085021973, -0.750929057598114, -0.7389200329780579, -0.726642370223999, -0.7140907049179077, -0.7012599110603333, -0.6881449818611145, -0.6747409701347351, -0.6610431671142578, -0.647047221660614, -0.6327488422393799, -0.6181442141532898, -0.6032298803329468, -0.588002622127533, -0.5724598169326782, -0.5565993189811707, -0.5404195189476013, -0.5239193439483643, -0.5070984959602356, -0.489957332611084, -0.4724969267845154, -0.45471927523612976, -0.4366271495819092, -0.4182243347167969, -0.3995154798030853, -0.38050636649131775, -0.36120375990867615, -0.3416154980659485, -0.32175055146217346, -0.3016190528869629, -0.28123220801353455, -0.2606023848056793, -0.23974311351776123, -0.21866895258426666, -0.19739556312561035, -0.1759396195411682, -0.15431877970695496, -0.13255153596401215, -0.1106572225689888, -0.08865588158369064, -0.06656816601753235, -0.04441521689295769, -0.02221856452524662, 0.0, 0.02173570729792118, 0.04345089569687843, 0.06512515991926193, 0.08673834055662155, 0.10827059298753738, 0.12970253825187683, 0.15101534128189087, 0.1721908152103424, 0.19321148097515106, 0.2140606790781021, 0.23472261428833008, 0.2551823854446411, 0.27542608976364136, 0.29544082283973694, 0.31521469354629517, 0.33473682403564453, 0.35399743914604187, 0.3729877173900604, 0.3916999399662018, 0.41012734174728394, 0.42826414108276367, 0.4461055397987366, 0.46364760398864746, 0.4808872938156128, 0.4978223443031311, 0.5144513249397278, 0.5307735204696655, 0.5467888116836548, 0.5624979138374329, 0.5779019594192505, 0.5930025577545166, 0.6078019738197327, 0.6223028898239136, 0.6365082263946533, 0.6504214406013489, 0.6640461683273315, 0.677386462688446, 0.6904464364051819, 0.703230619430542, 0.7157436013221741, 0.7279900312423706, 0.739974856376648, 0.7517030835151672, 0.7631796002388, 0.7744095921516418, 0.7853981852531433, 0.7961504459381104, 0.8066715598106384, 0.8169665932655334, 0.8270407319068909, 0.8368989825248718, 0.8465463519096375, 0.8559877276420593, 0.8652281761169434, 0.874272346496582, 0.8831250667572021, 0.891791045665741, 0.9002747535705566, 0.9085808396339417, 0.9167135953903198, 0.9246774315834045, 0.9324765205383301, 0.9401150345802307, 0.9475969672203064, 0.9549263715744019, 0.9621070027351379, 0.9691426753997803, 0.9760370850563049, 0.9827937483787537, 0.9894161224365234, 0.995907723903656, 1.0022717714309692, 1.0085115432739258, 1.0146300792694092, 1.0206305980682373, 1.0265158414840698, 1.032288908958435, 1.0379524230957031, 1.0435092449188232, 1.0489619970321655, 1.0543133020401, 1.0595656633377075, 1.0647213459014893, 1.0697829723358154, 1.074752688407898, 1.0796327590942383, 1.0844253301620483, 1.0891326665878296, 1.0937566757202148, 1.0982993841171265, 1.1027628183364868, 1.1071487665176392, 1.1114590167999268, 1.1156954765319824, 1.1198599338531494, 1.1239538192749023, 1.127979040145874, 1.131937026977539, 1.1358293294906616, 1.1396576166152954, 1.143423080444336, 1.147127389907837, 1.1507718563079834, 1.154357671737671, 1.1578863859176636, 1.1613590717315674, 1.164777159690857, 1.1681417226791382, 1.171453833580017, 1.1747149229049683, 1.1779258251190186, 1.1810877323150635, 1.184201717376709, 1.187268853187561, 1.1902899742126465, 1.1932661533355713, 1.1961983442306519, 1.199087381362915, 1.2019342184066772, 1.2047398090362549, 1.2075048685073853, 1.2102303504943848, 1.2129169702529907, 1.2155654430389404, 1.2181767225265503, 1.220751404762268, 1.2232903242111206, -1.2257941961288452, -1.2232903242111206, -1.220751404762268, -1.2181767225265503, -1.2155654430389404, -1.2129169702529907, -1.2102303504943848, -1.2075048685073853, -1.2047398090362549, -1.2019342184066772, -1.199087381362915, -1.1961983442306519, -1.1932661533355713, -1.1902899742126465, -1.187268853187561, -1.184201717376709, -1.1810877323150635, -1.1779258251190186, -1.1747149229049683, -1.171453833580017, -1.1681417226791382, -1.164777159690857, -1.1613590717315674, -1.1578863859176636, -1.154357671737671, -1.1507718563079834, -1.147127389907837, -1.143423080444336, -1.1396576166152954, -1.1358293294906616, -1.131937026977539, -1.127979040145874, -1.1239538192749023, -1.1198599338531494, -1.1156954765319824, -1.1114590167999268, -1.1071487665176392, -1.1027628183364868, -1.0982993841171265, -1.0937566757202148, -1.0891326665878296, -1.0844253301620483, -1.0796327590942383, -1.074752688407898, -1.0697829723358154, -1.0647213459014893, -1.0595656633377075, -1.0543133020401, -1.0489619970321655, -1.0435092449188232, -1.0379524230957031, -1.032288908958435, -1.0265158414840698, -1.0206305980682373, -1.0146300792694092, -1.0085115432739258, -1.0022717714309692, -0.995907723903656, -0.9894161224365234, -0.9827937483787537, -0.9760370850563049, -0.9691426753997803, -0.9621070027351379, -0.9549263715744019, -0.9475969672203064, -0.9401150345802307, -0.9324765205383301, -0.9246774315834045, -0.9167135953903198, -0.9085808396339417, -0.9002747535705566, -0.891791045665741, -0.8831250667572021, -0.874272346496582, -0.8652281761169434, -0.8559877276420593, -0.8465463519096375, -0.8368989825248718, -0.8270407319068909, -0.8169665932655334, -0.8066715598106384, -0.7961504459381104, -0.7853981852531433, -0.7744095921516418, -0.7631796002388, -0.7517030835151672, -0.739974856376648, -0.7279900312423706, -0.7157436013221741, -0.703230619430542, -0.6904464364051819, -0.677386462688446, -0.6640461683273315, -0.6504214406013489, -0.6365082263946533, -0.6223028898239136, -0.6078019738197327, -0.5930025577545166, -0.5779019594192505, -0.5624979138374329, -0.5467888116836548, -0.5307735204696655, -0.5144513249397278, -0.4978223443031311, -0.4808872938156128, -0.46364760398864746, -0.4461055397987366, -0.42826414108276367, -0.41012734174728394, -0.3916999399662018, -0.3729877173900604, -0.35399743914604187, -0.33473682403564453, -0.31521469354629517, -0.29544082283973694, -0.27542608976364136, -0.2551823854446411, -0.23472261428833008, -0.2140606790781021, -0.19321148097515106, -0.1721908152103424, -0.15101534128189087, -0.12970253825187683, -0.10827059298753738, -0.08673834055662155, -0.06512515991926193, -0.04345089569687843, -0.02173570729792118, 0.0, 0.021273385733366013, 0.04252753406763077, 0.06374331563711166, 0.08490179479122162, 0.10598435997962952, 0.12697279453277588, 0.14784936606884003, 0.16859693825244904, 0.18919901549816132, 0.20963984727859497, 0.2299044281244278, 0.24997861683368683, 0.26984915137290955, 0.28950366377830505, 0.30893075466156006, 0.3281199038028717, 0.3470616042613983, 0.3657473027706146, 0.3841693699359894, 0.40232110023498535, 0.4201967120170593, 0.4377913177013397, 0.45510080456733704, 0.4721219837665558, 0.4888523519039154, 0.5052902102470398, 0.5214344263076782, 0.5372847318649292, 0.5528412461280823, 0.5681047439575195, 0.583076536655426, 0.597758412361145, 0.6121525168418884, 0.6262614130973816, 0.6400881409645081, 0.6536359190940857, 0.6669082045555115, 0.6799088716506958, 0.6926418542861938, 0.7051113247871399, 0.7173216938972473, 0.7292773723602295, 0.7409829497337341, 0.7524430751800537, 0.7636624574661255, 0.7746458649635315, 0.7853981852531433, 0.7959240674972534, 0.8062284588813782, 0.8163161277770996, 0.8261918425559998, 0.8358603119850159, 0.84532630443573, 0.8545944690704346, 0.8636692762374878, 0.8725554347038269, 0.8812572956085205, 0.8897793292999268, 0.8981257677078247, 0.9063009023666382, 0.9143089056015015, 0.922153890132904, 0.9298397302627563, 0.9373704195022583, 0.9447498321533203, 0.9519815444946289, 0.9590693712234497, 0.9660167694091797, 0.9728272557258606, 0.9795042872428894, 0.9860510230064392, 0.9924708604812622, 0.9987667798995972, 1.0049419403076172, 1.0109994411468506, 1.0169419050216675, 1.0227724313735962, 1.0284936428070068, 1.0341081619262695, 1.039618730545044, 1.0450278520584106, 1.0503379106521606, 1.0555514097213745, 1.0606706142425537, 1.0656977891921997, 1.0706353187561035, 1.075485110282898, 1.0802494287490845, 1.084930181503296, 1.0895293951034546, 1.0940489768981934, 1.0984909534454346, 1.1028568744659424, 1.1071487665176392, 1.1113680601119995, 1.1155167818069458, 1.119596242904663, 1.123608112335205, 1.1275540590286255, 1.1314353942871094, 1.1352537870407104, 1.1390104293823242, 1.1427068710327148, 1.1463443040847778, 1.1499241590499878, 1.1534476280212402, 1.1569160223007202, 1.1603304147720337, 1.1636921167373657, 1.1670022010803223, 1.1702618598937988, 1.1734719276428223, 1.1766337156295776, 1.1797481775283813, 1.1828162670135498, 1.1858389377593994, 1.1888171434402466, 1.1917519569396973, 1.1946440935134888, 1.197494387626648, 1.2003039121627808, 1.2030733823776245, 1.2058035135269165, 1.2084952592849731, 1.2111492156982422, 1.21376633644104, 1.216347098350525, -1.2188924551010132, -1.216347098350525, -1.21376633644104, -1.2111492156982422, -1.2084952592849731, -1.2058035135269165, -1.2030733823776245, -1.2003039121627808, -1.197494387626648, -1.1946440935134888, -1.1917519569396973, -1.1888171434402466, -1.1858389377593994, -1.1828162670135498, -1.1797481775283813, -1.1766337156295776, -1.1734719276428223, -1.1702618598937988, -1.1670022010803223, -1.1636921167373657, -1.1603304147720337, -1.1569160223007202, -1.1534476280212402, -1.1499241590499878, -1.1463443040847778, -1.1427068710327148, -1.1390104293823242, -1.1352537870407104, -1.1314353942871094, -1.1275540590286255, -1.123608112335205, -1.119596242904663, -1.1155167818069458, -1.1113680601119995, -1.1071487665176392, -1.1028568744659424, -1.0984909534454346, -1.0940489768981934, -1.0895293951034546, -1.084930181503296, -1.0802494287490845, -1.075485110282898, -1.0706353187561035, -1.0656977891921997, -1.0606706142425537, -1.0555514097213745, -1.0503379106521606, -1.0450278520584106, -1.039618730545044, -1.0341081619262695, -1.0284936428070068, -1.0227724313735962, -1.0169419050216675, -1.0109994411468506, -1.0049419403076172, -0.9987667798995972, -0.9924708604812622, -0.9860510230064392, -0.9795042872428894, -0.9728272557258606, -0.9660167694091797, -0.9590693712234497, -0.9519815444946289, -0.9447498321533203, -0.9373704195022583, -0.9298397302627563, -0.922153890132904, -0.9143089056015015, -0.9063009023666382, -0.8981257677078247, -0.8897793292999268, -0.8812572956085205, -0.8725554347038269, -0.8636692762374878, -0.8545944690704346, -0.84532630443573, -0.8358603119850159, -0.8261918425559998, -0.8163161277770996, -0.8062284588813782, -0.7959240674972534, -0.7853981852531433, -0.7746458649635315, -0.7636624574661255, -0.7524430751800537, -0.7409829497337341, -0.7292773723602295, -0.7173216938972473, -0.7051113247871399, -0.6926418542861938, -0.6799088716506958, -0.6669082045555115, -0.6536359190940857, -0.6400881409645081, -0.6262614130973816, -0.6121525168418884, -0.597758412361145, -0.583076536655426, -0.5681047439575195, -0.5528412461280823, -0.5372847318649292, -0.5214344263076782, -0.5052902102470398, -0.4888523519039154, -0.4721219837665558, -0.45510080456733704, -0.4377913177013397, -0.4201967120170593, -0.40232110023498535, -0.3841693699359894, -0.3657473027706146, -0.3470616042613983, -0.3281199038028717, -0.30893075466156006, -0.28950366377830505, -0.26984915137290955, -0.24997861683368683, -0.2299044281244278, -0.20963984727859497, -0.18919901549816132, -0.16859693825244904, -0.14784936606884003, -0.12697279453277588, -0.10598435997962952, -0.08490179479122162, -0.06374331563711166, -0.04252753406763077, -0.021273385733366013, 0.0, 0.020830320194363594, 0.041642580181360245, 0.06241881102323532, 0.08314123004674911, 0.10379233956336975, 0.12435499578714371, 0.14481249451637268, 0.16514867544174194, 0.18534794449806213, 0.2053953856229782, 0.22527678310871124, 0.244978666305542, 0.2644883692264557, 0.283794105052948, 0.30288487672805786, 0.32175055146217346, 0.3403819501399994, 0.3587706685066223, 0.3769092559814453, 0.3947911262512207, 0.4124104380607605, 0.4297622740268707, 0.4468424618244171, 0.46364760398864746, 0.4801750183105469, 0.49642276763916016, 0.5123894810676575, 0.5280744433403015, 0.5434775948524475, 0.5585992932319641, 0.5734405517578125, 0.588002622127533, 0.6022873520851135, 0.6162969470024109, 0.6300339102745056, 0.6435011029243469, 0.6567016839981079, 0.6696389317512512, 0.6823165416717529, 0.6947382688522339, 0.7069080471992493, 0.7188299894332886, 0.7305083274841309, 0.7419472932815552, 0.7531512975692749, 0.7641247510910034, 0.7748722434043884, 0.7853981852531433, 0.7957070469856262, 0.8058034777641296, 0.8156919479370117, 0.8253768682479858, 0.8348627090454102, 0.8441540002822876, 0.8532549738883972, 0.8621700406074524, 0.8709034323692322, 0.8794593811035156, 0.8878419995307922, 0.8960554003715515, 0.9041035175323486, 0.9119902849197388, 0.9197195768356323, 0.9272952079772949, 0.9347208142280579, 0.9420000314712524, 0.9491363763809204, 0.9561333656311035, 0.9629943370819092, 0.9697225689888, 0.9763213396072388, 0.9827937483787537, 0.9891428351402283, 0.9953716993331909, 1.0014830827713013, 1.0074800252914429, 1.0133652687072754, 1.0191413164138794, 1.024811029434204, 1.0303767919540405, 1.0358412265777588, 1.04120671749115, 1.0464756488800049, 1.0516501665115356, 1.0567327737808228, 1.0617254972457886, 1.0666303634643555, 1.071449637413025, 1.0761851072311401, 1.0808390378952026, 1.0854129791259766, 1.0899090766906738, 1.0943288803100586, 1.0986742973327637, 1.1029471158981323, 1.1071487665176392, 1.111280918121338, 1.1153452396392822, 1.1193432807922363, 1.1232763528823853, 1.1271460056304932, 1.1309537887573242, 1.1347007751464844, 1.1383885145187378, 1.1420183181762695, 1.1455912590026855, 1.1491087675094604, 1.1525720357894897, 1.1559820175170898, 1.1593400239944458, 1.1626472473144531, 1.1659045219421387, 1.169113039970398, 1.172273874282837, 1.175387978553772, 1.17845618724823, 1.181479573249817, 1.1844590902328491, 1.1873955726623535, 1.1902899742126465, 1.1931430101394653, 1.1959556341171265, 1.1987285614013672, 1.2014626264572144, 1.2041586637496948, 1.206817388534546, 1.2094393968582153, -1.2120256423950195, -1.2094393968582153, -1.206817388534546, -1.2041586637496948, -1.2014626264572144, -1.1987285614013672, -1.1959556341171265, -1.1931430101394653, -1.1902899742126465, -1.1873955726623535, -1.1844590902328491, -1.181479573249817, -1.17845618724823, -1.175387978553772, -1.172273874282837, -1.169113039970398, -1.1659045219421387, -1.1626472473144531, -1.1593400239944458, -1.1559820175170898, -1.1525720357894897, -1.1491087675094604, -1.1455912590026855, -1.1420183181762695, -1.1383885145187378, -1.1347007751464844, -1.1309537887573242, -1.1271460056304932, -1.1232763528823853, -1.1193432807922363, -1.1153452396392822, -1.111280918121338, -1.1071487665176392, -1.1029471158981323, -1.0986742973327637, -1.0943288803100586, -1.0899090766906738, -1.0854129791259766, -1.0808390378952026, -1.0761851072311401, -1.071449637413025, -1.0666303634643555, -1.0617254972457886, -1.0567327737808228, -1.0516501665115356, -1.0464756488800049, -1.04120671749115, -1.0358412265777588, -1.0303767919540405, -1.024811029434204, -1.0191413164138794, -1.0133652687072754, -1.0074800252914429, -1.0014830827713013, -0.9953716993331909, -0.9891428351402283, -0.9827937483787537, -0.9763213396072388, -0.9697225689888, -0.9629943370819092, -0.9561333656311035, -0.9491363763809204, -0.9420000314712524, -0.9347208142280579, -0.9272952079772949, -0.9197195768356323, -0.9119902849197388, -0.9041035175323486, -0.8960554003715515, -0.8878419995307922, -0.8794593811035156, -0.8709034323692322, -0.8621700406074524, -0.8532549738883972, -0.8441540002822876, -0.8348627090454102, -0.8253768682479858, -0.8156919479370117, -0.8058034777641296, -0.7957070469856262, -0.7853981852531433, -0.7748722434043884, -0.7641247510910034, -0.7531512975692749, -0.7419472932815552, -0.7305083274841309, -0.7188299894332886, -0.7069080471992493, -0.6947382688522339, -0.6823165416717529, -0.6696389317512512, -0.6567016839981079, -0.6435011029243469, -0.6300339102745056, -0.6162969470024109, -0.6022873520851135, -0.588002622127533, -0.5734405517578125, -0.5585992932319641, -0.5434775948524475, -0.5280744433403015, -0.5123894810676575, -0.49642276763916016, -0.4801750183105469, -0.46364760398864746, -0.4468424618244171, -0.4297622740268707, -0.4124104380607605, -0.3947911262512207, -0.3769092559814453, -0.3587706685066223, -0.3403819501399994, -0.32175055146217346, -0.30288487672805786, -0.283794105052948, -0.2644883692264557, -0.244978666305542, -0.22527678310871124, -0.2053953856229782, -0.18534794449806213, -0.16514867544174194, -0.14481249451637268, -0.12435499578714371, -0.10379233956336975, -0.08314123004674911, -0.06241881102323532, -0.041642580181360245, -0.020830320194363594, 0.0, 0.020405329763889313, 0.040793683379888535, 0.06114816293120384, 0.08145204186439514, 0.10168885439634323, 0.12184243649244308, 0.141897052526474, 0.16183742880821228, 0.1816488355398178, 0.20131710171699524, 0.22082877159118652, 0.24017101526260376, 0.25933173298835754, 0.2782996594905853, 0.2970642149448395, 0.3156156539916992, 0.33394506573677063, 0.35204431414604187, 0.36990606784820557, 0.3875238001346588, 0.4048917889595032, 0.4220050275325775, 0.43885931372642517, 0.4554510712623596, 0.4717774987220764, 0.48783645033836365, 0.50362628698349, 0.5191460847854614, 0.5343954563140869, 0.5493744611740112, 0.5640836954116821, 0.5785242319107056, 0.5926973819732666, 0.6066051125526428, 0.6202495098114014, 0.633633017539978, 0.6467584371566772, 0.6596287488937378, 0.6722471714019775, 0.6846171617507935, 0.6967422962188721, 0.7086262702941895, 0.7202730178833008, 0.7316864132881165, 0.7428706288337708, 0.7538297176361084, 0.7645678520202637, 0.7750892639160156, 0.7853981852531433, 0.7954988479614258, 0.8053954839706421, 0.8150923848152161, 0.8245937824249268, 0.8339037895202637, 0.8430265784263611, 0.8519663214683533, 0.860727071762085, 0.8693127632141113, 0.8777275085449219, 0.8859750628471375, 0.8940593600273132, 0.9019841551780701, 0.909753143787384, 0.9173699617385864, 0.9248382449150085, 0.9321613311767578, 0.9393428564071655, 0.9463859796524048, 0.9532940983772278, 0.9600703716278076, 0.9667179584503174, 0.9732398986816406, 0.9796391725540161, 0.9859187006950378, 0.9920814037322998, 0.9981299638748169, 1.004067063331604, 1.0098955631256104, 1.0156177282333374, 1.0212363004684448, 1.0267536640167236, 1.0321722030639648, 1.03749418258667, 1.0427218675613403, 1.0478575229644775, 1.0529032945632935, 1.057861328125, 1.06273353099823, 1.0675219297409058, 1.0722284317016602, 1.076854944229126, 1.081403374671936, 1.0858752727508545, 1.0902726650238037, 1.0945971012115479, 1.098850131034851, 1.1030335426330566, 1.1071487665176392, 1.1111972332000732, 1.1151807308197021, 1.1191003322601318, 1.122957706451416, 1.1267540454864502, 1.130490779876709, 1.1341692209243774, 1.1377904415130615, 1.1413558721542358, 1.144866704940796, 1.148323893547058, 1.151728868484497, 1.1550824642181396, 1.1583858728408813, 1.1616401672363281, 1.1648463010787964, 1.168005347251892, 1.1711182594299316, 1.174185872077942, 1.1772092580795288, 1.1801892518997192, 1.1831268072128296, 1.1860225200653076, 1.1888774633407593, 1.1916924715042114, 1.1944681406021118, 1.1972054243087769, 1.1999050378799438, 1.20256769657135, -1.2051939964294434, -1.20256769657135, -1.1999050378799438, -1.1972054243087769, -1.1944681406021118, -1.1916924715042114, -1.1888774633407593, -1.1860225200653076, -1.1831268072128296, -1.1801892518997192, -1.1772092580795288, -1.174185872077942, -1.1711182594299316, -1.168005347251892, -1.1648463010787964, -1.1616401672363281, -1.1583858728408813, -1.1550824642181396, -1.151728868484497, -1.148323893547058, -1.144866704940796, -1.1413558721542358, -1.1377904415130615, -1.1341692209243774, -1.130490779876709, -1.1267540454864502, -1.122957706451416, -1.1191003322601318, -1.1151807308197021, -1.1111972332000732, -1.1071487665176392, -1.1030335426330566, -1.098850131034851, -1.0945971012115479, -1.0902726650238037, -1.0858752727508545, -1.081403374671936, -1.076854944229126, -1.0722284317016602, -1.0675219297409058, -1.06273353099823, -1.057861328125, -1.0529032945632935, -1.0478575229644775, -1.0427218675613403, -1.03749418258667, -1.0321722030639648, -1.0267536640167236, -1.0212363004684448, -1.0156177282333374, -1.0098955631256104, -1.004067063331604, -0.9981299638748169, -0.9920814037322998, -0.9859187006950378, -0.9796391725540161, -0.9732398986816406, -0.9667179584503174, -0.9600703716278076, -0.9532940983772278, -0.9463859796524048, -0.9393428564071655, -0.9321613311767578, -0.9248382449150085, -0.9173699617385864, -0.909753143787384, -0.9019841551780701, -0.8940593600273132, -0.8859750628471375, -0.8777275085449219, -0.8693127632141113, -0.860727071762085, -0.8519663214683533, -0.8430265784263611, -0.8339037895202637, -0.8245937824249268, -0.8150923848152161, -0.8053954839706421, -0.7954988479614258, -0.7853981852531433, -0.7750892639160156, -0.7645678520202637, -0.7538297176361084, -0.7428706288337708, -0.7316864132881165, -0.7202730178833008, -0.7086262702941895, -0.6967422962188721, -0.6846171617507935, -0.6722471714019775, -0.6596287488937378, -0.6467584371566772, -0.633633017539978, -0.6202495098114014, -0.6066051125526428, -0.5926973819732666, -0.5785242319107056, -0.5640836954116821, -0.5493744611740112, -0.5343954563140869, -0.5191460847854614, -0.50362628698349, -0.48783645033836365, -0.4717774987220764, -0.4554510712623596, -0.43885931372642517, -0.4220050275325775, -0.4048917889595032, -0.3875238001346588, -0.36990606784820557, -0.35204431414604187, -0.33394506573677063, -0.3156156539916992, -0.2970642149448395, -0.2782996594905853, -0.25933173298835754, -0.24017101526260376, -0.22082877159118652, -0.20131710171699524, -0.1816488355398178, -0.16183742880821228, -0.141897052526474, -0.12184243649244308, -0.10168885439634323, -0.08145204186439514, -0.06114816293120384, -0.040793683379888535, -0.020405329763889313, 0.0, 0.019997334107756615, 0.03997868672013283, 0.059928156435489655, 0.07982998341321945, 0.09966865181922913, 0.11942892521619797, 0.1390959471464157, 0.15865525603294373, 0.17809294164180756, 0.19739556312561035, 0.2165503054857254, 0.23554497957229614, 0.2543680667877197, 0.27300870418548584, 0.29145678877830505, 0.30970293283462524, 0.327738493680954, 0.3455555737018585, 0.3631470203399658, 0.38050636649131775, 0.39762797951698303, 0.4145068824291229, 0.4311387538909912, 0.447519987821579, 0.46364760398864746, 0.4795192778110504, 0.49513325095176697, 0.5104883313179016, 0.525583803653717, 0.5404195189476013, 0.5549957156181335, 0.5693131685256958, 0.5833730101585388, 0.5971766710281372, 0.6107259392738342, 0.6240230798721313, 0.63707035779953, 0.6498704552650452, 0.6624262928962708, 0.6747409701347351, 0.6868176460266113, 0.6986598372459412, 0.7102710008621216, 0.7216548323631287, 0.7328150868415833, 0.743755578994751, 0.7544801831245422, 0.7649928331375122, 0.7752975225448608, 0.7853981852531433, 0.7952988147735596, 0.8050035238265991, 0.8145161271095276, 0.8238407373428345, 0.832981288433075, 0.8419415950775146, 0.8507256507873535, 0.8593372106552124, 0.8677800893783569, 0.876058042049408, 0.8841747641563416, 0.8921338319778442, 0.8999388813972473, 0.907593309879303, 0.9151006937026978, 0.9224643111228943, 0.9296875596046448, 0.9367735981941223, 0.9437256455421448, 0.9505468606948853, 0.9572401642799377, 0.9638086557388306, 0.9702551960945129, 0.9765826463699341, 0.9827937483787537, 0.9888911843299866, 0.9948777556419373, 1.0007559061050415, 1.0065281391143799, 1.0121970176696777, 1.017764925956726, 1.0232341289520264, 1.02860689163208, 1.0338855981826782, 1.0390722751617432, 1.0441690683364868, 1.0491780042648315, 1.0541012287139893, 1.0589405298233032, 1.0636978149414062, 1.0683751106262207, 1.0729739665985107, 1.0774964094161987, 1.0819439888000488, 1.0863183736801147, 1.0906213521957397, 1.0948542356491089, 1.0990188121795654, 1.103116512298584, 1.1071487665176392, 1.1111170053482056, 1.1150225400924683, 1.1188669204711914, 1.1226513385772705, 1.1263771057128906, 1.1300455331802368, 1.133657693862915, 1.1372148990631104, 1.1407182216644287, 1.1441688537597656, 1.147567868232727, 1.150916337966919, 1.1542153358459473, 1.157465934753418, 1.160668969154358, 1.163825511932373, 1.1669365167617798, 1.1700029373168945, 1.1730254888534546, 1.176005244255066, 1.1789429187774658, 1.1818394660949707, 1.1846956014633179, 1.1875121593475342, 1.1902899742126465, 1.1930296421051025, 1.1957321166992188, -1.1983978748321533, -1.1957321166992188, -1.1930296421051025, -1.1902899742126465, -1.1875121593475342, -1.1846956014633179, -1.1818394660949707, -1.1789429187774658, -1.176005244255066, -1.1730254888534546, -1.1700029373168945, -1.1669365167617798, -1.163825511932373, -1.160668969154358, -1.157465934753418, -1.1542153358459473, -1.150916337966919, -1.147567868232727, -1.1441688537597656, -1.1407182216644287, -1.1372148990631104, -1.133657693862915, -1.1300455331802368, -1.1263771057128906, -1.1226513385772705, -1.1188669204711914, -1.1150225400924683, -1.1111170053482056, -1.1071487665176392, -1.103116512298584, -1.0990188121795654, -1.0948542356491089, -1.0906213521957397, -1.0863183736801147, -1.0819439888000488, -1.0774964094161987, -1.0729739665985107, -1.0683751106262207, -1.0636978149414062, -1.0589405298233032, -1.0541012287139893, -1.0491780042648315, -1.0441690683364868, -1.0390722751617432, -1.0338855981826782, -1.02860689163208, -1.0232341289520264, -1.017764925956726, -1.0121970176696777, -1.0065281391143799, -1.0007559061050415, -0.9948777556419373, -0.9888911843299866, -0.9827937483787537, -0.9765826463699341, -0.9702551960945129, -0.9638086557388306, -0.9572401642799377, -0.9505468606948853, -0.9437256455421448, -0.9367735981941223, -0.9296875596046448, -0.9224643111228943, -0.9151006937026978, -0.907593309879303, -0.8999388813972473, -0.8921338319778442, -0.8841747641563416, -0.876058042049408, -0.8677800893783569, -0.8593372106552124, -0.8507256507873535, -0.8419415950775146, -0.832981288433075, -0.8238407373428345, -0.8145161271095276, -0.8050035238265991, -0.7952988147735596, -0.7853981852531433, -0.7752975225448608, -0.7649928331375122, -0.7544801831245422, -0.743755578994751, -0.7328150868415833, -0.7216548323631287, -0.7102710008621216, -0.6986598372459412, -0.6868176460266113, -0.6747409701347351, -0.6624262928962708, -0.6498704552650452, -0.63707035779953, -0.6240230798721313, -0.6107259392738342, -0.5971766710281372, -0.5833730101585388, -0.5693131685256958, -0.5549957156181335, -0.5404195189476013, -0.525583803653717, -0.5104883313179016, -0.49513325095176697, -0.4795192778110504, -0.46364760398864746, -0.447519987821579, -0.4311387538909912, -0.4145068824291229, -0.39762797951698303, -0.38050636649131775, -0.3631470203399658, -0.3455555737018585, -0.327738493680954, -0.30970293283462524, -0.29145678877830505, -0.27300870418548584, -0.2543680667877197, -0.23554497957229614, -0.2165503054857254, -0.19739556312561035, -0.17809294164180756, -0.15865525603294373, -0.1390959471464157, -0.11942892521619797, -0.09966865181922913, -0.07982998341321945, -0.059928156435489655, -0.03997868672013283, -0.019997334107756615, 0.0, 0.019605331122875214, 0.039195600897073746, 0.058755822479724884, 0.07827114313840866, 0.09772690385580063, 0.11710874736309052, 0.13640260696411133, 0.1555948257446289, 0.1746722012758255, 0.19362199306488037, 0.21243202686309814, 0.23109066486358643, 0.24958692491054535, 0.2679104208946228, 0.2860514521598816, 0.30400094389915466, 0.32175055146217346, 0.33929261565208435, 0.3566201329231262, 0.37372681498527527, 0.3906070291996002, 0.4072558581829071, 0.42366892099380493, 0.4398425817489624, 0.4557737708091736, 0.4714599549770355, 0.4868992269039154, 0.5020902156829834, 0.5170319676399231, 0.5317240953445435, 0.5461665391921997, 0.5603598952293396, 0.5743048191070557, 0.588002622127533, 0.6014547348022461, 0.6146629452705383, 0.6276293992996216, 0.6403564810752869, 0.65284663438797, 0.6651026606559753, 0.6771275997161865, 0.6889243721961975, 0.7004963755607605, 0.7118468880653381, 0.7229793667793274, 0.73389732837677, 0.7446044683456421, 0.7551044225692749, 0.7654008269309998, 0.7754974961280823, 0.7853981852531433, 0.7951065897941589, 0.8046265840530396, 0.8139618039131165, 0.8231161236763, 0.8320931792259216, 0.8408966660499573, 0.8495302796363831, 0.8579975962638855, 0.8663022518157959, 0.874447762966156, 0.882437527179718, 0.8902751207351685, 0.8979637622833252, 0.9055069088935852, 0.9129077196121216, 0.920169472694397, 0.9272952079772949, 0.9342880845069885, 0.9411511421203613, 0.9478873014450073, 0.954499363899231, 0.960990309715271, 0.9673628211021423, 0.9736196398735046, 0.9797634482383728, 0.9857966899871826, 0.991722047328949, 0.9975419044494629, 1.0032587051391602, 1.008874773979187, 1.014392375946045, 1.019813895225525, 1.0251412391662598, 1.0303767919540405, 1.0355225801467896, 1.0405805110931396, 1.0455527305603027, 1.050441026687622, 1.0552473068237305, 1.0599734783172607, 1.0646212100982666, 1.0691922903060913, 1.0736883878707886, 1.0781112909317017, 1.0824624300003052, 1.0867433547973633, 1.0909558534622192, 1.0951011180877686, 1.099180817604065, 1.103196144104004, 1.1071487665176392, 1.1110397577285767, 1.114870548248291, 1.1186424493789673, 1.122356653213501, 1.1260143518447876, 1.1296168565750122, 1.1331651210784912, 1.1366604566574097, 1.140103816986084, 1.1434963941574097, 1.1468390226364136, 1.1501330137252808, 1.1533790826797485, 1.1565784215927124, 1.1597317457199097, 1.1628402471542358, 1.1659045219421387, 1.1689256429672241, 1.171904444694519, 1.1748417615890503, 1.1777383089065552, 1.1805949211120605, 1.1834124326705933, 1.1861915588378906, 1.1889331340789795, -1.191637635231018, -1.1889331340789795, -1.1861915588378906, -1.1834124326705933, -1.1805949211120605, -1.1777383089065552, -1.1748417615890503, -1.171904444694519, -1.1689256429672241, -1.1659045219421387, -1.1628402471542358, -1.1597317457199097, -1.1565784215927124, -1.1533790826797485, -1.1501330137252808, -1.1468390226364136, -1.1434963941574097, -1.140103816986084, -1.1366604566574097, -1.1331651210784912, -1.1296168565750122, -1.1260143518447876, -1.122356653213501, -1.1186424493789673, -1.114870548248291, -1.1110397577285767, -1.1071487665176392, -1.103196144104004, -1.099180817604065, -1.0951011180877686, -1.0909558534622192, -1.0867433547973633, -1.0824624300003052, -1.0781112909317017, -1.0736883878707886, -1.0691922903060913, -1.0646212100982666, -1.0599734783172607, -1.0552473068237305, -1.050441026687622, -1.0455527305603027, -1.0405805110931396, -1.0355225801467896, -1.0303767919540405, -1.0251412391662598, -1.019813895225525, -1.014392375946045, -1.008874773979187, -1.0032587051391602, -0.9975419044494629, -0.991722047328949, -0.9857966899871826, -0.9797634482383728, -0.9736196398735046, -0.9673628211021423, -0.960990309715271, -0.954499363899231, -0.9478873014450073, -0.9411511421203613, -0.9342880845069885, -0.9272952079772949, -0.920169472694397, -0.9129077196121216, -0.9055069088935852, -0.8979637622833252, -0.8902751207351685, -0.882437527179718, -0.874447762966156, -0.8663022518157959, -0.8579975962638855, -0.8495302796363831, -0.8408966660499573, -0.8320931792259216, -0.8231161236763, -0.8139618039131165, -0.8046265840530396, -0.7951065897941589, -0.7853981852531433, -0.7754974961280823, -0.7654008269309998, -0.7551044225692749, -0.7446044683456421, -0.73389732837677, -0.7229793667793274, -0.7118468880653381, -0.7004963755607605, -0.6889243721961975, -0.6771275997161865, -0.6651026606559753, -0.65284663438797, -0.6403564810752869, -0.6276293992996216, -0.6146629452705383, -0.6014547348022461, -0.588002622127533, -0.5743048191070557, -0.5603598952293396, -0.5461665391921997, -0.5317240953445435, -0.5170319676399231, -0.5020902156829834, -0.4868992269039154, -0.4714599549770355, -0.4557737708091736, -0.4398425817489624, -0.42366892099380493, -0.4072558581829071, -0.3906070291996002, -0.37372681498527527, -0.3566201329231262, -0.33929261565208435, -0.32175055146217346, -0.30400094389915466, -0.2860514521598816, -0.2679104208946228, -0.24958692491054535, -0.23109066486358643, -0.21243202686309814, -0.19362199306488037, -0.1746722012758255, -0.1555948257446289, -0.13640260696411133, -0.11710874736309052, -0.09772690385580063, -0.07827114313840866, -0.058755822479724884, -0.039195600897073746, -0.019605331122875214, 0.0, 0.01922839879989624, 0.03844258934259415, 0.05762842670083046, 0.07677189260721207, 0.09585914760828018, 0.11487660557031631, 0.13381098210811615, 0.15264932811260223, 0.17137911915779114, 0.18998828530311584, 0.20846521854400635, 0.22679884731769562, 0.244978666305542, 0.2629947364330292, 0.2808377146720886, 0.2984989285469055, 0.3159702718257904, 0.33324429392814636, 0.350314199924469, 0.36717382073402405, 0.3838176131248474, 0.4002406597137451, 0.41643860936164856, 0.43240776658058167, 0.44814497232437134, 0.46364760398864746, 0.4789136052131653, 0.49394136667251587, 0.5087298154830933, 0.5232782959938049, 0.5375866293907166, 0.5516549944877625, 0.5654838681221008, 0.5790742635726929, 0.5924273729324341, 0.6055446863174438, 0.6184279918670654, 0.631079375743866, 0.6435011029243469, 0.6556956171989441, 0.6676656007766724, 0.6794137954711914, 0.6909432411193848, 0.7022569179534912, 0.7133581042289734, 0.7242500185966492, 0.734935998916626, 0.7454195022583008, 0.7557039260864258, 0.7657928466796875, 0.7756897211074829, 0.7853981852531433, 0.7949216961860657, 0.8042638301849365, 0.8134282231330872, 0.8224182724952698, 0.8312376141548157, 0.839889645576477, 0.8483778238296509, 0.8567056059837341, 0.864876389503479, 0.8728935122489929, 0.8807601928710938, 0.8884797692298889, 0.8960554003715515, 0.9034901857376099, 0.9107872843742371, 0.9179496765136719, 0.9249804019927979, 0.9318823218345642, 0.9386583566665649, 0.9453113079071045, 0.9518438577651978, 0.9582587480545044, 0.9645586609840393, 0.9707460999488831, 0.976823627948761, 0.9827937483787537, 0.9886587858200073, 0.994421124458313, 1.000083088874817, 1.0056469440460205, 1.0111147165298462, 1.016488790512085, 1.0217711925506592, 1.0269638299942017, 1.0320688486099243, 1.03708815574646, 1.0420235395431519, 1.0468770265579224, 1.0516501665115356, 1.056344985961914, 1.0609631538391113, 1.065506100654602, 1.069975733757019, 1.0743736028671265, 1.078701138496399, 1.0829598903656006, 1.0871514081954956, 1.091277003288269, 1.095338225364685, 1.0993363857269287, 1.103272795677185, 1.1071487665176392, 1.1109654903411865, 1.1147242784500122, 1.1184264421463013, 1.1220729351043701, 1.1256650686264038, 1.1292039155960083, 1.1326905488967896, 1.136126160621643, 1.1395114660263062, 1.1428477764129639, 1.1461360454559326, 1.1493771076202393, 1.1525720357894897, 1.1557215452194214, 1.1588268280029297, 1.1618884801864624, 1.1649075746536255, 1.1678847074508667, 1.170820951461792, 1.1737169027328491, 1.176573395729065, 1.1793911457061768, 1.182171106338501, -1.1849136352539062, -1.182171106338501, -1.1793911457061768, -1.176573395729065, -1.1737169027328491, -1.170820951461792, -1.1678847074508667, -1.1649075746536255, -1.1618884801864624, -1.1588268280029297, -1.1557215452194214, -1.1525720357894897, -1.1493771076202393, -1.1461360454559326, -1.1428477764129639, -1.1395114660263062, -1.136126160621643, -1.1326905488967896, -1.1292039155960083, -1.1256650686264038, -1.1220729351043701, -1.1184264421463013, -1.1147242784500122, -1.1109654903411865, -1.1071487665176392, -1.103272795677185, -1.0993363857269287, -1.095338225364685, -1.091277003288269, -1.0871514081954956, -1.0829598903656006, -1.078701138496399, -1.0743736028671265, -1.069975733757019, -1.065506100654602, -1.0609631538391113, -1.056344985961914, -1.0516501665115356, -1.0468770265579224, -1.0420235395431519, -1.03708815574646, -1.0320688486099243, -1.0269638299942017, -1.0217711925506592, -1.016488790512085, -1.0111147165298462, -1.0056469440460205, -1.000083088874817, -0.994421124458313, -0.9886587858200073, -0.9827937483787537, -0.976823627948761, -0.9707460999488831, -0.9645586609840393, -0.9582587480545044, -0.9518438577651978, -0.9453113079071045, -0.9386583566665649, -0.9318823218345642, -0.9249804019927979, -0.9179496765136719, -0.9107872843742371, -0.9034901857376099, -0.8960554003715515, -0.8884797692298889, -0.8807601928710938, -0.8728935122489929, -0.864876389503479, -0.8567056059837341, -0.8483778238296509, -0.839889645576477, -0.8312376141548157, -0.8224182724952698, -0.8134282231330872, -0.8042638301849365, -0.7949216961860657, -0.7853981852531433, -0.7756897211074829, -0.7657928466796875, -0.7557039260864258, -0.7454195022583008, -0.734935998916626, -0.7242500185966492, -0.7133581042289734, -0.7022569179534912, -0.6909432411193848, -0.6794137954711914, -0.6676656007766724, -0.6556956171989441, -0.6435011029243469, -0.631079375743866, -0.6184279918670654, -0.6055446863174438, -0.5924273729324341, -0.5790742635726929, -0.5654838681221008, -0.5516549944877625, -0.5375866293907166, -0.5232782959938049, -0.5087298154830933, -0.49394136667251587, -0.4789136052131653, -0.46364760398864746, -0.44814497232437134, -0.43240776658058167, -0.41643860936164856, -0.4002406597137451, -0.3838176131248474, -0.36717382073402405, -0.350314199924469, -0.33324429392814636, -0.3159702718257904, -0.2984989285469055, -0.2808377146720886, -0.2629947364330292, -0.244978666305542, -0.22679884731769562, -0.20846521854400635, -0.18998828530311584, -0.17137911915779114, -0.15264932811260223, -0.13381098210811615, -0.11487660557031631, -0.09585914760828018, -0.07677189260721207, -0.05762842670083046, -0.03844258934259415, -0.01922839879989624, 0.0, 0.018865685909986496, 0.03771795332431793, 0.05654343590140343, 0.07532889395952225, 0.0940612331032753, 0.11272761225700378, 0.1313154399394989, 0.1498124599456787, 0.16820676624774933, 0.18648689985275269, 0.20464180409908295, 0.22266094386577606, 0.240534245967865, 0.25825223326683044, 0.27580589056015015, 0.29318690299987793, 0.31038740277290344, 0.32740020751953125, 0.3442186713218689, 0.36083677411079407, 0.3772490620613098, 0.39345064759254456, 0.4094372093677521, 0.4252050220966339, 0.4407508373260498, 0.45607200264930725, 0.4711662530899048, 0.4860319197177887, 0.5006677508354187, 0.5150728225708008, 0.5292468070983887, 0.5431895852088928, 0.5569015145301819, 0.5703833103179932, 0.5836358070373535, 0.5966603755950928, 0.6094585657119751, 0.6220319867134094, 0.6343828439712524, 0.6465131640434265, 0.6584253907203674, 0.6701220273971558, 0.6816058158874512, 0.6928795576095581, 0.7039461135864258, 0.7148085832595825, 0.7254700064659119, 0.7359336018562317, 0.7462025880813599, 0.7562801837921143, 0.7661697864532471, 0.7758746147155762, 0.7853981852531433, 0.7947436571121216, 0.8039145469665527, 0.8129141330718994, 0.8217458128929138, 0.8304128050804138, 0.8389184474945068, 0.8472660183906555, 0.8554587364196777, 0.8634998202323914, 0.8713924288749695, 0.8791397213935852, 0.8867446780204773, 0.8942103385925293, 0.9015398025512695, 0.9087358713150024, 0.915801465511322, 0.9227394461631775, 0.9295525550842285, 0.9362435340881348, 0.9428150653839111, 0.949269711971283, 0.9556100964546204, 0.9618387222290039, 0.9679580330848694, 0.9739704132080078, 0.979878306388855, 0.9856839179992676, 0.9913895130157471, 0.9969972968101501, 1.0025094747543335, 1.0079281330108643, 1.01325523853302, 1.0184928178787231, 1.023642897605896, 1.0287073850631714, 1.0336880683898926, 1.0385868549346924, 1.0434054136276245, 1.0481455326080322, 1.0528090000152588, 1.0573972463607788, 1.0619120597839355, 1.0663549900054932, 1.0707275867462158, 1.0750312805175781, 1.0792675018310547, 1.0834378004074097, 1.0875433683395386, 1.0915857553482056, 1.0955662727355957, 1.099485993385315, 1.1033464670181274, 1.1071487665176392, 1.110893964767456, 1.1145834922790527, 1.1182184219360352, 1.1217997074127197, 1.125328540802002, 1.1288059949874878, 1.1322330236434937, 1.135610818862915, 1.1389400959014893, 1.1422220468521118, 1.1454575061798096, 1.148647427558899, 1.1517925262451172, 1.1548939943313599, 1.1579524278640747, 1.1609687805175781, 1.1639437675476074, 1.1668782234191895, 1.169772982597351, 1.1726287603378296, 1.1754462718963623, -1.1782262325286865, -1.1754462718963623, -1.1726287603378296, -1.169772982597351, -1.1668782234191895, -1.1639437675476074, -1.1609687805175781, -1.1579524278640747, -1.1548939943313599, -1.1517925262451172, -1.148647427558899, -1.1454575061798096, -1.1422220468521118, -1.1389400959014893, -1.135610818862915, -1.1322330236434937, -1.1288059949874878, -1.125328540802002, -1.1217997074127197, -1.1182184219360352, -1.1145834922790527, -1.110893964767456, -1.1071487665176392, -1.1033464670181274, -1.099485993385315, -1.0955662727355957, -1.0915857553482056, -1.0875433683395386, -1.0834378004074097, -1.0792675018310547, -1.0750312805175781, -1.0707275867462158, -1.0663549900054932, -1.0619120597839355, -1.0573972463607788, -1.0528090000152588, -1.0481455326080322, -1.0434054136276245, -1.0385868549346924, -1.0336880683898926, -1.0287073850631714, -1.023642897605896, -1.0184928178787231, -1.01325523853302, -1.0079281330108643, -1.0025094747543335, -0.9969972968101501, -0.9913895130157471, -0.9856839179992676, -0.979878306388855, -0.9739704132080078, -0.9679580330848694, -0.9618387222290039, -0.9556100964546204, -0.949269711971283, -0.9428150653839111, -0.9362435340881348, -0.9295525550842285, -0.9227394461631775, -0.915801465511322, -0.9087358713150024, -0.9015398025512695, -0.8942103385925293, -0.8867446780204773, -0.8791397213935852, -0.8713924288749695, -0.8634998202323914, -0.8554587364196777, -0.8472660183906555, -0.8389184474945068, -0.8304128050804138, -0.8217458128929138, -0.8129141330718994, -0.8039145469665527, -0.7947436571121216, -0.7853981852531433, -0.7758746147155762, -0.7661697864532471, -0.7562801837921143, -0.7462025880813599, -0.7359336018562317, -0.7254700064659119, -0.7148085832595825, -0.7039461135864258, -0.6928795576095581, -0.6816058158874512, -0.6701220273971558, -0.6584253907203674, -0.6465131640434265, -0.6343828439712524, -0.6220319867134094, -0.6094585657119751, -0.5966603755950928, -0.5836358070373535, -0.5703833103179932, -0.5569015145301819, -0.5431895852088928, -0.5292468070983887, -0.5150728225708008, -0.5006677508354187, -0.4860319197177887, -0.4711662530899048, -0.45607200264930725, -0.4407508373260498, -0.4252050220966339, -0.4094372093677521, -0.39345064759254456, -0.3772490620613098, -0.36083677411079407, -0.3442186713218689, -0.32740020751953125, -0.31038740277290344, -0.29318690299987793, -0.27580589056015015, -0.25825223326683044, -0.240534245967865, -0.22266094386577606, -0.20464180409908295, -0.18648689985275269, -0.16820676624774933, -0.1498124599456787, -0.1313154399394989, -0.11272761225700378, -0.0940612331032753, -0.07532889395952225, -0.05654343590140343, -0.03771795332431793, -0.018865685909986496, 0.0, 0.018516402691602707, 0.03702011704444885, 0.055498506873846054, 0.07393904030323029, 0.09232933819293976, 0.1106572225689888, 0.12891076505184174, 0.14707835018634796, 0.16514867544174194, 0.1831108182668686, 0.20095425844192505, 0.21866895258426666, 0.236245259642601, 0.25367408990859985, 0.2709468603134155, 0.2880554497241974, 0.30499234795570374, 0.32175055146217346, 0.3383236229419708, 0.35470566153526306, 0.3708913028240204, 0.386875718832016, 0.40265464782714844, 0.4182243347167969, 0.43358147144317627, 0.44872334599494934, 0.46364760398864746, 0.478352427482605, 0.4928363859653473, 0.5070984959602356, 0.5211381316184998, 0.5349550843238831, 0.5485494136810303, 0.5619215369224548, 0.5750722885131836, 0.588002622127533, 0.6007137894630432, 0.6132073402404785, 0.6254850625991821, 0.6375488042831421, 0.6494007706642151, 0.6610431671142578, 0.6724784970283508, 0.6837093234062195, 0.6947382688522339, 0.7055681943893433, 0.716201901435852, 0.726642370223999, 0.7368925213813782, 0.7469555735588074, 0.7568345069885254, 0.7665324807167053, 0.7760526537895203, 0.7853981852531433, 0.7945722341537476, 0.8035779595375061, 0.8124186396598816, 0.8210972547531128, 0.8296170830726624, 0.8379812240600586, 0.8461927175521851, 0.8542546629905701, 0.8621700406074524, 0.8699418902397156, 0.8775731921195984, 0.88506680727005, 0.8924256563186646, 0.8996524810791016, 0.9067501425743103, 0.9137213826179504, 0.9205688834190369, 0.9272952079772949, 0.9339030385017395, 0.9403948783874512, 0.9467732906341553, 0.953040599822998, 0.9591993093490601, 0.9652516841888428, 0.9712000489234924, 0.9770466685295105, 0.9827937483787537, 0.9884433746337891, 0.9939977526664734, 0.9994588494300842, 1.004828691482544, 1.010109305381775, 1.0153025388717651, 1.020410418510437, 1.0254344940185547, 1.0303767919540405, 1.0352389812469482, 1.040022850036621, 1.0447299480438232, 1.0493619441986084, 1.0539203882217407, 1.0584068298339844, 1.062822937965393, 1.0671700239181519, 1.071449637413025, 1.0756630897521973, 1.0798118114471436, 1.0838971138000488, 1.0879203081130981, 1.0918827056884766, 1.0957856178283691, 1.0996301174163818, 1.1034173965454102, 1.1071487665176392, 1.1108251810073853, 1.114447832107544, 1.1180179119110107, 1.1215362548828125, 1.1250039339065552, 1.1284221410751343, 1.131791591644287, 1.1351134777069092, 1.1383885145187378, 1.141617774963379, 1.1448020935058594, 1.1479424238204956, 1.151039481163025, 1.1540940999984741, 1.1571071147918701, 1.1600793600082397, 1.1630115509033203, 1.1659045219421387, 1.1687589883804321, -1.1715755462646484, -1.1687589883804321, -1.1659045219421387, -1.1630115509033203, -1.1600793600082397, -1.1571071147918701, -1.1540940999984741, -1.151039481163025, -1.1479424238204956, -1.1448020935058594, -1.141617774963379, -1.1383885145187378, -1.1351134777069092, -1.131791591644287, -1.1284221410751343, -1.1250039339065552, -1.1215362548828125, -1.1180179119110107, -1.114447832107544, -1.1108251810073853, -1.1071487665176392, -1.1034173965454102, -1.0996301174163818, -1.0957856178283691, -1.0918827056884766, -1.0879203081130981, -1.0838971138000488, -1.0798118114471436, -1.0756630897521973, -1.071449637413025, -1.0671700239181519, -1.062822937965393, -1.0584068298339844, -1.0539203882217407, -1.0493619441986084, -1.0447299480438232, -1.040022850036621, -1.0352389812469482, -1.0303767919540405, -1.0254344940185547, -1.020410418510437, -1.0153025388717651, -1.010109305381775, -1.004828691482544, -0.9994588494300842, -0.9939977526664734, -0.9884433746337891, -0.9827937483787537, -0.9770466685295105, -0.9712000489234924, -0.9652516841888428, -0.9591993093490601, -0.953040599822998, -0.9467732906341553, -0.9403948783874512, -0.9339030385017395, -0.9272952079772949, -0.9205688834190369, -0.9137213826179504, -0.9067501425743103, -0.8996524810791016, -0.8924256563186646, -0.88506680727005, -0.8775731921195984, -0.8699418902397156, -0.8621700406074524, -0.8542546629905701, -0.8461927175521851, -0.8379812240600586, -0.8296170830726624, -0.8210972547531128, -0.8124186396598816, -0.8035779595375061, -0.7945722341537476, -0.7853981852531433, -0.7760526537895203, -0.7665324807167053, -0.7568345069885254, -0.7469555735588074, -0.7368925213813782, -0.726642370223999, -0.716201901435852, -0.7055681943893433, -0.6947382688522339, -0.6837093234062195, -0.6724784970283508, -0.6610431671142578, -0.6494007706642151, -0.6375488042831421, -0.6254850625991821, -0.6132073402404785, -0.6007137894630432, -0.588002622127533, -0.5750722885131836, -0.5619215369224548, -0.5485494136810303, -0.5349550843238831, -0.5211381316184998, -0.5070984959602356, -0.4928363859653473, -0.478352427482605, -0.46364760398864746, -0.44872334599494934, -0.43358147144317627, -0.4182243347167969, -0.40265464782714844, -0.386875718832016, -0.3708913028240204, -0.35470566153526306, -0.3383236229419708, -0.32175055146217346, -0.30499234795570374, -0.2880554497241974, -0.2709468603134155, -0.25367408990859985, -0.236245259642601, -0.21866895258426666, -0.20095425844192505, -0.1831108182668686, -0.16514867544174194, -0.14707835018634796, -0.12891076505184174, -0.1106572225689888, -0.09232933819293976, -0.07393904030323029, -0.055498506873846054, -0.03702011704444885, -0.018516402691602707, 0.0, 0.018179815262556076, 0.03634762018918991, 0.05449145659804344, 0.07259945571422577, 0.09065988659858704, 0.1086612194776535, 0.12659212946891785, 0.14444157481193542, 0.16219882667064667, 0.17985349893569946, 0.19739556312561035, 0.2148153930902481, 0.2321038395166397, 0.24925214052200317, 0.2662520408630371, 0.2830957770347595, 0.2997760772705078, 0.3162861168384552, 0.33261969685554504, 0.34877100586891174, 0.36473482847213745, 0.38050636649131775, 0.39608144760131836, 0.41145625710487366, 0.4266274869441986, 0.44159236550331116, 0.4563484787940979, 0.47089385986328125, 0.48522698879241943, 0.4993467330932617, 0.5132522583007812, 0.5269432067871094, 0.5404195189476013, 0.5536813139915466, 0.5667291879653931, 0.5795639753341675, 0.592186689376831, 0.6045985817909241, 0.6168012022972107, 0.6287962794303894, 0.6405856609344482, 0.6521714329719543, 0.6635557413101196, 0.6747409701347351, 0.6857295036315918, 0.6965239644050598, 0.707127034664154, 0.7175413370132446, 0.7277697324752808, 0.7378150820732117, 0.7476801872253418, 0.7573681473731995, 0.7668817639350891, 0.7762241363525391, 0.7853981852531433, 0.7944069504737854, 0.8032534122467041, 0.811940610408783, 0.820471465587616, 0.8288490772247314, 0.8370762467384338, 0.8451560139656067, 0.8530911803245544, 0.8608847260475159, 0.8685393929481506, 0.876058042049408, 0.8834434151649475, 0.8906983137130737, 0.897825300693512, 0.9048271179199219, 0.911706268787384, 0.9184654355049133, 0.9251070618629456, 0.9316335916519165, 0.938047468662262, 0.9443511366844177, 0.9505468606948853, 0.956636905670166, 0.9626235365867615, 0.9685089588165283, 0.9742953181266785, 0.9799847602844238, 0.985579252243042, 0.9910808205604553, 0.9964914917945862, 1.0018131732940674, 1.0070477724075317, 1.0121970176696777, 1.0172628164291382, 1.0222469568252563, 1.0271509885787964, 1.0319768190383911, 1.0367259979248047, 1.0413999557495117, 1.046000599861145, 1.0505291223526, 1.0549871921539307, 1.0593763589859009, 1.0636978149414062, 1.067953109741211, 1.0721435546875, 1.0762704610824585, 1.080335259437561, 1.0843390226364136, 1.0882830619812012, 1.0921685695648193, 1.0959967374801636, 1.0997687578201294, 1.1034857034683228, 1.1071487665176392, 1.1107587814331055, 1.1143170595169067, 1.1178244352340698, 1.1212821006774902, 1.1246907711029053, 1.1280516386032104, 1.131365418434143, 1.134633183479309, 1.1378557682037354, 1.1410340070724487, 1.1441688537597656, 1.1472610235214233, 1.1503112316131592, 1.153320550918579, 1.1562894582748413, 1.1592189073562622, 1.1621094942092896, -1.1649620532989502, -1.1621094942092896, -1.1592189073562622, -1.1562894582748413, -1.153320550918579, -1.1503112316131592, -1.1472610235214233, -1.1441688537597656, -1.1410340070724487, -1.1378557682037354, -1.134633183479309, -1.131365418434143, -1.1280516386032104, -1.1246907711029053, -1.1212821006774902, -1.1178244352340698, -1.1143170595169067, -1.1107587814331055, -1.1071487665176392, -1.1034857034683228, -1.0997687578201294, -1.0959967374801636, -1.0921685695648193, -1.0882830619812012, -1.0843390226364136, -1.080335259437561, -1.0762704610824585, -1.0721435546875, -1.067953109741211, -1.0636978149414062, -1.0593763589859009, -1.0549871921539307, -1.0505291223526, -1.046000599861145, -1.0413999557495117, -1.0367259979248047, -1.0319768190383911, -1.0271509885787964, -1.0222469568252563, -1.0172628164291382, -1.0121970176696777, -1.0070477724075317, -1.0018131732940674, -0.9964914917945862, -0.9910808205604553, -0.985579252243042, -0.9799847602844238, -0.9742953181266785, -0.9685089588165283, -0.9626235365867615, -0.956636905670166, -0.9505468606948853, -0.9443511366844177, -0.938047468662262, -0.9316335916519165, -0.9251070618629456, -0.9184654355049133, -0.911706268787384, -0.9048271179199219, -0.897825300693512, -0.8906983137130737, -0.8834434151649475, -0.876058042049408, -0.8685393929481506, -0.8608847260475159, -0.8530911803245544, -0.8451560139656067, -0.8370762467384338, -0.8288490772247314, -0.820471465587616, -0.811940610408783, -0.8032534122467041, -0.7944069504737854, -0.7853981852531433, -0.7762241363525391, -0.7668817639350891, -0.7573681473731995, -0.7476801872253418, -0.7378150820732117, -0.7277697324752808, -0.7175413370132446, -0.707127034664154, -0.6965239644050598, -0.6857295036315918, -0.6747409701347351, -0.6635557413101196, -0.6521714329719543, -0.6405856609344482, -0.6287962794303894, -0.6168012022972107, -0.6045985817909241, -0.592186689376831, -0.5795639753341675, -0.5667291879653931, -0.5536813139915466, -0.5404195189476013, -0.5269432067871094, -0.5132522583007812, -0.4993467330932617, -0.48522698879241943, -0.47089385986328125, -0.4563484787940979, -0.44159236550331116, -0.4266274869441986, -0.41145625710487366, -0.39608144760131836, -0.38050636649131775, -0.36473482847213745, -0.34877100586891174, -0.33261969685554504, -0.3162861168384552, -0.2997760772705078, -0.2830957770347595, -0.2662520408630371, -0.24925214052200317, -0.2321038395166397, -0.2148153930902481, -0.19739556312561035, -0.17985349893569946, -0.16219882667064667, -0.14444157481193542, -0.12659212946891785, -0.1086612194776535, -0.09065988659858704, -0.07259945571422577, -0.05449145659804344, -0.03634762018918991, -0.018179815262556076, 0.0, 0.017855245620012283, 0.035699114203453064, 0.05352026969194412, 0.0713074654340744, 0.08904958516359329, 0.10673566907644272, 0.12435499578714371, 0.141897052526474, 0.159351646900177, 0.1767088621854782, 0.19395914673805237, 0.21109333634376526, 0.22810262441635132, 0.244978666305542, 0.26171350479125977, 0.2782996594905853, 0.2947300970554352, 0.3109982907772064, 0.3270981013774872, 0.3430239260196686, 0.3587706685066223, 0.37433362007141113, 0.38970857858657837, 0.4048917889595032, 0.4198799431324005, 0.43467020988464355, 0.4492601156234741, 0.46364760398864746, 0.47783106565475464, 0.4918091893196106, 0.5055810809135437, 0.5191460847854614, 0.5325040817260742, 0.5456550717353821, 0.5585992932319641, 0.5713374614715576, 0.5838704109191895, 0.5961991548538208, 0.6083250045776367, 0.6202495098114014, 0.6319742202758789, 0.6435011029243469, 0.6548320651054382, 0.6659692525863647, 0.6769148707389832, 0.6876712441444397, 0.6982408761978149, 0.7086262702941895, 0.7188299894332886, 0.7288547158241272, 0.7387031316757202, 0.7483780384063721, 0.7578821778297424, 0.7672183513641357, 0.7763894200325012, 0.7853981852531433, 0.7942475080490112, 0.8029402494430542, 0.8114792108535767, 0.8198672533035278, 0.8281072378158569, 0.8362018465995789, 0.8441540002822876, 0.8519663214683533, 0.8596416115760803, 0.8671825528144836, 0.8745917677879333, 0.8818719387054443, 0.8890256285667419, 0.8960554003715515, 0.9029637575149536, 0.909753143787384, 0.9164260625839233, 0.9229848980903625, 0.9294319748878479, 0.9357696175575256, 0.9420000314712524, 0.9481255412101746, 0.9541482925415039, 0.9600703716278076, 0.9658939242362976, 0.9716209769248962, 0.9772536158561707, 0.9827937483787537, 0.9882432818412781, 0.9936041235923767, 0.9988781213760376, 1.004067063331604, 1.009172797203064, 1.0141969919204712, 1.0191413164138794, 1.0240074396133423, 1.0287970304489136, 1.0335116386413574, 1.0381526947021484, 1.0427218675613403, 1.0472205877304077, 1.0516501665115356, 1.0560122728347778, 1.0603079795837402, 1.064538836479187, 1.0687061548233032, 1.0728111267089844, 1.076854944229126, 1.0808390378952026, 1.0847643613815308, 1.088632345199585, 1.0924439430236816, 1.0962002277374268, 1.0999025106430054, 1.1035516262054443, 1.1071487665176392, 1.1106947660446167, 1.1141908168792725, 1.1176378726959229, 1.1210367679595947, 1.124388337135315, 1.127693772315979, 1.1309537887573242, 1.1341692209243774, 1.1373409032821655, 1.1404696702957153, 1.1435564756393433, 1.146601915359497, 1.1496068239212036, 1.1525720357894897, 1.1554981470108032, -1.1583858728408813, -1.1554981470108032, -1.1525720357894897, -1.1496068239212036, -1.146601915359497, -1.1435564756393433, -1.1404696702957153, -1.1373409032821655, -1.1341692209243774, -1.1309537887573242, -1.127693772315979, -1.124388337135315, -1.1210367679595947, -1.1176378726959229, -1.1141908168792725, -1.1106947660446167, -1.1071487665176392, -1.1035516262054443, -1.0999025106430054, -1.0962002277374268, -1.0924439430236816, -1.088632345199585, -1.0847643613815308, -1.0808390378952026, -1.076854944229126, -1.0728111267089844, -1.0687061548233032, -1.064538836479187, -1.0603079795837402, -1.0560122728347778, -1.0516501665115356, -1.0472205877304077, -1.0427218675613403, -1.0381526947021484, -1.0335116386413574, -1.0287970304489136, -1.0240074396133423, -1.0191413164138794, -1.0141969919204712, -1.009172797203064, -1.004067063331604, -0.9988781213760376, -0.9936041235923767, -0.9882432818412781, -0.9827937483787537, -0.9772536158561707, -0.9716209769248962, -0.9658939242362976, -0.9600703716278076, -0.9541482925415039, -0.9481255412101746, -0.9420000314712524, -0.9357696175575256, -0.9294319748878479, -0.9229848980903625, -0.9164260625839233, -0.909753143787384, -0.9029637575149536, -0.8960554003715515, -0.8890256285667419, -0.8818719387054443, -0.8745917677879333, -0.8671825528144836, -0.8596416115760803, -0.8519663214683533, -0.8441540002822876, -0.8362018465995789, -0.8281072378158569, -0.8198672533035278, -0.8114792108535767, -0.8029402494430542, -0.7942475080490112, -0.7853981852531433, -0.7763894200325012, -0.7672183513641357, -0.7578821778297424, -0.7483780384063721, -0.7387031316757202, -0.7288547158241272, -0.7188299894332886, -0.7086262702941895, -0.6982408761978149, -0.6876712441444397, -0.6769148707389832, -0.6659692525863647, -0.6548320651054382, -0.6435011029243469, -0.6319742202758789, -0.6202495098114014, -0.6083250045776367, -0.5961991548538208, -0.5838704109191895, -0.5713374614715576, -0.5585992932319641, -0.5456550717353821, -0.5325040817260742, -0.5191460847854614, -0.5055810809135437, -0.4918091893196106, -0.47783106565475464, -0.46364760398864746, -0.4492601156234741, -0.43467020988464355, -0.4198799431324005, -0.4048917889595032, -0.38970857858657837, -0.37433362007141113, -0.3587706685066223, -0.3430239260196686, -0.3270981013774872, -0.3109982907772064, -0.2947300970554352, -0.2782996594905853, -0.26171350479125977, -0.244978666305542, -0.22810262441635132, -0.21109333634376526, -0.19395914673805237, -0.1767088621854782, -0.159351646900177, -0.141897052526474, -0.12435499578714371, -0.10673566907644272, -0.08904958516359329, -0.0713074654340744, -0.05352026969194412, -0.035699114203453064, -0.017855245620012283, 0.0, 0.01754206046462059, 0.035073328763246536, 0.052583061158657074, 0.07006058096885681, 0.0874953418970108, 0.10487693548202515, 0.12219516932964325, 0.13944005966186523, 0.15660187602043152, 0.1736712008714676, 0.19063889980316162, 0.20749622583389282, 0.22423474490642548, 0.2408464550971985, 0.2573237121105194, 0.2736593186855316, 0.2898464798927307, 0.3058788776397705, 0.32175055146217346, 0.337456077337265, 0.35299038887023926, 0.3683489263057709, 0.3835275173187256, 0.39852243661880493, 0.41333040595054626, 0.4279485046863556, 0.44237422943115234, 0.456605464220047, 0.47064051032066345, 0.4844779372215271, 0.49811670184135437, 0.5115561485290527, 0.5247957706451416, 0.5378355383872986, 0.5506755709648132, 0.563316285610199, 0.5757583379745483, 0.588002622127533, 0.6000502109527588, 0.6119024157524109, 0.6235607266426086, 0.635026752948761, 0.6463022232055664, 0.6573891043663025, 0.6682894229888916, 0.6790053248405457, 0.6895390152931213, 0.6998928785324097, 0.7100692987442017, 0.7200707197189331, 0.7298996448516846, 0.739558756351471, 0.7490505576133728, 0.758377730846405, 0.7675428986549377, 0.7765488624572754, 0.7853981852531433, 0.7940936088562012, 0.8026378154754639, 0.8110335469245911, 0.8192834854125977, 0.8273902535438538, 0.8353565335273743, 0.8431850075721741, 0.8508781790733337, 0.8584387302398682, 0.8658691644668579, 0.8731720447540283, 0.88034987449646, 0.8874050974845886, 0.8943400979042053, 0.9011573791503906, 0.907859206199646, 0.9144479632377625, 0.9209258556365967, 0.9272952079772949, 0.9335581660270691, 0.9397169351577759, 0.9457736015319824, 0.9517302513122559, 0.9575889706611633, 0.9633517265319824, 0.9690204858779907, 0.974597156047821, 0.980083703994751, 0.9854819178581238, 0.9907935261726379, 0.9960204362869263, 1.0011643171310425, 1.006226897239685, 1.0112098455429077, 1.0161147117614746, 1.0209431648254395, 1.0256966352462769, 1.0303767919540405, 1.034985065460205, 1.0395228862762451, 1.0439916849136353, 1.04839289188385, 1.0527278184890747, 1.0569977760314941, 1.0612040758132935, 1.0653480291366577, 1.0694307088851929, 1.073453664779663, 1.0774177312850952, 1.0813242197036743, 1.0851742029190063, 1.0889688730239868, 1.0927093029022217, 1.0963964462280273, 1.1000313758850098, 1.103615164756775, 1.1071487665176392, 1.1106330156326294, 1.1140689849853516, 1.117457628250122, 1.1207997798919678, 1.1240962743759155, 1.1273479461669922, 1.1305558681488037, 1.1337205171585083, 1.136842966079712, 1.1399238109588623, 1.1429640054702759, 1.1459641456604004, 1.1489250659942627, -1.1518473625183105, -1.1489250659942627, -1.1459641456604004, -1.1429640054702759, -1.1399238109588623, -1.136842966079712, -1.1337205171585083, -1.1305558681488037, -1.1273479461669922, -1.1240962743759155, -1.1207997798919678, -1.117457628250122, -1.1140689849853516, -1.1106330156326294, -1.1071487665176392, -1.103615164756775, -1.1000313758850098, -1.0963964462280273, -1.0927093029022217, -1.0889688730239868, -1.0851742029190063, -1.0813242197036743, -1.0774177312850952, -1.073453664779663, -1.0694307088851929, -1.0653480291366577, -1.0612040758132935, -1.0569977760314941, -1.0527278184890747, -1.04839289188385, -1.0439916849136353, -1.0395228862762451, -1.034985065460205, -1.0303767919540405, -1.0256966352462769, -1.0209431648254395, -1.0161147117614746, -1.0112098455429077, -1.006226897239685, -1.0011643171310425, -0.9960204362869263, -0.9907935261726379, -0.9854819178581238, -0.980083703994751, -0.974597156047821, -0.9690204858779907, -0.9633517265319824, -0.9575889706611633, -0.9517302513122559, -0.9457736015319824, -0.9397169351577759, -0.9335581660270691, -0.9272952079772949, -0.9209258556365967, -0.9144479632377625, -0.907859206199646, -0.9011573791503906, -0.8943400979042053, -0.8874050974845886, -0.88034987449646, -0.8731720447540283, -0.8658691644668579, -0.8584387302398682, -0.8508781790733337, -0.8431850075721741, -0.8353565335273743, -0.8273902535438538, -0.8192834854125977, -0.8110335469245911, -0.8026378154754639, -0.7940936088562012, -0.7853981852531433, -0.7765488624572754, -0.7675428986549377, -0.758377730846405, -0.7490505576133728, -0.739558756351471, -0.7298996448516846, -0.7200707197189331, -0.7100692987442017, -0.6998928785324097, -0.6895390152931213, -0.6790053248405457, -0.6682894229888916, -0.6573891043663025, -0.6463022232055664, -0.635026752948761, -0.6235607266426086, -0.6119024157524109, -0.6000502109527588, -0.588002622127533, -0.5757583379745483, -0.563316285610199, -0.5506755709648132, -0.5378355383872986, -0.5247957706451416, -0.5115561485290527, -0.49811670184135437, -0.4844779372215271, -0.47064051032066345, -0.456605464220047, -0.44237422943115234, -0.4279485046863556, -0.41333040595054626, -0.39852243661880493, -0.3835275173187256, -0.3683489263057709, -0.35299038887023926, -0.337456077337265, -0.32175055146217346, -0.3058788776397705, -0.2898464798927307, -0.2736593186855316, -0.2573237121105194, -0.2408464550971985, -0.22423474490642548, -0.20749622583389282, -0.19063889980316162, -0.1736712008714676, -0.15660187602043152, -0.13944005966186523, -0.12219516932964325, -0.10487693548202515, -0.0874953418970108, -0.07006058096885681, -0.052583061158657074, -0.035073328763246536, -0.01754206046462059, 0.0, 0.01723967120051384, 0.03446910157799721, 0.05167808383703232, 0.06885649263858795, 0.08599428832530975, 0.1030816063284874, 0.12010873854160309, 0.13706617057323456, 0.15394467115402222, 0.1707352101802826, 0.18742911517620087, 0.2040179818868637, 0.22049376368522644, 0.23684875667095184, 0.25307565927505493, 0.2691674828529358, 0.2851177453994751, 0.3009202480316162, 0.3165692389011383, 0.33205947279930115, 0.347385972738266, 0.3625442385673523, 0.37753018736839294, 0.39234015345573425, 0.4069707989692688, 0.4214192032814026, 0.43568286299705505, 0.4497596025466919, 0.46364760398864746, 0.47734537720680237, 0.4908517897129059, 0.5041659474372864, 0.5172873735427856, 0.5302157998085022, 0.5429511666297913, 0.5554937124252319, 0.567844033241272, 0.5800027847290039, 0.5919708609580994, 0.6037493348121643, 0.6153395175933838, 0.6267428994178772, 0.6379609704017639, 0.648995578289032, 0.6598484516143799, 0.6705215573310852, 0.6810169816017151, 0.6913369297981262, 0.7014835476875305, 0.7114591002464294, 0.7212660312652588, 0.7309067249298096, 0.7403835654258728, 0.749699056148529, 0.7588557004928589, 0.7678561210632324, 0.7767027020454407, 0.7853981852531433, 0.7939449548721313, 0.8023456931114197, 0.8106029033660889, 0.8187191486358643, 0.8266969919204712, 0.8345388770103455, 0.8422474265098572, 0.8498250246047974, 0.8572741150856018, 0.8645972609519958, 0.871796727180481, 0.8788749575614929, 0.885834276676178, 0.8926770091056824, 0.8994054794311523, 0.9060218334197998, 0.9125283360481262, 0.9189271926879883, 0.9252205491065979, 0.9314104318618774, 0.937498927116394, 0.9434881210327148, 0.9493799805641174, 0.9551764130592346, 0.9608794450759888, 0.9664908051490784, 0.972012460231781, 0.9774461984634399, 0.9827937483787537, 0.9880568385124207, 0.9932371973991394, 0.9983364939689636, 1.0033563375473022, 1.008298397064209, 1.0131641626358032, 1.0179550647735596, 1.0226727724075317, 1.0273187160491943, 1.031894326210022, 1.0364007949829102, 1.0408397912979126, 1.0452125072479248, 1.0495202541351318, 1.0537643432617188, 1.0579460859298706, 1.0620665550231934, 1.0661269426345825, 1.0701285600662231, 1.0740725994110107, 1.0779598951339722, 1.081791877746582, 1.0855693817138672, 1.0892934799194336, 1.0929652452468872, 1.096585750579834, 1.1001558303833008, 1.1036765575408936, 1.1071487665176392, 1.110573410987854, 1.113951325416565, 1.1172834634780884, 1.1205707788467407, 1.1238138675689697, 1.1270136833190918, 1.1301709413528442, 1.1332865953445435, 1.1363612413406372, 1.1393955945968628, 1.142390489578247, -1.1453466415405273, -1.142390489578247, -1.1393955945968628, -1.1363612413406372, -1.1332865953445435, -1.1301709413528442, -1.1270136833190918, -1.1238138675689697, -1.1205707788467407, -1.1172834634780884, -1.113951325416565, -1.110573410987854, -1.1071487665176392, -1.1036765575408936, -1.1001558303833008, -1.096585750579834, -1.0929652452468872, -1.0892934799194336, -1.0855693817138672, -1.081791877746582, -1.0779598951339722, -1.0740725994110107, -1.0701285600662231, -1.0661269426345825, -1.0620665550231934, -1.0579460859298706, -1.0537643432617188, -1.0495202541351318, -1.0452125072479248, -1.0408397912979126, -1.0364007949829102, -1.031894326210022, -1.0273187160491943, -1.0226727724075317, -1.0179550647735596, -1.0131641626358032, -1.008298397064209, -1.0033563375473022, -0.9983364939689636, -0.9932371973991394, -0.9880568385124207, -0.9827937483787537, -0.9774461984634399, -0.972012460231781, -0.9664908051490784, -0.9608794450759888, -0.9551764130592346, -0.9493799805641174, -0.9434881210327148, -0.937498927116394, -0.9314104318618774, -0.9252205491065979, -0.9189271926879883, -0.9125283360481262, -0.9060218334197998, -0.8994054794311523, -0.8926770091056824, -0.885834276676178, -0.8788749575614929, -0.871796727180481, -0.8645972609519958, -0.8572741150856018, -0.8498250246047974, -0.8422474265098572, -0.8345388770103455, -0.8266969919204712, -0.8187191486358643, -0.8106029033660889, -0.8023456931114197, -0.7939449548721313, -0.7853981852531433, -0.7767027020454407, -0.7678561210632324, -0.7588557004928589, -0.749699056148529, -0.7403835654258728, -0.7309067249298096, -0.7212660312652588, -0.7114591002464294, -0.7014835476875305, -0.6913369297981262, -0.6810169816017151, -0.6705215573310852, -0.6598484516143799, -0.648995578289032, -0.6379609704017639, -0.6267428994178772, -0.6153395175933838, -0.6037493348121643, -0.5919708609580994, -0.5800027847290039, -0.567844033241272, -0.5554937124252319, -0.5429511666297913, -0.5302157998085022, -0.5172873735427856, -0.5041659474372864, -0.4908517897129059, -0.47734537720680237, -0.46364760398864746, -0.4497596025466919, -0.43568286299705505, -0.4214192032814026, -0.4069707989692688, -0.39234015345573425, -0.37753018736839294, -0.3625442385673523, -0.347385972738266, -0.33205947279930115, -0.3165692389011383, -0.3009202480316162, -0.2851177453994751, -0.2691674828529358, -0.25307565927505493, -0.23684875667095184, -0.22049376368522644, -0.2040179818868637, -0.18742911517620087, -0.1707352101802826, -0.15394467115402222, -0.13706617057323456, -0.12010873854160309, -0.1030816063284874, -0.08599428832530975, -0.06885649263858795, -0.05167808383703232, -0.03446910157799721, -0.01723967120051384, 0.0, 0.016947530210018158, 0.03388532996177673, 0.05080370232462883, 0.06769302487373352, 0.08454375714063644, 0.10134650021791458, 0.11809203028678894, 0.13477128744125366, 0.1513754427433014, 0.16789592802524567, 0.18432441353797913, 0.20065288245677948, 0.21687361598014832, 0.23297923803329468, 0.24896270036697388, 0.26481732726097107, 0.28053680062294006, 0.2961151599884033, 0.31154683232307434, 0.32682666182518005, 0.34194982051849365, 0.35691192746162415, 0.3717089593410492, 0.3863372206687927, 0.4007934629917145, 0.41507473587989807, 0.42917850613594055, 0.44310256838798523, 0.4568449854850769, 0.4704042673110962, 0.48377910256385803, 0.4969685971736908, 0.5099720358848572, 0.5227890610694885, 0.5354195237159729, 0.5478635430335999, 0.5601213574409485, 0.5721936225891113, 0.5840810537338257, 0.5957845449447632, 0.6073052287101746, 0.6186443567276001, 0.6298033595085144, 0.6407837271690369, 0.651587188243866, 0.662215530872345, 0.6726705431938171, 0.6829543113708496, 0.69306880235672, 0.7030162215232849, 0.7127987146377563, 0.722418487071991, 0.7318779230117798, 0.7411792278289795, 0.7503248453140259, 0.7593171000480652, 0.768158495426178, 0.7768513560295105, 0.7853981852531433, 0.7938013076782227, 0.8020632863044739, 0.8101864457130432, 0.8181732892990112, 0.826026201248169, 0.8337475657463074, 0.8413397073745728, 0.8488051295280457, 0.8561460375785828, 0.8633648157119751, 0.8704637289047241, 0.8774449825286865, 0.8843109607696533, 0.8910637497901917, 0.8977055549621582, 0.9042385220527649, 0.9106647372245789, 0.9169862866401672, 0.9232052564620972, 0.9293236136436462, 0.935343325138092, 0.9412663578987122, 0.9470946192741394, 0.9528299570083618, 0.9584742188453674, 0.9640291929244995, 0.9694966077804565, 0.9748783111572266, 0.9801759123802185, 0.9853911399841309, 0.9905255436897278, 0.9955807328224182, 1.0005583763122559, 1.0054599046707153, 1.010286808013916, 1.015040636062622, 1.0197227001190186, 1.0243345499038696, 1.02887761592865, 1.0333529710769653, 1.03776216506958, 1.0421065092086792, 1.0463870763778687, 1.050605297088623, 1.0547622442245483, 1.05885910987854, 1.0628972053527832, 1.0668774843215942, 1.0708011388778687, 1.0746691226959229, 1.078482747077942, 1.0822428464889526, 1.085950493812561, 1.0896066427230835, 1.093212366104126, 1.0967684984207153, 1.100275993347168, 1.1037358045578003, 1.1071487665176392, 1.1105157136917114, 1.1138375997543335, 1.1171151399612427, 1.1203492879867554, 1.1235406398773193, 1.126690149307251, 1.1297985315322876, 1.1328665018081665, 1.135894775390625, -1.1388840675354004, -1.135894775390625, -1.1328665018081665, -1.1297985315322876, -1.126690149307251, -1.1235406398773193, -1.1203492879867554, -1.1171151399612427, -1.1138375997543335, -1.1105157136917114, -1.1071487665176392, -1.1037358045578003, -1.100275993347168, -1.0967684984207153, -1.093212366104126, -1.0896066427230835, -1.085950493812561, -1.0822428464889526, -1.078482747077942, -1.0746691226959229, -1.0708011388778687, -1.0668774843215942, -1.0628972053527832, -1.05885910987854, -1.0547622442245483, -1.050605297088623, -1.0463870763778687, -1.0421065092086792, -1.03776216506958, -1.0333529710769653, -1.02887761592865, -1.0243345499038696, -1.0197227001190186, -1.015040636062622, -1.010286808013916, -1.0054599046707153, -1.0005583763122559, -0.9955807328224182, -0.9905255436897278, -0.9853911399841309, -0.9801759123802185, -0.9748783111572266, -0.9694966077804565, -0.9640291929244995, -0.9584742188453674, -0.9528299570083618, -0.9470946192741394, -0.9412663578987122, -0.935343325138092, -0.9293236136436462, -0.9232052564620972, -0.9169862866401672, -0.9106647372245789, -0.9042385220527649, -0.8977055549621582, -0.8910637497901917, -0.8843109607696533, -0.8774449825286865, -0.8704637289047241, -0.8633648157119751, -0.8561460375785828, -0.8488051295280457, -0.8413397073745728, -0.8337475657463074, -0.826026201248169, -0.8181732892990112, -0.8101864457130432, -0.8020632863044739, -0.7938013076782227, -0.7853981852531433, -0.7768513560295105, -0.768158495426178, -0.7593171000480652, -0.7503248453140259, -0.7411792278289795, -0.7318779230117798, -0.722418487071991, -0.7127987146377563, -0.7030162215232849, -0.69306880235672, -0.6829543113708496, -0.6726705431938171, -0.662215530872345, -0.651587188243866, -0.6407837271690369, -0.6298033595085144, -0.6186443567276001, -0.6073052287101746, -0.5957845449447632, -0.5840810537338257, -0.5721936225891113, -0.5601213574409485, -0.5478635430335999, -0.5354195237159729, -0.5227890610694885, -0.5099720358848572, -0.4969685971736908, -0.48377910256385803, -0.4704042673110962, -0.4568449854850769, -0.44310256838798523, -0.42917850613594055, -0.41507473587989807, -0.4007934629917145, -0.3863372206687927, -0.3717089593410492, -0.35691192746162415, -0.34194982051849365, -0.32682666182518005, -0.31154683232307434, -0.2961151599884033, -0.28053680062294006, -0.26481732726097107, -0.24896270036697388, -0.23297923803329468, -0.21687361598014832, -0.20065288245677948, -0.18432441353797913, -0.16789592802524567, -0.1513754427433014, -0.13477128744125366, -0.11809203028678894, -0.10134650021791458, -0.08454375714063644, -0.06769302487373352, -0.05080370232462883, -0.03388532996177673, -0.016947530210018158, 0.0, 0.016665123403072357, 0.03332099691033363, 0.04995839670300484, 0.06656816601753235, 0.08314123004674911, 0.09966865181922913, 0.11614162474870682, 0.13255153596401215, 0.1488899439573288, 0.16514867544174194, 0.18131977319717407, 0.19739556312561035, 0.21336863934993744, 0.22923193871974945, 0.244978666305542, 0.2606023848056793, 0.27609702944755554, 0.29145678877830505, 0.30667632818222046, 0.32175055146217346, 0.3366748094558716, 0.3514447808265686, 0.36605650186538696, 0.38050636649131775, 0.3947911262512207, 0.40890783071517944, 0.42285391688346863, 0.4366271495819092, 0.4502255916595459, 0.46364760398864746, 0.4768918752670288, 0.489957332611084, 0.5028432011604309, 0.5155490040779114, 0.5280744433403015, 0.5404195189476013, 0.5525843501091003, 0.5645694136619568, 0.5763752460479736, 0.588002622127533, 0.5994524955749512, 0.6107259392738342, 0.6218242645263672, 0.6327488422393799, 0.6435011029243469, 0.654082715511322, 0.6644954085350037, 0.6747409701347351, 0.6848212480545044, 0.6947382688522339, 0.704494059085846, 0.7140907049179077, 0.7235302925109863, 0.7328150868415833, 0.7419472932815552, 0.750929057598114, 0.7597627639770508, 0.7684506177902222, 0.7769950032234192, 0.7853981852531433, 0.793662428855896, 0.8017901182174683, 0.8097835779190063, 0.8176450729370117, 0.8253768682479858, 0.832981288433075, 0.8404605388641357, 0.8478169441223145, 0.8550527095794678, 0.8621700406074524, 0.8691710829734802, 0.876058042049408, 0.8828330039978027, 0.8894981145858765, 0.8960554003715515, 0.9025068879127502, 0.9088546633720398, 0.9151006937026978, 0.9212468862533569, 0.9272952079772949, 0.9332475066184998, 0.9391056895256042, 0.9448715448379517, 0.9505468606948853, 0.9561333656311035, 0.9616328477859497, 0.9670469760894775, 0.9723774194717407, 0.9776257872581482, 0.9827937483787537, 0.9878827333450317, 0.9928944110870361, 0.9978302121162415, 1.002691626548767, 1.0074800252914429, 1.0121970176696777, 1.0168437957763672, 1.0214217901229858, 1.0259324312210083, 1.0303767919540405, 1.0347563028335571, 1.0390722751617432, 1.0433257818222046, 1.047518014907837, 1.0516501665115356, 1.0557235479354858, 1.0597389936447144, 1.0636978149414062, 1.067600965499878, 1.071449637413025, 1.075244665145874, 1.0789871215820312, 1.0826780796051025, 1.0863183736801147, 1.0899090766906738, 1.093450903892517, 1.09694504737854, 1.1003921031951904, 1.1037930250167847, 1.1071487665176392, 1.1104599237442017, 1.1137275695800781, 1.1169523000717163, 1.120134949684143, 1.1232763528823853, 1.1263771057128906, 1.129438042640686, -1.1324597597122192, -1.129438042640686, -1.1263771057128906, -1.1232763528823853, -1.120134949684143, -1.1169523000717163, -1.1137275695800781, -1.1104599237442017, -1.1071487665176392, -1.1037930250167847, -1.1003921031951904, -1.09694504737854, -1.093450903892517, -1.0899090766906738, -1.0863183736801147, -1.0826780796051025, -1.0789871215820312, -1.075244665145874, -1.071449637413025, -1.067600965499878, -1.0636978149414062, -1.0597389936447144, -1.0557235479354858, -1.0516501665115356, -1.047518014907837, -1.0433257818222046, -1.0390722751617432, -1.0347563028335571, -1.0303767919540405, -1.0259324312210083, -1.0214217901229858, -1.0168437957763672, -1.0121970176696777, -1.0074800252914429, -1.002691626548767, -0.9978302121162415, -0.9928944110870361, -0.9878827333450317, -0.9827937483787537, -0.9776257872581482, -0.9723774194717407, -0.9670469760894775, -0.9616328477859497, -0.9561333656311035, -0.9505468606948853, -0.9448715448379517, -0.9391056895256042, -0.9332475066184998, -0.9272952079772949, -0.9212468862533569, -0.9151006937026978, -0.9088546633720398, -0.9025068879127502, -0.8960554003715515, -0.8894981145858765, -0.8828330039978027, -0.876058042049408, -0.8691710829734802, -0.8621700406074524, -0.8550527095794678, -0.8478169441223145, -0.8404605388641357, -0.832981288433075, -0.8253768682479858, -0.8176450729370117, -0.8097835779190063, -0.8017901182174683, -0.793662428855896, -0.7853981852531433, -0.7769950032234192, -0.7684506177902222, -0.7597627639770508, -0.750929057598114, -0.7419472932815552, -0.7328150868415833, -0.7235302925109863, -0.7140907049179077, -0.704494059085846, -0.6947382688522339, -0.6848212480545044, -0.6747409701347351, -0.6644954085350037, -0.654082715511322, -0.6435011029243469, -0.6327488422393799, -0.6218242645263672, -0.6107259392738342, -0.5994524955749512, -0.588002622127533, -0.5763752460479736, -0.5645694136619568, -0.5525843501091003, -0.5404195189476013, -0.5280744433403015, -0.5155490040779114, -0.5028432011604309, -0.489957332611084, -0.4768918752670288, -0.46364760398864746, -0.4502255916595459, -0.4366271495819092, -0.42285391688346863, -0.40890783071517944, -0.3947911262512207, -0.38050636649131775, -0.36605650186538696, -0.3514447808265686, -0.3366748094558716, -0.32175055146217346, -0.30667632818222046, -0.29145678877830505, -0.27609702944755554, -0.2606023848056793, -0.244978666305542, -0.22923193871974945, -0.21336863934993744, -0.19739556312561035, -0.18131977319717407, -0.16514867544174194, -0.1488899439573288, -0.13255153596401215, -0.11614162474870682, -0.09966865181922913, -0.08314123004674911, -0.06656816601753235, -0.04995839670300484, -0.03332099691033363, -0.016665123403072357, 0.0, 0.016391973942518234, 0.0327751450240612, 0.04914073273539543, 0.06548002362251282, 0.08178438246250153, 0.09804527461528778, 0.11425432562828064, 0.1304033100605011, 0.14648418128490448, 0.162489116191864, 0.17841050028800964, 0.194241002202034, 0.2099735140800476, 0.22560124099254608, 0.2411176711320877, 0.25651660561561584, 0.2717921733856201, 0.28693875670433044, 0.30195116996765137, 0.3168244957923889, 0.3315541744232178, 0.3461359739303589, 0.36056599020957947, 0.37484070658683777, 0.38895687460899353, 0.40291160345077515, 0.4167022705078125, 0.4303266108036041, 0.4437826871871948, 0.4570687711238861, 0.47018346190452576, 0.4831256568431854, 0.49589449167251587, 0.5084893107414246, 0.5209097862243652, 0.5331556797027588, 0.5452271699905396, 0.5571243762969971, 0.5688478350639343, 0.5803982019424438, 0.5917761921882629, 0.602982759475708, 0.6140190362930298, 0.6248862147331238, 0.6355857253074646, 0.6461188793182373, 0.6564874053001404, 0.666692852973938, 0.6767369508743286, 0.6866215467453003, 0.6963486075401306, 0.7059199213981628, 0.7153375744819641, 0.7246035933494568, 0.733720064163208, 0.7426891326904297, 0.7515128254890442, 0.760193407535553, 0.768733024597168, 0.7771338820457458, 0.7853981852531433, 0.7935280799865723, 0.8015257716178894, 0.809393584728241, 0.8171335458755493, 0.8247479200363159, 0.8322388529777527, 0.8396085500717163, 0.8468590974807739, 0.8539926409721375, 0.8610113263130188, 0.8679171204566956, 0.8747121691703796, 0.8813984394073486, 0.8879780173301697, 0.8944528102874756, 0.9008248448371887, 0.9070959687232971, 0.9132680892944336, 0.919343113899231, 0.9253228306770325, 0.9312090873718262, 0.9370036721229553, 0.9427082538604736, 0.9483246207237244, 0.9538544416427612, 0.9592993259429932, 0.9646610021591187, 0.9699409604072571, 0.9751408100128174, 0.9802621006965637, 0.9853062629699707, 0.9902749061584473, 0.9951693415641785, 0.9999910593032837, 1.0047414302825928, 1.0094218254089355, 1.014033555984497, 1.0185779333114624, 1.0230562686920166, 1.0274698734283447, 1.0318198204040527, 1.0361074209213257, 1.040333867073059, 1.0445002317428589, 1.048607587814331, 1.0526572465896606, 1.056650161743164, 1.0605874061584473, 1.0644700527191162, 1.0682990550994873, 1.072075366973877, 1.0758000612258911, 1.0794740915298462, 1.0830984115600586, 1.0866737365722656, 1.0902011394500732, 1.0936815738677979, 1.0971156358718872, 1.1005042791366577, 1.1038484573364258, 1.1071487665176392, 1.1104060411453247, 1.1136211156845093, 1.1167947053909302, 1.1199275255203247, 1.1230204105377197, -1.126073956489563, -1.1230204105377197, -1.1199275255203247, -1.1167947053909302, -1.1136211156845093, -1.1104060411453247, -1.1071487665176392, -1.1038484573364258, -1.1005042791366577, -1.0971156358718872, -1.0936815738677979, -1.0902011394500732, -1.0866737365722656, -1.0830984115600586, -1.0794740915298462, -1.0758000612258911, -1.072075366973877, -1.0682990550994873, -1.0644700527191162, -1.0605874061584473, -1.056650161743164, -1.0526572465896606, -1.048607587814331, -1.0445002317428589, -1.040333867073059, -1.0361074209213257, -1.0318198204040527, -1.0274698734283447, -1.0230562686920166, -1.0185779333114624, -1.014033555984497, -1.0094218254089355, -1.0047414302825928, -0.9999910593032837, -0.9951693415641785, -0.9902749061584473, -0.9853062629699707, -0.9802621006965637, -0.9751408100128174, -0.9699409604072571, -0.9646610021591187, -0.9592993259429932, -0.9538544416427612, -0.9483246207237244, -0.9427082538604736, -0.9370036721229553, -0.9312090873718262, -0.9253228306770325, -0.919343113899231, -0.9132680892944336, -0.9070959687232971, -0.9008248448371887, -0.8944528102874756, -0.8879780173301697, -0.8813984394073486, -0.8747121691703796, -0.8679171204566956, -0.8610113263130188, -0.8539926409721375, -0.8468590974807739, -0.8396085500717163, -0.8322388529777527, -0.8247479200363159, -0.8171335458755493, -0.809393584728241, -0.8015257716178894, -0.7935280799865723, -0.7853981852531433, -0.7771338820457458, -0.768733024597168, -0.760193407535553, -0.7515128254890442, -0.7426891326904297, -0.733720064163208, -0.7246035933494568, -0.7153375744819641, -0.7059199213981628, -0.6963486075401306, -0.6866215467453003, -0.6767369508743286, -0.666692852973938, -0.6564874053001404, -0.6461188793182373, -0.6355857253074646, -0.6248862147331238, -0.6140190362930298, -0.602982759475708, -0.5917761921882629, -0.5803982019424438, -0.5688478350639343, -0.5571243762969971, -0.5452271699905396, -0.5331556797027588, -0.5209097862243652, -0.5084893107414246, -0.49589449167251587, -0.4831256568431854, -0.47018346190452576, -0.4570687711238861, -0.4437826871871948, -0.4303266108036041, -0.4167022705078125, -0.40291160345077515, -0.38895687460899353, -0.37484070658683777, -0.36056599020957947, -0.3461359739303589, -0.3315541744232178, -0.3168244957923889, -0.30195116996765137, -0.28693875670433044, -0.2717921733856201, -0.25651660561561584, -0.2411176711320877, -0.22560124099254608, -0.2099735140800476, -0.194241002202034, -0.17841050028800964, -0.162489116191864, -0.14648418128490448, -0.1304033100605011, -0.11425432562828064, -0.09804527461528778, -0.08178438246250153, -0.06548002362251282, -0.04914073273539543, -0.0327751450240612, -0.016391973942518234, 0.0, 0.016127632930874825, 0.03224688395857811, 0.04834938794374466, 0.06442683935165405, 0.08047100901603699, 0.09647377580404282, 0.11242713034152985, 0.12832322716712952, 0.1441543847322464, 0.15991312265396118, 0.17559216916561127, 0.19118446111679077, 0.2066832184791565, 0.22208189964294434, 0.23737424612045288, 0.2525542676448822, 0.26761630177497864, 0.28255495429039, 0.2973651587963104, 0.31204211711883545, 0.3265814483165741, 0.3409789502620697, 0.3552308678627014, 0.3693336546421051, 0.38328415155410767, 0.3970794379711151, 0.4107169508934021, 0.4241943955421448, 0.43750977516174316, 0.4506613314151764, 0.46364760398864746, 0.47646743059158325, 0.4891197979450226, 0.5016040802001953, 0.5139196515083313, 0.5260664224624634, 0.5380442142486572, 0.5498532056808472, 0.5614936351776123, 0.5729661583900452, 0.584271252155304, 0.5954098701477051, 0.6063829064369202, 0.6171913743019104, 0.6278365850448608, 0.6383197903633118, 0.6486424803733826, 0.6588060259819031, 0.6688121557235718, 0.6786624789237976, 0.6883587837219238, 0.6979027986526489, 0.7072964906692505, 0.7165416479110718, 0.7256403565406799, 0.734594464302063, 0.7434060573577881, 0.7520771622657776, 0.7606098651885986, 0.7690061926841736, 0.7772682905197144, 0.7853981852531433, 0.7933979630470276, 0.8012698292732239, 0.8090158104896545, 0.8166379928588867, 0.8241384625434875, 0.8315193057060242, 0.8387824892997742, 0.8459301590919495, 0.8529643416404724, 0.8598869442939758, 0.8667000532150269, 0.8734055161476135, 0.880005419254303, 0.8865015506744385, 0.8928958177566528, 0.8991901874542236, 0.9053863883018494, 0.9114862680435181, 0.917491614818573, 0.9234042167663574, 0.929225742816925, 0.9349579215049744, 0.9406024217605591, 0.9461609125137329, 0.9516350030899048, 0.9570262432098389, 0.9623362421989441, 0.9675664901733398, 0.9727184772491455, 0.9777937531471252, 0.9827937483787537, 0.9877197742462158, 0.9925733804702759, 0.9973558187484741, 1.0020684003829956, 1.006712555885315, 1.0112895965576172, 1.0158005952835083, 1.020246982574463, 1.0246297121047974, 1.0289503335952759, 1.0332096815109253, 1.0374090671539307, 1.041549563407898, 1.045632243156433, 1.049658179283142, 1.0536284446716309, 1.0575441122055054, 1.0614060163497925, 1.0652152299880981, 1.0689728260040283, 1.0726796388626099, 1.0763365030288696, 1.0799444913864136, 1.0835044384002686, 1.0870171785354614, 1.090483546257019, 1.0939044952392578, 1.0972806215286255, 1.1006128787994385, 1.103901982307434, 1.1071487665176392, 1.1103538274765015, 1.1135179996490479, 1.1166421175003052, -1.1197266578674316, -1.1166421175003052, -1.1135179996490479, -1.1103538274765015, -1.1071487665176392, -1.103901982307434, -1.1006128787994385, -1.0972806215286255, -1.0939044952392578, -1.090483546257019, -1.0870171785354614, -1.0835044384002686, -1.0799444913864136, -1.0763365030288696, -1.0726796388626099, -1.0689728260040283, -1.0652152299880981, -1.0614060163497925, -1.0575441122055054, -1.0536284446716309, -1.049658179283142, -1.045632243156433, -1.041549563407898, -1.0374090671539307, -1.0332096815109253, -1.0289503335952759, -1.0246297121047974, -1.020246982574463, -1.0158005952835083, -1.0112895965576172, -1.006712555885315, -1.0020684003829956, -0.9973558187484741, -0.9925733804702759, -0.9877197742462158, -0.9827937483787537, -0.9777937531471252, -0.9727184772491455, -0.9675664901733398, -0.9623362421989441, -0.9570262432098389, -0.9516350030899048, -0.9461609125137329, -0.9406024217605591, -0.9349579215049744, -0.929225742816925, -0.9234042167663574, -0.917491614818573, -0.9114862680435181, -0.9053863883018494, -0.8991901874542236, -0.8928958177566528, -0.8865015506744385, -0.880005419254303, -0.8734055161476135, -0.8667000532150269, -0.8598869442939758, -0.8529643416404724, -0.8459301590919495, -0.8387824892997742, -0.8315193057060242, -0.8241384625434875, -0.8166379928588867, -0.8090158104896545, -0.8012698292732239, -0.7933979630470276, -0.7853981852531433, -0.7772682905197144, -0.7690061926841736, -0.7606098651885986, -0.7520771622657776, -0.7434060573577881, -0.734594464302063, -0.7256403565406799, -0.7165416479110718, -0.7072964906692505, -0.6979027986526489, -0.6883587837219238, -0.6786624789237976, -0.6688121557235718, -0.6588060259819031, -0.6486424803733826, -0.6383197903633118, -0.6278365850448608, -0.6171913743019104, -0.6063829064369202, -0.5954098701477051, -0.584271252155304, -0.5729661583900452, -0.5614936351776123, -0.5498532056808472, -0.5380442142486572, -0.5260664224624634, -0.5139196515083313, -0.5016040802001953, -0.4891197979450226, -0.47646743059158325, -0.46364760398864746, -0.4506613314151764, -0.43750977516174316, -0.4241943955421448, -0.4107169508934021, -0.3970794379711151, -0.38328415155410767, -0.3693336546421051, -0.3552308678627014, -0.3409789502620697, -0.3265814483165741, -0.31204211711883545, -0.2973651587963104, -0.28255495429039, -0.26761630177497864, -0.2525542676448822, -0.23737424612045288, -0.22208189964294434, -0.2066832184791565, -0.19118446111679077, -0.17559216916561127, -0.15991312265396118, -0.1441543847322464, -0.12832322716712952, -0.11242713034152985, -0.09647377580404282, -0.08047100901603699, -0.06442683935165405, -0.04834938794374466, -0.03224688395857811, -0.016127632930874825, 0.0, 0.0158716831356287, 0.0317353717982769, 0.04758310317993164, 0.06340695172548294, 0.07919906824827194, 0.09495170414447784, 0.1106572225689888, 0.1263081133365631, 0.141897052526474, 0.15741688013076782, 0.17286060750484467, 0.1882214993238449, 0.20349304378032684, 0.21866895258426666, 0.23374317586421967, 0.24870999157428741, 0.263563871383667, 0.2782996594905853, 0.29291239380836487, 0.3073974847793579, 0.32175055146217346, 0.3359676003456116, 0.3500448763370514, 0.36397895216941833, 0.3777666687965393, 0.3914051353931427, 0.4048917889595032, 0.4182243347167969, 0.43140071630477905, 0.4444192051887512, 0.4572782814502716, 0.46997663378715515, 0.48251330852508545, 0.49488744139671326, 0.5070984959602356, 0.5191460847854614, 0.5310301184654236, 0.5427504777908325, 0.5543075203895569, 0.5657014846801758, 0.576932966709137, 0.588002622127533, 0.5989112854003906, 0.6096598505973816, 0.6202495098114014, 0.6306812763214111, 0.6409565806388855, 0.6510767340660095, 0.6610431671142578, 0.6708574891090393, 0.6805212497711182, 0.6900361180305481, 0.6994038820266724, 0.7086262702941895, 0.7177051305770874, 0.726642370223999, 0.7354397773742676, 0.7440993189811707, 0.7526230216026306, 0.7610127329826355, 0.7692705392837524, 0.7773983478546143, 0.7853981852531433, 0.7932720184326172, 0.8010218739509583, 0.8086497783660889, 0.8161576986312866, 0.8235476016998291, 0.8308214545249939, 0.8379812240600586, 0.8450288772583008, 0.8519663214683533, 0.8587954640388489, 0.8655182719230652, 0.8721364736557007, 0.8786520957946777, 0.88506680727005, 0.8913825154304504, 0.8976009488105774, 0.903723955154419, 0.909753143787384, 0.9156903028488159, 0.9215371012687683, 0.9272952079772949, 0.9329662322998047, 0.9385517835617065, 0.9440534114837646, 0.9494727253913879, 0.9548112154006958, 0.9600703716278076, 0.9652516841888428, 0.9703565239906311, 0.9753864407539368, 0.9803427457809448, 0.9852268099784851, 0.9900399446487427, 0.9947835803031921, 0.9994588494300842, 1.004067063331604, 1.0086095333099365, 1.013087511062622, 1.017501950263977, 1.021854281425476, 1.026145577430725, 1.0303767919540405, 1.0345492362976074, 1.0386639833450317, 1.0427218675613403, 1.0467242002487183, 1.0506716966629028, 1.054565668106079, 1.0584068298339844, 1.0621963739395142, 1.0659348964691162, 1.0696237087249756, 1.07326340675354, 1.076854944229126, 1.0803992748260498, 1.0838971138000488, 1.08734929561615, 1.0907567739486694, 1.0941201448440552, 1.097440242767334, 1.1007179021835327, 1.1039538383483887, 1.1071487665176392, 1.110303282737732, -1.1134182214736938, -1.110303282737732, -1.1071487665176392, -1.1039538383483887, -1.1007179021835327, -1.097440242767334, -1.0941201448440552, -1.0907567739486694, -1.08734929561615, -1.0838971138000488, -1.0803992748260498, -1.076854944229126, -1.07326340675354, -1.0696237087249756, -1.0659348964691162, -1.0621963739395142, -1.0584068298339844, -1.054565668106079, -1.0506716966629028, -1.0467242002487183, -1.0427218675613403, -1.0386639833450317, -1.0345492362976074, -1.0303767919540405, -1.026145577430725, -1.021854281425476, -1.017501950263977, -1.013087511062622, -1.0086095333099365, -1.004067063331604, -0.9994588494300842, -0.9947835803031921, -0.9900399446487427, -0.9852268099784851, -0.9803427457809448, -0.9753864407539368, -0.9703565239906311, -0.9652516841888428, -0.9600703716278076, -0.9548112154006958, -0.9494727253913879, -0.9440534114837646, -0.9385517835617065, -0.9329662322998047, -0.9272952079772949, -0.9215371012687683, -0.9156903028488159, -0.909753143787384, -0.903723955154419, -0.8976009488105774, -0.8913825154304504, -0.88506680727005, -0.8786520957946777, -0.8721364736557007, -0.8655182719230652, -0.8587954640388489, -0.8519663214683533, -0.8450288772583008, -0.8379812240600586, -0.8308214545249939, -0.8235476016998291, -0.8161576986312866, -0.8086497783660889, -0.8010218739509583, -0.7932720184326172, -0.7853981852531433, -0.7773983478546143, -0.7692705392837524, -0.7610127329826355, -0.7526230216026306, -0.7440993189811707, -0.7354397773742676, -0.726642370223999, -0.7177051305770874, -0.7086262702941895, -0.6994038820266724, -0.6900361180305481, -0.6805212497711182, -0.6708574891090393, -0.6610431671142578, -0.6510767340660095, -0.6409565806388855, -0.6306812763214111, -0.6202495098114014, -0.6096598505973816, -0.5989112854003906, -0.588002622127533, -0.576932966709137, -0.5657014846801758, -0.5543075203895569, -0.5427504777908325, -0.5310301184654236, -0.5191460847854614, -0.5070984959602356, -0.49488744139671326, -0.48251330852508545, -0.46997663378715515, -0.4572782814502716, -0.4444192051887512, -0.43140071630477905, -0.4182243347167969, -0.4048917889595032, -0.3914051353931427, -0.3777666687965393, -0.36397895216941833, -0.3500448763370514, -0.3359676003456116, -0.32175055146217346, -0.3073974847793579, -0.29291239380836487, -0.2782996594905853, -0.263563871383667, -0.24870999157428741, -0.23374317586421967, -0.21866895258426666, -0.20349304378032684, -0.1882214993238449, -0.17286060750484467, -0.15741688013076782, -0.141897052526474, -0.1263081133365631, -0.1106572225689888, -0.09495170414447784, -0.07919906824827194, -0.06340695172548294, -0.04758310317993164, -0.0317353717982769, -0.0158716831356287, 0.0, 0.01562372874468565, 0.031239833682775497, 0.04684071242809296, 0.06241881102323532, 0.07796663045883179, 0.0934767797589302, 0.1089419573545456, 0.12435499578714371, 0.13970887660980225, 0.15499673783779144, 0.17021192610263824, 0.18534794449806213, 0.2003985494375229, 0.215357705950737, 0.23021958768367767, 0.244978666305542, 0.25962963700294495, 0.2741674482822418, 0.288587361574173, 0.30288487672805786, 0.31705576181411743, 0.3310960829257965, 0.3450021743774414, 0.3587706685066223, 0.3723984360694885, 0.3858826756477356, 0.3992207646369934, 0.4124104380607605, 0.4254496395587921, 0.4383365511894226, 0.4510696530342102, 0.46364760398864746, 0.4760693311691284, 0.48833394050598145, 0.5004408359527588, 0.5123894810676575, 0.5241796374320984, 0.5358112454414368, 0.5472843647003174, 0.5585992932319641, 0.5697564482688904, 0.5807563662528992, 0.591599702835083, 0.6022873520851135, 0.6128202080726624, 0.6231993436813354, 0.6334258913993835, 0.6435011029243469, 0.6534263491630554, 0.6632030010223389, 0.6728325486183167, 0.6823165416717529, 0.6916566491127014, 0.7008544206619263, 0.7099116444587708, 0.7188299894332886, 0.7276113033294678, 0.7362574338912964, 0.7447701096534729, 0.7531512975692749, 0.7614027857780457, 0.769526481628418, 0.7775242924690247, 0.7853981852531433, 0.7931499481201172, 0.8007815480232239, 0.808294951915741, 0.8156919479370117, 0.822974443435669, 0.8301444053649902, 0.8372036218643188, 0.8441540002822876, 0.8509973287582397, 0.8577355146408081, 0.8643702864646912, 0.8709034323692322, 0.8773368000984192, 0.8836721181869507, 0.8899110555648804, 0.8960554003715515, 0.902106761932373, 0.9080668091773987, 0.9139372110366821, 0.9197195768356323, 0.9254155158996582, 0.9310265183448792, 0.9365541934967041, 0.9420000314712524, 0.9473655223846436, 0.952652096748352, 0.9578612446784973, 0.9629943370819092, 0.9680528044700623, 0.9730379581451416, 0.977951169013977, 0.9827937483787537, 0.9875669479370117, 0.992272138595581, 0.9969104528427124, 1.0014830827713013, 1.0059914588928223, 1.0104364156723022, 1.0148193836212158, 1.0191413164138794, 1.0234034061431885, 1.027606725692749, 1.031752347946167, 1.0358412265777588, 1.03987455368042, 1.0438530445098877, 1.0477780103683472, 1.0516501665115356, 1.055470585823059, 1.0592402219772339, 1.0629597902297974, 1.0666303634643555, 1.070252776145935, 1.0738277435302734, 1.077356219291687, 1.0808390378952026, 1.0842769145965576, 1.0876706838607788, 1.0910210609436035, 1.0943288803100586, 1.0975948572158813, 1.100819706916809, 1.1040040254592896, -1.1071487665176392, -1.1040040254592896, -1.100819706916809, -1.0975948572158813, -1.0943288803100586, -1.0910210609436035, -1.0876706838607788, -1.0842769145965576, -1.0808390378952026, -1.077356219291687, -1.0738277435302734, -1.070252776145935, -1.0666303634643555, -1.0629597902297974, -1.0592402219772339, -1.055470585823059, -1.0516501665115356, -1.0477780103683472, -1.0438530445098877, -1.03987455368042, -1.0358412265777588, -1.031752347946167, -1.027606725692749, -1.0234034061431885, -1.0191413164138794, -1.0148193836212158, -1.0104364156723022, -1.0059914588928223, -1.0014830827713013, -0.9969104528427124, -0.992272138595581, -0.9875669479370117, -0.9827937483787537, -0.977951169013977, -0.9730379581451416, -0.9680528044700623, -0.9629943370819092, -0.9578612446784973, -0.952652096748352, -0.9473655223846436, -0.9420000314712524, -0.9365541934967041, -0.9310265183448792, -0.9254155158996582, -0.9197195768356323, -0.9139372110366821, -0.9080668091773987, -0.902106761932373, -0.8960554003715515, -0.8899110555648804, -0.8836721181869507, -0.8773368000984192, -0.8709034323692322, -0.8643702864646912, -0.8577355146408081, -0.8509973287582397, -0.8441540002822876, -0.8372036218643188, -0.8301444053649902, -0.822974443435669, -0.8156919479370117, -0.808294951915741, -0.8007815480232239, -0.7931499481201172, -0.7853981852531433, -0.7775242924690247, -0.769526481628418, -0.7614027857780457, -0.7531512975692749, -0.7447701096534729, -0.7362574338912964, -0.7276113033294678, -0.7188299894332886, -0.7099116444587708, -0.7008544206619263, -0.6916566491127014, -0.6823165416717529, -0.6728325486183167, -0.6632030010223389, -0.6534263491630554, -0.6435011029243469, -0.6334258913993835, -0.6231993436813354, -0.6128202080726624, -0.6022873520851135, -0.591599702835083, -0.5807563662528992, -0.5697564482688904, -0.5585992932319641, -0.5472843647003174, -0.5358112454414368, -0.5241796374320984, -0.5123894810676575, -0.5004408359527588, -0.48833394050598145, -0.4760693311691284, -0.46364760398864746, -0.4510696530342102, -0.4383365511894226, -0.4254496395587921, -0.4124104380607605, -0.3992207646369934, -0.3858826756477356, -0.3723984360694885, -0.3587706685066223, -0.3450021743774414, -0.3310960829257965, -0.31705576181411743, -0.30288487672805786, -0.288587361574173, -0.2741674482822418, -0.25962963700294495, -0.244978666305542, -0.23021958768367767, -0.215357705950737, -0.2003985494375229, -0.18534794449806213, -0.17021192610263824, -0.15499673783779144, -0.13970887660980225, -0.12435499578714371, -0.1089419573545456, -0.0934767797589302, -0.07796663045883179, -0.06241881102323532, -0.04684071242809296, -0.031239833682775497, -0.01562372874468565, 0.0, 0.0153834018856287, 0.030759526416659355, 0.04612111672759056, 0.0614609569311142, 0.07677189260721207, 0.09204684942960739, 0.10727885365486145, 0.12246105819940567, 0.13758674263954163, 0.15264932811260223, 0.16764244437217712, 0.18255984783172607, 0.19739556312561035, 0.21214374899864197, 0.22679884731769562, 0.24135549366474152, 0.255808562040329, 0.2701531946659088, 0.2843847870826721, 0.2984989285469055, 0.3124915659427643, 0.326358824968338, 0.3400971293449402, 0.3537031412124634, 0.36717382073402405, 0.38050636649131775, 0.39369821548461914, 0.40674707293510437, 0.4196508526802063, 0.43240776658058167, 0.4450162351131439, 0.45747485756874084, 0.4697825014591217, 0.4819382429122925, 0.49394136667251587, 0.5057913064956665, 0.5174877643585205, 0.529030442237854, 0.5404195189476013, 0.5516549944877625, 0.562737226486206, 0.5736666917800903, 0.5844439268112183, 0.5950696468353271, 0.6055446863174438, 0.61586993932724, 0.6260465383529663, 0.636075496673584, 0.6459581255912781, 0.6556956171989441, 0.6652894020080566, 0.6747409701347351, 0.6840516328811646, 0.6932231187820435, 0.7022569179534912, 0.7111546993255615, 0.7199181318283081, 0.7285489439964294, 0.7370488047599792, 0.7454195022583008, 0.7536627650260925, 0.7617805004119873, 0.7697744369506836, 0.7776463627815247, 0.7853981852531433, 0.7930315732955933, 0.8005484938621521, 0.8079507350921631, 0.8152400255203247, 0.8224182724952698, 0.8294872045516968, 0.8364486694335938, 0.8433043956756592, 0.8500561118125916, 0.8567056059837341, 0.8632546663284302, 0.8697049021720886, 0.876058042049408, 0.8823158144950867, 0.8884797692298889, 0.8945516347885132, 0.9005329608917236, 0.9064253568649292, 0.9122304320335388, 0.9179496765136719, 0.9235846400260925, 0.9291368126869202, 0.9346076846122742, 0.9399986863136292, 0.9453113079071045, 0.9505468606948853, 0.955706775188446, 0.9607923626899719, 0.9658050537109375, 0.9707460999488831, 0.9756168127059937, 0.9804184436798096, 0.9851521849632263, 0.989819347858429, 0.994421124458313, 0.9989585876464844, 1.0034329891204834, 1.007845401763916, 1.0121970176696777, 1.016488790512085, 1.0207219123840332, 1.0248974561691284, 1.0290162563323975, 1.0330795049667358, 1.03708815574646, 1.0410430431365967, 1.0449453592300415, 1.0487958192825317, 1.0525953769683838, 1.056344985961914, 1.0600454807281494, 1.0636978149414062, 1.0673027038574219, 1.0708609819412231, 1.0743736028671265, 1.0778411626815796, 1.0812644958496094, 1.0846444368362427, 1.0879817008972168, 1.091277003288269, 1.0945310592651367, 1.0977445840835571, -1.1009182929992676, -1.0977445840835571, -1.0945310592651367, -1.091277003288269, -1.0879817008972168, -1.0846444368362427, -1.0812644958496094, -1.0778411626815796, -1.0743736028671265, -1.0708609819412231, -1.0673027038574219, -1.0636978149414062, -1.0600454807281494, -1.056344985961914, -1.0525953769683838, -1.0487958192825317, -1.0449453592300415, -1.0410430431365967, -1.03708815574646, -1.0330795049667358, -1.0290162563323975, -1.0248974561691284, -1.0207219123840332, -1.016488790512085, -1.0121970176696777, -1.007845401763916, -1.0034329891204834, -0.9989585876464844, -0.994421124458313, -0.989819347858429, -0.9851521849632263, -0.9804184436798096, -0.9756168127059937, -0.9707460999488831, -0.9658050537109375, -0.9607923626899719, -0.955706775188446, -0.9505468606948853, -0.9453113079071045, -0.9399986863136292, -0.9346076846122742, -0.9291368126869202, -0.9235846400260925, -0.9179496765136719, -0.9122304320335388, -0.9064253568649292, -0.9005329608917236, -0.8945516347885132, -0.8884797692298889, -0.8823158144950867, -0.876058042049408, -0.8697049021720886, -0.8632546663284302, -0.8567056059837341, -0.8500561118125916, -0.8433043956756592, -0.8364486694335938, -0.8294872045516968, -0.8224182724952698, -0.8152400255203247, -0.8079507350921631, -0.8005484938621521, -0.7930315732955933, -0.7853981852531433, -0.7776463627815247, -0.7697744369506836, -0.7617805004119873, -0.7536627650260925, -0.7454195022583008, -0.7370488047599792, -0.7285489439964294, -0.7199181318283081, -0.7111546993255615, -0.7022569179534912, -0.6932231187820435, -0.6840516328811646, -0.6747409701347351, -0.6652894020080566, -0.6556956171989441, -0.6459581255912781, -0.636075496673584, -0.6260465383529663, -0.61586993932724, -0.6055446863174438, -0.5950696468353271, -0.5844439268112183, -0.5736666917800903, -0.562737226486206, -0.5516549944877625, -0.5404195189476013, -0.529030442237854, -0.5174877643585205, -0.5057913064956665, -0.49394136667251587, -0.4819382429122925, -0.4697825014591217, -0.45747485756874084, -0.4450162351131439, -0.43240776658058167, -0.4196508526802063, -0.40674707293510437, -0.39369821548461914, -0.38050636649131775, -0.36717382073402405, -0.3537031412124634, -0.3400971293449402, -0.326358824968338, -0.3124915659427643, -0.2984989285469055, -0.2843847870826721, -0.2701531946659088, -0.255808562040329, -0.24135549366474152, -0.22679884731769562, -0.21214374899864197, -0.19739556312561035, -0.18255984783172607, -0.16764244437217712, -0.15264932811260223, -0.13758674263954163, -0.12246105819940567, -0.10727885365486145, -0.09204684942960739, -0.07677189260721207, -0.0614609569311142, -0.04612111672759056, -0.030759526416659355, -0.0153834018856287, 0.0, 0.015150356106460094, 0.03029376082122326, 0.04542328044772148, 0.060532018542289734, 0.07561314105987549, 0.09065988659858704, 0.10566557943820953, 0.12062367051839828, 0.13552771508693695, 0.15037143230438232, 0.16514867544174194, 0.17985349893569946, 0.19448012113571167, 0.20902293920516968, 0.2234766036272049, 0.23783592879772186, 0.2520959675312042, 0.2662520408630371, 0.28029966354370117, 0.29423457384109497, 0.30805277824401855, 0.32175055146217346, 0.33532437682151794, 0.34877100586891174, 0.3620873987674713, 0.375270813703537, 0.3883187174797058, 0.40122878551483154, 0.4139989912509918, 0.4266274869441986, 0.43911266326904297, 0.4514530897140503, 0.46364760398864746, 0.4756952226161957, 0.4875951111316681, 0.4993467330932617, 0.5109495520591736, 0.5224034190177917, 0.5337082147598267, 0.5448639392852783, 0.5558708310127258, 0.5667291879653931, 0.5774396061897278, 0.588002622127533, 0.5984188914299011, 0.6086893081665039, 0.6188147664070129, 0.6287962794303894, 0.638634979724884, 0.6483319997787476, 0.6578885912895203, 0.667306125164032, 0.6765859723091125, 0.6857295036315918, 0.6947382688522339, 0.7036137580871582, 0.7123575806617737, 0.7209713459014893, 0.7294566035270691, 0.7378150820732117, 0.7460483908653259, 0.7541583180427551, 0.762146532535553, 0.770014762878418, 0.7777647376060486, 0.7853981852531433, 0.7929168343544006, 0.800322413444519, 0.8076167106628418, 0.8148014545440674, 0.8218783140182495, 0.8288490772247314, 0.8357153534889221, 0.8424789309501648, 0.8491414785385132, 0.8557046055793762, 0.8621700406074524, 0.8685393929481506, 0.8748142719268799, 0.8809962868690491, 0.8870869874954224, 0.8930880427360535, 0.899000883102417, 0.9048271179199219, 0.9105681777000427, 0.9162255525588989, 0.9218007922172546, 0.9272952079772949, 0.9327103495597839, 0.938047468662262, 0.9433080554008484, 0.948493480682373, 0.9536049365997314, 0.9586438536643982, 0.9636114239692688, 0.9685089588165283, 0.9733377695083618, 0.9780989289283752, 0.9827937483787537, 0.987423300743103, 0.9919888377189636, 0.9964914917945862, 1.0009323358535767, 1.005312442779541, 1.00963294506073, 1.01389479637146, 1.0180991888046265, 1.0222469568252563, 1.0263391733169556, 1.0303767919540405, 1.0343608856201172, 1.0382921695709229, 1.042171835899353, 1.046000599861145, 1.0497792959213257, 1.053508996963501, 1.0571902990341187, 1.0608242750167847, 1.0644116401672363, 1.067953109741211, 1.071449637413025, 1.074901819229126, 1.0783106088638306, 1.0816764831542969, 1.0850003957748413, 1.0882830619812012, 1.0915249586105347, -1.0947270393371582, -1.0915249586105347, -1.0882830619812012, -1.0850003957748413, -1.0816764831542969, -1.0783106088638306, -1.074901819229126, -1.071449637413025, -1.067953109741211, -1.0644116401672363, -1.0608242750167847, -1.0571902990341187, -1.053508996963501, -1.0497792959213257, -1.046000599861145, -1.042171835899353, -1.0382921695709229, -1.0343608856201172, -1.0303767919540405, -1.0263391733169556, -1.0222469568252563, -1.0180991888046265, -1.01389479637146, -1.00963294506073, -1.005312442779541, -1.0009323358535767, -0.9964914917945862, -0.9919888377189636, -0.987423300743103, -0.9827937483787537, -0.9780989289283752, -0.9733377695083618, -0.9685089588165283, -0.9636114239692688, -0.9586438536643982, -0.9536049365997314, -0.948493480682373, -0.9433080554008484, -0.938047468662262, -0.9327103495597839, -0.9272952079772949, -0.9218007922172546, -0.9162255525588989, -0.9105681777000427, -0.9048271179199219, -0.899000883102417, -0.8930880427360535, -0.8870869874954224, -0.8809962868690491, -0.8748142719268799, -0.8685393929481506, -0.8621700406074524, -0.8557046055793762, -0.8491414785385132, -0.8424789309501648, -0.8357153534889221, -0.8288490772247314, -0.8218783140182495, -0.8148014545440674, -0.8076167106628418, -0.800322413444519, -0.7929168343544006, -0.7853981852531433, -0.7777647376060486, -0.770014762878418, -0.762146532535553, -0.7541583180427551, -0.7460483908653259, -0.7378150820732117, -0.7294566035270691, -0.7209713459014893, -0.7123575806617737, -0.7036137580871582, -0.6947382688522339, -0.6857295036315918, -0.6765859723091125, -0.667306125164032, -0.6578885912895203, -0.6483319997787476, -0.638634979724884, -0.6287962794303894, -0.6188147664070129, -0.6086893081665039, -0.5984188914299011, -0.588002622127533, -0.5774396061897278, -0.5667291879653931, -0.5558708310127258, -0.5448639392852783, -0.5337082147598267, -0.5224034190177917, -0.5109495520591736, -0.4993467330932617, -0.4875951111316681, -0.4756952226161957, -0.46364760398864746, -0.4514530897140503, -0.43911266326904297, -0.4266274869441986, -0.4139989912509918, -0.40122878551483154, -0.3883187174797058, -0.375270813703537, -0.3620873987674713, -0.34877100586891174, -0.33532437682151794, -0.32175055146217346, -0.30805277824401855, -0.29423457384109497, -0.28029966354370117, -0.2662520408630371, -0.2520959675312042, -0.23783592879772186, -0.2234766036272049, -0.20902293920516968, -0.19448012113571167, -0.17985349893569946, -0.16514867544174194, -0.15037143230438232, -0.13552771508693695, -0.12062367051839828, -0.10566557943820953, -0.09065988659858704, -0.07561314105987549, -0.060532018542289734, -0.04542328044772148, -0.03029376082122326, -0.015150356106460094, 0.0, 0.014924265444278717, 0.029841884970664978, 0.04474623128771782, 0.05963071435689926, 0.07448878884315491, 0.08931399136781693, 0.10409993678331375, 0.11884034425020218, 0.13352905213832855, 0.14816002547740936, 0.16272737085819244, 0.17722538113594055, 0.19164849817752838, 0.20599134266376495, 0.2202487289905548, 0.2344156801700592, 0.2484874278306961, 0.262459397315979, 0.2763272821903229, 0.29008692502975464, 0.3037344813346863, 0.3172662854194641, 0.33067888021469116, 0.34396910667419434, 0.35713401436805725, 0.37017083168029785, 0.38307705521583557, 0.39585044980049133, 0.4084888994693756, 0.42099058628082275, 0.43335384130477905, 0.4455772936344147, 0.45765966176986694, 0.4695999324321747, 0.48139721155166626, 0.4930509030818939, 0.5045604109764099, 0.5159255266189575, 0.5271459221839905, 0.5382217168807983, 0.5491529107093811, 0.5599398016929626, 0.5705827474594116, 0.581082284450531, 0.5914390087127686, 0.6016536355018616, 0.6117269396781921, 0.6216599345207214, 0.6314535140991211, 0.6411087512969971, 0.6506268978118896, 0.6600090265274048, 0.6692565083503723, 0.6783707141876221, 0.6873528957366943, 0.6962045431137085, 0.7049271464347839, 0.71352219581604, 0.721991240978241, 0.7303357720375061, 0.7385574579238892, 0.7466578483581543, 0.7546386122703552, 0.7625014185905457, 0.7702478170394897, 0.777879536151886, 0.7853981852531433, 0.7928054332733154, 0.8001030087471008, 0.8072924613952637, 0.8143755793571472, 0.8213539123535156, 0.8282290697097778, 0.8350028395652771, 0.8416767120361328, 0.8482522964477539, 0.8547313213348389, 0.8611152172088623, 0.8674055933952332, 0.8736040592193604, 0.8797121047973633, 0.8857312798500061, 0.8916630148887634, 0.8975088596343994, 0.9032702445983887, 0.9089486598968506, 0.914545476436615, 0.9200620651245117, 0.9254999160766602, 0.9308602809906006, 0.9361445307731628, 0.9413540363311768, 0.9464900493621826, 0.9515538811683655, 0.9565467834472656, 0.9614699482917786, 0.9663246273994446, 0.9711120128631592, 0.9758332967758179, 0.9804895520210266, 0.9850820302963257, 0.989611804485321, 0.9940799474716187, 0.9984874725341797, 1.0028356313705444, 1.0071252584457397, 1.0113574266433716, 1.0155330896377563, 1.0196533203125, 1.0237191915512085, 1.0277312994003296, 1.0316908359527588, 1.0355987548828125, 1.0394556522369385, 1.0432627201080322, 1.047020673751831, 1.0507302284240723, 1.0543924570083618, 1.0580079555511475, 1.0615776777267456, 1.0651023387908936, 1.0685826539993286, 1.0720194578170776, 1.0754133462905884, 1.0787651538848877, 1.082075595855713, 1.0853452682495117, -1.088575005531311, -1.0853452682495117, -1.082075595855713, -1.0787651538848877, -1.0754133462905884, -1.0720194578170776, -1.0685826539993286, -1.0651023387908936, -1.0615776777267456, -1.0580079555511475, -1.0543924570083618, -1.0507302284240723, -1.047020673751831, -1.0432627201080322, -1.0394556522369385, -1.0355987548828125, -1.0316908359527588, -1.0277312994003296, -1.0237191915512085, -1.0196533203125, -1.0155330896377563, -1.0113574266433716, -1.0071252584457397, -1.0028356313705444, -0.9984874725341797, -0.9940799474716187, -0.989611804485321, -0.9850820302963257, -0.9804895520210266, -0.9758332967758179, -0.9711120128631592, -0.9663246273994446, -0.9614699482917786, -0.9565467834472656, -0.9515538811683655, -0.9464900493621826, -0.9413540363311768, -0.9361445307731628, -0.9308602809906006, -0.9254999160766602, -0.9200620651245117, -0.914545476436615, -0.9089486598968506, -0.9032702445983887, -0.8975088596343994, -0.8916630148887634, -0.8857312798500061, -0.8797121047973633, -0.8736040592193604, -0.8674055933952332, -0.8611152172088623, -0.8547313213348389, -0.8482522964477539, -0.8416767120361328, -0.8350028395652771, -0.8282290697097778, -0.8213539123535156, -0.8143755793571472, -0.8072924613952637, -0.8001030087471008, -0.7928054332733154, -0.7853981852531433, -0.777879536151886, -0.7702478170394897, -0.7625014185905457, -0.7546386122703552, -0.7466578483581543, -0.7385574579238892, -0.7303357720375061, -0.721991240978241, -0.71352219581604, -0.7049271464347839, -0.6962045431137085, -0.6873528957366943, -0.6783707141876221, -0.6692565083503723, -0.6600090265274048, -0.6506268978118896, -0.6411087512969971, -0.6314535140991211, -0.6216599345207214, -0.6117269396781921, -0.6016536355018616, -0.5914390087127686, -0.581082284450531, -0.5705827474594116, -0.5599398016929626, -0.5491529107093811, -0.5382217168807983, -0.5271459221839905, -0.5159255266189575, -0.5045604109764099, -0.4930509030818939, -0.48139721155166626, -0.4695999324321747, -0.45765966176986694, -0.4455772936344147, -0.43335384130477905, -0.42099058628082275, -0.4084888994693756, -0.39585044980049133, -0.38307705521583557, -0.37017083168029785, -0.35713401436805725, -0.34396910667419434, -0.33067888021469116, -0.3172662854194641, -0.3037344813346863, -0.29008692502975464, -0.2763272821903229, -0.262459397315979, -0.2484874278306961, -0.2344156801700592, -0.2202487289905548, -0.20599134266376495, -0.19164849817752838, -0.17722538113594055, -0.16272737085819244, -0.14816002547740936, -0.13352905213832855, -0.11884034425020218, -0.10409993678331375, -0.08931399136781693, -0.07448878884315491, -0.05963071435689926, -0.04474623128771782, -0.029841884970664978, -0.014924265444278717, 0.0, 0.014704822562634945, 0.029403287917375565, 0.04408905655145645, 0.058755822479724884, 0.07339732348918915, 0.0880073755979538, 0.10257985442876816, 0.11710874736309052, 0.1315881460905075, 0.14601226150989532, 0.1603754460811615, 0.1746722012758255, 0.18889717757701874, 0.20304521918296814, 0.21711131930351257, 0.23109066486358643, 0.244978666305542, 0.2587708830833435, 0.2724631428718567, 0.2860514521598816, 0.2995319962501526, 0.31290122866630554, 0.32615581154823303, 0.33929261565208435, 0.3523087203502655, 0.3652014434337616, 0.37796831130981445, 0.3906070291996002, 0.4031156003475189, 0.41549208760261536, 0.427734911441803, 0.4398425817489624, 0.45181384682655334, 0.46364760398864746, 0.4753429889678955, 0.4868992269039154, 0.4983157813549042, 0.5095922350883484, 0.5207284092903137, 0.5317240953445435, 0.5425793528556824, 0.55329430103302, 0.5638693571090698, 0.5743048191070557, 0.5846012830734253, 0.5947592854499817, 0.6047795414924622, 0.6146629452705383, 0.6244103312492371, 0.6340227127075195, 0.6435011029243469, 0.65284663438797, 0.6620604395866394, 0.6711438298225403, 0.6800980567932129, 0.6889243721961975, 0.6976242661476135, 0.7061991095542908, 0.7146502733230591, 0.7229793667793274, 0.7311877608299255, 0.7392770648002625, 0.7472487688064575, 0.7551044225692749, 0.7628455758094788, 0.7704738974571228, 0.7779908776283264, 0.7853981852531433, 0.7926973104476929, 0.7998899221420288, 0.8069775700569153, 0.8139618039131165, 0.820844292640686, 0.8276265859603882, 0.8343101739883423, 0.8408966660499573, 0.8473876118659973, 0.8537845015525818, 0.8600888848304749, 0.8663022518157959, 0.8724260926246643, 0.8784618973731995, 0.884411096572876, 0.8902751207351685, 0.8960554003715515, 0.901753306388855, 0.9073703289031982, 0.9129077196121216, 0.9183669090270996, 0.9237491488456726, 0.9290557503700256, 0.9342880845069885, 0.9394474029541016, 0.9445348978042603, 0.9495518207550049, 0.954499363899231, 0.9593787789344788, 0.964191198348999, 0.9689378142356873, 0.9736196398735046, 0.9782379269599915, 0.9827937483787537, 0.9872880578041077, 0.991722047328949, 0.9960967302322388, 1.0004130601882935, 1.0046720504760742, 1.008874773979187, 1.0130220651626587, 1.0171149969100952, 1.0211544036865234, 1.0251412391662598, 1.0290764570236206, 1.0329607725143433, 1.0367952585220337, 1.0405805110931396, 1.044317603111267, 1.0480072498321533, 1.0516501665115356, 1.0552473068237305, 1.058799386024475, 1.0623070001602173, 1.0657711029052734, 1.0691922903060913, 1.0725712776184082, 1.075908899307251, 1.0792056322097778, -1.0824624300003052, -1.0792056322097778, -1.075908899307251, -1.0725712776184082, -1.0691922903060913, -1.0657711029052734, -1.0623070001602173, -1.058799386024475, -1.0552473068237305, -1.0516501665115356, -1.0480072498321533, -1.044317603111267, -1.0405805110931396, -1.0367952585220337, -1.0329607725143433, -1.0290764570236206, -1.0251412391662598, -1.0211544036865234, -1.0171149969100952, -1.0130220651626587, -1.008874773979187, -1.0046720504760742, -1.0004130601882935, -0.9960967302322388, -0.991722047328949, -0.9872880578041077, -0.9827937483787537, -0.9782379269599915, -0.9736196398735046, -0.9689378142356873, -0.964191198348999, -0.9593787789344788, -0.954499363899231, -0.9495518207550049, -0.9445348978042603, -0.9394474029541016, -0.9342880845069885, -0.9290557503700256, -0.9237491488456726, -0.9183669090270996, -0.9129077196121216, -0.9073703289031982, -0.901753306388855, -0.8960554003715515, -0.8902751207351685, -0.884411096572876, -0.8784618973731995, -0.8724260926246643, -0.8663022518157959, -0.8600888848304749, -0.8537845015525818, -0.8473876118659973, -0.8408966660499573, -0.8343101739883423, -0.8276265859603882, -0.820844292640686, -0.8139618039131165, -0.8069775700569153, -0.7998899221420288, -0.7926973104476929, -0.7853981852531433, -0.7779908776283264, -0.7704738974571228, -0.7628455758094788, -0.7551044225692749, -0.7472487688064575, -0.7392770648002625, -0.7311877608299255, -0.7229793667793274, -0.7146502733230591, -0.7061991095542908, -0.6976242661476135, -0.6889243721961975, -0.6800980567932129, -0.6711438298225403, -0.6620604395866394, -0.65284663438797, -0.6435011029243469, -0.6340227127075195, -0.6244103312492371, -0.6146629452705383, -0.6047795414924622, -0.5947592854499817, -0.5846012830734253, -0.5743048191070557, -0.5638693571090698, -0.55329430103302, -0.5425793528556824, -0.5317240953445435, -0.5207284092903137, -0.5095922350883484, -0.4983157813549042, -0.4868992269039154, -0.4753429889678955, -0.46364760398864746, -0.45181384682655334, -0.4398425817489624, -0.427734911441803, -0.41549208760261536, -0.4031156003475189, -0.3906070291996002, -0.37796831130981445, -0.3652014434337616, -0.3523087203502655, -0.33929261565208435, -0.32615581154823303, -0.31290122866630554, -0.2995319962501526, -0.2860514521598816, -0.2724631428718567, -0.2587708830833435, -0.244978666305542, -0.23109066486358643, -0.21711131930351257, -0.20304521918296814, -0.18889717757701874, -0.1746722012758255, -0.1603754460811615, -0.14601226150989532, -0.1315881460905075, -0.11710874736309052, -0.10257985442876816, -0.0880073755979538, -0.07339732348918915, -0.058755822479724884, -0.04408905655145645, -0.029403287917375565, -0.014704822562634945, 0.0, 0.014491738751530647, 0.028977394104003906, 0.04345089569687843, 0.05790620669722557, 0.0723373293876648, 0.08673834055662155, 0.10110337287187576, 0.11542665958404541, 0.12970253825187683, 0.14392544329166412, 0.15808996558189392, 0.1721908152103424, 0.1862228363752365, 0.20018106698989868, 0.2140606790781021, 0.2278570532798767, 0.24156570434570312, 0.2551823854446411, 0.26870301365852356, 0.28212374448776245, 0.29544082283973694, 0.3086508810520172, 0.32175055146217346, 0.33473682403564453, 0.3476068675518036, 0.36035796999931335, 0.3729877173900604, 0.3854938745498657, 0.3978743553161621, 0.41012734174728394, 0.4222511649131775, 0.4342443346977234, 0.4461055397987366, 0.4578337073326111, 0.4694278836250305, 0.4808872938156128, 0.492211252450943, 0.5033993721008301, 0.5144513249397278, 0.5253669023513794, 0.5361460447311401, 0.5467888116836548, 0.557295560836792, 0.5676664113998413, 0.5779019594192505, 0.588002622127533, 0.5979690551757812, 0.6078019738197327, 0.6175022125244141, 0.6270706653594971, 0.6365082263946533, 0.645815908908844, 0.6549948453903198, 0.6640461683273315, 0.6729710102081299, 0.6817706823348999, 0.6904464364051819, 0.6989996433258057, 0.7074315547943115, 0.7157436013221741, 0.7239372134208679, 0.7320138216018677, 0.739974856376648, 0.7478218674659729, 0.7555562853813171, 0.7631796002388, 0.7706933617591858, 0.778099000453949, 0.7853981852531433, 0.7925922870635986, 0.7996829152107239, 0.8066715598106384, 0.8135597109794617, 0.8203489780426025, 0.8270407319068909, 0.8336365818977356, 0.8401379585266113, 0.8465463519096375, 0.8528631925582886, 0.8590899705886841, 0.8652281761169434, 0.8712791204452515, 0.8772442936897278, 0.8831250667572021, 0.8889228105545044, 0.8946389555931091, 0.9002747535705566, 0.9058316349983215, 0.9113107919692993, 0.9167135953903198, 0.9220412969589233, 0.9272952079772949, 0.9324765205383301, 0.9375864267349243, 0.9426262378692627, 0.9475969672203064, 0.9524999856948853, 0.9573362469673157, 0.9621070027351379, 0.966813325881958, 0.9714563488960266, 0.9760370850563049, 0.9805566072463989, 0.9850159287452698, 0.9894161224365234, 0.9937582015991211, 0.9980430603027344, 1.0022717714309692, 1.0064451694488525, 1.0105643272399902, 1.0146300792694092, 1.0186433792114258, 1.0226049423217773, 1.0265158414840698, 1.0303767919540405, 1.0341887474060059, 1.0379524230957031, 1.0416686534881592, 1.0453382730484009, 1.0489619970321655, 1.05254065990448, 1.0560749769210815, 1.0595656633377075, 1.0630133152008057, 1.0664188861846924, 1.0697829723358154, 1.0731061697006226, -1.076389193534851, -1.0731061697006226, -1.0697829723358154, -1.0664188861846924, -1.0630133152008057, -1.0595656633377075, -1.0560749769210815, -1.05254065990448, -1.0489619970321655, -1.0453382730484009, -1.0416686534881592, -1.0379524230957031, -1.0341887474060059, -1.0303767919540405, -1.0265158414840698, -1.0226049423217773, -1.0186433792114258, -1.0146300792694092, -1.0105643272399902, -1.0064451694488525, -1.0022717714309692, -0.9980430603027344, -0.9937582015991211, -0.9894161224365234, -0.9850159287452698, -0.9805566072463989, -0.9760370850563049, -0.9714563488960266, -0.966813325881958, -0.9621070027351379, -0.9573362469673157, -0.9524999856948853, -0.9475969672203064, -0.9426262378692627, -0.9375864267349243, -0.9324765205383301, -0.9272952079772949, -0.9220412969589233, -0.9167135953903198, -0.9113107919692993, -0.9058316349983215, -0.9002747535705566, -0.8946389555931091, -0.8889228105545044, -0.8831250667572021, -0.8772442936897278, -0.8712791204452515, -0.8652281761169434, -0.8590899705886841, -0.8528631925582886, -0.8465463519096375, -0.8401379585266113, -0.8336365818977356, -0.8270407319068909, -0.8203489780426025, -0.8135597109794617, -0.8066715598106384, -0.7996829152107239, -0.7925922870635986, -0.7853981852531433, -0.778099000453949, -0.7706933617591858, -0.7631796002388, -0.7555562853813171, -0.7478218674659729, -0.739974856376648, -0.7320138216018677, -0.7239372134208679, -0.7157436013221741, -0.7074315547943115, -0.6989996433258057, -0.6904464364051819, -0.6817706823348999, -0.6729710102081299, -0.6640461683273315, -0.6549948453903198, -0.645815908908844, -0.6365082263946533, -0.6270706653594971, -0.6175022125244141, -0.6078019738197327, -0.5979690551757812, -0.588002622127533, -0.5779019594192505, -0.5676664113998413, -0.557295560836792, -0.5467888116836548, -0.5361460447311401, -0.5253669023513794, -0.5144513249397278, -0.5033993721008301, -0.492211252450943, -0.4808872938156128, -0.4694278836250305, -0.4578337073326111, -0.4461055397987366, -0.4342443346977234, -0.4222511649131775, -0.41012734174728394, -0.3978743553161621, -0.3854938745498657, -0.3729877173900604, -0.36035796999931335, -0.3476068675518036, -0.33473682403564453, -0.32175055146217346, -0.3086508810520172, -0.29544082283973694, -0.28212374448776245, -0.26870301365852356, -0.2551823854446411, -0.24156570434570312, -0.2278570532798767, -0.2140606790781021, -0.20018106698989868, -0.1862228363752365, -0.1721908152103424, -0.15808996558189392, -0.14392544329166412, -0.12970253825187683, -0.11542665958404541, -0.10110337287187576, -0.08673834055662155, -0.0723373293876648, -0.05790620669722557, -0.04345089569687843, -0.028977394104003906, -0.014491738751530647, 0.0, 0.014284742996096611, 0.02856365777552128, 0.0428309328854084, 0.05708078294992447, 0.0713074654340744, 0.08550529181957245, 0.09966865181922913, 0.11379200965166092, 0.12786991894245148, 0.141897052526474, 0.15586820244789124, 0.1697782725095749, 0.1836223304271698, 0.19739556312561035, 0.21109333634376526, 0.22471116483211517, 0.23824475705623627, 0.25168997049331665, 0.26504287123680115, 0.2782996594905853, 0.29145678877830505, 0.3045108914375305, 0.31745874881744385, 0.3302973508834839, 0.3430239260196686, 0.3556358814239502, 0.36813077330589294, 0.38050636649131775, 0.39276066422462463, 0.4048917889595032, 0.41689807176589966, 0.4287780225276947, 0.44053032994270325, 0.45215386152267456, 0.46364760398864746, 0.4750107526779175, 0.4862426221370697, 0.49734270572662354, 0.5083106160163879, 0.5191460847854614, 0.5298490524291992, 0.5404195189476013, 0.5508575439453125, 0.5611634254455566, 0.5713374614715576, 0.5813801884651184, 0.5912920832633972, 0.6010737419128418, 0.6107259392738342, 0.6202495098114014, 0.6296451687812805, 0.6389139890670776, 0.6480568647384644, 0.6570749282836914, 0.6659692525863647, 0.6747409701347351, 0.683391273021698, 0.6919213533401489, 0.7003326416015625, 0.7086262702941895, 0.7168036699295044, 0.7248661518096924, 0.7328150868415833, 0.7406519055366516, 0.7483780384063721, 0.7559948563575745, 0.7635038495063782, 0.7709064483642578, 0.7782040238380432, 0.7853981852531433, 0.7924902439117432, 0.7994817495346069, 0.8063741326332092, 0.8131688237190247, 0.8198672533035278, 0.8264709711074829, 0.832981288433075, 0.8393996357917786, 0.8457275629043579, 0.8519663214683533, 0.858117401599884, 0.8641821146011353, 0.8701618909835815, 0.876058042049408, 0.8818719387054443, 0.8876048922538757, 0.8932582139968872, 0.898833155632019, 0.9043310284614563, 0.909753143787384, 0.9151006937026978, 0.9203749299049377, 0.9255769848823547, 0.9307081699371338, 0.9357696175575256, 0.9407624006271362, 0.9456877708435059, 0.9505468606948853, 0.9553406834602356, 0.9600703716278076, 0.9647369980812073, 0.9693416357040405, 0.9738852977752686, 0.9783689975738525, 0.9827937483787537, 0.9871605038642883, 0.9914702773094177, 0.9957240223884583, 0.9999226927757263, 1.004067063331604, 1.0081582069396973, 1.0121970176696777, 1.0161842107772827, 1.0201207399368286, 1.0240074396133423, 1.0278451442718506, 1.0316346883773804, 1.035376787185669, 1.0390722751617432, 1.0427218675613403, 1.0463263988494873, 1.0498865842819214, 1.0534030199050903, 1.0568766593933105, 1.0603079795837402, 1.0636978149414062, 1.0670467615127563, -1.0703555345535278, -1.0670467615127563, -1.0636978149414062, -1.0603079795837402, -1.0568766593933105, -1.0534030199050903, -1.0498865842819214, -1.0463263988494873, -1.0427218675613403, -1.0390722751617432, -1.035376787185669, -1.0316346883773804, -1.0278451442718506, -1.0240074396133423, -1.0201207399368286, -1.0161842107772827, -1.0121970176696777, -1.0081582069396973, -1.004067063331604, -0.9999226927757263, -0.9957240223884583, -0.9914702773094177, -0.9871605038642883, -0.9827937483787537, -0.9783689975738525, -0.9738852977752686, -0.9693416357040405, -0.9647369980812073, -0.9600703716278076, -0.9553406834602356, -0.9505468606948853, -0.9456877708435059, -0.9407624006271362, -0.9357696175575256, -0.9307081699371338, -0.9255769848823547, -0.9203749299049377, -0.9151006937026978, -0.909753143787384, -0.9043310284614563, -0.898833155632019, -0.8932582139968872, -0.8876048922538757, -0.8818719387054443, -0.876058042049408, -0.8701618909835815, -0.8641821146011353, -0.858117401599884, -0.8519663214683533, -0.8457275629043579, -0.8393996357917786, -0.832981288433075, -0.8264709711074829, -0.8198672533035278, -0.8131688237190247, -0.8063741326332092, -0.7994817495346069, -0.7924902439117432, -0.7853981852531433, -0.7782040238380432, -0.7709064483642578, -0.7635038495063782, -0.7559948563575745, -0.7483780384063721, -0.7406519055366516, -0.7328150868415833, -0.7248661518096924, -0.7168036699295044, -0.7086262702941895, -0.7003326416015625, -0.6919213533401489, -0.683391273021698, -0.6747409701347351, -0.6659692525863647, -0.6570749282836914, -0.6480568647384644, -0.6389139890670776, -0.6296451687812805, -0.6202495098114014, -0.6107259392738342, -0.6010737419128418, -0.5912920832633972, -0.5813801884651184, -0.5713374614715576, -0.5611634254455566, -0.5508575439453125, -0.5404195189476013, -0.5298490524291992, -0.5191460847854614, -0.5083106160163879, -0.49734270572662354, -0.4862426221370697, -0.4750107526779175, -0.46364760398864746, -0.45215386152267456, -0.44053032994270325, -0.4287780225276947, -0.41689807176589966, -0.4048917889595032, -0.39276066422462463, -0.38050636649131775, -0.36813077330589294, -0.3556358814239502, -0.3430239260196686, -0.3302973508834839, -0.31745874881744385, -0.3045108914375305, -0.29145678877830505, -0.2782996594905853, -0.26504287123680115, -0.25168997049331665, -0.23824475705623627, -0.22471116483211517, -0.21109333634376526, -0.19739556312561035, -0.1836223304271698, -0.1697782725095749, -0.15586820244789124, -0.141897052526474, -0.12786991894245148, -0.11379200965166092, -0.09966865181922913, -0.08550529181957245, -0.0713074654340744, -0.05708078294992447, -0.0428309328854084, -0.02856365777552128, -0.014284742996096611, 0.0, 0.014083575457334518, 0.028161566704511642, 0.04222840070724487, 0.0562785379588604, 0.07030646502971649, 0.0843067318201065, 0.09827395528554916, 0.11220281571149826, 0.12608809769153595, 0.13992467522621155, 0.15370753407478333, 0.1674317717552185, 0.18109264969825745, 0.19468553364276886, 0.2082059532403946, 0.22164955735206604, 0.2350122183561325, 0.24828991293907166, 0.26147881150245667, 0.27457529306411743, 0.2875758409500122, 0.30047717690467834, 0.31327617168426514, 0.325969934463501, 0.3385556936264038, 0.3510308861732483, 0.3633931279182434, 0.37564024329185486, 0.3877701759338379, 0.39978110790252686, 0.41167134046554565, 0.4234394133090973, 0.43508395552635193, 0.44660380482673645, 0.4579979479312897, 0.46926552057266235, 0.4804058074951172, 0.4914182424545288, 0.502302348613739, 0.5130578875541687, 0.5236846804618835, 0.5341825485229492, 0.5445517301559448, 0.5547922253608704, 0.5649043917655945, 0.5748885869979858, 0.5847452878952026, 0.5944750308990479, 0.6040784120559692, 0.6135561466217041, 0.6229090690612793, 0.6321379542350769, 0.6412437558174133, 0.6502274870872498, 0.6590900421142578, 0.667832612991333, 0.6764562129974365, 0.6849620342254639, 0.6933513283729553, 0.7016252279281616, 0.7097850441932678, 0.7178319692611694, 0.7257674336433411, 0.733592689037323, 0.7413091063499451, 0.7489179968833923, 0.7564207911491394, 0.7638188004493713, 0.771113395690918, 0.7783060669898987, 0.7853981852531433, 0.7923910617828369, 0.7992861866950989, 0.8060848712921143, 0.8127885460853577, 0.8193986415863037, 0.8259165287017822, 0.8323435187339783, 0.8386810421943665, 0.8449304103851318, 0.8510929942131042, 0.8571701049804688, 0.8631631135940552, 0.8690732717514038, 0.8749020099639893, 0.8806504607200623, 0.8863199353218079, 0.8919117450714111, 0.8974271416664124, 0.9028672575950623, 0.9082334041595459, 0.913526713848114, 0.9187484383583069, 0.9238996505737305, 0.9289815425872803, 0.9339953064918518, 0.9389419555664062, 0.9438226222991943, 0.9486384391784668, 0.9533904194831848, 0.9580796360969543, 0.9627071619033813, 0.9672738909721375, 0.9717809557914734, 0.9762292504310608, 0.9806197881698608, 0.9849535226821899, 0.9892314076423645, 0.9934542775154114, 0.9976231455802917, 1.0017387866973877, 1.0058022737503052, 1.0098141431808472, 1.0137755870819092, 1.017687201499939, 1.0215498208999634, 1.0253642797470093, 1.029131531715393, 1.032852053642273, 1.0365267992019653, 1.0401564836502075, 1.0437418222427368, 1.047283411026001, 1.0507822036743164, 1.0542386770248413, 1.057653546333313, 1.0610276460647583, -1.064361333847046, -1.0610276460647583, -1.057653546333313, -1.0542386770248413, -1.0507822036743164, -1.047283411026001, -1.0437418222427368, -1.0401564836502075, -1.0365267992019653, -1.032852053642273, -1.029131531715393, -1.0253642797470093, -1.0215498208999634, -1.017687201499939, -1.0137755870819092, -1.0098141431808472, -1.0058022737503052, -1.0017387866973877, -0.9976231455802917, -0.9934542775154114, -0.9892314076423645, -0.9849535226821899, -0.9806197881698608, -0.9762292504310608, -0.9717809557914734, -0.9672738909721375, -0.9627071619033813, -0.9580796360969543, -0.9533904194831848, -0.9486384391784668, -0.9438226222991943, -0.9389419555664062, -0.9339953064918518, -0.9289815425872803, -0.9238996505737305, -0.9187484383583069, -0.913526713848114, -0.9082334041595459, -0.9028672575950623, -0.8974271416664124, -0.8919117450714111, -0.8863199353218079, -0.8806504607200623, -0.8749020099639893, -0.8690732717514038, -0.8631631135940552, -0.8571701049804688, -0.8510929942131042, -0.8449304103851318, -0.8386810421943665, -0.8323435187339783, -0.8259165287017822, -0.8193986415863037, -0.8127885460853577, -0.8060848712921143, -0.7992861866950989, -0.7923910617828369, -0.7853981852531433, -0.7783060669898987, -0.771113395690918, -0.7638188004493713, -0.7564207911491394, -0.7489179968833923, -0.7413091063499451, -0.733592689037323, -0.7257674336433411, -0.7178319692611694, -0.7097850441932678, -0.7016252279281616, -0.6933513283729553, -0.6849620342254639, -0.6764562129974365, -0.667832612991333, -0.6590900421142578, -0.6502274870872498, -0.6412437558174133, -0.6321379542350769, -0.6229090690612793, -0.6135561466217041, -0.6040784120559692, -0.5944750308990479, -0.5847452878952026, -0.5748885869979858, -0.5649043917655945, -0.5547922253608704, -0.5445517301559448, -0.5341825485229492, -0.5236846804618835, -0.5130578875541687, -0.502302348613739, -0.4914182424545288, -0.4804058074951172, -0.46926552057266235, -0.4579979479312897, -0.44660380482673645, -0.43508395552635193, -0.4234394133090973, -0.41167134046554565, -0.39978110790252686, -0.3877701759338379, -0.37564024329185486, -0.3633931279182434, -0.3510308861732483, -0.3385556936264038, -0.325969934463501, -0.31327617168426514, -0.30047717690467834, -0.2875758409500122, -0.27457529306411743, -0.26147881150245667, -0.24828991293907166, -0.2350122183561325, -0.22164955735206604, -0.2082059532403946, -0.19468553364276886, -0.18109264969825745, -0.1674317717552185, -0.15370753407478333, -0.13992467522621155, -0.12608809769153595, -0.11220281571149826, -0.09827395528554916, -0.0843067318201065, -0.07030646502971649, -0.0562785379588604, -0.04222840070724487, -0.028161566704511642, -0.014083575457334518, 0.0, 0.013887995854020119, 0.0277706366032362, 0.041642580181360245, 0.055498506873846054, 0.06933313608169556, 0.08314123004674911, 0.09691762924194336, 0.1106572225689888, 0.12435499578714371, 0.13800601661205292, 0.151605486869812, 0.16514867544174194, 0.1786310076713562, 0.19204801321029663, 0.2053953856229782, 0.21866895258426666, 0.23186466097831726, 0.244978666305542, 0.2580072283744812, 0.2709468603134155, 0.283794105052948, 0.2965458035469055, 0.30919891595840454, 0.32175055146217346, 0.3341980576515198, 0.34653887152671814, 0.3587706685066223, 0.3708913028240204, 0.3828987181186676, 0.3947911262512207, 0.4065668284893036, 0.4182243347167969, 0.4297622740268707, 0.441179484128952, 0.4524748921394348, 0.46364760398864746, 0.4746968746185303, 0.4856221079826355, 0.49642276763916016, 0.5070984959602356, 0.5176491141319275, 0.5280744433403015, 0.5383744835853577, 0.5485494136810303, 0.5585992932319641, 0.5685245394706726, 0.5783255100250244, 0.588002622127533, 0.597556471824646, 0.6069876551628113, 0.6162969470024109, 0.6254850625991821, 0.6345527768135071, 0.6435011029243469, 0.6523308753967285, 0.6610431671142578, 0.6696389317512512, 0.6781193017959595, 0.6864853501319885, 0.6947382688522339, 0.7028791904449463, 0.710909366607666, 0.7188299894332886, 0.726642370223999, 0.7343476414680481, 0.7419472932815552, 0.749442458152771, 0.7568345069885254, 0.7641247510910034, 0.7713145613670349, 0.7784052491188049, 0.7853981852531433, 0.7922946214675903, 0.7990959286689758, 0.8058034777641296, 0.8124186396598816, 0.8189426064491272, 0.8253768682479858, 0.831722617149353, 0.8379812240600586, 0.8441540002822876, 0.8502421975135803, 0.8562471270561218, 0.8621700406074524, 0.8680122494697571, 0.8737749457359314, 0.8794593811035156, 0.88506680727005, 0.8905984163284302, 0.8960554003715515, 0.9014388918876648, 0.9067501425743103, 0.9119902849197388, 0.9171604514122009, 0.9222617149353027, 0.9272952079772949, 0.9322620630264282, 0.9371632933616638, 0.9420000314712524, 0.9467732906341553, 0.9514840245246887, 0.9561333656311035, 0.9607222676277161, 0.9652516841888428, 0.9697225689888, 0.9741359353065491, 0.9784926772117615, 0.9827937483787537, 0.9870399832725525, 0.9912323355674744, 0.9953716993331909, 0.9994588494300842, 1.0034947395324707, 1.0074800252914429, 1.011415719985962, 1.0153025388717651, 1.0191413164138794, 1.022932767868042, 1.0266777276992798, 1.0303767919540405, 1.0340309143066406, 1.0376405715942383, 1.04120671749115, 1.0447299480438232, 1.048210859298706, 1.0516501665115356, 1.0550487041473389, -1.0584068298339844, -1.0550487041473389, -1.0516501665115356, -1.048210859298706, -1.0447299480438232, -1.04120671749115, -1.0376405715942383, -1.0340309143066406, -1.0303767919540405, -1.0266777276992798, -1.022932767868042, -1.0191413164138794, -1.0153025388717651, -1.011415719985962, -1.0074800252914429, -1.0034947395324707, -0.9994588494300842, -0.9953716993331909, -0.9912323355674744, -0.9870399832725525, -0.9827937483787537, -0.9784926772117615, -0.9741359353065491, -0.9697225689888, -0.9652516841888428, -0.9607222676277161, -0.9561333656311035, -0.9514840245246887, -0.9467732906341553, -0.9420000314712524, -0.9371632933616638, -0.9322620630264282, -0.9272952079772949, -0.9222617149353027, -0.9171604514122009, -0.9119902849197388, -0.9067501425743103, -0.9014388918876648, -0.8960554003715515, -0.8905984163284302, -0.88506680727005, -0.8794593811035156, -0.8737749457359314, -0.8680122494697571, -0.8621700406074524, -0.8562471270561218, -0.8502421975135803, -0.8441540002822876, -0.8379812240600586, -0.831722617149353, -0.8253768682479858, -0.8189426064491272, -0.8124186396598816, -0.8058034777641296, -0.7990959286689758, -0.7922946214675903, -0.7853981852531433, -0.7784052491188049, -0.7713145613670349, -0.7641247510910034, -0.7568345069885254, -0.749442458152771, -0.7419472932815552, -0.7343476414680481, -0.726642370223999, -0.7188299894332886, -0.710909366607666, -0.7028791904449463, -0.6947382688522339, -0.6864853501319885, -0.6781193017959595, -0.6696389317512512, -0.6610431671142578, -0.6523308753967285, -0.6435011029243469, -0.6345527768135071, -0.6254850625991821, -0.6162969470024109, -0.6069876551628113, -0.597556471824646, -0.588002622127533, -0.5783255100250244, -0.5685245394706726, -0.5585992932319641, -0.5485494136810303, -0.5383744835853577, -0.5280744433403015, -0.5176491141319275, -0.5070984959602356, -0.49642276763916016, -0.4856221079826355, -0.4746968746185303, -0.46364760398864746, -0.4524748921394348, -0.441179484128952, -0.4297622740268707, -0.4182243347167969, -0.4065668284893036, -0.3947911262512207, -0.3828987181186676, -0.3708913028240204, -0.3587706685066223, -0.34653887152671814, -0.3341980576515198, -0.32175055146217346, -0.30919891595840454, -0.2965458035469055, -0.283794105052948, -0.2709468603134155, -0.2580072283744812, -0.244978666305542, -0.23186466097831726, -0.21866895258426666, -0.2053953856229782, -0.19204801321029663, -0.1786310076713562, -0.16514867544174194, -0.151605486869812, -0.13800601661205292, -0.12435499578714371, -0.1106572225689888, -0.09691762924194336, -0.08314123004674911, -0.06933313608169556, -0.055498506873846054, -0.041642580181360245, -0.0277706366032362, -0.013887995854020119, 0.0, 0.013697773218154907, 0.027390409260988235, 0.041072778403759, 0.054739780724048615, 0.06838634610176086, 0.08200744539499283, 0.09559811651706696, 0.10915346443653107, 0.12266865372657776, 0.13613896071910858, 0.14955973625183105, 0.16292646527290344, 0.17623469233512878, 0.18948015570640564, 0.20265866816043854, 0.21576619148254395, 0.22879885137081146, 0.24175286293029785, 0.2546246647834778, 0.2674107849597931, 0.2801079750061035, 0.29271307587623596, 0.30522313714027405, 0.31763535737991333, 0.3299470841884613, 0.3421558737754822, 0.3542594313621521, 0.3662555515766144, 0.3781423270702362, 0.38991785049438477, 0.4015805423259735, 0.4131288230419159, 0.42456138134002686, 0.4358769655227661, 0.4470745325088501, 0.4581531584262848, 0.4691120386123657, 0.47995051741600037, 0.49066805839538574, 0.5012642741203308, 0.5117388367652893, 0.5220916271209717, 0.5323225259780884, 0.5424315929412842, 0.5524189472198486, 0.5622848272323608, 0.5720295310020447, 0.5816534757614136, 0.5911571383476257, 0.6005411148071289, 0.6098060011863708, 0.6189524531364441, 0.6279813051223755, 0.6368932723999023, 0.6456893086433411, 0.6543702483177185, 0.6629371047019958, 0.6713908910751343, 0.6797325611114502, 0.6879633069038391, 0.6960841417312622, 0.7040963172912598, 0.712000846862793, 0.7197989821434021, 0.7274919748306274, 0.7350809574127197, 0.742567241191864, 0.7499520182609558, 0.7572365999221802, 0.7644222378730774, 0.7715101838111877, 0.7785017490386963, 0.7853981852531433, 0.7922008037567139, 0.7989108562469482, 0.8055296540260315, 0.8120585083961487, 0.8184986710548401, 0.824851393699646, 0.8311179280281067, 0.8372995853424072, 0.8433975577354431, 0.8494131565093994, 0.8553475737571716, 0.8612020015716553, 0.8669776916503906, 0.872675895690918, 0.8782976865768433, 0.8838443160057068, 0.8893169164657593, 0.8947166800498962, 0.9000447392463684, 0.9053021669387817, 0.910490095615387, 0.91560959815979, 0.9206618070602417, 0.9256477952003479, 0.930568516254425, 0.9354251027107239, 0.9402185678482056, 0.9449498653411865, 0.9496200680732727, 0.9542300701141357, 0.9587808847427368, 0.9632734060287476, 0.9677086472511292, 0.9720875024795532, 0.9764108061790466, 0.9806795716285706, 0.9848945736885071, 0.9890567064285278, 0.9931668043136597, 0.9972257018089294, 1.0012342929840088, 1.0051932334899902, 1.0091034173965454, 1.0129656791687012, 1.0167806148529053, 1.0205491781234741, 1.024271845817566, 1.0279496908187866, 1.0315830707550049, 1.035172939300537, 1.038719892501831, 1.042224645614624, 1.0456877946853638, 1.0491100549697876, -1.0524920225143433, -1.0491100549697876, -1.0456877946853638, -1.042224645614624, -1.038719892501831, -1.035172939300537, -1.0315830707550049, -1.0279496908187866, -1.024271845817566, -1.0205491781234741, -1.0167806148529053, -1.0129656791687012, -1.0091034173965454, -1.0051932334899902, -1.0012342929840088, -0.9972257018089294, -0.9931668043136597, -0.9890567064285278, -0.9848945736885071, -0.9806795716285706, -0.9764108061790466, -0.9720875024795532, -0.9677086472511292, -0.9632734060287476, -0.9587808847427368, -0.9542300701141357, -0.9496200680732727, -0.9449498653411865, -0.9402185678482056, -0.9354251027107239, -0.930568516254425, -0.9256477952003479, -0.9206618070602417, -0.91560959815979, -0.910490095615387, -0.9053021669387817, -0.9000447392463684, -0.8947166800498962, -0.8893169164657593, -0.8838443160057068, -0.8782976865768433, -0.872675895690918, -0.8669776916503906, -0.8612020015716553, -0.8553475737571716, -0.8494131565093994, -0.8433975577354431, -0.8372995853424072, -0.8311179280281067, -0.824851393699646, -0.8184986710548401, -0.8120585083961487, -0.8055296540260315, -0.7989108562469482, -0.7922008037567139, -0.7853981852531433, -0.7785017490386963, -0.7715101838111877, -0.7644222378730774, -0.7572365999221802, -0.7499520182609558, -0.742567241191864, -0.7350809574127197, -0.7274919748306274, -0.7197989821434021, -0.712000846862793, -0.7040963172912598, -0.6960841417312622, -0.6879633069038391, -0.6797325611114502, -0.6713908910751343, -0.6629371047019958, -0.6543702483177185, -0.6456893086433411, -0.6368932723999023, -0.6279813051223755, -0.6189524531364441, -0.6098060011863708, -0.6005411148071289, -0.5911571383476257, -0.5816534757614136, -0.5720295310020447, -0.5622848272323608, -0.5524189472198486, -0.5424315929412842, -0.5323225259780884, -0.5220916271209717, -0.5117388367652893, -0.5012642741203308, -0.49066805839538574, -0.47995051741600037, -0.4691120386123657, -0.4581531584262848, -0.4470745325088501, -0.4358769655227661, -0.42456138134002686, -0.4131288230419159, -0.4015805423259735, -0.38991785049438477, -0.3781423270702362, -0.3662555515766144, -0.3542594313621521, -0.3421558737754822, -0.3299470841884613, -0.31763535737991333, -0.30522313714027405, -0.29271307587623596, -0.2801079750061035, -0.2674107849597931, -0.2546246647834778, -0.24175286293029785, -0.22879885137081146, -0.21576619148254395, -0.20265866816043854, -0.18948015570640564, -0.17623469233512878, -0.16292646527290344, -0.14955973625183105, -0.13613896071910858, -0.12266865372657776, -0.10915346443653107, -0.09559811651706696, -0.08200744539499283, -0.06838634610176086, -0.054739780724048615, -0.041072778403759, -0.027390409260988235, -0.013697773218154907, 0.0, 0.013512690551578999, 0.027020448818802834, 0.04051835089921951, 0.054001498967409134, 0.06746502220630646, 0.08090409636497498, 0.09431394934654236, 0.10768987238407135, 0.12102721631526947, 0.1343214362859726, 0.14756807684898376, 0.1607627421617508, 0.17390118539333344, 0.1869792640209198, 0.19999295473098755, 0.2129383534193039, 0.2258116751909256, 0.23860932886600494, 0.251327782869339, 0.2639637291431427, 0.276513934135437, 0.28897541761398315, 0.30134522914886475, 0.3136206567287445, 0.3257991075515747, 0.33787819743156433, 0.34985560178756714, 0.361729234457016, 0.3734971582889557, 0.3851574957370758, 0.3967086672782898, 0.4081490933895111, 0.4194774627685547, 0.43069252371788025, 0.44179317355155945, 0.4527784585952759, 0.46364760398864746, 0.4743998944759369, 0.4850347340106964, 0.4955516755580902, 0.505950391292572, 0.5162306427955627, 0.5263923406600952, 0.5364354848861694, 0.5463600158691406, 0.5561662316322327, 0.5658543109893799, 0.5754246711730957, 0.584877610206604, 0.5942137241363525, 0.6034334897994995, 0.6125375628471375, 0.6215265989303589, 0.6304014325141907, 0.6391627192497253, 0.6478114128112793, 0.6563483476638794, 0.664774477481842, 0.6730907559394836, 0.6812981963157654, 0.6893978714942932, 0.6973907947540283, 0.7052780985832214, 0.7130608558654785, 0.7207401990890503, 0.728317379951477, 0.7357934713363647, 0.7431697845458984, 0.7504473924636841, 0.757627546787262, 0.7647114396095276, 0.771700382232666, 0.7785955667495728, 0.7853981852531433, 0.792109489440918, 0.798730731010437, 0.805263102054596, 0.8117078542709351, 0.8180662989616394, 0.8243395090103149, 0.8305287957191467, 0.8366353511810303, 0.8426603078842163, 0.8486049771308899, 0.8544704914093018, 0.8602579832077026, 0.8659687042236328, 0.8716037273406982, 0.8771642446517944, 0.8826513886451721, 0.8880662322044373, 0.8934099078178406, 0.898683488368988, 0.9038881063461304, 0.9090248346328735, 0.9140946865081787, 0.9190986752510071, 0.9240378737449646, 0.9289133548736572, 0.9337260127067566, 0.9384768605232239, 0.9431669116020203, 0.9477970600128174, 0.9523683190345764, 0.956881582736969, 0.9613378047943115, 0.9657378196716309, 0.9700825214385986, 0.9743728637695312, 0.9786096215248108, 0.9827937483787537, 0.9869259595870972, 0.9910070896148682, 0.9950380325317383, 0.9990195035934448, 1.0029523372650146, 1.0068371295928955, 1.0106749534606934, 1.0144662857055664, 1.0182119607925415, 1.021912693977356, 1.025569200515747, 1.0291820764541626, 1.0327521562576294, 1.0362799167633057, 1.0397661924362183, 1.043211579322815, -1.0466166734695435, -1.043211579322815, -1.0397661924362183, -1.0362799167633057, -1.0327521562576294, -1.0291820764541626, -1.025569200515747, -1.021912693977356, -1.0182119607925415, -1.0144662857055664, -1.0106749534606934, -1.0068371295928955, -1.0029523372650146, -0.9990195035934448, -0.9950380325317383, -0.9910070896148682, -0.9869259595870972, -0.9827937483787537, -0.9786096215248108, -0.9743728637695312, -0.9700825214385986, -0.9657378196716309, -0.9613378047943115, -0.956881582736969, -0.9523683190345764, -0.9477970600128174, -0.9431669116020203, -0.9384768605232239, -0.9337260127067566, -0.9289133548736572, -0.9240378737449646, -0.9190986752510071, -0.9140946865081787, -0.9090248346328735, -0.9038881063461304, -0.898683488368988, -0.8934099078178406, -0.8880662322044373, -0.8826513886451721, -0.8771642446517944, -0.8716037273406982, -0.8659687042236328, -0.8602579832077026, -0.8544704914093018, -0.8486049771308899, -0.8426603078842163, -0.8366353511810303, -0.8305287957191467, -0.8243395090103149, -0.8180662989616394, -0.8117078542709351, -0.805263102054596, -0.798730731010437, -0.792109489440918, -0.7853981852531433, -0.7785955667495728, -0.771700382232666, -0.7647114396095276, -0.757627546787262, -0.7504473924636841, -0.7431697845458984, -0.7357934713363647, -0.728317379951477, -0.7207401990890503, -0.7130608558654785, -0.7052780985832214, -0.6973907947540283, -0.6893978714942932, -0.6812981963157654, -0.6730907559394836, -0.664774477481842, -0.6563483476638794, -0.6478114128112793, -0.6391627192497253, -0.6304014325141907, -0.6215265989303589, -0.6125375628471375, -0.6034334897994995, -0.5942137241363525, -0.584877610206604, -0.5754246711730957, -0.5658543109893799, -0.5561662316322327, -0.5463600158691406, -0.5364354848861694, -0.5263923406600952, -0.5162306427955627, -0.505950391292572, -0.4955516755580902, -0.4850347340106964, -0.4743998944759369, -0.46364760398864746, -0.4527784585952759, -0.44179317355155945, -0.43069252371788025, -0.4194774627685547, -0.4081490933895111, -0.3967086672782898, -0.3851574957370758, -0.3734971582889557, -0.361729234457016, -0.34985560178756714, -0.33787819743156433, -0.3257991075515747, -0.3136206567287445, -0.30134522914886475, -0.28897541761398315, -0.276513934135437, -0.2639637291431427, -0.251327782869339, -0.23860932886600494, -0.2258116751909256, -0.2129383534193039, -0.19999295473098755, -0.1869792640209198, -0.17390118539333344, -0.1607627421617508, -0.14756807684898376, -0.1343214362859726, -0.12102721631526947, -0.10768987238407135, -0.09431394934654236, -0.08090409636497498, -0.06746502220630646, -0.054001498967409134, -0.04051835089921951, -0.027020448818802834, -0.013512690551578999, 0.0, 0.013332542963325977, 0.02666034922003746, 0.03997868672013283, 0.053282853215932846, 0.06656816601753235, 0.07982998341321945, 0.09306372702121735, 0.1062648594379425, 0.11942892521619797, 0.13255153596401215, 0.14562837779521942, 0.15865525603294373, 0.17162807285785675, 0.18454279005527496, 0.19739556312561035, 0.21018259227275848, 0.22290022671222687, 0.23554497957229614, 0.2481134533882141, 0.2606023848056793, 0.27300870418548584, 0.2853294312953949, 0.29756173491477966, 0.30970293283462524, 0.32175055146217346, 0.3337021768093109, 0.3455555737018585, 0.35730868577957153, 0.36895954608917236, 0.38050636649131775, 0.39194753766059875, 0.40328148007392883, 0.4145068824291229, 0.42562246322631836, 0.4366271495819092, 0.447519987821579, 0.45830005407333374, 0.4689667224884033, 0.4795192778110504, 0.489957332611084, 0.5002804398536682, 0.5104883313179016, 0.5205808281898499, 0.5305578708648682, 0.5404195189476013, 0.5501657724380493, 0.559796929359436, 0.5693131685256958, 0.5787149667739868, 0.588002622127533, 0.5971766710281372, 0.6062376499176025, 0.6151862144470215, 0.6240230798721313, 0.6327488422393799, 0.641364336013794, 0.6498704552650452, 0.6582679748535156, 0.6665578484535217, 0.6747409701347351, 0.6828182935714722, 0.6907909512519836, 0.6986598372459412, 0.7064260840415955, 0.7140907049179077, 0.7216548323631287, 0.729119598865509, 0.7364861369132996, 0.743755578994751, 0.750929057598114, 0.7580077648162842, 0.7649928331375122, 0.7718854546546936, 0.7786868810653687, 0.7853981852531433, 0.7920205593109131, 0.798555314540863, 0.8050035238265991, 0.8113663792610168, 0.8176450729370117, 0.8238407373428345, 0.8299546241760254, 0.8359878659248352, 0.8419415950775146, 0.8478169441223145, 0.8536151051521301, 0.8593372106552124, 0.8649843335151672, 0.8705575466156006, 0.876058042049408, 0.8814868927001953, 0.8868451118469238, 0.8921338319778442, 0.8973540663719177, 0.9025068879127502, 0.907593309879303, 0.9126144051551819, 0.9175710678100586, 0.9224643111228943, 0.9272952079772949, 0.9320646524429321, 0.9367735981941223, 0.9414229989051819, 0.9460138082504272, 0.9505468606948853, 0.9550231099128723, 0.9594433903694153, 0.9638086557388306, 0.968119740486145, 0.9723774194717407, 0.9765826463699341, 0.9807361364364624, 0.9848387241363525, 0.9888911843299866, 0.9928944110870361, 0.996849000453949, 1.0007559061050415, 1.0046156644821167, 1.0084291696548462, 1.0121970176696777, 1.0159200429916382, 1.0195988416671753, 1.0232341289520264, 1.0268265008926392, 1.0303767919540405, 1.0338855981826782, 1.037353515625, -1.040781021118164, -1.037353515625, -1.0338855981826782, -1.0303767919540405, -1.0268265008926392, -1.0232341289520264, -1.0195988416671753, -1.0159200429916382, -1.0121970176696777, -1.0084291696548462, -1.0046156644821167, -1.0007559061050415, -0.996849000453949, -0.9928944110870361, -0.9888911843299866, -0.9848387241363525, -0.9807361364364624, -0.9765826463699341, -0.9723774194717407, -0.968119740486145, -0.9638086557388306, -0.9594433903694153, -0.9550231099128723, -0.9505468606948853, -0.9460138082504272, -0.9414229989051819, -0.9367735981941223, -0.9320646524429321, -0.9272952079772949, -0.9224643111228943, -0.9175710678100586, -0.9126144051551819, -0.907593309879303, -0.9025068879127502, -0.8973540663719177, -0.8921338319778442, -0.8868451118469238, -0.8814868927001953, -0.876058042049408, -0.8705575466156006, -0.8649843335151672, -0.8593372106552124, -0.8536151051521301, -0.8478169441223145, -0.8419415950775146, -0.8359878659248352, -0.8299546241760254, -0.8238407373428345, -0.8176450729370117, -0.8113663792610168, -0.8050035238265991, -0.798555314540863, -0.7920205593109131, -0.7853981852531433, -0.7786868810653687, -0.7718854546546936, -0.7649928331375122, -0.7580077648162842, -0.750929057598114, -0.743755578994751, -0.7364861369132996, -0.729119598865509, -0.7216548323631287, -0.7140907049179077, -0.7064260840415955, -0.6986598372459412, -0.6907909512519836, -0.6828182935714722, -0.6747409701347351, -0.6665578484535217, -0.6582679748535156, -0.6498704552650452, -0.641364336013794, -0.6327488422393799, -0.6240230798721313, -0.6151862144470215, -0.6062376499176025, -0.5971766710281372, -0.588002622127533, -0.5787149667739868, -0.5693131685256958, -0.559796929359436, -0.5501657724380493, -0.5404195189476013, -0.5305578708648682, -0.5205808281898499, -0.5104883313179016, -0.5002804398536682, -0.489957332611084, -0.4795192778110504, -0.4689667224884033, -0.45830005407333374, -0.447519987821579, -0.4366271495819092, -0.42562246322631836, -0.4145068824291229, -0.40328148007392883, -0.39194753766059875, -0.38050636649131775, -0.36895954608917236, -0.35730868577957153, -0.3455555737018585, -0.3337021768093109, -0.32175055146217346, -0.30970293283462524, -0.29756173491477966, -0.2853294312953949, -0.27300870418548584, -0.2606023848056793, -0.2481134533882141, -0.23554497957229614, -0.22290022671222687, -0.21018259227275848, -0.19739556312561035, -0.18454279005527496, -0.17162807285785675, -0.15865525603294373, -0.14562837779521942, -0.13255153596401215, -0.11942892521619797, -0.1062648594379425, -0.09306372702121735, -0.07982998341321945, -0.06656816601753235, -0.053282853215932846, -0.03997868672013283, -0.02666034922003746, -0.013332542963325977, 0.0, 0.013157135806977749, 0.026309717446565628, 0.03945320099592209, 0.052583061158657074, 0.06569480150938034, 0.07878395915031433, 0.09184612333774567, 0.10487693548202515, 0.11787210404872894, 0.130827397108078, 0.14373867213726044, 0.15660187602043152, 0.16941304504871368, 0.18216830492019653, 0.1948639154434204, 0.20749622583389282, 0.22006170451641083, 0.23255693912506104, 0.244978666305542, 0.2573237121105194, 0.26958906650543213, 0.28177186846733093, 0.29386934638023376, 0.3058788776397705, 0.31779801845550537, 0.3296244144439697, 0.3413558900356293, 0.35299038887023926, 0.36452600359916687, 0.37596094608306885, 0.38729360699653625, 0.39852243661880493, 0.40964609384536743, 0.42066335678100586, 0.4315730631351471, 0.44237422943115234, 0.45306599140167236, 0.46364760398864746, 0.4741184413433075, 0.4844779372215271, 0.49472567439079285, 0.5048613548278809, 0.5148847699165344, 0.5247957706451416, 0.5345942974090576, 0.544280469417572, 0.5538544058799744, 0.563316285610199, 0.5726664066314697, 0.5819051265716553, 0.5910329222679138, 0.6000502109527588, 0.6089576482772827, 0.6177557110786438, 0.6264451742172241, 0.635026752948761, 0.6435011029243469, 0.6518691182136536, 0.660131573677063, 0.6682894229888916, 0.6763435006141663, 0.6842948198318481, 0.6921442747116089, 0.6998928785324097, 0.7075416445732117, 0.7150917053222656, 0.7225440144538879, 0.7298996448516846, 0.7371597290039062, 0.7443253993988037, 0.7513976693153381, 0.758377730846405, 0.7652666568756104, 0.7720656394958496, 0.7787757515907288, 0.7853981852531433, 0.7919340133666992, 0.798384428024292, 0.8047505617141724, 0.8110335469245911, 0.8172345161437988, 0.8233546018600464, 0.8293949365615845, 0.8353565335273743, 0.841240644454956, 0.8470483422279358, 0.8527806401252747, 0.8584387302398682, 0.8640236258506775, 0.8695363998413086, 0.8749781250953674, 0.88034987449646, 0.8856526613235474, 0.8908874988555908, 0.8960554003715515, 0.9011573791503906, 0.9061944484710693, 0.911167562007904, 0.916077733039856, 0.9209258556365967, 0.9257129430770874, 0.9304398894309998, 0.9351075887680054, 0.9397169351577759, 0.9442688822746277, 0.9487643241882324, 0.9532040357589722, 0.9575889706611633, 0.961919903755188, 0.9661977291107178, 0.9704232215881348, 0.974597156047821, 0.9787204265594482, 0.9827937483787537, 0.9868178367614746, 0.9907935261726379, 0.9947215914726257, 0.9986026883125305, 1.0024375915527344, 1.006226897239685, 1.0099714994430542, 1.0136719942092896, 1.0173289775848389, 1.0209431648254395, 1.0245152711868286, 1.0280457735061646, 1.0315356254577637, -1.034985065460205, -1.0315356254577637, -1.0280457735061646, -1.0245152711868286, -1.0209431648254395, -1.0173289775848389, -1.0136719942092896, -1.0099714994430542, -1.006226897239685, -1.0024375915527344, -0.9986026883125305, -0.9947215914726257, -0.9907935261726379, -0.9868178367614746, -0.9827937483787537, -0.9787204265594482, -0.974597156047821, -0.9704232215881348, -0.9661977291107178, -0.961919903755188, -0.9575889706611633, -0.9532040357589722, -0.9487643241882324, -0.9442688822746277, -0.9397169351577759, -0.9351075887680054, -0.9304398894309998, -0.9257129430770874, -0.9209258556365967, -0.916077733039856, -0.911167562007904, -0.9061944484710693, -0.9011573791503906, -0.8960554003715515, -0.8908874988555908, -0.8856526613235474, -0.88034987449646, -0.8749781250953674, -0.8695363998413086, -0.8640236258506775, -0.8584387302398682, -0.8527806401252747, -0.8470483422279358, -0.841240644454956, -0.8353565335273743, -0.8293949365615845, -0.8233546018600464, -0.8172345161437988, -0.8110335469245911, -0.8047505617141724, -0.798384428024292, -0.7919340133666992, -0.7853981852531433, -0.7787757515907288, -0.7720656394958496, -0.7652666568756104, -0.758377730846405, -0.7513976693153381, -0.7443253993988037, -0.7371597290039062, -0.7298996448516846, -0.7225440144538879, -0.7150917053222656, -0.7075416445732117, -0.6998928785324097, -0.6921442747116089, -0.6842948198318481, -0.6763435006141663, -0.6682894229888916, -0.660131573677063, -0.6518691182136536, -0.6435011029243469, -0.635026752948761, -0.6264451742172241, -0.6177557110786438, -0.6089576482772827, -0.6000502109527588, -0.5910329222679138, -0.5819051265716553, -0.5726664066314697, -0.563316285610199, -0.5538544058799744, -0.544280469417572, -0.5345942974090576, -0.5247957706451416, -0.5148847699165344, -0.5048613548278809, -0.49472567439079285, -0.4844779372215271, -0.4741184413433075, -0.46364760398864746, -0.45306599140167236, -0.44237422943115234, -0.4315730631351471, -0.42066335678100586, -0.40964609384536743, -0.39852243661880493, -0.38729360699653625, -0.37596094608306885, -0.36452600359916687, -0.35299038887023926, -0.3413558900356293, -0.3296244144439697, -0.31779801845550537, -0.3058788776397705, -0.29386934638023376, -0.28177186846733093, -0.26958906650543213, -0.2573237121105194, -0.244978666305542, -0.23255693912506104, -0.22006170451641083, -0.20749622583389282, -0.1948639154434204, -0.18216830492019653, -0.16941304504871368, -0.15660187602043152, -0.14373867213726044, -0.130827397108078, -0.11787210404872894, -0.10487693548202515, -0.09184612333774567, -0.07878395915031433, -0.06569480150938034, -0.052583061158657074, -0.03945320099592209, -0.026309717446565628, -0.013157135806977749, 0.0, 0.01298628281801939, 0.025968186557292938, 0.03894134238362312, 0.051901400089263916, 0.0648440271615982, 0.07776494324207306, 0.09065988659858704, 0.10352467745542526, 0.11635516583919525, 0.12914729118347168, 0.141897052526474, 0.15460054576396942, 0.16725394129753113, 0.17985349893569946, 0.19239559769630432, 0.20487672090530396, 0.21729342639446259, 0.22964243590831757, 0.2419205754995346, 0.2541247606277466, 0.2662520408630371, 0.2782996594905853, 0.29026490449905396, 0.30214521288871765, 0.3139382004737854, 0.32564157247543335, 0.3372531831264496, 0.34877100586891174, 0.360193133354187, 0.3715178668498993, 0.3827435076236725, 0.393868625164032, 0.4048917889595032, 0.41581177711486816, 0.4266274869441986, 0.4373379051685333, 0.4479421079158783, 0.45843932032585144, 0.4688289165496826, 0.4791103005409241, 0.48928302526474, 0.4993467330932617, 0.5093011260032654, 0.5191460847854614, 0.5288815498352051, 0.5385074615478516, 0.5480239391326904, 0.5574311017990112, 0.5667291879653931, 0.5759186148643494, 0.5849996209144592, 0.5939726829528809, 0.6028383374214172, 0.6115970611572266, 0.6202495098114014, 0.6287962794303894, 0.6372381448745728, 0.6455758213996887, 0.6538100242614746, 0.661941647529602, 0.6699715256690979, 0.677900493144989, 0.6857295036315918, 0.6934595108032227, 0.7010914087295532, 0.7086262702941895, 0.7160650491714478, 0.7234086990356445, 0.7306584119796753, 0.7378150820732117, 0.7448797821998596, 0.7518537044525146, 0.7587378025054932, 0.7655332088470459, 0.7722410559654236, 0.7788622975349426, 0.7853981852531433, 0.791849672794342, 0.7982179522514343, 0.8045040965080261, 0.8107092380523682, 0.8168343305587769, 0.8228806257247925, 0.8288490772247314, 0.8347408175468445, 0.8405568599700928, 0.8462983965873718, 0.8519663214683533, 0.8575617671012878, 0.8630858063697815, 0.8685393929481506, 0.8739235997200012, 0.8792393803596497, 0.8844877481460571, 0.8896697759628296, 0.8947863578796387, 0.8998384475708008, 0.9048271179199219, 0.909753143787384, 0.9146175980567932, 0.919421374797821, 0.9241653084754944, 0.9288504123687744, 0.933477520942688, 0.938047468662262, 0.9425612092018127, 0.9470195174217224, 0.9514232873916626, 0.9557732939720154, 0.9600703716278076, 0.9643153548240662, 0.9685089588165283, 0.9726520776748657, 0.9767454266548157, 0.9807897210121155, 0.9847857356071472, 0.988734245300293, 0.9926359057426453, 0.9964914917945862, 1.000301718711853, 1.004067063331604, 1.0077885389328003, 1.0114665031433105, 1.0151019096374512, 1.0186951160430908, 1.0222469568252563, 1.025757908821106, -1.029228687286377, -1.025757908821106, -1.0222469568252563, -1.0186951160430908, -1.0151019096374512, -1.0114665031433105, -1.0077885389328003, -1.004067063331604, -1.000301718711853, -0.9964914917945862, -0.9926359057426453, -0.988734245300293, -0.9847857356071472, -0.9807897210121155, -0.9767454266548157, -0.9726520776748657, -0.9685089588165283, -0.9643153548240662, -0.9600703716278076, -0.9557732939720154, -0.9514232873916626, -0.9470195174217224, -0.9425612092018127, -0.938047468662262, -0.933477520942688, -0.9288504123687744, -0.9241653084754944, -0.919421374797821, -0.9146175980567932, -0.909753143787384, -0.9048271179199219, -0.8998384475708008, -0.8947863578796387, -0.8896697759628296, -0.8844877481460571, -0.8792393803596497, -0.8739235997200012, -0.8685393929481506, -0.8630858063697815, -0.8575617671012878, -0.8519663214683533, -0.8462983965873718, -0.8405568599700928, -0.8347408175468445, -0.8288490772247314, -0.8228806257247925, -0.8168343305587769, -0.8107092380523682, -0.8045040965080261, -0.7982179522514343, -0.791849672794342, -0.7853981852531433, -0.7788622975349426, -0.7722410559654236, -0.7655332088470459, -0.7587378025054932, -0.7518537044525146, -0.7448797821998596, -0.7378150820732117, -0.7306584119796753, -0.7234086990356445, -0.7160650491714478, -0.7086262702941895, -0.7010914087295532, -0.6934595108032227, -0.6857295036315918, -0.677900493144989, -0.6699715256690979, -0.661941647529602, -0.6538100242614746, -0.6455758213996887, -0.6372381448745728, -0.6287962794303894, -0.6202495098114014, -0.6115970611572266, -0.6028383374214172, -0.5939726829528809, -0.5849996209144592, -0.5759186148643494, -0.5667291879653931, -0.5574311017990112, -0.5480239391326904, -0.5385074615478516, -0.5288815498352051, -0.5191460847854614, -0.5093011260032654, -0.4993467330932617, -0.48928302526474, -0.4791103005409241, -0.4688289165496826, -0.45843932032585144, -0.4479421079158783, -0.4373379051685333, -0.4266274869441986, -0.41581177711486816, -0.4048917889595032, -0.393868625164032, -0.3827435076236725, -0.3715178668498993, -0.360193133354187, -0.34877100586891174, -0.3372531831264496, -0.32564157247543335, -0.3139382004737854, -0.30214521288871765, -0.29026490449905396, -0.2782996594905853, -0.2662520408630371, -0.2541247606277466, -0.2419205754995346, -0.22964243590831757, -0.21729342639446259, -0.20487672090530396, -0.19239559769630432, -0.17985349893569946, -0.16725394129753113, -0.15460054576396942, -0.141897052526474, -0.12914729118347168, -0.11635516583919525, -0.10352467745542526, -0.09065988659858704, -0.07776494324207306, -0.0648440271615982, -0.051901400089263916, -0.03894134238362312, -0.025968186557292938, -0.01298628281801939, 0.0, 0.012819810770452023, 0.025635408237576485, 0.03844258934259415, 0.05123716592788696, 0.0640149787068367, 0.07677189260721207, 0.08950381726026535, 0.10220671445131302, 0.11487660557031631, 0.12750956416130066, 0.14010173082351685, 0.15264932811260223, 0.16514867544174194, 0.17759616672992706, 0.18998828530311584, 0.2023216336965561, 0.21459287405014038, 0.22679884731769562, 0.2389364391565323, 0.251002699136734, 0.2629947364330292, 0.2749098539352417, 0.2867453992366791, 0.2984989285469055, 0.31016805768013, 0.32175055146217346, 0.33324429392814636, 0.3446473181247711, 0.3559577465057373, 0.36717382073402405, 0.3782939910888672, 0.38931670784950256, 0.4002406597137451, 0.4110645353794098, 0.4217872619628906, 0.43240776658058167, 0.44292518496513367, 0.4533386826515198, 0.46364760398864746, 0.4738513231277466, 0.4839493930339813, 0.49394136667251587, 0.5038269758224487, 0.5136060118675232, 0.5232782959938049, 0.5328438878059387, 0.5423027276992798, 0.5516549944877625, 0.5609008073806763, 0.5700404644012451, 0.5790742635726929, 0.588002622127533, 0.596825897693634, 0.6055446863174438, 0.6141594052314758, 0.6226707696914673, 0.631079375743866, 0.6393858790397644, 0.6475910544395447, 0.6556956171989441, 0.6637004017829895, 0.671606183052063, 0.6794137954711914, 0.6871241927146912, 0.6947382688522339, 0.7022569179534912, 0.7096811532974243, 0.7170118093490601, 0.7242500185966492, 0.7313966751098633, 0.7384527921676636, 0.7454195022583008, 0.7522976994514465, 0.7590884566307068, 0.7657928466796875, 0.7724118828773499, 0.7789466381072998, 0.7853981852531433, 0.7917674779891968, 0.7980557084083557, 0.8042638301849365, 0.8103929758071899, 0.8164440989494324, 0.8224182724952698, 0.8283165693283081, 0.8341400027275085, 0.839889645576477, 0.8455663919448853, 0.8511714339256287, 0.8567056059837341, 0.8621700406074524, 0.8675656914710999, 0.8728935122489929, 0.878154456615448, 0.883349597454071, 0.8884797692298889, 0.8935459852218628, 0.8985491394996643, 0.9034901857376099, 0.9083700180053711, 0.9131895899772644, 0.9179496765136719, 0.9226512908935547, 0.9272952079772949, 0.9318823218345642, 0.9364135265350342, 0.9408895373344421, 0.9453113079071045, 0.9496795535087585, 0.9539951086044312, 0.9582587480545044, 0.9624713063240051, 0.9666334986686707, 0.9707460999488831, 0.9748098850250244, 0.9788255095481873, 0.9827937483787537, 0.9867152571678162, 0.9905908107757568, 0.994421124458313, 0.9982067346572876, 1.0019484758377075, 1.0056469440460205, 1.0093026161193848, 1.0129164457321167, 1.016488790512085, 1.0200204849243164, -1.0235118865966797, -1.0200204849243164, -1.016488790512085, -1.0129164457321167, -1.0093026161193848, -1.0056469440460205, -1.0019484758377075, -0.9982067346572876, -0.994421124458313, -0.9905908107757568, -0.9867152571678162, -0.9827937483787537, -0.9788255095481873, -0.9748098850250244, -0.9707460999488831, -0.9666334986686707, -0.9624713063240051, -0.9582587480545044, -0.9539951086044312, -0.9496795535087585, -0.9453113079071045, -0.9408895373344421, -0.9364135265350342, -0.9318823218345642, -0.9272952079772949, -0.9226512908935547, -0.9179496765136719, -0.9131895899772644, -0.9083700180053711, -0.9034901857376099, -0.8985491394996643, -0.8935459852218628, -0.8884797692298889, -0.883349597454071, -0.878154456615448, -0.8728935122489929, -0.8675656914710999, -0.8621700406074524, -0.8567056059837341, -0.8511714339256287, -0.8455663919448853, -0.839889645576477, -0.8341400027275085, -0.8283165693283081, -0.8224182724952698, -0.8164440989494324, -0.8103929758071899, -0.8042638301849365, -0.7980557084083557, -0.7917674779891968, -0.7853981852531433, -0.7789466381072998, -0.7724118828773499, -0.7657928466796875, -0.7590884566307068, -0.7522976994514465, -0.7454195022583008, -0.7384527921676636, -0.7313966751098633, -0.7242500185966492, -0.7170118093490601, -0.7096811532974243, -0.7022569179534912, -0.6947382688522339, -0.6871241927146912, -0.6794137954711914, -0.671606183052063, -0.6637004017829895, -0.6556956171989441, -0.6475910544395447, -0.6393858790397644, -0.631079375743866, -0.6226707696914673, -0.6141594052314758, -0.6055446863174438, -0.596825897693634, -0.588002622127533, -0.5790742635726929, -0.5700404644012451, -0.5609008073806763, -0.5516549944877625, -0.5423027276992798, -0.5328438878059387, -0.5232782959938049, -0.5136060118675232, -0.5038269758224487, -0.49394136667251587, -0.4839493930339813, -0.4738513231277466, -0.46364760398864746, -0.4533386826515198, -0.44292518496513367, -0.43240776658058167, -0.4217872619628906, -0.4110645353794098, -0.4002406597137451, -0.38931670784950256, -0.3782939910888672, -0.36717382073402405, -0.3559577465057373, -0.3446473181247711, -0.33324429392814636, -0.32175055146217346, -0.31016805768013, -0.2984989285469055, -0.2867453992366791, -0.2749098539352417, -0.2629947364330292, -0.251002699136734, -0.2389364391565323, -0.22679884731769562, -0.21459287405014038, -0.2023216336965561, -0.18998828530311584, -0.17759616672992706, -0.16514867544174194, -0.15264932811260223, -0.14010173082351685, -0.12750956416130066, -0.11487660557031631, -0.10220671445131302, -0.08950381726026535, -0.07677189260721207, -0.0640149787068367, -0.05123716592788696, -0.03844258934259415, -0.025635408237576485, -0.012819810770452023, 0.0, 0.012657552026212215, 0.025311049073934555, 0.037956446409225464, 0.05058971047401428, 0.06320682913064957, 0.07580383867025375, 0.08837678283452988, 0.10092178732156754, 0.11343499273061752, 0.1259126216173172, 0.1383509635925293, 0.15074637532234192, 0.16309529542922974, 0.1753942221403122, 0.1876397728919983, 0.199828639626503, 0.2119576334953308, 0.22402364015579224, 0.2360236793756485, 0.2479548454284668, 0.25981438159942627, 0.27159959077835083, 0.2833079695701599, 0.29493704438209534, 0.30648455023765564, 0.31794828176498413, 0.32932615280151367, 0.34061622619628906, 0.35181668400764465, 0.36292576789855957, 0.37394192814826965, 0.38486364483833313, 0.39568960666656494, 0.40641850233078003, 0.41704922914505005, 0.4275807738304138, 0.4380122125148773, 0.4483426809310913, 0.45857152342796326, 0.46869808435440063, 0.47872185707092285, 0.4886423945426941, 0.4984593987464905, 0.5081726312637329, 0.5177818536758423, 0.5272870659828186, 0.5366881489753723, 0.5459852814674377, 0.5551785826683044, 0.564268171787262, 0.573254406452179, 0.5821375846862793, 0.5909180641174316, 0.5995962619781494, 0.6081727743148804, 0.6166480779647827, 0.6250227093696594, 0.6332973837852478, 0.6414726972579956, 0.6495494246482849, 0.6575282216072083, 0.6654099822044373, 0.6731953620910645, 0.6808852553367615, 0.6884805560112, 0.695982038974762, 0.7033907175064087, 0.710707426071167, 0.7179331183433533, 0.7250688076019287, 0.7321153283119202, 0.7390736937522888, 0.7459449768066406, 0.7527300715446472, 0.7594299912452698, 0.7660457491874695, 0.7725783586502075, 0.7790288329124451, 0.7853981852531433, 0.7916873693466187, 0.7978975176811218, 0.8040295243263245, 0.8100845217704773, 0.816063404083252, 0.8219672441482544, 0.827796995639801, 0.833553671836853, 0.8392382860183716, 0.8448518514633179, 0.8503952622413635, 0.8558695316314697, 0.8612756133079529, 0.8666144609451294, 0.8718870878219604, 0.8770943284034729, 0.8822371959686279, 0.8873165249824524, 0.8923333287239075, 0.89728844165802, 0.9021827578544617, 0.907017171382904, 0.9117925763130188, 0.9165098071098328, 0.9211696982383728, 0.9257731437683105, 0.9303209185600281, 0.9348138570785522, 0.9392527937889099, 0.9436385035514832, 0.947971761226654, 0.9522533416748047, 0.9564840197563171, 0.9606645107269287, 0.9647956490516663, 0.9688781499862671, 0.972912609577179, 0.9768998622894287, 0.9808406233787537, 0.9847354888916016, 0.9885851740837097, 0.9923903346061707, 0.9961516857147217, 0.9998698830604553, 1.0035454034805298, 1.0071791410446167, 1.0107715129852295, 1.014323115348816, -1.0178347826004028, -1.014323115348816, -1.0107715129852295, -1.0071791410446167, -1.0035454034805298, -0.9998698830604553, -0.9961516857147217, -0.9923903346061707, -0.9885851740837097, -0.9847354888916016, -0.9808406233787537, -0.9768998622894287, -0.972912609577179, -0.9688781499862671, -0.9647956490516663, -0.9606645107269287, -0.9564840197563171, -0.9522533416748047, -0.947971761226654, -0.9436385035514832, -0.9392527937889099, -0.9348138570785522, -0.9303209185600281, -0.9257731437683105, -0.9211696982383728, -0.9165098071098328, -0.9117925763130188, -0.907017171382904, -0.9021827578544617, -0.89728844165802, -0.8923333287239075, -0.8873165249824524, -0.8822371959686279, -0.8770943284034729, -0.8718870878219604, -0.8666144609451294, -0.8612756133079529, -0.8558695316314697, -0.8503952622413635, -0.8448518514633179, -0.8392382860183716, -0.833553671836853, -0.827796995639801, -0.8219672441482544, -0.816063404083252, -0.8100845217704773, -0.8040295243263245, -0.7978975176811218, -0.7916873693466187, -0.7853981852531433, -0.7790288329124451, -0.7725783586502075, -0.7660457491874695, -0.7594299912452698, -0.7527300715446472, -0.7459449768066406, -0.7390736937522888, -0.7321153283119202, -0.7250688076019287, -0.7179331183433533, -0.710707426071167, -0.7033907175064087, -0.695982038974762, -0.6884805560112, -0.6808852553367615, -0.6731953620910645, -0.6654099822044373, -0.6575282216072083, -0.6495494246482849, -0.6414726972579956, -0.6332973837852478, -0.6250227093696594, -0.6166480779647827, -0.6081727743148804, -0.5995962619781494, -0.5909180641174316, -0.5821375846862793, -0.573254406452179, -0.564268171787262, -0.5551785826683044, -0.5459852814674377, -0.5366881489753723, -0.5272870659828186, -0.5177818536758423, -0.5081726312637329, -0.4984593987464905, -0.4886423945426941, -0.47872185707092285, -0.46869808435440063, -0.45857152342796326, -0.4483426809310913, -0.4380122125148773, -0.4275807738304138, -0.41704922914505005, -0.40641850233078003, -0.39568960666656494, -0.38486364483833313, -0.37394192814826965, -0.36292576789855957, -0.35181668400764465, -0.34061622619628906, -0.32932615280151367, -0.31794828176498413, -0.30648455023765564, -0.29493704438209534, -0.2833079695701599, -0.27159959077835083, -0.25981438159942627, -0.2479548454284668, -0.2360236793756485, -0.22402364015579224, -0.2119576334953308, -0.199828639626503, -0.1876397728919983, -0.1753942221403122, -0.16309529542922974, -0.15074637532234192, -0.1383509635925293, -0.1259126216173172, -0.11343499273061752, -0.10092178732156754, -0.08837678283452988, -0.07580383867025375, -0.06320682913064957, -0.05058971047401428, -0.037956446409225464, -0.025311049073934555, -0.012657552026212215, 0.0, 0.012499349191784859, 0.02499479427933693, 0.03748243674635887, 0.04995839670300484, 0.06241881102323532, 0.0748598501086235, 0.08727771043777466, 0.09966865181922913, 0.11202896386384964, 0.12435499578714371, 0.1366431564092636, 0.1488899439573288, 0.1610919088125229, 0.17324566841125488, 0.18534794449806213, 0.19739556312561035, 0.20938539505004883, 0.2213144451379776, 0.23317980766296387, 0.244978666305542, 0.2567083239555359, 0.2683662176132202, 0.279949814081192, 0.29145678877830505, 0.30288487672805786, 0.31423190236091614, 0.3254958689212799, 0.3366748094558716, 0.3477669954299927, 0.3587706685066223, 0.36968427896499634, 0.38050636649131775, 0.3912355899810791, 0.40187063813209534, 0.4124104380607605, 0.42285391688346863, 0.4332001805305481, 0.44344833493232727, 0.45359769463539124, 0.46364760398864746, 0.47359752655029297, 0.48344701528549194, 0.49319565296173096, 0.5028432011604309, 0.5123894810676575, 0.5218342542648315, 0.5311776399612427, 0.5404195189476013, 0.549560010433197, 0.5585992932319641, 0.5675376057624817, 0.5763752460479736, 0.585112452507019, 0.5937496423721313, 0.6022873520851135, 0.6107259392738342, 0.619066059589386, 0.627308189868927, 0.6354529857635498, 0.6435011029243469, 0.6514532566070557, 0.6593100428581238, 0.6670723557472229, 0.6747409701347351, 0.6823165416717529, 0.6898000240325928, 0.6971922516822815, 0.704494059085846, 0.7117063403129578, 0.7188299894332886, 0.7258659601211548, 0.7328150868415833, 0.7396783828735352, 0.7464568018913269, 0.7531512975692749, 0.7597627639770508, 0.7662922143936157, 0.7727406024932861, 0.7791089415550232, 0.7853981852531433, 0.7916092872619629, 0.7977432012557983, 0.8038010001182556, 0.8097835779190063, 0.8156919479370117, 0.8215270042419434, 0.8272898197174072, 0.832981288433075, 0.8386023640632629, 0.8441540002822876, 0.8496371507644653, 0.8550527095794678, 0.8604016900062561, 0.865684986114502, 0.8709034323692322, 0.876058042049408, 0.8811496496200562, 0.8861791491508484, 0.8911474347114563, 0.8960554003715515, 0.9009038209915161, 0.9056936502456665, 0.9104256629943848, 0.9151006937026978, 0.9197195768356323, 0.9242832064628601, 0.9287922382354736, 0.9332475066184998, 0.9376499056816101, 0.9420000314712524, 0.9462987780570984, 0.9505468606948853, 0.9547449946403503, 0.958893895149231, 0.9629943370819092, 0.9670469760894775, 0.9710525870323181, 0.9750117659568787, 0.9789252877235413, 0.9827937483787537, 0.9866178035736084, 0.9903981685638428, 0.9941353797912598, 0.9978302121162415, 1.0014830827713013, 1.0050948858261108, 1.008665919303894, -1.0121970176696777, -1.008665919303894, -1.0050948858261108, -1.0014830827713013, -0.9978302121162415, -0.9941353797912598, -0.9903981685638428, -0.9866178035736084, -0.9827937483787537, -0.9789252877235413, -0.9750117659568787, -0.9710525870323181, -0.9670469760894775, -0.9629943370819092, -0.958893895149231, -0.9547449946403503, -0.9505468606948853, -0.9462987780570984, -0.9420000314712524, -0.9376499056816101, -0.9332475066184998, -0.9287922382354736, -0.9242832064628601, -0.9197195768356323, -0.9151006937026978, -0.9104256629943848, -0.9056936502456665, -0.9009038209915161, -0.8960554003715515, -0.8911474347114563, -0.8861791491508484, -0.8811496496200562, -0.876058042049408, -0.8709034323692322, -0.865684986114502, -0.8604016900062561, -0.8550527095794678, -0.8496371507644653, -0.8441540002822876, -0.8386023640632629, -0.832981288433075, -0.8272898197174072, -0.8215270042419434, -0.8156919479370117, -0.8097835779190063, -0.8038010001182556, -0.7977432012557983, -0.7916092872619629, -0.7853981852531433, -0.7791089415550232, -0.7727406024932861, -0.7662922143936157, -0.7597627639770508, -0.7531512975692749, -0.7464568018913269, -0.7396783828735352, -0.7328150868415833, -0.7258659601211548, -0.7188299894332886, -0.7117063403129578, -0.704494059085846, -0.6971922516822815, -0.6898000240325928, -0.6823165416717529, -0.6747409701347351, -0.6670723557472229, -0.6593100428581238, -0.6514532566070557, -0.6435011029243469, -0.6354529857635498, -0.627308189868927, -0.619066059589386, -0.6107259392738342, -0.6022873520851135, -0.5937496423721313, -0.585112452507019, -0.5763752460479736, -0.5675376057624817, -0.5585992932319641, -0.549560010433197, -0.5404195189476013, -0.5311776399612427, -0.5218342542648315, -0.5123894810676575, -0.5028432011604309, -0.49319565296173096, -0.48344701528549194, -0.47359752655029297, -0.46364760398864746, -0.45359769463539124, -0.44344833493232727, -0.4332001805305481, -0.42285391688346863, -0.4124104380607605, -0.40187063813209534, -0.3912355899810791, -0.38050636649131775, -0.36968427896499634, -0.3587706685066223, -0.3477669954299927, -0.3366748094558716, -0.3254958689212799, -0.31423190236091614, -0.30288487672805786, -0.29145678877830505, -0.279949814081192, -0.2683662176132202, -0.2567083239555359, -0.244978666305542, -0.23317980766296387, -0.2213144451379776, -0.20938539505004883, -0.19739556312561035, -0.18534794449806213, -0.17324566841125488, -0.1610919088125229, -0.1488899439573288, -0.1366431564092636, -0.12435499578714371, -0.11202896386384964, -0.09966865181922913, -0.08727771043777466, -0.0748598501086235, -0.06241881102323532, -0.04995839670300484, -0.03748243674635887, -0.02499479427933693, -0.012499349191784859, 0.0, 0.012345051392912865, 0.024686342105269432, 0.03702011704444885, 0.04934263229370117, 0.061650171875953674, 0.07393904030323029, 0.08620557188987732, 0.09844616055488586, 0.1106572225689888, 0.12283524125814438, 0.13497674465179443, 0.14707835018634796, 0.15913672745227814, 0.17114859819412231, 0.1831108182668686, 0.19502027332782745, 0.20687395334243774, 0.21866895258426666, 0.23040243983268738, 0.24207168817520142, 0.25367408990859985, 0.26520711183547974, 0.27666833996772766, 0.2880554497241974, 0.2993662357330322, 0.31059861183166504, 0.32175055146217346, 0.33282020688056946, 0.34380578994750977, 0.35470566153526306, 0.3655182123184204, 0.3762420117855072, 0.386875718832016, 0.3974180817604065, 0.407867968082428, 0.4182243347167969, 0.4284862279891968, 0.43865281343460083, 0.44872334599494934, 0.4586971402168274, 0.4685736894607544, 0.478352427482605, 0.4880330264568329, 0.49761512875556946, 0.5070984959602356, 0.5164830088615417, 0.525768518447876, 0.5349550843238831, 0.5440426468849182, 0.5530314445495605, 0.5619215369224548, 0.5707132816314697, 0.5794067978858948, 0.588002622127533, 0.5965009927749634, 0.6049023866653442, 0.6132073402404785, 0.6214163303375244, 0.6295299530029297, 0.6375488042831421, 0.6454734802246094, 0.6533046960830688, 0.6610431671142578, 0.6686896085739136, 0.6762446761131287, 0.6837093234062195, 0.6910842061042786, 0.6983702182769775, 0.7055681943893433, 0.7126789093017578, 0.7197033762931824, 0.726642370223999, 0.7334967851638794, 0.7402675151824951, 0.7469555735588074, 0.753561794757843, 0.7600871324539185, 0.7665324807167053, 0.77289879322052, 0.7791870832443237, 0.7853981852531433, 0.7915330529212952, 0.7975926995277405, 0.8035779595375061, 0.809489905834198, 0.8153293132781982, 0.8210972547531128, 0.8267946243286133, 0.8324223160743713, 0.8379812240600586, 0.8434723019599915, 0.8488965034484863, 0.8542546629905701, 0.8595476746559143, 0.8647764921188354, 0.8699418902397156, 0.8750448822975159, 0.8800862431526184, 0.88506680727005, 0.8899874687194824, 0.8948491215705872, 0.8996524810791016, 0.9043984413146973, 0.9090878367424011, 0.9137213826179504, 0.9182999730110168, 0.9228243231773376, 0.9272952079772949, 0.9317134618759155, 0.936079740524292, 0.9403948783874512, 0.9446595907211304, 0.9488745927810669, 0.953040599822998, 0.9571583271026611, 0.9612284302711487, 0.9652516841888428, 0.9692286849021912, 0.9731600880622864, 0.9770466685295105, 0.9808889627456665, 0.9846876859664917, 0.9884433746337891, 0.9921567440032959, 0.99582839012146, 0.9994588494300842, 1.0030487775802612, -1.006598711013794, -1.0030487775802612, -0.9994588494300842, -0.99582839012146, -0.9921567440032959, -0.9884433746337891, -0.9846876859664917, -0.9808889627456665, -0.9770466685295105, -0.9731600880622864, -0.9692286849021912, -0.9652516841888428, -0.9612284302711487, -0.9571583271026611, -0.953040599822998, -0.9488745927810669, -0.9446595907211304, -0.9403948783874512, -0.936079740524292, -0.9317134618759155, -0.9272952079772949, -0.9228243231773376, -0.9182999730110168, -0.9137213826179504, -0.9090878367424011, -0.9043984413146973, -0.8996524810791016, -0.8948491215705872, -0.8899874687194824, -0.88506680727005, -0.8800862431526184, -0.8750448822975159, -0.8699418902397156, -0.8647764921188354, -0.8595476746559143, -0.8542546629905701, -0.8488965034484863, -0.8434723019599915, -0.8379812240600586, -0.8324223160743713, -0.8267946243286133, -0.8210972547531128, -0.8153293132781982, -0.809489905834198, -0.8035779595375061, -0.7975926995277405, -0.7915330529212952, -0.7853981852531433, -0.7791870832443237, -0.77289879322052, -0.7665324807167053, -0.7600871324539185, -0.753561794757843, -0.7469555735588074, -0.7402675151824951, -0.7334967851638794, -0.726642370223999, -0.7197033762931824, -0.7126789093017578, -0.7055681943893433, -0.6983702182769775, -0.6910842061042786, -0.6837093234062195, -0.6762446761131287, -0.6686896085739136, -0.6610431671142578, -0.6533046960830688, -0.6454734802246094, -0.6375488042831421, -0.6295299530029297, -0.6214163303375244, -0.6132073402404785, -0.6049023866653442, -0.5965009927749634, -0.588002622127533, -0.5794067978858948, -0.5707132816314697, -0.5619215369224548, -0.5530314445495605, -0.5440426468849182, -0.5349550843238831, -0.525768518447876, -0.5164830088615417, -0.5070984959602356, -0.49761512875556946, -0.4880330264568329, -0.478352427482605, -0.4685736894607544, -0.4586971402168274, -0.44872334599494934, -0.43865281343460083, -0.4284862279891968, -0.4182243347167969, -0.407867968082428, -0.3974180817604065, -0.386875718832016, -0.3762420117855072, -0.3655182123184204, -0.35470566153526306, -0.34380578994750977, -0.33282020688056946, -0.32175055146217346, -0.31059861183166504, -0.2993662357330322, -0.2880554497241974, -0.27666833996772766, -0.26520711183547974, -0.25367408990859985, -0.24207168817520142, -0.23040243983268738, -0.21866895258426666, -0.20687395334243774, -0.19502027332782745, -0.1831108182668686, -0.17114859819412231, -0.15913672745227814, -0.14707835018634796, -0.13497674465179443, -0.12283524125814438, -0.1106572225689888, -0.09844616055488586, -0.08620557188987732, -0.07393904030323029, -0.061650171875953674, -0.04934263229370117, -0.03702011704444885, -0.024686342105269432, -0.012345051392912865, 0.0, 0.012194517068564892, 0.02438540942966938, 0.036569055169820786, 0.04874185100197792, 0.06090020760893822, 0.07304056733846664, 0.08515939116477966, 0.09725319594144821, 0.10931853204965591, 0.12135200202465057, 0.13335025310516357, 0.14531001448631287, 0.15722805261611938, 0.16910122334957123, 0.18092645704746246, 0.19270075857639313, 0.20442120730876923, 0.21608497202396393, 0.22768932580947876, 0.23923160135746002, 0.25070926547050476, 0.2621198296546936, 0.2734609842300415, 0.2847304344177246, 0.295926034450531, 0.30704572796821594, 0.3180875778198242, 0.3290497064590454, 0.33993035554885864, 0.35072794556617737, 0.36144089698791504, 0.37206774950027466, 0.38260722160339355, 0.39305803179740906, 0.40341904759407043, 0.4136892259120941, 0.4238676130771637, 0.4339533746242523, 0.4439457356929779, 0.45384401082992554, 0.46364760398864746, 0.4733560383319855, 0.48296886682510376, 0.49248576164245605, 0.5019064545631409, 0.5112307071685791, 0.520458459854126, 0.5295895934104919, 0.5386241674423218, 0.5475622415542603, 0.5564039349555969, 0.5651494264602661, 0.5737990140914917, 0.5823529362678528, 0.5908116102218628, 0.5991753339767456, 0.6074445843696594, 0.6156198978424072, 0.6237016916275024, 0.6316906213760376, 0.6395872235298157, 0.6473921537399292, 0.6551060080528259, 0.6627295017242432, 0.6702633500099182, 0.6777082681655884, 0.6850650310516357, 0.6923344135284424, 0.6995171904563904, 0.7066141963005066, 0.7136262059211731, 0.7205541133880615, 0.7273987531661987, 0.7341610193252563, 0.7408416867256165, 0.7474417090415955, 0.753961980342865, 0.7604033946990967, 0.7667667865753174, 0.7730531096458435, 0.7792632579803467, 0.7853981852531433, 0.7914586663246155, 0.7974457740783691, 0.8033602833747864, 0.8092032074928284, 0.8149753212928772, 0.820677638053894, 0.8263109922409058, 0.831876277923584, 0.8373744487762451, 0.8428062796592712, 0.8481727242469788, 0.8534746170043945, 0.8587128520011902, 0.8638882637023926, 0.8690016865730286, 0.8740540742874146, 0.8790460824966431, 0.8839786648750305, 0.8888526558876038, 0.8936687707901001, 0.8984278440475464, 0.9031307101249695, 0.9077782034873962, 0.9123709797859192, 0.9169098138809204, 0.9213955998420715, 0.9258289337158203, 0.9302106499671936, 0.9345414638519287, 0.9388220906257629, 0.9430532455444336, 0.9472355842590332, 0.9513698816299438, 0.9554567933082581, 0.9594969749450684, 0.9634910821914673, 0.9674398303031921, 0.9713438153266907, 0.9752037525177002, 0.9790201783180237, 0.9827937483787537, 0.9865250587463379, 0.9902147650718689, 0.9938634037971497, 0.9974715709686279, -1.0010398626327515, -0.9974715709686279, -0.9938634037971497, -0.9902147650718689, -0.9865250587463379, -0.9827937483787537, -0.9790201783180237, -0.9752037525177002, -0.9713438153266907, -0.9674398303031921, -0.9634910821914673, -0.9594969749450684, -0.9554567933082581, -0.9513698816299438, -0.9472355842590332, -0.9430532455444336, -0.9388220906257629, -0.9345414638519287, -0.9302106499671936, -0.9258289337158203, -0.9213955998420715, -0.9169098138809204, -0.9123709797859192, -0.9077782034873962, -0.9031307101249695, -0.8984278440475464, -0.8936687707901001, -0.8888526558876038, -0.8839786648750305, -0.8790460824966431, -0.8740540742874146, -0.8690016865730286, -0.8638882637023926, -0.8587128520011902, -0.8534746170043945, -0.8481727242469788, -0.8428062796592712, -0.8373744487762451, -0.831876277923584, -0.8263109922409058, -0.820677638053894, -0.8149753212928772, -0.8092032074928284, -0.8033602833747864, -0.7974457740783691, -0.7914586663246155, -0.7853981852531433, -0.7792632579803467, -0.7730531096458435, -0.7667667865753174, -0.7604033946990967, -0.753961980342865, -0.7474417090415955, -0.7408416867256165, -0.7341610193252563, -0.7273987531661987, -0.7205541133880615, -0.7136262059211731, -0.7066141963005066, -0.6995171904563904, -0.6923344135284424, -0.6850650310516357, -0.6777082681655884, -0.6702633500099182, -0.6627295017242432, -0.6551060080528259, -0.6473921537399292, -0.6395872235298157, -0.6316906213760376, -0.6237016916275024, -0.6156198978424072, -0.6074445843696594, -0.5991753339767456, -0.5908116102218628, -0.5823529362678528, -0.5737990140914917, -0.5651494264602661, -0.5564039349555969, -0.5475622415542603, -0.5386241674423218, -0.5295895934104919, -0.520458459854126, -0.5112307071685791, -0.5019064545631409, -0.49248576164245605, -0.48296886682510376, -0.4733560383319855, -0.46364760398864746, -0.45384401082992554, -0.4439457356929779, -0.4339533746242523, -0.4238676130771637, -0.4136892259120941, -0.40341904759407043, -0.39305803179740906, -0.38260722160339355, -0.37206774950027466, -0.36144089698791504, -0.35072794556617737, -0.33993035554885864, -0.3290497064590454, -0.3180875778198242, -0.30704572796821594, -0.295926034450531, -0.2847304344177246, -0.2734609842300415, -0.2621198296546936, -0.25070926547050476, -0.23923160135746002, -0.22768932580947876, -0.21608497202396393, -0.20442120730876923, -0.19270075857639313, -0.18092645704746246, -0.16910122334957123, -0.15722805261611938, -0.14531001448631287, -0.13335025310516357, -0.12135200202465057, -0.10931853204965591, -0.09725319594144821, -0.08515939116477966, -0.07304056733846664, -0.06090020760893822, -0.04874185100197792, -0.036569055169820786, -0.02438540942966938, -0.012194517068564892, 0.0, 0.012047610245645046, 0.024091724306344986, 0.036128848791122437, 0.048155512660741806, 0.060168251395225525, 0.07216362655162811, 0.08413823693990707, 0.0960887148976326, 0.10801172256469727, 0.11990398168563843, 0.13176226615905762, 0.14358338713645935, 0.1553642600774765, 0.16710180044174194, 0.1787930577993393, 0.19043511152267456, 0.2020251601934433, 0.21356043219566345, 0.2250382900238037, 0.23645614087581635, 0.24781151115894318, 0.2591020166873932, 0.27032533288002014, 0.2814792990684509, 0.29256176948547363, 0.3035707473754883, 0.3145042955875397, 0.32536065578460693, 0.3361380398273468, 0.3468348979949951, 0.3574496805667877, 0.3679809272289276, 0.3784273862838745, 0.38878774642944336, 0.3990609347820282, 0.40924590826034546, 0.41934165358543396, 0.42934733629226685, 0.4392622113227844, 0.449085533618927, 0.4588167369365692, 0.4684552550315857, 0.4780007004737854, 0.4874526262283325, 0.49681079387664795, 0.5060749650001526, 0.5152449607849121, 0.5243207216262817, 0.5333021879196167, 0.5421894192695618, 0.5509824752807617, 0.5596815943717957, 0.5682868361473083, 0.5767986178398132, 0.5852171182632446, 0.5935426950454712, 0.6017758250236511, 0.6099169254302979, 0.6179664134979248, 0.6259247660636902, 0.6337926983833313, 0.6415706276893616, 0.6492592096328735, 0.6568590998649597, 0.6643709540367126, 0.6717954277992249, 0.6791332960128784, 0.6863852739334106, 0.6935520172119141, 0.7006344199180603, 0.7076331973075867, 0.71454918384552, 0.7213832139968872, 0.7281360030174255, 0.7348084449768066, 0.7414014339447021, 0.7479157447814941, 0.7543522119522095, 0.7607118487358093, 0.7669953107833862, 0.7732036709785461, 0.7793376445770264, 0.7853981852531433, 0.7913861274719238, 0.7973023653030396, 0.8031477928161621, 0.8089232444763184, 0.8146296143531799, 0.8202677369117737, 0.8258385062217712, 0.8313428163528442, 0.8367814421653748, 0.8421553373336792, 0.8474652171134949, 0.8527120351791382, 0.8578965663909912, 0.8630196452140808, 0.8680821657180786, 0.8730848431587219, 0.8780285120010376, 0.8829139471054077, 0.8877420425415039, 0.8925135135650635, 0.8972290754318237, 0.9018896222114563, 0.9064958691596985, 0.9110484719276428, 0.9155483245849609, 0.9199960827827454, 0.9243924617767334, 0.9287382364273071, 0.9330340623855591, 0.9372805953025818, 0.9414786696434021, 0.945628821849823, 0.9497318267822266, 0.9537883400917053, 0.957798957824707, 0.9617643356323242, 0.9656851291656494, 0.9695619940757751, 0.9733955264091492, 0.9771863222122192, 0.9809349775314331, 0.9846421480178833, 0.9883083701133728, 0.9919342398643494, -0.995520293712616, -0.9919342398643494, -0.9883083701133728, -0.9846421480178833, -0.9809349775314331, -0.9771863222122192, -0.9733955264091492, -0.9695619940757751, -0.9656851291656494, -0.9617643356323242, -0.957798957824707, -0.9537883400917053, -0.9497318267822266, -0.945628821849823, -0.9414786696434021, -0.9372805953025818, -0.9330340623855591, -0.9287382364273071, -0.9243924617767334, -0.9199960827827454, -0.9155483245849609, -0.9110484719276428, -0.9064958691596985, -0.9018896222114563, -0.8972290754318237, -0.8925135135650635, -0.8877420425415039, -0.8829139471054077, -0.8780285120010376, -0.8730848431587219, -0.8680821657180786, -0.8630196452140808, -0.8578965663909912, -0.8527120351791382, -0.8474652171134949, -0.8421553373336792, -0.8367814421653748, -0.8313428163528442, -0.8258385062217712, -0.8202677369117737, -0.8146296143531799, -0.8089232444763184, -0.8031477928161621, -0.7973023653030396, -0.7913861274719238, -0.7853981852531433, -0.7793376445770264, -0.7732036709785461, -0.7669953107833862, -0.7607118487358093, -0.7543522119522095, -0.7479157447814941, -0.7414014339447021, -0.7348084449768066, -0.7281360030174255, -0.7213832139968872, -0.71454918384552, -0.7076331973075867, -0.7006344199180603, -0.6935520172119141, -0.6863852739334106, -0.6791332960128784, -0.6717954277992249, -0.6643709540367126, -0.6568590998649597, -0.6492592096328735, -0.6415706276893616, -0.6337926983833313, -0.6259247660636902, -0.6179664134979248, -0.6099169254302979, -0.6017758250236511, -0.5935426950454712, -0.5852171182632446, -0.5767986178398132, -0.5682868361473083, -0.5596815943717957, -0.5509824752807617, -0.5421894192695618, -0.5333021879196167, -0.5243207216262817, -0.5152449607849121, -0.5060749650001526, -0.49681079387664795, -0.4874526262283325, -0.4780007004737854, -0.4684552550315857, -0.4588167369365692, -0.449085533618927, -0.4392622113227844, -0.42934733629226685, -0.41934165358543396, -0.40924590826034546, -0.3990609347820282, -0.38878774642944336, -0.3784273862838745, -0.3679809272289276, -0.3574496805667877, -0.3468348979949951, -0.3361380398273468, -0.32536065578460693, -0.3145042955875397, -0.3035707473754883, -0.29256176948547363, -0.2814792990684509, -0.27032533288002014, -0.2591020166873932, -0.24781151115894318, -0.23645614087581635, -0.2250382900238037, -0.21356043219566345, -0.2020251601934433, -0.19043511152267456, -0.1787930577993393, -0.16710180044174194, -0.1553642600774765, -0.14358338713645935, -0.13176226615905762, -0.11990398168563843, -0.10801172256469727, -0.0960887148976326, -0.08413823693990707, -0.07216362655162811, -0.060168251395225525, -0.048155512660741806, -0.036128848791122437, -0.024091724306344986, -0.012047610245645046, 0.0, 0.011904199607670307, 0.023805025964975357, 0.035699114203453064, 0.04758310317993164, 0.059453658759593964, 0.0713074654340744, 0.08314123004674911, 0.09495170414447784, 0.10673566907644272, 0.11848995834589005, 0.13021144270896912, 0.141897052526474, 0.15354378521442413, 0.16514867544174194, 0.1767088621854782, 0.1882214993238449, 0.19968388974666595, 0.21109333634376526, 0.2224472612142563, 0.23374317586421967, 0.244978666305542, 0.25615137815475464, 0.2672590911388397, 0.2782996594905853, 0.2892709970474243, 0.3001711666584015, 0.3109982907772064, 0.32175055146217346, 0.3324263095855713, 0.3430239260196686, 0.3535419702529907, 0.36397895216941833, 0.37433362007141113, 0.38460472226142883, 0.3947911262512207, 0.4048917889595032, 0.41490575671195984, 0.42483216524124146, 0.43467020988464355, 0.4444192051887512, 0.4540785253047943, 0.46364760398864746, 0.47312599420547485, 0.48251330852508545, 0.4918091893196106, 0.5010133981704712, 0.5101257562637329, 0.5191460847854614, 0.5280744433403015, 0.5369107723236084, 0.5456550717353821, 0.5543075203895569, 0.5628682374954224, 0.5713374614715576, 0.5797154903411865, 0.588002622127533, 0.5961991548538208, 0.6043055057525635, 0.6123221516609192, 0.6202495098114014, 0.6280880570411682, 0.6358384490013123, 0.6435011029243469, 0.6510767340660095, 0.658565878868103, 0.6659692525863647, 0.6732874512672424, 0.6805212497711182, 0.6876712441444397, 0.6947382688522339, 0.701723039150238, 0.7086262702941895, 0.715448796749115, 0.722191333770752, 0.7288547158241272, 0.7354397773742676, 0.7419472932815552, 0.7483780384063721, 0.7547329068183899, 0.7610127329826355, 0.7672183513641357, 0.7733505368232727, 0.779410183429718, 0.7853981852531433, 0.7913152575492859, 0.7971623539924622, 0.8029402494430542, 0.8086497783660889, 0.8142918348312378, 0.8198672533035278, 0.8253768682479858, 0.8308214545249939, 0.8362018465995789, 0.8415189385414124, 0.8467735052108765, 0.8519663214683533, 0.8570982217788696, 0.8621700406074524, 0.8671825528144836, 0.8721364736557007, 0.8770326972007751, 0.8818719387054443, 0.8866549730300903, 0.8913825154304504, 0.8960554003715515, 0.9006742835044861, 0.905239999294281, 0.909753143787384, 0.914214551448822, 0.9186249375343323, 0.9229848980903625, 0.9272952079772949, 0.9315565824508667, 0.9357696175575256, 0.9399349689483643, 0.9440534114837646, 0.9481255412101746, 0.9521519541740417, 0.9561333656311035, 0.9600703716278076, 0.9639635682106018, 0.9678135514259338, 0.9716209769248962, 0.9753864407539368, 0.9791104793548584, 0.9827937483787537, 0.986436665058136, -0.9900399446487427, -0.986436665058136, -0.9827937483787537, -0.9791104793548584, -0.9753864407539368, -0.9716209769248962, -0.9678135514259338, -0.9639635682106018, -0.9600703716278076, -0.9561333656311035, -0.9521519541740417, -0.9481255412101746, -0.9440534114837646, -0.9399349689483643, -0.9357696175575256, -0.9315565824508667, -0.9272952079772949, -0.9229848980903625, -0.9186249375343323, -0.914214551448822, -0.909753143787384, -0.905239999294281, -0.9006742835044861, -0.8960554003715515, -0.8913825154304504, -0.8866549730300903, -0.8818719387054443, -0.8770326972007751, -0.8721364736557007, -0.8671825528144836, -0.8621700406074524, -0.8570982217788696, -0.8519663214683533, -0.8467735052108765, -0.8415189385414124, -0.8362018465995789, -0.8308214545249939, -0.8253768682479858, -0.8198672533035278, -0.8142918348312378, -0.8086497783660889, -0.8029402494430542, -0.7971623539924622, -0.7913152575492859, -0.7853981852531433, -0.779410183429718, -0.7733505368232727, -0.7672183513641357, -0.7610127329826355, -0.7547329068183899, -0.7483780384063721, -0.7419472932815552, -0.7354397773742676, -0.7288547158241272, -0.722191333770752, -0.715448796749115, -0.7086262702941895, -0.701723039150238, -0.6947382688522339, -0.6876712441444397, -0.6805212497711182, -0.6732874512672424, -0.6659692525863647, -0.658565878868103, -0.6510767340660095, -0.6435011029243469, -0.6358384490013123, -0.6280880570411682, -0.6202495098114014, -0.6123221516609192, -0.6043055057525635, -0.5961991548538208, -0.588002622127533, -0.5797154903411865, -0.5713374614715576, -0.5628682374954224, -0.5543075203895569, -0.5456550717353821, -0.5369107723236084, -0.5280744433403015, -0.5191460847854614, -0.5101257562637329, -0.5010133981704712, -0.4918091893196106, -0.48251330852508545, -0.47312599420547485, -0.46364760398864746, -0.4540785253047943, -0.4444192051887512, -0.43467020988464355, -0.42483216524124146, -0.41490575671195984, -0.4048917889595032, -0.3947911262512207, -0.38460472226142883, -0.37433362007141113, -0.36397895216941833, -0.3535419702529907, -0.3430239260196686, -0.3324263095855713, -0.32175055146217346, -0.3109982907772064, -0.3001711666584015, -0.2892709970474243, -0.2782996594905853, -0.2672590911388397, -0.25615137815475464, -0.244978666305542, -0.23374317586421967, -0.2224472612142563, -0.21109333634376526, -0.19968388974666595, -0.1882214993238449, -0.1767088621854782, -0.16514867544174194, -0.15354378521442413, -0.141897052526474, -0.13021144270896912, -0.11848995834589005, -0.10673566907644272, -0.09495170414447784, -0.08314123004674911, -0.0713074654340744, -0.059453658759593964, -0.04758310317993164, -0.035699114203453064, -0.023805025964975357, -0.011904199607670307, 0.0, 0.0117641631513834, 0.023525070399045944, 0.03527947515249252, 0.04702413082122803, 0.058755822479724884, 0.07047134637832642, 0.08216752111911774, 0.09384121000766754, 0.10548930615186691, 0.11710874736309052, 0.1286965012550354, 0.1402496099472046, 0.1517651528120041, 0.16324028372764587, 0.1746722012758255, 0.1860581785440445, 0.19739556312561035, 0.20868176221847534, 0.2199142724275589, 0.23109066486358643, 0.2422085851430893, 0.25326576828956604, 0.26426002383232117, 0.27518925070762634, 0.2860514521598816, 0.2968446612358093, 0.30756711959838867, 0.318217009305954, 0.3287926912307739, 0.33929261565208435, 0.34971529245376587, 0.36005932092666626, 0.37032341957092285, 0.38050636649131775, 0.3906070291996002, 0.4006243944168091, 0.41055744886398315, 0.4204053580760956, 0.4301672875881195, 0.4398425817489624, 0.44943055510520935, 0.4589306712150574, 0.4683424234390259, 0.47766539454460144, 0.4868992269039154, 0.49604368209838867, 0.5050985217094421, 0.5140635371208191, 0.5229387879371643, 0.5317240953445435, 0.5404195189476013, 0.5490251183509827, 0.5575411319732666, 0.5659676194190979, 0.5743048191070557, 0.5825530886650085, 0.5907126069068909, 0.5987838506698608, 0.6067671775817871, 0.6146629452705383, 0.6224716901779175, 0.6301938891410828, 0.6378300786018372, 0.6453807950019836, 0.65284663438797, 0.6602281928062439, 0.6675260663032532, 0.6747409701347351, 0.6818735003471375, 0.6889243721961975, 0.6958943605422974, 0.7027840614318848, 0.7095943093299866, 0.7163258194923401, 0.7229793667793274, 0.7295556664466858, 0.7360555529594421, 0.7424797415733337, 0.7488291263580322, 0.7551044225692749, 0.7613064646720886, 0.7674360275268555, 0.7734939455986023, 0.779481053352356, 0.7853981852531433, 0.7912460565567017, 0.7970255613327026, 0.8027374744415283, 0.8083826303482056, 0.8139618039131165, 0.8194758892059326, 0.8249256014823914, 0.8303117752075195, 0.8356351852416992, 0.8408966660499573, 0.8460969924926758, 0.8512369394302368, 0.8563172817230225, 0.8613387942314148, 0.8663022518157959, 0.8712084293365479, 0.876058042049408, 0.8808518648147583, 0.885590672492981, 0.8902751207351685, 0.8949059844017029, 0.8994839191436768, 0.9040097594261169, 0.9084841012954712, 0.9129077196121216, 0.9172812700271606, 0.9216054081916809, 0.9258807897567749, 0.9301081299781799, 0.9342880845069885, 0.9384213089942932, 0.9425083994865417, 0.9465500712394714, 0.9505468606948853, 0.954499363899231, 0.9584082961082458, 0.9622741937637329, 0.9660977125167847, 0.9698793292045593, 0.9736196398735046, 0.9773193001747131, 0.9809788465499878, -0.9845987558364868, -0.9809788465499878, -0.9773193001747131, -0.9736196398735046, -0.9698793292045593, -0.9660977125167847, -0.9622741937637329, -0.9584082961082458, -0.954499363899231, -0.9505468606948853, -0.9465500712394714, -0.9425083994865417, -0.9384213089942932, -0.9342880845069885, -0.9301081299781799, -0.9258807897567749, -0.9216054081916809, -0.9172812700271606, -0.9129077196121216, -0.9084841012954712, -0.9040097594261169, -0.8994839191436768, -0.8949059844017029, -0.8902751207351685, -0.885590672492981, -0.8808518648147583, -0.876058042049408, -0.8712084293365479, -0.8663022518157959, -0.8613387942314148, -0.8563172817230225, -0.8512369394302368, -0.8460969924926758, -0.8408966660499573, -0.8356351852416992, -0.8303117752075195, -0.8249256014823914, -0.8194758892059326, -0.8139618039131165, -0.8083826303482056, -0.8027374744415283, -0.7970255613327026, -0.7912460565567017, -0.7853981852531433, -0.779481053352356, -0.7734939455986023, -0.7674360275268555, -0.7613064646720886, -0.7551044225692749, -0.7488291263580322, -0.7424797415733337, -0.7360555529594421, -0.7295556664466858, -0.7229793667793274, -0.7163258194923401, -0.7095943093299866, -0.7027840614318848, -0.6958943605422974, -0.6889243721961975, -0.6818735003471375, -0.6747409701347351, -0.6675260663032532, -0.6602281928062439, -0.65284663438797, -0.6453807950019836, -0.6378300786018372, -0.6301938891410828, -0.6224716901779175, -0.6146629452705383, -0.6067671775817871, -0.5987838506698608, -0.5907126069068909, -0.5825530886650085, -0.5743048191070557, -0.5659676194190979, -0.5575411319732666, -0.5490251183509827, -0.5404195189476013, -0.5317240953445435, -0.5229387879371643, -0.5140635371208191, -0.5050985217094421, -0.49604368209838867, -0.4868992269039154, -0.47766539454460144, -0.4683424234390259, -0.4589306712150574, -0.44943055510520935, -0.4398425817489624, -0.4301672875881195, -0.4204053580760956, -0.41055744886398315, -0.4006243944168091, -0.3906070291996002, -0.38050636649131775, -0.37032341957092285, -0.36005932092666626, -0.34971529245376587, -0.33929261565208435, -0.3287926912307739, -0.318217009305954, -0.30756711959838867, -0.2968446612358093, -0.2860514521598816, -0.27518925070762634, -0.26426002383232117, -0.25326576828956604, -0.2422085851430893, -0.23109066486358643, -0.2199142724275589, -0.20868176221847534, -0.19739556312561035, -0.1860581785440445, -0.1746722012758255, -0.16324028372764587, -0.1517651528120041, -0.1402496099472046, -0.1286965012550354, -0.11710874736309052, -0.10548930615186691, -0.09384121000766754, -0.08216752111911774, -0.07047134637832642, -0.058755822479724884, -0.04702413082122803, -0.03527947515249252, -0.023525070399045944, -0.0117641631513834, 0.0, 0.011627382598817348, 0.023251622915267944, 0.03486958146095276, 0.04647812992334366, 0.058074161410331726, 0.06965457648038864, 0.08121630549430847, 0.09275632351636887, 0.10427161306142807, 0.1157592162489891, 0.12721621990203857, 0.13863973319530487, 0.15002696216106415, 0.16137510538101196, 0.17268149554729462, 0.18394345045089722, 0.19515842199325562, 0.20632389187812805, 0.21743741631507874, 0.22849664092063904, 0.2394992709159851, 0.25044310092926025, 0.26132598519325256, 0.2721458971500397, 0.2829008400440216, 0.2935889959335327, 0.3042084872722626, 0.31475767493247986, 0.32523486018180847, 0.33563855290412903, 0.34596726298332214, 0.35621964931488037, 0.36639440059661865, 0.3764903247356415, 0.3865063190460205, 0.3964412808418274, 0.4062943160533905, 0.4160645008087158, 0.42575106024742126, 0.43535327911376953, 0.4448704719543457, 0.4543020725250244, 0.46364760398864746, 0.47290658950805664, 0.4820787012577057, 0.49116361141204834, 0.5001610517501831, 0.509070873260498, 0.5178929567337036, 0.526627242565155, 0.5352737307548523, 0.5438324809074402, 0.5523034930229187, 0.5606870055198669, 0.5689831376075745, 0.5771921873092651, 0.5853144526481628, 0.5933501720428467, 0.6012997031211853, 0.6091634631156921, 0.6169418692588806, 0.6246353983879089, 0.6322445273399353, 0.6397697925567627, 0.6472116708755493, 0.6545707583427429, 0.6618476510047913, 0.6690430045127869, 0.6761573553085327, 0.6831914186477661, 0.6901459097862244, 0.6970213651657104, 0.7038186192512512, 0.7105383276939392, 0.7171812057495117, 0.723747968673706, 0.7302394509315491, 0.7366563081741333, 0.7429993748664856, 0.7492693066596985, 0.7554669976234436, 0.7615931630134583, 0.7676485776901245, 0.7736340165138245, 0.7795502543449402, 0.7853981852531433, 0.7911784648895264, 0.7968919277191162, 0.8025393486022949, 0.8081215023994446, 0.813639223575592, 0.8190932869911194, 0.8244844079017639, 0.8298133611679077, 0.8350809812545776, 0.8402880430221558, 0.8454352021217346, 0.8505233526229858, 0.8555530905723572, 0.8605253100395203, 0.8654406666755676, 0.8702999353408813, 0.8751038312911987, 0.8798530697822571, 0.8845484256744385, 0.8891904950141907, 0.8937800526618958, 0.898317813873291, 0.902804434299469, 0.907240629196167, 0.9116269946098328, 0.9159642457962036, 0.9202530980110168, 0.9244940876960754, 0.9286879897117615, 0.9328353404998779, 0.9369367957115173, 0.9409930109977722, 0.9450045228004456, 0.9489720463752747, 0.9528961181640625, 0.9567772746086121, 0.9606162309646606, 0.9644134640693665, 0.9681695103645325, 0.971885085105896, 0.9755606055259705, -0.9791966080665588, -0.9755606055259705, -0.971885085105896, -0.9681695103645325, -0.9644134640693665, -0.9606162309646606, -0.9567772746086121, -0.9528961181640625, -0.9489720463752747, -0.9450045228004456, -0.9409930109977722, -0.9369367957115173, -0.9328353404998779, -0.9286879897117615, -0.9244940876960754, -0.9202530980110168, -0.9159642457962036, -0.9116269946098328, -0.907240629196167, -0.902804434299469, -0.898317813873291, -0.8937800526618958, -0.8891904950141907, -0.8845484256744385, -0.8798530697822571, -0.8751038312911987, -0.8702999353408813, -0.8654406666755676, -0.8605253100395203, -0.8555530905723572, -0.8505233526229858, -0.8454352021217346, -0.8402880430221558, -0.8350809812545776, -0.8298133611679077, -0.8244844079017639, -0.8190932869911194, -0.813639223575592, -0.8081215023994446, -0.8025393486022949, -0.7968919277191162, -0.7911784648895264, -0.7853981852531433, -0.7795502543449402, -0.7736340165138245, -0.7676485776901245, -0.7615931630134583, -0.7554669976234436, -0.7492693066596985, -0.7429993748664856, -0.7366563081741333, -0.7302394509315491, -0.723747968673706, -0.7171812057495117, -0.7105383276939392, -0.7038186192512512, -0.6970213651657104, -0.6901459097862244, -0.6831914186477661, -0.6761573553085327, -0.6690430045127869, -0.6618476510047913, -0.6545707583427429, -0.6472116708755493, -0.6397697925567627, -0.6322445273399353, -0.6246353983879089, -0.6169418692588806, -0.6091634631156921, -0.6012997031211853, -0.5933501720428467, -0.5853144526481628, -0.5771921873092651, -0.5689831376075745, -0.5606870055198669, -0.5523034930229187, -0.5438324809074402, -0.5352737307548523, -0.526627242565155, -0.5178929567337036, -0.509070873260498, -0.5001610517501831, -0.49116361141204834, -0.4820787012577057, -0.47290658950805664, -0.46364760398864746, -0.4543020725250244, -0.4448704719543457, -0.43535327911376953, -0.42575106024742126, -0.4160645008087158, -0.4062943160533905, -0.3964412808418274, -0.3865063190460205, -0.3764903247356415, -0.36639440059661865, -0.35621964931488037, -0.34596726298332214, -0.33563855290412903, -0.32523486018180847, -0.31475767493247986, -0.3042084872722626, -0.2935889959335327, -0.2829008400440216, -0.2721458971500397, -0.26132598519325256, -0.25044310092926025, -0.2394992709159851, -0.22849664092063904, -0.21743741631507874, -0.20632389187812805, -0.19515842199325562, -0.18394345045089722, -0.17268149554729462, -0.16137510538101196, -0.15002696216106415, -0.13863973319530487, -0.12721621990203857, -0.1157592162489891, -0.10427161306142807, -0.09275632351636887, -0.08121630549430847, -0.06965457648038864, -0.058074161410331726, -0.04647812992334366, -0.03486958146095276, -0.023251622915267944, -0.011627382598817348, 0.0, 0.011493747122585773, 0.0229844581335783, 0.03446910157799721, 0.04594465717673302, 0.05740811303257942, 0.06885649263858795, 0.08028681576251984, 0.09169615805149078, 0.1030816063284874, 0.11444030702114105, 0.12576942145824432, 0.13706617057323456, 0.14832782745361328, 0.1595517247915268, 0.1707352101802826, 0.18187573552131653, 0.19297081232070923, 0.2040179818868637, 0.21501487493515015, 0.22595921158790588, 0.23684875667095184, 0.2476813644170761, 0.25845494866371155, 0.2691674828529358, 0.2798171043395996, 0.2904019355773926, 0.3009202480316162, 0.311370313167572, 0.32175055146217346, 0.33205947279930115, 0.3422956168651581, 0.35245761275291443, 0.3625442385673523, 0.3725542724132538, 0.38248658180236816, 0.39234015345573425, 0.40211400389671326, 0.4118072986602783, 0.4214192032814026, 0.43094897270202637, 0.4403959810733795, 0.4497596025466919, 0.4590393602848053, 0.46823474764823914, 0.47734537720680237, 0.4863709807395935, 0.4953112304210663, 0.5041659474372864, 0.5129350423812866, 0.5216183066368103, 0.5302157998085022, 0.5387274622917175, 0.5471534132957458, 0.5554937124252319, 0.5637485980987549, 0.5719181895256042, 0.5800027847290039, 0.588002622127533, 0.5959179997444153, 0.6037493348121643, 0.6114969849586487, 0.6191613674163818, 0.6267428994178772, 0.6342421174049377, 0.6416594982147217, 0.648995578289032, 0.6562508940696716, 0.6634259819984436, 0.6705215573310852, 0.6775381565093994, 0.684476375579834, 0.6913369297981262, 0.6981204748153687, 0.704827606678009, 0.7114591002464294, 0.7180156707763672, 0.7244979739189148, 0.7309067249298096, 0.7372426390647888, 0.7435064911842346, 0.749699056148529, 0.7558209896087646, 0.7618730664253235, 0.7678561210632324, 0.773770809173584, 0.7796179056167603, 0.7853981852531433, 0.7911123633384705, 0.7967613339424133, 0.8023456931114197, 0.8078662753105164, 0.8133238554000854, 0.8187191486358643, 0.8240529298782349, 0.8293259143829346, 0.8345388770103455, 0.8396925926208496, 0.8447877168655396, 0.8498250246047974, 0.8548052310943604, 0.8597290515899658, 0.8645972609519958, 0.8694104552268982, 0.8741694688796997, 0.8788749575614929, 0.8835275769233704, 0.8881280422210693, 0.8926770091056824, 0.8971751928329468, 0.9016232490539551, 0.9060218334197998, 0.9103716015815735, 0.9146731495857239, 0.9189271926879883, 0.9231343269348145, 0.9272952079772949, 0.9314104318618774, 0.9354805946350098, 0.9395062923431396, 0.9434881210327148, 0.9474267363548279, 0.951322615146637, 0.9551764130592346, 0.9589887261390686, 0.9627599716186523, 0.9664908051490784, 0.9701817631721497, -0.9738333821296692, -0.9701817631721497, -0.9664908051490784, -0.9627599716186523, -0.9589887261390686, -0.9551764130592346, -0.951322615146637, -0.9474267363548279, -0.9434881210327148, -0.9395062923431396, -0.9354805946350098, -0.9314104318618774, -0.9272952079772949, -0.9231343269348145, -0.9189271926879883, -0.9146731495857239, -0.9103716015815735, -0.9060218334197998, -0.9016232490539551, -0.8971751928329468, -0.8926770091056824, -0.8881280422210693, -0.8835275769233704, -0.8788749575614929, -0.8741694688796997, -0.8694104552268982, -0.8645972609519958, -0.8597290515899658, -0.8548052310943604, -0.8498250246047974, -0.8447877168655396, -0.8396925926208496, -0.8345388770103455, -0.8293259143829346, -0.8240529298782349, -0.8187191486358643, -0.8133238554000854, -0.8078662753105164, -0.8023456931114197, -0.7967613339424133, -0.7911123633384705, -0.7853981852531433, -0.7796179056167603, -0.773770809173584, -0.7678561210632324, -0.7618730664253235, -0.7558209896087646, -0.749699056148529, -0.7435064911842346, -0.7372426390647888, -0.7309067249298096, -0.7244979739189148, -0.7180156707763672, -0.7114591002464294, -0.704827606678009, -0.6981204748153687, -0.6913369297981262, -0.684476375579834, -0.6775381565093994, -0.6705215573310852, -0.6634259819984436, -0.6562508940696716, -0.648995578289032, -0.6416594982147217, -0.6342421174049377, -0.6267428994178772, -0.6191613674163818, -0.6114969849586487, -0.6037493348121643, -0.5959179997444153, -0.588002622127533, -0.5800027847290039, -0.5719181895256042, -0.5637485980987549, -0.5554937124252319, -0.5471534132957458, -0.5387274622917175, -0.5302157998085022, -0.5216183066368103, -0.5129350423812866, -0.5041659474372864, -0.4953112304210663, -0.4863709807395935, -0.47734537720680237, -0.46823474764823914, -0.4590393602848053, -0.4497596025466919, -0.4403959810733795, -0.43094897270202637, -0.4214192032814026, -0.4118072986602783, -0.40211400389671326, -0.39234015345573425, -0.38248658180236816, -0.3725542724132538, -0.3625442385673523, -0.35245761275291443, -0.3422956168651581, -0.33205947279930115, -0.32175055146217346, -0.311370313167572, -0.3009202480316162, -0.2904019355773926, -0.2798171043395996, -0.2691674828529358, -0.25845494866371155, -0.2476813644170761, -0.23684875667095184, -0.22595921158790588, -0.21501487493515015, -0.2040179818868637, -0.19297081232070923, -0.18187573552131653, -0.1707352101802826, -0.1595517247915268, -0.14832782745361328, -0.13706617057323456, -0.12576942145824432, -0.11444030702114105, -0.1030816063284874, -0.09169615805149078, -0.08028681576251984, -0.06885649263858795, -0.05740811303257942, -0.04594465717673302, -0.03446910157799721, -0.0229844581335783, -0.011493747122585773, 0.0, 0.01136314682662487, 0.022723359987139702, 0.034077711403369904, 0.04542328044772148, 0.056757159531116486, 0.06807646155357361, 0.07937831431627274, 0.09065988659858704, 0.10191836953163147, 0.11315098404884338, 0.12435499578714371, 0.13552771508693695, 0.1466664969921112, 0.15776874125003815, 0.16883189976215363, 0.17985349893569946, 0.19083110988140106, 0.2017623484134674, 0.21264491975307465, 0.2234766036272049, 0.23425520956516266, 0.244978666305542, 0.25564491748809814, 0.2662520408630371, 0.27679815888404846, 0.28728145360946655, 0.2977001965045929, 0.30805277824401855, 0.3183375895023346, 0.328553169965744, 0.3386980891227722, 0.34877100586891174, 0.3587706685066223, 0.3686959147453308, 0.3785455822944641, 0.3883187174797058, 0.3980143070220947, 0.407631516456604, 0.4171694815158844, 0.4266274869441986, 0.4360048770904541, 0.4453010559082031, 0.4545154571533203, 0.46364760398864746, 0.4726971387863159, 0.48166367411613464, 0.49054694175720215, 0.4993467330932617, 0.5080628395080566, 0.5166951417922974, 0.5252435803413391, 0.5337082147598267, 0.5420889258384705, 0.5503859519958496, 0.5585992932319641, 0.5667291879653931, 0.5747758746147156, 0.5827394723892212, 0.5906203985214233, 0.5984188914299011, 0.6061353087425232, 0.613770067691803, 0.6213235855102539, 0.6287962794303894, 0.6361886262893677, 0.6435011029243469, 0.6507342457771301, 0.6578885912895203, 0.6649647355079651, 0.6719631552696228, 0.6788845658302307, 0.6857295036315918, 0.6924986243247986, 0.6991925835609436, 0.7058120369911194, 0.7123575806617737, 0.7188299894332886, 0.7252299189567566, 0.7315580248832703, 0.7378150820732117, 0.7440016865730286, 0.7501186728477478, 0.7561666965484619, 0.762146532535553, 0.7680588364601135, 0.7739044427871704, 0.7796839475631714, 0.7853981852531433, 0.7910478115081787, 0.7966336607933044, 0.802156388759613, 0.8076167106628418, 0.8130154609680176, 0.8183532357215881, 0.8236308693885803, 0.8288490772247314, 0.834008514881134, 0.8391098976135254, 0.8441540002822876, 0.8491414785385132, 0.8540730476379395, 0.8589494824409485, 0.8637713193893433, 0.8685393929481506, 0.8732542991638184, 0.8779168128967285, 0.8825274705886841, 0.8870869874954224, 0.8915960788726807, 0.8960554003715515, 0.9004654884338379, 0.9048271179199219, 0.9091407656669617, 0.9134072065353394, 0.9176270365715027, 0.9218007922172546, 0.925929069519043, 0.930012583732605, 0.9340518712997437, 0.938047468662262, 0.9420000314712524, 0.9459100961685181, 0.9497781991958618, 0.9536049365997314, 0.9573908448219299, 0.9611364603042603, 0.9648423194885254, -0.9685089588165283, -0.9648423194885254, -0.9611364603042603, -0.9573908448219299, -0.9536049365997314, -0.9497781991958618, -0.9459100961685181, -0.9420000314712524, -0.938047468662262, -0.9340518712997437, -0.930012583732605, -0.925929069519043, -0.9218007922172546, -0.9176270365715027, -0.9134072065353394, -0.9091407656669617, -0.9048271179199219, -0.9004654884338379, -0.8960554003715515, -0.8915960788726807, -0.8870869874954224, -0.8825274705886841, -0.8779168128967285, -0.8732542991638184, -0.8685393929481506, -0.8637713193893433, -0.8589494824409485, -0.8540730476379395, -0.8491414785385132, -0.8441540002822876, -0.8391098976135254, -0.834008514881134, -0.8288490772247314, -0.8236308693885803, -0.8183532357215881, -0.8130154609680176, -0.8076167106628418, -0.802156388759613, -0.7966336607933044, -0.7910478115081787, -0.7853981852531433, -0.7796839475631714, -0.7739044427871704, -0.7680588364601135, -0.762146532535553, -0.7561666965484619, -0.7501186728477478, -0.7440016865730286, -0.7378150820732117, -0.7315580248832703, -0.7252299189567566, -0.7188299894332886, -0.7123575806617737, -0.7058120369911194, -0.6991925835609436, -0.6924986243247986, -0.6857295036315918, -0.6788845658302307, -0.6719631552696228, -0.6649647355079651, -0.6578885912895203, -0.6507342457771301, -0.6435011029243469, -0.6361886262893677, -0.6287962794303894, -0.6213235855102539, -0.613770067691803, -0.6061353087425232, -0.5984188914299011, -0.5906203985214233, -0.5827394723892212, -0.5747758746147156, -0.5667291879653931, -0.5585992932319641, -0.5503859519958496, -0.5420889258384705, -0.5337082147598267, -0.5252435803413391, -0.5166951417922974, -0.5080628395080566, -0.4993467330932617, -0.49054694175720215, -0.48166367411613464, -0.4726971387863159, -0.46364760398864746, -0.4545154571533203, -0.4453010559082031, -0.4360048770904541, -0.4266274869441986, -0.4171694815158844, -0.407631516456604, -0.3980143070220947, -0.3883187174797058, -0.3785455822944641, -0.3686959147453308, -0.3587706685066223, -0.34877100586891174, -0.3386980891227722, -0.328553169965744, -0.3183375895023346, -0.30805277824401855, -0.2977001965045929, -0.28728145360946655, -0.27679815888404846, -0.2662520408630371, -0.25564491748809814, -0.244978666305542, -0.23425520956516266, -0.2234766036272049, -0.21264491975307465, -0.2017623484134674, -0.19083110988140106, -0.17985349893569946, -0.16883189976215363, -0.15776874125003815, -0.1466664969921112, -0.13552771508693695, -0.12435499578714371, -0.11315098404884338, -0.10191836953163147, -0.09065988659858704, -0.07937831431627274, -0.06807646155357361, -0.056757159531116486, -0.04542328044772148, -0.034077711403369904, -0.022723359987139702, -0.01136314682662487, 0.0, 0.011235482059419155, 0.02246812917292118, 0.03369510918855667, 0.04491359367966652, 0.05612078309059143, 0.06731387227773666, 0.07849010080099106, 0.08964671939611435, 0.10078100115060806, 0.1118902638554573, 0.12297187000513077, 0.13402320444583893, 0.14504170417785645, 0.15602484345436096, 0.1669701635837555, 0.17787526547908783, 0.18873776495456696, 0.1995553821325302, 0.21032586693763733, 0.2210470587015152, 0.2317168414592743, 0.24233317375183105, 0.2528940737247467, 0.2633976340293884, 0.2738420367240906, 0.2842255234718323, 0.2945463955402374, 0.3048030138015747, 0.31499388813972473, 0.3251175582408905, 0.335172563791275, 0.345157653093338, 0.3550715446472168, 0.36491310596466064, 0.3746812045574188, 0.38437482714653015, 0.3939930498600006, 0.4035349488258362, 0.4129997193813324, 0.42238664627075195, 0.43169501423835754, 0.4409242570400238, 0.450073778629303, 0.45914313197135925, 0.4681318700313568, 0.4770396649837494, 0.4858661890029907, 0.4946111738681793, 0.5032744407653809, 0.5118558406829834, 0.5203552842140198, 0.52877277135849, 0.5371082425117493, 0.5453618168830872, 0.5535334944725037, 0.5616235136985779, 0.5696319937705994, 0.5775591135025024, 0.5854052305221558, 0.5931705236434937, 0.6008553504943848, 0.6084601283073425, 0.615985095500946, 0.6234307885169983, 0.6307976245880127, 0.6380860209465027, 0.6452964544296265, 0.652429461479187, 0.6594855189323425, 0.6664652824401855, 0.6733692288398743, 0.6801978945732117, 0.6869519948959351, 0.6936320662498474, 0.7002387642860413, 0.7067726850509644, 0.713234543800354, 0.719624936580658, 0.7259445190429688, 0.7321940064430237, 0.7383740544319153, 0.7444853186607361, 0.7505285739898682, 0.756504476070404, 0.7624136805534363, 0.7682569622993469, 0.7740350365638733, 0.7797484993934631, 0.7853981852531433, 0.7909846901893616, 0.7965087890625, 0.8019712567329407, 0.8073726296424866, 0.8127137422561646, 0.8179953098297119, 0.8232179880142212, 0.8283824324607849, 0.8334894180297852, 0.8385396003723145, 0.8435336351394653, 0.8484722971916199, 0.8533561825752258, 0.8581860065460205, 0.8629624247550964, 0.8676861524581909, 0.8723577857017517, 0.8769780397415161, 0.8815474510192871, 0.8860667943954468, 0.8905366659164429, 0.8949576616287231, 0.8993304967880249, 0.9036556482315063, 0.9079338908195496, 0.9121657013893127, 0.9163517355918884, 0.9204925894737244, 0.9245888590812683, 0.928641140460968, 0.9326499104499817, 0.9366158246994019, 0.9405394792556763, 0.9444213509559631, 0.9482619762420654, 0.9520620107650757, 0.9558218717575073, 0.9595420956611633, -0.9632232785224915, -0.9595420956611633, -0.9558218717575073, -0.9520620107650757, -0.9482619762420654, -0.9444213509559631, -0.9405394792556763, -0.9366158246994019, -0.9326499104499817, -0.928641140460968, -0.9245888590812683, -0.9204925894737244, -0.9163517355918884, -0.9121657013893127, -0.9079338908195496, -0.9036556482315063, -0.8993304967880249, -0.8949576616287231, -0.8905366659164429, -0.8860667943954468, -0.8815474510192871, -0.8769780397415161, -0.8723577857017517, -0.8676861524581909, -0.8629624247550964, -0.8581860065460205, -0.8533561825752258, -0.8484722971916199, -0.8435336351394653, -0.8385396003723145, -0.8334894180297852, -0.8283824324607849, -0.8232179880142212, -0.8179953098297119, -0.8127137422561646, -0.8073726296424866, -0.8019712567329407, -0.7965087890625, -0.7909846901893616, -0.7853981852531433, -0.7797484993934631, -0.7740350365638733, -0.7682569622993469, -0.7624136805534363, -0.756504476070404, -0.7505285739898682, -0.7444853186607361, -0.7383740544319153, -0.7321940064430237, -0.7259445190429688, -0.719624936580658, -0.713234543800354, -0.7067726850509644, -0.7002387642860413, -0.6936320662498474, -0.6869519948959351, -0.6801978945732117, -0.6733692288398743, -0.6664652824401855, -0.6594855189323425, -0.652429461479187, -0.6452964544296265, -0.6380860209465027, -0.6307976245880127, -0.6234307885169983, -0.615985095500946, -0.6084601283073425, -0.6008553504943848, -0.5931705236434937, -0.5854052305221558, -0.5775591135025024, -0.5696319937705994, -0.5616235136985779, -0.5535334944725037, -0.5453618168830872, -0.5371082425117493, -0.52877277135849, -0.5203552842140198, -0.5118558406829834, -0.5032744407653809, -0.4946111738681793, -0.4858661890029907, -0.4770396649837494, -0.4681318700313568, -0.45914313197135925, -0.450073778629303, -0.4409242570400238, -0.43169501423835754, -0.42238664627075195, -0.4129997193813324, -0.4035349488258362, -0.3939930498600006, -0.38437482714653015, -0.3746812045574188, -0.36491310596466064, -0.3550715446472168, -0.345157653093338, -0.335172563791275, -0.3251175582408905, -0.31499388813972473, -0.3048030138015747, -0.2945463955402374, -0.2842255234718323, -0.2738420367240906, -0.2633976340293884, -0.2528940737247467, -0.24233317375183105, -0.2317168414592743, -0.2210470587015152, -0.21032586693763733, -0.1995553821325302, -0.18873776495456696, -0.17787526547908783, -0.1669701635837555, -0.15602484345436096, -0.14504170417785645, -0.13402320444583893, -0.12297187000513077, -0.1118902638554573, -0.10078100115060806, -0.08964671939611435, -0.07849010080099106, -0.06731387227773666, -0.05612078309059143, -0.04491359367966652, -0.03369510918855667, -0.02246812917292118, -0.011235482059419155, 0.0, 0.011110654100775719, 0.02221856452524662, 0.03332099691033363, 0.04441521689295769, 0.055498506873846054, 0.06656816601753235, 0.07762151211500168, 0.08865588158369064, 0.09966865181922913, 0.1106572225689888, 0.12161902338266373, 0.13255153596401215, 0.1434522569179535, 0.15431877970695496, 0.16514867544174194, 0.1759396195411682, 0.1866893321275711, 0.19739556312561035, 0.20805613696575165, 0.21866895258426666, 0.22923193871974945, 0.23974311351776123, 0.2502005398273468, 0.2606023848056793, 0.2709468603134155, 0.28123220801353455, 0.29145678877830505, 0.3016190528869629, 0.3117174506187439, 0.32175055146217346, 0.33171701431274414, 0.3416154980659485, 0.3514447808265686, 0.36120375990867615, 0.3708913028240204, 0.38050636649131775, 0.390048086643219, 0.3995154798030853, 0.40890783071517944, 0.4182243347167969, 0.4274643063545227, 0.4366271495819092, 0.44571229815483093, 0.45471927523612976, 0.46364760398864746, 0.4724969267845154, 0.48126694560050964, 0.489957332611084, 0.4985679090023041, 0.5070984959602356, 0.5155490040779114, 0.5239193439483643, 0.5322095155715942, 0.5404195189476013, 0.5485494136810303, 0.5565993189811707, 0.5645694136619568, 0.5724598169326782, 0.5802708268165588, 0.588002622127533, 0.5956555008888245, 0.6032298803329468, 0.6107259392738342, 0.6181442141532898, 0.6254850625991821, 0.6327488422393799, 0.639936089515686, 0.647047221660614, 0.654082715511322, 0.6610431671142578, 0.6679290533065796, 0.6747409701347351, 0.6814793944358826, 0.6881449818611145, 0.6947382688522339, 0.7012599110603333, 0.7077105045318604, 0.7140907049179077, 0.7204011082649231, 0.726642370223999, 0.7328150868415833, 0.7389200329780579, 0.7449578046798706, 0.750929057598114, 0.7568345069885254, 0.7626748085021973, 0.7684506177902222, 0.7741627097129822, 0.7798116207122803, 0.7853981852531433, 0.7909229397773743, 0.79638671875, 0.8017901182174683, 0.8071338534355164, 0.8124186396598816, 0.8176450729370117, 0.822813868522644, 0.8279256820678711, 0.832981288433075, 0.8379812240600586, 0.8429262638092041, 0.8478169441223145, 0.8526540994644165, 0.8574382066726685, 0.8621700406074524, 0.8668501973152161, 0.871479332447052, 0.876058042049408, 0.8805869817733765, 0.88506680727005, 0.8894981145858765, 0.8938814997673035, 0.8982175588607788, 0.9025068879127502, 0.9067501425743103, 0.9109479188919067, 0.9151006937026978, 0.9192091226577759, 0.9232738018035889, 0.9272952079772949, 0.9312739968299866, 0.935210645198822, 0.9391056895256042, 0.942959725856781, 0.9467732906341553, 0.9505468606948853, 0.9542809724807739, -0.9579761028289795, -0.9542809724807739, -0.9505468606948853, -0.9467732906341553, -0.942959725856781, -0.9391056895256042, -0.935210645198822, -0.9312739968299866, -0.9272952079772949, -0.9232738018035889, -0.9192091226577759, -0.9151006937026978, -0.9109479188919067, -0.9067501425743103, -0.9025068879127502, -0.8982175588607788, -0.8938814997673035, -0.8894981145858765, -0.88506680727005, -0.8805869817733765, -0.876058042049408, -0.871479332447052, -0.8668501973152161, -0.8621700406074524, -0.8574382066726685, -0.8526540994644165, -0.8478169441223145, -0.8429262638092041, -0.8379812240600586, -0.832981288433075, -0.8279256820678711, -0.822813868522644, -0.8176450729370117, -0.8124186396598816, -0.8071338534355164, -0.8017901182174683, -0.79638671875, -0.7909229397773743, -0.7853981852531433, -0.7798116207122803, -0.7741627097129822, -0.7684506177902222, -0.7626748085021973, -0.7568345069885254, -0.750929057598114, -0.7449578046798706, -0.7389200329780579, -0.7328150868415833, -0.726642370223999, -0.7204011082649231, -0.7140907049179077, -0.7077105045318604, -0.7012599110603333, -0.6947382688522339, -0.6881449818611145, -0.6814793944358826, -0.6747409701347351, -0.6679290533065796, -0.6610431671142578, -0.654082715511322, -0.647047221660614, -0.639936089515686, -0.6327488422393799, -0.6254850625991821, -0.6181442141532898, -0.6107259392738342, -0.6032298803329468, -0.5956555008888245, -0.588002622127533, -0.5802708268165588, -0.5724598169326782, -0.5645694136619568, -0.5565993189811707, -0.5485494136810303, -0.5404195189476013, -0.5322095155715942, -0.5239193439483643, -0.5155490040779114, -0.5070984959602356, -0.4985679090023041, -0.489957332611084, -0.48126694560050964, -0.4724969267845154, -0.46364760398864746, -0.45471927523612976, -0.44571229815483093, -0.4366271495819092, -0.4274643063545227, -0.4182243347167969, -0.40890783071517944, -0.3995154798030853, -0.390048086643219, -0.38050636649131775, -0.3708913028240204, -0.36120375990867615, -0.3514447808265686, -0.3416154980659485, -0.33171701431274414, -0.32175055146217346, -0.3117174506187439, -0.3016190528869629, -0.29145678877830505, -0.28123220801353455, -0.2709468603134155, -0.2606023848056793, -0.2502005398273468, -0.23974311351776123, -0.22923193871974945, -0.21866895258426666, -0.20805613696575165, -0.19739556312561035, -0.1866893321275711, -0.1759396195411682, -0.16514867544174194, -0.15431877970695496, -0.1434522569179535, -0.13255153596401215, -0.12161902338266373, -0.1106572225689888, -0.09966865181922913, -0.08865588158369064, -0.07762151211500168, -0.06656816601753235, -0.055498506873846054, -0.04441521689295769, -0.03332099691033363, -0.02221856452524662, -0.011110654100775719, 0.0, 0.010988568887114525, 0.021974483504891396, 0.032955098897218704, 0.043927766382694244, 0.05488986149430275, 0.0658387690782547, 0.07677189260721207, 0.08768665790557861, 0.09858051687479019, 0.10945095121860504, 0.12029547989368439, 0.13111165165901184, 0.141897052526474, 0.15264932811260223, 0.1633661538362503, 0.17404523491859436, 0.1846843808889389, 0.19528140127658844, 0.20583418011665344, 0.21634066104888916, 0.22679884731769562, 0.23720680177211761, 0.24756263196468353, 0.2578645348548889, 0.2681107819080353, 0.2782996594905853, 0.2884295582771301, 0.2984989285469055, 0.3085063099861145, 0.3184502422809601, 0.3283294141292572, 0.3381425142288208, 0.34788838028907776, 0.35756585001945496, 0.36717382073402405, 0.37671133875846863, 0.3861773908138275, 0.39557114243507385, 0.4048917889595032, 0.4141385555267334, 0.4233107566833496, 0.43240776658058167, 0.4414290487766266, 0.4503740668296814, 0.4592423439025879, 0.4680335521697998, 0.4767473042011261, 0.4853833019733429, 0.49394136667251587, 0.5024212598800659, 0.5108228921890259, 0.5191460847854614, 0.5273908972740173, 0.5355573296546936, 0.5436453223228455, 0.5516549944877625, 0.5595864653587341, 0.5674399733543396, 0.5752155780792236, 0.5829135775566101, 0.5905342698097229, 0.5980778336524963, 0.6055446863174438, 0.6129350662231445, 0.6202495098114014, 0.6274882555007935, 0.634651780128479, 0.6417405605316162, 0.6487550139427185, 0.6556956171989441, 0.662562906742096, 0.669357419013977, 0.6760796308517456, 0.6827301383018494, 0.6893094182014465, 0.6958181858062744, 0.7022569179534912, 0.7086262702941895, 0.7149268388748169, 0.7211591601371765, 0.7273240089416504, 0.7334219217300415, 0.7394534945487976, 0.7454195022583008, 0.751320481300354, 0.7571570873260498, 0.7629300355911255, 0.7686399817466736, 0.7742875218391418, 0.7798733711242676, 0.7853981852531433, 0.7908625602722168, 0.7962672710418701, 0.8016129732131958, 0.8069002032279968, 0.8121297359466553, 0.8173022270202637, 0.8224182724952698, 0.8274785876274109, 0.8324837684631348, 0.8374344706535339, 0.8423314094543457, 0.847175121307373, 0.8519663214683533, 0.8567056059837341, 0.8613936305046082, 0.8660310506820679, 0.8706184029579163, 0.8751563429832458, 0.8796454668045044, 0.8840864300727844, 0.8884797692298889, 0.8928261399269104, 0.8971260190010071, 0.9013801217079163, 0.9055889844894409, 0.909753143787384, 0.9138731956481934, 0.9179496765136719, 0.9219831824302673, 0.9259741902351379, 0.9299233555793762, 0.9338310956954956, 0.9376979470252991, 0.9415245056152344, 0.9453113079071045, 0.9490587711334229, -0.9527674317359924, -0.9490587711334229, -0.9453113079071045, -0.9415245056152344, -0.9376979470252991, -0.9338310956954956, -0.9299233555793762, -0.9259741902351379, -0.9219831824302673, -0.9179496765136719, -0.9138731956481934, -0.909753143787384, -0.9055889844894409, -0.9013801217079163, -0.8971260190010071, -0.8928261399269104, -0.8884797692298889, -0.8840864300727844, -0.8796454668045044, -0.8751563429832458, -0.8706184029579163, -0.8660310506820679, -0.8613936305046082, -0.8567056059837341, -0.8519663214683533, -0.847175121307373, -0.8423314094543457, -0.8374344706535339, -0.8324837684631348, -0.8274785876274109, -0.8224182724952698, -0.8173022270202637, -0.8121297359466553, -0.8069002032279968, -0.8016129732131958, -0.7962672710418701, -0.7908625602722168, -0.7853981852531433, -0.7798733711242676, -0.7742875218391418, -0.7686399817466736, -0.7629300355911255, -0.7571570873260498, -0.751320481300354, -0.7454195022583008, -0.7394534945487976, -0.7334219217300415, -0.7273240089416504, -0.7211591601371765, -0.7149268388748169, -0.7086262702941895, -0.7022569179534912, -0.6958181858062744, -0.6893094182014465, -0.6827301383018494, -0.6760796308517456, -0.669357419013977, -0.662562906742096, -0.6556956171989441, -0.6487550139427185, -0.6417405605316162, -0.634651780128479, -0.6274882555007935, -0.6202495098114014, -0.6129350662231445, -0.6055446863174438, -0.5980778336524963, -0.5905342698097229, -0.5829135775566101, -0.5752155780792236, -0.5674399733543396, -0.5595864653587341, -0.5516549944877625, -0.5436453223228455, -0.5355573296546936, -0.5273908972740173, -0.5191460847854614, -0.5108228921890259, -0.5024212598800659, -0.49394136667251587, -0.4853833019733429, -0.4767473042011261, -0.4680335521697998, -0.4592423439025879, -0.4503740668296814, -0.4414290487766266, -0.43240776658058167, -0.4233107566833496, -0.4141385555267334, -0.4048917889595032, -0.39557114243507385, -0.3861773908138275, -0.37671133875846863, -0.36717382073402405, -0.35756585001945496, -0.34788838028907776, -0.3381425142288208, -0.3283294141292572, -0.3184502422809601, -0.3085063099861145, -0.2984989285469055, -0.2884295582771301, -0.2782996594905853, -0.2681107819080353, -0.2578645348548889, -0.24756263196468353, -0.23720680177211761, -0.22679884731769562, -0.21634066104888916, -0.20583418011665344, -0.19528140127658844, -0.1846843808889389, -0.17404523491859436, -0.1633661538362503, -0.15264932811260223, -0.141897052526474, -0.13111165165901184, -0.12029547989368439, -0.10945095121860504, -0.09858051687479019, -0.08768665790557861, -0.07677189260721207, -0.0658387690782547, -0.05488986149430275, -0.043927766382694244, -0.032955098897218704, -0.021974483504891396, -0.010988568887114525, 0.0, 0.01086913701146841, 0.02173570729792118, 0.032597146928310394, 0.04345089569687843, 0.0542944110929966, 0.06512515991926193, 0.07594063878059387, 0.08673834055662155, 0.09751580655574799, 0.10827059298753738, 0.11900029331445694, 0.12970253825187683, 0.14037498831748962, 0.15101534128189087, 0.1616213619709015, 0.1721908152103424, 0.1827215552330017, 0.19321148097515106, 0.20365852117538452, 0.2140606790781021, 0.22441600263118744, 0.23472261428833008, 0.244978666305542, 0.2551823854446411, 0.26533207297325134, 0.27542608976364136, 0.2854628562927246, 0.29544082283973694, 0.3053585886955261, 0.31521469354629517, 0.3250078856945038, 0.33473682403564453, 0.34440040588378906, 0.35399743914604187, 0.3635268807411194, 0.3729877173900604, 0.38237902522087097, 0.3916999399662018, 0.400949627161026, 0.41012734174728394, 0.41923239827156067, 0.42826414108276367, 0.43722203373908997, 0.4461055397987366, 0.4549142122268677, 0.46364760398864746, 0.47230538725852966, 0.4808872938156128, 0.4893929958343506, 0.4978223443031311, 0.50617516040802, 0.5144513249397278, 0.5226507782936096, 0.5307735204696655, 0.5388194918632507, 0.5467888116836548, 0.5546815991401672, 0.5624979138374329, 0.5702379941940308, 0.5779019594192505, 0.5854900479316711, 0.5930025577545166, 0.6004397869110107, 0.6078019738197327, 0.6150895953178406, 0.6223028898239136, 0.6294422745704651, 0.6365082263946533, 0.6435011029243469, 0.6504214406013489, 0.6572695970535278, 0.6640461683273315, 0.6707516312599182, 0.677386462688446, 0.683951199054718, 0.6904464364051819, 0.6968727707862854, 0.703230619430542, 0.709520697593689, 0.7157436013221741, 0.7218998074531555, 0.7279900312423706, 0.7340148687362671, 0.739974856376648, 0.7458707690238953, 0.7517030835151672, 0.7574724555015564, 0.7631796002388, 0.768825113773346, 0.7744095921516418, 0.779933750629425, 0.7853981852531433, 0.7908034920692444, 0.7961504459381104, 0.8014395833015442, 0.8066715598106384, 0.8118470311164856, 0.8169665932655334, 0.8220309615135193, 0.8270407319068909, 0.8319965600967407, 0.8368989825248718, 0.8417487144470215, 0.8465463519096375, 0.8512924909591675, 0.8559877276420593, 0.8606327772140503, 0.8652281761169434, 0.8697744607925415, 0.874272346496582, 0.8787223696708679, 0.8831250667572021, 0.8874810934066772, 0.891791045665741, 0.8960554003715515, 0.9002747535705566, 0.9044497013092041, 0.9085808396339417, 0.9126685857772827, 0.9167135953903198, 0.9207163453102112, 0.9246774315834045, 0.9285972714424133, 0.9324765205383301, 0.9363155961036682, 0.9401150345802307, 0.9438753128051758, -0.9475969672203064, -0.9438753128051758, -0.9401150345802307, -0.9363155961036682, -0.9324765205383301, -0.9285972714424133, -0.9246774315834045, -0.9207163453102112, -0.9167135953903198, -0.9126685857772827, -0.9085808396339417, -0.9044497013092041, -0.9002747535705566, -0.8960554003715515, -0.891791045665741, -0.8874810934066772, -0.8831250667572021, -0.8787223696708679, -0.874272346496582, -0.8697744607925415, -0.8652281761169434, -0.8606327772140503, -0.8559877276420593, -0.8512924909591675, -0.8465463519096375, -0.8417487144470215, -0.8368989825248718, -0.8319965600967407, -0.8270407319068909, -0.8220309615135193, -0.8169665932655334, -0.8118470311164856, -0.8066715598106384, -0.8014395833015442, -0.7961504459381104, -0.7908034920692444, -0.7853981852531433, -0.779933750629425, -0.7744095921516418, -0.768825113773346, -0.7631796002388, -0.7574724555015564, -0.7517030835151672, -0.7458707690238953, -0.739974856376648, -0.7340148687362671, -0.7279900312423706, -0.7218998074531555, -0.7157436013221741, -0.709520697593689, -0.703230619430542, -0.6968727707862854, -0.6904464364051819, -0.683951199054718, -0.677386462688446, -0.6707516312599182, -0.6640461683273315, -0.6572695970535278, -0.6504214406013489, -0.6435011029243469, -0.6365082263946533, -0.6294422745704651, -0.6223028898239136, -0.6150895953178406, -0.6078019738197327, -0.6004397869110107, -0.5930025577545166, -0.5854900479316711, -0.5779019594192505, -0.5702379941940308, -0.5624979138374329, -0.5546815991401672, -0.5467888116836548, -0.5388194918632507, -0.5307735204696655, -0.5226507782936096, -0.5144513249397278, -0.50617516040802, -0.4978223443031311, -0.4893929958343506, -0.4808872938156128, -0.47230538725852966, -0.46364760398864746, -0.4549142122268677, -0.4461055397987366, -0.43722203373908997, -0.42826414108276367, -0.41923239827156067, -0.41012734174728394, -0.400949627161026, -0.3916999399662018, -0.38237902522087097, -0.3729877173900604, -0.3635268807411194, -0.35399743914604187, -0.34440040588378906, -0.33473682403564453, -0.3250078856945038, -0.31521469354629517, -0.3053585886955261, -0.29544082283973694, -0.2854628562927246, -0.27542608976364136, -0.26533207297325134, -0.2551823854446411, -0.244978666305542, -0.23472261428833008, -0.22441600263118744, -0.2140606790781021, -0.20365852117538452, -0.19321148097515106, -0.1827215552330017, -0.1721908152103424, -0.1616213619709015, -0.15101534128189087, -0.14037498831748962, -0.12970253825187683, -0.11900029331445694, -0.10827059298753738, -0.09751580655574799, -0.08673834055662155, -0.07594063878059387, -0.06512515991926193, -0.0542944110929966, -0.04345089569687843, -0.032597146928310394, -0.02173570729792118, -0.01086913701146841, 0.0, 0.010752273723483086, 0.021502062678337097, 0.03224688395857811, 0.0429842583835125, 0.05371173098683357, 0.06442683935165405, 0.07512715458869934, 0.08581026643514633, 0.09647377580404282, 0.10711532086133957, 0.11773257702589035, 0.12832322716712952, 0.1388850212097168, 0.14941571652889252, 0.15991312265396118, 0.17037510871887207, 0.18079957365989685, 0.19118446111679077, 0.20152777433395386, 0.21182754635810852, 0.22208189964294434, 0.23228898644447327, 0.24244701862335205, 0.2525542676448822, 0.26260906457901, 0.2726098299026489, 0.28255495429039, 0.2924429774284363, 0.3022724986076355, 0.31204211711883545, 0.32175055146217346, 0.33139654994010925, 0.3409789502620697, 0.3504966199398041, 0.3599485158920288, 0.3693336546421051, 0.37865108251571655, 0.3878999650478363, 0.3970794379711151, 0.40618881583213806, 0.41522732377052307, 0.4241943955421448, 0.4330894351005554, 0.441911906003952, 0.4506613314151764, 0.4593372941017151, 0.46793943643569946, 0.47646743059158325, 0.48492100834846497, 0.4932999312877655, 0.5016040802001953, 0.5098332166671753, 0.5179873704910278, 0.5260664224624634, 0.5340703725814819, 0.5419992804527283, 0.5498532056808472, 0.5576322078704834, 0.5653364658355713, 0.5729661583900452, 0.5805214643478394, 0.588002622127533, 0.5954098701477051, 0.6027435660362244, 0.6100039482116699, 0.6171913743019104, 0.6243062615394592, 0.6313489079475403, 0.6383197903633118, 0.6452193260192871, 0.6520479321479797, 0.6588060259819031, 0.6654942035675049, 0.6721128225326538, 0.6786624789237976, 0.6851437091827393, 0.6915569305419922, 0.6979027986526489, 0.7041818499565125, 0.7103946208953857, 0.7165416479110718, 0.7226235866546631, 0.7286410331726074, 0.734594464302063, 0.7404845952987671, 0.7463119626045227, 0.7520771622657776, 0.7577808499336243, 0.7634236812591553, 0.7690061926841736, 0.7745290398597717, 0.7799928188323975, 0.7853981852531433, 0.790745735168457, 0.7960360646247864, 0.8012698292732239, 0.8064476847648621, 0.8115701675415039, 0.8166379928588867, 0.8216516971588135, 0.8266119360923767, 0.8315193057060242, 0.8363743424415588, 0.8411778211593628, 0.8459301590919495, 0.8506321310997009, 0.8552841544151306, 0.8598869442939758, 0.8644410371780396, 0.8689470887184143, 0.8734055161476135, 0.8778170347213745, 0.8821821808815002, 0.8865015506744385, 0.8907756209373474, 0.8950049877166748, 0.8991901874542236, 0.9033317565917969, 0.9074302911758423, 0.9114862680435181, 0.9155002236366272, 0.9194726943969727, 0.9234042167663574, 0.9272952079772949, 0.9311462640762329, 0.9349579215049744, 0.9387305378913879, -0.9424647092819214, -0.9387305378913879, -0.9349579215049744, -0.9311462640762329, -0.9272952079772949, -0.9234042167663574, -0.9194726943969727, -0.9155002236366272, -0.9114862680435181, -0.9074302911758423, -0.9033317565917969, -0.8991901874542236, -0.8950049877166748, -0.8907756209373474, -0.8865015506744385, -0.8821821808815002, -0.8778170347213745, -0.8734055161476135, -0.8689470887184143, -0.8644410371780396, -0.8598869442939758, -0.8552841544151306, -0.8506321310997009, -0.8459301590919495, -0.8411778211593628, -0.8363743424415588, -0.8315193057060242, -0.8266119360923767, -0.8216516971588135, -0.8166379928588867, -0.8115701675415039, -0.8064476847648621, -0.8012698292732239, -0.7960360646247864, -0.790745735168457, -0.7853981852531433, -0.7799928188323975, -0.7745290398597717, -0.7690061926841736, -0.7634236812591553, -0.7577808499336243, -0.7520771622657776, -0.7463119626045227, -0.7404845952987671, -0.734594464302063, -0.7286410331726074, -0.7226235866546631, -0.7165416479110718, -0.7103946208953857, -0.7041818499565125, -0.6979027986526489, -0.6915569305419922, -0.6851437091827393, -0.6786624789237976, -0.6721128225326538, -0.6654942035675049, -0.6588060259819031, -0.6520479321479797, -0.6452193260192871, -0.6383197903633118, -0.6313489079475403, -0.6243062615394592, -0.6171913743019104, -0.6100039482116699, -0.6027435660362244, -0.5954098701477051, -0.588002622127533, -0.5805214643478394, -0.5729661583900452, -0.5653364658355713, -0.5576322078704834, -0.5498532056808472, -0.5419992804527283, -0.5340703725814819, -0.5260664224624634, -0.5179873704910278, -0.5098332166671753, -0.5016040802001953, -0.4932999312877655, -0.48492100834846497, -0.47646743059158325, -0.46793943643569946, -0.4593372941017151, -0.4506613314151764, -0.441911906003952, -0.4330894351005554, -0.4241943955421448, -0.41522732377052307, -0.40618881583213806, -0.3970794379711151, -0.3878999650478363, -0.37865108251571655, -0.3693336546421051, -0.3599485158920288, -0.3504966199398041, -0.3409789502620697, -0.33139654994010925, -0.32175055146217346, -0.31204211711883545, -0.3022724986076355, -0.2924429774284363, -0.28255495429039, -0.2726098299026489, -0.26260906457901, -0.2525542676448822, -0.24244701862335205, -0.23228898644447327, -0.22208189964294434, -0.21182754635810852, -0.20152777433395386, -0.19118446111679077, -0.18079957365989685, -0.17037510871887207, -0.15991312265396118, -0.14941571652889252, -0.1388850212097168, -0.12832322716712952, -0.11773257702589035, -0.10711532086133957, -0.09647377580404282, -0.08581026643514633, -0.07512715458869934, -0.06442683935165405, -0.05371173098683357, -0.0429842583835125, -0.03224688395857811, -0.021502062678337097, -0.010752273723483086, 0.0, 0.01063789613544941, 0.021273385733366013, 0.03190406411886215, 0.04252753406763077, 0.053141407668590546, 0.06374331563711166, 0.0743308886885643, 0.08490179479122162, 0.09545371681451797, 0.10598435997962952, 0.11649145931005478, 0.12697279453277588, 0.13742615282535553, 0.14784936606884003, 0.15824031829833984, 0.16859693825244904, 0.17891716957092285, 0.18919901549816132, 0.19944055378437042, 0.20963984727859497, 0.2197950780391693, 0.2299044281244278, 0.23996616899967194, 0.24997861683368683, 0.25994014739990234, 0.26984915137290955, 0.27970415353775024, 0.28950366377830505, 0.29924631118774414, 0.30893075466156006, 0.31855568289756775, 0.3281199038028717, 0.3376222252845764, 0.3470616042613983, 0.35643693804740906, 0.3657473027706146, 0.3749917149543762, 0.3841693699359894, 0.39327940344810486, 0.40232110023498535, 0.41129374504089355, 0.4201967120170593, 0.4290294051170349, 0.4377913177013397, 0.4464819133281708, 0.45510080456733704, 0.46364760398864746, 0.4721219837665558, 0.48052364587783813, 0.4888523519039154, 0.49710792303085327, 0.5052902102470398, 0.513399064540863, 0.5214344263076782, 0.5293962955474854, 0.5372847318649292, 0.545099675655365, 0.5528412461280823, 0.5605095624923706, 0.5681047439575195, 0.5756269693374634, 0.583076536655426, 0.590453565120697, 0.597758412361145, 0.6049912571907043, 0.6121525168418884, 0.6192424297332764, 0.6262614130973816, 0.6332098841667175, 0.6400881409645081, 0.6468966603279114, 0.6536359190940857, 0.6603062748908997, 0.6669082045555115, 0.6734422445297241, 0.6799088716506958, 0.6863085627555847, 0.6926418542861938, 0.6989092826843262, 0.7051113247871399, 0.7112486362457275, 0.7173216938972473, 0.723331093788147, 0.7292773723602295, 0.7351611256599426, 0.7409829497337341, 0.746743381023407, 0.7524430751800537, 0.7580825686454773, 0.7636624574661255, 0.7691833972930908, 0.7746458649635315, 0.7800506353378296, 0.7853981852531433, 0.7906891107559204, 0.7959240674972534, 0.8011036515235901, 0.8062284588813782, 0.8112990856170654, 0.8163161277770996, 0.8212801814079285, 0.8261918425559998, 0.8310517072677612, 0.8358603119850159, 0.840618371963501, 0.84532630443573, 0.8499848246574402, 0.8545944690704346, 0.8591557741165161, 0.8636692762374878, 0.8681356906890869, 0.8725554347038269, 0.8769291043281555, 0.8812572956085205, 0.8855405449867249, 0.8897793292999268, 0.893974244594574, 0.8981257677078247, 0.9022344946861267, 0.9063009023666382, 0.9103255867958069, 0.9143089056015015, 0.9182515144348145, 0.922153890132904, 0.9260164499282837, 0.9298397302627563, 0.933624267578125, -0.9373704195022583, -0.933624267578125, -0.9298397302627563, -0.9260164499282837, -0.922153890132904, -0.9182515144348145, -0.9143089056015015, -0.9103255867958069, -0.9063009023666382, -0.9022344946861267, -0.8981257677078247, -0.893974244594574, -0.8897793292999268, -0.8855405449867249, -0.8812572956085205, -0.8769291043281555, -0.8725554347038269, -0.8681356906890869, -0.8636692762374878, -0.8591557741165161, -0.8545944690704346, -0.8499848246574402, -0.84532630443573, -0.840618371963501, -0.8358603119850159, -0.8310517072677612, -0.8261918425559998, -0.8212801814079285, -0.8163161277770996, -0.8112990856170654, -0.8062284588813782, -0.8011036515235901, -0.7959240674972534, -0.7906891107559204, -0.7853981852531433, -0.7800506353378296, -0.7746458649635315, -0.7691833972930908, -0.7636624574661255, -0.7580825686454773, -0.7524430751800537, -0.746743381023407, -0.7409829497337341, -0.7351611256599426, -0.7292773723602295, -0.723331093788147, -0.7173216938972473, -0.7112486362457275, -0.7051113247871399, -0.6989092826843262, -0.6926418542861938, -0.6863085627555847, -0.6799088716506958, -0.6734422445297241, -0.6669082045555115, -0.6603062748908997, -0.6536359190940857, -0.6468966603279114, -0.6400881409645081, -0.6332098841667175, -0.6262614130973816, -0.6192424297332764, -0.6121525168418884, -0.6049912571907043, -0.597758412361145, -0.590453565120697, -0.583076536655426, -0.5756269693374634, -0.5681047439575195, -0.5605095624923706, -0.5528412461280823, -0.545099675655365, -0.5372847318649292, -0.5293962955474854, -0.5214344263076782, -0.513399064540863, -0.5052902102470398, -0.49710792303085327, -0.4888523519039154, -0.48052364587783813, -0.4721219837665558, -0.46364760398864746, -0.45510080456733704, -0.4464819133281708, -0.4377913177013397, -0.4290294051170349, -0.4201967120170593, -0.41129374504089355, -0.40232110023498535, -0.39327940344810486, -0.3841693699359894, -0.3749917149543762, -0.3657473027706146, -0.35643693804740906, -0.3470616042613983, -0.3376222252845764, -0.3281199038028717, -0.31855568289756775, -0.30893075466156006, -0.29924631118774414, -0.28950366377830505, -0.27970415353775024, -0.26984915137290955, -0.25994014739990234, -0.24997861683368683, -0.23996616899967194, -0.2299044281244278, -0.2197950780391693, -0.20963984727859497, -0.19944055378437042, -0.18919901549816132, -0.17891716957092285, -0.16859693825244904, -0.15824031829833984, -0.14784936606884003, -0.13742615282535553, -0.12697279453277588, -0.11649145931005478, -0.10598435997962952, -0.09545371681451797, -0.08490179479122162, -0.0743308886885643, -0.06374331563711166, -0.053141407668590546, -0.04252753406763077, -0.03190406411886215, -0.021273385733366013, -0.01063789613544941, 0.0, 0.010525926947593689, 0.02104952186346054, 0.03156845644116402, 0.04208040609955788, 0.052583061158657074, 0.06307411938905716, 0.07355128973722458, 0.08401231467723846, 0.09445493668317795, 0.10487693548202515, 0.11527612805366516, 0.1256503313779831, 0.13599741458892822, 0.1463152915239334, 0.15660187602043152, 0.16685515642166138, 0.1770731508731842, 0.1872539222240448, 0.19739556312561035, 0.20749622583389282, 0.21755412220954895, 0.22756749391555786, 0.23753462731838226, 0.24745389819145203, 0.2573237121105194, 0.26714253425598145, 0.27690884470939636, 0.28662124276161194, 0.29627835750579834, 0.3058788776397705, 0.31542152166366577, 0.324905127286911, 0.3343285024166107, 0.3436906039714813, 0.35299038887023926, 0.3622268736362457, 0.3713991641998291, 0.38050636649131775, 0.389547735452652, 0.39852243661880493, 0.40742984414100647, 0.41626930236816406, 0.42504018545150757, 0.4337419867515564, 0.44237422943115234, 0.4509364366531372, 0.45942822098731995, 0.4678492546081543, 0.4761992394924164, 0.4844779372215271, 0.49268507957458496, 0.5008205771446228, 0.5088841915130615, 0.5168759822845459, 0.5247957706451416, 0.5326436161994934, 0.5404195189476013, 0.5481234788894653, 0.5557557344436646, 0.563316285610199, 0.5708053112030029, 0.5782229900360107, 0.5855695009231567, 0.5928452014923096, 0.6000502109527588, 0.607184886932373, 0.614249587059021, 0.621244490146637, 0.6281701326370239, 0.635026752948761, 0.6418147683143616, 0.6485345959663391, 0.6551867127418518, 0.6617714762687683, 0.6682894229888916, 0.6747409701347351, 0.6811265349388123, 0.6874467134475708, 0.693701982498169, 0.6998928785324097, 0.7060198783874512, 0.7120834589004517, 0.7180842757225037, 0.7240228056907654, 0.7298996448516846, 0.7357153296470642, 0.7414703965187073, 0.7471654415130615, 0.7528010010719299, 0.758377730846405, 0.763896107673645, 0.7693567872047424, 0.7747602462768555, 0.7801072001457214, 0.7853981852531433, 0.7906337380409241, 0.7958144545555115, 0.8009409308433533, 0.806013822555542, 0.8110335469245911, 0.8160008788108826, 0.8209162354469299, 0.8257802128791809, 0.8305935263633728, 0.8353565335273743, 0.8400700092315674, 0.8447343707084656, 0.8493502736091614, 0.853918194770813, 0.8584387302398682, 0.8629124164581299, 0.8673398494720459, 0.8717215657234192, 0.876058042049408, 0.88034987449646, 0.8845975399017334, 0.888801634311676, 0.892962634563446, 0.8970810174942017, 0.9011573791503906, 0.9051921963691711, 0.9091859459877014, 0.9131391644477844, 0.9170522689819336, 0.9209258556365967, 0.9247603416442871, 0.9285562634468079, -0.9323139786720276, -0.9285562634468079, -0.9247603416442871, -0.9209258556365967, -0.9170522689819336, -0.9131391644477844, -0.9091859459877014, -0.9051921963691711, -0.9011573791503906, -0.8970810174942017, -0.892962634563446, -0.888801634311676, -0.8845975399017334, -0.88034987449646, -0.876058042049408, -0.8717215657234192, -0.8673398494720459, -0.8629124164581299, -0.8584387302398682, -0.853918194770813, -0.8493502736091614, -0.8447343707084656, -0.8400700092315674, -0.8353565335273743, -0.8305935263633728, -0.8257802128791809, -0.8209162354469299, -0.8160008788108826, -0.8110335469245911, -0.806013822555542, -0.8009409308433533, -0.7958144545555115, -0.7906337380409241, -0.7853981852531433, -0.7801072001457214, -0.7747602462768555, -0.7693567872047424, -0.763896107673645, -0.758377730846405, -0.7528010010719299, -0.7471654415130615, -0.7414703965187073, -0.7357153296470642, -0.7298996448516846, -0.7240228056907654, -0.7180842757225037, -0.7120834589004517, -0.7060198783874512, -0.6998928785324097, -0.693701982498169, -0.6874467134475708, -0.6811265349388123, -0.6747409701347351, -0.6682894229888916, -0.6617714762687683, -0.6551867127418518, -0.6485345959663391, -0.6418147683143616, -0.635026752948761, -0.6281701326370239, -0.621244490146637, -0.614249587059021, -0.607184886932373, -0.6000502109527588, -0.5928452014923096, -0.5855695009231567, -0.5782229900360107, -0.5708053112030029, -0.563316285610199, -0.5557557344436646, -0.5481234788894653, -0.5404195189476013, -0.5326436161994934, -0.5247957706451416, -0.5168759822845459, -0.5088841915130615, -0.5008205771446228, -0.49268507957458496, -0.4844779372215271, -0.4761992394924164, -0.4678492546081543, -0.45942822098731995, -0.4509364366531372, -0.44237422943115234, -0.4337419867515564, -0.42504018545150757, -0.41626930236816406, -0.40742984414100647, -0.39852243661880493, -0.389547735452652, -0.38050636649131775, -0.3713991641998291, -0.3622268736362457, -0.35299038887023926, -0.3436906039714813, -0.3343285024166107, -0.324905127286911, -0.31542152166366577, -0.3058788776397705, -0.29627835750579834, -0.28662124276161194, -0.27690884470939636, -0.26714253425598145, -0.2573237121105194, -0.24745389819145203, -0.23753462731838226, -0.22756749391555786, -0.21755412220954895, -0.20749622583389282, -0.19739556312561035, -0.1872539222240448, -0.1770731508731842, -0.16685515642166138, -0.15660187602043152, -0.1463152915239334, -0.13599741458892822, -0.1256503313779831, -0.11527612805366516, -0.10487693548202515, -0.09445493668317795, -0.08401231467723846, -0.07355128973722458, -0.06307411938905716, -0.052583061158657074, -0.04208040609955788, -0.03156845644116402, -0.02104952186346054, -0.010525926947593689, 0.0, 0.010416289791464806, 0.020830320194363594, 0.031239833682775497, 0.041642580181360245, 0.05203631520271301, 0.06241881102323532, 0.07278785109519958, 0.08314123004674911, 0.0934767797589302, 0.10379233956336975, 0.11408577859401703, 0.12435499578714371, 0.13459791243076324, 0.14481249451637268, 0.15499673783779144, 0.16514867544174194, 0.17526637017726898, 0.18534794449806213, 0.19539155066013336, 0.2053953856229782, 0.215357705950737, 0.22527678310871124, 0.23515096306800842, 0.244978666305542, 0.2547582983970642, 0.2644883692264557, 0.2741674482822418, 0.283794105052948, 0.2933669984340668, 0.30288487672805786, 0.3123464286327362, 0.32175055146217346, 0.3310960829257965, 0.3403819501399994, 0.34960711002349854, 0.3587706685066223, 0.3678716719150543, 0.3769092559814453, 0.3858826756477356, 0.3947911262512207, 0.4036339223384857, 0.4124104380607605, 0.4211200773715973, 0.4297622740268707, 0.4383365511894226, 0.4468424618244171, 0.4552795886993408, 0.46364760398864746, 0.47194617986679077, 0.4801750183105469, 0.48833394050598145, 0.49642276763916016, 0.5044413208961487, 0.5123894810676575, 0.5202671885490417, 0.5280744433403015, 0.5358112454414368, 0.5434775948524475, 0.5510736107826233, 0.5585992932319641, 0.5660548806190491, 0.5734405517578125, 0.5807563662528992, 0.588002622127533, 0.5951794981956482, 0.6022873520851135, 0.6093263626098633, 0.6162969470024109, 0.6231993436813354, 0.6300339102745056, 0.6368010640144348, 0.6435011029243469, 0.6501345038414001, 0.6567016839981079, 0.6632030010223389, 0.6696389317512512, 0.6760099530220032, 0.6823165416717529, 0.6885591745376587, 0.6947382688522339, 0.7008544206619263, 0.7069080471992493, 0.7128997445106506, 0.7188299894332886, 0.7246993184089661, 0.7305083274841309, 0.7362574338912964, 0.7419472932815552, 0.7475783824920654, 0.7531512975692749, 0.7586665749549866, 0.7641247510910034, 0.769526481628418, 0.7748722434043884, 0.7801626324653625, 0.7853981852531433, 0.7905794382095337, 0.7957070469856262, 0.8007815480232239, 0.8058034777641296, 0.8107734322547913, 0.8156919479370117, 0.820559561252594, 0.8253768682479858, 0.8301444053649902, 0.8348627090454102, 0.8395324349403381, 0.8441540002822876, 0.8487280011177063, 0.8532549738883972, 0.8577355146408081, 0.8621700406074524, 0.8665592074394226, 0.8709034323692322, 0.8752033710479736, 0.8794593811035156, 0.8836721181869507, 0.8878419995307922, 0.891969621181488, 0.8960554003715515, 0.9000998735427856, 0.9041035175323486, 0.9080668091773987, 0.9119902849197388, 0.9158744215965271, 0.9197195768356323, 0.923526406288147, -0.9272952079772949, -0.923526406288147, -0.9197195768356323, -0.9158744215965271, -0.9119902849197388, -0.9080668091773987, -0.9041035175323486, -0.9000998735427856, -0.8960554003715515, -0.891969621181488, -0.8878419995307922, -0.8836721181869507, -0.8794593811035156, -0.8752033710479736, -0.8709034323692322, -0.8665592074394226, -0.8621700406074524, -0.8577355146408081, -0.8532549738883972, -0.8487280011177063, -0.8441540002822876, -0.8395324349403381, -0.8348627090454102, -0.8301444053649902, -0.8253768682479858, -0.820559561252594, -0.8156919479370117, -0.8107734322547913, -0.8058034777641296, -0.8007815480232239, -0.7957070469856262, -0.7905794382095337, -0.7853981852531433, -0.7801626324653625, -0.7748722434043884, -0.769526481628418, -0.7641247510910034, -0.7586665749549866, -0.7531512975692749, -0.7475783824920654, -0.7419472932815552, -0.7362574338912964, -0.7305083274841309, -0.7246993184089661, -0.7188299894332886, -0.7128997445106506, -0.7069080471992493, -0.7008544206619263, -0.6947382688522339, -0.6885591745376587, -0.6823165416717529, -0.6760099530220032, -0.6696389317512512, -0.6632030010223389, -0.6567016839981079, -0.6501345038414001, -0.6435011029243469, -0.6368010640144348, -0.6300339102745056, -0.6231993436813354, -0.6162969470024109, -0.6093263626098633, -0.6022873520851135, -0.5951794981956482, -0.588002622127533, -0.5807563662528992, -0.5734405517578125, -0.5660548806190491, -0.5585992932319641, -0.5510736107826233, -0.5434775948524475, -0.5358112454414368, -0.5280744433403015, -0.5202671885490417, -0.5123894810676575, -0.5044413208961487, -0.49642276763916016, -0.48833394050598145, -0.4801750183105469, -0.47194617986679077, -0.46364760398864746, -0.4552795886993408, -0.4468424618244171, -0.4383365511894226, -0.4297622740268707, -0.4211200773715973, -0.4124104380607605, -0.4036339223384857, -0.3947911262512207, -0.3858826756477356, -0.3769092559814453, -0.3678716719150543, -0.3587706685066223, -0.34960711002349854, -0.3403819501399994, -0.3310960829257965, -0.32175055146217346, -0.3123464286327362, -0.30288487672805786, -0.2933669984340668, -0.283794105052948, -0.2741674482822418, -0.2644883692264557, -0.2547582983970642, -0.244978666305542, -0.23515096306800842, -0.22527678310871124, -0.215357705950737, -0.2053953856229782, -0.19539155066013336, -0.18534794449806213, -0.17526637017726898, -0.16514867544174194, -0.15499673783779144, -0.14481249451637268, -0.13459791243076324, -0.12435499578714371, -0.11408577859401703, -0.10379233956336975, -0.0934767797589302, -0.08314123004674911, -0.07278785109519958, -0.06241881102323532, -0.05203631520271301, -0.041642580181360245, -0.031239833682775497, -0.020830320194363594, -0.010416289791464806, 0.0, 0.010308912955224514, 0.020615635439753532, 0.030917979776859283, 0.041213762015104294, 0.05150081217288971, 0.061776962131261826, 0.07204006612300873, 0.0822879895567894, 0.09251862019300461, 0.10272986441850662, 0.11291965842247009, 0.12308596074581146, 0.13322675228118896, 0.14334005117416382, 0.15342392027378082, 0.16347643733024597, 0.17349572479724884, 0.18347994983196259, 0.19342732429504395, 0.20333608984947205, 0.2132045179605484, 0.2230309695005417, 0.23281382024288177, 0.24255149066448212, 0.25224244594573975, 0.26188525557518005, 0.27147847414016724, 0.28102073073387146, 0.29051071405410767, 0.2999471426010132, 0.3093288242816925, 0.3186545968055725, 0.32792332768440247, 0.3371339440345764, 0.34628552198410034, 0.3553770184516907, 0.36440759897232056, 0.37337636947631836, 0.3822825849056244, 0.3911254405975342, 0.3999043107032776, 0.4086184799671173, 0.417267382144928, 0.4258504807949066, 0.43436726927757263, 0.4428173005580902, 0.45120012760162354, 0.45951539278030396, 0.4677627980709076, 0.47594207525253296, 0.4840529263019562, 0.4920952320098877, 0.500068724155426, 0.5079733729362488, 0.5158090591430664, 0.5235757827758789, 0.5312734246253967, 0.5389020442962646, 0.5464617013931274, 0.5539525151252747, 0.5613745450973511, 0.5687279105186462, 0.5760127902030945, 0.5832293629646301, 0.5903778672218323, 0.5974586009979248, 0.6044716835021973, 0.6114175319671631, 0.6182963848114014, 0.625108540058136, 0.6318543553352356, 0.6385342478752136, 0.6451485753059387, 0.6516976356506348, 0.6581819653511047, 0.6646018624305725, 0.6709578633308411, 0.677250325679779, 0.6834797859191895, 0.6896466612815857, 0.695751428604126, 0.7017946243286133, 0.707776665687561, 0.7136980891227722, 0.719559371471405, 0.7253611087799072, 0.731103777885437, 0.7367878556251526, 0.7424138784408569, 0.7479825019836426, 0.7534940838813782, 0.7589492797851562, 0.7643486261367798, 0.7696926593780518, 0.7749818563461304, 0.7802168726921082, 0.7853981852531433, 0.7905263304710388, 0.7956019043922424, 0.8006253838539124, 0.8055974245071411, 0.8105185031890869, 0.8153891563415527, 0.8202099800109863, 0.8249814510345459, 0.8297041058540344, 0.8343785405158997, 0.8390052914619446, 0.8435848355293274, 0.8481177091598511, 0.8526045083999634, 0.8570456504821777, 0.8614417314529419, 0.8657932281494141, 0.8701006770133972, 0.8743645548820496, 0.8785853981971741, 0.8827637434005737, 0.886900007724762, 0.8909947276115417, 0.8950483202934265, 0.899061381816864, 0.9030343294143677, 0.9069676399230957, 0.9108617901802063, 0.9147172570228577, 0.918534517288208, -0.922313928604126, -0.918534517288208, -0.9147172570228577, -0.9108617901802063, -0.9069676399230957, -0.9030343294143677, -0.899061381816864, -0.8950483202934265, -0.8909947276115417, -0.886900007724762, -0.8827637434005737, -0.8785853981971741, -0.8743645548820496, -0.8701006770133972, -0.8657932281494141, -0.8614417314529419, -0.8570456504821777, -0.8526045083999634, -0.8481177091598511, -0.8435848355293274, -0.8390052914619446, -0.8343785405158997, -0.8297041058540344, -0.8249814510345459, -0.8202099800109863, -0.8153891563415527, -0.8105185031890869, -0.8055974245071411, -0.8006253838539124, -0.7956019043922424, -0.7905263304710388, -0.7853981852531433, -0.7802168726921082, -0.7749818563461304, -0.7696926593780518, -0.7643486261367798, -0.7589492797851562, -0.7534940838813782, -0.7479825019836426, -0.7424138784408569, -0.7367878556251526, -0.731103777885437, -0.7253611087799072, -0.719559371471405, -0.7136980891227722, -0.707776665687561, -0.7017946243286133, -0.695751428604126, -0.6896466612815857, -0.6834797859191895, -0.677250325679779, -0.6709578633308411, -0.6646018624305725, -0.6581819653511047, -0.6516976356506348, -0.6451485753059387, -0.6385342478752136, -0.6318543553352356, -0.625108540058136, -0.6182963848114014, -0.6114175319671631, -0.6044716835021973, -0.5974586009979248, -0.5903778672218323, -0.5832293629646301, -0.5760127902030945, -0.5687279105186462, -0.5613745450973511, -0.5539525151252747, -0.5464617013931274, -0.5389020442962646, -0.5312734246253967, -0.5235757827758789, -0.5158090591430664, -0.5079733729362488, -0.500068724155426, -0.4920952320098877, -0.4840529263019562, -0.47594207525253296, -0.4677627980709076, -0.45951539278030396, -0.45120012760162354, -0.4428173005580902, -0.43436726927757263, -0.4258504807949066, -0.417267382144928, -0.4086184799671173, -0.3999043107032776, -0.3911254405975342, -0.3822825849056244, -0.37337636947631836, -0.36440759897232056, -0.3553770184516907, -0.34628552198410034, -0.3371339440345764, -0.32792332768440247, -0.3186545968055725, -0.3093288242816925, -0.2999471426010132, -0.29051071405410767, -0.28102073073387146, -0.27147847414016724, -0.26188525557518005, -0.25224244594573975, -0.24255149066448212, -0.23281382024288177, -0.2230309695005417, -0.2132045179605484, -0.20333608984947205, -0.19342732429504395, -0.18347994983196259, -0.17349572479724884, -0.16347643733024597, -0.15342392027378082, -0.14334005117416382, -0.13322675228118896, -0.12308596074581146, -0.11291965842247009, -0.10272986441850662, -0.09251862019300461, -0.0822879895567894, -0.07204006612300873, -0.061776962131261826, -0.05150081217288971, -0.041213762015104294, -0.030917979776859283, -0.020615635439753532, -0.010308912955224514, 0.0, 0.010203727521002293, 0.020405329763889313, 0.03060268796980381, 0.040793683379888535, 0.05097620561718941, 0.06114816293120384, 0.0713074654340744, 0.08145204186439514, 0.0915798470377922, 0.10168885439634323, 0.11177704483270645, 0.12184243649244308, 0.13188308477401733, 0.141897052526474, 0.15188245475292206, 0.16183742880821228, 0.17176015675067902, 0.1816488355398178, 0.19150172173976898, 0.20131710171699524, 0.21109333634376526, 0.22082877159118652, 0.23052184283733368, 0.24017101526260376, 0.2497747838497162, 0.25933173298835754, 0.268840491771698, 0.2782996594905853, 0.28770798444747925, 0.2970642149448395, 0.3063671588897705, 0.3156156539916992, 0.32480865716934204, 0.33394506573677063, 0.3430239260196686, 0.35204431414604187, 0.3610053062438965, 0.36990606784820557, 0.37874582409858704, 0.3875238001346588, 0.39623934030532837, 0.4048917889595032, 0.4134805202484131, 0.4220050275325775, 0.4304647743701935, 0.43885931372642517, 0.44718819856643677, 0.4554510712623596, 0.46364760398864746, 0.4717774987220764, 0.4798405170440674, 0.48783645033836365, 0.4957650899887085, 0.50362628698349, 0.5114200115203857, 0.5191460847854614, 0.5268046259880066, 0.5343954563140869, 0.5419187545776367, 0.5493744611740112, 0.5567627549171448, 0.5640836954116821, 0.5713374614715576, 0.5785242319107056, 0.5856441259384155, 0.5926973819732666, 0.5996842980384827, 0.6066051125526428, 0.6134600639343262, 0.6202495098114014, 0.6269736886024475, 0.633633017539978, 0.6402277946472168, 0.6467584371566772, 0.653225302696228, 0.6596287488937378, 0.6659692525863647, 0.6722471714019775, 0.6784629821777344, 0.6846171617507935, 0.6907101273536682, 0.6967422962188721, 0.702714204788208, 0.7086262702941895, 0.7144790291786194, 0.7202730178833008, 0.7260086536407471, 0.7316864132881165, 0.7373069524765015, 0.7428706288337708, 0.7483780384063721, 0.7538297176361084, 0.7592261433601379, 0.7645678520202637, 0.7698553800582886, 0.7750892639160156, 0.780269980430603, 0.7853981852531433, 0.7904742360115051, 0.7954988479614258, 0.8004723787307739, 0.8053954839706421, 0.8102686405181885, 0.8150923848152161, 0.8198672533035278, 0.8245937824249268, 0.829272449016571, 0.8339037895202637, 0.8384883403778076, 0.8430265784263611, 0.8475190997123718, 0.8519663214683533, 0.8563688397407532, 0.860727071762085, 0.8650415539741516, 0.8693127632141113, 0.8735412955284119, 0.8777275085449219, 0.8818719387054443, 0.8859750628471375, 0.8900374174118042, 0.8940593600273132, 0.8980414867401123, 0.9019841551780701, 0.9058879017829895, 0.909753143787384, 0.9135803580284119, -0.9173699617385864, -0.9135803580284119, -0.909753143787384, -0.9058879017829895, -0.9019841551780701, -0.8980414867401123, -0.8940593600273132, -0.8900374174118042, -0.8859750628471375, -0.8818719387054443, -0.8777275085449219, -0.8735412955284119, -0.8693127632141113, -0.8650415539741516, -0.860727071762085, -0.8563688397407532, -0.8519663214683533, -0.8475190997123718, -0.8430265784263611, -0.8384883403778076, -0.8339037895202637, -0.829272449016571, -0.8245937824249268, -0.8198672533035278, -0.8150923848152161, -0.8102686405181885, -0.8053954839706421, -0.8004723787307739, -0.7954988479614258, -0.7904742360115051, -0.7853981852531433, -0.780269980430603, -0.7750892639160156, -0.7698553800582886, -0.7645678520202637, -0.7592261433601379, -0.7538297176361084, -0.7483780384063721, -0.7428706288337708, -0.7373069524765015, -0.7316864132881165, -0.7260086536407471, -0.7202730178833008, -0.7144790291786194, -0.7086262702941895, -0.702714204788208, -0.6967422962188721, -0.6907101273536682, -0.6846171617507935, -0.6784629821777344, -0.6722471714019775, -0.6659692525863647, -0.6596287488937378, -0.653225302696228, -0.6467584371566772, -0.6402277946472168, -0.633633017539978, -0.6269736886024475, -0.6202495098114014, -0.6134600639343262, -0.6066051125526428, -0.5996842980384827, -0.5926973819732666, -0.5856441259384155, -0.5785242319107056, -0.5713374614715576, -0.5640836954116821, -0.5567627549171448, -0.5493744611740112, -0.5419187545776367, -0.5343954563140869, -0.5268046259880066, -0.5191460847854614, -0.5114200115203857, -0.50362628698349, -0.4957650899887085, -0.48783645033836365, -0.4798405170440674, -0.4717774987220764, -0.46364760398864746, -0.4554510712623596, -0.44718819856643677, -0.43885931372642517, -0.4304647743701935, -0.4220050275325775, -0.4134805202484131, -0.4048917889595032, -0.39623934030532837, -0.3875238001346588, -0.37874582409858704, -0.36990606784820557, -0.3610053062438965, -0.35204431414604187, -0.3430239260196686, -0.33394506573677063, -0.32480865716934204, -0.3156156539916992, -0.3063671588897705, -0.2970642149448395, -0.28770798444747925, -0.2782996594905853, -0.268840491771698, -0.25933173298835754, -0.2497747838497162, -0.24017101526260376, -0.23052184283733368, -0.22082877159118652, -0.21109333634376526, -0.20131710171699524, -0.19150172173976898, -0.1816488355398178, -0.17176015675067902, -0.16183742880821228, -0.15188245475292206, -0.141897052526474, -0.13188308477401733, -0.12184243649244308, -0.11177704483270645, -0.10168885439634323, -0.0915798470377922, -0.08145204186439514, -0.0713074654340744, -0.06114816293120384, -0.05097620561718941, -0.040793683379888535, -0.03060268796980381, -0.020405329763889313, -0.010203727521002293, 0.0, 0.01010066643357277, 0.02019927278161049, 0.03029376082122326, 0.04038207605481148, 0.05046217516064644, 0.060532018542289734, 0.0705895870923996, 0.08063287287950516, 0.09065988659858704, 0.10066865384578705, 0.1106572225689888, 0.12062367051839828, 0.1305660903453827, 0.14048263430595398, 0.15037143230438232, 0.16023068130016327, 0.17005862295627594, 0.17985349893569946, 0.18961361050605774, 0.19933730363845825, 0.20902293920516968, 0.21866895258426666, 0.22827377915382385, 0.23783592879772186, 0.2473539561033249, 0.2568264603614807, 0.2662520408630371, 0.2756294310092926, 0.2849573493003845, 0.29423457384109497, 0.30345991253852844, 0.3126322627067566, 0.32175055146217346, 0.3308137357234955, 0.33982086181640625, 0.34877100586891174, 0.35766324400901794, 0.3664967715740204, 0.375270813703537, 0.38398462533950806, 0.3926374912261963, 0.40122878551483154, 0.40975794196128845, 0.4182243347167969, 0.4266274869441986, 0.43496695160865784, 0.44324228167533875, 0.4514530897140503, 0.4595990478992462, 0.46767985820770264, 0.4756952226161957, 0.48364493250846863, 0.49152883887290955, 0.4993467330932617, 0.5070984959602356, 0.5147840976715088, 0.5224034190177917, 0.5299565196037292, 0.5374433398246765, 0.5448639392852783, 0.5522183775901794, 0.5595067739486694, 0.5667291879653931, 0.5738859176635742, 0.5809769630432129, 0.588002622127533, 0.5949630737304688, 0.6018585562705994, 0.6086893081665039, 0.615455687046051, 0.622157871723175, 0.6287962794303894, 0.635371208190918, 0.6418830156326294, 0.6483319997787476, 0.6547185778617859, 0.6610431671142578, 0.667306125164032, 0.6735078692436218, 0.6796488761901855, 0.6857295036315918, 0.6917502284049988, 0.6977115273475647, 0.7036137580871582, 0.709457516670227, 0.7152432203292847, 0.7209713459014893, 0.726642370223999, 0.7322567701339722, 0.7378150820732117, 0.7433177828788757, 0.7487653493881226, 0.7541583180427551, 0.7594972252845764, 0.7647825479507446, 0.770014762878418, 0.7751944065093994, 0.7803220748901367, 0.7853981852531433, 0.7904232740402222, 0.7953978180885315, 0.800322413444519, 0.805197536945343, 0.8100237250328064, 0.8148014545440674, 0.819531261920929, 0.8242136240005493, 0.8288490772247314, 0.8334380984306335, 0.8379812240600586, 0.8424789309501648, 0.8469317555427551, 0.8513401746749878, 0.8557046055793762, 0.8600256443023682, 0.8643037676811218, 0.8685393929481506, 0.8727330565452576, 0.876885175704956, 0.8809962868690491, 0.88506680727005, 0.889097273349762, 0.8930880427360535, 0.8970396518707275, 0.9009525179862976, 0.9048271179199219, 0.908663809299469, -0.9124631881713867, -0.908663809299469, -0.9048271179199219, -0.9009525179862976, -0.8970396518707275, -0.8930880427360535, -0.889097273349762, -0.88506680727005, -0.8809962868690491, -0.876885175704956, -0.8727330565452576, -0.8685393929481506, -0.8643037676811218, -0.8600256443023682, -0.8557046055793762, -0.8513401746749878, -0.8469317555427551, -0.8424789309501648, -0.8379812240600586, -0.8334380984306335, -0.8288490772247314, -0.8242136240005493, -0.819531261920929, -0.8148014545440674, -0.8100237250328064, -0.805197536945343, -0.800322413444519, -0.7953978180885315, -0.7904232740402222, -0.7853981852531433, -0.7803220748901367, -0.7751944065093994, -0.770014762878418, -0.7647825479507446, -0.7594972252845764, -0.7541583180427551, -0.7487653493881226, -0.7433177828788757, -0.7378150820732117, -0.7322567701339722, -0.726642370223999, -0.7209713459014893, -0.7152432203292847, -0.709457516670227, -0.7036137580871582, -0.6977115273475647, -0.6917502284049988, -0.6857295036315918, -0.6796488761901855, -0.6735078692436218, -0.667306125164032, -0.6610431671142578, -0.6547185778617859, -0.6483319997787476, -0.6418830156326294, -0.635371208190918, -0.6287962794303894, -0.622157871723175, -0.615455687046051, -0.6086893081665039, -0.6018585562705994, -0.5949630737304688, -0.588002622127533, -0.5809769630432129, -0.5738859176635742, -0.5667291879653931, -0.5595067739486694, -0.5522183775901794, -0.5448639392852783, -0.5374433398246765, -0.5299565196037292, -0.5224034190177917, -0.5147840976715088, -0.5070984959602356, -0.4993467330932617, -0.49152883887290955, -0.48364493250846863, -0.4756952226161957, -0.46767985820770264, -0.4595990478992462, -0.4514530897140503, -0.44324228167533875, -0.43496695160865784, -0.4266274869441986, -0.4182243347167969, -0.40975794196128845, -0.40122878551483154, -0.3926374912261963, -0.38398462533950806, -0.375270813703537, -0.3664967715740204, -0.35766324400901794, -0.34877100586891174, -0.33982086181640625, -0.3308137357234955, -0.32175055146217346, -0.3126322627067566, -0.30345991253852844, -0.29423457384109497, -0.2849573493003845, -0.2756294310092926, -0.2662520408630371, -0.2568264603614807, -0.2473539561033249, -0.23783592879772186, -0.22827377915382385, -0.21866895258426666, -0.20902293920516968, -0.19933730363845825, -0.18961361050605774, -0.17985349893569946, -0.17005862295627594, -0.16023068130016327, -0.15037143230438232, -0.14048263430595398, -0.1305660903453827, -0.12062367051839828, -0.1106572225689888, -0.10066865384578705, -0.09065988659858704, -0.08063287287950516, -0.0705895870923996, -0.060532018542289734, -0.05046217516064644, -0.04038207605481148, -0.03029376082122326, -0.02019927278161049, -0.01010066643357277, 0.0, 0.00999966636300087, 0.019997334107756615, 0.02999100461602211, 0.03997868672013283, 0.04995839670300484, 0.059928156435489655, 0.06988599896430969, 0.07982998341321945, 0.08975817263126373, 0.09966865181922913, 0.10955952852964401, 0.11942892521619797, 0.12927500903606415, 0.1390959471464157, 0.1488899439573288, 0.15865525603294373, 0.168390154838562, 0.17809294164180756, 0.18776194751262665, 0.19739556312561035, 0.20699219405651093, 0.2165503054857254, 0.2260683923959732, 0.23554497957229614, 0.244978666305542, 0.2543680667877197, 0.2637118399143219, 0.27300870418548584, 0.28225740790367126, 0.29145678877830505, 0.3006056845188141, 0.30970293283462524, 0.31874755024909973, 0.327738493680954, 0.3366748094558716, 0.3455555737018585, 0.35437992215156555, 0.3631470203399658, 0.37185606360435486, 0.38050636649131775, 0.3890972435474396, 0.39762797951698303, 0.40609806776046753, 0.4145068824291229, 0.42285391688346863, 0.4311387538909912, 0.4393608868122101, 0.447519987821579, 0.4556156396865845, 0.46364760398864746, 0.47161558270454407, 0.4795192778110504, 0.48735857009887695, 0.49513325095176697, 0.5028432011604309, 0.5104883313179016, 0.5180685520172119, 0.525583803653717, 0.533034086227417, 0.5404195189476013, 0.5477400422096252, 0.5549957156181335, 0.5621867179870605, 0.5693131685256958, 0.5763752460479736, 0.5833730101585388, 0.5903067588806152, 0.5971766710281372, 0.6039829850196838, 0.6107259392738342, 0.617405891418457, 0.6240230798721313, 0.6305777430534363, 0.63707035779953, 0.6435011029243469, 0.6498704552650452, 0.6561787128448486, 0.6624262928962708, 0.6686135530471802, 0.6747409701347351, 0.6808088421821594, 0.6868176460266113, 0.692767858505249, 0.6986598372459412, 0.704494059085846, 0.7102710008621216, 0.7159911394119263, 0.7216548323631287, 0.7272626757621765, 0.7328150868415833, 0.7383126020431519, 0.743755578994751, 0.7491446137428284, 0.7544801831245422, 0.7597627639770508, 0.7649928331375122, 0.7701709270477295, 0.7752975225448608, 0.7803730964660645, 0.7853981852531433, 0.7903732657432556, 0.7952988147735596, 0.8001754283905029, 0.8050035238265991, 0.8097835779190063, 0.8145161271095276, 0.8192017078399658, 0.8238407373428345, 0.8284337520599365, 0.832981288433075, 0.8374837040901184, 0.8419415950775146, 0.8463554382324219, 0.8507256507873535, 0.8550527095794678, 0.8593372106552124, 0.863579511642456, 0.8677800893783569, 0.871939480304718, 0.876058042049408, 0.8801363110542297, 0.8841747641563416, 0.8881737589836121, 0.8921338319778442, 0.8960554003715515, 0.8999388813972473, 0.9037846922874451, -0.907593309879303, -0.9037846922874451, -0.8999388813972473, -0.8960554003715515, -0.8921338319778442, -0.8881737589836121, -0.8841747641563416, -0.8801363110542297, -0.876058042049408, -0.871939480304718, -0.8677800893783569, -0.863579511642456, -0.8593372106552124, -0.8550527095794678, -0.8507256507873535, -0.8463554382324219, -0.8419415950775146, -0.8374837040901184, -0.832981288433075, -0.8284337520599365, -0.8238407373428345, -0.8192017078399658, -0.8145161271095276, -0.8097835779190063, -0.8050035238265991, -0.8001754283905029, -0.7952988147735596, -0.7903732657432556, -0.7853981852531433, -0.7803730964660645, -0.7752975225448608, -0.7701709270477295, -0.7649928331375122, -0.7597627639770508, -0.7544801831245422, -0.7491446137428284, -0.743755578994751, -0.7383126020431519, -0.7328150868415833, -0.7272626757621765, -0.7216548323631287, -0.7159911394119263, -0.7102710008621216, -0.704494059085846, -0.6986598372459412, -0.692767858505249, -0.6868176460266113, -0.6808088421821594, -0.6747409701347351, -0.6686135530471802, -0.6624262928962708, -0.6561787128448486, -0.6498704552650452, -0.6435011029243469, -0.63707035779953, -0.6305777430534363, -0.6240230798721313, -0.617405891418457, -0.6107259392738342, -0.6039829850196838, -0.5971766710281372, -0.5903067588806152, -0.5833730101585388, -0.5763752460479736, -0.5693131685256958, -0.5621867179870605, -0.5549957156181335, -0.5477400422096252, -0.5404195189476013, -0.533034086227417, -0.525583803653717, -0.5180685520172119, -0.5104883313179016, -0.5028432011604309, -0.49513325095176697, -0.48735857009887695, -0.4795192778110504, -0.47161558270454407, -0.46364760398864746, -0.4556156396865845, -0.447519987821579, -0.4393608868122101, -0.4311387538909912, -0.42285391688346863, -0.4145068824291229, -0.40609806776046753, -0.39762797951698303, -0.3890972435474396, -0.38050636649131775, -0.37185606360435486, -0.3631470203399658, -0.35437992215156555, -0.3455555737018585, -0.3366748094558716, -0.327738493680954, -0.31874755024909973, -0.30970293283462524, -0.3006056845188141, -0.29145678877830505, -0.28225740790367126, -0.27300870418548584, -0.2637118399143219, -0.2543680667877197, -0.244978666305542, -0.23554497957229614, -0.2260683923959732, -0.2165503054857254, -0.20699219405651093, -0.19739556312561035, -0.18776194751262665, -0.17809294164180756, -0.168390154838562, -0.15865525603294373, -0.1488899439573288, -0.1390959471464157, -0.12927500903606415, -0.11942892521619797, -0.10955952852964401, -0.09966865181922913, -0.08975817263126373, -0.07982998341321945, -0.06988599896430969, -0.059928156435489655, -0.04995839670300484, -0.03997868672013283, -0.02999100461602211, -0.019997334107756615, -0.00999966636300087, 0.0, 0.009900666773319244, 0.01979939267039299, 0.029694238677620888, 0.039583273231983185, 0.04946456849575043, 0.05933620408177376, 0.06919627636671066, 0.07904289662837982, 0.08887417614459991, 0.09868825972080231, 0.10848331451416016, 0.11825750768184662, 0.12800906598567963, 0.13773618638515472, 0.1474371701478958, 0.15711025893688202, 0.16675381362438202, 0.1763661503791809, 0.18594567477703094, 0.19549080729484558, 0.20499998331069946, 0.214471697807312, 0.22390450537204742, 0.2332969456911087, 0.2426476627588272, 0.2519553005695343, 0.2612185478210449, 0.2704361379146576, 0.2796068489551544, 0.2887295186519623, 0.29780304431915283, 0.30682629346847534, 0.31579825282096863, 0.3247179090976715, 0.3335843086242676, 0.3423965871334076, 0.3511538505554199, 0.3598552644252777, 0.36850008368492126, 0.3770875930786133, 0.38561707735061646, 0.39408788084983826, 0.4024994373321533, 0.4108511805534363, 0.41914260387420654, 0.4273732006549835, 0.4355425536632538, 0.4436502754688263, 0.45169597864151, 0.45967936515808105, 0.46760016679763794, 0.4754580855369568, 0.48325294256210327, 0.49098455905914307, 0.49865275621414185, 0.5062574744224548, 0.5137985944747925, 0.52127605676651, 0.5286898612976074, 0.5360399484634399, 0.5433264970779419, 0.5505493879318237, 0.5577088594436646, 0.5648049116134644, 0.5718377232551575, 0.5788074731826782, 0.5857142806053162, 0.5925583839416504, 0.5993399620056152, 0.6060593128204346, 0.6127166748046875, 0.6193122863769531, 0.6258464455604553, 0.632319450378418, 0.6387316584587097, 0.6450833678245544, 0.6513749361038208, 0.6576067805290222, 0.6637791395187378, 0.6698924899101257, 0.6759471893310547, 0.6819437146186829, 0.6878823637962341, 0.6937636137008667, 0.699587881565094, 0.7053556442260742, 0.711067259311676, 0.7167232632637024, 0.7223240733146667, 0.7278701066970825, 0.7333618402481079, 0.7387998104095459, 0.7441843748092651, 0.7495161294937134, 0.754795491695404, 0.7600228786468506, 0.7651988863945007, 0.7703239321708679, 0.7753984928131104, 0.780423104763031, 0.7853981852531433, 0.7903242111206055, 0.7952017784118652, 0.8000312447547913, 0.8048132061958313, 0.8095480799674988, 0.8142363429069519, 0.8188784718513489, 0.8234750032424927, 0.8280263543128967, 0.832533061504364, 0.836995542049408, 0.8414142727851868, 0.8457897305488586, 0.8501224517822266, 0.8544127941131592, 0.8586612939834595, 0.8628683686256409, 0.8670344948768616, 0.8711601495742798, 0.8752456903457642, 0.8792916536331177, 0.8832984566688538, 0.8872665762901306, 0.8911963105201721, 0.895088255405426, 0.898942768573761, -0.9027602672576904, -0.898942768573761, -0.895088255405426, -0.8911963105201721, -0.8872665762901306, -0.8832984566688538, -0.8792916536331177, -0.8752456903457642, -0.8711601495742798, -0.8670344948768616, -0.8628683686256409, -0.8586612939834595, -0.8544127941131592, -0.8501224517822266, -0.8457897305488586, -0.8414142727851868, -0.836995542049408, -0.832533061504364, -0.8280263543128967, -0.8234750032424927, -0.8188784718513489, -0.8142363429069519, -0.8095480799674988, -0.8048132061958313, -0.8000312447547913, -0.7952017784118652, -0.7903242111206055, -0.7853981852531433, -0.780423104763031, -0.7753984928131104, -0.7703239321708679, -0.7651988863945007, -0.7600228786468506, -0.754795491695404, -0.7495161294937134, -0.7441843748092651, -0.7387998104095459, -0.7333618402481079, -0.7278701066970825, -0.7223240733146667, -0.7167232632637024, -0.711067259311676, -0.7053556442260742, -0.699587881565094, -0.6937636137008667, -0.6878823637962341, -0.6819437146186829, -0.6759471893310547, -0.6698924899101257, -0.6637791395187378, -0.6576067805290222, -0.6513749361038208, -0.6450833678245544, -0.6387316584587097, -0.632319450378418, -0.6258464455604553, -0.6193122863769531, -0.6127166748046875, -0.6060593128204346, -0.5993399620056152, -0.5925583839416504, -0.5857142806053162, -0.5788074731826782, -0.5718377232551575, -0.5648049116134644, -0.5577088594436646, -0.5505493879318237, -0.5433264970779419, -0.5360399484634399, -0.5286898612976074, -0.52127605676651, -0.5137985944747925, -0.5062574744224548, -0.49865275621414185, -0.49098455905914307, -0.48325294256210327, -0.4754580855369568, -0.46760016679763794, -0.45967936515808105, -0.45169597864151, -0.4436502754688263, -0.4355425536632538, -0.4273732006549835, -0.41914260387420654, -0.4108511805534363, -0.4024994373321533, -0.39408788084983826, -0.38561707735061646, -0.3770875930786133, -0.36850008368492126, -0.3598552644252777, -0.3511538505554199, -0.3423965871334076, -0.3335843086242676, -0.3247179090976715, -0.31579825282096863, -0.30682629346847534, -0.29780304431915283, -0.2887295186519623, -0.2796068489551544, -0.2704361379146576, -0.2612185478210449, -0.2519553005695343, -0.2426476627588272, -0.2332969456911087, -0.22390450537204742, -0.214471697807312, -0.20499998331069946, -0.19549080729484558, -0.18594567477703094, -0.1763661503791809, -0.16675381362438202, -0.15711025893688202, -0.1474371701478958, -0.13773618638515472, -0.12800906598567963, -0.11825750768184662, -0.10848331451416016, -0.09868825972080231, -0.08887417614459991, -0.07904289662837982, -0.06919627636671066, -0.05933620408177376, -0.04946456849575043, -0.039583273231983185, -0.029694238677620888, -0.01979939267039299, -0.009900666773319244, 0.0, 0.009803607128560543, 0.019605331122875214, 0.029403287917375565, 0.039195600897073746, 0.04898039996623993, 0.058755822479724884, 0.06852001696825027, 0.07827114313840866, 0.0880073755979538, 0.09772690385580063, 0.10742795467376709, 0.11710874736309052, 0.12676753103733063, 0.13640260696411133, 0.14601226150989532, 0.1555948257446289, 0.16514867544174194, 0.1746722012758255, 0.18416382372379303, 0.19362199306488037, 0.20304521918296814, 0.21243202686309814, 0.22178097069263458, 0.23109066486358643, 0.24035975337028503, 0.24958692491054535, 0.2587708830833435, 0.2679104208946228, 0.27700433135032654, 0.2860514521598816, 0.2950506806373596, 0.30400094389915466, 0.31290122866630554, 0.32175055146217346, 0.3305479884147644, 0.33929261565208435, 0.34798359870910645, 0.3566201329231262, 0.3652014434337616, 0.37372681498527527, 0.3821955621242523, 0.3906070291996002, 0.3989606499671936, 0.4072558581829071, 0.41549208760261536, 0.42366892099380493, 0.4317858815193176, 0.4398425817489624, 0.4478386640548706, 0.4557737708091736, 0.46364760398864746, 0.4714599549770355, 0.4792105555534363, 0.4868992269039154, 0.49452582001686096, 0.5020902156829834, 0.5095922350883484, 0.5170319676399231, 0.5244092345237732, 0.5317240953445435, 0.5389764904975891, 0.5461665391921997, 0.55329430103302, 0.5603598952293396, 0.5673633217811584, 0.5743048191070557, 0.5811845064163208, 0.588002622127533, 0.5947592854499817, 0.6014547348022461, 0.6080892086029053, 0.6146629452705383, 0.6211762428283691, 0.6276293992996216, 0.6340227127075195, 0.6403564810752869, 0.6466310024261475, 0.65284663438797, 0.659003734588623, 0.6651026606559753, 0.6711438298225403, 0.6771275997161865, 0.6830542683601379, 0.6889243721961975, 0.6947382688522339, 0.7004963755607605, 0.7061991095542908, 0.7118468880653381, 0.717440128326416, 0.7229793667793274, 0.7284649610519409, 0.73389732837677, 0.7392770648002625, 0.7446044683456421, 0.7498801350593567, 0.7551044225692749, 0.7602778077125549, 0.7654008269309998, 0.7704738974571228, 0.7754974961280823, 0.7804720997810364, 0.7853981852531433, 0.7902761697769165, 0.7951065897941589, 0.7998899221420288, 0.8046265840530396, 0.8093170523643494, 0.8139618039131165, 0.8185613751411438, 0.8231161236763, 0.8276265859603882, 0.8320931792259216, 0.8365163803100586, 0.8408966660499573, 0.8452344536781311, 0.8495302796363831, 0.8537845015525818, 0.8579975962638855, 0.8621700406074524, 0.8663022518157959, 0.8703947067260742, 0.874447762966156, 0.8784618973731995, 0.882437527179718, 0.8863751292228699, 0.8902751207351685, 0.8941378593444824, -0.8979637622833252, -0.8941378593444824, -0.8902751207351685, -0.8863751292228699, -0.882437527179718, -0.8784618973731995, -0.874447762966156, -0.8703947067260742, -0.8663022518157959, -0.8621700406074524, -0.8579975962638855, -0.8537845015525818, -0.8495302796363831, -0.8452344536781311, -0.8408966660499573, -0.8365163803100586, -0.8320931792259216, -0.8276265859603882, -0.8231161236763, -0.8185613751411438, -0.8139618039131165, -0.8093170523643494, -0.8046265840530396, -0.7998899221420288, -0.7951065897941589, -0.7902761697769165, -0.7853981852531433, -0.7804720997810364, -0.7754974961280823, -0.7704738974571228, -0.7654008269309998, -0.7602778077125549, -0.7551044225692749, -0.7498801350593567, -0.7446044683456421, -0.7392770648002625, -0.73389732837677, -0.7284649610519409, -0.7229793667793274, -0.717440128326416, -0.7118468880653381, -0.7061991095542908, -0.7004963755607605, -0.6947382688522339, -0.6889243721961975, -0.6830542683601379, -0.6771275997161865, -0.6711438298225403, -0.6651026606559753, -0.659003734588623, -0.65284663438797, -0.6466310024261475, -0.6403564810752869, -0.6340227127075195, -0.6276293992996216, -0.6211762428283691, -0.6146629452705383, -0.6080892086029053, -0.6014547348022461, -0.5947592854499817, -0.588002622127533, -0.5811845064163208, -0.5743048191070557, -0.5673633217811584, -0.5603598952293396, -0.55329430103302, -0.5461665391921997, -0.5389764904975891, -0.5317240953445435, -0.5244092345237732, -0.5170319676399231, -0.5095922350883484, -0.5020902156829834, -0.49452582001686096, -0.4868992269039154, -0.4792105555534363, -0.4714599549770355, -0.46364760398864746, -0.4557737708091736, -0.4478386640548706, -0.4398425817489624, -0.4317858815193176, -0.42366892099380493, -0.41549208760261536, -0.4072558581829071, -0.3989606499671936, -0.3906070291996002, -0.3821955621242523, -0.37372681498527527, -0.3652014434337616, -0.3566201329231262, -0.34798359870910645, -0.33929261565208435, -0.3305479884147644, -0.32175055146217346, -0.31290122866630554, -0.30400094389915466, -0.2950506806373596, -0.2860514521598816, -0.27700433135032654, -0.2679104208946228, -0.2587708830833435, -0.24958692491054535, -0.24035975337028503, -0.23109066486358643, -0.22178097069263458, -0.21243202686309814, -0.20304521918296814, -0.19362199306488037, -0.18416382372379303, -0.1746722012758255, -0.16514867544174194, -0.1555948257446289, -0.14601226150989532, -0.13640260696411133, -0.12676753103733063, -0.11710874736309052, -0.10742795467376709, -0.09772690385580063, -0.0880073755979538, -0.07827114313840866, -0.06852001696825027, -0.058755822479724884, -0.04898039996623993, -0.039195600897073746, -0.029403287917375565, -0.019605331122875214, -0.009803607128560543, 0.0, 0.009708432480692863, 0.019415035843849182, 0.02911798097193241, 0.0388154461979866, 0.04850561171770096, 0.05818667262792587, 0.06785682588815689, 0.07751428335905075, 0.08715727180242538, 0.09678404778242111, 0.10639285296201706, 0.11598198115825653, 0.12554973363876343, 0.13509443402290344, 0.14461444318294525, 0.15410812199115753, 0.16357387602329254, 0.17301015555858612, 0.1824154108762741, 0.19178813695907593, 0.20112688839435577, 0.21043020486831665, 0.21969670057296753, 0.22892498970031738, 0.23811377584934235, 0.24726176261901855, 0.25636768341064453, 0.26543036103248596, 0.27444857358932495, 0.28342124819755554, 0.292347252368927, 0.30122557282447815, 0.3100551664829254, 0.3188351094722748, 0.32756444811820984, 0.33624228835105896, 0.3448678255081177, 0.35344022512435913, 0.361958771944046, 0.37042269110679626, 0.37883132696151733, 0.3871840834617615, 0.39548030495643616, 0.4037194550037384, 0.4119010269641876, 0.4200245141983032, 0.4280894696712494, 0.43609553575515747, 0.44404226541519165, 0.45192939043045044, 0.4597565829753876, 0.4675235450267792, 0.4752300977706909, 0.4828760027885437, 0.4904611110687256, 0.49798524379730225, 0.5054483413696289, 0.512850284576416, 0.5201910734176636, 0.527470588684082, 0.5346888899803162, 0.5418460369110107, 0.5489420294761658, 0.555976927280426, 0.5629509091377258, 0.5698639750480652, 0.576716423034668, 0.5835082530975342, 0.5902397632598877, 0.5969110727310181, 0.6035224199295044, 0.6100741028785706, 0.6165662407875061, 0.6229992508888245, 0.62937331199646, 0.6356887817382812, 0.6419458985328674, 0.6481450200080872, 0.6542865037918091, 0.6603706479072571, 0.6663978695869446, 0.6723684668540955, 0.6782828569412231, 0.6841413974761963, 0.6899444460868835, 0.6956924796104431, 0.7013858556747437, 0.7070249915122986, 0.7126103043556213, 0.7181422710418701, 0.7236211895942688, 0.7290476560592651, 0.734421968460083, 0.7397446036338806, 0.7450160980224609, 0.7502368092536926, 0.7554071545600891, 0.7605276703834534, 0.7655987739562988, 0.7706209421157837, 0.7755945324897766, 0.7805201411247253, 0.7853981852531433, 0.7902290225028992, 0.7950132489204407, 0.7997512221336365, 0.8044434785842896, 0.8090904355049133, 0.8136925101280212, 0.8182501792907715, 0.8227639198303223, 0.8272342085838318, 0.8316614031791687, 0.836046040058136, 0.8403885364532471, 0.8446893095970154, 0.8489488363265991, 0.8531675338745117, 0.8573458194732666, 0.861484169960022, 0.8655830025672913, 0.8696427345275879, 0.8736637830734253, 0.8776466250419617, 0.8815916180610657, 0.8854991793632507, 0.8893697261810303, -0.8932036757469177, -0.8893697261810303, -0.8854991793632507, -0.8815916180610657, -0.8776466250419617, -0.8736637830734253, -0.8696427345275879, -0.8655830025672913, -0.861484169960022, -0.8573458194732666, -0.8531675338745117, -0.8489488363265991, -0.8446893095970154, -0.8403885364532471, -0.836046040058136, -0.8316614031791687, -0.8272342085838318, -0.8227639198303223, -0.8182501792907715, -0.8136925101280212, -0.8090904355049133, -0.8044434785842896, -0.7997512221336365, -0.7950132489204407, -0.7902290225028992, -0.7853981852531433, -0.7805201411247253, -0.7755945324897766, -0.7706209421157837, -0.7655987739562988, -0.7605276703834534, -0.7554071545600891, -0.7502368092536926, -0.7450160980224609, -0.7397446036338806, -0.734421968460083, -0.7290476560592651, -0.7236211895942688, -0.7181422710418701, -0.7126103043556213, -0.7070249915122986, -0.7013858556747437, -0.6956924796104431, -0.6899444460868835, -0.6841413974761963, -0.6782828569412231, -0.6723684668540955, -0.6663978695869446, -0.6603706479072571, -0.6542865037918091, -0.6481450200080872, -0.6419458985328674, -0.6356887817382812, -0.62937331199646, -0.6229992508888245, -0.6165662407875061, -0.6100741028785706, -0.6035224199295044, -0.5969110727310181, -0.5902397632598877, -0.5835082530975342, -0.576716423034668, -0.5698639750480652, -0.5629509091377258, -0.555976927280426, -0.5489420294761658, -0.5418460369110107, -0.5346888899803162, -0.527470588684082, -0.5201910734176636, -0.512850284576416, -0.5054483413696289, -0.49798524379730225, -0.4904611110687256, -0.4828760027885437, -0.4752300977706909, -0.4675235450267792, -0.4597565829753876, -0.45192939043045044, -0.44404226541519165, -0.43609553575515747, -0.4280894696712494, -0.4200245141983032, -0.4119010269641876, -0.4037194550037384, -0.39548030495643616, -0.3871840834617615, -0.37883132696151733, -0.37042269110679626, -0.361958771944046, -0.35344022512435913, -0.3448678255081177, -0.33624228835105896, -0.32756444811820984, -0.3188351094722748, -0.3100551664829254, -0.30122557282447815, -0.292347252368927, -0.28342124819755554, -0.27444857358932495, -0.26543036103248596, -0.25636768341064453, -0.24726176261901855, -0.23811377584934235, -0.22892498970031738, -0.21969670057296753, -0.21043020486831665, -0.20112688839435577, -0.19178813695907593, -0.1824154108762741, -0.17301015555858612, -0.16357387602329254, -0.15410812199115753, -0.14461444318294525, -0.13509443402290344, -0.12554973363876343, -0.11598198115825653, -0.10639285296201706, -0.09678404778242111, -0.08715727180242538, -0.07751428335905075, -0.06785682588815689, -0.05818667262792587, -0.04850561171770096, -0.0388154461979866, -0.02911798097193241, -0.019415035843849182, -0.009708432480692863, 0.0, 0.009615087881684303, 0.01922839879989624, 0.028838157653808594, 0.03844258934259415, 0.04803993180394173, 0.05762842670083046, 0.06720632314682007, 0.07677189260721207, 0.08632340282201767, 0.09585914760828018, 0.1053774356842041, 0.11487660557031631, 0.12435499578714371, 0.13381098210811615, 0.1432429552078247, 0.15264932811260223, 0.16202856600284576, 0.17137911915779114, 0.18069952726364136, 0.18998828530311584, 0.19924399256706238, 0.20846521854400635, 0.2176506221294403, 0.22679884731769562, 0.2359086126089096, 0.244978666305542, 0.2540077567100525, 0.2629947364330292, 0.27193841338157654, 0.2808377146720886, 0.2896915674209595, 0.2984989285469055, 0.30725881457328796, 0.3159702718257904, 0.3246323764324188, 0.33324429392814636, 0.3418051600456238, 0.350314199924469, 0.3587706685066223, 0.36717382073402405, 0.37552303075790405, 0.3838176131248474, 0.39205703139305115, 0.4002406597137451, 0.4083680212497711, 0.41643860936164856, 0.424452006816864, 0.43240776658058167, 0.44030553102493286, 0.44814497232437134, 0.45592576265335083, 0.46364760398864746, 0.4713102877140045, 0.4789136052131653, 0.48645734786987305, 0.49394136667251587, 0.5013655424118042, 0.5087298154830933, 0.5160340666770935, 0.5232782959938049, 0.5304625034332275, 0.5375866293907166, 0.5446507930755615, 0.5516549944877625, 0.5585992932319641, 0.5654838681221008, 0.5723088383674622, 0.5790742635726929, 0.5857803821563721, 0.5924273729324341, 0.5990153551101685, 0.6055446863174438, 0.612015426158905, 0.6184279918670654, 0.6247825622558594, 0.631079375743866, 0.6373187899589539, 0.6435011029243469, 0.649626612663269, 0.6556956171989441, 0.6617085337638855, 0.6676656007766724, 0.6735672354698181, 0.6794137954711914, 0.6852056980133057, 0.6909432411193848, 0.6966268420219421, 0.7022569179534912, 0.7078338861465454, 0.7133581042289734, 0.7188299894332886, 0.7242500185966492, 0.7296185493469238, 0.734935998916626, 0.7402028441429138, 0.7454195022583008, 0.7505863904953003, 0.7557039260864258, 0.7607725858688354, 0.7657928466796875, 0.7707650661468506, 0.7756897211074829, 0.7805672883987427, 0.7853981852531433, 0.7901828289031982, 0.7949216961860657, 0.799615204334259, 0.8042638301849365, 0.8088680505752563, 0.8134282231330872, 0.8179448246955872, 0.8224182724952698, 0.8268490433692932, 0.8312376141548157, 0.835584282875061, 0.839889645576477, 0.8441540002822876, 0.8483778238296509, 0.8525615930557251, 0.8567056059837341, 0.8608104586601257, 0.864876389503479, 0.8689039349555969, 0.8728935122489929, 0.8768454790115356, 0.8807601928710938, 0.8846381902694702, -0.8884797692298889, -0.8846381902694702, -0.8807601928710938, -0.8768454790115356, -0.8728935122489929, -0.8689039349555969, -0.864876389503479, -0.8608104586601257, -0.8567056059837341, -0.8525615930557251, -0.8483778238296509, -0.8441540002822876, -0.839889645576477, -0.835584282875061, -0.8312376141548157, -0.8268490433692932, -0.8224182724952698, -0.8179448246955872, -0.8134282231330872, -0.8088680505752563, -0.8042638301849365, -0.799615204334259, -0.7949216961860657, -0.7901828289031982, -0.7853981852531433, -0.7805672883987427, -0.7756897211074829, -0.7707650661468506, -0.7657928466796875, -0.7607725858688354, -0.7557039260864258, -0.7505863904953003, -0.7454195022583008, -0.7402028441429138, -0.734935998916626, -0.7296185493469238, -0.7242500185966492, -0.7188299894332886, -0.7133581042289734, -0.7078338861465454, -0.7022569179534912, -0.6966268420219421, -0.6909432411193848, -0.6852056980133057, -0.6794137954711914, -0.6735672354698181, -0.6676656007766724, -0.6617085337638855, -0.6556956171989441, -0.649626612663269, -0.6435011029243469, -0.6373187899589539, -0.631079375743866, -0.6247825622558594, -0.6184279918670654, -0.612015426158905, -0.6055446863174438, -0.5990153551101685, -0.5924273729324341, -0.5857803821563721, -0.5790742635726929, -0.5723088383674622, -0.5654838681221008, -0.5585992932319641, -0.5516549944877625, -0.5446507930755615, -0.5375866293907166, -0.5304625034332275, -0.5232782959938049, -0.5160340666770935, -0.5087298154830933, -0.5013655424118042, -0.49394136667251587, -0.48645734786987305, -0.4789136052131653, -0.4713102877140045, -0.46364760398864746, -0.45592576265335083, -0.44814497232437134, -0.44030553102493286, -0.43240776658058167, -0.424452006816864, -0.41643860936164856, -0.4083680212497711, -0.4002406597137451, -0.39205703139305115, -0.3838176131248474, -0.37552303075790405, -0.36717382073402405, -0.3587706685066223, -0.350314199924469, -0.3418051600456238, -0.33324429392814636, -0.3246323764324188, -0.3159702718257904, -0.30725881457328796, -0.2984989285469055, -0.2896915674209595, -0.2808377146720886, -0.27193841338157654, -0.2629947364330292, -0.2540077567100525, -0.244978666305542, -0.2359086126089096, -0.22679884731769562, -0.2176506221294403, -0.20846521854400635, -0.19924399256706238, -0.18998828530311584, -0.18069952726364136, -0.17137911915779114, -0.16202856600284576, -0.15264932811260223, -0.1432429552078247, -0.13381098210811615, -0.12435499578714371, -0.11487660557031631, -0.1053774356842041, -0.09585914760828018, -0.08632340282201767, -0.07677189260721207, -0.06720632314682007, -0.05762842670083046, -0.04803993180394173, -0.03844258934259415, -0.028838157653808594, -0.01922839879989624, -0.009615087881684303, 0.0, 0.009523521177470684, 0.01904531568288803, 0.02856365777552128, 0.03807682543992996, 0.04758310317993164, 0.05708078294992447, 0.06656816601753235, 0.07604356110095978, 0.08550529181957245, 0.09495170414447784, 0.10438115149736404, 0.11379200965166092, 0.12318266183137894, 0.13255153596401215, 0.141897052526474, 0.15121768414974213, 0.16051192581653595, 0.1697782725095749, 0.17901527881622314, 0.1882214993238449, 0.19739556312561035, 0.20653606951236725, 0.21564170718193054, 0.22471116483211517, 0.23374317586421967, 0.24273651838302612, 0.25168997049331665, 0.2606023848056793, 0.2694726586341858, 0.2782996594905853, 0.28708237409591675, 0.2958197593688965, 0.3045108914375305, 0.31315478682518005, 0.32175055146217346, 0.3302973508834839, 0.3387943506240845, 0.34724077582359314, 0.3556358814239502, 0.36397895216941833, 0.37226933240890503, 0.38050636649131775, 0.38868948817253113, 0.3968181312084198, 0.4048917889595032, 0.41290995478630066, 0.42087215185165405, 0.4287780225276947, 0.4366271495819092, 0.4444192051887512, 0.45215386152267456, 0.4598308205604553, 0.4674498736858368, 0.4750107526779175, 0.48251330852508545, 0.489957332611084, 0.49734270572662354, 0.5046693682670593, 0.5119372010231018, 0.5191460847854614, 0.5262961387634277, 0.5333872437477112, 0.5404195189476013, 0.5473929047584534, 0.5543075203895569, 0.5611634254455566, 0.5679607391357422, 0.5746996402740479, 0.5813801884651184, 0.588002622127533, 0.594567060470581, 0.6010737419128418, 0.6075229048728943, 0.6139147281646729, 0.6202495098114014, 0.6265274286270142, 0.6327488422393799, 0.6389139890670776, 0.6450231671333313, 0.6510767340660095, 0.6570749282836914, 0.6630181670188904, 0.6689066886901855, 0.6747409701347351, 0.6805212497711182, 0.6862478852272034, 0.6919213533401489, 0.6975420117378235, 0.7031101584434509, 0.7086262702941895, 0.7140907049179077, 0.7195038795471191, 0.7248661518096924, 0.7301779985427856, 0.7354397773742676, 0.7406519055366516, 0.745814859867096, 0.750929057598114, 0.7559948563575745, 0.7610127329826355, 0.7659831047058105, 0.7709064483642578, 0.7757830619812012, 0.7806134819984436, 0.7853981852531433, 0.7901374697685242, 0.7948318719863892, 0.7994817495346069, 0.8040875792503357, 0.8086497783660889, 0.8131688237190247, 0.8176450729370117, 0.8220789432525635, 0.8264709711074829, 0.8308214545249939, 0.8351308703422546, 0.8393996357917786, 0.8436282277107239, 0.8478169441223145, 0.8519663214683533, 0.856076717376709, 0.8601484894752502, 0.8641821146011353, 0.8681780099868774, 0.8721364736557007, 0.876058042049408, 0.8799430131912231, -0.8837918639183044, -0.8799430131912231, -0.876058042049408, -0.8721364736557007, -0.8681780099868774, -0.8641821146011353, -0.8601484894752502, -0.856076717376709, -0.8519663214683533, -0.8478169441223145, -0.8436282277107239, -0.8393996357917786, -0.8351308703422546, -0.8308214545249939, -0.8264709711074829, -0.8220789432525635, -0.8176450729370117, -0.8131688237190247, -0.8086497783660889, -0.8040875792503357, -0.7994817495346069, -0.7948318719863892, -0.7901374697685242, -0.7853981852531433, -0.7806134819984436, -0.7757830619812012, -0.7709064483642578, -0.7659831047058105, -0.7610127329826355, -0.7559948563575745, -0.750929057598114, -0.745814859867096, -0.7406519055366516, -0.7354397773742676, -0.7301779985427856, -0.7248661518096924, -0.7195038795471191, -0.7140907049179077, -0.7086262702941895, -0.7031101584434509, -0.6975420117378235, -0.6919213533401489, -0.6862478852272034, -0.6805212497711182, -0.6747409701347351, -0.6689066886901855, -0.6630181670188904, -0.6570749282836914, -0.6510767340660095, -0.6450231671333313, -0.6389139890670776, -0.6327488422393799, -0.6265274286270142, -0.6202495098114014, -0.6139147281646729, -0.6075229048728943, -0.6010737419128418, -0.594567060470581, -0.588002622127533, -0.5813801884651184, -0.5746996402740479, -0.5679607391357422, -0.5611634254455566, -0.5543075203895569, -0.5473929047584534, -0.5404195189476013, -0.5333872437477112, -0.5262961387634277, -0.5191460847854614, -0.5119372010231018, -0.5046693682670593, -0.49734270572662354, -0.489957332611084, -0.48251330852508545, -0.4750107526779175, -0.4674498736858368, -0.4598308205604553, -0.45215386152267456, -0.4444192051887512, -0.4366271495819092, -0.4287780225276947, -0.42087215185165405, -0.41290995478630066, -0.4048917889595032, -0.3968181312084198, -0.38868948817253113, -0.38050636649131775, -0.37226933240890503, -0.36397895216941833, -0.3556358814239502, -0.34724077582359314, -0.3387943506240845, -0.3302973508834839, -0.32175055146217346, -0.31315478682518005, -0.3045108914375305, -0.2958197593688965, -0.28708237409591675, -0.2782996594905853, -0.2694726586341858, -0.2606023848056793, -0.25168997049331665, -0.24273651838302612, -0.23374317586421967, -0.22471116483211517, -0.21564170718193054, -0.20653606951236725, -0.19739556312561035, -0.1882214993238449, -0.17901527881622314, -0.1697782725095749, -0.16051192581653595, -0.15121768414974213, -0.141897052526474, -0.13255153596401215, -0.12318266183137894, -0.11379200965166092, -0.10438115149736404, -0.09495170414447784, -0.08550529181957245, -0.07604356110095978, -0.06656816601753235, -0.05708078294992447, -0.04758310317993164, -0.03807682543992996, -0.02856365777552128, -0.01904531568288803, -0.009523521177470684, 0.0, 0.009433682076632977, 0.018865685909986496, 0.028294334188103676, 0.03771795332431793, 0.047134872525930405, 0.05654343590140343, 0.06594198942184448, 0.07532889395952225, 0.0847025141119957, 0.0940612331032753, 0.10340346395969391, 0.11272761225700378, 0.12203212082386017, 0.1313154399394989, 0.1405760496854782, 0.1498124599456787, 0.15902318060398102, 0.16820676624774933, 0.17736181616783142, 0.18648689985275269, 0.19558067619800568, 0.20464180409908295, 0.21366898715496063, 0.22266094386577606, 0.23161642253398895, 0.240534245967865, 0.24941322207450867, 0.25825223326683044, 0.2670501470565796, 0.27580589056015015, 0.2845184803009033, 0.29318690299987793, 0.3018101751804352, 0.31038740277290344, 0.3189176917076111, 0.32740020751953125, 0.3358341157436371, 0.3442186713218689, 0.352553129196167, 0.36083677411079407, 0.36906898021698, 0.3772490620613098, 0.3853764832019806, 0.39345064759254456, 0.4014710485935211, 0.4094372093677521, 0.4173486828804016, 0.4252050220966339, 0.4330058693885803, 0.4407508373260498, 0.44843965768814087, 0.45607200264930725, 0.46364760398864746, 0.4711662530899048, 0.4786277711391449, 0.4860319197177887, 0.493378609418869, 0.5006677508354187, 0.5078991651535034, 0.5150728225708008, 0.5221887230873108, 0.5292468070983887, 0.5362470746040344, 0.5431895852088928, 0.5500743985176086, 0.5569015145301819, 0.5636711120605469, 0.5703833103179932, 0.5770381093025208, 0.5836358070373535, 0.590176522731781, 0.5966603755950928, 0.6030876636505127, 0.6094585657119751, 0.6157732605934143, 0.6220319867134094, 0.6282351016998291, 0.6343828439712524, 0.6404753923416138, 0.6465131640434265, 0.6524963974952698, 0.6584253907203674, 0.6643005013465881, 0.6701220273971558, 0.6758903861045837, 0.6816058158874512, 0.6872687339782715, 0.6928795576095581, 0.6984385251998901, 0.7039461135864258, 0.7094026803970337, 0.7148085832595825, 0.7201642394065857, 0.7254700064659119, 0.7307263612747192, 0.7359336018562317, 0.7410922050476074, 0.7462025880813599, 0.7512651085853577, 0.7562801837921143, 0.7612482905387878, 0.7661697864532471, 0.7710450887680054, 0.7758746147155762, 0.7806588411331177, 0.7853981852531433, 0.790092945098877, 0.7947436571121216, 0.7993507385253906, 0.8039145469665527, 0.8084355592727661, 0.8129141330718994, 0.8173507452011108, 0.8217458128929138, 0.8260996341705322, 0.8304128050804138, 0.8346855640411377, 0.8389184474945068, 0.8431117534637451, 0.8472660183906555, 0.8513815402984619, 0.8554587364196777, 0.8594980239868164, 0.8634998202323914, 0.8674644827842712, 0.8713924288749695, 0.8752840757369995, -0.8791397213935852, -0.8752840757369995, -0.8713924288749695, -0.8674644827842712, -0.8634998202323914, -0.8594980239868164, -0.8554587364196777, -0.8513815402984619, -0.8472660183906555, -0.8431117534637451, -0.8389184474945068, -0.8346855640411377, -0.8304128050804138, -0.8260996341705322, -0.8217458128929138, -0.8173507452011108, -0.8129141330718994, -0.8084355592727661, -0.8039145469665527, -0.7993507385253906, -0.7947436571121216, -0.790092945098877, -0.7853981852531433, -0.7806588411331177, -0.7758746147155762, -0.7710450887680054, -0.7661697864532471, -0.7612482905387878, -0.7562801837921143, -0.7512651085853577, -0.7462025880813599, -0.7410922050476074, -0.7359336018562317, -0.7307263612747192, -0.7254700064659119, -0.7201642394065857, -0.7148085832595825, -0.7094026803970337, -0.7039461135864258, -0.6984385251998901, -0.6928795576095581, -0.6872687339782715, -0.6816058158874512, -0.6758903861045837, -0.6701220273971558, -0.6643005013465881, -0.6584253907203674, -0.6524963974952698, -0.6465131640434265, -0.6404753923416138, -0.6343828439712524, -0.6282351016998291, -0.6220319867134094, -0.6157732605934143, -0.6094585657119751, -0.6030876636505127, -0.5966603755950928, -0.590176522731781, -0.5836358070373535, -0.5770381093025208, -0.5703833103179932, -0.5636711120605469, -0.5569015145301819, -0.5500743985176086, -0.5431895852088928, -0.5362470746040344, -0.5292468070983887, -0.5221887230873108, -0.5150728225708008, -0.5078991651535034, -0.5006677508354187, -0.493378609418869, -0.4860319197177887, -0.4786277711391449, -0.4711662530899048, -0.46364760398864746, -0.45607200264930725, -0.44843965768814087, -0.4407508373260498, -0.4330058693885803, -0.4252050220966339, -0.4173486828804016, -0.4094372093677521, -0.4014710485935211, -0.39345064759254456, -0.3853764832019806, -0.3772490620613098, -0.36906898021698, -0.36083677411079407, -0.352553129196167, -0.3442186713218689, -0.3358341157436371, -0.32740020751953125, -0.3189176917076111, -0.31038740277290344, -0.3018101751804352, -0.29318690299987793, -0.2845184803009033, -0.27580589056015015, -0.2670501470565796, -0.25825223326683044, -0.24941322207450867, -0.240534245967865, -0.23161642253398895, -0.22266094386577606, -0.21366898715496063, -0.20464180409908295, -0.19558067619800568, -0.18648689985275269, -0.17736181616783142, -0.16820676624774933, -0.15902318060398102, -0.1498124599456787, -0.1405760496854782, -0.1313154399394989, -0.12203212082386017, -0.11272761225700378, -0.10340346395969391, -0.0940612331032753, -0.0847025141119957, -0.07532889395952225, -0.06594198942184448, -0.05654343590140343, -0.047134872525930405, -0.03771795332431793, -0.028294334188103676, -0.018865685909986496, -0.009433682076632977, 0.0, 0.0093455221503973, 0.018689412623643875, 0.028030039742588997, 0.03736577928066254, 0.046695005148649216, 0.05601610243320465, 0.0653274729847908, 0.07462750375270844, 0.0839146301150322, 0.09318726509809494, 0.10244385153055191, 0.11168286204338074, 0.12090276181697845, 0.13010205328464508, 0.13927926123142242, 0.1484329104423523, 0.15756157040596008, 0.16666382551193237, 0.17573828995227814, 0.18478362262248993, 0.19379845261573792, 0.20278149843215942, 0.21173149347305298, 0.2206471860408783, 0.22952735424041748, 0.2383708357810974, 0.24717646837234497, 0.2559431493282318, 0.2646697759628296, 0.2733553349971771, 0.28199878334999084, 0.29059916734695435, 0.2991555333137512, 0.30766698718070984, 0.31613263487815857, 0.32455167174339294, 0.3329232633113861, 0.34124669432640076, 0.3495211899280548, 0.35774609446525574, 0.36592069268226624, 0.37404441833496094, 0.3821166753768921, 0.3901368975639343, 0.39810454845428467, 0.4060191810131073, 0.413880318403244, 0.421687513589859, 0.429440438747406, 0.4371386766433716, 0.44478192925453186, 0.45236989855766296, 0.4599023163318634, 0.4673789441585541, 0.47479957342147827, 0.48216402530670166, 0.4894721210002899, 0.4967237710952759, 0.5039188861846924, 0.5110573172569275, 0.5181390643119812, 0.5251640677452087, 0.5321323871612549, 0.5390439629554749, 0.5458989143371582, 0.5526971817016602, 0.559438943862915, 0.5661242604255676, 0.5727532505989075, 0.5793260335922241, 0.5858427882194519, 0.5923036336898804, 0.5987088084220886, 0.605058491230011, 0.6113529205322266, 0.6175922751426697, 0.6237767934799194, 0.6299067735671997, 0.6359824538230896, 0.642004132270813, 0.647972047328949, 0.6538864970207214, 0.659747838973999, 0.6655563712120056, 0.6713123917579651, 0.6770162582397461, 0.6826682686805725, 0.6882688403129578, 0.6938183307647705, 0.6993169784545898, 0.704765260219574, 0.7101635336875916, 0.7155121564865112, 0.7208114862442017, 0.7260619401931763, 0.7312639355659485, 0.7364177703857422, 0.7415239214897156, 0.7465827465057373, 0.751594603061676, 0.7565600275993347, 0.7614792585372925, 0.7663528323173523, 0.7711811065673828, 0.7759644985198975, 0.7807033658027649, 0.7853981852531433, 0.7900493144989014, 0.7946571707725525, 0.7992221713066101, 0.8037447333335876, 0.8082252740859985, 0.8126641511917114, 0.8170617818832397, 0.8214185833930969, 0.8257350325584412, 0.8300114274024963, 0.8342481851577759, 0.8384456634521484, 0.842604398727417, 0.8467246890068054, 0.8508068919181824, 0.854851484298706, 0.8588588237762451, 0.8628292679786682, 0.866763174533844, 0.8706610202789307, -0.8745231032371521, -0.8706610202789307, -0.866763174533844, -0.8628292679786682, -0.8588588237762451, -0.854851484298706, -0.8508068919181824, -0.8467246890068054, -0.842604398727417, -0.8384456634521484, -0.8342481851577759, -0.8300114274024963, -0.8257350325584412, -0.8214185833930969, -0.8170617818832397, -0.8126641511917114, -0.8082252740859985, -0.8037447333335876, -0.7992221713066101, -0.7946571707725525, -0.7900493144989014, -0.7853981852531433, -0.7807033658027649, -0.7759644985198975, -0.7711811065673828, -0.7663528323173523, -0.7614792585372925, -0.7565600275993347, -0.751594603061676, -0.7465827465057373, -0.7415239214897156, -0.7364177703857422, -0.7312639355659485, -0.7260619401931763, -0.7208114862442017, -0.7155121564865112, -0.7101635336875916, -0.704765260219574, -0.6993169784545898, -0.6938183307647705, -0.6882688403129578, -0.6826682686805725, -0.6770162582397461, -0.6713123917579651, -0.6655563712120056, -0.659747838973999, -0.6538864970207214, -0.647972047328949, -0.642004132270813, -0.6359824538230896, -0.6299067735671997, -0.6237767934799194, -0.6175922751426697, -0.6113529205322266, -0.605058491230011, -0.5987088084220886, -0.5923036336898804, -0.5858427882194519, -0.5793260335922241, -0.5727532505989075, -0.5661242604255676, -0.559438943862915, -0.5526971817016602, -0.5458989143371582, -0.5390439629554749, -0.5321323871612549, -0.5251640677452087, -0.5181390643119812, -0.5110573172569275, -0.5039188861846924, -0.4967237710952759, -0.4894721210002899, -0.48216402530670166, -0.47479957342147827, -0.4673789441585541, -0.4599023163318634, -0.45236989855766296, -0.44478192925453186, -0.4371386766433716, -0.429440438747406, -0.421687513589859, -0.413880318403244, -0.4060191810131073, -0.39810454845428467, -0.3901368975639343, -0.3821166753768921, -0.37404441833496094, -0.36592069268226624, -0.35774609446525574, -0.3495211899280548, -0.34124669432640076, -0.3329232633113861, -0.32455167174339294, -0.31613263487815857, -0.30766698718070984, -0.2991555333137512, -0.29059916734695435, -0.28199878334999084, -0.2733553349971771, -0.2646697759628296, -0.2559431493282318, -0.24717646837234497, -0.2383708357810974, -0.22952735424041748, -0.2206471860408783, -0.21173149347305298, -0.20278149843215942, -0.19379845261573792, -0.18478362262248993, -0.17573828995227814, -0.16666382551193237, -0.15756157040596008, -0.1484329104423523, -0.13927926123142242, -0.13010205328464508, -0.12090276181697845, -0.11168286204338074, -0.10244385153055191, -0.09318726509809494, -0.0839146301150322, -0.07462750375270844, -0.0653274729847908, -0.05601610243320465, -0.046695005148649216, -0.03736577928066254, -0.028030039742588997, -0.018689412623643875, -0.0093455221503973, 0.0, 0.009258994832634926, 0.018516402691602707, 0.0277706366032362, 0.03702011704444885, 0.04626326262950897, 0.055498506873846054, 0.06472428143024445, 0.07393904030323029, 0.08314123004674911, 0.09232933819293976, 0.10150182992219925, 0.1106572225689888, 0.11979402601718903, 0.12891076505184174, 0.13800601661205292, 0.14707835018634796, 0.15612636506557465, 0.16514867544174194, 0.1741439402103424, 0.1831108182668686, 0.19204801321029663, 0.20095425844192505, 0.20982831716537476, 0.21866895258426666, 0.22747498750686646, 0.236245259642601, 0.244978666305542, 0.25367408990859985, 0.2623305022716522, 0.2709468603134155, 0.2795221507549286, 0.2880554497241974, 0.2965458035469055, 0.30499234795570374, 0.3133941888809204, 0.32175055146217346, 0.33006060123443604, 0.3383236229419708, 0.34653887152671814, 0.35470566153526306, 0.36282333731651306, 0.3708913028240204, 0.3789089322090149, 0.386875718832016, 0.3947911262512207, 0.40265464782714844, 0.41046586632728577, 0.4182243347167969, 0.4259296655654907, 0.43358147144317627, 0.441179484128952, 0.44872334599494934, 0.4562127888202667, 0.46364760398864746, 0.47102755308151245, 0.478352427482605, 0.4856221079826355, 0.4928363859653473, 0.49999523162841797, 0.5070984959602356, 0.5141461491584778, 0.5211381316184998, 0.5280744433403015, 0.5349550843238831, 0.5417800545692444, 0.5485494136810303, 0.5552632212638855, 0.5619215369224548, 0.5685245394706726, 0.5750722885131836, 0.5815649032592773, 0.588002622127533, 0.5943855047225952, 0.6007137894630432, 0.6069876551628113, 0.6132073402404785, 0.619373083114624, 0.6254850625991821, 0.6315435171127319, 0.6375488042831421, 0.6435011029243469, 0.6494007706642151, 0.6552479863166809, 0.6610431671142578, 0.6667865514755249, 0.6724784970283508, 0.6781193017959595, 0.6837093234062195, 0.6892488598823547, 0.6947382688522339, 0.7001779079437256, 0.7055681943893433, 0.710909366607666, 0.716201901435852, 0.7214460968971252, 0.726642370223999, 0.7317910194396973, 0.7368925213813782, 0.7419472932815552, 0.7469555735588074, 0.751917839050293, 0.7568345069885254, 0.7617059350013733, 0.7665324807167053, 0.7713145613670349, 0.7760526537895203, 0.7807470560073853, 0.7853981852531433, 0.7900063991546631, 0.7945722341537476, 0.7990959286689758, 0.8035779595375061, 0.8080187439918518, 0.8124186396598816, 0.8167780041694641, 0.8210972547531128, 0.8253768682479858, 0.8296170830726624, 0.8338184356689453, 0.8379812240600586, 0.8421058654785156, 0.8461927175521851, 0.8502421975135803, 0.8542546629905701, 0.858230471611023, 0.8621700406074524, 0.866073727607727, -0.8699418902397156, -0.866073727607727, -0.8621700406074524, -0.858230471611023, -0.8542546629905701, -0.8502421975135803, -0.8461927175521851, -0.8421058654785156, -0.8379812240600586, -0.8338184356689453, -0.8296170830726624, -0.8253768682479858, -0.8210972547531128, -0.8167780041694641, -0.8124186396598816, -0.8080187439918518, -0.8035779595375061, -0.7990959286689758, -0.7945722341537476, -0.7900063991546631, -0.7853981852531433, -0.7807470560073853, -0.7760526537895203, -0.7713145613670349, -0.7665324807167053, -0.7617059350013733, -0.7568345069885254, -0.751917839050293, -0.7469555735588074, -0.7419472932815552, -0.7368925213813782, -0.7317910194396973, -0.726642370223999, -0.7214460968971252, -0.716201901435852, -0.710909366607666, -0.7055681943893433, -0.7001779079437256, -0.6947382688522339, -0.6892488598823547, -0.6837093234062195, -0.6781193017959595, -0.6724784970283508, -0.6667865514755249, -0.6610431671142578, -0.6552479863166809, -0.6494007706642151, -0.6435011029243469, -0.6375488042831421, -0.6315435171127319, -0.6254850625991821, -0.619373083114624, -0.6132073402404785, -0.6069876551628113, -0.6007137894630432, -0.5943855047225952, -0.588002622127533, -0.5815649032592773, -0.5750722885131836, -0.5685245394706726, -0.5619215369224548, -0.5552632212638855, -0.5485494136810303, -0.5417800545692444, -0.5349550843238831, -0.5280744433403015, -0.5211381316184998, -0.5141461491584778, -0.5070984959602356, -0.49999523162841797, -0.4928363859653473, -0.4856221079826355, -0.478352427482605, -0.47102755308151245, -0.46364760398864746, -0.4562127888202667, -0.44872334599494934, -0.441179484128952, -0.43358147144317627, -0.4259296655654907, -0.4182243347167969, -0.41046586632728577, -0.40265464782714844, -0.3947911262512207, -0.386875718832016, -0.3789089322090149, -0.3708913028240204, -0.36282333731651306, -0.35470566153526306, -0.34653887152671814, -0.3383236229419708, -0.33006060123443604, -0.32175055146217346, -0.3133941888809204, -0.30499234795570374, -0.2965458035469055, -0.2880554497241974, -0.2795221507549286, -0.2709468603134155, -0.2623305022716522, -0.25367408990859985, -0.244978666305542, -0.236245259642601, -0.22747498750686646, -0.21866895258426666, -0.20982831716537476, -0.20095425844192505, -0.19204801321029663, -0.1831108182668686, -0.1741439402103424, -0.16514867544174194, -0.15612636506557465, -0.14707835018634796, -0.13800601661205292, -0.12891076505184174, -0.11979402601718903, -0.1106572225689888, -0.10150182992219925, -0.09232933819293976, -0.08314123004674911, -0.07393904030323029, -0.06472428143024445, -0.055498506873846054, -0.04626326262950897, -0.03702011704444885, -0.0277706366032362, -0.018516402691602707, -0.009258994832634926, 0.0, 0.009174054488539696, 0.01834656484425068, 0.027515988796949387, 0.036680787801742554, 0.045839425176382065, 0.05499037355184555, 0.06413211673498154, 0.07326313108205795, 0.08238193392753601, 0.09148702025413513, 0.10057691484689713, 0.10965017229318619, 0.11870533972978592, 0.1277409791946411, 0.13675570487976074, 0.14574812352657318, 0.1547168642282486, 0.16366058588027954, 0.17257796227931976, 0.1814676970243454, 0.19032853841781616, 0.19915921986103058, 0.20795854926109314, 0.21672531962394714, 0.22545836865901947, 0.23415657877922058, 0.24281883239746094, 0.25144410133361816, 0.2600312829017639, 0.2685794234275818, 0.277087539434433, 0.2855546772480011, 0.2939799129962921, 0.3023624122142792, 0.31070128083229065, 0.31899574398994446, 0.32724499702453613, 0.33544832468032837, 0.34360501170158386, 0.3517143428325653, 0.35977569222450256, 0.3677884638309479, 0.3757520616054535, 0.38366591930389404, 0.39152956008911133, 0.39934244751930237, 0.40710416436195374, 0.414814293384552, 0.42247238755226135, 0.4300781488418579, 0.43763118982315063, 0.44513121247291565, 0.45257794857025146, 0.459971159696579, 0.4673106074333191, 0.4745960831642151, 0.48182743787765503, 0.4890044927597046, 0.4961271584033966, 0.5031953454017639, 0.5102089047431946, 0.517167866230011, 0.5240721702575684, 0.5309218168258667, 0.537716805934906, 0.5444571375846863, 0.5511429309844971, 0.5577742457389832, 0.5643510818481445, 0.5708736777305603, 0.5773420333862305, 0.5837563276290894, 0.5901167392730713, 0.5964234471321106, 0.6026766300201416, 0.6088764071464539, 0.6150230765342712, 0.6211168169975281, 0.6271578669548035, 0.6331464648246765, 0.6390828490257263, 0.6449673771858215, 0.6508002281188965, 0.6565817594528198, 0.6623122096061707, 0.6679918766021729, 0.6736211180686951, 0.6792002320289612, 0.6847295165061951, 0.6902093291282654, 0.695639967918396, 0.7010218501091003, 0.7063552737236023, 0.7116405963897705, 0.7168781757354736, 0.7220683097839355, 0.7272114753723145, 0.732308030128479, 0.7373582124710083, 0.7423625588417053, 0.747321367263794, 0.7522349953651428, 0.7571038007736206, 0.7619283199310303, 0.7667087316513062, 0.7714455723762512, 0.7761391401290894, 0.7807899117469788, 0.7853981852531433, 0.7899643182754517, 0.7944888472557068, 0.7989720106124878, 0.8034142255783081, 0.8078159093856812, 0.8121774792671204, 0.8164992332458496, 0.8207816481590271, 0.8250249624252319, 0.8292297124862671, 0.8333961963653564, 0.8375248312950134, 0.8416159152984619, 0.8456699252128601, 0.8496870994567871, 0.8536679744720459, 0.8576127886772156, 0.8615219593048096, -0.8653958439826965, -0.8615219593048096, -0.8576127886772156, -0.8536679744720459, -0.8496870994567871, -0.8456699252128601, -0.8416159152984619, -0.8375248312950134, -0.8333961963653564, -0.8292297124862671, -0.8250249624252319, -0.8207816481590271, -0.8164992332458496, -0.8121774792671204, -0.8078159093856812, -0.8034142255783081, -0.7989720106124878, -0.7944888472557068, -0.7899643182754517, -0.7853981852531433, -0.7807899117469788, -0.7761391401290894, -0.7714455723762512, -0.7667087316513062, -0.7619283199310303, -0.7571038007736206, -0.7522349953651428, -0.747321367263794, -0.7423625588417053, -0.7373582124710083, -0.732308030128479, -0.7272114753723145, -0.7220683097839355, -0.7168781757354736, -0.7116405963897705, -0.7063552737236023, -0.7010218501091003, -0.695639967918396, -0.6902093291282654, -0.6847295165061951, -0.6792002320289612, -0.6736211180686951, -0.6679918766021729, -0.6623122096061707, -0.6565817594528198, -0.6508002281188965, -0.6449673771858215, -0.6390828490257263, -0.6331464648246765, -0.6271578669548035, -0.6211168169975281, -0.6150230765342712, -0.6088764071464539, -0.6026766300201416, -0.5964234471321106, -0.5901167392730713, -0.5837563276290894, -0.5773420333862305, -0.5708736777305603, -0.5643510818481445, -0.5577742457389832, -0.5511429309844971, -0.5444571375846863, -0.537716805934906, -0.5309218168258667, -0.5240721702575684, -0.517167866230011, -0.5102089047431946, -0.5031953454017639, -0.4961271584033966, -0.4890044927597046, -0.48182743787765503, -0.4745960831642151, -0.4673106074333191, -0.459971159696579, -0.45257794857025146, -0.44513121247291565, -0.43763118982315063, -0.4300781488418579, -0.42247238755226135, -0.414814293384552, -0.40710416436195374, -0.39934244751930237, -0.39152956008911133, -0.38366591930389404, -0.3757520616054535, -0.3677884638309479, -0.35977569222450256, -0.3517143428325653, -0.34360501170158386, -0.33544832468032837, -0.32724499702453613, -0.31899574398994446, -0.31070128083229065, -0.3023624122142792, -0.2939799129962921, -0.2855546772480011, -0.277087539434433, -0.2685794234275818, -0.2600312829017639, -0.25144410133361816, -0.24281883239746094, -0.23415657877922058, -0.22545836865901947, -0.21672531962394714, -0.20795854926109314, -0.19915921986103058, -0.19032853841781616, -0.1814676970243454, -0.17257796227931976, -0.16366058588027954, -0.1547168642282486, -0.14574812352657318, -0.13675570487976074, -0.1277409791946411, -0.11870533972978592, -0.10965017229318619, -0.10057691484689713, -0.09148702025413513, -0.08238193392753601, -0.07326313108205795, -0.06413211673498154, -0.05499037355184555, -0.045839425176382065, -0.036680787801742554, -0.027515988796949387, -0.01834656484425068, -0.009174054488539696, 0.0, 0.009090658277273178, 0.018179815262556076, 0.027265967801213264, 0.03634762018918991, 0.04542328044772148, 0.05449145659804344, 0.0635506734251976, 0.07259945571422577, 0.08163633942604065, 0.09065988659858704, 0.09966865181922913, 0.1086612194776535, 0.11763617396354675, 0.12659212946891785, 0.13552771508693695, 0.14444157481193542, 0.15333238244056702, 0.16219882667064667, 0.1710396260023117, 0.17985349893569946, 0.18863922357559204, 0.19739556312561035, 0.20612134039402008, 0.2148153930902481, 0.2234766036272049, 0.2321038395166397, 0.2406960278749466, 0.24925214052200317, 0.2577711343765259, 0.2662520408630371, 0.27469390630722046, 0.2830957770347595, 0.29145678877830505, 0.2997760772705078, 0.30805277824401855, 0.3162861168384552, 0.32447534799575806, 0.33261969685554504, 0.34071847796440125, 0.34877100586891174, 0.3567766547203064, 0.36473482847213745, 0.37264490127563477, 0.38050636649131775, 0.3883187174797058, 0.39608144760131836, 0.4037940800189972, 0.41145625710487366, 0.41906750202178955, 0.4266274869441986, 0.43413588404655457, 0.44159236550331116, 0.4489966332912445, 0.4563484787940979, 0.46364760398864746, 0.47089385986328125, 0.47808703780174255, 0.48522698879241943, 0.49231359362602234, 0.4993467330932617, 0.5063263177871704, 0.5132522583007812, 0.520124614238739, 0.5269432067871094, 0.5337082147598267, 0.5404195189476013, 0.5470771789550781, 0.5536813139915466, 0.5602319836616516, 0.5667291879653931, 0.5731731653213501, 0.5795639753341675, 0.5859017372131348, 0.592186689376831, 0.5984188914299011, 0.6045985817909241, 0.6107259392738342, 0.6168012022972107, 0.6228246092796326, 0.6287962794303894, 0.6347165703773499, 0.6405856609344482, 0.6464038491249084, 0.6521714329719543, 0.6578885912895203, 0.6635557413101196, 0.6691730618476868, 0.6747409701347351, 0.680259644985199, 0.6857295036315918, 0.6911508440971375, 0.6965239644050598, 0.7018492817878723, 0.707127034664154, 0.7123575806617737, 0.7175413370132446, 0.7226786017417908, 0.7277697324752808, 0.7328150868415833, 0.7378150820732117, 0.7427699565887451, 0.7476801872253418, 0.7525461316108704, 0.7573681473731995, 0.762146532535553, 0.7668817639350891, 0.7715741395950317, 0.7762241363525391, 0.7808319926261902, 0.7853981852531433, 0.7899230122566223, 0.7944069504737854, 0.7988502383232117, 0.8032534122467041, 0.8076167106628418, 0.811940610408783, 0.8162254095077515, 0.820471465587616, 0.8246792554855347, 0.8288490772247314, 0.832981288433075, 0.8370762467384338, 0.8411343693733215, 0.8451560139656067, 0.8491414785385132, 0.8530911803245544, 0.8570054769515991, -0.8608847260475159, -0.8570054769515991, -0.8530911803245544, -0.8491414785385132, -0.8451560139656067, -0.8411343693733215, -0.8370762467384338, -0.832981288433075, -0.8288490772247314, -0.8246792554855347, -0.820471465587616, -0.8162254095077515, -0.811940610408783, -0.8076167106628418, -0.8032534122467041, -0.7988502383232117, -0.7944069504737854, -0.7899230122566223, -0.7853981852531433, -0.7808319926261902, -0.7762241363525391, -0.7715741395950317, -0.7668817639350891, -0.762146532535553, -0.7573681473731995, -0.7525461316108704, -0.7476801872253418, -0.7427699565887451, -0.7378150820732117, -0.7328150868415833, -0.7277697324752808, -0.7226786017417908, -0.7175413370132446, -0.7123575806617737, -0.707127034664154, -0.7018492817878723, -0.6965239644050598, -0.6911508440971375, -0.6857295036315918, -0.680259644985199, -0.6747409701347351, -0.6691730618476868, -0.6635557413101196, -0.6578885912895203, -0.6521714329719543, -0.6464038491249084, -0.6405856609344482, -0.6347165703773499, -0.6287962794303894, -0.6228246092796326, -0.6168012022972107, -0.6107259392738342, -0.6045985817909241, -0.5984188914299011, -0.592186689376831, -0.5859017372131348, -0.5795639753341675, -0.5731731653213501, -0.5667291879653931, -0.5602319836616516, -0.5536813139915466, -0.5470771789550781, -0.5404195189476013, -0.5337082147598267, -0.5269432067871094, -0.520124614238739, -0.5132522583007812, -0.5063263177871704, -0.4993467330932617, -0.49231359362602234, -0.48522698879241943, -0.47808703780174255, -0.47089385986328125, -0.46364760398864746, -0.4563484787940979, -0.4489966332912445, -0.44159236550331116, -0.43413588404655457, -0.4266274869441986, -0.41906750202178955, -0.41145625710487366, -0.4037940800189972, -0.39608144760131836, -0.3883187174797058, -0.38050636649131775, -0.37264490127563477, -0.36473482847213745, -0.3567766547203064, -0.34877100586891174, -0.34071847796440125, -0.33261969685554504, -0.32447534799575806, -0.3162861168384552, -0.30805277824401855, -0.2997760772705078, -0.29145678877830505, -0.2830957770347595, -0.27469390630722046, -0.2662520408630371, -0.2577711343765259, -0.24925214052200317, -0.2406960278749466, -0.2321038395166397, -0.2234766036272049, -0.2148153930902481, -0.20612134039402008, -0.19739556312561035, -0.18863922357559204, -0.17985349893569946, -0.1710396260023117, -0.16219882667064667, -0.15333238244056702, -0.14444157481193542, -0.13552771508693695, -0.12659212946891785, -0.11763617396354675, -0.1086612194776535, -0.09966865181922913, -0.09065988659858704, -0.08163633942604065, -0.07259945571422577, -0.0635506734251976, -0.05449145659804344, -0.04542328044772148, -0.03634762018918991, -0.027265967801213264, -0.018179815262556076, -0.009090658277273178, 0.0, 0.00900876522064209, 0.018016068264842033, 0.027020448818802834, 0.03602045029401779, 0.04501461610198021, 0.054001498967409134, 0.06297966092824936, 0.07194767147302628, 0.08090409636497498, 0.08984754234552383, 0.09877659380435944, 0.10768987238407135, 0.11658600717782974, 0.12546363472938538, 0.1343214362859726, 0.14315809309482574, 0.15197227895259857, 0.1607627421617508, 0.16952821612358093, 0.1782674640417099, 0.1869792640209198, 0.1956624537706375, 0.20431587100028992, 0.2129383534193039, 0.2215287983417511, 0.23008614778518677, 0.23860932886600494, 0.24709729850292206, 0.2555491030216217, 0.2639637291431427, 0.2723402678966522, 0.28067776560783386, 0.28897541761398315, 0.2972323000431061, 0.30544763803482056, 0.3136206567287445, 0.32175055146217346, 0.3298366367816925, 0.33787819743156433, 0.345874547958374, 0.3538251221179962, 0.361729234457016, 0.36958637833595276, 0.37739595770835876, 0.3851574957370758, 0.3928705155849457, 0.4005345106124878, 0.4081490933895111, 0.4157138764858246, 0.4232284724712372, 0.43069252371788025, 0.4381057322025299, 0.4454677999019623, 0.4527784585952759, 0.4600375294685364, 0.4672447144985199, 0.4743998944759369, 0.48150286078453064, 0.4885534942150116, 0.4955516755580902, 0.5024973154067993, 0.5093903541564941, 0.5162306427955627, 0.5230183005332947, 0.5297532677650452, 0.5364354848861694, 0.5430650115013123, 0.5496419072151184, 0.5561662316322327, 0.5626380443572998, 0.5690575242042542, 0.5754246711730957, 0.5817396640777588, 0.588002622127533, 0.5942137241363525, 0.6003730893135071, 0.6064810156822205, 0.6125375628471375, 0.6185430288314819, 0.6244975328445435, 0.6304014325141907, 0.6362548470497131, 0.6420581340789795, 0.6478114128112793, 0.653515100479126, 0.6591693162918091, 0.664774477481842, 0.670330822467804, 0.6758386492729187, 0.6812981963157654, 0.6867098808288574, 0.6920740008354187, 0.6973907947540283, 0.7026606202125549, 0.707883894443512, 0.7130608558654785, 0.7181918621063232, 0.72327721118927, 0.728317379951477, 0.7333126068115234, 0.7382633090019226, 0.7431697845458984, 0.7480323910713196, 0.7528515458106995, 0.757627546787262, 0.7623607516288757, 0.7670515775680542, 0.771700382232666, 0.7763075232505798, 0.7808732986450195, 0.7853981852531433, 0.7898824214935303, 0.7943264842033386, 0.798730731010437, 0.8030954599380493, 0.8074210286140442, 0.8117078542709351, 0.8159563541412354, 0.8201667666435242, 0.8243395090103149, 0.8284749388694763, 0.832573413848877, 0.8366353511810303, 0.8406609892845154, 0.8446507453918457, 0.8486049771308899, 0.8525240421295166, -0.8564082980155945, -0.8525240421295166, -0.8486049771308899, -0.8446507453918457, -0.8406609892845154, -0.8366353511810303, -0.832573413848877, -0.8284749388694763, -0.8243395090103149, -0.8201667666435242, -0.8159563541412354, -0.8117078542709351, -0.8074210286140442, -0.8030954599380493, -0.798730731010437, -0.7943264842033386, -0.7898824214935303, -0.7853981852531433, -0.7808732986450195, -0.7763075232505798, -0.771700382232666, -0.7670515775680542, -0.7623607516288757, -0.757627546787262, -0.7528515458106995, -0.7480323910713196, -0.7431697845458984, -0.7382633090019226, -0.7333126068115234, -0.728317379951477, -0.72327721118927, -0.7181918621063232, -0.7130608558654785, -0.707883894443512, -0.7026606202125549, -0.6973907947540283, -0.6920740008354187, -0.6867098808288574, -0.6812981963157654, -0.6758386492729187, -0.670330822467804, -0.664774477481842, -0.6591693162918091, -0.653515100479126, -0.6478114128112793, -0.6420581340789795, -0.6362548470497131, -0.6304014325141907, -0.6244975328445435, -0.6185430288314819, -0.6125375628471375, -0.6064810156822205, -0.6003730893135071, -0.5942137241363525, -0.588002622127533, -0.5817396640777588, -0.5754246711730957, -0.5690575242042542, -0.5626380443572998, -0.5561662316322327, -0.5496419072151184, -0.5430650115013123, -0.5364354848861694, -0.5297532677650452, -0.5230183005332947, -0.5162306427955627, -0.5093903541564941, -0.5024973154067993, -0.4955516755580902, -0.4885534942150116, -0.48150286078453064, -0.4743998944759369, -0.4672447144985199, -0.4600375294685364, -0.4527784585952759, -0.4454677999019623, -0.4381057322025299, -0.43069252371788025, -0.4232284724712372, -0.4157138764858246, -0.4081490933895111, -0.4005345106124878, -0.3928705155849457, -0.3851574957370758, -0.37739595770835876, -0.36958637833595276, -0.361729234457016, -0.3538251221179962, -0.345874547958374, -0.33787819743156433, -0.3298366367816925, -0.32175055146217346, -0.3136206567287445, -0.30544763803482056, -0.2972323000431061, -0.28897541761398315, -0.28067776560783386, -0.2723402678966522, -0.2639637291431427, -0.2555491030216217, -0.24709729850292206, -0.23860932886600494, -0.23008614778518677, -0.2215287983417511, -0.2129383534193039, -0.20431587100028992, -0.1956624537706375, -0.1869792640209198, -0.1782674640417099, -0.16952821612358093, -0.1607627421617508, -0.15197227895259857, -0.14315809309482574, -0.1343214362859726, -0.12546363472938538, -0.11658600717782974, -0.10768987238407135, -0.09877659380435944, -0.08984754234552383, -0.08090409636497498, -0.07194767147302628, -0.06297966092824936, -0.054001498967409134, -0.04501461610198021, -0.03602045029401779, -0.027020448818802834, -0.018016068264842033, -0.00900876522064209, 0.0, 0.008928334340453148, 0.017855245620012283, 0.026779310777783394, 0.035699114203453064, 0.04461323469877243, 0.05352026969194412, 0.06241881102323532, 0.0713074654340744, 0.08018484711647034, 0.08904958516359329, 0.09790030866861343, 0.10673566907644272, 0.1155543401837349, 0.12435499578714371, 0.1331363320350647, 0.141897052526474, 0.15063591301441193, 0.159351646900177, 0.16804303228855133, 0.1767088621854782, 0.18534794449806213, 0.19395914673805237, 0.2025413066148758, 0.21109333634376526, 0.21961411833763123, 0.22810262441635132, 0.23655781149864197, 0.244978666305542, 0.2533642053604126, 0.26171350479125977, 0.2700256109237671, 0.2782996594905853, 0.28653475642204285, 0.2947300970554352, 0.30288487672805786, 0.3109982907772064, 0.31906959414482117, 0.3270981013774872, 0.33508309721946716, 0.3430239260196686, 0.3509199917316437, 0.3587706685066223, 0.3665753901004791, 0.37433362007141113, 0.38204485177993774, 0.38970857858657837, 0.3973243534564972, 0.4048917889595032, 0.4124104380607605, 0.4198799431324005, 0.42729997634887695, 0.43467020988464355, 0.44199034571647644, 0.4492601156234741, 0.4564792811870575, 0.46364760398864746, 0.4707649350166321, 0.47783106565475464, 0.4848458468914032, 0.4918091893196106, 0.4987209439277649, 0.5055810809135437, 0.5123894810676575, 0.5191460847854614, 0.5258510112762451, 0.5325040817260742, 0.5391054153442383, 0.5456550717353821, 0.5521529912948608, 0.5585992932319641, 0.5649940967559814, 0.5713374614715576, 0.5776295065879822, 0.5838704109191895, 0.5900602340698242, 0.5961991548538208, 0.6022873520851135, 0.6083250045776367, 0.6143122911453247, 0.6202495098114014, 0.6261367201805115, 0.6319742202758789, 0.6377623081207275, 0.6435011029243469, 0.6491909623146057, 0.6548320651054382, 0.6604247689247131, 0.6659692525863647, 0.6714658737182617, 0.6769148707389832, 0.6823165416717529, 0.6876712441444397, 0.6929792761802673, 0.6982408761978149, 0.703456461429596, 0.7086262702941895, 0.7137506604194641, 0.7188299894332886, 0.7238645553588867, 0.7288547158241272, 0.7338008284568787, 0.7387031316757202, 0.7435621023178101, 0.7483780384063721, 0.7531512975692749, 0.7578821778297424, 0.7625710964202881, 0.7672183513641357, 0.7718243598937988, 0.7763894200325012, 0.7809138894081116, 0.7853981852531433, 0.7898426055908203, 0.7942475080490112, 0.7986132502555847, 0.8029402494430542, 0.8072287440299988, 0.8114792108535767, 0.8156919479370117, 0.8198672533035278, 0.8240056037902832, 0.8281072378158569, 0.8321725130081177, 0.8362018465995789, 0.8401955962181091, 0.8441540002822876, 0.8480774760246277, -0.8519663214683533, -0.8480774760246277, -0.8441540002822876, -0.8401955962181091, -0.8362018465995789, -0.8321725130081177, -0.8281072378158569, -0.8240056037902832, -0.8198672533035278, -0.8156919479370117, -0.8114792108535767, -0.8072287440299988, -0.8029402494430542, -0.7986132502555847, -0.7942475080490112, -0.7898426055908203, -0.7853981852531433, -0.7809138894081116, -0.7763894200325012, -0.7718243598937988, -0.7672183513641357, -0.7625710964202881, -0.7578821778297424, -0.7531512975692749, -0.7483780384063721, -0.7435621023178101, -0.7387031316757202, -0.7338008284568787, -0.7288547158241272, -0.7238645553588867, -0.7188299894332886, -0.7137506604194641, -0.7086262702941895, -0.703456461429596, -0.6982408761978149, -0.6929792761802673, -0.6876712441444397, -0.6823165416717529, -0.6769148707389832, -0.6714658737182617, -0.6659692525863647, -0.6604247689247131, -0.6548320651054382, -0.6491909623146057, -0.6435011029243469, -0.6377623081207275, -0.6319742202758789, -0.6261367201805115, -0.6202495098114014, -0.6143122911453247, -0.6083250045776367, -0.6022873520851135, -0.5961991548538208, -0.5900602340698242, -0.5838704109191895, -0.5776295065879822, -0.5713374614715576, -0.5649940967559814, -0.5585992932319641, -0.5521529912948608, -0.5456550717353821, -0.5391054153442383, -0.5325040817260742, -0.5258510112762451, -0.5191460847854614, -0.5123894810676575, -0.5055810809135437, -0.4987209439277649, -0.4918091893196106, -0.4848458468914032, -0.47783106565475464, -0.4707649350166321, -0.46364760398864746, -0.4564792811870575, -0.4492601156234741, -0.44199034571647644, -0.43467020988464355, -0.42729997634887695, -0.4198799431324005, -0.4124104380607605, -0.4048917889595032, -0.3973243534564972, -0.38970857858657837, -0.38204485177993774, -0.37433362007141113, -0.3665753901004791, -0.3587706685066223, -0.3509199917316437, -0.3430239260196686, -0.33508309721946716, -0.3270981013774872, -0.31906959414482117, -0.3109982907772064, -0.30288487672805786, -0.2947300970554352, -0.28653475642204285, -0.2782996594905853, -0.2700256109237671, -0.26171350479125977, -0.2533642053604126, -0.244978666305542, -0.23655781149864197, -0.22810262441635132, -0.21961411833763123, -0.21109333634376526, -0.2025413066148758, -0.19395914673805237, -0.18534794449806213, -0.1767088621854782, -0.16804303228855133, -0.159351646900177, -0.15063591301441193, -0.141897052526474, -0.1331363320350647, -0.12435499578714371, -0.1155543401837349, -0.10673566907644272, -0.09790030866861343, -0.08904958516359329, -0.08018484711647034, -0.0713074654340744, -0.06241881102323532, -0.05352026969194412, -0.04461323469877243, -0.035699114203453064, -0.026779310777783394, -0.017855245620012283, -0.008928334340453148, 0.0, 0.008849326521158218, 0.01769726723432541, 0.026542438194155693, 0.03538345545530319, 0.04421894624829292, 0.053047530353069305, 0.0618678443133831, 0.07067853212356567, 0.07947824150323868, 0.08826563507318497, 0.09703938663005829, 0.10579816997051239, 0.114540696144104, 0.12326566874980927, 0.1319718211889267, 0.14065790176391602, 0.14932265877723694, 0.15796490013599396, 0.16658340394496918, 0.17517699301242828, 0.18374453485012054, 0.19228486716747284, 0.20079690217971802, 0.20927955210208893, 0.21773174405097961, 0.2261524349451065, 0.23454062640666962, 0.24289533495903015, 0.2512155771255493, 0.2595004737377167, 0.26774904131889343, 0.2759604752063751, 0.2841339111328125, 0.2922684848308563, 0.3003634512424469, 0.30841800570487976, 0.31643146276474, 0.3244030773639679, 0.33233216404914856, 0.34021809697151184, 0.34806028008461, 0.35585805773735046, 0.3636108934879303, 0.3713182806968689, 0.3789796531200409, 0.38659459352493286, 0.3941625952720642, 0.4016832411289215, 0.4091561436653137, 0.4165809452533722, 0.4239572584629059, 0.4312848150730133, 0.4385632574558258, 0.44579237699508667, 0.45297184586524963, 0.46010151505470276, 0.46718117594718933, 0.47421059012413025, 0.48118966817855835, 0.4881182610988617, 0.49499621987342834, 0.5018234848976135, 0.5085999965667725, 0.515325665473938, 0.5220005512237549, 0.5286244750022888, 0.5351976156234741, 0.541719913482666, 0.5481913685798645, 0.5546121001243591, 0.5609821677207947, 0.5673016309738159, 0.5735706090927124, 0.5797892212867737, 0.5859576463699341, 0.5920758843421936, 0.5981442332267761, 0.6041628122329712, 0.6101318001747131, 0.6160513758659363, 0.621921718120575, 0.627743124961853, 0.6335157155990601, 0.6392397880554199, 0.6449155211448669, 0.6505432724952698, 0.656123161315918, 0.6616555452346802, 0.6671406626701355, 0.6725788116455078, 0.6779702305793762, 0.6833152174949646, 0.6886141300201416, 0.6938672065734863, 0.6990747451782227, 0.7042371034622192, 0.7093545794487, 0.7144275307655334, 0.7194561958312988, 0.7244409322738647, 0.7293820381164551, 0.7342799305915833, 0.7391349077224731, 0.7439472675323486, 0.7487173676490784, 0.753445565700531, 0.7581322193145752, 0.76277756690979, 0.7673820853233337, 0.7719460725784302, 0.7764698266983032, 0.7809537649154663, 0.7853981852531433, 0.7898034453392029, 0.7941698431968689, 0.7984978556632996, 0.802787721157074, 0.8070397973060608, 0.8112544417381287, 0.815432071685791, 0.8195728659629822, 0.8236773014068604, 0.8277457356452942, 0.8317784070968628, 0.8357756733894348, 0.8397378921508789, 0.8436654806137085, -0.8475586175918579, -0.8436654806137085, -0.8397378921508789, -0.8357756733894348, -0.8317784070968628, -0.8277457356452942, -0.8236773014068604, -0.8195728659629822, -0.815432071685791, -0.8112544417381287, -0.8070397973060608, -0.802787721157074, -0.7984978556632996, -0.7941698431968689, -0.7898034453392029, -0.7853981852531433, -0.7809537649154663, -0.7764698266983032, -0.7719460725784302, -0.7673820853233337, -0.76277756690979, -0.7581322193145752, -0.753445565700531, -0.7487173676490784, -0.7439472675323486, -0.7391349077224731, -0.7342799305915833, -0.7293820381164551, -0.7244409322738647, -0.7194561958312988, -0.7144275307655334, -0.7093545794487, -0.7042371034622192, -0.6990747451782227, -0.6938672065734863, -0.6886141300201416, -0.6833152174949646, -0.6779702305793762, -0.6725788116455078, -0.6671406626701355, -0.6616555452346802, -0.656123161315918, -0.6505432724952698, -0.6449155211448669, -0.6392397880554199, -0.6335157155990601, -0.627743124961853, -0.621921718120575, -0.6160513758659363, -0.6101318001747131, -0.6041628122329712, -0.5981442332267761, -0.5920758843421936, -0.5859576463699341, -0.5797892212867737, -0.5735706090927124, -0.5673016309738159, -0.5609821677207947, -0.5546121001243591, -0.5481913685798645, -0.541719913482666, -0.5351976156234741, -0.5286244750022888, -0.5220005512237549, -0.515325665473938, -0.5085999965667725, -0.5018234848976135, -0.49499621987342834, -0.4881182610988617, -0.48118966817855835, -0.47421059012413025, -0.46718117594718933, -0.46010151505470276, -0.45297184586524963, -0.44579237699508667, -0.4385632574558258, -0.4312848150730133, -0.4239572584629059, -0.4165809452533722, -0.4091561436653137, -0.4016832411289215, -0.3941625952720642, -0.38659459352493286, -0.3789796531200409, -0.3713182806968689, -0.3636108934879303, -0.35585805773735046, -0.34806028008461, -0.34021809697151184, -0.33233216404914856, -0.3244030773639679, -0.31643146276474, -0.30841800570487976, -0.3003634512424469, -0.2922684848308563, -0.2841339111328125, -0.2759604752063751, -0.26774904131889343, -0.2595004737377167, -0.2512155771255493, -0.24289533495903015, -0.23454062640666962, -0.2261524349451065, -0.21773174405097961, -0.20927955210208893, -0.20079690217971802, -0.19228486716747284, -0.18374453485012054, -0.17517699301242828, -0.16658340394496918, -0.15796490013599396, -0.14932265877723694, -0.14065790176391602, -0.1319718211889267, -0.12326566874980927, -0.114540696144104, -0.10579816997051239, -0.09703938663005829, -0.08826563507318497, -0.07947824150323868, -0.07067853212356567, -0.0618678443133831, -0.053047530353069305, -0.04421894624829292, -0.03538345545530319, -0.026542438194155693, -0.01769726723432541, -0.008849326521158218, 0.0, 0.008771704509854317, 0.01754206046462059, 0.026309717446565628, 0.035073328763246536, 0.04383155703544617, 0.052583061158657074, 0.061326511204242706, 0.07006058096885681, 0.07878395915031433, 0.0874953418970108, 0.09619342535734177, 0.10487693548202515, 0.11354460567235947, 0.12219516932964325, 0.130827397108078, 0.13944005966186523, 0.14803194999694824, 0.15660187602043152, 0.16514867544174194, 0.1736712008714676, 0.18216830492019653, 0.19063889980316162, 0.1990818977355957, 0.20749622583389282, 0.2158808559179306, 0.22423474490642548, 0.23255693912506104, 0.2408464550971985, 0.24910235404968262, 0.2573237121105194, 0.2655096650123596, 0.2736593186855316, 0.28177186846733093, 0.2898464798927307, 0.29788240790367126, 0.3058788776397705, 0.31383514404296875, 0.32175055146217346, 0.3296244144439697, 0.337456077337265, 0.3452449142932892, 0.35299038887023926, 0.3606919050216675, 0.3683489263057709, 0.37596094608306885, 0.3835275173187256, 0.3910481631755829, 0.39852243661880493, 0.40594998002052307, 0.41333040595054626, 0.42066335678100586, 0.4279485046863556, 0.4351855516433716, 0.44237422943115234, 0.4495142698287964, 0.456605464220047, 0.46364760398864746, 0.47064051032066345, 0.47758397459983826, 0.4844779372215271, 0.49132218956947327, 0.49811670184135437, 0.5048613548278809, 0.5115561485290527, 0.5182009339332581, 0.5247957706451416, 0.5313406586647034, 0.5378355383872986, 0.544280469417572, 0.5506755709648132, 0.5570207834243774, 0.563316285610199, 0.5695620775222778, 0.5757583379745483, 0.5819051265716553, 0.588002622127533, 0.594050943851471, 0.6000502109527588, 0.6060006618499756, 0.6119024157524109, 0.6177557110786438, 0.6235607266426086, 0.6293176412582397, 0.635026752948761, 0.6406881809234619, 0.6463022232055664, 0.6518691182136536, 0.6573891043663025, 0.6628624796867371, 0.6682894229888916, 0.6736702919006348, 0.6790053248405457, 0.6842948198318481, 0.6895390152931213, 0.6947382688522339, 0.6998928785324097, 0.7050030827522278, 0.7100692987442017, 0.7150917053222656, 0.7200707197189331, 0.7250065803527832, 0.7298996448516846, 0.7347502708435059, 0.739558756351471, 0.7443253993988037, 0.7490505576133728, 0.7537345290184021, 0.758377730846405, 0.7629804015159607, 0.7675428986549377, 0.7720656394958496, 0.7765488624572754, 0.7809929251670837, 0.7853981852531433, 0.789764940738678, 0.7940936088562012, 0.798384428024292, 0.8026378154754639, 0.8068540692329407, 0.8110335469245911, 0.8151766061782837, 0.8192834854125977, 0.8233546018600464, 0.8273902535438538, 0.8313907980918884, 0.8353565335273743, 0.8392878174781799, -0.8431850075721741, -0.8392878174781799, -0.8353565335273743, -0.8313907980918884, -0.8273902535438538, -0.8233546018600464, -0.8192834854125977, -0.8151766061782837, -0.8110335469245911, -0.8068540692329407, -0.8026378154754639, -0.798384428024292, -0.7940936088562012, -0.789764940738678, -0.7853981852531433, -0.7809929251670837, -0.7765488624572754, -0.7720656394958496, -0.7675428986549377, -0.7629804015159607, -0.758377730846405, -0.7537345290184021, -0.7490505576133728, -0.7443253993988037, -0.739558756351471, -0.7347502708435059, -0.7298996448516846, -0.7250065803527832, -0.7200707197189331, -0.7150917053222656, -0.7100692987442017, -0.7050030827522278, -0.6998928785324097, -0.6947382688522339, -0.6895390152931213, -0.6842948198318481, -0.6790053248405457, -0.6736702919006348, -0.6682894229888916, -0.6628624796867371, -0.6573891043663025, -0.6518691182136536, -0.6463022232055664, -0.6406881809234619, -0.635026752948761, -0.6293176412582397, -0.6235607266426086, -0.6177557110786438, -0.6119024157524109, -0.6060006618499756, -0.6000502109527588, -0.594050943851471, -0.588002622127533, -0.5819051265716553, -0.5757583379745483, -0.5695620775222778, -0.563316285610199, -0.5570207834243774, -0.5506755709648132, -0.544280469417572, -0.5378355383872986, -0.5313406586647034, -0.5247957706451416, -0.5182009339332581, -0.5115561485290527, -0.5048613548278809, -0.49811670184135437, -0.49132218956947327, -0.4844779372215271, -0.47758397459983826, -0.47064051032066345, -0.46364760398864746, -0.456605464220047, -0.4495142698287964, -0.44237422943115234, -0.4351855516433716, -0.4279485046863556, -0.42066335678100586, -0.41333040595054626, -0.40594998002052307, -0.39852243661880493, -0.3910481631755829, -0.3835275173187256, -0.37596094608306885, -0.3683489263057709, -0.3606919050216675, -0.35299038887023926, -0.3452449142932892, -0.337456077337265, -0.3296244144439697, -0.32175055146217346, -0.31383514404296875, -0.3058788776397705, -0.29788240790367126, -0.2898464798927307, -0.28177186846733093, -0.2736593186855316, -0.2655096650123596, -0.2573237121105194, -0.24910235404968262, -0.2408464550971985, -0.23255693912506104, -0.22423474490642548, -0.2158808559179306, -0.20749622583389282, -0.1990818977355957, -0.19063889980316162, -0.18216830492019653, -0.1736712008714676, -0.16514867544174194, -0.15660187602043152, -0.14803194999694824, -0.13944005966186523, -0.130827397108078, -0.12219516932964325, -0.11354460567235947, -0.10487693548202515, -0.09619342535734177, -0.0874953418970108, -0.07878395915031433, -0.07006058096885681, -0.061326511204242706, -0.052583061158657074, -0.04383155703544617, -0.035073328763246536, -0.026309717446565628, -0.01754206046462059, -0.008771704509854317, 0.0, 0.008695432916283607, 0.017389550805091858, 0.026081040501594543, 0.034768592566251755, 0.04345089569687843, 0.052126649767160416, 0.06079455465078354, 0.06945332884788513, 0.07810167968273163, 0.08673834055662155, 0.09536204487085342, 0.10397154837846756, 0.11256561428308487, 0.12114301323890686, 0.12970253825187683, 0.13824298977851868, 0.14676319062709808, 0.15526199340820312, 0.16373823583126068, 0.1721908152103424, 0.18061861395835876, 0.1890205442905426, 0.19739556312561035, 0.20574261248111725, 0.2140606790781021, 0.22234877943992615, 0.23060593008995056, 0.23883119225502014, 0.24702365696430206, 0.2551823854446411, 0.26330655813217163, 0.2713952660560608, 0.2794477641582489, 0.2874632179737091, 0.29544082283973694, 0.30337992310523987, 0.3112797439098358, 0.31913959980010986, 0.3269588351249695, 0.33473682403564453, 0.34247297048568726, 0.3501666784286499, 0.3578173816204071, 0.36542457342147827, 0.3729877173900604, 0.38050636649131775, 0.38798007369041443, 0.39540839195251465, 0.40279096364974976, 0.41012734174728394, 0.4174172282218933, 0.4246602952480316, 0.4318562150001526, 0.43900471925735474, 0.4461055397987366, 0.45315849781036377, 0.46016329526901245, 0.46711981296539307, 0.4740278720855713, 0.4808872938156128, 0.487697958946228, 0.49445977807044983, 0.501172661781311, 0.5078365206718445, 0.5144513249397278, 0.5210170149803162, 0.5275335907936096, 0.5340011119842529, 0.5404195189476013, 0.5467888116836548, 0.5531091690063477, 0.5593805909156799, 0.5656030774116516, 0.5717768669128418, 0.5779019594192505, 0.5839784741401672, 0.5900065898895264, 0.5959864854812622, 0.6019182205200195, 0.6078019738197327, 0.6136379837989807, 0.619426429271698, 0.6251674890518188, 0.6308613419532776, 0.6365082263946533, 0.6421083807945251, 0.6476619839668274, 0.6531693339347839, 0.6586306095123291, 0.6640461683273315, 0.6694161891937256, 0.6747409701347351, 0.6800207495689392, 0.6852558255195618, 0.6904464364051819, 0.695592999458313, 0.7006956338882446, 0.7057547569274902, 0.7107706665992737, 0.7157436013221741, 0.7206738591194153, 0.7255618572235107, 0.7304077744483948, 0.7352120280265808, 0.739974856376648, 0.7446966767311096, 0.7493777275085449, 0.7540183067321777, 0.7586188316345215, 0.7631796002388, 0.7677009105682373, 0.7721830606460571, 0.776626467704773, 0.7810313701629639, 0.7853981852531433, 0.7897271513938904, 0.7940186262130737, 0.798272967338562, 0.8024905323982239, 0.8066715598106384, 0.8108164072036743, 0.8149254322052002, 0.8189989328384399, 0.8230372667312622, 0.8270407319068909, 0.8310096859931946, 0.8349443674087524, -0.8388451337814331, -0.8349443674087524, -0.8310096859931946, -0.8270407319068909, -0.8230372667312622, -0.8189989328384399, -0.8149254322052002, -0.8108164072036743, -0.8066715598106384, -0.8024905323982239, -0.798272967338562, -0.7940186262130737, -0.7897271513938904, -0.7853981852531433, -0.7810313701629639, -0.776626467704773, -0.7721830606460571, -0.7677009105682373, -0.7631796002388, -0.7586188316345215, -0.7540183067321777, -0.7493777275085449, -0.7446966767311096, -0.739974856376648, -0.7352120280265808, -0.7304077744483948, -0.7255618572235107, -0.7206738591194153, -0.7157436013221741, -0.7107706665992737, -0.7057547569274902, -0.7006956338882446, -0.695592999458313, -0.6904464364051819, -0.6852558255195618, -0.6800207495689392, -0.6747409701347351, -0.6694161891937256, -0.6640461683273315, -0.6586306095123291, -0.6531693339347839, -0.6476619839668274, -0.6421083807945251, -0.6365082263946533, -0.6308613419532776, -0.6251674890518188, -0.619426429271698, -0.6136379837989807, -0.6078019738197327, -0.6019182205200195, -0.5959864854812622, -0.5900065898895264, -0.5839784741401672, -0.5779019594192505, -0.5717768669128418, -0.5656030774116516, -0.5593805909156799, -0.5531091690063477, -0.5467888116836548, -0.5404195189476013, -0.5340011119842529, -0.5275335907936096, -0.5210170149803162, -0.5144513249397278, -0.5078365206718445, -0.501172661781311, -0.49445977807044983, -0.487697958946228, -0.4808872938156128, -0.4740278720855713, -0.46711981296539307, -0.46016329526901245, -0.45315849781036377, -0.4461055397987366, -0.43900471925735474, -0.4318562150001526, -0.4246602952480316, -0.4174172282218933, -0.41012734174728394, -0.40279096364974976, -0.39540839195251465, -0.38798007369041443, -0.38050636649131775, -0.3729877173900604, -0.36542457342147827, -0.3578173816204071, -0.3501666784286499, -0.34247297048568726, -0.33473682403564453, -0.3269588351249695, -0.31913959980010986, -0.3112797439098358, -0.30337992310523987, -0.29544082283973694, -0.2874632179737091, -0.2794477641582489, -0.2713952660560608, -0.26330655813217163, -0.2551823854446411, -0.24702365696430206, -0.23883119225502014, -0.23060593008995056, -0.22234877943992615, -0.2140606790781021, -0.20574261248111725, -0.19739556312561035, -0.1890205442905426, -0.18061861395835876, -0.1721908152103424, -0.16373823583126068, -0.15526199340820312, -0.14676319062709808, -0.13824298977851868, -0.12970253825187683, -0.12114301323890686, -0.11256561428308487, -0.10397154837846756, -0.09536204487085342, -0.08673834055662155, -0.07810167968273163, -0.06945332884788513, -0.06079455465078354, -0.052126649767160416, -0.04345089569687843, -0.034768592566251755, -0.026081040501594543, -0.017389550805091858, -0.008695432916283607, 0.0, 0.008620476350188255, 0.01723967120051384, 0.02585630491375923, 0.03446910157799721, 0.043076783418655396, 0.05167808383703232, 0.0602717399597168, 0.06885649263858795, 0.0774310901761055, 0.08599428832530975, 0.09454487264156342, 0.1030816063284874, 0.11160329729318619, 0.12010873854160309, 0.12859675288200378, 0.13706617057323456, 0.14551585912704468, 0.15394467115402222, 0.16235148906707764, 0.1707352101802826, 0.17909477651119232, 0.18742911517620087, 0.19573718309402466, 0.2040179818868637, 0.21227049827575684, 0.22049376368522644, 0.22868682444095612, 0.23684875667095184, 0.244978666305542, 0.25307565927505493, 0.2611388862133026, 0.2691674828529358, 0.2771607041358948, 0.2851177453994751, 0.2930378317832947, 0.3009202480316162, 0.3087642788887024, 0.3165692389011383, 0.3243345320224762, 0.33205947279930115, 0.3397434651851654, 0.347385972738266, 0.35498639941215515, 0.3625442385673523, 0.37005898356437683, 0.37753018736839294, 0.38495737314224243, 0.39234015345573425, 0.3996780812740326, 0.4069707989692688, 0.4142179489135742, 0.4214192032814026, 0.42857426404953003, 0.43568286299705505, 0.44274473190307617, 0.4497596025466919, 0.4567272961139679, 0.46364760398864746, 0.47052034735679626, 0.47734537720680237, 0.4841225743293762, 0.4908517897129059, 0.4975329339504242, 0.5041659474372864, 0.5107507705688477, 0.5172873735427856, 0.5237756967544556, 0.5302157998085022, 0.536607563495636, 0.5429511666297913, 0.5492464900016785, 0.5554937124252319, 0.5616928935050964, 0.567844033241272, 0.5739473104476929, 0.5800027847290039, 0.5860105752944946, 0.5919708609580994, 0.5978837013244629, 0.6037493348121643, 0.6095678806304932, 0.6153395175933838, 0.6210644841194153, 0.6267428994178772, 0.6323750019073486, 0.6379609704017639, 0.6435011029243469, 0.648995578289032, 0.6544445753097534, 0.6598484516143799, 0.6652073264122009, 0.6705215573310852, 0.6757913827896118, 0.6810169816017151, 0.6861987709999084, 0.6913369297981262, 0.6964317560195923, 0.7014835476875305, 0.70649254322052, 0.7114591002464294, 0.7163835167884827, 0.7212660312652588, 0.7261070013046265, 0.7309067249298096, 0.7356654405593872, 0.7403835654258728, 0.7450613379478455, 0.749699056148529, 0.7542970776557922, 0.7588557004928589, 0.7633752822875977, 0.7678561210632324, 0.7722984552383423, 0.7767027020454407, 0.7810691595077515, 0.7853981852531433, 0.7896899580955505, 0.7939449548721313, 0.7981634140014648, 0.8023456931114197, 0.8064920902252197, 0.8106029033660889, 0.8146784901618958, 0.8187191486358643, 0.822725236415863, 0.8266969919204712, 0.8306347727775574, -0.8345388770103455, -0.8306347727775574, -0.8266969919204712, -0.822725236415863, -0.8187191486358643, -0.8146784901618958, -0.8106029033660889, -0.8064920902252197, -0.8023456931114197, -0.7981634140014648, -0.7939449548721313, -0.7896899580955505, -0.7853981852531433, -0.7810691595077515, -0.7767027020454407, -0.7722984552383423, -0.7678561210632324, -0.7633752822875977, -0.7588557004928589, -0.7542970776557922, -0.749699056148529, -0.7450613379478455, -0.7403835654258728, -0.7356654405593872, -0.7309067249298096, -0.7261070013046265, -0.7212660312652588, -0.7163835167884827, -0.7114591002464294, -0.70649254322052, -0.7014835476875305, -0.6964317560195923, -0.6913369297981262, -0.6861987709999084, -0.6810169816017151, -0.6757913827896118, -0.6705215573310852, -0.6652073264122009, -0.6598484516143799, -0.6544445753097534, -0.648995578289032, -0.6435011029243469, -0.6379609704017639, -0.6323750019073486, -0.6267428994178772, -0.6210644841194153, -0.6153395175933838, -0.6095678806304932, -0.6037493348121643, -0.5978837013244629, -0.5919708609580994, -0.5860105752944946, -0.5800027847290039, -0.5739473104476929, -0.567844033241272, -0.5616928935050964, -0.5554937124252319, -0.5492464900016785, -0.5429511666297913, -0.536607563495636, -0.5302157998085022, -0.5237756967544556, -0.5172873735427856, -0.5107507705688477, -0.5041659474372864, -0.4975329339504242, -0.4908517897129059, -0.4841225743293762, -0.47734537720680237, -0.47052034735679626, -0.46364760398864746, -0.4567272961139679, -0.4497596025466919, -0.44274473190307617, -0.43568286299705505, -0.42857426404953003, -0.4214192032814026, -0.4142179489135742, -0.4069707989692688, -0.3996780812740326, -0.39234015345573425, -0.38495737314224243, -0.37753018736839294, -0.37005898356437683, -0.3625442385673523, -0.35498639941215515, -0.347385972738266, -0.3397434651851654, -0.33205947279930115, -0.3243345320224762, -0.3165692389011383, -0.3087642788887024, -0.3009202480316162, -0.2930378317832947, -0.2851177453994751, -0.2771607041358948, -0.2691674828529358, -0.2611388862133026, -0.25307565927505493, -0.244978666305542, -0.23684875667095184, -0.22868682444095612, -0.22049376368522644, -0.21227049827575684, -0.2040179818868637, -0.19573718309402466, -0.18742911517620087, -0.17909477651119232, -0.1707352101802826, -0.16235148906707764, -0.15394467115402222, -0.14551585912704468, -0.13706617057323456, -0.12859675288200378, -0.12010873854160309, -0.11160329729318619, -0.1030816063284874, -0.09454487264156342, -0.08599428832530975, -0.0774310901761055, -0.06885649263858795, -0.0602717399597168, -0.05167808383703232, -0.043076783418655396, -0.03446910157799721, -0.02585630491375923, -0.01723967120051384, -0.008620476350188255, 0.0, 0.008546800352633, 0.017092352733016014, 0.025635408237576485, 0.03417472541332245, 0.04270905628800392, 0.05123716592788696, 0.05975782498717308, 0.06826980412006378, 0.07677189260721207, 0.08526287227869034, 0.09374154359102249, 0.10220671445131302, 0.1106572225689888, 0.11909188330173492, 0.12750956416130066, 0.1359090954065323, 0.14428938925266266, 0.15264932811260223, 0.16098780930042267, 0.1693037748336792, 0.17759616672992706, 0.1858639419078827, 0.1941061019897461, 0.2023216336965561, 0.21050956845283508, 0.21866895258426666, 0.22679884731769562, 0.23489835858345032, 0.24296659231185913, 0.251002699136734, 0.2590057849884033, 0.2669751048088074, 0.2749098539352417, 0.28280919790267944, 0.2906724810600281, 0.2984989285469055, 0.30628785490989685, 0.31403863430023193, 0.32175055146217346, 0.32942304015159607, 0.3370554745197296, 0.3446473181247711, 0.3521980047225952, 0.3597069978713989, 0.36717382073402405, 0.37459802627563477, 0.3819791376590729, 0.38931670784950256, 0.39661040902137756, 0.40385979413986206, 0.4110645353794098, 0.4182243347167969, 0.42533883452415466, 0.43240776658058167, 0.4394308924674988, 0.4464079439640045, 0.4533386826515198, 0.4602229595184326, 0.46706056594848633, 0.4738513231277466, 0.4805951416492462, 0.4872918426990509, 0.49394136667251587, 0.5005435943603516, 0.5070984959602356, 0.5136060118675232, 0.5200660824775696, 0.5264787077903748, 0.5328438878059387, 0.5391616225242615, 0.5454319715499878, 0.5516549944877625, 0.5578306913375854, 0.5639591217041016, 0.5700404644012451, 0.5760747194290161, 0.5820620656013489, 0.588002622127533, 0.5938964486122131, 0.5997437238693237, 0.6055446863174438, 0.6112993359565735, 0.6170080304145813, 0.6226707696914673, 0.6282879114151001, 0.6338595151901245, 0.6393858790397644, 0.6448672413825989, 0.6503037214279175, 0.6556956171989441, 0.6610431671142578, 0.6663466095924377, 0.671606183052063, 0.6768221259117126, 0.6819946765899658, 0.6871241927146912, 0.6922109127044678, 0.6972550749778748, 0.7022569179534912, 0.7072168588638306, 0.7121350169181824, 0.7170118093490601, 0.7218474745750427, 0.726642370223999, 0.7313966751098633, 0.7361107468605042, 0.7407849431037903, 0.7454195022583008, 0.7500147223472595, 0.7545709013938904, 0.7590884566307068, 0.7635675668716431, 0.7680085897445679, 0.7724118828773499, 0.7767776846885681, 0.7811063528060913, 0.7853981852531433, 0.789653480052948, 0.7938725352287292, 0.7980557084083557, 0.8022032976150513, 0.8063156008720398, 0.8103929758071899, 0.8144356608390808, 0.8184439539909363, 0.8224182724952698, 0.8263588547706604, -0.830265998840332, -0.8263588547706604, -0.8224182724952698, -0.8184439539909363, -0.8144356608390808, -0.8103929758071899, -0.8063156008720398, -0.8022032976150513, -0.7980557084083557, -0.7938725352287292, -0.789653480052948, -0.7853981852531433, -0.7811063528060913, -0.7767776846885681, -0.7724118828773499, -0.7680085897445679, -0.7635675668716431, -0.7590884566307068, -0.7545709013938904, -0.7500147223472595, -0.7454195022583008, -0.7407849431037903, -0.7361107468605042, -0.7313966751098633, -0.726642370223999, -0.7218474745750427, -0.7170118093490601, -0.7121350169181824, -0.7072168588638306, -0.7022569179534912, -0.6972550749778748, -0.6922109127044678, -0.6871241927146912, -0.6819946765899658, -0.6768221259117126, -0.671606183052063, -0.6663466095924377, -0.6610431671142578, -0.6556956171989441, -0.6503037214279175, -0.6448672413825989, -0.6393858790397644, -0.6338595151901245, -0.6282879114151001, -0.6226707696914673, -0.6170080304145813, -0.6112993359565735, -0.6055446863174438, -0.5997437238693237, -0.5938964486122131, -0.588002622127533, -0.5820620656013489, -0.5760747194290161, -0.5700404644012451, -0.5639591217041016, -0.5578306913375854, -0.5516549944877625, -0.5454319715499878, -0.5391616225242615, -0.5328438878059387, -0.5264787077903748, -0.5200660824775696, -0.5136060118675232, -0.5070984959602356, -0.5005435943603516, -0.49394136667251587, -0.4872918426990509, -0.4805951416492462, -0.4738513231277466, -0.46706056594848633, -0.4602229595184326, -0.4533386826515198, -0.4464079439640045, -0.4394308924674988, -0.43240776658058167, -0.42533883452415466, -0.4182243347167969, -0.4110645353794098, -0.40385979413986206, -0.39661040902137756, -0.38931670784950256, -0.3819791376590729, -0.37459802627563477, -0.36717382073402405, -0.3597069978713989, -0.3521980047225952, -0.3446473181247711, -0.3370554745197296, -0.32942304015159607, -0.32175055146217346, -0.31403863430023193, -0.30628785490989685, -0.2984989285469055, -0.2906724810600281, -0.28280919790267944, -0.2749098539352417, -0.2669751048088074, -0.2590057849884033, -0.251002699136734, -0.24296659231185913, -0.23489835858345032, -0.22679884731769562, -0.21866895258426666, -0.21050956845283508, -0.2023216336965561, -0.1941061019897461, -0.1858639419078827, -0.17759616672992706, -0.1693037748336792, -0.16098780930042267, -0.15264932811260223, -0.14428938925266266, -0.1359090954065323, -0.12750956416130066, -0.11909188330173492, -0.1106572225689888, -0.10220671445131302, -0.09374154359102249, -0.08526287227869034, -0.07677189260721207, -0.06826980412006378, -0.05975782498717308, -0.05123716592788696, -0.04270905628800392, -0.03417472541332245, -0.025635408237576485, -0.017092352733016014, -0.008546800352633, 0.0, 0.008474373258650303, 0.016947530210018158, 0.025418253615498543, 0.03388532996177673, 0.04234755039215088, 0.05080370232462883, 0.05925259366631508, 0.06769302487373352, 0.07612380385398865, 0.08454375714063644, 0.0929517075419426, 0.10134650021791458, 0.10972698777914047, 0.11809203028678894, 0.12644049525260925, 0.13477128744125366, 0.14308328926563263, 0.1513754427433014, 0.159646674990654, 0.16789592802524567, 0.17612217366695404, 0.18432441353797913, 0.19250163435935974, 0.20065288245677948, 0.20877718925476074, 0.21687361598014832, 0.22494126856327057, 0.23297923803329468, 0.2409866750240326, 0.24896270036697388, 0.25690653920173645, 0.26481732726097107, 0.27269434928894043, 0.28053680062294006, 0.28834396600723267, 0.2961151599884033, 0.3038496673107147, 0.31154683232307434, 0.31920602917671204, 0.32682666182518005, 0.33440810441970825, 0.34194982051849365, 0.3494512736797333, 0.35691192746162415, 0.36433130502700806, 0.3717089593410492, 0.37904438376426697, 0.3863372206687927, 0.39358702301979065, 0.4007934629917145, 0.4079561233520508, 0.41507473587989807, 0.4221489429473877, 0.42917850613594055, 0.43616312742233276, 0.44310256838798523, 0.44999659061431885, 0.4568449854850769, 0.46364760398864746, 0.4704042673110962, 0.47711479663848877, 0.48377910256385803, 0.49039706587791443, 0.4969685971736908, 0.50349360704422, 0.5099720358848572, 0.5164039134979248, 0.5227890610694885, 0.5291276574134827, 0.5354195237159729, 0.5416648387908936, 0.5478635430335999, 0.5540156960487366, 0.5601213574409485, 0.5661806464195251, 0.5721936225891113, 0.5781604051589966, 0.5840810537338257, 0.589955747127533, 0.5957845449447632, 0.6015676856040955, 0.6073052287101746, 0.6129974126815796, 0.6186443567276001, 0.6242462396621704, 0.6298033595085144, 0.6353157758712769, 0.6407837271690369, 0.6462074518203735, 0.651587188243866, 0.6569231152534485, 0.662215530872345, 0.667464554309845, 0.6726705431938171, 0.6778337359428406, 0.6829543113708496, 0.6880325675010681, 0.69306880235672, 0.698063313961029, 0.7030162215232849, 0.707927942276001, 0.7127987146377563, 0.7176287770271301, 0.722418487071991, 0.727168083190918, 0.7318779230117798, 0.7365481853485107, 0.7411792278289795, 0.7457713484764099, 0.7503248453140259, 0.7548400163650513, 0.7593171000480652, 0.763756513595581, 0.768158495426178, 0.7725233435630798, 0.7768513560295105, 0.7811428904533386, 0.7853981852531433, 0.7896175384521484, 0.7938013076782227, 0.7979497909545898, 0.8020632863044739, 0.8061420917510986, 0.8101864457130432, 0.814196765422821, 0.8181732892990112, 0.8221163749694824, -0.826026201248169, -0.8221163749694824, -0.8181732892990112, -0.814196765422821, -0.8101864457130432, -0.8061420917510986, -0.8020632863044739, -0.7979497909545898, -0.7938013076782227, -0.7896175384521484, -0.7853981852531433, -0.7811428904533386, -0.7768513560295105, -0.7725233435630798, -0.768158495426178, -0.763756513595581, -0.7593171000480652, -0.7548400163650513, -0.7503248453140259, -0.7457713484764099, -0.7411792278289795, -0.7365481853485107, -0.7318779230117798, -0.727168083190918, -0.722418487071991, -0.7176287770271301, -0.7127987146377563, -0.707927942276001, -0.7030162215232849, -0.698063313961029, -0.69306880235672, -0.6880325675010681, -0.6829543113708496, -0.6778337359428406, -0.6726705431938171, -0.667464554309845, -0.662215530872345, -0.6569231152534485, -0.651587188243866, -0.6462074518203735, -0.6407837271690369, -0.6353157758712769, -0.6298033595085144, -0.6242462396621704, -0.6186443567276001, -0.6129974126815796, -0.6073052287101746, -0.6015676856040955, -0.5957845449447632, -0.589955747127533, -0.5840810537338257, -0.5781604051589966, -0.5721936225891113, -0.5661806464195251, -0.5601213574409485, -0.5540156960487366, -0.5478635430335999, -0.5416648387908936, -0.5354195237159729, -0.5291276574134827, -0.5227890610694885, -0.5164039134979248, -0.5099720358848572, -0.50349360704422, -0.4969685971736908, -0.49039706587791443, -0.48377910256385803, -0.47711479663848877, -0.4704042673110962, -0.46364760398864746, -0.4568449854850769, -0.44999659061431885, -0.44310256838798523, -0.43616312742233276, -0.42917850613594055, -0.4221489429473877, -0.41507473587989807, -0.4079561233520508, -0.4007934629917145, -0.39358702301979065, -0.3863372206687927, -0.37904438376426697, -0.3717089593410492, -0.36433130502700806, -0.35691192746162415, -0.3494512736797333, -0.34194982051849365, -0.33440810441970825, -0.32682666182518005, -0.31920602917671204, -0.31154683232307434, -0.3038496673107147, -0.2961151599884033, -0.28834396600723267, -0.28053680062294006, -0.27269434928894043, -0.26481732726097107, -0.25690653920173645, -0.24896270036697388, -0.2409866750240326, -0.23297923803329468, -0.22494126856327057, -0.21687361598014832, -0.20877718925476074, -0.20065288245677948, -0.19250163435935974, -0.18432441353797913, -0.17612217366695404, -0.16789592802524567, -0.159646674990654, -0.1513754427433014, -0.14308328926563263, -0.13477128744125366, -0.12644049525260925, -0.11809203028678894, -0.10972698777914047, -0.10134650021791458, -0.0929517075419426, -0.08454375714063644, -0.07612380385398865, -0.06769302487373352, -0.05925259366631508, -0.05080370232462883, -0.04234755039215088, -0.03388532996177673, -0.025418253615498543, -0.016947530210018158, -0.008474373258650303, 0.0, 0.008403163403272629, 0.016805140301585197, 0.025204746052622795, 0.03360079601407051, 0.041992105543613434, 0.050377506762742996, 0.058755822479724884, 0.06712588667869568, 0.07548654824495316, 0.0838366448879242, 0.09217503666877747, 0.10050059854984283, 0.10881220549345016, 0.11710874736309052, 0.12538911402225494, 0.1336522400379181, 0.141897052526474, 0.1501224786043167, 0.15832750499248505, 0.16651107370853424, 0.1746722012758255, 0.18280988931655884, 0.19092315435409546, 0.19901107251644135, 0.2070726752281189, 0.21510706841945648, 0.22311335802078247, 0.23109066486358643, 0.2390381395816803, 0.24695494771003723, 0.25484028458595276, 0.2626933455467224, 0.2705133855342865, 0.2782996594905853, 0.2860514521598816, 0.293768048286438, 0.3014487624168396, 0.30909299850463867, 0.3167001008987427, 0.32426944375038147, 0.3318004608154297, 0.33929261565208435, 0.3467453420162201, 0.3541581630706787, 0.3615305423736572, 0.3688620626926422, 0.37615227699279785, 0.38340073823928833, 0.3906070291996002, 0.39777085185050964, 0.4048917889595032, 0.41196951270103455, 0.41900375485420227, 0.4259941875934601, 0.4329405426979065, 0.4398425817489624, 0.4467000663280487, 0.4535128176212311, 0.4602806270122528, 0.46700331568717957, 0.473680704832077, 0.4803127348423004, 0.4868992269039154, 0.4934401214122772, 0.4999352991580963, 0.5063847303390503, 0.5127883553504944, 0.5191460847854614, 0.525458037853241, 0.5317240953445435, 0.5379442572593689, 0.5441186428070068, 0.5502471923828125, 0.5563300251960754, 0.5623672008514404, 0.5683587789535522, 0.5743048191070557, 0.580205500125885, 0.5860608816146851, 0.5918710827827454, 0.5976362228393555, 0.6033564805984497, 0.6090320348739624, 0.6146629452705383, 0.6202495098114014, 0.6257917881011963, 0.6312900185585022, 0.6367444396018982, 0.6421552300453186, 0.647522509098053, 0.65284663438797, 0.6581277251243591, 0.6633660197257996, 0.6685618162155151, 0.6737152934074402, 0.6788267493247986, 0.6838963031768799, 0.6889243721961975, 0.6939111351966858, 0.6988568902015686, 0.7037618160247803, 0.7086262702941895, 0.7134504914283752, 0.7182347774505615, 0.7229793667793274, 0.7276845574378967, 0.7323506474494934, 0.7369778752326965, 0.7415665984153748, 0.7461170554161072, 0.7506295442581177, 0.7551044225692749, 0.7595418691635132, 0.7639422416687012, 0.7683058381080627, 0.772632896900177, 0.7769237756729126, 0.7811787724494934, 0.7853981852531433, 0.7895822525024414, 0.7937313318252563, 0.7978456616401672, 0.8019255995750427, 0.8059713840484619, 0.8099833726882935, 0.8139618039131165, 0.8179070353507996, -0.8218193054199219, -0.8179070353507996, -0.8139618039131165, -0.8099833726882935, -0.8059713840484619, -0.8019255995750427, -0.7978456616401672, -0.7937313318252563, -0.7895822525024414, -0.7853981852531433, -0.7811787724494934, -0.7769237756729126, -0.772632896900177, -0.7683058381080627, -0.7639422416687012, -0.7595418691635132, -0.7551044225692749, -0.7506295442581177, -0.7461170554161072, -0.7415665984153748, -0.7369778752326965, -0.7323506474494934, -0.7276845574378967, -0.7229793667793274, -0.7182347774505615, -0.7134504914283752, -0.7086262702941895, -0.7037618160247803, -0.6988568902015686, -0.6939111351966858, -0.6889243721961975, -0.6838963031768799, -0.6788267493247986, -0.6737152934074402, -0.6685618162155151, -0.6633660197257996, -0.6581277251243591, -0.65284663438797, -0.647522509098053, -0.6421552300453186, -0.6367444396018982, -0.6312900185585022, -0.6257917881011963, -0.6202495098114014, -0.6146629452705383, -0.6090320348739624, -0.6033564805984497, -0.5976362228393555, -0.5918710827827454, -0.5860608816146851, -0.580205500125885, -0.5743048191070557, -0.5683587789535522, -0.5623672008514404, -0.5563300251960754, -0.5502471923828125, -0.5441186428070068, -0.5379442572593689, -0.5317240953445435, -0.525458037853241, -0.5191460847854614, -0.5127883553504944, -0.5063847303390503, -0.4999352991580963, -0.4934401214122772, -0.4868992269039154, -0.4803127348423004, -0.473680704832077, -0.46700331568717957, -0.4602806270122528, -0.4535128176212311, -0.4467000663280487, -0.4398425817489624, -0.4329405426979065, -0.4259941875934601, -0.41900375485420227, -0.41196951270103455, -0.4048917889595032, -0.39777085185050964, -0.3906070291996002, -0.38340073823928833, -0.37615227699279785, -0.3688620626926422, -0.3615305423736572, -0.3541581630706787, -0.3467453420162201, -0.33929261565208435, -0.3318004608154297, -0.32426944375038147, -0.3167001008987427, -0.30909299850463867, -0.3014487624168396, -0.293768048286438, -0.2860514521598816, -0.2782996594905853, -0.2705133855342865, -0.2626933455467224, -0.25484028458595276, -0.24695494771003723, -0.2390381395816803, -0.23109066486358643, -0.22311335802078247, -0.21510706841945648, -0.2070726752281189, -0.19901107251644135, -0.19092315435409546, -0.18280988931655884, -0.1746722012758255, -0.16651107370853424, -0.15832750499248505, -0.1501224786043167, -0.141897052526474, -0.1336522400379181, -0.12538911402225494, -0.11710874736309052, -0.10881220549345016, -0.10050059854984283, -0.09217503666877747, -0.0838366448879242, -0.07548654824495316, -0.06712588667869568, -0.058755822479724884, -0.050377506762742996, -0.041992105543613434, -0.03360079601407051, -0.025204746052622795, -0.016805140301585197, -0.008403163403272629, 0.0, 0.008333140052855015, 0.016665123403072357, 0.02499479427933693, 0.03332099691033363, 0.041642580181360245, 0.04995839670300484, 0.05826730281114578, 0.06656816601753235, 0.0748598501086235, 0.08314123004674911, 0.09141120314598083, 0.09966865181922913, 0.10791248828172684, 0.11614162474870682, 0.12435499578714371, 0.13255153596401215, 0.14073018729686737, 0.1488899439573288, 0.15702977776527405, 0.16514867544174194, 0.17324566841125488, 0.18131977319717407, 0.1893700510263443, 0.19739556312561035, 0.2053953856229782, 0.21336863934993744, 0.2213144451379776, 0.22923193871974945, 0.23712028563022614, 0.244978666305542, 0.25280630588531494, 0.2606023848056793, 0.2683662176132202, 0.27609702944755554, 0.283794105052948, 0.29145678877830505, 0.2990844249725342, 0.30667632818222046, 0.31423190236091614, 0.32175055146217346, 0.32923170924186707, 0.3366748094558716, 0.3440793454647064, 0.3514447808265686, 0.3587706685066223, 0.36605650186538696, 0.3733018934726715, 0.38050636649131775, 0.3876695930957794, 0.3947911262512207, 0.40187063813209534, 0.40890783071517944, 0.41590234637260437, 0.42285391688346863, 0.4297622740268707, 0.4366271495819092, 0.44344833493232727, 0.4502255916595459, 0.45695874094963074, 0.46364760398864746, 0.47029203176498413, 0.4768918752670288, 0.48344701528549194, 0.489957332611084, 0.49642276763916016, 0.5028432011604309, 0.5092186331748962, 0.5155490040779114, 0.5218342542648315, 0.5280744433403015, 0.5342695116996765, 0.5404195189476013, 0.5465244054794312, 0.5525843501091003, 0.5585992932319641, 0.5645694136619568, 0.5704946517944336, 0.5763752460479736, 0.5822111368179321, 0.588002622127533, 0.5937496423721313, 0.5994524955749512, 0.6051111817359924, 0.6107259392738342, 0.6162969470024109, 0.6218242645263672, 0.627308189868927, 0.6327488422393799, 0.6381464004516602, 0.6435011029243469, 0.6488131284713745, 0.654082715511322, 0.6593100428581238, 0.6644954085350037, 0.6696389317512512, 0.6747409701347351, 0.6798016428947449, 0.6848212480545044, 0.6898000240325928, 0.6947382688522339, 0.6996362209320068, 0.704494059085846, 0.7093121409416199, 0.7140907049179077, 0.7188299894332886, 0.7235302925109863, 0.7281919121742249, 0.7328150868415833, 0.7374001145362854, 0.7419472932815552, 0.7464568018913269, 0.750929057598114, 0.7553642988204956, 0.7597627639770508, 0.7641247510910034, 0.7684506177902222, 0.7727406024932861, 0.7769950032234192, 0.7812140583992004, 0.7853981852531433, 0.7895475029945374, 0.793662428855896, 0.7977432012557983, 0.8017901182174683, 0.8058034777641296, 0.8097835779190063, 0.8137306571006775, -0.8176450729370117, -0.8137306571006775, -0.8097835779190063, -0.8058034777641296, -0.8017901182174683, -0.7977432012557983, -0.793662428855896, -0.7895475029945374, -0.7853981852531433, -0.7812140583992004, -0.7769950032234192, -0.7727406024932861, -0.7684506177902222, -0.7641247510910034, -0.7597627639770508, -0.7553642988204956, -0.750929057598114, -0.7464568018913269, -0.7419472932815552, -0.7374001145362854, -0.7328150868415833, -0.7281919121742249, -0.7235302925109863, -0.7188299894332886, -0.7140907049179077, -0.7093121409416199, -0.704494059085846, -0.6996362209320068, -0.6947382688522339, -0.6898000240325928, -0.6848212480545044, -0.6798016428947449, -0.6747409701347351, -0.6696389317512512, -0.6644954085350037, -0.6593100428581238, -0.654082715511322, -0.6488131284713745, -0.6435011029243469, -0.6381464004516602, -0.6327488422393799, -0.627308189868927, -0.6218242645263672, -0.6162969470024109, -0.6107259392738342, -0.6051111817359924, -0.5994524955749512, -0.5937496423721313, -0.588002622127533, -0.5822111368179321, -0.5763752460479736, -0.5704946517944336, -0.5645694136619568, -0.5585992932319641, -0.5525843501091003, -0.5465244054794312, -0.5404195189476013, -0.5342695116996765, -0.5280744433403015, -0.5218342542648315, -0.5155490040779114, -0.5092186331748962, -0.5028432011604309, -0.49642276763916016, -0.489957332611084, -0.48344701528549194, -0.4768918752670288, -0.47029203176498413, -0.46364760398864746, -0.45695874094963074, -0.4502255916595459, -0.44344833493232727, -0.4366271495819092, -0.4297622740268707, -0.42285391688346863, -0.41590234637260437, -0.40890783071517944, -0.40187063813209534, -0.3947911262512207, -0.3876695930957794, -0.38050636649131775, -0.3733018934726715, -0.36605650186538696, -0.3587706685066223, -0.3514447808265686, -0.3440793454647064, -0.3366748094558716, -0.32923170924186707, -0.32175055146217346, -0.31423190236091614, -0.30667632818222046, -0.2990844249725342, -0.29145678877830505, -0.283794105052948, -0.27609702944755554, -0.2683662176132202, -0.2606023848056793, -0.25280630588531494, -0.244978666305542, -0.23712028563022614, -0.22923193871974945, -0.2213144451379776, -0.21336863934993744, -0.2053953856229782, -0.19739556312561035, -0.1893700510263443, -0.18131977319717407, -0.17324566841125488, -0.16514867544174194, -0.15702977776527405, -0.1488899439573288, -0.14073018729686737, -0.13255153596401215, -0.12435499578714371, -0.11614162474870682, -0.10791248828172684, -0.09966865181922913, -0.09141120314598083, -0.08314123004674911, -0.0748598501086235, -0.06656816601753235, -0.05826730281114578, -0.04995839670300484, -0.041642580181360245, -0.03332099691033363, -0.02499479427933693, -0.016665123403072357, -0.008333140052855015, 0.0, 0.008264274336397648, 0.016527419909834862, 0.02478831075131893, 0.03304581716656685, 0.041298817843198776, 0.049546193331480026, 0.05778682976961136, 0.06601961702108383, 0.0742434486746788, 0.08245723694562912, 0.09065988659858704, 0.0988503247499466, 0.10702747106552124, 0.1151902824640274, 0.12333770096302032, 0.13146869838237762, 0.13958224654197693, 0.14767733216285706, 0.1557529866695404, 0.1638081967830658, 0.17184202373027802, 0.17985349893569946, 0.18784171342849731, 0.19580574333667755, 0.20374467968940735, 0.21165767312049866, 0.21954382956027985, 0.22740234434604645, 0.2352323830127716, 0.24303314089775085, 0.2508038282394409, 0.2585437297821045, 0.2662520408630371, 0.27392810583114624, 0.2815711796283722, 0.2891806364059448, 0.29675576090812683, 0.30429595708847046, 0.31180062890052795, 0.31926918029785156, 0.32670101523399353, 0.3340955972671509, 0.3414524495601654, 0.34877100586891174, 0.3560508191585541, 0.3632914423942566, 0.3704923987388611, 0.3776533305644989, 0.38477379083633423, 0.3918534219264984, 0.3988918662071228, 0.40588879585266113, 0.4128439128398895, 0.4197568893432617, 0.4266274869441986, 0.4334554374217987, 0.4402405023574829, 0.4469824731349945, 0.45368117094039917, 0.4603363573551178, 0.46694791316986084, 0.47351571917533875, 0.4800395965576172, 0.4865194261074066, 0.49295517802238464, 0.4993467330932617, 0.5056940317153931, 0.5119969844818115, 0.5182556509971619, 0.5244699120521545, 0.5306398868560791, 0.536765456199646, 0.5428466796875, 0.5488836169242859, 0.5548763275146484, 0.5608248114585876, 0.5667291879653931, 0.5725895762443542, 0.5784059762954712, 0.5841785073280334, 0.5899073481559753, 0.5955926179885864, 0.6012343168258667, 0.60683274269104, 0.612388014793396, 0.6179002523422241, 0.623369574546814, 0.6287962794303894, 0.63418048620224, 0.6395223736763, 0.6448221206665039, 0.6500799655914307, 0.6552960872650146, 0.6604707837104797, 0.6656041145324707, 0.670696496963501, 0.6757479906082153, 0.6807589530944824, 0.6857295036315918, 0.6906599998474121, 0.6955506205558777, 0.7004016637802124, 0.7052133083343506, 0.7099859118461609, 0.7147196531295776, 0.7194147706031799, 0.7240716814994812, 0.7286904454231262, 0.7332715392112732, 0.7378150820732117, 0.7423213720321655, 0.7467907667160034, 0.7512234449386597, 0.7556197643280029, 0.7599799036979675, 0.7643042206764221, 0.7685930132865906, 0.772846519947052, 0.7770650386810303, 0.7812488079071045, 0.7853981852531433, 0.789513349533081, 0.7935947179794312, 0.7976424694061279, 0.8016569018363953, 0.805638313293457, 0.8095870018005371, -0.8135032057762146, -0.8095870018005371, -0.805638313293457, -0.8016569018363953, -0.7976424694061279, -0.7935947179794312, -0.789513349533081, -0.7853981852531433, -0.7812488079071045, -0.7770650386810303, -0.772846519947052, -0.7685930132865906, -0.7643042206764221, -0.7599799036979675, -0.7556197643280029, -0.7512234449386597, -0.7467907667160034, -0.7423213720321655, -0.7378150820732117, -0.7332715392112732, -0.7286904454231262, -0.7240716814994812, -0.7194147706031799, -0.7147196531295776, -0.7099859118461609, -0.7052133083343506, -0.7004016637802124, -0.6955506205558777, -0.6906599998474121, -0.6857295036315918, -0.6807589530944824, -0.6757479906082153, -0.670696496963501, -0.6656041145324707, -0.6604707837104797, -0.6552960872650146, -0.6500799655914307, -0.6448221206665039, -0.6395223736763, -0.63418048620224, -0.6287962794303894, -0.623369574546814, -0.6179002523422241, -0.612388014793396, -0.60683274269104, -0.6012343168258667, -0.5955926179885864, -0.5899073481559753, -0.5841785073280334, -0.5784059762954712, -0.5725895762443542, -0.5667291879653931, -0.5608248114585876, -0.5548763275146484, -0.5488836169242859, -0.5428466796875, -0.536765456199646, -0.5306398868560791, -0.5244699120521545, -0.5182556509971619, -0.5119969844818115, -0.5056940317153931, -0.4993467330932617, -0.49295517802238464, -0.4865194261074066, -0.4800395965576172, -0.47351571917533875, -0.46694791316986084, -0.4603363573551178, -0.45368117094039917, -0.4469824731349945, -0.4402405023574829, -0.4334554374217987, -0.4266274869441986, -0.4197568893432617, -0.4128439128398895, -0.40588879585266113, -0.3988918662071228, -0.3918534219264984, -0.38477379083633423, -0.3776533305644989, -0.3704923987388611, -0.3632914423942566, -0.3560508191585541, -0.34877100586891174, -0.3414524495601654, -0.3340955972671509, -0.32670101523399353, -0.31926918029785156, -0.31180062890052795, -0.30429595708847046, -0.29675576090812683, -0.2891806364059448, -0.2815711796283722, -0.27392810583114624, -0.2662520408630371, -0.2585437297821045, -0.2508038282394409, -0.24303314089775085, -0.2352323830127716, -0.22740234434604645, -0.21954382956027985, -0.21165767312049866, -0.20374467968940735, -0.19580574333667755, -0.18784171342849731, -0.17985349893569946, -0.17184202373027802, -0.1638081967830658, -0.1557529866695404, -0.14767733216285706, -0.13958224654197693, -0.13146869838237762, -0.12333770096302032, -0.1151902824640274, -0.10702747106552124, -0.0988503247499466, -0.09065988659858704, -0.08245723694562912, -0.0742434486746788, -0.06601961702108383, -0.05778682976961136, -0.049546193331480026, -0.041298817843198776, -0.03304581716656685, -0.02478831075131893, -0.016527419909834862, -0.008264274336397648, 0.0, 0.008196537382900715, 0.016391973942518234, 0.024585209786891937, 0.0327751450240612, 0.040960684418678284, 0.04914073273539543, 0.05731420964002609, 0.06548002362251282, 0.07363710552453995, 0.08178438246250153, 0.08992078900337219, 0.09804527461528778, 0.10615680366754532, 0.11425432562828064, 0.12233683466911316, 0.1304033100605011, 0.13845275342464447, 0.14648418128490448, 0.15449661016464233, 0.162489116191864, 0.17046071588993073, 0.17841050028800964, 0.18633756041526794, 0.194241002202034, 0.20211993157863617, 0.2099735140800476, 0.21780088543891907, 0.22560124099254608, 0.233373761177063, 0.2411176711320877, 0.24883221089839935, 0.25651660561561584, 0.26417016983032227, 0.2717921733856201, 0.2793819010257721, 0.28693875670433044, 0.29446205496788025, 0.30195116996765137, 0.30940550565719604, 0.3168244957923889, 0.3242075443267822, 0.3315541744232178, 0.3388637900352478, 0.3461359739303589, 0.35337018966674805, 0.36056599020957947, 0.3677229881286621, 0.37484070658683777, 0.3819188177585602, 0.38895687460899353, 0.39595457911491394, 0.40291160345077515, 0.4098275899887085, 0.4167022705078125, 0.4235353469848633, 0.4303266108036041, 0.43707579374313354, 0.4437826871871948, 0.45044705271720886, 0.4570687711238861, 0.46364760398864746, 0.47018346190452576, 0.47667619585990906, 0.4831256568431854, 0.4895317852497101, 0.49589449167251587, 0.5022136569023132, 0.5084893107414246, 0.5147213935852051, 0.5209097862243652, 0.5270545482635498, 0.5331556797027588, 0.539213240146637, 0.5452271699905396, 0.5511975288391113, 0.5571243762969971, 0.5630078315734863, 0.5688478350639343, 0.5746446251869202, 0.5803982019424438, 0.5861086845397949, 0.5917761921882629, 0.5974008440971375, 0.602982759475708, 0.6085221171379089, 0.6140190362930298, 0.6194736957550049, 0.6248862147331238, 0.6302568316459656, 0.6355857253074646, 0.6408730149269104, 0.6461188793182373, 0.6513236165046692, 0.6564874053001404, 0.6616103649139404, 0.666692852973938, 0.6717349290847778, 0.6767369508743286, 0.6816990971565247, 0.6866215467453003, 0.6915046572685242, 0.6963486075401306, 0.701153576374054, 0.7059199213981628, 0.7106478214263916, 0.7153375744819641, 0.7199894189834595, 0.7246035933494568, 0.7291803956031799, 0.733720064163208, 0.7382228970527649, 0.7426891326904297, 0.7471190094947815, 0.7515128254890442, 0.7558708786964417, 0.760193407535553, 0.764480710029602, 0.768733024597168, 0.7729506492614746, 0.7771338820457458, 0.7812829613685608, 0.7853981852531433, 0.7894797921180725, 0.7935280799865723, 0.7975432872772217, 0.8015257716178894, 0.8054757714271545, -0.809393584728241, -0.8054757714271545, -0.8015257716178894, -0.7975432872772217, -0.7935280799865723, -0.7894797921180725, -0.7853981852531433, -0.7812829613685608, -0.7771338820457458, -0.7729506492614746, -0.768733024597168, -0.764480710029602, -0.760193407535553, -0.7558708786964417, -0.7515128254890442, -0.7471190094947815, -0.7426891326904297, -0.7382228970527649, -0.733720064163208, -0.7291803956031799, -0.7246035933494568, -0.7199894189834595, -0.7153375744819641, -0.7106478214263916, -0.7059199213981628, -0.701153576374054, -0.6963486075401306, -0.6915046572685242, -0.6866215467453003, -0.6816990971565247, -0.6767369508743286, -0.6717349290847778, -0.666692852973938, -0.6616103649139404, -0.6564874053001404, -0.6513236165046692, -0.6461188793182373, -0.6408730149269104, -0.6355857253074646, -0.6302568316459656, -0.6248862147331238, -0.6194736957550049, -0.6140190362930298, -0.6085221171379089, -0.602982759475708, -0.5974008440971375, -0.5917761921882629, -0.5861086845397949, -0.5803982019424438, -0.5746446251869202, -0.5688478350639343, -0.5630078315734863, -0.5571243762969971, -0.5511975288391113, -0.5452271699905396, -0.539213240146637, -0.5331556797027588, -0.5270545482635498, -0.5209097862243652, -0.5147213935852051, -0.5084893107414246, -0.5022136569023132, -0.49589449167251587, -0.4895317852497101, -0.4831256568431854, -0.47667619585990906, -0.47018346190452576, -0.46364760398864746, -0.4570687711238861, -0.45044705271720886, -0.4437826871871948, -0.43707579374313354, -0.4303266108036041, -0.4235353469848633, -0.4167022705078125, -0.4098275899887085, -0.40291160345077515, -0.39595457911491394, -0.38895687460899353, -0.3819188177585602, -0.37484070658683777, -0.3677229881286621, -0.36056599020957947, -0.35337018966674805, -0.3461359739303589, -0.3388637900352478, -0.3315541744232178, -0.3242075443267822, -0.3168244957923889, -0.30940550565719604, -0.30195116996765137, -0.29446205496788025, -0.28693875670433044, -0.2793819010257721, -0.2717921733856201, -0.26417016983032227, -0.25651660561561584, -0.24883221089839935, -0.2411176711320877, -0.233373761177063, -0.22560124099254608, -0.21780088543891907, -0.2099735140800476, -0.20211993157863617, -0.194241002202034, -0.18633756041526794, -0.17841050028800964, -0.17046071588993073, -0.162489116191864, -0.15449661016464233, -0.14648418128490448, -0.13845275342464447, -0.1304033100605011, -0.12233683466911316, -0.11425432562828064, -0.10615680366754532, -0.09804527461528778, -0.08992078900337219, -0.08178438246250153, -0.07363710552453995, -0.06548002362251282, -0.05731420964002609, -0.04914073273539543, -0.040960684418678284, -0.0327751450240612, -0.024585209786891937, -0.016391973942518234, -0.008196537382900715, 0.0, 0.008129902184009552, 0.016258729621767998, 0.02438540942966938, 0.03250886872410774, 0.040628038346767426, 0.04874185100197792, 0.056849248707294464, 0.064949169754982, 0.07304056733846664, 0.08112239092588425, 0.08919361233711243, 0.09725319594144821, 0.10530012845993042, 0.11333339661359787, 0.12135200202465057, 0.12935495376586914, 0.13734127581119537, 0.14531001448631287, 0.15326020121574402, 0.1611909121274948, 0.16910122334957123, 0.17699022591114044, 0.18485702574253082, 0.19270075857639313, 0.20052054524421692, 0.20831556618213654, 0.21608497202396393, 0.22382797300815582, 0.23154376447200775, 0.23923160135746002, 0.24689070880413055, 0.25452035665512085, 0.2621198296546936, 0.2696884572505951, 0.2772255539894104, 0.2847304344177246, 0.29220250248908997, 0.29964113235473633, 0.30704572796821594, 0.31441572308540344, 0.32175055146217346, 0.3290497064590454, 0.3363126218318939, 0.34353888034820557, 0.35072794556617737, 0.3578794002532959, 0.36499279737472534, 0.37206774950027466, 0.3791038393974304, 0.38610073924064636, 0.39305803179740906, 0.39997541904449463, 0.4068525731563568, 0.4136892259120941, 0.4204850494861603, 0.42723986506462097, 0.4339533746242523, 0.4406253695487976, 0.4472556412220001, 0.45384401082992554, 0.4603902995586395, 0.46689435839653015, 0.4733560383319855, 0.47977524995803833, 0.4861518442630768, 0.49248576164245605, 0.498776912689209, 0.5050252676010132, 0.5112307071685791, 0.5173932909965515, 0.5235128998756409, 0.5295895934104919, 0.5356233716011047, 0.5416142344474792, 0.5475622415542603, 0.5534673929214478, 0.5593297481536865, 0.5651494264602661, 0.5709264874458313, 0.5766609311103821, 0.5823529362678528, 0.588002622127533, 0.5936100482940674, 0.5991753339767456, 0.604698657989502, 0.610180139541626, 0.6156198978424072, 0.62101811170578, 0.6263749599456787, 0.6316906213760376, 0.636965274810791, 0.6421990394592285, 0.6473921537399292, 0.6525447964668274, 0.6576572060585022, 0.6627295017242432, 0.6677619814872742, 0.6727548241615295, 0.6777082681655884, 0.6826225519180298, 0.6874978542327881, 0.6923344135284424, 0.6971325278282166, 0.7018923759460449, 0.7066141963005066, 0.7112982869148254, 0.7159448266029358, 0.7205541133880615, 0.7251264452934265, 0.7296619415283203, 0.7341610193252563, 0.7386237978935242, 0.7430506348609924, 0.7474417090415955, 0.7517973780632019, 0.7561178207397461, 0.7604033946990967, 0.764654278755188, 0.7688707709312439, 0.7730531096458435, 0.7772016525268555, 0.7813165783882141, 0.7853981852531433, 0.7894467115402222, 0.7934625148773193, 0.7974457740783691, 0.8013967871665955, -0.8053158521652222, -0.8013967871665955, -0.7974457740783691, -0.7934625148773193, -0.7894467115402222, -0.7853981852531433, -0.7813165783882141, -0.7772016525268555, -0.7730531096458435, -0.7688707709312439, -0.764654278755188, -0.7604033946990967, -0.7561178207397461, -0.7517973780632019, -0.7474417090415955, -0.7430506348609924, -0.7386237978935242, -0.7341610193252563, -0.7296619415283203, -0.7251264452934265, -0.7205541133880615, -0.7159448266029358, -0.7112982869148254, -0.7066141963005066, -0.7018923759460449, -0.6971325278282166, -0.6923344135284424, -0.6874978542327881, -0.6826225519180298, -0.6777082681655884, -0.6727548241615295, -0.6677619814872742, -0.6627295017242432, -0.6576572060585022, -0.6525447964668274, -0.6473921537399292, -0.6421990394592285, -0.636965274810791, -0.6316906213760376, -0.6263749599456787, -0.62101811170578, -0.6156198978424072, -0.610180139541626, -0.604698657989502, -0.5991753339767456, -0.5936100482940674, -0.588002622127533, -0.5823529362678528, -0.5766609311103821, -0.5709264874458313, -0.5651494264602661, -0.5593297481536865, -0.5534673929214478, -0.5475622415542603, -0.5416142344474792, -0.5356233716011047, -0.5295895934104919, -0.5235128998756409, -0.5173932909965515, -0.5112307071685791, -0.5050252676010132, -0.498776912689209, -0.49248576164245605, -0.4861518442630768, -0.47977524995803833, -0.4733560383319855, -0.46689435839653015, -0.4603902995586395, -0.45384401082992554, -0.4472556412220001, -0.4406253695487976, -0.4339533746242523, -0.42723986506462097, -0.4204850494861603, -0.4136892259120941, -0.4068525731563568, -0.39997541904449463, -0.39305803179740906, -0.38610073924064636, -0.3791038393974304, -0.37206774950027466, -0.36499279737472534, -0.3578794002532959, -0.35072794556617737, -0.34353888034820557, -0.3363126218318939, -0.3290497064590454, -0.32175055146217346, -0.31441572308540344, -0.30704572796821594, -0.29964113235473633, -0.29220250248908997, -0.2847304344177246, -0.2772255539894104, -0.2696884572505951, -0.2621198296546936, -0.25452035665512085, -0.24689070880413055, -0.23923160135746002, -0.23154376447200775, -0.22382797300815582, -0.21608497202396393, -0.20831556618213654, -0.20052054524421692, -0.19270075857639313, -0.18485702574253082, -0.17699022591114044, -0.16910122334957123, -0.1611909121274948, -0.15326020121574402, -0.14531001448631287, -0.13734127581119537, -0.12935495376586914, -0.12135200202465057, -0.11333339661359787, -0.10530012845993042, -0.09725319594144821, -0.08919361233711243, -0.08112239092588425, -0.07304056733846664, -0.064949169754982, -0.056849248707294464, -0.04874185100197792, -0.040628038346767426, -0.03250886872410774, -0.02438540942966938, -0.016258729621767998, -0.008129902184009552, 0.0, 0.008064341731369495, 0.016127632930874825, 0.024188829585909843, 0.03224688395857811, 0.040300749242305756, 0.04834938794374466, 0.05639176070690155, 0.06442683935165405, 0.07245359569787979, 0.08047100901603699, 0.08847807347774506, 0.09647377580404282, 0.10445712506771088, 0.11242713034152985, 0.12038282305002213, 0.12832322716712952, 0.1362473964691162, 0.1441543847322464, 0.15204326808452606, 0.15991312265396118, 0.16776305437088013, 0.17559216916561127, 0.18339958786964417, 0.19118446111679077, 0.19894593954086304, 0.2066832184791565, 0.2143954634666443, 0.22208189964294434, 0.22974175214767456, 0.23737424612045288, 0.244978666305542, 0.2525542676448822, 0.260100394487381, 0.26761630177497864, 0.27510136365890503, 0.28255495429039, 0.28997641801834106, 0.2973651587963104, 0.30472058057785034, 0.31204211711883545, 0.31932926177978516, 0.3265814483165741, 0.3337981700897217, 0.3409789502620697, 0.34812334179878235, 0.3552308678627014, 0.3623011112213135, 0.3693336546421051, 0.37632814049720764, 0.38328415155410767, 0.3902013599872589, 0.3970794379711151, 0.4039180874824524, 0.4107169508934021, 0.4174758195877075, 0.4241943955421448, 0.43087247014045715, 0.43750977516174316, 0.4441061317920685, 0.4506613314151764, 0.45717519521713257, 0.46364760398864746, 0.47007837891578674, 0.47646743059158325, 0.48281458020210266, 0.4891197979450226, 0.49538299441337585, 0.5016040802001953, 0.5077829957008362, 0.5139196515083313, 0.5200141668319702, 0.5260664224624634, 0.5320764183998108, 0.5380442142486572, 0.5439698100090027, 0.5498532056808472, 0.5556944608688354, 0.5614936351776123, 0.5672508478164673, 0.5729661583900452, 0.578639566898346, 0.584271252155304, 0.5898613333702087, 0.5954098701477051, 0.6009170413017273, 0.6063829064369202, 0.611807644367218, 0.6171913743019104, 0.6225343346595764, 0.6278365850448608, 0.6330983638763428, 0.6383197903633118, 0.6435011029243469, 0.6486424803733826, 0.6537440419197083, 0.6588060259819031, 0.6638286709785461, 0.6688121557235718, 0.6737567186355591, 0.6786624789237976, 0.683529794216156, 0.6883587837219238, 0.6931496858596802, 0.6979027986526489, 0.7026183605194092, 0.7072964906692505, 0.7119375467300415, 0.7165416479110718, 0.7211092114448547, 0.7256403565406799, 0.7301353216171265, 0.734594464302063, 0.7390179634094238, 0.7434060573577881, 0.7477590441703796, 0.7520771622657776, 0.7563607096672058, 0.7606098651885986, 0.7648249268531799, 0.7690061926841736, 0.7731539011001587, 0.7772682905197144, 0.7813495993614197, 0.7853981852531433, 0.7894142270088196, 0.7933979630470276, 0.7973498106002808, -0.8012698292732239, -0.7973498106002808, -0.7933979630470276, -0.7894142270088196, -0.7853981852531433, -0.7813495993614197, -0.7772682905197144, -0.7731539011001587, -0.7690061926841736, -0.7648249268531799, -0.7606098651885986, -0.7563607096672058, -0.7520771622657776, -0.7477590441703796, -0.7434060573577881, -0.7390179634094238, -0.734594464302063, -0.7301353216171265, -0.7256403565406799, -0.7211092114448547, -0.7165416479110718, -0.7119375467300415, -0.7072964906692505, -0.7026183605194092, -0.6979027986526489, -0.6931496858596802, -0.6883587837219238, -0.683529794216156, -0.6786624789237976, -0.6737567186355591, -0.6688121557235718, -0.6638286709785461, -0.6588060259819031, -0.6537440419197083, -0.6486424803733826, -0.6435011029243469, -0.6383197903633118, -0.6330983638763428, -0.6278365850448608, -0.6225343346595764, -0.6171913743019104, -0.611807644367218, -0.6063829064369202, -0.6009170413017273, -0.5954098701477051, -0.5898613333702087, -0.584271252155304, -0.578639566898346, -0.5729661583900452, -0.5672508478164673, -0.5614936351776123, -0.5556944608688354, -0.5498532056808472, -0.5439698100090027, -0.5380442142486572, -0.5320764183998108, -0.5260664224624634, -0.5200141668319702, -0.5139196515083313, -0.5077829957008362, -0.5016040802001953, -0.49538299441337585, -0.4891197979450226, -0.48281458020210266, -0.47646743059158325, -0.47007837891578674, -0.46364760398864746, -0.45717519521713257, -0.4506613314151764, -0.4441061317920685, -0.43750977516174316, -0.43087247014045715, -0.4241943955421448, -0.4174758195877075, -0.4107169508934021, -0.4039180874824524, -0.3970794379711151, -0.3902013599872589, -0.38328415155410767, -0.37632814049720764, -0.3693336546421051, -0.3623011112213135, -0.3552308678627014, -0.34812334179878235, -0.3409789502620697, -0.3337981700897217, -0.3265814483165741, -0.31932926177978516, -0.31204211711883545, -0.30472058057785034, -0.2973651587963104, -0.28997641801834106, -0.28255495429039, -0.27510136365890503, -0.26761630177497864, -0.260100394487381, -0.2525542676448822, -0.244978666305542, -0.23737424612045288, -0.22974175214767456, -0.22208189964294434, -0.2143954634666443, -0.2066832184791565, -0.19894593954086304, -0.19118446111679077, -0.18339958786964417, -0.17559216916561127, -0.16776305437088013, -0.15991312265396118, -0.15204326808452606, -0.1441543847322464, -0.1362473964691162, -0.12832322716712952, -0.12038282305002213, -0.11242713034152985, -0.10445712506771088, -0.09647377580404282, -0.08847807347774506, -0.08047100901603699, -0.07245359569787979, -0.06442683935165405, -0.05639176070690155, -0.04834938794374466, -0.040300749242305756, -0.03224688395857811, -0.024188829585909843, -0.016127632930874825, -0.008064341731369495, 0.0, 0.007999829016625881, 0.015998635441064835, 0.02399539388716221, 0.03198908269405365, 0.03997868672013283, 0.04796318709850311, 0.05594157055020332, 0.06391283124685287, 0.07187596708536148, 0.07982998341321945, 0.0877738893032074, 0.09570670872926712, 0.10362745821475983, 0.11153518408536911, 0.11942892521619797, 0.1273077428340912, 0.13517069816589355, 0.14301687479019165, 0.15084536373615265, 0.15865525603294373, 0.16644568741321564, 0.17421579360961914, 0.1819646805524826, 0.18969155848026276, 0.19739556312561035, 0.20507590472698212, 0.21273177862167358, 0.22036242485046387, 0.2279670685529709, 0.23554497957229614, 0.24309542775154114, 0.25061771273612976, 0.2581111192703247, 0.26557499170303345, 0.27300870418548584, 0.28041160106658936, 0.28778305649757385, 0.2951224744319916, 0.30242928862571716, 0.30970293283462524, 0.31694290041923523, 0.32414862513542175, 0.3313196301460266, 0.3384554386138916, 0.3455555737018585, 0.35261961817741394, 0.35964709520339966, 0.366637647151947, 0.3735908567905426, 0.38050636649131775, 0.3873838484287262, 0.3942229449748993, 0.40102332830429077, 0.40778473019599915, 0.4145068824291229, 0.42118948698043823, 0.42783230543136597, 0.4344351291656494, 0.44099774956703186, 0.447519987821579, 0.45400160551071167, 0.4604424834251404, 0.4668424725532532, 0.4732014536857605, 0.4795192778110504, 0.48579588532447815, 0.49203115701675415, 0.49822500348091125, 0.5043774247169495, 0.5104883313179016, 0.5165576934814453, 0.5225855112075806, 0.5285717248916626, 0.5345163941383362, 0.5404195189476013, 0.546281099319458, 0.552101194858551, 0.5578798651695251, 0.5636171698570251, 0.5693131685256958, 0.5749679803848267, 0.5805816054344177, 0.5861541628837585, 0.5916858315467834, 0.5971766710281372, 0.6026268005371094, 0.6080363392829895, 0.6134054660797119, 0.6187343597412109, 0.6240230798721313, 0.6292718052864075, 0.6344807147979736, 0.6396500468254089, 0.6447798609733582, 0.6498704552650452, 0.6549219489097595, 0.6599345207214355, 0.6649084091186523, 0.6698437929153442, 0.6747409701347351, 0.6796000003814697, 0.684421181678772, 0.689204752445221, 0.693950891494751, 0.6986598372459412, 0.7033318281173706, 0.7079671025276184, 0.7125658392906189, 0.717128336429596, 0.7216548323631287, 0.7261455655097961, 0.7306007742881775, 0.735020637512207, 0.7394055128097534, 0.743755578994751, 0.7480711340904236, 0.7523523569107056, 0.7565995454788208, 0.7608129382133484, 0.7649928331375122, 0.7691394090652466, 0.7732530236244202, 0.7773337960243225, 0.781382143497467, 0.7853981852531433, 0.7893822193145752, 0.7933344841003418, -0.7972553372383118, -0.7933344841003418, -0.7893822193145752, -0.7853981852531433, -0.781382143497467, -0.7773337960243225, -0.7732530236244202, -0.7691394090652466, -0.7649928331375122, -0.7608129382133484, -0.7565995454788208, -0.7523523569107056, -0.7480711340904236, -0.743755578994751, -0.7394055128097534, -0.735020637512207, -0.7306007742881775, -0.7261455655097961, -0.7216548323631287, -0.717128336429596, -0.7125658392906189, -0.7079671025276184, -0.7033318281173706, -0.6986598372459412, -0.693950891494751, -0.689204752445221, -0.684421181678772, -0.6796000003814697, -0.6747409701347351, -0.6698437929153442, -0.6649084091186523, -0.6599345207214355, -0.6549219489097595, -0.6498704552650452, -0.6447798609733582, -0.6396500468254089, -0.6344807147979736, -0.6292718052864075, -0.6240230798721313, -0.6187343597412109, -0.6134054660797119, -0.6080363392829895, -0.6026268005371094, -0.5971766710281372, -0.5916858315467834, -0.5861541628837585, -0.5805816054344177, -0.5749679803848267, -0.5693131685256958, -0.5636171698570251, -0.5578798651695251, -0.552101194858551, -0.546281099319458, -0.5404195189476013, -0.5345163941383362, -0.5285717248916626, -0.5225855112075806, -0.5165576934814453, -0.5104883313179016, -0.5043774247169495, -0.49822500348091125, -0.49203115701675415, -0.48579588532447815, -0.4795192778110504, -0.4732014536857605, -0.4668424725532532, -0.4604424834251404, -0.45400160551071167, -0.447519987821579, -0.44099774956703186, -0.4344351291656494, -0.42783230543136597, -0.42118948698043823, -0.4145068824291229, -0.40778473019599915, -0.40102332830429077, -0.3942229449748993, -0.3873838484287262, -0.38050636649131775, -0.3735908567905426, -0.366637647151947, -0.35964709520339966, -0.35261961817741394, -0.3455555737018585, -0.3384554386138916, -0.3313196301460266, -0.32414862513542175, -0.31694290041923523, -0.30970293283462524, -0.30242928862571716, -0.2951224744319916, -0.28778305649757385, -0.28041160106658936, -0.27300870418548584, -0.26557499170303345, -0.2581111192703247, -0.25061771273612976, -0.24309542775154114, -0.23554497957229614, -0.2279670685529709, -0.22036242485046387, -0.21273177862167358, -0.20507590472698212, -0.19739556312561035, -0.18969155848026276, -0.1819646805524826, -0.17421579360961914, -0.16644568741321564, -0.15865525603294373, -0.15084536373615265, -0.14301687479019165, -0.13517069816589355, -0.1273077428340912, -0.11942892521619797, -0.11153518408536911, -0.10362745821475983, -0.09570670872926712, -0.0877738893032074, -0.07982998341321945, -0.07187596708536148, -0.06391283124685287, -0.05594157055020332, -0.04796318709850311, -0.03997868672013283, -0.03198908269405365, -0.02399539388716221, -0.015998635441064835, -0.007999829016625881, 0.0, 0.007936341688036919, 0.0158716831356287, 0.023805025964975357, 0.0317353717982769, 0.03966173157095909, 0.04758310317993164, 0.055498506873846054, 0.06340695172548294, 0.0713074654340744, 0.07919906824827194, 0.08708080649375916, 0.09495170414447784, 0.1028108224272728, 0.1106572225689888, 0.11848995834589005, 0.1263081133365631, 0.13411077857017517, 0.141897052526474, 0.14966604113578796, 0.15741688013076782, 0.16514867544174194, 0.17286060750484467, 0.18055182695388794, 0.1882214993238449, 0.1958688497543335, 0.20349304378032684, 0.21109333634376526, 0.21866895258426666, 0.22621913254261017, 0.23374317586421967, 0.24124036729335785, 0.24870999157428741, 0.25615137815475464, 0.263563871383667, 0.2709468603134155, 0.2782996594905853, 0.285621702671051, 0.29291239380836487, 0.3001711666584015, 0.3073974847793579, 0.31459078192710876, 0.32175055146217346, 0.3288763165473938, 0.3359676003456116, 0.3430239260196686, 0.3500448763370514, 0.3570300340652466, 0.36397895216941833, 0.3708913028240204, 0.3777666687965393, 0.38460472226142883, 0.3914051353931427, 0.39816758036613464, 0.4048917889595032, 0.4115774631500244, 0.4182243347167969, 0.42483216524124146, 0.43140071630477905, 0.43792980909347534, 0.4444192051887512, 0.45086875557899475, 0.4572782814502716, 0.46364760398864746, 0.46997663378715515, 0.47626522183418274, 0.48251330852508545, 0.48872071504592896, 0.49488744139671326, 0.5010133981704712, 0.5070984959602356, 0.5131427645683289, 0.5191460847854614, 0.5251085758209229, 0.5310301184654236, 0.5369107723236084, 0.5427504777908325, 0.5485494136810303, 0.5543075203895569, 0.5600248575210571, 0.5657014846801758, 0.5713374614715576, 0.576932966709137, 0.582487940788269, 0.588002622127533, 0.5934770107269287, 0.5989112854003906, 0.6043055057525635, 0.6096598505973816, 0.6149744987487793, 0.6202495098114014, 0.6254850625991821, 0.6306812763214111, 0.6358384490013123, 0.6409565806388855, 0.6460359692573547, 0.6510767340660095, 0.6560790538787842, 0.6610431671142578, 0.6659692525863647, 0.6708574891090393, 0.6757080554962158, 0.6805212497711182, 0.6852971911430359, 0.6900361180305481, 0.6947382688522339, 0.6994038820266724, 0.7040331363677979, 0.7086262702941895, 0.7131835222244263, 0.7177051305770874, 0.722191333770752, 0.726642370223999, 0.7310584187507629, 0.7354397773742676, 0.739786684513092, 0.7440993189811707, 0.7483780384063721, 0.7526230216026306, 0.7568345069885254, 0.7610127329826355, 0.7651579976081848, 0.7692705392837524, 0.7733505368232727, 0.7773983478546143, 0.7814140915870667, 0.7853981852531433, 0.789350688457489, -0.7932720184326172, -0.789350688457489, -0.7853981852531433, -0.7814140915870667, -0.7773983478546143, -0.7733505368232727, -0.7692705392837524, -0.7651579976081848, -0.7610127329826355, -0.7568345069885254, -0.7526230216026306, -0.7483780384063721, -0.7440993189811707, -0.739786684513092, -0.7354397773742676, -0.7310584187507629, -0.726642370223999, -0.722191333770752, -0.7177051305770874, -0.7131835222244263, -0.7086262702941895, -0.7040331363677979, -0.6994038820266724, -0.6947382688522339, -0.6900361180305481, -0.6852971911430359, -0.6805212497711182, -0.6757080554962158, -0.6708574891090393, -0.6659692525863647, -0.6610431671142578, -0.6560790538787842, -0.6510767340660095, -0.6460359692573547, -0.6409565806388855, -0.6358384490013123, -0.6306812763214111, -0.6254850625991821, -0.6202495098114014, -0.6149744987487793, -0.6096598505973816, -0.6043055057525635, -0.5989112854003906, -0.5934770107269287, -0.588002622127533, -0.582487940788269, -0.576932966709137, -0.5713374614715576, -0.5657014846801758, -0.5600248575210571, -0.5543075203895569, -0.5485494136810303, -0.5427504777908325, -0.5369107723236084, -0.5310301184654236, -0.5251085758209229, -0.5191460847854614, -0.5131427645683289, -0.5070984959602356, -0.5010133981704712, -0.49488744139671326, -0.48872071504592896, -0.48251330852508545, -0.47626522183418274, -0.46997663378715515, -0.46364760398864746, -0.4572782814502716, -0.45086875557899475, -0.4444192051887512, -0.43792980909347534, -0.43140071630477905, -0.42483216524124146, -0.4182243347167969, -0.4115774631500244, -0.4048917889595032, -0.39816758036613464, -0.3914051353931427, -0.38460472226142883, -0.3777666687965393, -0.3708913028240204, -0.36397895216941833, -0.3570300340652466, -0.3500448763370514, -0.3430239260196686, -0.3359676003456116, -0.3288763165473938, -0.32175055146217346, -0.31459078192710876, -0.3073974847793579, -0.3001711666584015, -0.29291239380836487, -0.285621702671051, -0.2782996594905853, -0.2709468603134155, -0.263563871383667, -0.25615137815475464, -0.24870999157428741, -0.24124036729335785, -0.23374317586421967, -0.22621913254261017, -0.21866895258426666, -0.21109333634376526, -0.20349304378032684, -0.1958688497543335, -0.1882214993238449, -0.18055182695388794, -0.17286060750484467, -0.16514867544174194, -0.15741688013076782, -0.14966604113578796, -0.141897052526474, -0.13411077857017517, -0.1263081133365631, -0.11848995834589005, -0.1106572225689888, -0.1028108224272728, -0.09495170414447784, -0.08708080649375916, -0.07919906824827194, -0.0713074654340744, -0.06340695172548294, -0.055498506873846054, -0.04758310317993164, -0.03966173157095909, -0.0317353717982769, -0.023805025964975357, -0.0158716831356287, -0.007936341688036919, 0.0, 0.007873852737247944, 0.01574672944843769, 0.023617655038833618, 0.031485654413700104, 0.0393497571349144, 0.0472089909017086, 0.055062394589185715, 0.06290900707244873, 0.07074786722660065, 0.07857803255319595, 0.08639854937791824, 0.0942084863781929, 0.10200691968202591, 0.10979291796684265, 0.1175655722618103, 0.12532398104667664, 0.1330672651529312, 0.1407945156097412, 0.14850488305091858, 0.15619750320911407, 0.16387154161930084, 0.17152614891529083, 0.17916050553321838, 0.18677380681037903, 0.1943652629852295, 0.2019340991973877, 0.20947957038879395, 0.21700088679790497, 0.22449736297130585, 0.2319682389497757, 0.23941285908222198, 0.2468305081129074, 0.25422054529190063, 0.26158231496810913, 0.2689151465892792, 0.2762185037136078, 0.28349173069000244, 0.29073426127433777, 0.2979455292224884, 0.30512499809265137, 0.31227216124534607, 0.31938648223876953, 0.32646751403808594, 0.3335147202014923, 0.3405276834964752, 0.34750598669052124, 0.35444918274879456, 0.3613568842411041, 0.3682286739349365, 0.37506425380706787, 0.38186323642730713, 0.38862526416778564, 0.3953500986099243, 0.4020373821258545, 0.4086868464946747, 0.4152982234954834, 0.42187127470970154, 0.4284057915210724, 0.43490153551101685, 0.4413582980632782, 0.4477759301662445, 0.45415422320365906, 0.4604930579662323, 0.4667922556400299, 0.4730517268180847, 0.4792713522911072, 0.48545101284980774, 0.4915906488895416, 0.4976901710033417, 0.5037495493888855, 0.5097687244415283, 0.5157476663589478, 0.521686315536499, 0.5275847315788269, 0.5334428548812866, 0.539260745048523, 0.5450384020805359, 0.5507758855819702, 0.5564731955528259, 0.5621303915977478, 0.5677475333213806, 0.5733247399330139, 0.5788620710372925, 0.5843596458435059, 0.589817464351654, 0.5952357649803162, 0.6006145477294922, 0.6059539914131165, 0.6112542152404785, 0.6165153980255127, 0.6217375993728638, 0.6269209980964661, 0.6320657730102539, 0.6371721029281616, 0.642240047454834, 0.6472699642181396, 0.6522618532180786, 0.65721595287323, 0.6621325016021729, 0.6670116186141968, 0.6718535423278809, 0.6766585111618042, 0.6814265847206116, 0.6861581206321716, 0.6908532977104187, 0.6955122947692871, 0.7001352906227112, 0.7047225832939148, 0.7092743515968323, 0.7137908339500427, 0.7182722687721252, 0.7227188944816589, 0.7271308898925781, 0.7315084934234619, 0.7358519434928894, 0.7401615381240845, 0.7444374561309814, 0.7486799955368042, 0.7528892755508423, 0.7570656538009644, 0.7612093091011047, 0.7653205394744873, 0.7693995237350464, 0.7734465599060059, 0.7774618268013, 0.7814456224441528, 0.7853981852531433, -0.7893196940422058, -0.7853981852531433, -0.7814456224441528, -0.7774618268013, -0.7734465599060059, -0.7693995237350464, -0.7653205394744873, -0.7612093091011047, -0.7570656538009644, -0.7528892755508423, -0.7486799955368042, -0.7444374561309814, -0.7401615381240845, -0.7358519434928894, -0.7315084934234619, -0.7271308898925781, -0.7227188944816589, -0.7182722687721252, -0.7137908339500427, -0.7092743515968323, -0.7047225832939148, -0.7001352906227112, -0.6955122947692871, -0.6908532977104187, -0.6861581206321716, -0.6814265847206116, -0.6766585111618042, -0.6718535423278809, -0.6670116186141968, -0.6621325016021729, -0.65721595287323, -0.6522618532180786, -0.6472699642181396, -0.642240047454834, -0.6371721029281616, -0.6320657730102539, -0.6269209980964661, -0.6217375993728638, -0.6165153980255127, -0.6112542152404785, -0.6059539914131165, -0.6006145477294922, -0.5952357649803162, -0.589817464351654, -0.5843596458435059, -0.5788620710372925, -0.5733247399330139, -0.5677475333213806, -0.5621303915977478, -0.5564731955528259, -0.5507758855819702, -0.5450384020805359, -0.539260745048523, -0.5334428548812866, -0.5275847315788269, -0.521686315536499, -0.5157476663589478, -0.5097687244415283, -0.5037495493888855, -0.4976901710033417, -0.4915906488895416, -0.48545101284980774, -0.4792713522911072, -0.4730517268180847, -0.4667922556400299, -0.4604930579662323, -0.45415422320365906, -0.4477759301662445, -0.4413582980632782, -0.43490153551101685, -0.4284057915210724, -0.42187127470970154, -0.4152982234954834, -0.4086868464946747, -0.4020373821258545, -0.3953500986099243, -0.38862526416778564, -0.38186323642730713, -0.37506425380706787, -0.3682286739349365, -0.3613568842411041, -0.35444918274879456, -0.34750598669052124, -0.3405276834964752, -0.3335147202014923, -0.32646751403808594, -0.31938648223876953, -0.31227216124534607, -0.30512499809265137, -0.2979455292224884, -0.29073426127433777, -0.28349173069000244, -0.2762185037136078, -0.2689151465892792, -0.26158231496810913, -0.25422054529190063, -0.2468305081129074, -0.23941285908222198, -0.2319682389497757, -0.22449736297130585, -0.21700088679790497, -0.20947957038879395, -0.2019340991973877, -0.1943652629852295, -0.18677380681037903, -0.17916050553321838, -0.17152614891529083, -0.16387154161930084, -0.15619750320911407, -0.14850488305091858, -0.1407945156097412, -0.1330672651529312, -0.12532398104667664, -0.1175655722618103, -0.10979291796684265, -0.10200691968202591, -0.0942084863781929, -0.08639854937791824, -0.07857803255319595, -0.07074786722660065, -0.06290900707244873, -0.055062394589185715, -0.0472089909017086, -0.0393497571349144, -0.031485654413700104, -0.023617655038833618, -0.01574672944843769, -0.007873852737247944, 3.1415927410125732, 3.1337802410125732, 3.1259689331054688, 3.118159532546997, 3.1103527545928955, 3.1025500297546387, 3.0947518348693848, 3.0869596004486084, 3.0791738033294678, 3.0713956356048584, 3.0636260509490967, 3.05586576461792, 3.0481159687042236, 3.040377140045166, 3.0326507091522217, 3.024937152862549, 3.017237663269043, 3.0095529556274414, 3.0018837451934814, 2.9942312240600586, 2.986595869064331, 2.9789788722991943, 2.9713807106018066, 2.9638023376464844, 2.956244707107544, 2.9487082958221436, 2.9411940574645996, 2.9337027072906494, 2.9262349605560303, 2.9187915325164795, 2.9113731384277344, 2.903980255126953, 2.8966140747070312, 2.8892745971679688, 2.881963014602661, 2.8746795654296875, 2.8674252033233643, 2.8602001667022705, 2.8530054092407227, 2.8458409309387207, 2.838707685470581, 2.831606149673462, 2.8245368003845215, 2.817500114440918, 2.8104965686798096, 2.8035266399383545, 2.796590566635132, 2.7896888256073, 2.7828218936920166, 2.7759902477264404, 2.7691941261291504, 2.7624340057373047, 2.7557098865509033, 2.7490224838256836, 2.7423717975616455, 2.7357583045959473, 2.729182243347168, 2.7226436138153076, 2.7161431312561035, 2.7096803188323975, 2.703256130218506, 2.6968703269958496, 2.6905229091644287, 2.6842145919799805, 2.677945137023926, 2.6717145442962646, 2.6655232906341553, 2.6593713760375977, 2.653258800506592, 2.6471855640411377, 2.6411519050598145, 2.635157823562622, 2.6292030811309814, 2.62328839302063, 2.61741304397583, 2.6115775108337402, 2.605781316757202, 2.600024938583374, 2.594308376312256, 2.5886311531066895, 2.582993268966675, 2.577394962310791, 2.571836233139038, 2.566316604614258, 2.5608363151550293, 2.5553951263427734, 2.5499930381774902, 2.5446298122406006, 2.5393052101135254, 2.534019708633423, 2.5287723541259766, 2.5235636234283447, 2.5183932781219482, 2.513261079788208, 2.508166790008545, 2.503110408782959, 2.498091459274292, 2.493110179901123, 2.488166332244873, 2.483259439468384, 2.4783897399902344, 2.4735565185546875, 2.4687600135803223, 2.4639999866485596, 2.4592761993408203, 2.4545881748199463, 2.4499359130859375, 2.445319414138794, 2.4407382011413574, 2.436192274093628, 2.431680917739868, 2.4272046089172363, 2.422762632369995, 2.4183549880981445, 2.4139814376831055, 2.4096415042877197, 2.4053351879119873, 2.401062250137329, 2.396822452545166, 2.392615556716919, 2.388441324234009, 2.3842995166778564, 2.380189895629883, 2.376112222671509, 2.3720662593841553, 2.368051528930664, 2.3640682697296143, 2.3601160049438477, -2.356194496154785, -2.3601160049438477, -2.3640682697296143, -2.368051528930664, -2.3720662593841553, -2.376112222671509, -2.380189895629883, -2.3842995166778564, -2.388441324234009, -2.392615556716919, -2.396822452545166, -2.401062250137329, -2.4053351879119873, -2.4096415042877197, -2.4139814376831055, -2.4183549880981445, -2.422762632369995, -2.4272046089172363, -2.431680917739868, -2.436192274093628, -2.4407382011413574, -2.445319414138794, -2.4499359130859375, -2.4545881748199463, -2.4592761993408203, -2.4639999866485596, -2.4687600135803223, -2.4735565185546875, -2.4783897399902344, -2.483259439468384, -2.488166332244873, -2.493110179901123, -2.498091459274292, -2.503110408782959, -2.508166790008545, -2.513261079788208, -2.5183932781219482, -2.5235636234283447, -2.5287723541259766, -2.534019708633423, -2.5393052101135254, -2.5446298122406006, -2.5499930381774902, -2.5553951263427734, -2.5608363151550293, -2.566316604614258, -2.571836233139038, -2.577394962310791, -2.582993268966675, -2.5886311531066895, -2.594308376312256, -2.600024938583374, -2.605781316757202, -2.6115775108337402, -2.61741304397583, -2.62328839302063, -2.6292030811309814, -2.635157823562622, -2.6411519050598145, -2.6471855640411377, -2.653258800506592, -2.6593713760375977, -2.6655232906341553, -2.6717145442962646, -2.677945137023926, -2.6842145919799805, -2.6905229091644287, -2.6968703269958496, -2.703256130218506, -2.7096803188323975, -2.7161431312561035, -2.7226436138153076, -2.729182243347168, -2.7357583045959473, -2.7423717975616455, -2.7490224838256836, -2.7557098865509033, -2.7624340057373047, -2.7691941261291504, -2.7759902477264404, -2.7828218936920166, -2.7896888256073, -2.796590566635132, -2.8035266399383545, -2.8104965686798096, -2.817500114440918, -2.8245368003845215, -2.831606149673462, -2.838707685470581, -2.8458409309387207, -2.8530054092407227, -2.8602001667022705, -2.8674252033233643, -2.8746795654296875, -2.881963014602661, -2.8892745971679688, -2.8966140747070312, -2.903980255126953, -2.9113731384277344, -2.9187915325164795, -2.9262349605560303, -2.9337027072906494, -2.9411940574645996, -2.9487082958221436, -2.956244707107544, -2.9638023376464844, -2.9713807106018066, -2.9789788722991943, -2.986595869064331, -2.9942312240600586, -3.0018837451934814, -3.0095529556274414, -3.017237663269043, -3.024937152862549, -3.0326507091522217, -3.040377140045166, -3.0481159687042236, -3.05586576461792, -3.0636260509490967, -3.0713956356048584, -3.0791738033294678, -3.0869596004486084, -3.0947518348693848, -3.1025500297546387, -3.1103527545928955, -3.118159532546997, -3.1259689331054688, -3.1337802410125732, 3.1415927410125732, 3.133718729019165, 3.1258459091186523, 3.1179749965667725, 3.110106945037842, 3.102242946624756, 3.094383716583252, 3.0865302085876465, 3.078683614730835, 3.070844888687134, 3.063014507293701, 3.055194139480591, 3.047384262084961, 3.039585828781128, 3.031799793243408, 3.024027109146118, 3.016268730163574, 3.0085253715515137, 3.000798225402832, 2.9930877685546875, 2.9853951930999756, 2.9777212142944336, 2.970066547393799, 2.9624321460723877, 2.9548189640045166, 2.9472274780273438, 2.9396586418151855, 2.9321131706237793, 2.9245917797088623, 2.917095184326172, 2.9096243381500244, 2.902179718017578, 2.8947620391845703, 2.8873720169067383, 2.8800103664398193, 2.8726775646209717, 2.8653740882873535, 2.8581008911132812, 2.850858449935913, 2.8436472415924072, 2.836467742919922, 2.8293204307556152, 2.8222062587738037, 2.8151252269744873, 2.8080780506134033, 2.801064968109131, 2.7940866947174072, 2.7871434688568115, 2.780235767364502, 2.7733640670776367, 2.766528367996216, 2.7597293853759766, 2.752967357635498, 2.7462425231933594, 2.7395553588867188, 2.732905864715576, 2.72629451751709, 2.7197213172912598, 2.713186740875244, 2.706691026687622, 2.7002344131469727, 2.693816661834717, 2.687438488006592, 2.6810996532440186, 2.674800395965576, 2.6685409545898438, 2.6623213291168213, 2.656141757965088, 2.6500020027160645, 2.643902540206909, 2.637843132019043, 2.631824016571045, 2.625844955444336, 2.619906425476074, 2.6140079498291016, 2.608149766921997, 2.6023318767547607, 2.5965542793273926, 2.5908167362213135, 2.5851194858551025, 2.5794622898101807, 2.573845148086548, 2.568267822265625, 2.562730550765991, 2.5572330951690674, 2.5517752170562744, 2.5463569164276123, 2.540978193283081, 2.5356385707855225, 2.5303385257720947, 2.5250773429870605, 2.51985502243042, 2.514671564102173, 2.5095269680023193, 2.504420518875122, 2.4993526935577393, 2.4943227767944336, 2.489330768585205, 2.4843766689300537, 2.4794602394104004, 2.474581003189087, 2.4697391986846924, 2.4649341106414795, 2.4601659774780273, 2.455434560775757, 2.4507393836975098, 2.446080446243286, 2.4414572715759277, 2.4368700981140137, 2.4323182106018066, 2.4278018474578857, 2.4233202934265137, 2.4188737869262695, 2.414461851119995, 2.4100842475891113, 2.405740737915039, 2.401431083679199, 2.397155284881592, 2.3929126262664795, 2.3887033462524414, 2.3845269680023193, 2.380383253097534, 2.376272201538086, 2.3721930980682373, 2.3681461811065674, 2.364130735397339, 2.360146999359131, 2.356194496154785, -2.3522729873657227, -2.356194496154785, -2.360146999359131, -2.364130735397339, -2.3681461811065674, -2.3721930980682373, -2.376272201538086, -2.380383253097534, -2.3845269680023193, -2.3887033462524414, -2.3929126262664795, -2.397155284881592, -2.401431083679199, -2.405740737915039, -2.4100842475891113, -2.414461851119995, -2.4188737869262695, -2.4233202934265137, -2.4278018474578857, -2.4323182106018066, -2.4368700981140137, -2.4414572715759277, -2.446080446243286, -2.4507393836975098, -2.455434560775757, -2.4601659774780273, -2.4649341106414795, -2.4697391986846924, -2.474581003189087, -2.4794602394104004, -2.4843766689300537, -2.489330768585205, -2.4943227767944336, -2.4993526935577393, -2.504420518875122, -2.5095269680023193, -2.514671564102173, -2.51985502243042, -2.5250773429870605, -2.5303385257720947, -2.5356385707855225, -2.540978193283081, -2.5463569164276123, -2.5517752170562744, -2.5572330951690674, -2.562730550765991, -2.568267822265625, -2.573845148086548, -2.5794622898101807, -2.5851194858551025, -2.5908167362213135, -2.5965542793273926, -2.6023318767547607, -2.608149766921997, -2.6140079498291016, -2.619906425476074, -2.625844955444336, -2.631824016571045, -2.637843132019043, -2.643902540206909, -2.6500020027160645, -2.656141757965088, -2.6623213291168213, -2.6685409545898438, -2.674800395965576, -2.6810996532440186, -2.687438488006592, -2.693816661834717, -2.7002344131469727, -2.706691026687622, -2.713186740875244, -2.7197213172912598, -2.72629451751709, -2.732905864715576, -2.7395553588867188, -2.7462425231933594, -2.752967357635498, -2.7597293853759766, -2.766528367996216, -2.7733640670776367, -2.780235767364502, -2.7871434688568115, -2.7940866947174072, -2.801064968109131, -2.8080780506134033, -2.8151252269744873, -2.8222062587738037, -2.8293204307556152, -2.836467742919922, -2.8436472415924072, -2.850858449935913, -2.8581008911132812, -2.8653740882873535, -2.8726775646209717, -2.8800103664398193, -2.8873720169067383, -2.8947620391845703, -2.902179718017578, -2.9096243381500244, -2.917095184326172, -2.9245917797088623, -2.9321131706237793, -2.9396586418151855, -2.9472274780273438, -2.9548189640045166, -2.9624321460723877, -2.970066547393799, -2.9777212142944336, -2.9853951930999756, -2.9930877685546875, -3.000798225402832, -3.0085253715515137, -3.016268730163574, -3.024027109146118, -3.031799793243408, -3.039585828781128, -3.047384262084961, -3.055194139480591, -3.063014507293701, -3.070844888687134, -3.078683614730835, -3.0865302085876465, -3.094383716583252, -3.102242946624756, -3.110106945037842, -3.1179749965667725, -3.1258459091186523, -3.133718729019165, 3.1415927410125732, 3.1336562633514404, 3.125720977783203, 3.1177875995635986, 3.1098573207855225, 3.101930856704712, 3.0940096378326416, 3.0860941410064697, 3.078185796737671, 3.0702850818634033, 3.0623936653137207, 3.054511785507202, 3.0466408729553223, 3.0387818813323975, 3.030935525894165, 3.0231027603149414, 3.015284538269043, 3.007481813430786, 2.9996955394744873, 2.991926670074463, 2.984175682067871, 2.9764440059661865, 2.9687321186065674, 2.961040735244751, 2.953371047973633, 2.94572377204895, 2.9380996227264404, 2.930499315261841, 2.9229238033294678, 2.9153735637664795, 2.9078495502471924, 2.9003522396087646, 2.8928825855255127, 2.885441303253174, 2.8780288696289062, 2.870645761489868, 2.863292932510376, 2.855970859527588, 2.848680257797241, 2.841421365737915, 2.834195137023926, 2.8270018100738525, 2.8198421001434326, 2.812716245651245, 2.8056249618530273, 2.7985687255859375, 2.7915477752685547, 2.784562587738037, 2.777613639831543, 2.7707014083862305, 2.7638258934020996, 2.756988048553467, 2.750187635421753, 2.743425130844116, 2.7367007732391357, 2.730015277862549, 2.7233684062957764, 2.7167603969573975, 2.7101919651031494, 2.703662872314453, 2.6971733570098877, 2.6907238960266113, 2.684314489364624, 2.677945137023926, 2.6716160774230957, 2.665327310562134, 2.6590793132781982, 2.65287184715271, 2.646705150604248, 2.6405792236328125, 2.6344940662384033, 2.6284499168395996, 2.6224465370178223, 2.6164841651916504, 2.610562562942505, 2.604681968688965, 2.598842144012451, 2.593043327331543, 2.587285041809082, 2.5815677642822266, 2.5758912563323975, 2.5702552795410156, 2.564659595489502, 2.5591046810150146, 2.5535900592803955, 2.5481157302856445, 2.5426814556121826, 2.5372872352600098, 2.531932830810547, 2.526618242263794, 2.521343231201172, 2.5161075592041016, 2.510911464691162, 2.505754232406616, 2.500636100769043, 2.495556592941284, 2.490515947341919, 2.485513687133789, 2.4805495738983154, 2.475623369216919, 2.4707350730895996, 2.4658846855163574, 2.461071491241455, 2.4562954902648926, 2.451556444168091, 2.44685435295105, 2.4421887397766113, 2.4375596046447754, 2.432966470718384, 2.4284090995788574, 2.4238874912261963, 2.4194014072418213, 2.414950370788574, 2.410534143447876, 2.4061529636383057, 2.401805877685547, 2.397493362426758, 2.393214702606201, 2.388969659805298, 2.384758234024048, 2.380579948425293, 2.376434564590454, 2.3723220825195312, 2.368242025375366, 2.364194393157959, 2.3601784706115723, 2.356194496154785, 2.3522419929504395, -2.348320722579956, -2.3522419929504395, -2.356194496154785, -2.3601784706115723, -2.364194393157959, -2.368242025375366, -2.3723220825195312, -2.376434564590454, -2.380579948425293, -2.384758234024048, -2.388969659805298, -2.393214702606201, -2.397493362426758, -2.401805877685547, -2.4061529636383057, -2.410534143447876, -2.414950370788574, -2.4194014072418213, -2.4238874912261963, -2.4284090995788574, -2.432966470718384, -2.4375596046447754, -2.4421887397766113, -2.44685435295105, -2.451556444168091, -2.4562954902648926, -2.461071491241455, -2.4658846855163574, -2.4707350730895996, -2.475623369216919, -2.4805495738983154, -2.485513687133789, -2.490515947341919, -2.495556592941284, -2.500636100769043, -2.505754232406616, -2.510911464691162, -2.5161075592041016, -2.521343231201172, -2.526618242263794, -2.531932830810547, -2.5372872352600098, -2.5426814556121826, -2.5481157302856445, -2.5535900592803955, -2.5591046810150146, -2.564659595489502, -2.5702552795410156, -2.5758912563323975, -2.5815677642822266, -2.587285041809082, -2.593043327331543, -2.598842144012451, -2.604681968688965, -2.610562562942505, -2.6164841651916504, -2.6224465370178223, -2.6284499168395996, -2.6344940662384033, -2.6405792236328125, -2.646705150604248, -2.65287184715271, -2.6590793132781982, -2.665327310562134, -2.6716160774230957, -2.677945137023926, -2.684314489364624, -2.6907238960266113, -2.6971733570098877, -2.703662872314453, -2.7101919651031494, -2.7167603969573975, -2.7233684062957764, -2.730015277862549, -2.7367007732391357, -2.743425130844116, -2.750187635421753, -2.756988048553467, -2.7638258934020996, -2.7707014083862305, -2.777613639831543, -2.784562587738037, -2.7915477752685547, -2.7985687255859375, -2.8056249618530273, -2.812716245651245, -2.8198421001434326, -2.8270018100738525, -2.834195137023926, -2.841421365737915, -2.848680257797241, -2.855970859527588, -2.863292932510376, -2.870645761489868, -2.8780288696289062, -2.885441303253174, -2.8928825855255127, -2.9003522396087646, -2.9078495502471924, -2.9153735637664795, -2.9229238033294678, -2.930499315261841, -2.9380996227264404, -2.94572377204895, -2.953371047973633, -2.961040735244751, -2.9687321186065674, -2.9764440059661865, -2.984175682067871, -2.991926670074463, -2.9996955394744873, -3.007481813430786, -3.015284538269043, -3.0231027603149414, -3.030935525894165, -3.0387818813323975, -3.0466408729553223, -3.054511785507202, -3.0623936653137207, -3.0702850818634033, -3.078185796737671, -3.0860941410064697, -3.0940096378326416, -3.101930856704712, -3.1098573207855225, -3.1177875995635986, -3.125720977783203, -3.1336562633514404, 3.1415927410125732, 3.1335928440093994, 3.125593900680542, 3.1175973415374756, 3.1096036434173584, 3.101613998413086, 3.0936293601989746, 3.085651159286499, 3.0776798725128174, 3.069716691970825, 3.061762571334839, 3.053818702697754, 3.0458860397338867, 3.0379652976989746, 3.030057430267334, 3.0221636295318604, 3.01428484916687, 3.0064220428466797, 2.9985756874084473, 2.9907472133636475, 2.9829373359680176, 2.975147008895874, 2.967376947402954, 2.959627866744995, 2.9519011974334717, 2.944197177886963, 2.936516761779785, 2.928860902786255, 2.9212303161621094, 2.913625478744507, 2.9060475826263428, 2.8984973430633545, 2.890974998474121, 2.883481502532959, 2.8760175704956055, 2.868583917617798, 2.8611810207366943, 2.8538095951080322, 2.8464701175689697, 2.839163303375244, 2.8318896293640137, 2.8246498107910156, 2.817444086074829, 2.8102729320526123, 2.8031373023986816, 2.796036958694458, 2.788973093032837, 2.7819454669952393, 2.7749550342559814, 2.7680017948150635, 2.7610862255096436, 2.75420880317688, 2.7473697662353516, 2.7405693531036377, 2.7338078022003174, 2.727085828781128, 2.7204031944274902, 2.7137603759765625, 2.707157611846924, 2.700594902038574, 2.694072723388672, 2.687591075897217, 2.681150197982788, 2.6747500896453857, 2.668391227722168, 2.6620733737945557, 2.655796766281128, 2.6495614051818848, 2.6433675289154053, 2.6372151374816895, 2.6311042308807373, 2.625035047531128, 2.619007110595703, 2.613020896911621, 2.6070761680603027, 2.601173162460327, 2.5953116416931152, 2.589491367340088, 2.5837128162384033, 2.5779755115509033, 2.572279453277588, 2.566624641418457, 2.5610110759735107, 2.55543851852417, 2.5499067306518555, 2.5444159507751465, 2.538965940475464, 2.5335562229156494, 2.5281872749328613, 2.5228583812713623, 2.5175695419311523, 2.5123207569122314, 2.5071120262145996, 2.5019426345825195, 2.4968128204345703, 2.4917221069335938, 2.486670732498169, 2.4816582202911377, 2.476684331893921, 2.4717488288879395, 2.4668517112731934, 2.4619927406311035, 2.4571714401245117, 2.452387809753418, 2.4476418495178223, 2.4429328441619873, 2.438260793685913, 2.4336254596710205, 2.4290268421173096, 2.424464225769043, 2.4199378490448, 2.4154469966888428, 2.410991907119751, 2.406572103500366, 2.4021871089935303, 2.3978371620178223, 2.393521547317505, 2.389240264892578, 2.384993076324463, 2.38077974319458, 2.3765997886657715, 2.372453212738037, 2.3683395385742188, 2.3642587661743164, 2.360210418701172, 2.356194496154785, 2.352210521697998, 2.3482582569122314, -2.344337224960327, -2.3482582569122314, -2.352210521697998, -2.356194496154785, -2.360210418701172, -2.3642587661743164, -2.3683395385742188, -2.372453212738037, -2.3765997886657715, -2.38077974319458, -2.384993076324463, -2.389240264892578, -2.393521547317505, -2.3978371620178223, -2.4021871089935303, -2.406572103500366, -2.410991907119751, -2.4154469966888428, -2.4199378490448, -2.424464225769043, -2.4290268421173096, -2.4336254596710205, -2.438260793685913, -2.4429328441619873, -2.4476418495178223, -2.452387809753418, -2.4571714401245117, -2.4619927406311035, -2.4668517112731934, -2.4717488288879395, -2.476684331893921, -2.4816582202911377, -2.486670732498169, -2.4917221069335938, -2.4968128204345703, -2.5019426345825195, -2.5071120262145996, -2.5123207569122314, -2.5175695419311523, -2.5228583812713623, -2.5281872749328613, -2.5335562229156494, -2.538965940475464, -2.5444159507751465, -2.5499067306518555, -2.55543851852417, -2.5610110759735107, -2.566624641418457, -2.572279453277588, -2.5779755115509033, -2.5837128162384033, -2.589491367340088, -2.5953116416931152, -2.601173162460327, -2.6070761680603027, -2.613020896911621, -2.619007110595703, -2.625035047531128, -2.6311042308807373, -2.6372151374816895, -2.6433675289154053, -2.6495614051818848, -2.655796766281128, -2.6620733737945557, -2.668391227722168, -2.6747500896453857, -2.681150197982788, -2.687591075897217, -2.694072723388672, -2.700594902038574, -2.707157611846924, -2.7137603759765625, -2.7204031944274902, -2.727085828781128, -2.7338078022003174, -2.7405693531036377, -2.7473697662353516, -2.75420880317688, -2.7610862255096436, -2.7680017948150635, -2.7749550342559814, -2.7819454669952393, -2.788973093032837, -2.796036958694458, -2.8031373023986816, -2.8102729320526123, -2.817444086074829, -2.8246498107910156, -2.8318896293640137, -2.839163303375244, -2.8464701175689697, -2.8538095951080322, -2.8611810207366943, -2.868583917617798, -2.8760175704956055, -2.883481502532959, -2.890974998474121, -2.8984973430633545, -2.9060475826263428, -2.913625478744507, -2.9212303161621094, -2.928860902786255, -2.936516761779785, -2.944197177886963, -2.9519011974334717, -2.959627866744995, -2.967376947402954, -2.975147008895874, -2.9829373359680176, -2.9907472133636475, -2.9985756874084473, -3.0064220428466797, -3.01428484916687, -3.0221636295318604, -3.030057430267334, -3.0379652976989746, -3.0458860397338867, -3.053818702697754, -3.061762571334839, -3.069716691970825, -3.0776798725128174, -3.085651159286499, -3.0936293601989746, -3.101613998413086, -3.1096036434173584, -3.1175973415374756, -3.125593900680542, -3.1335928440093994, 3.1415927410125732, 3.133528232574463, 3.125464916229248, 3.117403745651245, 3.1093456745147705, 3.1012918949127197, 3.093243360519409, 3.085200786590576, 3.0771658420562744, 3.069139003753662, 3.061121702194214, 3.053114652633667, 3.045118808746338, 3.037135601043701, 3.029165506362915, 3.021209716796875, 3.0132694244384766, 3.005345344543457, 2.9974381923675537, 2.989549398422241, 2.9816794395446777, 2.973829507827759, 2.966000556945801, 2.958193063735962, 2.9504082202911377, 2.9426467418670654, 2.9349093437194824, 2.927197217941284, 2.919510841369629, 2.911850929260254, 2.9042184352874756, 2.8966140747070312, 2.889038324356079, 2.8814923763275146, 2.873976230621338, 2.8664913177490234, 2.8590376377105713, 2.851616144180298, 2.8442275524139404, 2.836872100830078, 2.8295505046844482, 2.822263479232788, 2.8150112628936768, 2.8077945709228516, 2.8006136417388916, 2.7934694290161133, 2.7863616943359375, 2.7792916297912598, 2.772258996963501, 2.7652645111083984, 2.7583084106445312, 2.7513911724090576, 2.7445132732391357, 2.7376744747161865, 2.7308757305145264, 2.724116802215576, 2.717398166656494, 2.7107203006744385, 2.70408296585083, 2.697486639022827, 2.6909313201904297, 2.684417486190796, 2.677945137023926, 2.6715142726898193, 2.6651251316070557, 2.658777952194214, 2.652472734451294, 2.646209716796875, 2.639988660812378, 2.633809804916382, 2.6276729106903076, 2.6215784549713135, 2.6155261993408203, 2.609516143798828, 2.603548526763916, 2.597622871398926, 2.5917394161224365, 2.5858981609344482, 2.580099105834961, 2.5743417739868164, 2.5686264038085938, 2.562952995300293, 2.557321310043335, 2.5517313480377197, 2.546182870864868, 2.540675640106201, 2.5352096557617188, 2.529784917831421, 2.5244011878967285, 2.5190582275390625, 2.513756036758423, 2.5084943771362305, 2.503272771835327, 2.498091459274292, 2.492950201034546, 2.4878485202789307, 2.4827866554260254, 2.4777638912200928, 2.472780466079712, 2.4678359031677246, 2.462930202484131, 2.4580628871917725, 2.4532339572906494, 2.4484429359436035, 2.4436898231506348, 2.438974380493164, 2.434296131134033, 2.429655075073242, 2.425050973892212, 2.420483350753784, 2.415952205657959, 2.4114573001861572, 2.4069981575012207, 2.4025747776031494, 2.398186683654785, 2.393833637237549, 2.3895153999328613, 2.3852319717407227, 2.3809828758239746, 2.376767635345459, 2.372586488723755, 2.368438720703125, 2.3643243312835693, 2.360243082046509, 2.356194496154785, 2.3521783351898193, 2.3481945991516113, 2.344242811203003, -2.340322732925415, -2.344242811203003, -2.3481945991516113, -2.3521783351898193, -2.356194496154785, -2.360243082046509, -2.3643243312835693, -2.368438720703125, -2.372586488723755, -2.376767635345459, -2.3809828758239746, -2.3852319717407227, -2.3895153999328613, -2.393833637237549, -2.398186683654785, -2.4025747776031494, -2.4069981575012207, -2.4114573001861572, -2.415952205657959, -2.420483350753784, -2.425050973892212, -2.429655075073242, -2.434296131134033, -2.438974380493164, -2.4436898231506348, -2.4484429359436035, -2.4532339572906494, -2.4580628871917725, -2.462930202484131, -2.4678359031677246, -2.472780466079712, -2.4777638912200928, -2.4827866554260254, -2.4878485202789307, -2.492950201034546, -2.498091459274292, -2.503272771835327, -2.5084943771362305, -2.513756036758423, -2.5190582275390625, -2.5244011878967285, -2.529784917831421, -2.5352096557617188, -2.540675640106201, -2.546182870864868, -2.5517313480377197, -2.557321310043335, -2.562952995300293, -2.5686264038085938, -2.5743417739868164, -2.580099105834961, -2.5858981609344482, -2.5917394161224365, -2.597622871398926, -2.603548526763916, -2.609516143798828, -2.6155261993408203, -2.6215784549713135, -2.6276729106903076, -2.633809804916382, -2.639988660812378, -2.646209716796875, -2.652472734451294, -2.658777952194214, -2.6651251316070557, -2.6715142726898193, -2.677945137023926, -2.684417486190796, -2.6909313201904297, -2.697486639022827, -2.70408296585083, -2.7107203006744385, -2.717398166656494, -2.724116802215576, -2.7308757305145264, -2.7376744747161865, -2.7445132732391357, -2.7513911724090576, -2.7583084106445312, -2.7652645111083984, -2.772258996963501, -2.7792916297912598, -2.7863616943359375, -2.7934694290161133, -2.8006136417388916, -2.8077945709228516, -2.8150112628936768, -2.822263479232788, -2.8295505046844482, -2.836872100830078, -2.8442275524139404, -2.851616144180298, -2.8590376377105713, -2.8664913177490234, -2.873976230621338, -2.8814923763275146, -2.889038324356079, -2.8966140747070312, -2.9042184352874756, -2.911850929260254, -2.919510841369629, -2.927197217941284, -2.9349093437194824, -2.9426467418670654, -2.9504082202911377, -2.958193063735962, -2.966000556945801, -2.973829507827759, -2.9816794395446777, -2.989549398422241, -2.9974381923675537, -3.005345344543457, -3.0132694244384766, -3.021209716796875, -3.029165506362915, -3.037135601043701, -3.045118808746338, -3.053114652633667, -3.061121702194214, -3.069139003753662, -3.0771658420562744, -3.085200786590576, -3.093243360519409, -3.1012918949127197, -3.1093456745147705, -3.117403745651245, -3.125464916229248, -3.133528232574463, 3.1415927410125732, 3.13346266746521, 3.1253340244293213, 3.1172072887420654, 3.109083890914917, 3.1009645462036133, 3.092850685119629, 3.0847434997558594, 3.076643466949463, 3.068552017211914, 3.0604703426361084, 3.052399158477783, 3.044339418411255, 3.036292552947998, 3.02825927734375, 3.020240545272827, 3.012237787246704, 3.004251480102539, 2.9962825775146484, 2.988332509994507, 2.9804017543792725, 2.972491502761841, 2.964602470397949, 2.956735610961914, 2.9488918781280518, 2.9410719871520996, 2.933277130126953, 2.9255077838897705, 2.917764663696289, 2.9100489616394043, 2.9023611545562744, 2.8947019577026367, 2.8870723247528076, 2.8794727325439453, 2.871904134750366, 2.8643670082092285, 2.8568623065948486, 2.8493900299072266, 2.841951608657837, 2.8345468044281006, 2.827177047729492, 2.8198421001434326, 2.8125429153442383, 2.8052799701690674, 2.798053741455078, 2.7908647060394287, 2.7837133407592773, 2.776599884033203, 2.7695248126983643, 2.762488842010498, 2.7554919719696045, 2.748534679412842, 2.741617202758789, 2.7347400188446045, 2.727903366088867, 2.7211074829101562, 2.71435284614563, 2.707639217376709, 2.700967311859131, 2.6943371295928955, 2.687748670578003, 2.6812024116516113, 2.6746983528137207, 2.668236494064331, 2.6618173122406006, 2.6554408073425293, 2.649106979370117, 2.6428158283233643, 2.6365673542022705, 2.630362033843994, 2.624199390411377, 2.618079662322998, 2.6120030879974365, 2.605969190597534, 2.599978446960449, 2.5940303802490234, 2.588125228881836, 2.5822629928588867, 2.5764431953430176, 2.5706660747528076, 2.564931631088257, 2.559239625930786, 2.5535900592803955, 2.547982692718506, 2.542417287826538, 2.5368940830230713, 2.5314126014709473, 2.525972843170166, 2.5205745697021484, 2.5152177810668945, 2.509902000427246, 2.5046274662017822, 2.4993937015533447, 2.4942004680633545, 2.4890477657318115, 2.483935594558716, 2.47886323928833, 2.4738306999206543, 2.4688377380371094, 2.4638843536376953, 2.458970069885254, 2.454094886779785, 2.449258327484131, 2.444460153579712, 2.4397003650665283, 2.434978485107422, 2.4302942752838135, 2.425647735595703, 2.4210386276245117, 2.416466236114502, 2.411930799484253, 2.4074316024780273, 2.4029688835144043, 2.3985419273376465, 2.394150972366333, 2.3897953033447266, 2.385474920272827, 2.3811893463134766, 2.3769383430480957, 2.3727219104766846, 2.368539571762085, 2.3643910884857178, 2.360275983810425, 2.356194496154785, 2.3521459102630615, 2.348130226135254, 2.344146966934204, 2.340195894241333, -2.3362767696380615, -2.340195894241333, -2.344146966934204, -2.348130226135254, -2.3521459102630615, -2.356194496154785, -2.360275983810425, -2.3643910884857178, -2.368539571762085, -2.3727219104766846, -2.3769383430480957, -2.3811893463134766, -2.385474920272827, -2.3897953033447266, -2.394150972366333, -2.3985419273376465, -2.4029688835144043, -2.4074316024780273, -2.411930799484253, -2.416466236114502, -2.4210386276245117, -2.425647735595703, -2.4302942752838135, -2.434978485107422, -2.4397003650665283, -2.444460153579712, -2.449258327484131, -2.454094886779785, -2.458970069885254, -2.4638843536376953, -2.4688377380371094, -2.4738306999206543, -2.47886323928833, -2.483935594558716, -2.4890477657318115, -2.4942004680633545, -2.4993937015533447, -2.5046274662017822, -2.509902000427246, -2.5152177810668945, -2.5205745697021484, -2.525972843170166, -2.5314126014709473, -2.5368940830230713, -2.542417287826538, -2.547982692718506, -2.5535900592803955, -2.559239625930786, -2.564931631088257, -2.5706660747528076, -2.5764431953430176, -2.5822629928588867, -2.588125228881836, -2.5940303802490234, -2.599978446960449, -2.605969190597534, -2.6120030879974365, -2.618079662322998, -2.624199390411377, -2.630362033843994, -2.6365673542022705, -2.6428158283233643, -2.649106979370117, -2.6554408073425293, -2.6618173122406006, -2.668236494064331, -2.6746983528137207, -2.6812024116516113, -2.687748670578003, -2.6943371295928955, -2.700967311859131, -2.707639217376709, -2.71435284614563, -2.7211074829101562, -2.727903366088867, -2.7347400188446045, -2.741617202758789, -2.748534679412842, -2.7554919719696045, -2.762488842010498, -2.7695248126983643, -2.776599884033203, -2.7837133407592773, -2.7908647060394287, -2.798053741455078, -2.8052799701690674, -2.8125429153442383, -2.8198421001434326, -2.827177047729492, -2.8345468044281006, -2.841951608657837, -2.8493900299072266, -2.8568623065948486, -2.8643670082092285, -2.871904134750366, -2.8794727325439453, -2.8870723247528076, -2.8947019577026367, -2.9023611545562744, -2.9100489616394043, -2.917764663696289, -2.9255077838897705, -2.933277130126953, -2.9410719871520996, -2.9488918781280518, -2.956735610961914, -2.964602470397949, -2.972491502761841, -2.9804017543792725, -2.988332509994507, -2.9962825775146484, -3.004251480102539, -3.012237787246704, -3.020240545272827, -3.02825927734375, -3.036292552947998, -3.044339418411255, -3.052399158477783, -3.0604703426361084, -3.068552017211914, -3.076643466949463, -3.0847434997558594, -3.092850685119629, -3.1009645462036133, -3.109083890914917, -3.1172072887420654, -3.1253340244293213, -3.13346266746521, 3.1415927410125732, 3.1333961486816406, 3.1252007484436035, 3.1170074939727783, 3.1088175773620605, 3.1006319522857666, 3.092451810836792, 3.0842783451080322, 3.076112747192383, 3.067955493927002, 3.0598082542419434, 3.0516719818115234, 3.0435473918914795, 3.035435914993286, 3.0273382663726807, 3.0192558765411377, 3.0111894607543945, 3.0031399726867676, 2.9951083660125732, 2.987096071243286, 2.9791035652160645, 2.9711320400238037, 2.963182210922241, 2.9552550315856934, 2.9473516941070557, 2.9394726753234863, 2.931619167327881, 2.9237916469573975, 2.9159913063049316, 2.9082188606262207, 2.900475025177002, 2.8927605152130127, 2.8850760459899902, 2.877422571182251, 2.869800567626953, 2.862210750579834, 2.854653835296631, 2.847130537033081, 2.839641571044922, 2.8321871757507324, 2.82476806640625, 2.817385196685791, 2.8100385665893555, 2.8027288913726807, 2.795456647872925, 2.788222551345825, 2.781026601791382, 2.773869752883911, 2.766752004623413, 2.759673833847046, 2.7526357173919678, 2.745638132095337, 2.7386810779571533, 2.731765031814575, 2.7248904705047607, 2.71805739402771, 2.711266040802002, 2.704516887664795, 2.697809934616089, 2.691145658493042, 2.684523820877075, 2.677945137023926, 2.6714091300964355, 2.664916515350342, 2.6584670543670654, 2.6520607471466064, 2.645698070526123, 2.6393790245056152, 2.633103370666504, 2.626871347427368, 2.620682954788208, 2.6145381927490234, 2.6084370613098145, 2.602379322052002, 2.596365451812744, 2.590395212173462, 2.584468364715576, 2.578584909439087, 2.572744846343994, 2.5669479370117188, 2.56119441986084, 2.5554840564727783, 2.549816370010376, 2.544191837310791, 2.5386099815368652, 2.5330705642700195, 2.527573585510254, 2.5221190452575684, 2.5167064666748047, 2.511335849761963, 2.506006956100464, 2.5007195472717285, 2.495473861694336, 2.4902689456939697, 2.485105276107788, 2.479982376098633, 2.4748997688293457, 2.469857692718506, 2.464855670928955, 2.4598934650421143, 2.4549710750579834, 2.4500880241394043, 2.445244073867798, 2.440438985824585, 2.4356727600097656, 2.4309449195861816, 2.426254987716675, 2.421603202819824, 2.4169890880584717, 2.412412166595459, 2.4078726768493652, 2.403369665145874, 2.3989036083221436, 2.3944735527038574, 2.3900797367095947, 2.3857216835021973, 2.381399154663086, 2.3771119117736816, 2.3728597164154053, 2.3686420917510986, 2.3644587993621826, 2.360309600830078, 2.356194496154785, 2.3521127700805664, 2.348064661026001, 2.3440494537353516, 2.340066909790039, 2.3361167907714844, -2.3321990966796875, -2.3361167907714844, -2.340066909790039, -2.3440494537353516, -2.348064661026001, -2.3521127700805664, -2.356194496154785, -2.360309600830078, -2.3644587993621826, -2.3686420917510986, -2.3728597164154053, -2.3771119117736816, -2.381399154663086, -2.3857216835021973, -2.3900797367095947, -2.3944735527038574, -2.3989036083221436, -2.403369665145874, -2.4078726768493652, -2.412412166595459, -2.4169890880584717, -2.421603202819824, -2.426254987716675, -2.4309449195861816, -2.4356727600097656, -2.440438985824585, -2.445244073867798, -2.4500880241394043, -2.4549710750579834, -2.4598934650421143, -2.464855670928955, -2.469857692718506, -2.4748997688293457, -2.479982376098633, -2.485105276107788, -2.4902689456939697, -2.495473861694336, -2.5007195472717285, -2.506006956100464, -2.511335849761963, -2.5167064666748047, -2.5221190452575684, -2.527573585510254, -2.5330705642700195, -2.5386099815368652, -2.544191837310791, -2.549816370010376, -2.5554840564727783, -2.56119441986084, -2.5669479370117188, -2.572744846343994, -2.578584909439087, -2.584468364715576, -2.590395212173462, -2.596365451812744, -2.602379322052002, -2.6084370613098145, -2.6145381927490234, -2.620682954788208, -2.626871347427368, -2.633103370666504, -2.6393790245056152, -2.645698070526123, -2.6520607471466064, -2.6584670543670654, -2.664916515350342, -2.6714091300964355, -2.677945137023926, -2.684523820877075, -2.691145658493042, -2.697809934616089, -2.704516887664795, -2.711266040802002, -2.71805739402771, -2.7248904705047607, -2.731765031814575, -2.7386810779571533, -2.745638132095337, -2.7526357173919678, -2.759673833847046, -2.766752004623413, -2.773869752883911, -2.781026601791382, -2.788222551345825, -2.795456647872925, -2.8027288913726807, -2.8100385665893555, -2.817385196685791, -2.82476806640625, -2.8321871757507324, -2.839641571044922, -2.847130537033081, -2.854653835296631, -2.862210750579834, -2.869800567626953, -2.877422571182251, -2.8850760459899902, -2.8927605152130127, -2.900475025177002, -2.9082188606262207, -2.9159913063049316, -2.9237916469573975, -2.931619167327881, -2.9394726753234863, -2.9473516941070557, -2.9552550315856934, -2.963182210922241, -2.9711320400238037, -2.9791035652160645, -2.987096071243286, -2.9951083660125732, -3.0031399726867676, -3.0111894607543945, -3.0192558765411377, -3.0273382663726807, -3.035435914993286, -3.0435473918914795, -3.0516719818115234, -3.0598082542419434, -3.067955493927002, -3.076112747192383, -3.0842783451080322, -3.092451810836792, -3.1006319522857666, -3.1088175773620605, -3.1170074939727783, -3.1252007484436035, -3.1333961486816406, 3.1415927410125732, 3.133328437805176, 3.125065326690674, 3.116804361343384, 3.108546733856201, 3.1002938747406006, 3.0920464992523193, 3.083805799484253, 3.075572967529297, 3.0673491954803467, 3.0591354370117188, 3.0509328842163086, 3.0427422523498535, 3.0345652103424072, 3.026402473449707, 3.0182549953460693, 3.0101239681243896, 3.0020103454589844, 2.993915319442749, 2.985839605331421, 2.9777843952178955, 2.9697506427764893, 2.9617390632629395, 2.9537508487701416, 2.945786952972412, 2.9378480911254883, 2.9299349784851074, 2.922048807144165, 2.9141902923583984, 2.906360387802124, 2.8985595703125, 2.8907887935638428, 2.8830490112304688, 2.875340700149536, 2.8676645755767822, 2.8600213527679443, 2.852411985397339, 2.844836950302124, 2.837296724319458, 2.829792022705078, 2.8223235607147217, 2.8148915767669678, 2.807497024536133, 2.800140142440796, 2.7928216457366943, 2.7855417728424072, 2.778301239013672, 2.7711002826690674, 2.763939380645752, 2.7568187713623047, 2.749739170074463, 2.7427008152008057, 2.735703945159912, 2.7287487983703613, 2.7218358516693115, 2.7149651050567627, 2.708137273788452, 2.701352119445801, 2.694610118865967, 2.6879115104675293, 2.6812562942504883, 2.674644708633423, 2.668076992034912, 2.661553144454956, 2.6550731658935547, 2.648637533187866, 2.6422460079193115, 2.6358985900878906, 2.6295957565307617, 2.6233370304107666, 2.6171226501464844, 2.610952854156494, 2.6048271656036377, 2.5987460613250732, 2.5927090644836426, 2.586716413497925, 2.580767869949341, 2.5748634338378906, 2.569003105163574, 2.5631866455078125, 2.5574140548706055, 2.551685333251953, 2.5460000038146973, 2.540358304977417, 2.534759998321533, 2.5292046070098877, 2.5236923694610596, 2.5182230472564697, 2.512796401977539, 2.5074121952056885, 2.502070188522339, 2.4967706203460693, 2.4915127754211426, 2.4862966537475586, 2.481121778488159, 2.4759886264801025, 2.4708962440490723, 2.4658446311950684, 2.460833787918091, 2.4558632373809814, 2.450932741165161, 2.446042060852051, 2.4411909580230713, 2.4363794326782227, 2.4316067695617676, 2.426872968673706, 2.422177791595459, 2.4175209999084473, 2.4129021167755127, 2.4083211421966553, 2.403777599334717, 2.399271249771118, 2.3948018550872803, 2.390369176864624, 2.3859729766845703, 2.381612777709961, 2.377288341522217, 2.372999668121338, 2.368746042251587, 2.364527702331543, 2.3603439331054688, 2.356194496154785, 2.352079391479492, 2.3479979038238525, 2.3439502716064453, 2.339935779571533, 2.335954427719116, 2.332005739212036, -2.328089475631714, -2.332005739212036, -2.335954427719116, -2.339935779571533, -2.3439502716064453, -2.3479979038238525, -2.352079391479492, -2.356194496154785, -2.3603439331054688, -2.364527702331543, -2.368746042251587, -2.372999668121338, -2.377288341522217, -2.381612777709961, -2.3859729766845703, -2.390369176864624, -2.3948018550872803, -2.399271249771118, -2.403777599334717, -2.4083211421966553, -2.4129021167755127, -2.4175209999084473, -2.422177791595459, -2.426872968673706, -2.4316067695617676, -2.4363794326782227, -2.4411909580230713, -2.446042060852051, -2.450932741165161, -2.4558632373809814, -2.460833787918091, -2.4658446311950684, -2.4708962440490723, -2.4759886264801025, -2.481121778488159, -2.4862966537475586, -2.4915127754211426, -2.4967706203460693, -2.502070188522339, -2.5074121952056885, -2.512796401977539, -2.5182230472564697, -2.5236923694610596, -2.5292046070098877, -2.534759998321533, -2.540358304977417, -2.5460000038146973, -2.551685333251953, -2.5574140548706055, -2.5631866455078125, -2.569003105163574, -2.5748634338378906, -2.580767869949341, -2.586716413497925, -2.5927090644836426, -2.5987460613250732, -2.6048271656036377, -2.610952854156494, -2.6171226501464844, -2.6233370304107666, -2.6295957565307617, -2.6358985900878906, -2.6422460079193115, -2.648637533187866, -2.6550731658935547, -2.661553144454956, -2.668076992034912, -2.674644708633423, -2.6812562942504883, -2.6879115104675293, -2.694610118865967, -2.701352119445801, -2.708137273788452, -2.7149651050567627, -2.7218358516693115, -2.7287487983703613, -2.735703945159912, -2.7427008152008057, -2.749739170074463, -2.7568187713623047, -2.763939380645752, -2.7711002826690674, -2.778301239013672, -2.7855417728424072, -2.7928216457366943, -2.800140142440796, -2.807497024536133, -2.8148915767669678, -2.8223235607147217, -2.829792022705078, -2.837296724319458, -2.844836950302124, -2.852411985397339, -2.8600213527679443, -2.8676645755767822, -2.875340700149536, -2.8830490112304688, -2.8907887935638428, -2.8985595703125, -2.906360387802124, -2.9141902923583984, -2.922048807144165, -2.9299349784851074, -2.9378480911254883, -2.945786952972412, -2.9537508487701416, -2.9617390632629395, -2.9697506427764893, -2.9777843952178955, -2.985839605331421, -2.993915319442749, -3.0020103454589844, -3.0101239681243896, -3.0182549953460693, -3.026402473449707, -3.0345652103424072, -3.0427422523498535, -3.0509328842163086, -3.0591354370117188, -3.0673491954803467, -3.075572967529297, -3.083805799484253, -3.0920464992523193, -3.1002938747406006, -3.108546733856201, -3.116804361343384, -3.125065326690674, -3.133328437805176, 3.1415927410125732, 3.1332595348358154, 3.124927520751953, 3.116597890853882, 3.108271598815918, 3.099950075149536, 3.0916342735290527, 3.0833253860473633, 3.0750246047973633, 3.066732883453369, 3.0584514141082764, 3.0501813888549805, 3.041923999786377, 3.0336802005767822, 3.0254509449005127, 3.017237663269043, 3.0090410709381104, 3.0008623600006104, 2.9927027225494385, 2.984562873840332, 2.9764440059661865, 2.9683470726013184, 2.960272789001465, 2.9522225856781006, 2.944197177886963, 2.936197280883789, 2.9282240867614746, 2.920278310775757, 2.912360668182373, 2.9044723510742188, 2.8966140747070312, 2.8887863159179688, 2.8809902667999268, 2.8732264041900635, 2.8654956817626953, 2.8577985763549805, 2.8501358032226562, 2.842508316040039, 2.834916353225708, 2.8273608684539795, 2.8198421001434326, 2.812361001968384, 2.804917812347412, 2.797513246536255, 2.7901477813720703, 2.7828218936920166, 2.775536060333252, 2.7682907581329346, 2.7610862255096436, 2.753923177719116, 2.7468016147613525, 2.7397220134735107, 2.732684850692749, 2.7256903648376465, 2.7187387943267822, 2.7118303775787354, 2.704965591430664, 2.6981444358825684, 2.6913671493530273, 2.68463397026062, 2.677945137023926, 2.6713006496429443, 2.664700746536255, 2.6581456661224365, 2.6516354084014893, 2.645169973373413, 2.638749361038208, 2.6323740482330322, 2.6260435581207275, 2.619758367538452, 2.613518238067627, 2.607323169708252, 2.601173162460327, 2.5950682163238525, 2.589008331298828, 2.582993268966675, 2.5770232677459717, 2.5710980892181396, 2.5652174949645996, 2.5593814849853516, 2.5535900592803955, 2.5478429794311523, 2.542140245437622, 2.5364813804626465, 2.5308666229248047, 2.5252957344055176, 2.519768476486206, 2.514284372329712, 2.5088438987731934, 2.503446340560913, 2.498091459274292, 2.492779493331909, 2.4875099658966064, 2.4822826385498047, 2.477097272872925, 2.4719536304473877, 2.4668517112731934, 2.4617910385131836, 2.4567713737487793, 2.4517927169799805, 2.44685435295105, 2.4419565200805664, 2.437098503112793, 2.4322805404663086, 2.427501916885376, 2.422762632369995, 2.418062448501587, 2.413400650024414, 2.4087774753570557, 2.4041924476623535, 2.3996453285217285, 2.3951358795166016, 2.3906636238098145, 2.386228322982788, 2.3818299770355225, 2.3774678707122803, 2.3731420040130615, 2.368852138519287, 2.3645975589752197, 2.3603785037994385, 2.356194496154785, 2.3520450592041016, 2.3479301929473877, 2.3438494205474854, 2.3398025035858154, 2.335789203643799, 2.3318090438842773, 2.327862024307251, -2.3239476680755615, -2.327862024307251, -2.3318090438842773, -2.335789203643799, -2.3398025035858154, -2.3438494205474854, -2.3479301929473877, -2.3520450592041016, -2.356194496154785, -2.3603785037994385, -2.3645975589752197, -2.368852138519287, -2.3731420040130615, -2.3774678707122803, -2.3818299770355225, -2.386228322982788, -2.3906636238098145, -2.3951358795166016, -2.3996453285217285, -2.4041924476623535, -2.4087774753570557, -2.413400650024414, -2.418062448501587, -2.422762632369995, -2.427501916885376, -2.4322805404663086, -2.437098503112793, -2.4419565200805664, -2.44685435295105, -2.4517927169799805, -2.4567713737487793, -2.4617910385131836, -2.4668517112731934, -2.4719536304473877, -2.477097272872925, -2.4822826385498047, -2.4875099658966064, -2.492779493331909, -2.498091459274292, -2.503446340560913, -2.5088438987731934, -2.514284372329712, -2.519768476486206, -2.5252957344055176, -2.5308666229248047, -2.5364813804626465, -2.542140245437622, -2.5478429794311523, -2.5535900592803955, -2.5593814849853516, -2.5652174949645996, -2.5710980892181396, -2.5770232677459717, -2.582993268966675, -2.589008331298828, -2.5950682163238525, -2.601173162460327, -2.607323169708252, -2.613518238067627, -2.619758367538452, -2.6260435581207275, -2.6323740482330322, -2.638749361038208, -2.645169973373413, -2.6516354084014893, -2.6581456661224365, -2.664700746536255, -2.6713006496429443, -2.677945137023926, -2.68463397026062, -2.6913671493530273, -2.6981444358825684, -2.704965591430664, -2.7118303775787354, -2.7187387943267822, -2.7256903648376465, -2.732684850692749, -2.7397220134735107, -2.7468016147613525, -2.753923177719116, -2.7610862255096436, -2.7682907581329346, -2.775536060333252, -2.7828218936920166, -2.7901477813720703, -2.797513246536255, -2.804917812347412, -2.812361001968384, -2.8198421001434326, -2.8273608684539795, -2.834916353225708, -2.842508316040039, -2.8501358032226562, -2.8577985763549805, -2.8654956817626953, -2.8732264041900635, -2.8809902667999268, -2.8887863159179688, -2.8966140747070312, -2.9044723510742188, -2.912360668182373, -2.920278310775757, -2.9282240867614746, -2.936197280883789, -2.944197177886963, -2.9522225856781006, -2.960272789001465, -2.9683470726013184, -2.9764440059661865, -2.984562873840332, -2.9927027225494385, -3.0008623600006104, -3.0090410709381104, -3.017237663269043, -3.0254509449005127, -3.0336802005767822, -3.041923999786377, -3.0501813888549805, -3.0584514141082764, -3.066732883453369, -3.0750246047973633, -3.0833253860473633, -3.0916342735290527, -3.099950075149536, -3.108271598815918, -3.116597890853882, -3.124927520751953, -3.1332595348358154, 3.1415927410125732, 3.1331894397735596, 3.1247875690460205, 3.1163878440856934, 3.107991933822632, 3.0996005535125732, 3.091215133666992, 3.082836866378784, 3.0744667053222656, 3.066106081008911, 3.057755947113037, 3.049417734146118, 3.0410921573638916, 3.032780408859253, 3.0244839191436768, 3.0162036418914795, 3.0079402923583984, 2.9996955394744873, 2.9914700984954834, 2.9832651615142822, 2.9750816822052, 2.9669203758239746, 2.95878267288208, 2.950669527053833, 2.9425816535949707, 2.9345200061798096, 2.926485538482666, 2.9184792041778564, 2.9105019569396973, 2.902554512023926, 2.8946378231048584, 2.8867523670196533, 2.878899335861206, 2.871079206466675, 2.863292932510376, 2.855541229248047, 2.8478245735168457, 2.840143918991089, 2.8324997425079346, 2.824892520904541, 2.8173232078552246, 2.8097922801971436, 2.802299976348877, 2.794847249984741, 2.7874345779418945, 2.780062198638916, 2.772730588912964, 2.7654404640197754, 2.7581918239593506, 2.750985622406006, 2.743821859359741, 2.7367007732391357, 2.7296230792999268, 2.7225890159606934, 2.7155985832214355, 2.7086520195007324, 2.7017500400543213, 2.694892644882202, 2.688079833984375, 2.681312084197998, 2.6745893955230713, 2.667912006378174, 2.6612799167633057, 2.654693365097046, 2.6481525897979736, 2.6416573524475098, 2.6352078914642334, 2.6288042068481445, 2.6224465370178223, 2.6161346435546875, 2.6098685264587402, 2.6036484241485596, 2.5974740982055664, 2.5913455486297607, 2.5852625370025635, 2.579225540161133, 2.5732338428497314, 2.5672879219055176, 2.561387062072754, 2.5555317401885986, 2.5497214794158936, 2.5439565181732178, 2.538236141204834, 2.5325605869293213, 2.5269296169281006, 2.521343231201172, 2.515800952911377, 2.5103025436401367, 2.5048482418060303, 2.4994373321533203, 2.494070053100586, 2.488745927810669, 2.4834649562835693, 2.478226661682129, 2.4730308055877686, 2.4678773880004883, 2.46276593208313, 2.4576964378356934, 2.4526681900024414, 2.447681427001953, 2.4427356719970703, 2.437830924987793, 2.432966470718384, 2.4281420707702637, 2.4233579635620117, 2.4186131954193115, 2.413908004760742, 2.4092419147491455, 2.4046146869659424, 2.4000260829925537, 2.3954756259918213, 2.390963077545166, 2.386488199234009, 2.3820507526397705, 2.377650499343872, 2.373286724090576, 2.368959665298462, 2.364668846130371, 2.3604137897491455, 2.356194496154785, 2.352010488510132, 2.3478612899780273, 2.3437469005584717, 2.3396670818328857, 2.3356213569641113, 2.3316092491149902, 2.3276307582855225, 2.323685646057129, -2.3197734355926514, -2.323685646057129, -2.3276307582855225, -2.3316092491149902, -2.3356213569641113, -2.3396670818328857, -2.3437469005584717, -2.3478612899780273, -2.352010488510132, -2.356194496154785, -2.3604137897491455, -2.364668846130371, -2.368959665298462, -2.373286724090576, -2.377650499343872, -2.3820507526397705, -2.386488199234009, -2.390963077545166, -2.3954756259918213, -2.4000260829925537, -2.4046146869659424, -2.4092419147491455, -2.413908004760742, -2.4186131954193115, -2.4233579635620117, -2.4281420707702637, -2.432966470718384, -2.437830924987793, -2.4427356719970703, -2.447681427001953, -2.4526681900024414, -2.4576964378356934, -2.46276593208313, -2.4678773880004883, -2.4730308055877686, -2.478226661682129, -2.4834649562835693, -2.488745927810669, -2.494070053100586, -2.4994373321533203, -2.5048482418060303, -2.5103025436401367, -2.515800952911377, -2.521343231201172, -2.5269296169281006, -2.5325605869293213, -2.538236141204834, -2.5439565181732178, -2.5497214794158936, -2.5555317401885986, -2.561387062072754, -2.5672879219055176, -2.5732338428497314, -2.579225540161133, -2.5852625370025635, -2.5913455486297607, -2.5974740982055664, -2.6036484241485596, -2.6098685264587402, -2.6161346435546875, -2.6224465370178223, -2.6288042068481445, -2.6352078914642334, -2.6416573524475098, -2.6481525897979736, -2.654693365097046, -2.6612799167633057, -2.667912006378174, -2.6745893955230713, -2.681312084197998, -2.688079833984375, -2.694892644882202, -2.7017500400543213, -2.7086520195007324, -2.7155985832214355, -2.7225890159606934, -2.7296230792999268, -2.7367007732391357, -2.743821859359741, -2.750985622406006, -2.7581918239593506, -2.7654404640197754, -2.772730588912964, -2.780062198638916, -2.7874345779418945, -2.794847249984741, -2.802299976348877, -2.8097922801971436, -2.8173232078552246, -2.824892520904541, -2.8324997425079346, -2.840143918991089, -2.8478245735168457, -2.855541229248047, -2.863292932510376, -2.871079206466675, -2.878899335861206, -2.8867523670196533, -2.8946378231048584, -2.902554512023926, -2.9105019569396973, -2.9184792041778564, -2.926485538482666, -2.9345200061798096, -2.9425816535949707, -2.950669527053833, -2.95878267288208, -2.9669203758239746, -2.9750816822052, -2.9832651615142822, -2.9914700984954834, -2.9996955394744873, -3.0079402923583984, -3.0162036418914795, -3.0244839191436768, -3.032780408859253, -3.0410921573638916, -3.049417734146118, -3.057755947113037, -3.066106081008911, -3.0744667053222656, -3.082836866378784, -3.091215133666992, -3.0996005535125732, -3.107991933822632, -3.1163878440856934, -3.1247875690460205, -3.1331894397735596, 3.1415927410125732, 3.1331183910369873, 3.124645233154297, 3.1161744594573975, 3.1077072620391846, 3.099245071411133, 3.0907888412475586, 3.0823400020599365, 3.073899745941162, 3.0654687881469727, 3.057048797607422, 3.0486409664154053, 3.0402462482452393, 3.0318655967712402, 3.023500680923462, 3.0151522159576416, 3.006821393966675, 2.998509407043457, 2.9902172088623047, 2.9819459915161133, 2.973696708679199, 2.965470552444458, 2.957268238067627, 2.9490909576416016, 2.9409396648406982, 2.9328155517578125, 2.9247190952301025, 2.916651487350464, 2.908613443374634, 2.9006059169769287, 2.892629861831665, 2.884686231613159, 2.8767752647399902, 2.868898391723633, 2.861055850982666, 2.8532485961914062, 2.84547758102417, 2.837743043899536, 2.8300459384918213, 2.8223867416381836, 2.8147659301757812, 2.8071844577789307, 2.79964280128479, 2.7921414375305176, 2.7846806049346924, 2.777261257171631, 2.769883632659912, 2.7625482082366943, 2.7552554607391357, 2.7480056285858154, 2.7407991886138916, 2.7336366176605225, 2.726517915725708, 2.7194437980651855, 2.712414264678955, 2.7054295539855957, 2.6984901428222656, 2.691596031188965, 2.6847476959228516, 2.677945137023926, 2.6711883544921875, 2.664477825164795, 2.657813549041748, 2.651195526123047, 2.6446239948272705, 2.638098955154419, 2.6316206455230713, 2.6251888275146484, 2.6188035011291504, 2.6124649047851562, 2.606173038482666, 2.5999279022216797, 2.593729019165039, 2.5875768661499023, 2.5814712047576904, 2.5754120349884033, 2.569399118423462, 2.563432216644287, 2.557511568069458, 2.5516369342803955, 2.5458080768585205, 2.540024995803833, 2.534287452697754, 2.528595209121704, 2.5229482650756836, 2.5173463821411133, 2.511789321899414, 2.506276845932007, 2.5008089542388916, 2.49538516998291, 2.4900054931640625, 2.4846694469451904, 2.479377269744873, 2.474128007888794, 2.4689221382141113, 2.463758945465088, 2.4586384296417236, 2.4535601139068604, 2.448523759841919, 2.4435293674468994, 2.4385764598846436, 2.4336647987365723, 2.4287939071655273, 2.423963785171509, 2.4191741943359375, 2.4144246578216553, 2.409714698791504, 2.4050445556640625, 2.4004135131835938, 2.3958213329315186, 2.391267776489258, 2.3867526054382324, 2.3822755813598633, 2.377836227416992, 2.373434066772461, 2.3690693378448486, 2.364741325378418, 2.36044979095459, 2.356194496154785, 2.351975202560425, 2.3477914333343506, 2.3436429500579834, 2.339529275894165, 2.3354506492614746, 2.3314061164855957, 2.3273959159851074, 2.3234193325042725, 2.319476366043091, -2.3155665397644043, -2.319476366043091, -2.3234193325042725, -2.3273959159851074, -2.3314061164855957, -2.3354506492614746, -2.339529275894165, -2.3436429500579834, -2.3477914333343506, -2.351975202560425, -2.356194496154785, -2.36044979095459, -2.364741325378418, -2.3690693378448486, -2.373434066772461, -2.377836227416992, -2.3822755813598633, -2.3867526054382324, -2.391267776489258, -2.3958213329315186, -2.4004135131835938, -2.4050445556640625, -2.409714698791504, -2.4144246578216553, -2.4191741943359375, -2.423963785171509, -2.4287939071655273, -2.4336647987365723, -2.4385764598846436, -2.4435293674468994, -2.448523759841919, -2.4535601139068604, -2.4586384296417236, -2.463758945465088, -2.4689221382141113, -2.474128007888794, -2.479377269744873, -2.4846694469451904, -2.4900054931640625, -2.49538516998291, -2.5008089542388916, -2.506276845932007, -2.511789321899414, -2.5173463821411133, -2.5229482650756836, -2.528595209121704, -2.534287452697754, -2.540024995803833, -2.5458080768585205, -2.5516369342803955, -2.557511568069458, -2.563432216644287, -2.569399118423462, -2.5754120349884033, -2.5814712047576904, -2.5875768661499023, -2.593729019165039, -2.5999279022216797, -2.606173038482666, -2.6124649047851562, -2.6188035011291504, -2.6251888275146484, -2.6316206455230713, -2.638098955154419, -2.6446239948272705, -2.651195526123047, -2.657813549041748, -2.664477825164795, -2.6711883544921875, -2.677945137023926, -2.6847476959228516, -2.691596031188965, -2.6984901428222656, -2.7054295539855957, -2.712414264678955, -2.7194437980651855, -2.726517915725708, -2.7336366176605225, -2.7407991886138916, -2.7480056285858154, -2.7552554607391357, -2.7625482082366943, -2.769883632659912, -2.777261257171631, -2.7846806049346924, -2.7921414375305176, -2.79964280128479, -2.8071844577789307, -2.8147659301757812, -2.8223867416381836, -2.8300459384918213, -2.837743043899536, -2.84547758102417, -2.8532485961914062, -2.861055850982666, -2.868898391723633, -2.8767752647399902, -2.884686231613159, -2.892629861831665, -2.9006059169769287, -2.908613443374634, -2.916651487350464, -2.9247190952301025, -2.9328155517578125, -2.9409396648406982, -2.9490909576416016, -2.957268238067627, -2.965470552444458, -2.973696708679199, -2.9819459915161133, -2.9902172088623047, -2.998509407043457, -3.006821393966675, -3.0151522159576416, -3.023500680923462, -3.0318655967712402, -3.0402462482452393, -3.0486409664154053, -3.057048797607422, -3.0654687881469727, -3.073899745941162, -3.0823400020599365, -3.0907888412475586, -3.099245071411133, -3.1077072620391846, -3.1161744594573975, -3.124645233154297, -3.1331183910369873, 3.1415927410125732, 3.1330459117889404, 3.124500274658203, 3.115957260131836, 3.1074178218841553, 3.098883628845215, 3.090355396270752, 3.0818347930908203, 3.0733227729797363, 3.0648207664489746, 3.0563297271728516, 3.047851085662842, 3.039386034011841, 3.030935525894165, 3.02250075340271, 3.01408314704895, 3.005683660507202, 2.9973032474517822, 2.988943338394165, 2.980604887008667, 2.9722888469696045, 2.963996410369873, 2.955728769302368, 2.947486639022827, 2.9392709732055664, 2.9310832023620605, 2.9229238033294678, 2.9147937297821045, 2.9066944122314453, 2.8986260890960693, 2.890589952468872, 2.88258695602417, 2.874617576599121, 2.866682767868042, 2.858783483505249, 2.8509202003479004, 2.8430936336517334, 2.8353047370910645, 2.8275539875030518, 2.8198421001434326, 2.8121695518493652, 2.804537057876587, 2.796945333480835, 2.7893946170806885, 2.7818856239318848, 2.774418830871582, 2.7669947147369385, 2.759613513946533, 2.7522759437561035, 2.7449822425842285, 2.7377328872680664, 2.7305281162261963, 2.7233684062957764, 2.7162537574768066, 2.7091848850250244, 2.7021617889404297, 2.6951847076416016, 2.688253879547119, 2.6813697814941406, 2.674532175064087, 2.667741298675537, 2.6609976291656494, 2.6543006896972656, 2.647651195526123, 2.6410491466522217, 2.6344940662384033, 2.6279866695404053, 2.6215264797210693, 2.6151139736175537, 2.6087486743927, 2.602431058883667, 2.596160650253296, 2.589937686920166, 2.5837619304656982, 2.5776336193084717, 2.571552276611328, 2.5655179023742676, 2.55953049659729, 2.5535900592803955, 2.547696113586426, 2.54184889793396, 2.53604793548584, 2.5302932262420654, 2.5245845317840576, 2.5189218521118164, 2.5133047103881836, 2.507733106613159, 2.502206802368164, 2.49672532081604, 2.491288900375366, 2.4858970642089844, 2.4805495738983154, 2.475245952606201, 2.4699864387512207, 2.464770555496216, 2.4595980644226074, 2.4544684886932373, 2.4493818283081055, 2.4443376064300537, 2.439335823059082, 2.434375762939453, 2.429457664489746, 2.4245808124542236, 2.4197452068328857, 2.414950370788574, 2.41019606590271, 2.4054818153381348, 2.4008076190948486, 2.3961732387542725, 2.391577959060669, 2.387021780014038, 2.3825042247772217, 2.3780250549316406, 2.373584032058716, 2.369180679321289, 2.3648149967193604, 2.3604862689971924, 2.356194496154785, 2.3519392013549805, 2.347720146179199, 2.343536853790283, 2.3393893241882324, 2.3352770805358887, 2.3311996459960938, 2.3271570205688477, 2.323148727416992, 2.319174289703369, 2.3152337074279785, -2.311326742172241, -2.3152337074279785, -2.319174289703369, -2.323148727416992, -2.3271570205688477, -2.3311996459960938, -2.3352770805358887, -2.3393893241882324, -2.343536853790283, -2.347720146179199, -2.3519392013549805, -2.356194496154785, -2.3604862689971924, -2.3648149967193604, -2.369180679321289, -2.373584032058716, -2.3780250549316406, -2.3825042247772217, -2.387021780014038, -2.391577959060669, -2.3961732387542725, -2.4008076190948486, -2.4054818153381348, -2.41019606590271, -2.414950370788574, -2.4197452068328857, -2.4245808124542236, -2.429457664489746, -2.434375762939453, -2.439335823059082, -2.4443376064300537, -2.4493818283081055, -2.4544684886932373, -2.4595980644226074, -2.464770555496216, -2.4699864387512207, -2.475245952606201, -2.4805495738983154, -2.4858970642089844, -2.491288900375366, -2.49672532081604, -2.502206802368164, -2.507733106613159, -2.5133047103881836, -2.5189218521118164, -2.5245845317840576, -2.5302932262420654, -2.53604793548584, -2.54184889793396, -2.547696113586426, -2.5535900592803955, -2.55953049659729, -2.5655179023742676, -2.571552276611328, -2.5776336193084717, -2.5837619304656982, -2.589937686920166, -2.596160650253296, -2.602431058883667, -2.6087486743927, -2.6151139736175537, -2.6215264797210693, -2.6279866695404053, -2.6344940662384033, -2.6410491466522217, -2.647651195526123, -2.6543006896972656, -2.6609976291656494, -2.667741298675537, -2.674532175064087, -2.6813697814941406, -2.688253879547119, -2.6951847076416016, -2.7021617889404297, -2.7091848850250244, -2.7162537574768066, -2.7233684062957764, -2.7305281162261963, -2.7377328872680664, -2.7449822425842285, -2.7522759437561035, -2.759613513946533, -2.7669947147369385, -2.774418830871582, -2.7818856239318848, -2.7893946170806885, -2.796945333480835, -2.804537057876587, -2.8121695518493652, -2.8198421001434326, -2.8275539875030518, -2.8353047370910645, -2.8430936336517334, -2.8509202003479004, -2.858783483505249, -2.866682767868042, -2.874617576599121, -2.88258695602417, -2.890589952468872, -2.8986260890960693, -2.9066944122314453, -2.9147937297821045, -2.9229238033294678, -2.9310832023620605, -2.9392709732055664, -2.947486639022827, -2.955728769302368, -2.963996410369873, -2.9722888469696045, -2.980604887008667, -2.988943338394165, -2.9973032474517822, -3.005683660507202, -3.01408314704895, -3.02250075340271, -3.030935525894165, -3.039386034011841, -3.047851085662842, -3.0563297271728516, -3.0648207664489746, -3.0733227729797363, -3.0818347930908203, -3.090355396270752, -3.098883628845215, -3.1074178218841553, -3.115957260131836, -3.124500274658203, -3.1330459117889404, 3.1415927410125732, 3.132972240447998, 3.1243529319763184, 3.115736246109009, 3.107123613357544, 3.0985159873962402, 3.089914560317993, 3.0813210010528564, 3.0727362632751465, 3.064161539077759, 3.055598258972168, 3.0470478534698486, 3.038511037826538, 3.029989242553711, 3.021483898162842, 3.012995958328247, 3.004526376724243, 2.996076822280884, 2.9876480102539062, 2.979241132736206, 2.9708573818206787, 2.9624979496002197, 2.9541635513305664, 2.9458553791046143, 2.937574625015259, 2.9293222427368164, 2.9210989475250244, 2.9129059314727783, 2.9047439098358154, 2.8966140747070312, 2.888516902923584, 2.8804538249969482, 2.872425079345703, 2.864431858062744, 2.8564748764038086, 2.848554849624634, 2.840672492980957, 2.8328282833099365, 2.8250234127044678, 2.81725811958313, 2.80953311920166, 2.801849126815796, 2.7942066192626953, 2.7866063117980957, 2.779048442840576, 2.771533727645874, 2.7640624046325684, 2.7566351890563965, 2.7492525577545166, 2.7419145107269287, 2.73462176322937, 2.727374792098999, 2.7201733589172363, 2.7130184173583984, 2.7059097290039062, 2.698848009109497, 2.691833019256592, 2.6848652362823486, 2.677945137023926, 2.671072244644165, 2.6642472743988037, 2.6574699878692627, 2.6507408618927, 2.644059658050537, 2.6374266147613525, 2.6308419704437256, 2.624305248260498, 2.617816925048828, 2.6113767623901367, 2.604984998703003, 2.5986413955688477, 2.59234619140625, 2.5860989093780518, 2.579899787902832, 2.5737485885620117, 2.567645311355591, 2.5615899562835693, 2.555582046508789, 2.549621820449829, 2.5437090396881104, 2.5378432273864746, 2.53202486038208, 2.5262532234191895, 2.5205280780792236, 2.5148496627807617, 2.5092177391052246, 2.503631591796875, 2.498091459274292, 2.4925971031188965, 2.4871480464935303, 2.4817442893981934, 2.4763853549957275, 2.4710710048675537, 2.465801239013672, 2.460575580596924, 2.4553937911987305, 2.4502556324005127, 2.4451608657836914, 2.4401090145111084, 2.4351000785827637, 2.430133581161499, 2.4252090454101562, 2.4203267097473145, 2.4154856204986572, 2.4106860160827637, 2.4059271812438965, 2.4012091159820557, 2.396531343460083, 2.3918936252593994, 2.3872954845428467, 2.382736921310425, 2.3782174587249756, 2.373736619949341, 2.3692941665649414, 2.3648898601531982, 2.3605234622955322, 2.356194496154785, 2.351902723312378, 2.3476476669311523, 2.3434293270111084, 2.339246988296509, 2.3351006507873535, 2.3309898376464844, 2.326914072036743, 2.322873592376709, 2.3188674449920654, 2.3148956298828125, 2.310957908630371, -2.307053804397583, -2.310957908630371, -2.3148956298828125, -2.3188674449920654, -2.322873592376709, -2.326914072036743, -2.3309898376464844, -2.3351006507873535, -2.339246988296509, -2.3434293270111084, -2.3476476669311523, -2.351902723312378, -2.356194496154785, -2.3605234622955322, -2.3648898601531982, -2.3692941665649414, -2.373736619949341, -2.3782174587249756, -2.382736921310425, -2.3872954845428467, -2.3918936252593994, -2.396531343460083, -2.4012091159820557, -2.4059271812438965, -2.4106860160827637, -2.4154856204986572, -2.4203267097473145, -2.4252090454101562, -2.430133581161499, -2.4351000785827637, -2.4401090145111084, -2.4451608657836914, -2.4502556324005127, -2.4553937911987305, -2.460575580596924, -2.465801239013672, -2.4710710048675537, -2.4763853549957275, -2.4817442893981934, -2.4871480464935303, -2.4925971031188965, -2.498091459274292, -2.503631591796875, -2.5092177391052246, -2.5148496627807617, -2.5205280780792236, -2.5262532234191895, -2.53202486038208, -2.5378432273864746, -2.5437090396881104, -2.549621820449829, -2.555582046508789, -2.5615899562835693, -2.567645311355591, -2.5737485885620117, -2.579899787902832, -2.5860989093780518, -2.59234619140625, -2.5986413955688477, -2.604984998703003, -2.6113767623901367, -2.617816925048828, -2.624305248260498, -2.6308419704437256, -2.6374266147613525, -2.644059658050537, -2.6507408618927, -2.6574699878692627, -2.6642472743988037, -2.671072244644165, -2.677945137023926, -2.6848652362823486, -2.691833019256592, -2.698848009109497, -2.7059097290039062, -2.7130184173583984, -2.7201733589172363, -2.727374792098999, -2.73462176322937, -2.7419145107269287, -2.7492525577545166, -2.7566351890563965, -2.7640624046325684, -2.771533727645874, -2.779048442840576, -2.7866063117980957, -2.7942066192626953, -2.801849126815796, -2.80953311920166, -2.81725811958313, -2.8250234127044678, -2.8328282833099365, -2.840672492980957, -2.848554849624634, -2.8564748764038086, -2.864431858062744, -2.872425079345703, -2.8804538249969482, -2.888516902923584, -2.8966140747070312, -2.9047439098358154, -2.9129059314727783, -2.9210989475250244, -2.9293222427368164, -2.937574625015259, -2.9458553791046143, -2.9541635513305664, -2.9624979496002197, -2.9708573818206787, -2.979241132736206, -2.9876480102539062, -2.996076822280884, -3.004526376724243, -3.012995958328247, -3.021483898162842, -3.029989242553711, -3.038511037826538, -3.0470478534698486, -3.055598258972168, -3.064161539077759, -3.0727362632751465, -3.0813210010528564, -3.089914560317993, -3.0985159873962402, -3.107123613357544, -3.115736246109009, -3.1243529319763184, -3.132972240447998, 3.1415927410125732, 3.132897138595581, 3.1242032051086426, 3.115511655807495, 3.1068241596221924, 3.098141670227051, 3.089466094970703, 3.0807981491088867, 3.072139263153076, 3.063490867614746, 3.054854393005371, 3.0462305545806885, 3.037621021270752, 3.029026985168457, 3.020449638366699, 3.011890172958374, 3.003349781036377, 2.9948294162750244, 2.98633074760437, 2.9778544902801514, 2.9694018363952637, 2.9609739780426025, 2.9525721073150635, 2.944197177886963, 2.935850143432617, 2.9275319576263428, 2.919243812561035, 2.9109866619110107, 2.902761459350586, 2.894568920135498, 2.8864102363586426, 2.878286123275757, 2.870197296142578, 2.862144947052002, 2.8541295528411865, 2.846151828765869, 2.838212728500366, 2.830312967300415, 2.822453022003174, 2.814633846282959, 2.8068559169769287, 2.799119710922241, 2.791425943374634, 2.7837753295898438, 2.77616810798645, 2.7686049938201904, 2.7610862255096436, 2.753612518310547, 2.7461843490600586, 2.7388017177581787, 2.7314653396606445, 2.724175453186035, 2.7169322967529297, 2.7097363471984863, 2.702587842941284, 2.6954870223999023, 2.68843412399292, 2.681429386138916, 2.6744728088378906, 2.667564868927002, 2.660705327987671, 2.6538946628570557, 2.6471328735351562, 2.6404199600219727, 2.633756160736084, 2.627141237258911, 2.6205756664276123, 2.6140589714050293, 2.6075916290283203, 2.601173162460327, 2.594803810119629, 2.5884835720062256, 2.582211971282959, 2.5759894847869873, 2.5698158740997314, 2.563690662384033, 2.5576140880584717, 2.551586151123047, 2.5456061363220215, 2.5396745204925537, 2.5337905883789062, 2.527954578399658, 2.5221662521362305, 2.516425132751465, 2.5107312202453613, 2.50508451461792, 2.4994843006134033, 2.4939305782318115, 2.4884233474731445, 2.482962131500244, 2.477546453475952, 2.4721765518188477, 2.4668517112731934, 2.4615719318389893, 2.456336736679077, 2.451146125793457, 2.4459996223449707, 2.440896987915039, 2.435837984085083, 2.4308218955993652, 2.425848960876465, 2.4209187030792236, 2.4160308837890625, 2.411184787750244, 2.4063806533813477, 2.4016177654266357, 2.3968958854675293, 2.3922150135040283, 2.3875744342803955, 2.3829739093780518, 2.378412961959839, 2.373891830444336, 2.3694095611572266, 2.3649661540985107, 2.3605613708496094, 2.356194496154785, 2.351865530014038, 2.34757399559021, 2.3433196544647217, 2.339102029800415, 2.33492112159729, 2.3307762145996094, 2.326667308807373, 2.3225936889648438, 2.3185553550720215, 2.314551830291748, 2.3105828762054443, 2.3066482543945312, -2.3027474880218506, -2.3066482543945312, -2.3105828762054443, -2.314551830291748, -2.3185553550720215, -2.3225936889648438, -2.326667308807373, -2.3307762145996094, -2.33492112159729, -2.339102029800415, -2.3433196544647217, -2.34757399559021, -2.351865530014038, -2.356194496154785, -2.3605613708496094, -2.3649661540985107, -2.3694095611572266, -2.373891830444336, -2.378412961959839, -2.3829739093780518, -2.3875744342803955, -2.3922150135040283, -2.3968958854675293, -2.4016177654266357, -2.4063806533813477, -2.411184787750244, -2.4160308837890625, -2.4209187030792236, -2.425848960876465, -2.4308218955993652, -2.435837984085083, -2.440896987915039, -2.4459996223449707, -2.451146125793457, -2.456336736679077, -2.4615719318389893, -2.4668517112731934, -2.4721765518188477, -2.477546453475952, -2.482962131500244, -2.4884233474731445, -2.4939305782318115, -2.4994843006134033, -2.50508451461792, -2.5107312202453613, -2.516425132751465, -2.5221662521362305, -2.527954578399658, -2.5337905883789062, -2.5396745204925537, -2.5456061363220215, -2.551586151123047, -2.5576140880584717, -2.563690662384033, -2.5698158740997314, -2.5759894847869873, -2.582211971282959, -2.5884835720062256, -2.594803810119629, -2.601173162460327, -2.6075916290283203, -2.6140589714050293, -2.6205756664276123, -2.627141237258911, -2.633756160736084, -2.6404199600219727, -2.6471328735351562, -2.6538946628570557, -2.660705327987671, -2.667564868927002, -2.6744728088378906, -2.681429386138916, -2.68843412399292, -2.6954870223999023, -2.702587842941284, -2.7097363471984863, -2.7169322967529297, -2.724175453186035, -2.7314653396606445, -2.7388017177581787, -2.7461843490600586, -2.753612518310547, -2.7610862255096436, -2.7686049938201904, -2.77616810798645, -2.7837753295898438, -2.791425943374634, -2.799119710922241, -2.8068559169769287, -2.814633846282959, -2.822453022003174, -2.830312967300415, -2.838212728500366, -2.846151828765869, -2.8541295528411865, -2.862144947052002, -2.870197296142578, -2.878286123275757, -2.8864102363586426, -2.894568920135498, -2.902761459350586, -2.9109866619110107, -2.919243812561035, -2.9275319576263428, -2.935850143432617, -2.944197177886963, -2.9525721073150635, -2.9609739780426025, -2.9694018363952637, -2.9778544902801514, -2.98633074760437, -2.9948294162750244, -3.003349781036377, -3.011890172958374, -3.020449638366699, -3.029026985168457, -3.037621021270752, -3.0462305545806885, -3.054854393005371, -3.063490867614746, -3.072139263153076, -3.0807981491088867, -3.089466094970703, -3.098141670227051, -3.1068241596221924, -3.115511655807495, -3.1242032051086426, -3.132897138595581, 3.1415927410125732, 3.1328208446502686, 3.1240506172180176, 3.1152830123901367, 3.1065192222595215, 3.0977611541748047, 3.0890095233917236, 3.080266237258911, 3.0715320110321045, 3.0628087520599365, 3.0540974140167236, 3.0453991889953613, 3.0367157459259033, 3.028048038482666, 3.019397497177124, 3.010765314102173, 3.002152681350708, 2.993560791015625, 2.9849908351898193, 2.9764440059661865, 2.967921495437622, 2.9594242572784424, 2.950953722000122, 2.9425108432769775, 2.934096336364746, 2.9257118701934814, 2.917357921600342, 2.9090356826782227, 2.9007461071014404, 2.8924903869628906, 2.8842689990997314, 2.8760828971862793, 2.8679332733154297, 2.85982084274292, 2.851746082305908, 2.84371018409729, 2.8357138633728027, 2.8277575969696045, 2.8198421001434326, 2.8119683265686035, 2.8041365146636963, 2.7963476181030273, 2.788602352142334, 2.780900716781616, 2.7732436656951904, 2.765631675720215, 2.7580652236938477, 2.750544548034668, 2.743070125579834, 2.735642671585083, 2.728262186050415, 2.7209293842315674, 2.71364426612854, 2.706407070159912, 2.699218511581421, 2.6920783519744873, 2.6849870681762695, 2.677945137023926, 2.670952081680298, 2.664008617401123, 2.6571147441864014, 2.650270462036133, 2.6434760093688965, 2.6367313861846924, 2.6300365924835205, 2.623391628265381, 2.6167969703674316, 2.6102519035339355, 2.60375714302063, 2.5973122119903564, 2.5909171104431152, 2.5845718383789062, 2.5782763957977295, 2.572030544281006, 2.5658342838287354, 2.559687614440918, 2.5535900592803955, 2.547541618347168, 2.5415425300598145, 2.5355920791625977, 2.5296902656555176, 2.523836851119995, 2.5180318355560303, 2.512274980545044, 2.506565809249878, 2.5009045600891113, 2.495290517807007, 2.4897234439849854, 2.484203577041626, 2.4787302017211914, 2.4733033180236816, 2.4679224491119385, 2.462587356567383, 2.4572978019714355, 2.4520535469055176, 2.44685435295105, 2.441699743270874, 2.436589479446411, 2.431523323059082, 2.4265010356903076, 2.4215219020843506, 2.41658616065979, 2.4116930961608887, 2.4068424701690674, 2.402033805847168, 2.3972673416137695, 2.3925421237945557, 2.3878581523895264, 2.3832149505615234, 2.3786122798919678, 2.374049663543701, 2.3695271015167236, 2.365043878555298, 2.3605997562408447, 2.356194496154785, 2.351827621459961, 2.347499132156372, 2.3432083129882812, 2.3389549255371094, 2.3347384929656982, 2.330559015274048, 2.326416015625, 2.3223092555999756, 2.3182380199432373, 2.314202308654785, 2.31020188331604, 2.3062360286712646, 2.302304744720459, -2.298407554626465, -2.302304744720459, -2.3062360286712646, -2.31020188331604, -2.314202308654785, -2.3182380199432373, -2.3223092555999756, -2.326416015625, -2.330559015274048, -2.3347384929656982, -2.3389549255371094, -2.3432083129882812, -2.347499132156372, -2.351827621459961, -2.356194496154785, -2.3605997562408447, -2.365043878555298, -2.3695271015167236, -2.374049663543701, -2.3786122798919678, -2.3832149505615234, -2.3878581523895264, -2.3925421237945557, -2.3972673416137695, -2.402033805847168, -2.4068424701690674, -2.4116930961608887, -2.41658616065979, -2.4215219020843506, -2.4265010356903076, -2.431523323059082, -2.436589479446411, -2.441699743270874, -2.44685435295105, -2.4520535469055176, -2.4572978019714355, -2.462587356567383, -2.4679224491119385, -2.4733033180236816, -2.4787302017211914, -2.484203577041626, -2.4897234439849854, -2.495290517807007, -2.5009045600891113, -2.506565809249878, -2.512274980545044, -2.5180318355560303, -2.523836851119995, -2.5296902656555176, -2.5355920791625977, -2.5415425300598145, -2.547541618347168, -2.5535900592803955, -2.559687614440918, -2.5658342838287354, -2.572030544281006, -2.5782763957977295, -2.5845718383789062, -2.5909171104431152, -2.5973122119903564, -2.60375714302063, -2.6102519035339355, -2.6167969703674316, -2.623391628265381, -2.6300365924835205, -2.6367313861846924, -2.6434760093688965, -2.650270462036133, -2.6571147441864014, -2.664008617401123, -2.670952081680298, -2.677945137023926, -2.6849870681762695, -2.6920783519744873, -2.699218511581421, -2.706407070159912, -2.71364426612854, -2.7209293842315674, -2.728262186050415, -2.735642671585083, -2.743070125579834, -2.750544548034668, -2.7580652236938477, -2.765631675720215, -2.7732436656951904, -2.780900716781616, -2.788602352142334, -2.7963476181030273, -2.8041365146636963, -2.8119683265686035, -2.8198421001434326, -2.8277575969696045, -2.8357138633728027, -2.84371018409729, -2.851746082305908, -2.85982084274292, -2.8679332733154297, -2.8760828971862793, -2.8842689990997314, -2.8924903869628906, -2.9007461071014404, -2.9090356826782227, -2.917357921600342, -2.9257118701934814, -2.934096336364746, -2.9425108432769775, -2.950953722000122, -2.9594242572784424, -2.967921495437622, -2.9764440059661865, -2.9849908351898193, -2.993560791015625, -3.002152681350708, -3.010765314102173, -3.019397497177124, -3.028048038482666, -3.0367157459259033, -3.0453991889953613, -3.0540974140167236, -3.0628087520599365, -3.0715320110321045, -3.080266237258911, -3.0890095233917236, -3.0977611541748047, -3.1065192222595215, -3.1152830123901367, -3.1240506172180176, -3.1328208446502686, 3.1415927410125732, 3.1327433586120605, 3.1238954067230225, 3.1150503158569336, 3.1062092781066895, 3.0973737239837646, 3.088545083999634, 3.0797247886657715, 3.0709140300750732, 3.0621144771575928, 3.0533270835876465, 3.044553279876709, 3.035794496536255, 3.0270519256591797, 3.018326997756958, 3.0096209049224854, 3.0009348392486572, 2.992269992828369, 2.9836277961730957, 2.9750092029571533, 2.9664156436920166, 2.957848072052002, 2.949307680130005, 2.940795660018921, 2.9323132038116455, 2.923861026763916, 2.915440320968628, 2.9070520401000977, 2.8986973762512207, 2.8903770446777344, 2.882092237472534, 2.8738436698913574, 2.8656320571899414, 2.8574588298797607, 2.8493242263793945, 2.841229200363159, 2.833174705505371, 2.8251612186431885, 2.8171896934509277, 2.809260368347168, 2.8013744354248047, 2.793532371520996, 2.7857346534729004, 2.777981758117676, 2.7702744007110596, 2.76261305809021, 2.754997968673706, 2.7474300861358643, 2.7399094104766846, 2.732436418533325, 2.7250118255615234, 2.7176353931427, 2.7103078365325928, 2.7030293941497803, 2.695800304412842, 2.6886208057403564, 2.6814911365509033, 2.6744115352630615, 2.667382001876831, 2.66040301322937, 2.6534743309020996, 2.6465964317321777, 2.6397690773010254, 2.632992744445801, 2.6262669563293457, 2.6195921897888184, 2.6129682064056396, 2.6063950061798096, 2.5998728275299072, 2.5934011936187744, 2.5869805812835693, 2.580610513687134, 2.5742909908294678, 2.5680220127105713, 2.5618033409118652, 2.5556349754333496, 2.5495166778564453, 2.5434484481811523, 2.5374298095703125, 2.531460762023926, 2.525541305541992, 2.5196709632873535, 2.5138494968414307, 2.5080769062042236, 2.5023529529571533, 2.4966771602630615, 2.491049289703369, 2.4854695796966553, 2.4799370765686035, 2.474452018737793, 2.4690139293670654, 2.4636223316192627, 2.458277463912964, 2.4529786109924316, 2.447725534439087, 2.4425179958343506, 2.4373555183410645, 2.4322381019592285, 2.4271650314331055, 2.4221365451812744, 2.417151689529419, 2.412210702896118, 2.4073126316070557, 2.4024577140808105, 2.3976454734802246, 2.3928751945495605, 2.3881471157073975, 2.383460521697998, 2.378815174102783, 2.3742105960845947, 2.3696465492248535, 2.3651227951049805, 2.3606388568878174, 2.356194496154785, 2.3517892360687256, 2.3474228382110596, 2.343094825744629, 2.3388049602508545, 2.334552764892578, 2.3303382396698, 2.3261606693267822, 2.3220198154449463, 2.317915439605713, 2.3138468265533447, 2.309814214706421, 2.305816888809204, 2.3018548488616943, 2.297927141189575, -2.294034004211426, -2.297927141189575, -2.3018548488616943, -2.305816888809204, -2.309814214706421, -2.3138468265533447, -2.317915439605713, -2.3220198154449463, -2.3261606693267822, -2.3303382396698, -2.334552764892578, -2.3388049602508545, -2.343094825744629, -2.3474228382110596, -2.3517892360687256, -2.356194496154785, -2.3606388568878174, -2.3651227951049805, -2.3696465492248535, -2.3742105960845947, -2.378815174102783, -2.383460521697998, -2.3881471157073975, -2.3928751945495605, -2.3976454734802246, -2.4024577140808105, -2.4073126316070557, -2.412210702896118, -2.417151689529419, -2.4221365451812744, -2.4271650314331055, -2.4322381019592285, -2.4373555183410645, -2.4425179958343506, -2.447725534439087, -2.4529786109924316, -2.458277463912964, -2.4636223316192627, -2.4690139293670654, -2.474452018737793, -2.4799370765686035, -2.4854695796966553, -2.491049289703369, -2.4966771602630615, -2.5023529529571533, -2.5080769062042236, -2.5138494968414307, -2.5196709632873535, -2.525541305541992, -2.531460762023926, -2.5374298095703125, -2.5434484481811523, -2.5495166778564453, -2.5556349754333496, -2.5618033409118652, -2.5680220127105713, -2.5742909908294678, -2.580610513687134, -2.5869805812835693, -2.5934011936187744, -2.5998728275299072, -2.6063950061798096, -2.6129682064056396, -2.6195921897888184, -2.6262669563293457, -2.632992744445801, -2.6397690773010254, -2.6465964317321777, -2.6534743309020996, -2.66040301322937, -2.667382001876831, -2.6744115352630615, -2.6814911365509033, -2.6886208057403564, -2.695800304412842, -2.7030293941497803, -2.7103078365325928, -2.7176353931427, -2.7250118255615234, -2.732436418533325, -2.7399094104766846, -2.7474300861358643, -2.754997968673706, -2.76261305809021, -2.7702744007110596, -2.777981758117676, -2.7857346534729004, -2.793532371520996, -2.8013744354248047, -2.809260368347168, -2.8171896934509277, -2.8251612186431885, -2.833174705505371, -2.841229200363159, -2.8493242263793945, -2.8574588298797607, -2.8656320571899414, -2.8738436698913574, -2.882092237472534, -2.8903770446777344, -2.8986973762512207, -2.9070520401000977, -2.915440320968628, -2.923861026763916, -2.9323132038116455, -2.940795660018921, -2.949307680130005, -2.957848072052002, -2.9664156436920166, -2.9750092029571533, -2.9836277961730957, -2.992269992828369, -3.0009348392486572, -3.0096209049224854, -3.018326997756958, -3.0270519256591797, -3.035794496536255, -3.044553279876709, -3.0533270835876465, -3.0621144771575928, -3.0709140300750732, -3.0797247886657715, -3.088545083999634, -3.0973737239837646, -3.1062092781066895, -3.1150503158569336, -3.1238954067230225, -3.1327433586120605, 3.1415927410125732, 3.132664203643799, 3.123737335205078, 3.1148133277893066, 3.105893611907959, 3.0969793796539307, 3.0880722999572754, 3.0791738033294678, 3.0702850818634033, 3.0614078044891357, 3.0525431632995605, 3.0436923503875732, 3.0348570346832275, 3.026038408279419, 3.017237663269043, 3.008456230163574, 2.9996955394744873, 2.9909567832946777, 2.982240915298462, 2.9735496044158936, 2.964883804321289, 2.956244707107544, 2.9476335048675537, 2.939051389694214, 2.930499315261841, 2.92197847366333, 2.913490056991577, 2.9050347805023193, 2.8966140747070312, 2.888228416442871, 2.8798792362213135, 2.8715670108795166, 2.863292932510376, 2.855057954788208, 2.846862554550171, 2.838707685470581, 2.830594301223755, 2.8225231170654297, 2.8144946098327637, 2.806509494781494, 2.7985687255859375, 2.790672540664673, 2.7828218936920166, 2.775017261505127, 2.767259120941162, 2.759547710418701, 2.7518839836120605, 2.7442681789398193, 2.7367007732391357, 2.729182243347168, 2.721712589263916, 2.7142927646636963, 2.7069225311279297, 2.6996023654937744, 2.6923325061798096, 2.6851134300231934, 2.677945137023926, 2.670827627182007, 2.663761615753174, 2.6567468643188477, 2.6497833728790283, 2.642871618270874, 2.6360116004943848, 2.6292030811309814, 2.6224465370178223, 2.615741729736328, 2.609088659286499, 2.602487325668335, 2.595937490463257, 2.589439630508423, 2.582993268966675, 2.576598644256592, 2.5702552795410156, 2.5639631748199463, 2.557722330093384, 2.551532506942749, 2.545393466949463, 2.5393052101135254, 2.5332677364349365, 2.527280330657959, 2.521343231201172, 2.515455961227417, 2.5096185207366943, 2.5038304328918457, 2.498091459274292, 2.492401599884033, 2.4867606163024902, 2.481168031692505, 2.475623369216919, 2.4701268672943115, 2.4646778106689453, 2.4592761993408203, 2.453921318054199, 2.448613405227661, 2.4433517456054688, 2.438136100769043, 2.432966470718384, 2.427841901779175, 2.422762632369995, 2.4177281856536865, 2.4127378463745117, 2.40779185295105, 2.4028894901275635, 2.3980305194854736, 2.393214702606201, 2.388441324234009, 2.3837103843688965, 2.379021644592285, 2.3743743896484375, 2.3697683811187744, 2.3652031421661377, 2.3606786727905273, 2.356194496154785, 2.351750135421753, 2.3473451137542725, 2.3429794311523438, 2.3386523723602295, 2.3343639373779297, 2.330113410949707, 2.3259007930755615, 2.321725368499756, 2.31758713722229, 2.3134853839874268, 2.309420108795166, 2.3053908348083496, 2.3013970851898193, 2.297438621520996, 2.293515205383301, -2.289626359939575, -2.293515205383301, -2.297438621520996, -2.3013970851898193, -2.3053908348083496, -2.309420108795166, -2.3134853839874268, -2.31758713722229, -2.321725368499756, -2.3259007930755615, -2.330113410949707, -2.3343639373779297, -2.3386523723602295, -2.3429794311523438, -2.3473451137542725, -2.351750135421753, -2.356194496154785, -2.3606786727905273, -2.3652031421661377, -2.3697683811187744, -2.3743743896484375, -2.379021644592285, -2.3837103843688965, -2.388441324234009, -2.393214702606201, -2.3980305194854736, -2.4028894901275635, -2.40779185295105, -2.4127378463745117, -2.4177281856536865, -2.422762632369995, -2.427841901779175, -2.432966470718384, -2.438136100769043, -2.4433517456054688, -2.448613405227661, -2.453921318054199, -2.4592761993408203, -2.4646778106689453, -2.4701268672943115, -2.475623369216919, -2.481168031692505, -2.4867606163024902, -2.492401599884033, -2.498091459274292, -2.5038304328918457, -2.5096185207366943, -2.515455961227417, -2.521343231201172, -2.527280330657959, -2.5332677364349365, -2.5393052101135254, -2.545393466949463, -2.551532506942749, -2.557722330093384, -2.5639631748199463, -2.5702552795410156, -2.576598644256592, -2.582993268966675, -2.589439630508423, -2.595937490463257, -2.602487325668335, -2.609088659286499, -2.615741729736328, -2.6224465370178223, -2.6292030811309814, -2.6360116004943848, -2.642871618270874, -2.6497833728790283, -2.6567468643188477, -2.663761615753174, -2.670827627182007, -2.677945137023926, -2.6851134300231934, -2.6923325061798096, -2.6996023654937744, -2.7069225311279297, -2.7142927646636963, -2.721712589263916, -2.729182243347168, -2.7367007732391357, -2.7442681789398193, -2.7518839836120605, -2.759547710418701, -2.767259120941162, -2.775017261505127, -2.7828218936920166, -2.790672540664673, -2.7985687255859375, -2.806509494781494, -2.8144946098327637, -2.8225231170654297, -2.830594301223755, -2.838707685470581, -2.846862554550171, -2.855057954788208, -2.863292932510376, -2.8715670108795166, -2.8798792362213135, -2.888228416442871, -2.8966140747070312, -2.9050347805023193, -2.913490056991577, -2.92197847366333, -2.930499315261841, -2.939051389694214, -2.9476335048675537, -2.956244707107544, -2.964883804321289, -2.9735496044158936, -2.982240915298462, -2.9909567832946777, -2.9996955394744873, -3.008456230163574, -3.017237663269043, -3.026038408279419, -3.0348570346832275, -3.0436923503875732, -3.0525431632995605, -3.0614078044891357, -3.0702850818634033, -3.0791738033294678, -3.0880722999572754, -3.0969793796539307, -3.105893611907959, -3.1148133277893066, -3.123737335205078, -3.132664203643799, 3.1415927410125732, 3.1325838565826416, 3.1235766410827637, 3.114572286605835, 3.10557222366333, 3.0965781211853027, 3.0875911712646484, 3.078613042831421, 3.0696449279785156, 3.0606884956359863, 3.0517451763153076, 3.042816162109375, 3.033902883529663, 3.0250065326690674, 3.0161290168762207, 3.0072712898254395, 2.998434543609619, 2.9896204471588135, 2.980829954147339, 2.97206449508667, 2.963325262069702, 2.954613447189331, 2.945930242538452, 2.937276840209961, 2.928654193878174, 2.9200637340545654, 2.911506414413452, 2.9029834270477295, 2.8944952487945557, 2.8860435485839844, 2.877629041671753, 2.8692524433135986, 2.860914945602417, 2.8526172637939453, 2.8443603515625, 2.8361449241638184, 2.827971935272217, 2.8198421001434326, 2.811756134033203, 2.8037145137786865, 2.795718193054199, 2.7877676486968994, 2.7798633575439453, 2.7720062732696533, 2.7641966342926025, 2.7564351558685303, 2.7487220764160156, 2.741058111190796, 2.73344349861145, 2.7258787155151367, 2.7183642387390137, 2.710900068283081, 2.703486919403076, 2.696124792098999, 2.688814163208008, 2.6815550327301025, 2.6743478775024414, 2.6671926975250244, 2.6600897312164307, 2.6530392169952393, 2.646040916442871, 2.6390953063964844, 2.632202386856079, 2.625361919403076, 2.618574380874634, 2.611839532852173, 2.6051571369171143, 2.598527669906616, 2.5919506549835205, 2.5854263305664062, 2.5789546966552734, 2.5725350379943848, 2.5661680698394775, 2.5598530769348145, 2.5535900592803955, 2.5473790168762207, 2.541219472885132, 2.535111665725708, 2.529055118560791, 2.5230495929718018, 2.5170950889587402, 2.5111911296844482, 2.505337715148926, 2.4995346069335938, 2.493781328201294, 2.4880776405334473, 2.4824233055114746, 2.476818084716797, 2.471261739730835, 2.4657540321350098, 2.460294485092163, 2.454882860183716, 2.4495186805725098, 2.444201946258545, 2.438931941986084, 2.433708667755127, 2.4285318851470947, 2.42340087890625, 2.4183154106140137, 2.4132752418518066, 2.40828013420105, 2.403329372406006, 2.398422956466675, 2.3935601711273193, 2.3887410163879395, 2.383965015411377, 2.3792319297790527, 2.3745410442352295, 2.3698923587799072, 2.3652851581573486, 2.3607194423675537, 2.356194496154785, 2.351710319519043, 2.34726619720459, 2.3428618907928467, 2.3384971618652344, 2.3341715335845947, 2.3298847675323486, 2.325636386871338, 2.3214259147644043, 2.3172531127929688, 2.313117742538452, 2.3090193271636963, 2.304957389831543, 2.300931692123413, 2.2969419956207275, 2.292987585067749, 2.2890686988830566, -2.285184383392334, -2.2890686988830566, -2.292987585067749, -2.2969419956207275, -2.300931692123413, -2.304957389831543, -2.3090193271636963, -2.313117742538452, -2.3172531127929688, -2.3214259147644043, -2.325636386871338, -2.3298847675323486, -2.3341715335845947, -2.3384971618652344, -2.3428618907928467, -2.34726619720459, -2.351710319519043, -2.356194496154785, -2.3607194423675537, -2.3652851581573486, -2.3698923587799072, -2.3745410442352295, -2.3792319297790527, -2.383965015411377, -2.3887410163879395, -2.3935601711273193, -2.398422956466675, -2.403329372406006, -2.40828013420105, -2.4132752418518066, -2.4183154106140137, -2.42340087890625, -2.4285318851470947, -2.433708667755127, -2.438931941986084, -2.444201946258545, -2.4495186805725098, -2.454882860183716, -2.460294485092163, -2.4657540321350098, -2.471261739730835, -2.476818084716797, -2.4824233055114746, -2.4880776405334473, -2.493781328201294, -2.4995346069335938, -2.505337715148926, -2.5111911296844482, -2.5170950889587402, -2.5230495929718018, -2.529055118560791, -2.535111665725708, -2.541219472885132, -2.5473790168762207, -2.5535900592803955, -2.5598530769348145, -2.5661680698394775, -2.5725350379943848, -2.5789546966552734, -2.5854263305664062, -2.5919506549835205, -2.598527669906616, -2.6051571369171143, -2.611839532852173, -2.618574380874634, -2.625361919403076, -2.632202386856079, -2.6390953063964844, -2.646040916442871, -2.6530392169952393, -2.6600897312164307, -2.6671926975250244, -2.6743478775024414, -2.6815550327301025, -2.688814163208008, -2.696124792098999, -2.703486919403076, -2.710900068283081, -2.7183642387390137, -2.7258787155151367, -2.73344349861145, -2.741058111190796, -2.7487220764160156, -2.7564351558685303, -2.7641966342926025, -2.7720062732696533, -2.7798633575439453, -2.7877676486968994, -2.795718193054199, -2.8037145137786865, -2.811756134033203, -2.8198421001434326, -2.827971935272217, -2.8361449241638184, -2.8443603515625, -2.8526172637939453, -2.860914945602417, -2.8692524433135986, -2.877629041671753, -2.8860435485839844, -2.8944952487945557, -2.9029834270477295, -2.911506414413452, -2.9200637340545654, -2.928654193878174, -2.937276840209961, -2.945930242538452, -2.954613447189331, -2.963325262069702, -2.97206449508667, -2.980829954147339, -2.9896204471588135, -2.998434543609619, -3.0072712898254395, -3.0161290168762207, -3.0250065326690674, -3.033902883529663, -3.042816162109375, -3.0517451763153076, -3.0606884956359863, -3.0696449279785156, -3.078613042831421, -3.0875911712646484, -3.0965781211853027, -3.10557222366333, -3.114572286605835, -3.1235766410827637, -3.1325838565826416, 3.1415927410125732, 3.1325020790100098, 3.123412847518921, 3.1143267154693604, 3.1052451133728027, 3.0961694717407227, 3.0871012210845947, 3.0780420303344727, 3.068993091583252, 3.0599563121795654, 3.0509328842163086, 3.041923999786377, 3.032931327819824, 3.023956537246704, 3.015000581741333, 3.0060648918151855, 2.9971511363983154, 2.988260269165039, 2.979393720626831, 2.970552921295166, 2.9617390632629395, 2.952953338623047, 2.944197177886963, 2.935471296310425, 2.9267773628234863, 2.9181160926818848, 2.9094889163970947, 2.9008965492248535, 2.8923404216766357, 2.883821487426758, 2.875340700149536, 2.866898775100708, 2.858496904373169, 2.8501358032226562, 2.8418166637420654, 2.8335399627685547, 2.8253064155578613, 2.817117214202881, 2.8089730739593506, 2.8008742332458496, 2.7928216457366943, 2.784816026687622, 2.776857852935791, 2.7689478397369385, 2.7610862255096436, 2.7532739639282227, 2.745511293411255, 2.7377984523773193, 2.7301363945007324, 2.722525119781494, 2.7149651050567627, 2.7074568271636963, 2.700000286102295, 2.692595958709717, 2.685244083404541, 2.677945137023926, 2.670698881149292, 2.6635055541992188, 2.6563656330108643, 2.6492791175842285, 2.6422460079193115, 2.6352663040161133, 2.628340482711792, 2.6214680671691895, 2.614649534225464, 2.607884407043457, 2.601173162460327, 2.594515562057495, 2.587911367416382, 2.5813605785369873, 2.5748634338378906, 2.5684194564819336, 2.562028646469116, 2.5556910037994385, 2.549406051635742, 2.5431737899780273, 2.536993980407715, 2.5308666229248047, 2.5247914791107178, 2.518768072128296, 2.512796401977539, 2.506875991821289, 2.501007080078125, 2.4951887130737305, 2.4894211292266846, 2.483704090118408, 2.478036880493164, 2.472419500350952, 2.4668517112731934, 2.4613330364227295, 2.4558632373809814, 2.450441837310791, 2.445068597793579, 2.4397432804107666, 2.4344656467437744, 2.4292349815368652, 2.424051284790039, 2.4189140796661377, 2.413822889328003, 2.4087774753570557, 2.403777599334717, 2.398822784423828, 2.3939125537872314, 2.3890464305877686, 2.3842244148254395, 2.379446029663086, 2.37471079826355, 2.370018482208252, 2.365368604660034, 2.3607606887817383, 2.356194496154785, 2.3516695499420166, 2.3471856117248535, 2.342742443084717, 2.338339328765869, 2.3339760303497314, 2.3296520709991455, 2.3253672122955322, 2.3211212158203125, 2.316913366317749, 2.312743663787842, 2.3086113929748535, 2.304516315460205, 2.3004581928253174, 2.2964365482330322, 2.2924511432647705, 2.288501501083374, 2.2845871448516846, -2.280707836151123, -2.2845871448516846, -2.288501501083374, -2.2924511432647705, -2.2964365482330322, -2.3004581928253174, -2.304516315460205, -2.3086113929748535, -2.312743663787842, -2.316913366317749, -2.3211212158203125, -2.3253672122955322, -2.3296520709991455, -2.3339760303497314, -2.338339328765869, -2.342742443084717, -2.3471856117248535, -2.3516695499420166, -2.356194496154785, -2.3607606887817383, -2.365368604660034, -2.370018482208252, -2.37471079826355, -2.379446029663086, -2.3842244148254395, -2.3890464305877686, -2.3939125537872314, -2.398822784423828, -2.403777599334717, -2.4087774753570557, -2.413822889328003, -2.4189140796661377, -2.424051284790039, -2.4292349815368652, -2.4344656467437744, -2.4397432804107666, -2.445068597793579, -2.450441837310791, -2.4558632373809814, -2.4613330364227295, -2.4668517112731934, -2.472419500350952, -2.478036880493164, -2.483704090118408, -2.4894211292266846, -2.4951887130737305, -2.501007080078125, -2.506875991821289, -2.512796401977539, -2.518768072128296, -2.5247914791107178, -2.5308666229248047, -2.536993980407715, -2.5431737899780273, -2.549406051635742, -2.5556910037994385, -2.562028646469116, -2.5684194564819336, -2.5748634338378906, -2.5813605785369873, -2.587911367416382, -2.594515562057495, -2.601173162460327, -2.607884407043457, -2.614649534225464, -2.6214680671691895, -2.628340482711792, -2.6352663040161133, -2.6422460079193115, -2.6492791175842285, -2.6563656330108643, -2.6635055541992188, -2.670698881149292, -2.677945137023926, -2.685244083404541, -2.692595958709717, -2.700000286102295, -2.7074568271636963, -2.7149651050567627, -2.722525119781494, -2.7301363945007324, -2.7377984523773193, -2.745511293411255, -2.7532739639282227, -2.7610862255096436, -2.7689478397369385, -2.776857852935791, -2.784816026687622, -2.7928216457366943, -2.8008742332458496, -2.8089730739593506, -2.817117214202881, -2.8253064155578613, -2.8335399627685547, -2.8418166637420654, -2.8501358032226562, -2.858496904373169, -2.866898775100708, -2.875340700149536, -2.883821487426758, -2.8923404216766357, -2.9008965492248535, -2.9094889163970947, -2.9181160926818848, -2.9267773628234863, -2.935471296310425, -2.944197177886963, -2.952953338623047, -2.9617390632629395, -2.970552921295166, -2.979393720626831, -2.988260269165039, -2.9971511363983154, -3.0060648918151855, -3.015000581741333, -3.023956537246704, -3.032931327819824, -3.041923999786377, -3.0509328842163086, -3.0599563121795654, -3.068993091583252, -3.0780420303344727, -3.0871012210845947, -3.0961694717407227, -3.1052451133728027, -3.1143267154693604, -3.123412847518921, -3.1325020790100098, 3.1415927410125732, 3.132418632507324, 3.123246192932129, 3.114076614379883, 3.1049118041992188, 3.0957531929016113, 3.086602210998535, 3.077460527420044, 3.0683295726776123, 3.059210777282715, 3.050105571746826, 3.041015625, 3.031942367553711, 3.0228872299194336, 3.0138516426086426, 3.0048370361328125, 2.995844602584839, 2.9868757724761963, 2.9779319763183594, 2.9690146446228027, 2.960124969482422, 2.9512641429901123, 2.9424333572387695, 2.933634042739868, 2.9248673915863037, 2.9161343574523926, 2.9074361324310303, 2.8987739086151123, 2.890148639678955, 2.881561279296875, 2.8730132579803467, 2.8645050525665283, 2.8560380935668945, 2.8476126194000244, 2.8392302989959717, 2.8308913707733154, 2.822597026824951, 2.814347743988037, 2.8061442375183105, 2.797987699508667, 2.7898783683776855, 2.7818169593811035, 2.773804187774658, 2.765840530395508, 2.7579267024993896, 2.750063180923462, 2.7422502040863037, 2.7344884872436523, 2.726778268814087, 2.7191202640533447, 2.711514472961426, 2.7039613723754883, 2.6964614391326904, 2.6890146732330322, 2.681621551513672, 2.6742820739746094, 2.666996479034424, 2.6597652435302734, 2.652588129043579, 2.645465612411499, 2.638397216796875, 2.6313836574554443, 2.624424695968628, 2.617520570755005, 2.610670804977417, 2.6038758754730225, 2.597135543823242, 2.590449810028076, 2.5838184356689453, 2.5772416591644287, 2.570719003677368, 2.5642507076263428, 2.5578362941741943, 2.551476001739502, 2.5451691150665283, 2.5389161109924316, 2.5327162742614746, 2.5265696048736572, 2.5204758644104004, 2.514434814453125, 2.508446216583252, 2.502509832382202, 2.4966251850128174, 2.4907925128936768, 2.485010862350464, 2.479280471801758, 2.4736008644104004, 2.4679715633392334, 2.4623923301696777, 2.4568631649017334, 2.451383352279663, 2.4459526538848877, 2.440570831298828, 2.435237407684326, 2.4299521446228027, 2.4247145652770996, 2.4195244312286377, 2.414381265640259, 2.4092845916748047, 2.4042344093322754, 2.3992300033569336, 2.3942713737487793, 2.389357566833496, 2.384488821029663, 2.379664421081543, 2.3748838901519775, 2.3701469898223877, 2.3654534816741943, 2.36080265045166, 2.356194496154785, 2.351628303527832, 2.3471038341522217, 2.342620611190796, 2.3381783962249756, 2.3337767124176025, 2.3294150829315186, 2.3250935077667236, 2.3208110332489014, 2.3165676593780518, 2.3123629093170166, 2.308196544647217, 2.304067850112915, 2.2999768257141113, 2.2959227561950684, 2.291905641555786, 2.2879247665405273, 2.283979892730713, 2.2800707817077637, -2.2761967182159424, -2.2800707817077637, -2.283979892730713, -2.2879247665405273, -2.291905641555786, -2.2959227561950684, -2.2999768257141113, -2.304067850112915, -2.308196544647217, -2.3123629093170166, -2.3165676593780518, -2.3208110332489014, -2.3250935077667236, -2.3294150829315186, -2.3337767124176025, -2.3381783962249756, -2.342620611190796, -2.3471038341522217, -2.351628303527832, -2.356194496154785, -2.36080265045166, -2.3654534816741943, -2.3701469898223877, -2.3748838901519775, -2.379664421081543, -2.384488821029663, -2.389357566833496, -2.3942713737487793, -2.3992300033569336, -2.4042344093322754, -2.4092845916748047, -2.414381265640259, -2.4195244312286377, -2.4247145652770996, -2.4299521446228027, -2.435237407684326, -2.440570831298828, -2.4459526538848877, -2.451383352279663, -2.4568631649017334, -2.4623923301696777, -2.4679715633392334, -2.4736008644104004, -2.479280471801758, -2.485010862350464, -2.4907925128936768, -2.4966251850128174, -2.502509832382202, -2.508446216583252, -2.514434814453125, -2.5204758644104004, -2.5265696048736572, -2.5327162742614746, -2.5389161109924316, -2.5451691150665283, -2.551476001739502, -2.5578362941741943, -2.5642507076263428, -2.570719003677368, -2.5772416591644287, -2.5838184356689453, -2.590449810028076, -2.597135543823242, -2.6038758754730225, -2.610670804977417, -2.617520570755005, -2.624424695968628, -2.6313836574554443, -2.638397216796875, -2.645465612411499, -2.652588129043579, -2.6597652435302734, -2.666996479034424, -2.6742820739746094, -2.681621551513672, -2.6890146732330322, -2.6964614391326904, -2.7039613723754883, -2.711514472961426, -2.7191202640533447, -2.726778268814087, -2.7344884872436523, -2.7422502040863037, -2.750063180923462, -2.7579267024993896, -2.765840530395508, -2.773804187774658, -2.7818169593811035, -2.7898783683776855, -2.797987699508667, -2.8061442375183105, -2.814347743988037, -2.822597026824951, -2.8308913707733154, -2.8392302989959717, -2.8476126194000244, -2.8560380935668945, -2.8645050525665283, -2.8730132579803467, -2.881561279296875, -2.890148639678955, -2.8987739086151123, -2.9074361324310303, -2.9161343574523926, -2.9248673915863037, -2.933634042739868, -2.9424333572387695, -2.9512641429901123, -2.960124969482422, -2.9690146446228027, -2.9779319763183594, -2.9868757724761963, -2.995844602584839, -3.0048370361328125, -3.0138516426086426, -3.0228872299194336, -3.031942367553711, -3.041015625, -3.050105571746826, -3.059210777282715, -3.0683295726776123, -3.077460527420044, -3.086602210998535, -3.0957531929016113, -3.1049118041992188, -3.114076614379883, -3.123246192932129, -3.132418632507324, 3.1415927410125732, 3.132333755493164, 3.1230762004852295, 3.1138219833374023, 3.1045725345611572, 3.0953292846679688, 3.0860941410064697, 3.0768682956695557, 3.0676536560058594, 3.0584514141082764, 3.0492632389068604, 3.040090799331665, 3.030935525894165, 3.021798610687256, 3.0126819610595703, 3.003586530685425, 2.994514226913452, 2.985466241836548, 2.9764440059661865, 2.9674487113952637, 2.958481788635254, 2.949544668197632, 2.940638303756714, 2.9317643642425537, 2.9229238033294678, 2.9141175746917725, 2.9053473472595215, 2.8966140747070312, 2.887918472290039, 2.8792622089385986, 2.870645761489868, 2.8620705604553223, 2.8535373210906982, 2.8450467586517334, 2.8366003036499023, 2.8281984329223633, 2.8198421001434326, 2.8115320205688477, 2.803269147872925, 2.795053720474243, 2.7868869304656982, 2.7787692546844482, 2.7707014083862305, 2.762683629989624, 2.7547168731689453, 2.7468016147613525, 2.738938093185425, 2.7311267852783203, 2.7233684062957764, 2.715662956237793, 2.7080111503601074, 2.700413227081299, 2.6928694248199463, 2.68537974357605, 2.677945137023926, 2.670565128326416, 2.6632401943206787, 2.655970573425293, 2.648756265640259, 2.6415975093841553, 2.6344940662384033, 2.627446413040161, 2.6204545497894287, 2.613518238067627, 2.606637477874756, 2.5998125076293945, 2.593043327331543, 2.586329460144043, 2.5796711444854736, 2.573068141937256, 2.5665204524993896, 2.560027837753296, 2.5535900592803955, 2.5472071170806885, 2.5408787727355957, 2.534605026245117, 2.5283854007720947, 2.522219657897949, 2.5161075592041016, 2.5100491046905518, 2.5040438175201416, 2.498091459274292, 2.492191791534424, 2.486344575881958, 2.4805495738983154, 2.474806070327759, 2.469114065170288, 2.463473320007324, 2.457883358001709, 2.452343702316284, 2.44685435295105, 2.4414148330688477, 2.4360244274139404, 2.4306833744049072, 2.4253907203674316, 2.4201464653015137, 2.414950370788574, 2.409801721572876, 2.4047000408172607, 2.3996453285217285, 2.394637107849121, 2.3896749019622803, 2.384758234024048, 2.3798866271972656, 2.3750600814819336, 2.3702781200408936, 2.365540027618408, 2.3608455657958984, 2.356194496154785, 2.35158634185791, 2.347020387649536, 2.342496633529663, 2.338014602661133, 2.333573818206787, 2.329174041748047, 2.324814558029175, 2.320495367050171, 2.316215753555298, 2.3119754791259766, 2.307774305343628, 2.3036115169525146, 2.2994868755340576, 2.2953999042510986, 2.2913503646850586, 2.2873380184173584, 2.2833621501922607, 2.2794225215911865, 2.2755188941955566, -2.271650791168213, -2.2755188941955566, -2.2794225215911865, -2.2833621501922607, -2.2873380184173584, -2.2913503646850586, -2.2953999042510986, -2.2994868755340576, -2.3036115169525146, -2.307774305343628, -2.3119754791259766, -2.316215753555298, -2.320495367050171, -2.324814558029175, -2.329174041748047, -2.333573818206787, -2.338014602661133, -2.342496633529663, -2.347020387649536, -2.35158634185791, -2.356194496154785, -2.3608455657958984, -2.365540027618408, -2.3702781200408936, -2.3750600814819336, -2.3798866271972656, -2.384758234024048, -2.3896749019622803, -2.394637107849121, -2.3996453285217285, -2.4047000408172607, -2.409801721572876, -2.414950370788574, -2.4201464653015137, -2.4253907203674316, -2.4306833744049072, -2.4360244274139404, -2.4414148330688477, -2.44685435295105, -2.452343702316284, -2.457883358001709, -2.463473320007324, -2.469114065170288, -2.474806070327759, -2.4805495738983154, -2.486344575881958, -2.492191791534424, -2.498091459274292, -2.5040438175201416, -2.5100491046905518, -2.5161075592041016, -2.522219657897949, -2.5283854007720947, -2.534605026245117, -2.5408787727355957, -2.5472071170806885, -2.5535900592803955, -2.560027837753296, -2.5665204524993896, -2.573068141937256, -2.5796711444854736, -2.586329460144043, -2.593043327331543, -2.5998125076293945, -2.606637477874756, -2.613518238067627, -2.6204545497894287, -2.627446413040161, -2.6344940662384033, -2.6415975093841553, -2.648756265640259, -2.655970573425293, -2.6632401943206787, -2.670565128326416, -2.677945137023926, -2.68537974357605, -2.6928694248199463, -2.700413227081299, -2.7080111503601074, -2.715662956237793, -2.7233684062957764, -2.7311267852783203, -2.738938093185425, -2.7468016147613525, -2.7547168731689453, -2.762683629989624, -2.7707014083862305, -2.7787692546844482, -2.7868869304656982, -2.795053720474243, -2.803269147872925, -2.8115320205688477, -2.8198421001434326, -2.8281984329223633, -2.8366003036499023, -2.8450467586517334, -2.8535373210906982, -2.8620705604553223, -2.870645761489868, -2.8792622089385986, -2.887918472290039, -2.8966140747070312, -2.9053473472595215, -2.9141175746917725, -2.9229238033294678, -2.9317643642425537, -2.940638303756714, -2.949544668197632, -2.958481788635254, -2.9674487113952637, -2.9764440059661865, -2.985466241836548, -2.994514226913452, -3.003586530685425, -3.0126819610595703, -3.021798610687256, -3.030935525894165, -3.040090799331665, -3.0492632389068604, -3.0584514141082764, -3.0676536560058594, -3.0768682956695557, -3.0860941410064697, -3.0953292846679688, -3.1045725345611572, -3.1138219833374023, -3.1230762004852295, -3.132333755493164, 3.1415927410125732, 3.13224720954895, 3.122903347015381, 3.11356258392334, 3.10422682762146, 3.094897747039795, 3.0855765342712402, 3.0762650966644287, 3.066965103149414, 3.057677984237671, 3.048405408859253, 3.0391488075256348, 3.02990984916687, 3.0206899642944336, 3.0114905834198, 3.0023133754730225, 2.993159770965576, 2.9840312004089355, 2.974928855895996, 2.9658544063568115, 2.9568090438842773, 2.947794198989868, 2.9388110637664795, 2.929861068725586, 2.920945405960083, 2.912065267562866, 2.903221845626831, 2.894416093826294, 2.8856494426727295, 2.876922845840454, 2.868237257003784, 2.8595938682556152, 2.8509933948516846, 2.8424370288848877, 2.833925724029541, 2.8254599571228027, 2.8170409202575684, 2.808669328689575, 2.8003458976745605, 2.792071580886841, 2.783846616744995, 2.77567195892334, 2.7675483226776123, 2.7594759464263916, 2.751455783843994, 2.743488073348999, 2.7355735301971436, 2.727712392807007, 2.719905138015747, 2.7121522426605225, 2.704453945159912, 2.696810722351074, 2.689222812652588, 2.6816904544830322, 2.6742136478424072, 2.66679310798645, 2.659428596496582, 2.652120590209961, 2.644868850708008, 2.637673854827881, 2.630535364151001, 2.6234536170959473, 2.6164286136627197, 2.6094603538513184, 2.602548599243164, 2.595693826675415, 2.588895559310913, 2.582153797149658, 2.5754683017730713, 2.5688393115997314, 2.5622665882110596, 2.5557498931884766, 2.5492889881134033, 2.54288387298584, 2.536534070968628, 2.5302398204803467, 2.524000406265259, 2.5178158283233643, 2.511685848236084, 2.505610227584839, 2.4995884895324707, 2.4936206340789795, 2.487706184387207, 2.481844902038574, 2.476036310195923, 2.470280170440674, 2.464576482772827, 2.4589242935180664, 2.4533238410949707, 2.4477744102478027, 2.4422757625579834, 2.4368274211883545, 2.431429147720337, 2.4260804653167725, 2.420781135559082, 2.4155306816101074, 2.4103286266326904, 2.405174970626831, 2.400068759918213, 2.395009994506836, 2.389997959136963, 2.3850326538085938, 2.380113363265991, 2.375239849090576, 2.3704116344451904, 2.365628242492676, 2.360889196395874, 2.356194496154785, 2.351543426513672, 2.346935510635376, 2.3423705101013184, 2.337847948074341, 2.333367347717285, 2.3289284706115723, 2.324530839920044, 2.320173978805542, 2.3158576488494873, 2.3115813732147217, 2.307344436645508, 2.303147077560425, 2.2989883422851562, 2.294867992401123, 2.290785789489746, 2.286741256713867, 2.282733917236328, 2.2787632942199707, 2.274829387664795, 2.2709317207336426, -2.2670695781707764, -2.2709317207336426, -2.274829387664795, -2.2787632942199707, -2.282733917236328, -2.286741256713867, -2.290785789489746, -2.294867992401123, -2.2989883422851562, -2.303147077560425, -2.307344436645508, -2.3115813732147217, -2.3158576488494873, -2.320173978805542, -2.324530839920044, -2.3289284706115723, -2.333367347717285, -2.337847948074341, -2.3423705101013184, -2.346935510635376, -2.351543426513672, -2.356194496154785, -2.360889196395874, -2.365628242492676, -2.3704116344451904, -2.375239849090576, -2.380113363265991, -2.3850326538085938, -2.389997959136963, -2.395009994506836, -2.400068759918213, -2.405174970626831, -2.4103286266326904, -2.4155306816101074, -2.420781135559082, -2.4260804653167725, -2.431429147720337, -2.4368274211883545, -2.4422757625579834, -2.4477744102478027, -2.4533238410949707, -2.4589242935180664, -2.464576482772827, -2.470280170440674, -2.476036310195923, -2.481844902038574, -2.487706184387207, -2.4936206340789795, -2.4995884895324707, -2.505610227584839, -2.511685848236084, -2.5178158283233643, -2.524000406265259, -2.5302398204803467, -2.536534070968628, -2.54288387298584, -2.5492889881134033, -2.5557498931884766, -2.5622665882110596, -2.5688393115997314, -2.5754683017730713, -2.582153797149658, -2.588895559310913, -2.595693826675415, -2.602548599243164, -2.6094603538513184, -2.6164286136627197, -2.6234536170959473, -2.630535364151001, -2.637673854827881, -2.644868850708008, -2.652120590209961, -2.659428596496582, -2.66679310798645, -2.6742136478424072, -2.6816904544830322, -2.689222812652588, -2.696810722351074, -2.704453945159912, -2.7121522426605225, -2.719905138015747, -2.727712392807007, -2.7355735301971436, -2.743488073348999, -2.751455783843994, -2.7594759464263916, -2.7675483226776123, -2.77567195892334, -2.783846616744995, -2.792071580886841, -2.8003458976745605, -2.808669328689575, -2.8170409202575684, -2.8254599571228027, -2.833925724029541, -2.8424370288848877, -2.8509933948516846, -2.8595938682556152, -2.868237257003784, -2.876922845840454, -2.8856494426727295, -2.894416093826294, -2.903221845626831, -2.912065267562866, -2.920945405960083, -2.929861068725586, -2.9388110637664795, -2.947794198989868, -2.9568090438842773, -2.9658544063568115, -2.974928855895996, -2.9840312004089355, -2.993159770965576, -3.0023133754730225, -3.0114905834198, -3.0206899642944336, -3.02990984916687, -3.0391488075256348, -3.048405408859253, -3.057677984237671, -3.066965103149414, -3.0762650966644287, -3.0855765342712402, -3.094897747039795, -3.10422682762146, -3.11356258392334, -3.122903347015381, -3.13224720954895, 3.1415927410125732, 3.1321589946746826, 3.1227269172668457, 3.1132984161376953, 3.103874683380127, 3.0944578647613525, 3.0850491523742676, 3.075650691986084, 3.0662636756896973, 3.0568902492523193, 3.0475313663482666, 3.038189172744751, 3.028865098953247, 3.0195605754852295, 3.010277271270752, 3.001016616821289, 2.9917802810668945, 2.982569456100464, 2.973385810852051, 2.96423077583313, 2.955105781555176, 2.946012020111084, 2.936950922012329, 2.9279236793518066, 2.918931722640991, 2.9099762439727783, 2.9010584354400635, 2.892179489135742, 2.883340358734131, 2.874542474746704, 2.8657867908477783, 2.85707426071167, 2.8484058380126953, 2.839782476425171, 2.831205129623413, 2.8226749897003174, 2.814192533493042, 2.805758476257324, 2.7973740100860596, 2.7890396118164062, 2.7807557582855225, 2.7725236415863037, 2.764343500137329, 2.756216287612915, 2.7481420040130615, 2.740121603012085, 2.7321555614471436, 2.7242438793182373, 2.7163877487182617, 2.7085866928100586, 2.7008419036865234, 2.693152904510498, 2.685520648956299, 2.677945137023926, 2.670426368713379, 2.6629648208618164, 2.6555607318878174, 2.648214101791382, 2.6409249305725098, 2.6336934566497803, 2.6265199184417725, 2.619403839111328, 2.6123459339141846, 2.6053454875946045, 2.598402976989746, 2.5915181636810303, 2.584691047668457, 2.5779216289520264, 2.57120943069458, 2.564554452896118, 2.5579569339752197, 2.5514161586761475, 2.5449323654174805, 2.5385050773620605, 2.5321340560913086, 2.5258193016052246, 2.5195605754852295, 2.513357639312744, 2.5072097778320312, 2.50111722946167, 2.495079517364502, 2.4890964031219482, 2.4831671714782715, 2.477292060852051, 2.471470594406128, 2.4657022953033447, 2.459986925125122, 2.4543240070343018, 2.4487130641937256, 2.4431540966033936, 2.4376466274261475, 2.43218994140625, 2.426784038543701, 2.4214284420013428, 2.4161226749420166, 2.4108662605285645, 2.4056589603424072, 2.400500535964966, 2.395390033721924, 2.3903274536132812, 2.385312557220459, 2.3803443908691406, 2.375422954559326, 2.3705475330352783, 2.365718126296997, 2.360933780670166, 2.356194496154785, 2.3514997959136963, 2.346848964691162, 2.3422420024871826, 2.3376781940460205, 2.3331570625305176, 2.328678607940674, 2.324241876602173, 2.3198468685150146, 2.315493106842041, 2.3111798763275146, 2.3069071769714355, 2.3026742935180664, 2.298480987548828, 2.2943265438079834, 2.2902112007141113, 2.2861340045928955, 2.282094717025757, 2.278092861175537, 2.2741281986236572, 2.270200252532959, 2.266308546066284, -2.2624528408050537, -2.266308546066284, -2.270200252532959, -2.2741281986236572, -2.278092861175537, -2.282094717025757, -2.2861340045928955, -2.2902112007141113, -2.2943265438079834, -2.298480987548828, -2.3026742935180664, -2.3069071769714355, -2.3111798763275146, -2.315493106842041, -2.3198468685150146, -2.324241876602173, -2.328678607940674, -2.3331570625305176, -2.3376781940460205, -2.3422420024871826, -2.346848964691162, -2.3514997959136963, -2.356194496154785, -2.360933780670166, -2.365718126296997, -2.3705475330352783, -2.375422954559326, -2.3803443908691406, -2.385312557220459, -2.3903274536132812, -2.395390033721924, -2.400500535964966, -2.4056589603424072, -2.4108662605285645, -2.4161226749420166, -2.4214284420013428, -2.426784038543701, -2.43218994140625, -2.4376466274261475, -2.4431540966033936, -2.4487130641937256, -2.4543240070343018, -2.459986925125122, -2.4657022953033447, -2.471470594406128, -2.477292060852051, -2.4831671714782715, -2.4890964031219482, -2.495079517364502, -2.50111722946167, -2.5072097778320312, -2.513357639312744, -2.5195605754852295, -2.5258193016052246, -2.5321340560913086, -2.5385050773620605, -2.5449323654174805, -2.5514161586761475, -2.5579569339752197, -2.564554452896118, -2.57120943069458, -2.5779216289520264, -2.584691047668457, -2.5915181636810303, -2.598402976989746, -2.6053454875946045, -2.6123459339141846, -2.619403839111328, -2.6265199184417725, -2.6336934566497803, -2.6409249305725098, -2.648214101791382, -2.6555607318878174, -2.6629648208618164, -2.670426368713379, -2.677945137023926, -2.685520648956299, -2.693152904510498, -2.7008419036865234, -2.7085866928100586, -2.7163877487182617, -2.7242438793182373, -2.7321555614471436, -2.740121603012085, -2.7481420040130615, -2.756216287612915, -2.764343500137329, -2.7725236415863037, -2.7807557582855225, -2.7890396118164062, -2.7973740100860596, -2.805758476257324, -2.814192533493042, -2.8226749897003174, -2.831205129623413, -2.839782476425171, -2.8484058380126953, -2.85707426071167, -2.8657867908477783, -2.874542474746704, -2.883340358734131, -2.892179489135742, -2.9010584354400635, -2.9099762439727783, -2.918931722640991, -2.9279236793518066, -2.936950922012329, -2.946012020111084, -2.955105781555176, -2.96423077583313, -2.973385810852051, -2.982569456100464, -2.9917802810668945, -3.001016616821289, -3.010277271270752, -3.0195605754852295, -3.028865098953247, -3.038189172744751, -3.0475313663482666, -3.0568902492523193, -3.0662636756896973, -3.075650691986084, -3.0850491523742676, -3.0944578647613525, -3.103874683380127, -3.1132984161376953, -3.1227269172668457, -3.1321589946746826, 3.1415927410125732, 3.1320691108703613, 3.1225473880767822, 3.1130290031433105, 3.103515863418579, 3.0940096378326416, 3.0845117568969727, 3.0750246047973633, 3.06554913520813, 3.0560872554779053, 3.0466408729553223, 3.0372114181518555, 3.0278005599975586, 3.0184099674224854, 3.0090410709381104, 2.9996955394744873, 2.99037504196167, 2.9810807704925537, 2.9718143939971924, 2.9625773429870605, 2.953371047973633, 2.944197177886963, 2.935056686401367, 2.9259510040283203, 2.916881561279297, 2.9078495502471924, 2.8988561630249023, 2.8899025917053223, 2.8809902667999268, 2.872119903564453, 2.863292932510376, 2.8545103073120117, 2.8457729816436768, 2.8370816707611084, 2.8284378051757812, 2.8198421001434326, 2.8112952709198, 2.802798271179199, 2.794351816177368, 2.785956859588623, 2.777613639831543, 2.7693233489990234, 2.7610862255096436, 2.7529032230377197, 2.744774580001831, 2.7367007732391357, 2.72868275642395, 2.7207205295562744, 2.7128145694732666, 2.704965591430664, 2.6971733570098877, 2.689438819885254, 2.6817617416381836, 2.674142837524414, 2.666581869125366, 2.6590793132781982, 2.6516354084014893, 2.64424991607666, 2.636923313140869, 2.629655361175537, 2.6224465370178223, 2.6152966022491455, 2.6082053184509277, 2.601173162460327, 2.5941996574401855, 2.587285041809082, 2.5804293155670166, 2.573632001876831, 2.5668931007385254, 2.5602123737335205, 2.5535900592803955, 2.547025680541992, 2.5405189990997314, 2.534069776535034, 2.5276780128479004, 2.521343231201172, 2.5150651931762695, 2.5088438987731934, 2.502678632736206, 2.4965693950653076, 2.490515947341919, 2.484517812728882, 2.478574514389038, 2.4726860523223877, 2.4668517112731934, 2.461071491241455, 2.4553446769714355, 2.4496712684631348, 2.4440505504608154, 2.4384825229644775, 2.432966470718384, 2.427501916885376, 2.422088861465454, 2.416726589202881, 2.411414623260498, 2.4061529636383057, 2.4009406566619873, 2.395777702331543, 2.3906636238098145, 2.3855977058410645, 2.380579948425293, 2.3756096363067627, 2.3706862926483154, 2.365809679031372, 2.3609790802001953, 2.356194496154785, 2.3514552116394043, 2.3467607498168945, 2.3421108722686768, 2.3375051021575928, 2.3329429626464844, 2.3284237384796143, 2.3239476680755615, 2.3195137977600098, 2.315121650695801, 2.3107712268829346, 2.306461811065674, 2.3021929264068604, 2.297964334487915, 2.293775796890259, 2.289626359939575, 2.2855160236358643, 2.2814440727233887, 2.2774105072021484, 2.2734146118164062, 2.269456148147583, 2.2655346393585205, 2.2616496086120605, -2.257800817489624, -2.2616496086120605, -2.2655346393585205, -2.269456148147583, -2.2734146118164062, -2.2774105072021484, -2.2814440727233887, -2.2855160236358643, -2.289626359939575, -2.293775796890259, -2.297964334487915, -2.3021929264068604, -2.306461811065674, -2.3107712268829346, -2.315121650695801, -2.3195137977600098, -2.3239476680755615, -2.3284237384796143, -2.3329429626464844, -2.3375051021575928, -2.3421108722686768, -2.3467607498168945, -2.3514552116394043, -2.356194496154785, -2.3609790802001953, -2.365809679031372, -2.3706862926483154, -2.3756096363067627, -2.380579948425293, -2.3855977058410645, -2.3906636238098145, -2.395777702331543, -2.4009406566619873, -2.4061529636383057, -2.411414623260498, -2.416726589202881, -2.422088861465454, -2.427501916885376, -2.432966470718384, -2.4384825229644775, -2.4440505504608154, -2.4496712684631348, -2.4553446769714355, -2.461071491241455, -2.4668517112731934, -2.4726860523223877, -2.478574514389038, -2.484517812728882, -2.490515947341919, -2.4965693950653076, -2.502678632736206, -2.5088438987731934, -2.5150651931762695, -2.521343231201172, -2.5276780128479004, -2.534069776535034, -2.5405189990997314, -2.547025680541992, -2.5535900592803955, -2.5602123737335205, -2.5668931007385254, -2.573632001876831, -2.5804293155670166, -2.587285041809082, -2.5941996574401855, -2.601173162460327, -2.6082053184509277, -2.6152966022491455, -2.6224465370178223, -2.629655361175537, -2.636923313140869, -2.64424991607666, -2.6516354084014893, -2.6590793132781982, -2.666581869125366, -2.674142837524414, -2.6817617416381836, -2.689438819885254, -2.6971733570098877, -2.704965591430664, -2.7128145694732666, -2.7207205295562744, -2.72868275642395, -2.7367007732391357, -2.744774580001831, -2.7529032230377197, -2.7610862255096436, -2.7693233489990234, -2.777613639831543, -2.785956859588623, -2.794351816177368, -2.802798271179199, -2.8112952709198, -2.8198421001434326, -2.8284378051757812, -2.8370816707611084, -2.8457729816436768, -2.8545103073120117, -2.863292932510376, -2.872119903564453, -2.8809902667999268, -2.8899025917053223, -2.8988561630249023, -2.9078495502471924, -2.916881561279297, -2.9259510040283203, -2.935056686401367, -2.944197177886963, -2.953371047973633, -2.9625773429870605, -2.9718143939971924, -2.9810807704925537, -2.99037504196167, -2.9996955394744873, -3.0090410709381104, -3.0184099674224854, -3.0278005599975586, -3.0372114181518555, -3.0466408729553223, -3.0560872554779053, -3.06554913520813, -3.0750246047973633, -3.0845117568969727, -3.0940096378326416, -3.103515863418579, -3.1130290031433105, -3.1225473880767822, -3.1320691108703613, 3.1415927410125732, 3.1319775581359863, 3.1223642826080322, 3.1127545833587646, 3.1031501293182373, 3.093552827835083, 3.0839641094207764, 3.0743863582611084, 3.0648207664489746, 3.055269241333008, 3.0457334518432617, 3.036215305328369, 3.0267159938812256, 3.017237663269043, 3.007781744003296, 2.998349666595459, 2.988943338394165, 2.9795641899108887, 2.9702134132385254, 2.960893154144287, 2.9516043663024902, 2.9423487186431885, 2.9331274032592773, 2.9239420890808105, 2.9147937297821045, 2.905683994293213, 2.8966140747070312, 2.887584924697876, 2.8785979747772217, 2.8696541786193848, 2.86075496673584, 2.851901054382324, 2.8430936336517334, 2.834333896636963, 2.825622320175171, 2.816960334777832, 2.8083484172821045, 2.7997875213623047, 2.79127836227417, 2.7828218936920166, 2.774418830871582, 2.7660696506500244, 2.757775068283081, 2.74953556060791, 2.741352081298828, 2.733224630355835, 2.725153923034668, 2.7171406745910645, 2.7091848850250244, 2.701287031173706, 2.6934475898742676, 2.685666799545288, 2.677945137023926, 2.6702823638916016, 2.6626789569854736, 2.6551353931427, 2.647651195526123, 2.6402270793914795, 2.6328628063201904, 2.625558614730835, 2.618314266204834, 2.6111302375793457, 2.604006052017212, 2.5969419479370117, 2.589937686920166, 2.582993268966675, 2.576108694076538, 2.5692837238311768, 2.562518358230591, 2.555812358856201, 2.5491652488708496, 2.5425772666931152, 2.53604793548584, 2.5295772552490234, 2.523164749145508, 2.516810178756714, 2.5105133056640625, 2.5042738914489746, 2.498091459274292, 2.4919660091400146, 2.4858970642089844, 2.479884147644043, 2.4739270210266113, 2.4680254459381104, 2.462178945541382, 2.4563870429992676, 2.4506494998931885, 2.4449658393859863, 2.439335823059082, 2.4337587356567383, 2.428234577178955, 2.422762632369995, 2.4173426628112793, 2.4119741916656494, 2.4066567420959473, 2.4013898372650146, 2.3961732387542725, 2.3910062313079834, 2.3858888149261475, 2.3808200359344482, 2.3757998943328857, 2.3708276748657227, 2.365902900695801, 2.361025333404541, 2.356194496154785, 2.351409912109375, 2.3466708660125732, 2.34197735786438, 2.3373289108276367, 2.3327245712280273, 2.3281643390655518, 2.3236477375030518, 2.319174289703369, 2.3147435188293457, 2.3103549480438232, 2.3060083389282227, 2.3017029762268066, 2.297438621520996, 2.293214797973633, 2.2890310287475586, 2.2848870754241943, 2.2807822227478027, 2.2767162322998047, 2.272688627243042, 2.2686991691589355, 2.264747142791748, 2.2608325481414795, 2.2569544315338135, -2.25311279296875, -2.2569544315338135, -2.2608325481414795, -2.264747142791748, -2.2686991691589355, -2.272688627243042, -2.2767162322998047, -2.2807822227478027, -2.2848870754241943, -2.2890310287475586, -2.293214797973633, -2.297438621520996, -2.3017029762268066, -2.3060083389282227, -2.3103549480438232, -2.3147435188293457, -2.319174289703369, -2.3236477375030518, -2.3281643390655518, -2.3327245712280273, -2.3373289108276367, -2.34197735786438, -2.3466708660125732, -2.351409912109375, -2.356194496154785, -2.361025333404541, -2.365902900695801, -2.3708276748657227, -2.3757998943328857, -2.3808200359344482, -2.3858888149261475, -2.3910062313079834, -2.3961732387542725, -2.4013898372650146, -2.4066567420959473, -2.4119741916656494, -2.4173426628112793, -2.422762632369995, -2.428234577178955, -2.4337587356567383, -2.439335823059082, -2.4449658393859863, -2.4506494998931885, -2.4563870429992676, -2.462178945541382, -2.4680254459381104, -2.4739270210266113, -2.479884147644043, -2.4858970642089844, -2.4919660091400146, -2.498091459274292, -2.5042738914489746, -2.5105133056640625, -2.516810178756714, -2.523164749145508, -2.5295772552490234, -2.53604793548584, -2.5425772666931152, -2.5491652488708496, -2.555812358856201, -2.562518358230591, -2.5692837238311768, -2.576108694076538, -2.582993268966675, -2.589937686920166, -2.5969419479370117, -2.604006052017212, -2.6111302375793457, -2.618314266204834, -2.625558614730835, -2.6328628063201904, -2.6402270793914795, -2.647651195526123, -2.6551353931427, -2.6626789569854736, -2.6702823638916016, -2.677945137023926, -2.685666799545288, -2.6934475898742676, -2.701287031173706, -2.7091848850250244, -2.7171406745910645, -2.725153923034668, -2.733224630355835, -2.741352081298828, -2.74953556060791, -2.757775068283081, -2.7660696506500244, -2.774418830871582, -2.7828218936920166, -2.79127836227417, -2.7997875213623047, -2.8083484172821045, -2.816960334777832, -2.825622320175171, -2.834333896636963, -2.8430936336517334, -2.851901054382324, -2.86075496673584, -2.8696541786193848, -2.8785979747772217, -2.887584924697876, -2.8966140747070312, -2.905683994293213, -2.9147937297821045, -2.9239420890808105, -2.9331274032592773, -2.9423487186431885, -2.9516043663024902, -2.960893154144287, -2.9702134132385254, -2.9795641899108887, -2.988943338394165, -2.998349666595459, -3.007781744003296, -3.017237663269043, -3.0267159938812256, -3.036215305328369, -3.0457334518432617, -3.055269241333008, -3.0648207664489746, -3.0743863582611084, -3.0839641094207764, -3.093552827835083, -3.1031501293182373, -3.1127545833587646, -3.1223642826080322, -3.1319775581359863, 3.1415927410125732, 3.1318843364715576, 3.1221776008605957, 3.1124746799468994, 3.1027772426605225, 3.0930869579315186, 3.0834059715270996, 3.0737357139587402, 3.0640783309936523, 3.0544354915618896, 3.0448086261749268, 3.0351998805999756, 3.0256106853485107, 3.016042947769165, 3.006498098373413, 2.996978282928467, 2.9874844551086426, 2.9780187606811523, 2.9685823917388916, 2.959177255630493, 2.9498045444488525, 2.9404656887054443, 2.9311623573303223, 2.921895980834961, 2.912667751312256, 2.9034788608551025, 2.8943309783935547, 2.8852250576019287, 2.87616229057312, 2.8671441078186035, 2.8581714630126953, 2.849245309829712, 2.840367078781128, 2.8315374851226807, 2.8227574825286865, 2.814028263092041, 2.8053503036499023, 2.796724796295166, 2.7881524562835693, 2.7796339988708496, 2.771169900894165, 2.762761354446411, 2.754408597946167, 2.74611234664917, 2.7378733158111572, 2.729691743850708, 2.7215681076049805, 2.713503122329712, 2.7054970264434814, 2.6975502967834473, 2.6896631717681885, 2.6818361282348633, 2.6740691661834717, 2.6663625240325928, 2.6587166786193848, 2.6511316299438477, 2.6436073780059814, 2.6361443996429443, 2.6287424564361572, 2.62140154838562, 2.614122152328491, 2.6069037914276123, 2.5997467041015625, 2.5926506519317627, 2.585615634918213, 2.578641653060913, 2.5717287063598633, 2.5648763179779053, 2.558084487915039, 2.5513529777526855, 2.5446815490722656, 2.5380702018737793, 2.5315186977386475, 2.525026321411133, 2.5185933113098145, 2.5122194290161133, 2.505903959274292, 2.4996466636657715, 2.4934475421905518, 2.4873061180114746, 2.481221914291382, 2.4751946926116943, 2.469224214553833, 2.4633097648620605, 2.457451343536377, 2.451648235321045, 2.4459002017974854, 2.44020676612854, 2.43456768989563, 2.4289822578430176, 2.423450469970703, 2.41797137260437, 2.4125449657440186, 2.4071707725524902, 2.401848077774048, 2.3965766429901123, 2.3913557529449463, 2.38618540763855, 2.3810648918151855, 2.3759939670562744, 2.3709716796875, 2.3659980297088623, 2.361072540283203, 2.356194496154785, 2.3513636589050293, 2.3465793132781982, 2.341841459274292, 2.337149143218994, 2.3325021266937256, 2.3279001712799072, 2.3233425617218018, 2.318828821182251, 2.3143584728240967, 2.3099312782287598, 2.305546522140503, 2.301204204559326, 2.296903371810913, 2.2926437854766846, 2.2884252071380615, 2.2842469215393066, 2.2801084518432617, 2.2760095596313477, 2.2719500064849854, 2.2679288387298584, 2.263946056365967, 2.2600009441375732, 2.2560935020446777, 2.252223014831543, -2.2483890056610107, -2.252223014831543, -2.2560935020446777, -2.2600009441375732, -2.263946056365967, -2.2679288387298584, -2.2719500064849854, -2.2760095596313477, -2.2801084518432617, -2.2842469215393066, -2.2884252071380615, -2.2926437854766846, -2.296903371810913, -2.301204204559326, -2.305546522140503, -2.3099312782287598, -2.3143584728240967, -2.318828821182251, -2.3233425617218018, -2.3279001712799072, -2.3325021266937256, -2.337149143218994, -2.341841459274292, -2.3465793132781982, -2.3513636589050293, -2.356194496154785, -2.361072540283203, -2.3659980297088623, -2.3709716796875, -2.3759939670562744, -2.3810648918151855, -2.38618540763855, -2.3913557529449463, -2.3965766429901123, -2.401848077774048, -2.4071707725524902, -2.4125449657440186, -2.41797137260437, -2.423450469970703, -2.4289822578430176, -2.43456768989563, -2.44020676612854, -2.4459002017974854, -2.451648235321045, -2.457451343536377, -2.4633097648620605, -2.469224214553833, -2.4751946926116943, -2.481221914291382, -2.4873061180114746, -2.4934475421905518, -2.4996466636657715, -2.505903959274292, -2.5122194290161133, -2.5185933113098145, -2.525026321411133, -2.5315186977386475, -2.5380702018737793, -2.5446815490722656, -2.5513529777526855, -2.558084487915039, -2.5648763179779053, -2.5717287063598633, -2.578641653060913, -2.585615634918213, -2.5926506519317627, -2.5997467041015625, -2.6069037914276123, -2.614122152328491, -2.62140154838562, -2.6287424564361572, -2.6361443996429443, -2.6436073780059814, -2.6511316299438477, -2.6587166786193848, -2.6663625240325928, -2.6740691661834717, -2.6818361282348633, -2.6896631717681885, -2.6975502967834473, -2.7054970264434814, -2.713503122329712, -2.7215681076049805, -2.729691743850708, -2.7378733158111572, -2.74611234664917, -2.754408597946167, -2.762761354446411, -2.771169900894165, -2.7796339988708496, -2.7881524562835693, -2.796724796295166, -2.8053503036499023, -2.814028263092041, -2.8227574825286865, -2.8315374851226807, -2.840367078781128, -2.849245309829712, -2.8581714630126953, -2.8671441078186035, -2.87616229057312, -2.8852250576019287, -2.8943309783935547, -2.9034788608551025, -2.912667751312256, -2.921895980834961, -2.9311623573303223, -2.9404656887054443, -2.9498045444488525, -2.959177255630493, -2.9685823917388916, -2.9780187606811523, -2.9874844551086426, -2.996978282928467, -3.006498098373413, -3.016042947769165, -3.0256106853485107, -3.0351998805999756, -3.0448086261749268, -3.0544354915618896, -3.0640783309936523, -3.0737357139587402, -3.0834059715270996, -3.0930869579315186, -3.1027772426605225, -3.1124746799468994, -3.1221776008605957, -3.1318843364715576, 3.1415927410125732, 3.131788969039917, 3.1219873428344727, 3.112189292907715, 3.1023969650268555, 3.0926122665405273, 3.082836866378784, 3.073072671890259, 3.063321590423584, 3.0535852909088135, 3.04386568069458, 3.0341646671295166, 3.0244839191436768, 3.0148251056671143, 3.005190134048462, 2.9955804347991943, 2.9859979152679443, 2.9764440059661865, 2.9669203758239746, 2.9574289321899414, 2.9479706287384033, 2.938547372817993, 2.9291605949401855, 2.919811725616455, 2.9105019569396973, 2.901232957839966, 2.892005681991577, 2.882821798324585, 2.8736822605133057, 2.8645882606506348, 2.855541229248047, 2.8465418815612793, 2.8375916481018066, 2.8286914825439453, 2.8198421001434326, 2.811044692993164, 2.802299976348877, 2.793609142303467, 2.7849724292755127, 2.7763912677764893, 2.7678658962249756, 2.759397029876709, 2.750985622406006, 2.7426319122314453, 2.7343368530273438, 2.726100444793701, 2.717923641204834, 2.7098066806793213, 2.7017500400543213, 2.693753957748413, 2.685818910598755, 2.677945137023926, 2.670132637023926, 2.662382125854492, 2.654693365097046, 2.647066831588745, 2.63950252532959, 2.63200044631958, 2.624560594558716, 2.6171834468841553, 2.6098685264587402, 2.60261607170105, 2.595426082611084, 2.5882983207702637, 2.581232786178589, 2.5742292404174805, 2.5672879219055176, 2.560408115386963, 2.5535900592803955, 2.5468335151672363, 2.540138006210327, 2.533503532409668, 2.5269296169281006, 2.520416498184204, 2.513963222503662, 2.5075700283050537, 2.5012362003326416, 2.494961738586426, 2.488745927810669, 2.48258900642395, 2.476490020751953, 2.4704487323760986, 2.4644651412963867, 2.458538293838501, 2.4526681900024414, 2.44685435295105, 2.441096305847168, 2.4353935718536377, 2.429745674133301, 2.4241526126861572, 2.4186131954193115, 2.4131276607513428, 2.4076952934265137, 2.402315616607666, 2.3969881534576416, 2.3917124271392822, 2.386488199234009, 2.381314754486084, 2.3761918544769287, 2.3711187839508057, 2.3660950660705566, 2.3611204624176025, 2.356194496154785, 2.351316452026367, 2.3464860916137695, 2.341702699661255, 2.336966037750244, 2.332275629043579, 2.3276307582855225, 2.323031187057495, 2.318476438522339, 2.3139660358428955, 2.309499502182007, 2.3050763607025146, 2.3006958961486816, 2.296358108520508, 2.292062282562256, 2.2878081798553467, 2.283595085144043, 2.2794225215911865, 2.2752904891967773, 2.271198034286499, 2.2671449184417725, 2.2631306648254395, 2.259155035018921, 2.2552175521850586, 2.2513175010681152, 2.247454881668091, -2.243628978729248, -2.247454881668091, -2.2513175010681152, -2.2552175521850586, -2.259155035018921, -2.2631306648254395, -2.2671449184417725, -2.271198034286499, -2.2752904891967773, -2.2794225215911865, -2.283595085144043, -2.2878081798553467, -2.292062282562256, -2.296358108520508, -2.3006958961486816, -2.3050763607025146, -2.309499502182007, -2.3139660358428955, -2.318476438522339, -2.323031187057495, -2.3276307582855225, -2.332275629043579, -2.336966037750244, -2.341702699661255, -2.3464860916137695, -2.351316452026367, -2.356194496154785, -2.3611204624176025, -2.3660950660705566, -2.3711187839508057, -2.3761918544769287, -2.381314754486084, -2.386488199234009, -2.3917124271392822, -2.3969881534576416, -2.402315616607666, -2.4076952934265137, -2.4131276607513428, -2.4186131954193115, -2.4241526126861572, -2.429745674133301, -2.4353935718536377, -2.441096305847168, -2.44685435295105, -2.4526681900024414, -2.458538293838501, -2.4644651412963867, -2.4704487323760986, -2.476490020751953, -2.48258900642395, -2.488745927810669, -2.494961738586426, -2.5012362003326416, -2.5075700283050537, -2.513963222503662, -2.520416498184204, -2.5269296169281006, -2.533503532409668, -2.540138006210327, -2.5468335151672363, -2.5535900592803955, -2.560408115386963, -2.5672879219055176, -2.5742292404174805, -2.581232786178589, -2.5882983207702637, -2.595426082611084, -2.60261607170105, -2.6098685264587402, -2.6171834468841553, -2.624560594558716, -2.63200044631958, -2.63950252532959, -2.647066831588745, -2.654693365097046, -2.662382125854492, -2.670132637023926, -2.677945137023926, -2.685818910598755, -2.693753957748413, -2.7017500400543213, -2.7098066806793213, -2.717923641204834, -2.726100444793701, -2.7343368530273438, -2.7426319122314453, -2.750985622406006, -2.759397029876709, -2.7678658962249756, -2.7763912677764893, -2.7849724292755127, -2.793609142303467, -2.802299976348877, -2.811044692993164, -2.8198421001434326, -2.8286914825439453, -2.8375916481018066, -2.8465418815612793, -2.855541229248047, -2.8645882606506348, -2.8736822605133057, -2.882821798324585, -2.892005681991577, -2.901232957839966, -2.9105019569396973, -2.919811725616455, -2.9291605949401855, -2.938547372817993, -2.9479706287384033, -2.9574289321899414, -2.9669203758239746, -2.9764440059661865, -2.9859979152679443, -2.9955804347991943, -3.005190134048462, -3.0148251056671143, -3.0244839191436768, -3.0341646671295166, -3.04386568069458, -3.0535852909088135, -3.063321590423584, -3.073072671890259, -3.082836866378784, -3.0926122665405273, -3.1023969650268555, -3.112189292907715, -3.1219873428344727, -3.131788969039917, 3.1415927410125732, 3.1316919326782227, 3.121793270111084, 3.111898422241211, 3.1020092964172363, 3.092128038406372, 3.082256555557251, 3.0723962783813477, 3.0625498294830322, 3.0527184009552, 3.0429043769836426, 3.033109426498413, 3.0233352184295654, 3.0135836601257324, 3.0038564205169678, 2.9941554069519043, 2.9844822883605957, 2.9748387336730957, 2.965226411819458, 2.9556469917297363, 2.9461019039154053, 2.9365925788879395, 2.9271209239959717, 2.9176881313323975, 2.9082956314086914, 2.8989450931549072, 2.8896374702453613, 2.8803741931915283, 2.8711564540863037, 2.861985921859741, 2.852863073348999, 2.843789577484131, 2.834766387939453, 2.8257944583892822, 2.8168747425079346, 2.8080084323883057, 2.7991960048675537, 2.7904388904571533, 2.7817373275756836, 2.77309250831604, 2.76450514793396, 2.7559754848480225, 2.747504711151123, 2.73909330368042, 2.730741500854492, 2.722450017929077, 2.714219331741333, 2.706050157546997, 2.6979424953460693, 2.689896583557129, 2.681913375854492, 2.673992395401001, 2.6661345958709717, 2.658339738845825, 2.6506080627441406, 2.642939805984497, 2.6353352069854736, 2.627794027328491, 2.620316505432129, 2.612902879714966, 2.6055526733398438, 2.598266124725342, 2.59104323387146, 2.583883762359619, 2.5767877101898193, 2.5697548389434814, 2.5627851486206055, 2.5558784008026123, 2.549034357070923, 2.542252779006958, 2.5355334281921387, 2.5288760662078857, 2.52228045463562, 2.5157461166381836, 2.5092732906341553, 2.5028610229492188, 2.496509313583374, 2.490217685699463, 2.4839859008789062, 2.477813482284546, 2.4717001914978027, 2.4656455516815186, 2.459648847579956, 2.4537103176116943, 2.447829008102417, 2.442004680633545, 2.436237096786499, 2.430525302886963, 2.4248692989349365, 2.4192686080932617, 2.413722515106201, 2.408230781555176, 2.4027929306030273, 2.3974082469940186, 2.3920764923095703, 2.3867971897125244, 2.3815698623657227, 2.3763937950134277, 2.3712687492370605, 2.366194248199463, 2.3611695766448975, 2.356194496154785, 2.3512685298919678, 2.346390962600708, 2.3415613174438477, 2.3367793560028076, 2.3320446014404297, 2.3273563385009766, 2.32271409034729, 2.318117618560791, 2.313566207885742, 2.3090596199035645, 2.3045971393585205, 2.300178289413452, 2.2958028316497803, 2.2914702892303467, 2.287179946899414, 2.282931327819824, 2.278724193572998, 2.2745580673217773, 2.270432472229004, 2.2663469314575195, 2.262300968170166, 2.258294105529785, 2.254326105117798, 2.250396251678467, 2.246504306793213, 2.242649793624878, -2.238832473754883, -2.242649793624878, -2.246504306793213, -2.250396251678467, -2.254326105117798, -2.258294105529785, -2.262300968170166, -2.2663469314575195, -2.270432472229004, -2.2745580673217773, -2.278724193572998, -2.282931327819824, -2.287179946899414, -2.2914702892303467, -2.2958028316497803, -2.300178289413452, -2.3045971393585205, -2.3090596199035645, -2.313566207885742, -2.318117618560791, -2.32271409034729, -2.3273563385009766, -2.3320446014404297, -2.3367793560028076, -2.3415613174438477, -2.346390962600708, -2.3512685298919678, -2.356194496154785, -2.3611695766448975, -2.366194248199463, -2.3712687492370605, -2.3763937950134277, -2.3815698623657227, -2.3867971897125244, -2.3920764923095703, -2.3974082469940186, -2.4027929306030273, -2.408230781555176, -2.413722515106201, -2.4192686080932617, -2.4248692989349365, -2.430525302886963, -2.436237096786499, -2.442004680633545, -2.447829008102417, -2.4537103176116943, -2.459648847579956, -2.4656455516815186, -2.4717001914978027, -2.477813482284546, -2.4839859008789062, -2.490217685699463, -2.496509313583374, -2.5028610229492188, -2.5092732906341553, -2.5157461166381836, -2.52228045463562, -2.5288760662078857, -2.5355334281921387, -2.542252779006958, -2.549034357070923, -2.5558784008026123, -2.5627851486206055, -2.5697548389434814, -2.5767877101898193, -2.583883762359619, -2.59104323387146, -2.598266124725342, -2.6055526733398438, -2.612902879714966, -2.620316505432129, -2.627794027328491, -2.6353352069854736, -2.642939805984497, -2.6506080627441406, -2.658339738845825, -2.6661345958709717, -2.673992395401001, -2.681913375854492, -2.689896583557129, -2.6979424953460693, -2.706050157546997, -2.714219331741333, -2.722450017929077, -2.730741500854492, -2.73909330368042, -2.747504711151123, -2.7559754848480225, -2.76450514793396, -2.77309250831604, -2.7817373275756836, -2.7904388904571533, -2.7991960048675537, -2.8080084323883057, -2.8168747425079346, -2.8257944583892822, -2.834766387939453, -2.843789577484131, -2.852863073348999, -2.861985921859741, -2.8711564540863037, -2.8803741931915283, -2.8896374702453613, -2.8989450931549072, -2.9082956314086914, -2.9176881313323975, -2.9271209239959717, -2.9365925788879395, -2.9461019039154053, -2.9556469917297363, -2.965226411819458, -2.9748387336730957, -2.9844822883605957, -2.9941554069519043, -3.0038564205169678, -3.0135836601257324, -3.0233352184295654, -3.033109426498413, -3.0429043769836426, -3.0527184009552, -3.0625498294830322, -3.0723962783813477, -3.082256555557251, -3.092128038406372, -3.1020092964172363, -3.111898422241211, -3.121793270111084, -3.1316919326782227, 3.1415927410125732, 3.1315929889678955, 3.1215953826904297, 3.1116015911102295, 3.101613998413086, 3.0916342735290527, 3.081664562225342, 3.071706533432007, 3.061762571334839, 3.0518345832824707, 3.041923999786377, 3.0320332050323486, 3.0221636295318604, 3.012317657470703, 3.0024967193603516, 2.9927027225494385, 2.9829373359680176, 2.9732024669647217, 2.9634997844696045, 2.9538307189941406, 2.944197177886963, 2.934600353240967, 2.9250423908233643, 2.9155242443084717, 2.9060475826263428, 2.8966140747070312, 2.8872246742248535, 2.877880811691284, 2.868583917617798, 2.85933518409729, 2.8501358032226562, 2.840986967086792, 2.8318896293640137, 2.822844982147217, 2.813854217529297, 2.804917812347412, 2.796036958694458, 2.78721284866333, 2.7784457206726074, 2.7697365283966064, 2.7610862255096436, 2.752495527267456, 2.743964672088623, 2.735494613647461, 2.727085828781128, 2.7187387943267822, 2.710453987121582, 2.7022318840026855, 2.694072723388672, 2.685976982116699, 2.677945137023926, 2.6699771881103516, 2.6620733737945557, 2.6542341709136963, 2.6464593410491943, 2.638749361038208, 2.6311042308807373, 2.6235241889953613, 2.616008758544922, 2.6085586547851562, 2.601173162460327, 2.5938527584075928, 2.586596965789795, 2.5794060230255127, 2.572279453277588, 2.5652174949645996, 2.5582196712493896, 2.551285982131958, 2.5444159507751465, 2.537609577178955, 2.5308666229248047, 2.524186849594116, 2.5175695419311523, 2.511014938354492, 2.5045223236083984, 2.498091459274292, 2.4917221069335938, 2.4854140281677246, 2.479166269302368, 2.4729790687561035, 2.4668517112731934, 2.4607837200164795, 2.454775094985962, 2.448824882507324, 2.4429328441619873, 2.437098503112793, 2.431321620941162, 2.4256014823913574, 2.4199378490448, 2.414330005645752, 2.4087774753570557, 2.403280019760132, 2.3978371620178223, 2.3924479484558105, 2.3871123790740967, 2.3818299770355225, 2.3765997886657715, 2.3714218139648438, 2.366295099258423, 2.361219644546509, 2.356194496154785, 2.351219415664673, 2.3462939262390137, 2.3414173126220703, 2.3365890979766846, 2.3318090438842773, 2.3270764350891113, 2.3223910331726074, 2.317751884460449, 2.3131589889526367, 2.3086113929748535, 2.3041088581085205, 2.2996511459350586, 2.2952373027801514, 2.2908670902252197, 2.2865400314331055, 2.2822554111480713, 2.278013229370117, 2.2738125324249268, 2.269653081893921, 2.2655346393585205, 2.261456251144409, 2.257417917251587, 2.2534189224243164, 2.2494587898254395, 2.245537281036377, 2.2416536808013916, 2.2378079891204834, -2.233999252319336, -2.2378079891204834, -2.2416536808013916, -2.245537281036377, -2.2494587898254395, -2.2534189224243164, -2.257417917251587, -2.261456251144409, -2.2655346393585205, -2.269653081893921, -2.2738125324249268, -2.278013229370117, -2.2822554111480713, -2.2865400314331055, -2.2908670902252197, -2.2952373027801514, -2.2996511459350586, -2.3041088581085205, -2.3086113929748535, -2.3131589889526367, -2.317751884460449, -2.3223910331726074, -2.3270764350891113, -2.3318090438842773, -2.3365890979766846, -2.3414173126220703, -2.3462939262390137, -2.351219415664673, -2.356194496154785, -2.361219644546509, -2.366295099258423, -2.3714218139648438, -2.3765997886657715, -2.3818299770355225, -2.3871123790740967, -2.3924479484558105, -2.3978371620178223, -2.403280019760132, -2.4087774753570557, -2.414330005645752, -2.4199378490448, -2.4256014823913574, -2.431321620941162, -2.437098503112793, -2.4429328441619873, -2.448824882507324, -2.454775094985962, -2.4607837200164795, -2.4668517112731934, -2.4729790687561035, -2.479166269302368, -2.4854140281677246, -2.4917221069335938, -2.498091459274292, -2.5045223236083984, -2.511014938354492, -2.5175695419311523, -2.524186849594116, -2.5308666229248047, -2.537609577178955, -2.5444159507751465, -2.551285982131958, -2.5582196712493896, -2.5652174949645996, -2.572279453277588, -2.5794060230255127, -2.586596965789795, -2.5938527584075928, -2.601173162460327, -2.6085586547851562, -2.616008758544922, -2.6235241889953613, -2.6311042308807373, -2.638749361038208, -2.6464593410491943, -2.6542341709136963, -2.6620733737945557, -2.6699771881103516, -2.677945137023926, -2.685976982116699, -2.694072723388672, -2.7022318840026855, -2.710453987121582, -2.7187387943267822, -2.727085828781128, -2.735494613647461, -2.743964672088623, -2.752495527267456, -2.7610862255096436, -2.7697365283966064, -2.7784457206726074, -2.78721284866333, -2.796036958694458, -2.804917812347412, -2.813854217529297, -2.822844982147217, -2.8318896293640137, -2.840986967086792, -2.8501358032226562, -2.85933518409729, -2.868583917617798, -2.877880811691284, -2.8872246742248535, -2.8966140747070312, -2.9060475826263428, -2.9155242443084717, -2.9250423908233643, -2.934600353240967, -2.944197177886963, -2.9538307189941406, -2.9634997844696045, -2.9732024669647217, -2.9829373359680176, -2.9927027225494385, -3.0024967193603516, -3.012317657470703, -3.0221636295318604, -3.0320332050323486, -3.041923999786377, -3.0518345832824707, -3.061762571334839, -3.071706533432007, -3.081664562225342, -3.0916342735290527, -3.101613998413086, -3.1116015911102295, -3.1215953826904297, -3.1315929889678955, 3.1415927410125732, 3.1314918994903564, 3.1213934421539307, 3.1112987995147705, 3.101210594177246, 3.091130495071411, 3.0810606479644775, 3.071002960205078, 3.060959815979004, 3.0509328842163086, 3.040924072265625, 3.030935525894165, 3.0209689140319824, 3.011026620864868, 3.001110076904297, 2.9912211894989014, 2.9813618659973145, 2.971534013748169, 2.9617390632629395, 2.951978921890259, 2.9422552585601807, 2.932569742202759, 2.9229238033294678, 2.9133188724517822, 2.903756618499756, 2.8942387104034424, 2.884766101837158, 2.875340700149536, 2.8659632205963135, 2.856635332107544, 2.847357988357544, 2.838132858276367, 2.828960418701172, 2.8198421001434326, 2.810778856277466, 2.801771879196167, 2.7928216457366943, 2.7839293479919434, 2.7750959396362305, 2.766321897506714, 2.757607936859131, 2.748955249786377, 2.740363836288452, 2.731834650039673, 2.7233684062957764, 2.7149651050567627, 2.7066256999969482, 2.698350429534912, 2.6901395320892334, 2.6819937229156494, 2.673912763595581, 2.6658973693847656, 2.6579477787017822, 2.6500637531280518, 2.6422460079193115, 2.6344940662384033, 2.6268086433410645, 2.6191892623901367, 2.611636161804199, 2.604149341583252, 2.596728801727295, 2.589374303817749, 2.5820858478546143, 2.5748634338378906, 2.567706823348999, 2.5606157779693604, 2.5535900592803955, 2.5466296672821045, 2.539734125137329, 2.5329034328460693, 2.526137113571167, 2.519434690475464, 2.512796401977539, 2.5062215328216553, 2.4997096061706543, 2.493260622024536, 2.4868741035461426, 2.4805495738983154, 2.4742865562438965, 2.4680848121643066, 2.4619438648223877, 2.4558632373809814, 2.4498424530029297, 2.443881034851074, 2.437978982925415, 2.4321351051330566, 2.426349401473999, 2.420621395111084, 2.414950370788574, 2.4093358516693115, 2.403777599334717, 2.3982748985290527, 2.392827272415161, 2.387434244155884, 2.3820953369140625, 2.376810073852539, 2.3715779781341553, 2.366398334503174, 2.3612706661224365, 2.356194496154785, 2.3511693477630615, 2.3461947441101074, 2.3412702083587646, 2.336395025253296, 2.331568956375122, 2.326791286468506, 2.32206130027771, 2.3173789978027344, 2.312743663787842, 2.308154582977295, 2.3036115169525146, 2.2991137504577637, 2.294660806655884, 2.290252447128296, 2.2858879566192627, 2.281567096710205, 2.2772889137268066, 2.2730531692504883, 2.268859624862671, 2.264707565307617, 2.26059627532959, 2.256525754928589, 2.252495288848877, 2.248504638671875, 2.2445530891418457, 2.240640163421631, 2.2367656230926514, 2.23292875289917, -2.2291295528411865, -2.23292875289917, -2.2367656230926514, -2.240640163421631, -2.2445530891418457, -2.248504638671875, -2.252495288848877, -2.256525754928589, -2.26059627532959, -2.264707565307617, -2.268859624862671, -2.2730531692504883, -2.2772889137268066, -2.281567096710205, -2.2858879566192627, -2.290252447128296, -2.294660806655884, -2.2991137504577637, -2.3036115169525146, -2.308154582977295, -2.312743663787842, -2.3173789978027344, -2.32206130027771, -2.326791286468506, -2.331568956375122, -2.336395025253296, -2.3412702083587646, -2.3461947441101074, -2.3511693477630615, -2.356194496154785, -2.3612706661224365, -2.366398334503174, -2.3715779781341553, -2.376810073852539, -2.3820953369140625, -2.387434244155884, -2.392827272415161, -2.3982748985290527, -2.403777599334717, -2.4093358516693115, -2.414950370788574, -2.420621395111084, -2.426349401473999, -2.4321351051330566, -2.437978982925415, -2.443881034851074, -2.4498424530029297, -2.4558632373809814, -2.4619438648223877, -2.4680848121643066, -2.4742865562438965, -2.4805495738983154, -2.4868741035461426, -2.493260622024536, -2.4997096061706543, -2.5062215328216553, -2.512796401977539, -2.519434690475464, -2.526137113571167, -2.5329034328460693, -2.539734125137329, -2.5466296672821045, -2.5535900592803955, -2.5606157779693604, -2.567706823348999, -2.5748634338378906, -2.5820858478546143, -2.589374303817749, -2.596728801727295, -2.604149341583252, -2.611636161804199, -2.6191892623901367, -2.6268086433410645, -2.6344940662384033, -2.6422460079193115, -2.6500637531280518, -2.6579477787017822, -2.6658973693847656, -2.673912763595581, -2.6819937229156494, -2.6901395320892334, -2.698350429534912, -2.7066256999969482, -2.7149651050567627, -2.7233684062957764, -2.731834650039673, -2.740363836288452, -2.748955249786377, -2.757607936859131, -2.766321897506714, -2.7750959396362305, -2.7839293479919434, -2.7928216457366943, -2.801771879196167, -2.810778856277466, -2.8198421001434326, -2.828960418701172, -2.838132858276367, -2.847357988357544, -2.856635332107544, -2.8659632205963135, -2.875340700149536, -2.884766101837158, -2.8942387104034424, -2.903756618499756, -2.9133188724517822, -2.9229238033294678, -2.932569742202759, -2.9422552585601807, -2.951978921890259, -2.9617390632629395, -2.971534013748169, -2.9813618659973145, -2.9912211894989014, -3.001110076904297, -3.011026620864868, -3.0209689140319824, -3.030935525894165, -3.040924072265625, -3.0509328842163086, -3.060959815979004, -3.071002960205078, -3.0810606479644775, -3.091130495071411, -3.101210594177246, -3.1112987995147705, -3.1213934421539307, -3.1314918994903564, 3.1415927410125732, 3.1313889026641846, 3.121187210083008, 3.110990047454834, 3.100799083709717, 3.090616464614868, 3.080444574356079, 3.0702850818634033, 3.060140609741211, 3.0500128269195557, 3.0399038791656494, 3.029815673828125, 3.0197501182556152, 3.009709596633911, 2.9996955394744873, 2.9897100925445557, 2.979755163192749, 2.969832420349121, 2.9599437713623047, 2.9500908851623535, 2.9402754306793213, 2.930499315261841, 2.9207639694213867, 2.9110708236694336, 2.901421546936035, 2.891817808151245, 2.882260799407959, 2.8727521896362305, 2.863292932510376, 2.853884696960449, 2.8445284366607666, 2.8352255821228027, 2.825977087020874, 2.816783905029297, 2.807647466659546, 2.7985687255859375, 2.789548397064209, 2.7805874347686768, 2.771686553955078, 2.7628469467163086, 2.7540688514709473, 2.7453532218933105, 2.7367007732391357, 2.72811222076416, 2.719587564468384, 2.711127996444702, 2.702733278274536, 2.694404363632202, 2.6861414909362793, 2.677945137023926, 2.6698150634765625, 2.661752223968506, 2.6537561416625977, 2.645827531814575, 2.6379663944244385, 2.6301727294921875, 2.6224465370178223, 2.614788055419922, 2.6071972846984863, 2.5996739864349365, 2.5922181606292725, 2.584829807281494, 2.5775089263916016, 2.5702552795410156, 2.563068389892578, 2.555948495864868, 2.5488953590393066, 2.5419082641601562, 2.534987449645996, 2.528132677078247, 2.521343231201172, 2.5146188735961914, 2.5079596042633057, 2.5013649463653564, 2.4948341846466064, 2.4883673191070557, 2.481963872909546, 2.475623369216919, 2.4693455696105957, 2.463129758834839, 2.4569754600524902, 2.4508824348449707, 2.444850444793701, 2.4388785362243652, 2.432966470718384, 2.4271135330200195, 2.4213197231292725, 2.415584087371826, 2.4099061489105225, 2.4042856693267822, 2.398721933364868, 2.393214702606201, 2.387763023376465, 2.382366418838501, 2.3770248889923096, 2.371737241744995, 2.3665034770965576, 2.3613226413726807, 2.356194496154785, 2.351118326187134, 2.3460938930511475, 2.3411202430725098, 2.3361971378326416, 2.3313241004943848, 2.326500177383423, 2.321725368499756, 2.3169989585876465, 2.3123202323913574, 2.3076889514923096, 2.3031044006347656, 2.2985661029815674, 2.2940735816955566, 2.289626359939575, 2.2852237224578857, 2.2808656692504883, 2.2765510082244873, 2.272279977798462, 2.2680513858795166, 2.2638652324676514, 2.259720802307129, 2.255617618560791, 2.2515552043914795, 2.2475333213806152, 2.243551254272461, 2.2396085262298584, 2.2357046604156494, 2.231839418411255, 2.2280123233795166, -2.2242226600646973, -2.2280123233795166, -2.231839418411255, -2.2357046604156494, -2.2396085262298584, -2.243551254272461, -2.2475333213806152, -2.2515552043914795, -2.255617618560791, -2.259720802307129, -2.2638652324676514, -2.2680513858795166, -2.272279977798462, -2.2765510082244873, -2.2808656692504883, -2.2852237224578857, -2.289626359939575, -2.2940735816955566, -2.2985661029815674, -2.3031044006347656, -2.3076889514923096, -2.3123202323913574, -2.3169989585876465, -2.321725368499756, -2.326500177383423, -2.3313241004943848, -2.3361971378326416, -2.3411202430725098, -2.3460938930511475, -2.351118326187134, -2.356194496154785, -2.3613226413726807, -2.3665034770965576, -2.371737241744995, -2.3770248889923096, -2.382366418838501, -2.387763023376465, -2.393214702606201, -2.398721933364868, -2.4042856693267822, -2.4099061489105225, -2.415584087371826, -2.4213197231292725, -2.4271135330200195, -2.432966470718384, -2.4388785362243652, -2.444850444793701, -2.4508824348449707, -2.4569754600524902, -2.463129758834839, -2.4693455696105957, -2.475623369216919, -2.481963872909546, -2.4883673191070557, -2.4948341846466064, -2.5013649463653564, -2.5079596042633057, -2.5146188735961914, -2.521343231201172, -2.528132677078247, -2.534987449645996, -2.5419082641601562, -2.5488953590393066, -2.555948495864868, -2.563068389892578, -2.5702552795410156, -2.5775089263916016, -2.584829807281494, -2.5922181606292725, -2.5996739864349365, -2.6071972846984863, -2.614788055419922, -2.6224465370178223, -2.6301727294921875, -2.6379663944244385, -2.645827531814575, -2.6537561416625977, -2.661752223968506, -2.6698150634765625, -2.677945137023926, -2.6861414909362793, -2.694404363632202, -2.702733278274536, -2.711127996444702, -2.719587564468384, -2.72811222076416, -2.7367007732391357, -2.7453532218933105, -2.7540688514709473, -2.7628469467163086, -2.771686553955078, -2.7805874347686768, -2.789548397064209, -2.7985687255859375, -2.807647466659546, -2.816783905029297, -2.825977087020874, -2.8352255821228027, -2.8445284366607666, -2.853884696960449, -2.863292932510376, -2.8727521896362305, -2.882260799407959, -2.891817808151245, -2.901421546936035, -2.9110708236694336, -2.9207639694213867, -2.930499315261841, -2.9402754306793213, -2.9500908851623535, -2.9599437713623047, -2.969832420349121, -2.979755163192749, -2.9897100925445557, -2.9996955394744873, -3.009709596633911, -3.0197501182556152, -3.029815673828125, -3.0399038791656494, -3.0500128269195557, -3.060140609741211, -3.0702850818634033, -3.080444574356079, -3.090616464614868, -3.100799083709717, -3.110990047454834, -3.121187210083008, -3.1313889026641846, 3.1415927410125732, 3.131283760070801, 3.1209769248962402, 3.1106746196746826, 3.10037899017334, 3.0900919437408447, 3.079815626144409, 3.0695526599884033, 3.059304714202881, 3.0490739345550537, 3.038862705230713, 3.028672933578491, 3.0185067653656006, 3.0083658695220947, 2.9982526302337646, 2.988168716430664, 2.978116273880005, 2.968096971511841, 2.9581127166748047, 2.9481654167175293, 2.9382565021514893, 2.9283881187438965, 2.9185616970062256, 2.9087789058685303, 2.899041175842285, 2.889350175857544, 2.8797073364257812, 2.8701140880584717, 2.86057186126709, 2.8510818481445312, 2.8416454792022705, 2.832263708114624, 2.8229379653930664, 2.813669443130493, 2.8044586181640625, 2.795307159423828, 2.7862155437469482, 2.7771849632263184, 2.768216371536255, 2.759310007095337, 2.750467300415039, 2.7416882514953613, 2.7329742908477783, 2.724325180053711, 2.7157421112060547, 2.7072253227233887, 2.698775291442871, 2.69039249420166, 2.682077169418335, 2.6738297939300537, 2.6656506061553955, 2.6575396060943604, 2.6494975090026855, 2.641523838043213, 2.6336193084716797, 2.625783681869507, 2.6180169582366943, 2.610319137573242, 2.6026906967163086, 2.5951309204101562, 2.5876400470733643, 2.5802180767059326, 2.5728647708892822, 2.565579891204834, 2.558363199234009, 2.5512146949768066, 2.5441341400146484, 2.537121057510376, 2.53017520904541, 2.523296356201172, 2.516484022140503, 2.5097382068634033, 2.503058433532715, 2.4964439868927, 2.4898951053619385, 2.483410596847534, 2.4769906997680664, 2.470634698867798, 2.4643423557281494, 2.458112955093384, 2.4519460201263428, 2.4458413124084473, 2.43979811668396, 2.4338159561157227, 2.4278945922851562, 2.4220333099365234, 2.416231632232666, 2.4104888439178467, 2.4048047065734863, 2.3991787433624268, 2.3936102390289307, 2.3880984783172607, 2.382643461227417, 2.377243995666504, 2.3719000816345215, 2.3666107654571533, 2.3613758087158203, 2.356194496154785, 2.3510663509368896, 2.3459906578063965, 2.3409671783447266, 2.3359951972961426, 2.3310742378234863, 2.3262035846710205, 2.321382761001587, 2.3166112899780273, 2.3118884563446045, 2.3072140216827393, 2.3025872707366943, 2.2980077266693115, 2.2934749126434326, 2.2889881134033203, 2.2845470905303955, 2.280150890350342, 2.275799512863159, 2.2714920043945312, 2.267228126525879, 2.263007164001465, 2.25882887840271, 2.254692554473877, 2.2505979537963867, 2.246544361114502, 2.2425312995910645, 2.238558292388916, 2.2346251010894775, 2.2307307720184326, 2.2268753051757812, 2.2230582237243652, -2.2192788124084473, -2.2230582237243652, -2.2268753051757812, -2.2307307720184326, -2.2346251010894775, -2.238558292388916, -2.2425312995910645, -2.246544361114502, -2.2505979537963867, -2.254692554473877, -2.25882887840271, -2.263007164001465, -2.267228126525879, -2.2714920043945312, -2.275799512863159, -2.280150890350342, -2.2845470905303955, -2.2889881134033203, -2.2934749126434326, -2.2980077266693115, -2.3025872707366943, -2.3072140216827393, -2.3118884563446045, -2.3166112899780273, -2.321382761001587, -2.3262035846710205, -2.3310742378234863, -2.3359951972961426, -2.3409671783447266, -2.3459906578063965, -2.3510663509368896, -2.356194496154785, -2.3613758087158203, -2.3666107654571533, -2.3719000816345215, -2.377243995666504, -2.382643461227417, -2.3880984783172607, -2.3936102390289307, -2.3991787433624268, -2.4048047065734863, -2.4104888439178467, -2.416231632232666, -2.4220333099365234, -2.4278945922851562, -2.4338159561157227, -2.43979811668396, -2.4458413124084473, -2.4519460201263428, -2.458112955093384, -2.4643423557281494, -2.470634698867798, -2.4769906997680664, -2.483410596847534, -2.4898951053619385, -2.4964439868927, -2.503058433532715, -2.5097382068634033, -2.516484022140503, -2.523296356201172, -2.53017520904541, -2.537121057510376, -2.5441341400146484, -2.5512146949768066, -2.558363199234009, -2.565579891204834, -2.5728647708892822, -2.5802180767059326, -2.5876400470733643, -2.5951309204101562, -2.6026906967163086, -2.610319137573242, -2.6180169582366943, -2.625783681869507, -2.6336193084716797, -2.641523838043213, -2.6494975090026855, -2.6575396060943604, -2.6656506061553955, -2.6738297939300537, -2.682077169418335, -2.69039249420166, -2.698775291442871, -2.7072253227233887, -2.7157421112060547, -2.724325180053711, -2.7329742908477783, -2.7416882514953613, -2.750467300415039, -2.759310007095337, -2.768216371536255, -2.7771849632263184, -2.7862155437469482, -2.795307159423828, -2.8044586181640625, -2.813669443130493, -2.8229379653930664, -2.832263708114624, -2.8416454792022705, -2.8510818481445312, -2.86057186126709, -2.8701140880584717, -2.8797073364257812, -2.889350175857544, -2.899041175842285, -2.9087789058685303, -2.9185616970062256, -2.9283881187438965, -2.9382565021514893, -2.9481654167175293, -2.9581127166748047, -2.968096971511841, -2.978116273880005, -2.988168716430664, -2.9982526302337646, -3.0083658695220947, -3.0185067653656006, -3.028672933578491, -3.038862705230713, -3.0490739345550537, -3.059304714202881, -3.0695526599884033, -3.079815626144409, -3.0900919437408447, -3.10037899017334, -3.1106746196746826, -3.1209769248962402, -3.131283760070801, 3.1415927410125732, 3.131176471710205, 3.120762348175049, 3.1103527545928955, 3.099950075149536, 3.0895564556121826, 3.0791738033294678, 3.0688047409057617, 3.0584514141082764, 3.0481159687042236, 3.0378003120422363, 3.0275068283081055, 3.017237663269043, 3.0069947242736816, 2.9967801570892334, 2.986595869064331, 2.9764440059661865, 2.9663262367248535, 2.956244707107544, 2.9462010860443115, 2.936197280883789, 2.9262349605560303, 2.916315793991089, 2.9064416885375977, 2.8966140747070312, 2.8868343830108643, 2.8771042823791504, 2.8674252033233643, 2.8577985763549805, 2.8482255935668945, 2.838707685470581, 2.8292462825775146, 2.8198421001434326, 2.8104965686798096, 2.801210641860962, 2.791985511779785, 2.7828218936920166, 2.7737209796905518, 2.764683485031128, 2.7557098865509033, 2.7468016147613525, 2.7379586696624756, 2.729182243347168, 2.720472574234009, 2.7118303775787354, 2.703256130218506, 2.6947500705718994, 2.6863131523132324, 2.677945137023926, 2.6696465015411377, 2.6614177227020264, 2.653258800506592, 2.645169973373413, 2.6371514797210693, 2.6292030811309814, 2.6213254928588867, 2.613518238067627, 2.605781316757202, 2.5981149673461914, 2.5905189514160156, 2.582993268966675, 2.57553768157959, 2.5681521892547607, 2.5608363151550293, 2.5535900592803955, 2.5464131832122803, 2.5393052101135254, 2.53226637840271, 2.5252957344055176, 2.5183932781219482, 2.511558771133423, 2.504791498184204, 2.498091459274292, 2.4914581775665283, 2.484890937805176, 2.4783897399902344, 2.4719536304473877, 2.4655826091766357, 2.4592761993408203, 2.453033447265625, 2.44685435295105, 2.4407382011413574, 2.4346845149993896, 2.4286928176879883, 2.422762632369995, 2.416893243789673, 2.4110844135284424, 2.4053351879119873, 2.3996453285217285, 2.394014358520508, 2.388441324234009, 2.3829259872436523, 2.3774678707122803, 2.3720662593841553, 2.36672043800354, 2.3614299297332764, 2.356194496154785, 2.35101318359375, 2.3458855152130127, 2.340811014175415, 2.335789203643799, 2.3308191299438477, 2.3259007930755615, 2.321033000946045, 2.316215753555298, 2.311448335647583, 2.306730031967163, 2.302060127258301, 2.297438621520996, 2.2928645610809326, 2.2883377075195312, 2.2838571071624756, 2.2794225215911865, 2.275033473968506, 2.2706892490386963, 2.2663893699645996, 2.2621333599090576, 2.257920503616333, 2.2537505626678467, 2.2496230602264404, 2.245537281036377, 2.241492748260498, 2.2374892234802246, 2.2335257530212402, 2.229602336883545, 2.2257182598114014, 2.2218730449676514, 2.2180662155151367, -2.2142975330352783, -2.2180662155151367, -2.2218730449676514, -2.2257182598114014, -2.229602336883545, -2.2335257530212402, -2.2374892234802246, -2.241492748260498, -2.245537281036377, -2.2496230602264404, -2.2537505626678467, -2.257920503616333, -2.2621333599090576, -2.2663893699645996, -2.2706892490386963, -2.275033473968506, -2.2794225215911865, -2.2838571071624756, -2.2883377075195312, -2.2928645610809326, -2.297438621520996, -2.302060127258301, -2.306730031967163, -2.311448335647583, -2.316215753555298, -2.321033000946045, -2.3259007930755615, -2.3308191299438477, -2.335789203643799, -2.340811014175415, -2.3458855152130127, -2.35101318359375, -2.356194496154785, -2.3614299297332764, -2.36672043800354, -2.3720662593841553, -2.3774678707122803, -2.3829259872436523, -2.388441324234009, -2.394014358520508, -2.3996453285217285, -2.4053351879119873, -2.4110844135284424, -2.416893243789673, -2.422762632369995, -2.4286928176879883, -2.4346845149993896, -2.4407382011413574, -2.44685435295105, -2.453033447265625, -2.4592761993408203, -2.4655826091766357, -2.4719536304473877, -2.4783897399902344, -2.484890937805176, -2.4914581775665283, -2.498091459274292, -2.504791498184204, -2.511558771133423, -2.5183932781219482, -2.5252957344055176, -2.53226637840271, -2.5393052101135254, -2.5464131832122803, -2.5535900592803955, -2.5608363151550293, -2.5681521892547607, -2.57553768157959, -2.582993268966675, -2.5905189514160156, -2.5981149673461914, -2.605781316757202, -2.613518238067627, -2.6213254928588867, -2.6292030811309814, -2.6371514797210693, -2.645169973373413, -2.653258800506592, -2.6614177227020264, -2.6696465015411377, -2.677945137023926, -2.6863131523132324, -2.6947500705718994, -2.703256130218506, -2.7118303775787354, -2.720472574234009, -2.729182243347168, -2.7379586696624756, -2.7468016147613525, -2.7557098865509033, -2.764683485031128, -2.7737209796905518, -2.7828218936920166, -2.791985511779785, -2.801210641860962, -2.8104965686798096, -2.8198421001434326, -2.8292462825775146, -2.838707685470581, -2.8482255935668945, -2.8577985763549805, -2.8674252033233643, -2.8771042823791504, -2.8868343830108643, -2.8966140747070312, -2.9064416885375977, -2.916315793991089, -2.9262349605560303, -2.936197280883789, -2.9462010860443115, -2.956244707107544, -2.9663262367248535, -2.9764440059661865, -2.986595869064331, -2.9967801570892334, -3.0069947242736816, -3.017237663269043, -3.0275068283081055, -3.0378003120422363, -3.0481159687042236, -3.0584514141082764, -3.0688047409057617, -3.0791738033294678, -3.0895564556121826, -3.099950075149536, -3.1103527545928955, -3.120762348175049, -3.131176471710205, 3.1415927410125732, 3.1310667991638184, 3.1205432415008545, 3.1100242137908936, 3.0995123386383057, 3.0890095233917236, 3.0785186290740967, 3.0680413246154785, 3.0575802326202393, 3.04713773727417, 3.0367157459259033, 3.0263166427612305, 3.015942335128784, 3.0055952072143555, 2.9952774047851562, 2.9849908351898193, 2.9747374057769775, 2.964519500732422, 2.954338788986206, 2.944197177886963, 2.934096336364746, 2.9240386486053467, 2.914025068283081, 2.9040579795837402, 2.894138813018799, 2.8842689990997314, 2.874450206756592, 2.8646838665008545, 2.854971408843994, 2.8453142642974854, 2.8357138633728027, 2.8261711597442627, 2.81668758392334, 2.8072640895843506, 2.7979021072387695, 2.788602352142334, 2.7793657779693604, 2.770193576812744, 2.7610862255096436, 2.752044916152954, 2.743070125579834, 2.7341628074645996, 2.725323438644409, 2.716552495956421, 2.707850694656372, 2.699218511581421, 2.6906561851501465, 2.682164430618286, 2.673743486404419, 2.665393352508545, 2.6571147441864014, 2.6489076614379883, 2.6407721042633057, 2.6327085494995117, 2.6247167587280273, 2.6167969703674316, 2.6089489459991455, 2.601173162460327, 2.5934691429138184, 2.585836887359619, 2.5782763957977295, 2.5707874298095703, 2.5633697509765625, 2.556023120880127, 2.5487475395202637, 2.5415425300598145, 2.5344078540802, 2.5273430347442627, 2.520348072052002, 2.5134224891662598, 2.506565809249878, 2.4997777938842773, 2.4930579662323, 2.486405849456787, 2.47982120513916, 2.4733033180236816, 2.4668517112731934, 2.460466146469116, 2.454145908355713, 2.4478907585144043, 2.441699743270874, 2.435572862625122, 2.429509162902832, 2.423508405685425, 2.417569875717163, 2.4116930961608887, 2.4058773517608643, 2.4001221656799316, 2.3944272994995117, 2.388791561126709, 2.3832149505615234, 2.3776965141296387, 2.3722360134124756, 2.3668324947357178, 2.361485481262207, 2.356194496154785, 2.350958824157715, 2.345778226852417, 2.340651750564575, 2.3355789184570312, 2.330559015274048, 2.325591802597046, 2.320676326751709, 2.315812349319458, 2.3109991550445557, 2.3062360286712646, 2.301522731781006, 2.296858310699463, 2.2922425270080566, 2.2876744270324707, 2.283154010772705, 2.2786803245544434, 2.2742528915405273, 2.2698709964752197, 2.2655346393585205, 2.2612428665161133, 2.25699520111084, 2.252790927886963, 2.2486300468444824, 2.244511604309082, 2.2404353618621826, 2.2364003658294678, 2.2324066162109375, 2.2284533977508545, 2.2245404720306396, 2.2206668853759766, 2.216832399368286, 2.213036298751831, -2.2092785835266113, -2.213036298751831, -2.216832399368286, -2.2206668853759766, -2.2245404720306396, -2.2284533977508545, -2.2324066162109375, -2.2364003658294678, -2.2404353618621826, -2.244511604309082, -2.2486300468444824, -2.252790927886963, -2.25699520111084, -2.2612428665161133, -2.2655346393585205, -2.2698709964752197, -2.2742528915405273, -2.2786803245544434, -2.283154010772705, -2.2876744270324707, -2.2922425270080566, -2.296858310699463, -2.301522731781006, -2.3062360286712646, -2.3109991550445557, -2.315812349319458, -2.320676326751709, -2.325591802597046, -2.330559015274048, -2.3355789184570312, -2.340651750564575, -2.345778226852417, -2.350958824157715, -2.356194496154785, -2.361485481262207, -2.3668324947357178, -2.3722360134124756, -2.3776965141296387, -2.3832149505615234, -2.388791561126709, -2.3944272994995117, -2.4001221656799316, -2.4058773517608643, -2.4116930961608887, -2.417569875717163, -2.423508405685425, -2.429509162902832, -2.435572862625122, -2.441699743270874, -2.4478907585144043, -2.454145908355713, -2.460466146469116, -2.4668517112731934, -2.4733033180236816, -2.47982120513916, -2.486405849456787, -2.4930579662323, -2.4997777938842773, -2.506565809249878, -2.5134224891662598, -2.520348072052002, -2.5273430347442627, -2.5344078540802, -2.5415425300598145, -2.5487475395202637, -2.556023120880127, -2.5633697509765625, -2.5707874298095703, -2.5782763957977295, -2.585836887359619, -2.5934691429138184, -2.601173162460327, -2.6089489459991455, -2.6167969703674316, -2.6247167587280273, -2.6327085494995117, -2.6407721042633057, -2.6489076614379883, -2.6571147441864014, -2.665393352508545, -2.673743486404419, -2.682164430618286, -2.6906561851501465, -2.699218511581421, -2.707850694656372, -2.716552495956421, -2.725323438644409, -2.7341628074645996, -2.743070125579834, -2.752044916152954, -2.7610862255096436, -2.770193576812744, -2.7793657779693604, -2.788602352142334, -2.7979021072387695, -2.8072640895843506, -2.81668758392334, -2.8261711597442627, -2.8357138633728027, -2.8453142642974854, -2.854971408843994, -2.8646838665008545, -2.874450206756592, -2.8842689990997314, -2.894138813018799, -2.9040579795837402, -2.914025068283081, -2.9240386486053467, -2.934096336364746, -2.944197177886963, -2.954338788986206, -2.964519500732422, -2.9747374057769775, -2.9849908351898193, -2.9952774047851562, -3.0055952072143555, -3.015942335128784, -3.0263166427612305, -3.0367157459259033, -3.04713773727417, -3.0575802326202393, -3.0680413246154785, -3.0785186290740967, -3.0890095233917236, -3.0995123386383057, -3.1100242137908936, -3.1205432415008545, -3.1310667991638184, 3.1415927410125732, 3.1309547424316406, 3.120319366455078, 3.1096885204315186, 3.099065065383911, 3.0884511470794678, 3.0778493881225586, 3.0672616958618164, 3.0566909313201904, 3.0461390018463135, 3.0356082916259766, 3.0251011848449707, 3.014619827270508, 3.004166603088379, 2.9937431812286377, 2.9833524227142334, 2.9729957580566406, 2.9626755714416504, 2.9523935317993164, 2.9421520233154297, 2.931952714920044, 2.921797513961792, 2.9116883277893066, 2.9016265869140625, 2.8916139602661133, 2.881652593612671, 2.8717434406280518, 2.8618884086608887, 2.8520889282226562, 2.842346429824829, 2.8326618671417236, 2.8230369091033936, 2.8134727478027344, 2.8039703369140625, 2.7945311069488525, 2.785155773162842, 2.7758452892303467, 2.7666008472442627, 2.7574234008789062, 2.7483131885528564, 2.739271640777588, 2.7302989959716797, 2.721395969390869, 2.7125632762908936, 2.703801393508911, 2.69511079788208, 2.6864917278289795, 2.677945137023926, 2.66947078704834, 2.661068916320801, 2.652740240097046, 2.644484758377075, 2.6363024711608887, 2.6281936168670654, 2.6201581954956055, 2.612196445465088, 2.6043078899383545, 2.5964930057525635, 2.5887513160705566, 2.581083059310913, 2.5734879970550537, 2.5659656524658203, 2.558516025543213, 2.5511391162872314, 2.5438342094421387, 2.5366013050079346, 2.52944016456604, 2.522350311279297, 2.515331268310547, 2.508382797241211, 2.501504421234131, 2.4946959018707275, 2.4879567623138428, 2.4812862873077393, 2.474684476852417, 2.4681503772735596, 2.461683750152588, 2.4552841186523438, 2.44895076751709, 2.442683458328247, 2.436481237411499, 2.4303441047668457, 2.4242708683013916, 2.4182615280151367, 2.4123153686523438, 2.4064314365386963, 2.4006097316741943, 2.3948493003845215, 2.3891496658325195, 2.383510112762451, 2.377930164337158, 2.3724093437194824, 2.3669466972351074, 2.361541986465454, 2.356194496154785, 2.3509035110473633, 2.3456685543060303, 2.340488910675049, 2.3353641033172607, 2.330293655395508, 2.3252766132354736, 2.3203125, 2.3154008388519287, 2.3105409145355225, 2.305732250213623, 2.3009743690490723, 2.2962663173675537, 2.2916078567504883, 2.2869982719421387, 2.2824368476867676, 2.277923345565796, 2.2734570503234863, 2.2690372467041016, 2.2646634578704834, 2.2603354454040527, 2.256052017211914, 2.2518134117126465, 2.2476184368133545, 2.243466854095459, 2.2393581867218018, 2.2352917194366455, 2.231266975402832, 2.2272837162017822, 2.223341226577759, 2.2194387912750244, 2.215576171875, 2.2117528915405273, 2.2079684734344482, -2.2042222023010254, -2.2079684734344482, -2.2117528915405273, -2.215576171875, -2.2194387912750244, -2.223341226577759, -2.2272837162017822, -2.231266975402832, -2.2352917194366455, -2.2393581867218018, -2.243466854095459, -2.2476184368133545, -2.2518134117126465, -2.256052017211914, -2.2603354454040527, -2.2646634578704834, -2.2690372467041016, -2.2734570503234863, -2.277923345565796, -2.2824368476867676, -2.2869982719421387, -2.2916078567504883, -2.2962663173675537, -2.3009743690490723, -2.305732250213623, -2.3105409145355225, -2.3154008388519287, -2.3203125, -2.3252766132354736, -2.330293655395508, -2.3353641033172607, -2.340488910675049, -2.3456685543060303, -2.3509035110473633, -2.356194496154785, -2.361541986465454, -2.3669466972351074, -2.3724093437194824, -2.377930164337158, -2.383510112762451, -2.3891496658325195, -2.3948493003845215, -2.4006097316741943, -2.4064314365386963, -2.4123153686523438, -2.4182615280151367, -2.4242708683013916, -2.4303441047668457, -2.436481237411499, -2.442683458328247, -2.44895076751709, -2.4552841186523438, -2.461683750152588, -2.4681503772735596, -2.474684476852417, -2.4812862873077393, -2.4879567623138428, -2.4946959018707275, -2.501504421234131, -2.508382797241211, -2.515331268310547, -2.522350311279297, -2.52944016456604, -2.5366013050079346, -2.5438342094421387, -2.5511391162872314, -2.558516025543213, -2.5659656524658203, -2.5734879970550537, -2.581083059310913, -2.5887513160705566, -2.5964930057525635, -2.6043078899383545, -2.612196445465088, -2.6201581954956055, -2.6281936168670654, -2.6363024711608887, -2.644484758377075, -2.652740240097046, -2.661068916320801, -2.66947078704834, -2.677945137023926, -2.6864917278289795, -2.69511079788208, -2.703801393508911, -2.7125632762908936, -2.721395969390869, -2.7302989959716797, -2.739271640777588, -2.7483131885528564, -2.7574234008789062, -2.7666008472442627, -2.7758452892303467, -2.785155773162842, -2.7945311069488525, -2.8039703369140625, -2.8134727478027344, -2.8230369091033936, -2.8326618671417236, -2.842346429824829, -2.8520889282226562, -2.8618884086608887, -2.8717434406280518, -2.881652593612671, -2.8916139602661133, -2.9016265869140625, -2.9116883277893066, -2.921797513961792, -2.931952714920044, -2.9421520233154297, -2.9523935317993164, -2.9626755714416504, -2.9729957580566406, -2.9833524227142334, -2.9937431812286377, -3.004166603088379, -3.014619827270508, -3.0251011848449707, -3.0356082916259766, -3.0461390018463135, -3.0566909313201904, -3.0672616958618164, -3.0778493881225586, -3.0884511470794678, -3.099065065383911, -3.1096885204315186, -3.120319366455078, -3.1309547424316406, 3.1415927410125732, 3.130840301513672, 3.1200904846191406, 3.1093456745147705, 3.0986084938049316, 3.087880849838257, 3.0771658420562744, 3.0664656162261963, 3.0557823181152344, 3.045118808746338, 3.0344772338867188, 3.023859977722168, 3.0132694244384766, 3.0027077198028564, 2.9921770095825195, 2.9816794395446777, 2.971217632293701, 2.9607930183410645, 2.9504082202911377, 2.9400649070739746, 2.929765224456787, 2.919510841369629, 2.909303665161133, 2.8991456031799316, 2.889038324356079, 2.878983497619629, 2.8689827919006348, 2.8590376377105713, 2.849149703979492, 2.839320182800293, 2.8295505046844482, 2.8198421001434326, 2.8101961612701416, 2.8006136417388916, 2.7910959720611572, 2.781644105911255, 2.772258996963501, 2.762941598892212, 2.753692626953125, 2.7445132732391357, 2.7354037761688232, 2.726365327835083, 2.717398166656494, 2.708503246307373, 2.699680805206299, 2.6909313201904297, 2.682255268096924, 2.6736531257629395, 2.6651251316070557, 2.6566717624664307, 2.6482927799224854, 2.639988660812378, 2.6317594051361084, 2.623605251312256, 2.6155261993408203, 2.6075222492218018, 2.5995934009552, 2.5917394161224365, 2.58396053314209, 2.576256275177002, 2.5686264038085938, 2.5610711574554443, 2.5535900592803955, 2.546182870864868, 2.538849115371704, 2.5315887928009033, 2.5244011878967285, 2.5172863006591797, 2.5102436542510986, 2.503272771835327, 2.496373414993286, 2.489544630050659, 2.4827866554260254, 2.4760985374450684, 2.46947979927063, 2.462930202484131, 2.456449031829834, 2.450035810470581, 2.4436898231506348, 2.437410831451416, 2.4311981201171875, 2.425050973892212, 2.41896915435791, 2.412951707839966, 2.4069981575012207, 2.4011080265045166, 2.3952808380126953, 2.3895153999328613, 2.3838117122650146, 2.378169059753418, 2.372586488723755, 2.367063522338867, 2.361599922180176, 2.356194496154785, 2.350847005844116, 2.3455564975738525, 2.340322732925415, 2.3351449966430664, 2.3300225734710693, 2.3249547481536865, 2.3199410438537598, 2.3149807453155518, 2.3100733757019043, 2.30521821975708, 2.300414800643921, 2.2956624031066895, 2.2909605503082275, 2.286308526992798, 2.281705617904663, 2.277151584625244, 2.2726457118988037, 2.2681870460510254, 2.263775587081909, 2.2594103813171387, 2.2550911903381348, 2.250817060470581, 2.2465877532958984, 2.2424025535583496, 2.2382609844207764, 2.2341623306274414, 2.2301063537597656, 2.2260923385620117, 2.2221200466156006, 2.218188524246216, 2.2142975330352783, 2.210446357727051, 2.206634759902954, 2.202862024307251, -2.1991279125213623, -2.202862024307251, -2.206634759902954, -2.210446357727051, -2.2142975330352783, -2.218188524246216, -2.2221200466156006, -2.2260923385620117, -2.2301063537597656, -2.2341623306274414, -2.2382609844207764, -2.2424025535583496, -2.2465877532958984, -2.250817060470581, -2.2550911903381348, -2.2594103813171387, -2.263775587081909, -2.2681870460510254, -2.2726457118988037, -2.277151584625244, -2.281705617904663, -2.286308526992798, -2.2909605503082275, -2.2956624031066895, -2.300414800643921, -2.30521821975708, -2.3100733757019043, -2.3149807453155518, -2.3199410438537598, -2.3249547481536865, -2.3300225734710693, -2.3351449966430664, -2.340322732925415, -2.3455564975738525, -2.350847005844116, -2.356194496154785, -2.361599922180176, -2.367063522338867, -2.372586488723755, -2.378169059753418, -2.3838117122650146, -2.3895153999328613, -2.3952808380126953, -2.4011080265045166, -2.4069981575012207, -2.412951707839966, -2.41896915435791, -2.425050973892212, -2.4311981201171875, -2.437410831451416, -2.4436898231506348, -2.450035810470581, -2.456449031829834, -2.462930202484131, -2.46947979927063, -2.4760985374450684, -2.4827866554260254, -2.489544630050659, -2.496373414993286, -2.503272771835327, -2.5102436542510986, -2.5172863006591797, -2.5244011878967285, -2.5315887928009033, -2.538849115371704, -2.546182870864868, -2.5535900592803955, -2.5610711574554443, -2.5686264038085938, -2.576256275177002, -2.58396053314209, -2.5917394161224365, -2.5995934009552, -2.6075222492218018, -2.6155261993408203, -2.623605251312256, -2.6317594051361084, -2.639988660812378, -2.6482927799224854, -2.6566717624664307, -2.6651251316070557, -2.6736531257629395, -2.682255268096924, -2.6909313201904297, -2.699680805206299, -2.708503246307373, -2.717398166656494, -2.726365327835083, -2.7354037761688232, -2.7445132732391357, -2.753692626953125, -2.762941598892212, -2.772258996963501, -2.781644105911255, -2.7910959720611572, -2.8006136417388916, -2.8101961612701416, -2.8198421001434326, -2.8295505046844482, -2.839320182800293, -2.849149703979492, -2.8590376377105713, -2.8689827919006348, -2.878983497619629, -2.889038324356079, -2.8991456031799316, -2.909303665161133, -2.919510841369629, -2.929765224456787, -2.9400649070739746, -2.9504082202911377, -2.9607930183410645, -2.971217632293701, -2.9816794395446777, -2.9921770095825195, -3.0027077198028564, -3.0132694244384766, -3.023859977722168, -3.0344772338867188, -3.045118808746338, -3.0557823181152344, -3.0664656162261963, -3.0771658420562744, -3.087880849838257, -3.0986084938049316, -3.1093456745147705, -3.1200904846191406, -3.130840301513672, 3.1415927410125732, 3.130723476409912, 3.119856834411621, 3.1089954376220703, 3.098141670227051, 3.0872981548309326, 3.076467514038086, 3.0656521320343018, 3.054854393005371, 3.044076919555664, 3.0333220958709717, 3.022592306137085, 3.011890172958374, 3.0012176036834717, 2.990577220916748, 2.979971408843994, 2.9694018363952637, 2.9588711261749268, 2.948381185531616, 2.937934160232544, 2.9275319576263428, 2.9171767234802246, 2.906870126724243, 2.8966140747070312, 2.8864102363586426, 2.87626051902771, 2.866166591644287, 2.8561298847198486, 2.846151828765869, 2.8362340927124023, 2.8263778686523438, 2.816584825515747, 2.8068559169769287, 2.797192335128784, 2.787595272064209, 2.7780656814575195, 2.7686049938201904, 2.75921368598938, 2.7498927116394043, 2.74064302444458, 2.7314653396606445, 2.722360372543335, 2.7133285999298096, 2.7043704986572266, 2.6954870223999023, 2.686678409576416, 2.677945137023926, 2.6692872047424316, 2.660705327987671, 2.6521997451782227, 2.643770217895508, 2.6354174613952637, 2.627141237258911, 2.6189417839050293, 2.610819101333618, 2.6027731895446777, 2.594803810119629, 2.5869109630584717, 2.579094648361206, 2.571354627609253, 2.563690662384033, 2.5561025142669678, 2.5485901832580566, 2.5411529541015625, 2.5337905883789062, 2.526503086090088, 2.51928973197937, 2.512150287628174, 2.50508451461792, 2.498091459274292, 2.49117112159729, 2.484323024749756, 2.477546453475952, 2.4708411693573, 2.4642062187194824, 2.457641363143921, 2.451146125793457, 2.4447197914123535, 2.4383621215820312, 2.4320719242095947, 2.425848960876465, 2.4196927547454834, 2.413602590560913, 2.4075777530670166, 2.4016177654266357, 2.395721912384033, 2.3898894786834717, 2.384120225906372, 2.378412961959839, 2.372767448425293, 2.367182970046997, 2.361658811569214, 2.356194496154785, 2.3507890701293945, 2.345442295074463, 2.3401529788970947, 2.33492112159729, 2.3297455310821533, 2.3246259689331055, 2.319561719894409, 2.314551830291748, 2.309596061706543, 2.3046936988830566, 2.2998440265655518, 2.295046329498291, 2.290300130844116, 2.285604953765869, 2.2809598445892334, 2.27636456489563, 2.271818161010742, 2.267320394515991, 2.2628703117370605, 2.258467674255371, 2.2541115283966064, 2.2498016357421875, 2.245537281036377, 2.2413179874420166, 2.237143039703369, 2.2330117225646973, 2.228924036026001, 2.224879026412964, 2.2208762168884277, 2.2169151306152344, 2.2129952907562256, 2.209116220474243, 2.2052769660949707, 2.201477527618408, 2.1977174282073975, -2.193995714187622, -2.1977174282073975, -2.201477527618408, -2.2052769660949707, -2.209116220474243, -2.2129952907562256, -2.2169151306152344, -2.2208762168884277, -2.224879026412964, -2.228924036026001, -2.2330117225646973, -2.237143039703369, -2.2413179874420166, -2.245537281036377, -2.2498016357421875, -2.2541115283966064, -2.258467674255371, -2.2628703117370605, -2.267320394515991, -2.271818161010742, -2.27636456489563, -2.2809598445892334, -2.285604953765869, -2.290300130844116, -2.295046329498291, -2.2998440265655518, -2.3046936988830566, -2.309596061706543, -2.314551830291748, -2.319561719894409, -2.3246259689331055, -2.3297455310821533, -2.33492112159729, -2.3401529788970947, -2.345442295074463, -2.3507890701293945, -2.356194496154785, -2.361658811569214, -2.367182970046997, -2.372767448425293, -2.378412961959839, -2.384120225906372, -2.3898894786834717, -2.395721912384033, -2.4016177654266357, -2.4075777530670166, -2.413602590560913, -2.4196927547454834, -2.425848960876465, -2.4320719242095947, -2.4383621215820312, -2.4447197914123535, -2.451146125793457, -2.457641363143921, -2.4642062187194824, -2.4708411693573, -2.477546453475952, -2.484323024749756, -2.49117112159729, -2.498091459274292, -2.50508451461792, -2.512150287628174, -2.51928973197937, -2.526503086090088, -2.5337905883789062, -2.5411529541015625, -2.5485901832580566, -2.5561025142669678, -2.563690662384033, -2.571354627609253, -2.579094648361206, -2.5869109630584717, -2.594803810119629, -2.6027731895446777, -2.610819101333618, -2.6189417839050293, -2.627141237258911, -2.6354174613952637, -2.643770217895508, -2.6521997451782227, -2.660705327987671, -2.6692872047424316, -2.677945137023926, -2.686678409576416, -2.6954870223999023, -2.7043704986572266, -2.7133285999298096, -2.722360372543335, -2.7314653396606445, -2.74064302444458, -2.7498927116394043, -2.75921368598938, -2.7686049938201904, -2.7780656814575195, -2.787595272064209, -2.797192335128784, -2.8068559169769287, -2.816584825515747, -2.8263778686523438, -2.8362340927124023, -2.846151828765869, -2.8561298847198486, -2.866166591644287, -2.87626051902771, -2.8864102363586426, -2.8966140747070312, -2.906870126724243, -2.9171767234802246, -2.9275319576263428, -2.937934160232544, -2.948381185531616, -2.9588711261749268, -2.9694018363952637, -2.979971408843994, -2.990577220916748, -3.0012176036834717, -3.011890172958374, -3.022592306137085, -3.0333220958709717, -3.044076919555664, -3.054854393005371, -3.0656521320343018, -3.076467514038086, -3.0872981548309326, -3.098141670227051, -3.1089954376220703, -3.119856834411621, -3.130723476409912, 3.1415927410125732, 3.1306040287017822, 3.1196181774139404, 3.108637571334839, 3.0976648330688477, 3.086702823638916, 3.075753927230835, 3.0648207664489746, 3.053905963897705, 3.0430121421813965, 3.03214168548584, 3.0212972164154053, 3.010481119155884, 2.9996955394744873, 2.988943338394165, 2.97822642326355, 2.9675474166870117, 2.9569082260131836, 2.9463112354278564, 2.935758590698242, 2.9252519607543945, 2.9147937297821045, 2.904385805130005, 2.8940300941467285, 2.88372802734375, 2.8734819889068604, 2.863292932510376, 2.853163003921509, 2.8430936336517334, 2.8330862522125244, 2.8231425285339355, 2.813263177871704, 2.803450107574463, 2.7937042713165283, 2.784026861190796, 2.774418830871582, 2.7648813724517822, 2.755415201187134, 2.7460215091705322, 2.7367007732391357, 2.72745418548584, 2.7182819843292236, 2.7091848850250244, 2.7001636028289795, 2.691218614578247, 2.6823503971099854, 2.6735591888427734, 2.6648454666137695, 2.6562092304229736, 2.647651195526123, 2.6391713619232178, 2.630769729614258, 2.6224465370178223, 2.614201784133911, 2.6060352325439453, 2.597947359085083, 2.589937686920166, 2.5820062160491943, 2.574152708053589, 2.5663771629333496, 2.5586791038513184, 2.551058292388916, 2.5435147285461426, 2.53604793548584, 2.5286576747894287, 2.521343231201172, 2.5141043663024902, 2.5069408416748047, 2.499852180480957, 2.49283766746521, 2.4858970642089844, 2.479029655456543, 2.4722352027893066, 2.465512990951538, 2.458862543106079, 2.4522831439971924, 2.445774555206299, 2.439335823059082, 2.432966470718384, 2.426665782928467, 2.420433521270752, 2.414268732070923, 2.408170700073242, 2.402139186859131, 2.3961732387542725, 2.3902721405029297, 2.3844356536865234, 2.378662586212158, 2.372952699661255, 2.367305040359497, 2.3617193698883057, 2.356194496154785, 2.3507301807403564, 2.345325469970703, 2.339979648590088, 2.3346924781799316, 2.329463005065918, 2.3242905139923096, 2.319174289703369, 2.3141140937805176, 2.3091089725494385, 2.3041582107543945, 2.2992613315582275, 2.2944176197052, 2.289626359939575, 2.2848870754241943, 2.2801990509033203, 2.275561571121216, 2.2709741592407227, 2.2664363384246826, 2.2619471549987793, 2.2575061321258545, 2.25311279296875, 2.2487664222717285, 2.244466543197632, 2.2402124404907227, 2.2360036373138428, 2.231839418411255, 2.22771954536438, 2.2236430644989014, 2.219609498977661, 2.215618371963501, 2.2116692066192627, 2.207761526107788, 2.20389461517334, 2.200068235397339, 2.1962814331054688, 2.1925339698791504, -2.1888251304626465, -2.1925339698791504, -2.1962814331054688, -2.200068235397339, -2.20389461517334, -2.207761526107788, -2.2116692066192627, -2.215618371963501, -2.219609498977661, -2.2236430644989014, -2.22771954536438, -2.231839418411255, -2.2360036373138428, -2.2402124404907227, -2.244466543197632, -2.2487664222717285, -2.25311279296875, -2.2575061321258545, -2.2619471549987793, -2.2664363384246826, -2.2709741592407227, -2.275561571121216, -2.2801990509033203, -2.2848870754241943, -2.289626359939575, -2.2944176197052, -2.2992613315582275, -2.3041582107543945, -2.3091089725494385, -2.3141140937805176, -2.319174289703369, -2.3242905139923096, -2.329463005065918, -2.3346924781799316, -2.339979648590088, -2.345325469970703, -2.3507301807403564, -2.356194496154785, -2.3617193698883057, -2.367305040359497, -2.372952699661255, -2.378662586212158, -2.3844356536865234, -2.3902721405029297, -2.3961732387542725, -2.402139186859131, -2.408170700073242, -2.414268732070923, -2.420433521270752, -2.426665782928467, -2.432966470718384, -2.439335823059082, -2.445774555206299, -2.4522831439971924, -2.458862543106079, -2.465512990951538, -2.4722352027893066, -2.479029655456543, -2.4858970642089844, -2.49283766746521, -2.499852180480957, -2.5069408416748047, -2.5141043663024902, -2.521343231201172, -2.5286576747894287, -2.53604793548584, -2.5435147285461426, -2.551058292388916, -2.5586791038513184, -2.5663771629333496, -2.574152708053589, -2.5820062160491943, -2.589937686920166, -2.597947359085083, -2.6060352325439453, -2.614201784133911, -2.6224465370178223, -2.630769729614258, -2.6391713619232178, -2.647651195526123, -2.6562092304229736, -2.6648454666137695, -2.6735591888427734, -2.6823503971099854, -2.691218614578247, -2.7001636028289795, -2.7091848850250244, -2.7182819843292236, -2.72745418548584, -2.7367007732391357, -2.7460215091705322, -2.755415201187134, -2.7648813724517822, -2.774418830871582, -2.784026861190796, -2.7937042713165283, -2.803450107574463, -2.813263177871704, -2.8231425285339355, -2.8330862522125244, -2.8430936336517334, -2.853163003921509, -2.863292932510376, -2.8734819889068604, -2.88372802734375, -2.8940300941467285, -2.904385805130005, -2.9147937297821045, -2.9252519607543945, -2.935758590698242, -2.9463112354278564, -2.9569082260131836, -2.9675474166870117, -2.97822642326355, -2.988943338394165, -2.9996955394744873, -3.010481119155884, -3.0212972164154053, -3.03214168548584, -3.0430121421813965, -3.053905963897705, -3.0648207664489746, -3.075753927230835, -3.086702823638916, -3.0976648330688477, -3.108637571334839, -3.1196181774139404, -3.1306040287017822, 3.1415927410125732, 3.1304819583892822, 3.1193740367889404, 3.108271598815918, 3.097177505493164, 3.0860941410064697, 3.0750246047973633, 3.0639710426330566, 3.0529367923736572, 3.041923999786377, 3.030935525894165, 3.0199735164642334, 3.0090410709381104, 2.998140335083008, 2.987273931503296, 2.9764440059661865, 2.9656529426574707, 2.9549033641815186, 2.944197177886963, 2.9335365295410156, 2.9229238033294678, 2.912360668182373, 2.9018495082855225, 2.8913919925689697, 2.8809902667999268, 2.870645761489868, 2.8603603839874268, 2.8501358032226562, 2.8399736881256104, 2.8298752307891846, 2.8198421001434326, 2.809875726699829, 2.7999770641326904, 2.7901477813720703, 2.780388832092285, 2.7707014083862305, 2.7610862255096436, 2.75154447555542, 2.742077112197876, 2.732684850692749, 2.7233684062957764, 2.714128255844116, 2.704965591430664, 2.69588041305542, 2.686873435974121, 2.677945137023926, 2.669095754623413, 2.660325765609741, 2.6516354084014893, 2.6430246829986572, 2.6344940662384033, 2.6260435581207275, 2.617673397064209, 2.6093831062316895, 2.601173162460327, 2.593043327331543, 2.584993362426758, 2.5770232677459717, 2.5691328048706055, 2.561321973800659, 2.5535900592803955, 2.5459370613098145, 2.538362741470337, 2.5308666229248047, 2.5234484672546387, 2.5161075592041016, 2.5088438987731934, 2.5016565322875977, 2.4945454597473145, 2.4875099658966064, 2.4805495738983154, 2.473663568496704, 2.4668517112731934, 2.460113286972046, 2.4534475803375244, 2.44685435295105, 2.4403326511383057, 2.433882236480713, 2.427501916885376, 2.421191453933716, 2.414950370788574, 2.4087774753570557, 2.402672529220581, 2.396634817123413, 2.3906636238098145, 2.384758234024048, 2.378917932510376, 2.3731420040130615, 2.3674299716949463, 2.361781120300293, 2.356194496154785, 2.3506696224212646, 2.3452060222625732, 2.3398025035858154, 2.334458827972412, 2.329174041748047, 2.3239476680755615, 2.3187787532806396, 2.313667058944702, 2.3086113929748535, 2.3036115169525146, 2.298666477203369, 2.293775796890259, 2.288938522338867, 2.2841544151306152, 2.2794225215911865, 2.274742364883423, 2.270113229751587, 2.2655346393585205, 2.2610056400299072, 2.256525754928589, 2.2520945072174072, 2.247711181640625, 2.243375062942505, 2.2390856742858887, 2.234842538833618, 2.230644702911377, 2.226491928100586, 2.222383499145508, 2.2183189392089844, 2.2142975330352783, 2.2103185653686523, 2.2063820362091064, 2.202486991882324, 2.1986329555511475, 2.194819450378418, 2.1910457611083984, 2.1873116493225098, -2.1836166381835938, -2.1873116493225098, -2.1910457611083984, -2.194819450378418, -2.1986329555511475, -2.202486991882324, -2.2063820362091064, -2.2103185653686523, -2.2142975330352783, -2.2183189392089844, -2.222383499145508, -2.226491928100586, -2.230644702911377, -2.234842538833618, -2.2390856742858887, -2.243375062942505, -2.247711181640625, -2.2520945072174072, -2.256525754928589, -2.2610056400299072, -2.2655346393585205, -2.270113229751587, -2.274742364883423, -2.2794225215911865, -2.2841544151306152, -2.288938522338867, -2.293775796890259, -2.298666477203369, -2.3036115169525146, -2.3086113929748535, -2.313667058944702, -2.3187787532806396, -2.3239476680755615, -2.329174041748047, -2.334458827972412, -2.3398025035858154, -2.3452060222625732, -2.3506696224212646, -2.356194496154785, -2.361781120300293, -2.3674299716949463, -2.3731420040130615, -2.378917932510376, -2.384758234024048, -2.3906636238098145, -2.396634817123413, -2.402672529220581, -2.4087774753570557, -2.414950370788574, -2.421191453933716, -2.427501916885376, -2.433882236480713, -2.4403326511383057, -2.44685435295105, -2.4534475803375244, -2.460113286972046, -2.4668517112731934, -2.473663568496704, -2.4805495738983154, -2.4875099658966064, -2.4945454597473145, -2.5016565322875977, -2.5088438987731934, -2.5161075592041016, -2.5234484672546387, -2.5308666229248047, -2.538362741470337, -2.5459370613098145, -2.5535900592803955, -2.561321973800659, -2.5691328048706055, -2.5770232677459717, -2.584993362426758, -2.593043327331543, -2.601173162460327, -2.6093831062316895, -2.617673397064209, -2.6260435581207275, -2.6344940662384033, -2.6430246829986572, -2.6516354084014893, -2.660325765609741, -2.669095754623413, -2.677945137023926, -2.686873435974121, -2.69588041305542, -2.704965591430664, -2.714128255844116, -2.7233684062957764, -2.732684850692749, -2.742077112197876, -2.75154447555542, -2.7610862255096436, -2.7707014083862305, -2.780388832092285, -2.7901477813720703, -2.7999770641326904, -2.809875726699829, -2.8198421001434326, -2.8298752307891846, -2.8399736881256104, -2.8501358032226562, -2.8603603839874268, -2.870645761489868, -2.8809902667999268, -2.8913919925689697, -2.9018495082855225, -2.912360668182373, -2.9229238033294678, -2.9335365295410156, -2.944197177886963, -2.9549033641815186, -2.9656529426574707, -2.9764440059661865, -2.987273931503296, -2.998140335083008, -3.0090410709381104, -3.0199735164642334, -3.030935525894165, -3.041923999786377, -3.0529367923736572, -3.0639710426330566, -3.0750246047973633, -3.0860941410064697, -3.097177505493164, -3.108271598815918, -3.1193740367889404, -3.1304819583892822, 3.1415927410125732, 3.130357265472412, 3.119124412536621, 3.1078975200653076, 3.0966789722442627, 3.0854718685150146, 3.0742788314819336, 3.0631024837493896, 3.051945924758911, 3.040811538696289, 3.0297024250030518, 3.018620729446411, 3.0075695514678955, 2.996551036834717, 2.985567808151245, 2.9746224880218506, 2.963717460632324, 2.952854871749878, 2.942037343978882, 2.9312667846679688, 2.9205455780029297, 2.9098758697509766, 2.899259567260742, 2.8886985778808594, 2.87819504737854, 2.867750644683838, 2.8573670387268066, 2.847046375274658, 2.836789608001709, 2.826598644256592, 2.8164751529693604, 2.806420087814331, 2.7964351177215576, 2.7865211963653564, 2.776679515838623, 2.766911506652832, 2.7572178840637207, 2.7475996017456055, 2.7380576133728027, 2.728592872619629, 2.7192060947418213, 2.709897518157959, 2.7006683349609375, 2.691518783569336, 2.6824495792388916, 2.6734607219696045, 2.664552927017212, 2.655726432800293, 2.6469814777374268, 2.6383183002471924, 2.62973690032959, 2.621237277984619, 2.6128199100494385, 2.6044843196868896, 2.5962307453155518, 2.588059186935425, 2.5799691677093506, 2.571960687637329, 2.5640335083007812, 2.556187391281128, 2.54842209815979, 2.5407373905181885, 2.533132553100586, 2.5256075859069824, 2.5181617736816406, 2.5107951164245605, 2.503506660461426, 2.4962961673736572, 2.4891631603240967, 2.482107162475586, 2.4751274585723877, 2.4682235717773438, 2.461394786834717, 2.4546406269073486, 2.447960615158081, 2.4413537979125977, 2.4348199367523193, 2.4283580780029297, 2.4219677448272705, 2.4156482219696045, 2.4093985557556152, 2.4032185077667236, 2.3971073627471924, 2.391064167022705, 2.3850882053375244, 2.379179000854492, 2.373335599899292, 2.3675575256347656, 2.361844062805176, 2.356194496154785, 2.3506078720092773, 2.3450839519500732, 2.3396213054656982, 2.3342199325561523, 2.328878879547119, 2.3235974311828613, 2.3183746337890625, 2.3132102489471436, 2.308103322982788, 2.303053140640259, 2.2980589866638184, 2.2931203842163086, 2.288236379623413, 2.2834067344665527, 2.278630256652832, 2.2739064693450928, 2.2692348957061768, 2.2646145820617676, 2.260045289993286, 2.255525827407837, 2.251055955886841, 2.2466349601745605, 2.242262125015259, 2.2379369735717773, 2.233658790588379, 2.229426860809326, 2.22524094581604, 2.221100091934204, 2.21700382232666, 2.21295166015625, 2.2089426517486572, 2.204976797103882, 2.2010531425476074, 2.197171211242676, 2.193330764770508, 2.189530611038208, 2.1857707500457764, 2.1820504665374756, -2.1783692836761475, -2.1820504665374756, -2.1857707500457764, -2.189530611038208, -2.193330764770508, -2.197171211242676, -2.2010531425476074, -2.204976797103882, -2.2089426517486572, -2.21295166015625, -2.21700382232666, -2.221100091934204, -2.22524094581604, -2.229426860809326, -2.233658790588379, -2.2379369735717773, -2.242262125015259, -2.2466349601745605, -2.251055955886841, -2.255525827407837, -2.260045289993286, -2.2646145820617676, -2.2692348957061768, -2.2739064693450928, -2.278630256652832, -2.2834067344665527, -2.288236379623413, -2.2931203842163086, -2.2980589866638184, -2.303053140640259, -2.308103322982788, -2.3132102489471436, -2.3183746337890625, -2.3235974311828613, -2.328878879547119, -2.3342199325561523, -2.3396213054656982, -2.3450839519500732, -2.3506078720092773, -2.356194496154785, -2.361844062805176, -2.3675575256347656, -2.373335599899292, -2.379179000854492, -2.3850882053375244, -2.391064167022705, -2.3971073627471924, -2.4032185077667236, -2.4093985557556152, -2.4156482219696045, -2.4219677448272705, -2.4283580780029297, -2.4348199367523193, -2.4413537979125977, -2.447960615158081, -2.4546406269073486, -2.461394786834717, -2.4682235717773438, -2.4751274585723877, -2.482107162475586, -2.4891631603240967, -2.4962961673736572, -2.503506660461426, -2.5107951164245605, -2.5181617736816406, -2.5256075859069824, -2.533132553100586, -2.5407373905181885, -2.54842209815979, -2.556187391281128, -2.5640335083007812, -2.571960687637329, -2.5799691677093506, -2.588059186935425, -2.5962307453155518, -2.6044843196868896, -2.6128199100494385, -2.621237277984619, -2.62973690032959, -2.6383183002471924, -2.6469814777374268, -2.655726432800293, -2.664552927017212, -2.6734607219696045, -2.6824495792388916, -2.691518783569336, -2.7006683349609375, -2.709897518157959, -2.7192060947418213, -2.728592872619629, -2.7380576133728027, -2.7475996017456055, -2.7572178840637207, -2.766911506652832, -2.776679515838623, -2.7865211963653564, -2.7964351177215576, -2.806420087814331, -2.8164751529693604, -2.826598644256592, -2.836789608001709, -2.847046375274658, -2.8573670387268066, -2.867750644683838, -2.87819504737854, -2.8886985778808594, -2.899259567260742, -2.9098758697509766, -2.9205455780029297, -2.9312667846679688, -2.942037343978882, -2.952854871749878, -2.963717460632324, -2.9746224880218506, -2.985567808151245, -2.996551036834717, -3.0075695514678955, -3.018620729446411, -3.0297024250030518, -3.040811538696289, -3.051945924758911, -3.0631024837493896, -3.0742788314819336, -3.0854718685150146, -3.0966789722442627, -3.1078975200653076, -3.119124412536621, -3.130357265472412, 3.1415927410125732, 3.1302294731140137, 3.1188693046569824, 3.1075148582458496, 3.0961694717407227, 3.0848355293273926, 3.0735161304473877, 3.0622143745422363, 3.0509328842163086, 3.0396742820739746, 3.0284416675567627, 3.017237663269043, 3.0060648918151855, 2.9949262142181396, 2.9838240146636963, 2.9727606773376465, 2.9617390632629395, 2.950761556625366, 2.9398303031921387, 2.928947687149048, 2.9181160926818848, 2.9073374271392822, 2.8966140747070312, 2.8859477043151855, 2.875340700149536, 2.8647944927215576, 2.854311227798462, 2.8438923358917236, 2.8335399627685547, 2.8232550621032715, 2.813039541244507, 2.8028945922851562, 2.7928216457366943, 2.7828218936920166, 2.7728967666625977, 2.763046979904175, 2.7532739639282227, 2.7435784339904785, 2.7339611053466797, 2.7244231700897217, 2.7149651050567627, 2.705587863922119, 2.69629168510437, 2.687077283859253, 2.677945137023926, 2.6688954830169678, 2.659929037094116, 2.651045799255371, 2.6422460079193115, 2.6335299015045166, 2.6248974800109863, 2.6163489818573, 2.607884407043457, 2.599503755569458, 2.5912067890167236, 2.582993268966675, 2.5748634338378906, 2.566816806793213, 2.5588531494140625, 2.5509722232818604, 2.5431737899780273, 2.5354573726654053, 2.527822494506836, 2.5202691555023193, 2.512796401977539, 2.505403995513916, 2.498091459274292, 2.490858316421509, 2.483704090118408, 2.476627826690674, 2.4696295261383057, 2.462707996368408, 2.4558632373809814, 2.44909405708313, 2.4423999786376953, 2.4357805252075195, 2.4292349815368652, 2.422762632369995, 2.416362762451172, 2.410034656524658, 2.403777599334717, 2.3975908756256104, 2.3914740085601807, 2.3854260444641113, 2.379446029663086, 2.3735337257385254, 2.3676881790161133, 2.3619086742401123, 2.356194496154785, 2.3505449295043945, 2.344959020614624, 2.3394362926483154, 2.3339760303497314, 2.3285772800445557, 2.323239326477051, 2.3179616928100586, 2.312743663787842, 2.307584047317505, 2.302482843399048, 2.297438621520996, 2.2924511432647705, 2.287519693374634, 2.2826433181762695, 2.2778213024139404, 2.2730531692504883, 2.268338441848755, 2.2636759281158447, 2.2590651512145996, 2.2545056343078613, 2.2499966621398926, 2.245537281036377, 2.2411272525787354, 2.2367656230926514, 2.232451915740967, 2.2281854152679443, 2.223965644836426, 2.219791889190674, 2.2156636714935303, 2.2115800380706787, 2.20754075050354, 2.203545093536377, 2.1995925903320312, 2.1956825256347656, 2.191814422607422, 2.187987804412842, 2.184201717376709, 2.1804561614990234, 2.176750421524048, -2.173083782196045, -2.176750421524048, -2.1804561614990234, -2.184201717376709, -2.187987804412842, -2.191814422607422, -2.1956825256347656, -2.1995925903320312, -2.203545093536377, -2.20754075050354, -2.2115800380706787, -2.2156636714935303, -2.219791889190674, -2.223965644836426, -2.2281854152679443, -2.232451915740967, -2.2367656230926514, -2.2411272525787354, -2.245537281036377, -2.2499966621398926, -2.2545056343078613, -2.2590651512145996, -2.2636759281158447, -2.268338441848755, -2.2730531692504883, -2.2778213024139404, -2.2826433181762695, -2.287519693374634, -2.2924511432647705, -2.297438621520996, -2.302482843399048, -2.307584047317505, -2.312743663787842, -2.3179616928100586, -2.323239326477051, -2.3285772800445557, -2.3339760303497314, -2.3394362926483154, -2.344959020614624, -2.3505449295043945, -2.356194496154785, -2.3619086742401123, -2.3676881790161133, -2.3735337257385254, -2.379446029663086, -2.3854260444641113, -2.3914740085601807, -2.3975908756256104, -2.403777599334717, -2.410034656524658, -2.416362762451172, -2.422762632369995, -2.4292349815368652, -2.4357805252075195, -2.4423999786376953, -2.44909405708313, -2.4558632373809814, -2.462707996368408, -2.4696295261383057, -2.476627826690674, -2.483704090118408, -2.490858316421509, -2.498091459274292, -2.505403995513916, -2.512796401977539, -2.5202691555023193, -2.527822494506836, -2.5354573726654053, -2.5431737899780273, -2.5509722232818604, -2.5588531494140625, -2.566816806793213, -2.5748634338378906, -2.582993268966675, -2.5912067890167236, -2.599503755569458, -2.607884407043457, -2.6163489818573, -2.6248974800109863, -2.6335299015045166, -2.6422460079193115, -2.651045799255371, -2.659929037094116, -2.6688954830169678, -2.677945137023926, -2.687077283859253, -2.69629168510437, -2.705587863922119, -2.7149651050567627, -2.7244231700897217, -2.7339611053466797, -2.7435784339904785, -2.7532739639282227, -2.763046979904175, -2.7728967666625977, -2.7828218936920166, -2.7928216457366943, -2.8028945922851562, -2.813039541244507, -2.8232550621032715, -2.8335399627685547, -2.8438923358917236, -2.854311227798462, -2.8647944927215576, -2.875340700149536, -2.8859477043151855, -2.8966140747070312, -2.9073374271392822, -2.9181160926818848, -2.928947687149048, -2.9398303031921387, -2.950761556625366, -2.9617390632629395, -2.9727606773376465, -2.9838240146636963, -2.9949262142181396, -3.0060648918151855, -3.017237663269043, -3.0284416675567627, -3.0396742820739746, -3.0509328842163086, -3.0622143745422363, -3.0735161304473877, -3.0848355293273926, -3.0961694717407227, -3.1075148582458496, -3.1188693046569824, -3.1302294731140137, 3.1415927410125732, 3.130098819732666, 3.118608236312866, 3.107123613357544, 3.0956480503082275, 3.0841846466064453, 3.0727362632751465, 3.0613057613372803, 3.049896478652954, 3.038511037826538, 3.0271522998809814, 3.0158231258392334, 3.004526376724243, 2.99326491355896, 2.9820408821105957, 2.9708573818206787, 2.959716796875, 2.9486217498779297, 2.937574625015259, 2.9265778064727783, 2.9156334400177, 2.9047439098358154, 2.893911361694336, 2.8831377029418945, 2.872425079345703, 2.8617756366729736, 2.8511908054351807, 2.840672492980957, 2.8302223682403564, 2.8198421001434326, 2.80953311920166, 2.7992970943450928, 2.789134979248047, 2.779048442840576, 2.769038438796997, 2.759106159210205, 2.7492525577545166, 2.739478588104248, 2.729785442352295, 2.7201733589172363, 2.710643768310547, 2.7011966705322266, 2.691833019256592, 2.682553291320801, 2.6733579635620117, 2.6642472743988037, 2.655221700668335, 2.6462814807891846, 2.6374266147613525, 2.628657579421997, 2.619974374771118, 2.6113767623901367, 2.602865219116211, 2.5944392681121826, 2.5860989093780518, 2.5778441429138184, 2.569674491882324, 2.5615899562835693, 2.5535900592803955, 2.5456745624542236, 2.5378432273864746, 2.5300955772399902, 2.5224313735961914, 2.5148496627807617, 2.507350444793701, 2.4999332427978516, 2.4925971031188965, 2.485341787338257, 2.4781665802001953, 2.4710710048675537, 2.464054584503174, 2.4571163654327393, 2.4502556324005127, 2.443472146987915, 2.43676495552063, 2.430133581161499, 2.423577070236206, 2.4170947074890137, 2.4106860160827637, 2.4043500423431396, 2.3980860710144043, 2.3918936252593994, 2.3857717514038086, 2.3797194957733154, 2.373736619949341, 2.3678219318389893, 2.3619747161865234, 2.356194496154785, 2.350480318069458, 2.3448312282562256, 2.339246988296509, 2.333726406097412, 2.3282687664031982, 2.322873592376709, 2.317539691925049, 2.3122668266296387, 2.307053804397583, 2.3019001483917236, 2.296804904937744, 2.2917675971984863, 2.286787509918213, 2.2818636894226074, 2.2769954204559326, 2.2721822261810303, 2.267423152923584, 2.2627177238464355, 2.2580649852752686, 2.253464698791504, 2.248915672302246, 2.244417428970337, 2.239969491958618, 2.2355709075927734, 2.2312209606170654, 2.226919412612915, 2.222665548324585, 2.218458414077759, 2.2142975330352783, 2.2101821899414062, 2.2061121463775635, 2.2020864486694336, 2.1981046199798584, 2.1941659450531006, 2.190269947052002, 2.1864161491394043, 2.1826040744781494, 2.178832769393921, 2.1751017570495605, 2.1714107990264893, -2.1677591800689697, -2.1714107990264893, -2.1751017570495605, -2.178832769393921, -2.1826040744781494, -2.1864161491394043, -2.190269947052002, -2.1941659450531006, -2.1981046199798584, -2.2020864486694336, -2.2061121463775635, -2.2101821899414062, -2.2142975330352783, -2.218458414077759, -2.222665548324585, -2.226919412612915, -2.2312209606170654, -2.2355709075927734, -2.239969491958618, -2.244417428970337, -2.248915672302246, -2.253464698791504, -2.2580649852752686, -2.2627177238464355, -2.267423152923584, -2.2721822261810303, -2.2769954204559326, -2.2818636894226074, -2.286787509918213, -2.2917675971984863, -2.296804904937744, -2.3019001483917236, -2.307053804397583, -2.3122668266296387, -2.317539691925049, -2.322873592376709, -2.3282687664031982, -2.333726406097412, -2.339246988296509, -2.3448312282562256, -2.350480318069458, -2.356194496154785, -2.3619747161865234, -2.3678219318389893, -2.373736619949341, -2.3797194957733154, -2.3857717514038086, -2.3918936252593994, -2.3980860710144043, -2.4043500423431396, -2.4106860160827637, -2.4170947074890137, -2.423577070236206, -2.430133581161499, -2.43676495552063, -2.443472146987915, -2.4502556324005127, -2.4571163654327393, -2.464054584503174, -2.4710710048675537, -2.4781665802001953, -2.485341787338257, -2.4925971031188965, -2.4999332427978516, -2.507350444793701, -2.5148496627807617, -2.5224313735961914, -2.5300955772399902, -2.5378432273864746, -2.5456745624542236, -2.5535900592803955, -2.5615899562835693, -2.569674491882324, -2.5778441429138184, -2.5860989093780518, -2.5944392681121826, -2.602865219116211, -2.6113767623901367, -2.619974374771118, -2.628657579421997, -2.6374266147613525, -2.6462814807891846, -2.655221700668335, -2.6642472743988037, -2.6733579635620117, -2.682553291320801, -2.691833019256592, -2.7011966705322266, -2.710643768310547, -2.7201733589172363, -2.729785442352295, -2.739478588104248, -2.7492525577545166, -2.759106159210205, -2.769038438796997, -2.779048442840576, -2.789134979248047, -2.7992970943450928, -2.80953311920166, -2.8198421001434326, -2.8302223682403564, -2.840672492980957, -2.8511908054351807, -2.8617756366729736, -2.872425079345703, -2.8831377029418945, -2.893911361694336, -2.9047439098358154, -2.9156334400177, -2.9265778064727783, -2.937574625015259, -2.9486217498779297, -2.959716796875, -2.9708573818206787, -2.9820408821105957, -2.99326491355896, -3.004526376724243, -3.0158231258392334, -3.0271522998809814, -3.038511037826538, -3.049896478652954, -3.0613057613372803, -3.0727362632751465, -3.0841846466064453, -3.0956480503082275, -3.107123613357544, -3.118608236312866, -3.130098819732666, 3.1415927410125732, 3.129965305328369, 3.1183409690856934, 3.1067230701446533, 3.0951144695281982, 3.0835185050964355, 3.0719380378723145, 3.0603764057159424, 3.0488362312316895, 3.037321090698242, 3.0258333683013916, 3.014376401901245, 3.002952814102173, 2.991565704345703, 2.980217456817627, 2.9689111709594727, 2.9576492309570312, 2.946434259414673, 2.9352686405181885, 2.9241552352905273, 2.9130959510803223, 2.9020934104919434, 2.8911495208740234, 2.8802666664123535, 2.8694467544555664, 2.858691692352295, 2.848003625869751, 2.8373842239379883, 2.8268349170684814, 2.8163578510284424, 2.8059542179107666, 2.7956254482269287, 2.7853729724884033, 2.775198221206665, 2.7651023864746094, 2.7550864219665527, 2.7451512813568115, 2.7352983951568604, 2.7255282402038574, 2.71584153175354, 2.7062394618988037, 2.6967222690582275, 2.687290668487549, 2.677945137023926, 2.6686861515045166, 2.6595139503479004, 2.6504290103912354, 2.6414315700531006, 2.632521867752075, 2.62369966506958, 2.6149654388427734, 2.606318950653076, 2.5977602005004883, 2.5892891883850098, 2.5809056758880615, 2.5726094245910645, 2.5644004344940186, 2.5562782287597656, 2.5482425689697266, 2.540292978286743, 2.5324292182922363, 2.524650812149048, 2.5169572830200195, 2.509348154067993, 2.5018229484558105, 2.4943809509277344, 2.4870219230651855, 2.4797449111938477, 2.4725496768951416, 2.465435266494751, 2.4584012031555176, 2.451446771621704, 2.4445712566375732, 2.4377739429473877, 2.4310543537139893, 2.4244115352630615, 2.417844772338867, 2.41135311126709, 2.4049363136291504, 2.3985934257507324, 2.3923232555389404, 2.3861255645751953, 2.3799993991851807, 2.373944044113159, 2.3679585456848145, 2.3620424270629883, 2.356194496154785, 2.350414276123047, 2.344700813293457, 2.3390533924102783, 2.3334710597991943, 2.327953338623047, 2.3224992752075195, 2.317108154296875, 2.311779260635376, 2.306511640548706, 2.301304578781128, 2.2961573600769043, 2.291069269180298, 2.2860395908355713, 2.281067371368408, 2.2761518955230713, 2.2712926864624023, 2.266488790512085, 2.261739492416382, 2.2570443153381348, 2.2524020671844482, 2.247812509536743, 2.2432749271392822, 2.23878812789917, 2.2343521118164062, 2.2299656867980957, 2.22562837600708, 2.221339464187622, 2.2170984745025635, 2.212904691696167, 2.2087574005126953, 2.204655885696411, 2.2005996704101562, 2.1965880393981934, 2.1926205158233643, 2.1886966228485107, 2.1848154067993164, 2.180976390838623, 2.1771790981292725, 2.1734230518341064, 2.1697075366973877, 2.166032075881958, -2.16239595413208, -2.166032075881958, -2.1697075366973877, -2.1734230518341064, -2.1771790981292725, -2.180976390838623, -2.1848154067993164, -2.1886966228485107, -2.1926205158233643, -2.1965880393981934, -2.2005996704101562, -2.204655885696411, -2.2087574005126953, -2.212904691696167, -2.2170984745025635, -2.221339464187622, -2.22562837600708, -2.2299656867980957, -2.2343521118164062, -2.23878812789917, -2.2432749271392822, -2.247812509536743, -2.2524020671844482, -2.2570443153381348, -2.261739492416382, -2.266488790512085, -2.2712926864624023, -2.2761518955230713, -2.281067371368408, -2.2860395908355713, -2.291069269180298, -2.2961573600769043, -2.301304578781128, -2.306511640548706, -2.311779260635376, -2.317108154296875, -2.3224992752075195, -2.327953338623047, -2.3334710597991943, -2.3390533924102783, -2.344700813293457, -2.350414276123047, -2.356194496154785, -2.3620424270629883, -2.3679585456848145, -2.373944044113159, -2.3799993991851807, -2.3861255645751953, -2.3923232555389404, -2.3985934257507324, -2.4049363136291504, -2.41135311126709, -2.417844772338867, -2.4244115352630615, -2.4310543537139893, -2.4377739429473877, -2.4445712566375732, -2.451446771621704, -2.4584012031555176, -2.465435266494751, -2.4725496768951416, -2.4797449111938477, -2.4870219230651855, -2.4943809509277344, -2.5018229484558105, -2.509348154067993, -2.5169572830200195, -2.524650812149048, -2.5324292182922363, -2.540292978286743, -2.5482425689697266, -2.5562782287597656, -2.5644004344940186, -2.5726094245910645, -2.5809056758880615, -2.5892891883850098, -2.5977602005004883, -2.606318950653076, -2.6149654388427734, -2.62369966506958, -2.632521867752075, -2.6414315700531006, -2.6504290103912354, -2.6595139503479004, -2.6686861515045166, -2.677945137023926, -2.687290668487549, -2.6967222690582275, -2.7062394618988037, -2.71584153175354, -2.7255282402038574, -2.7352983951568604, -2.7451512813568115, -2.7550864219665527, -2.7651023864746094, -2.775198221206665, -2.7853729724884033, -2.7956254482269287, -2.8059542179107666, -2.8163578510284424, -2.8268349170684814, -2.8373842239379883, -2.848003625869751, -2.858691692352295, -2.8694467544555664, -2.8802666664123535, -2.8911495208740234, -2.9020934104919434, -2.9130959510803223, -2.9241552352905273, -2.9352686405181885, -2.946434259414673, -2.9576492309570312, -2.9689111709594727, -2.980217456817627, -2.991565704345703, -3.002952814102173, -3.014376401901245, -3.0258333683013916, -3.037321090698242, -3.0488362312316895, -3.0603764057159424, -3.0719380378723145, -3.0835185050964355, -3.0951144695281982, -3.1067230701446533, -3.1183409690856934, -3.129965305328369, 3.1415927410125732, 3.129828453063965, 3.118067502975464, 3.1063132286071777, 3.0945684909820557, 3.082836866378784, 3.0711212158203125, 3.059425115585327, 3.0477514266967773, 3.0361032485961914, 3.0244839191436768, 3.0128960609436035, 3.001343011856079, 2.9898273944854736, 2.9783523082733154, 2.9669203758239746, 2.9555344581604004, 2.944197177886963, 2.932910919189453, 2.921678304672241, 2.9105019569396973, 2.899384021759033, 2.88832688331604, 2.8773326873779297, 2.866403341293335, 2.855541229248047, 2.844748020172119, 2.8340256214141846, 2.823375701904297, 2.8127999305725098, 2.802299976348877, 2.791877269744873, 2.7815332412719727, 2.7712693214416504, 2.7610862255096436, 2.750985622406006, 2.7409682273864746, 2.7310352325439453, 2.7211873531341553, 2.711425304412842, 2.7017500400543213, 2.692162036895752, 2.682662010192871, 2.673250198364258, 2.6639273166656494, 2.654693365097046, 2.6455490589141846, 2.6364941596984863, 2.6275291442871094, 2.6186537742614746, 2.6098685264587402, 2.601173162460327, 2.5925674438476562, 2.5840516090393066, 2.575624942779541, 2.5672879219055176, 2.55903959274292, 2.550879955291748, 2.542808771133423, 2.534825563430786, 2.5269296169281006, 2.519120931625366, 2.5113987922668457, 2.5037624835968018, 2.4962117671966553, 2.488745927810669, 2.4813644886016846, 2.4740664958953857, 2.4668517112731934, 2.459719181060791, 2.4526681900024414, 2.4456982612609863, 2.4388086795806885, 2.4319982528686523, 2.425266742706299, 2.4186131954193115, 2.412036895751953, 2.4055371284484863, 2.3991129398345947, 2.392763614654541, 2.386488199234009, 2.38028621673584, 2.3741567134857178, 2.368098735809326, 2.3621115684509277, 2.356194496154785, 2.350346565246582, 2.344567060470581, 2.338855266571045, 2.333209991455078, 2.3276307582855225, 2.3221168518066406, 2.316667079925537, 2.3112809658050537, 2.305957555770874, 2.3006958961486816, 2.2954957485198975, 2.290355682373047, 2.285275459289551, 2.2802538871765137, 2.2752904891967773, 2.2703843116760254, 2.2655346393585205, 2.2607407569885254, 2.2560019493103027, 2.2513175010681152, 2.2466866970062256, 2.2421088218688965, 2.2375829219818115, 2.2331085205078125, 2.228684902191162, 2.224311351776123, 2.219987392425537, 2.215711832046509, 2.211484432220459, 2.2073044776916504, 2.2031712532043457, 2.1990842819213867, 2.195042610168457, 2.1910457611083984, 2.1870932579040527, 2.1831843852996826, 2.179318428039551, 2.175494909286499, 2.171713352203369, 2.167973041534424, 2.164273262023926, 2.160613775253296, -2.156993865966797, -2.160613775253296, -2.164273262023926, -2.167973041534424, -2.171713352203369, -2.175494909286499, -2.179318428039551, -2.1831843852996826, -2.1870932579040527, -2.1910457611083984, -2.195042610168457, -2.1990842819213867, -2.2031712532043457, -2.2073044776916504, -2.211484432220459, -2.215711832046509, -2.219987392425537, -2.224311351776123, -2.228684902191162, -2.2331085205078125, -2.2375829219818115, -2.2421088218688965, -2.2466866970062256, -2.2513175010681152, -2.2560019493103027, -2.2607407569885254, -2.2655346393585205, -2.2703843116760254, -2.2752904891967773, -2.2802538871765137, -2.285275459289551, -2.290355682373047, -2.2954957485198975, -2.3006958961486816, -2.305957555770874, -2.3112809658050537, -2.316667079925537, -2.3221168518066406, -2.3276307582855225, -2.333209991455078, -2.338855266571045, -2.344567060470581, -2.350346565246582, -2.356194496154785, -2.3621115684509277, -2.368098735809326, -2.3741567134857178, -2.38028621673584, -2.386488199234009, -2.392763614654541, -2.3991129398345947, -2.4055371284484863, -2.412036895751953, -2.4186131954193115, -2.425266742706299, -2.4319982528686523, -2.4388086795806885, -2.4456982612609863, -2.4526681900024414, -2.459719181060791, -2.4668517112731934, -2.4740664958953857, -2.4813644886016846, -2.488745927810669, -2.4962117671966553, -2.5037624835968018, -2.5113987922668457, -2.519120931625366, -2.5269296169281006, -2.534825563430786, -2.542808771133423, -2.550879955291748, -2.55903959274292, -2.5672879219055176, -2.575624942779541, -2.5840516090393066, -2.5925674438476562, -2.601173162460327, -2.6098685264587402, -2.6186537742614746, -2.6275291442871094, -2.6364941596984863, -2.6455490589141846, -2.654693365097046, -2.6639273166656494, -2.673250198364258, -2.682662010192871, -2.692162036895752, -2.7017500400543213, -2.711425304412842, -2.7211873531341553, -2.7310352325439453, -2.7409682273864746, -2.750985622406006, -2.7610862255096436, -2.7712693214416504, -2.7815332412719727, -2.791877269744873, -2.802299976348877, -2.8127999305725098, -2.823375701904297, -2.8340256214141846, -2.844748020172119, -2.855541229248047, -2.866403341293335, -2.8773326873779297, -2.88832688331604, -2.899384021759033, -2.9105019569396973, -2.921678304672241, -2.932910919189453, -2.944197177886963, -2.9555344581604004, -2.9669203758239746, -2.9783523082733154, -2.9898273944854736, -3.001343011856079, -3.0128960609436035, -3.0244839191436768, -3.0361032485961914, -3.0477514266967773, -3.059425115585327, -3.0711212158203125, -3.082836866378784, -3.0945684909820557, -3.1063132286071777, -3.118067502975464, -3.129828453063965, 3.1415927410125732, 3.1296885013580322, 3.1177875995635986, 3.105893611907959, 3.0940096378326416, 3.082139015197754, 3.0702850818634033, 3.0584514141082764, 3.0466408729553223, 3.0348570346832275, 3.0231027603149414, 3.011381149291992, 2.9996955394744873, 2.988048791885376, 2.9764440059661865, 2.964883804321289, 2.953371047973633, 2.941908836364746, 2.930499315261841, 2.919145345687866, 2.9078495502471924, 2.8966140747070312, 2.885441303253174, 2.874333620071411, 2.863292932510376, 2.8523216247558594, 2.841421365737915, 2.830594301223755, 2.8198421001434326, 2.809166431427002, 2.7985687255859375, 2.788050651550293, 2.777613639831543, 2.767259120941162, 2.756988048553467, 2.7468016147613525, 2.7367007732391357, 2.726686954498291, 2.7167603969573975, 2.7069225311279297, 2.6971733570098877, 2.687514066696167, 2.677945137023926, 2.668466567993164, 2.6590793132781982, 2.6497833728790283, 2.6405792236328125, 2.631466865539551, 2.6224465370178223, 2.613518238067627, 2.604681968688965, 2.595937490463257, 2.587285041809082, 2.5787243843078613, 2.5702552795410156, 2.5618772506713867, 2.5535900592803955, 2.545393466949463, 2.5372872352600098, 2.5292704105377197, 2.521343231201172, 2.5135045051574707, 2.505754232406616, 2.498091459274292, 2.490515947341919, 2.4830267429351807, 2.475623369216919, 2.4683051109313965, 2.461071491241455, 2.453921318054199, 2.44685435295105, 2.4398696422576904, 2.432966470718384, 2.4261438846588135, 2.4194014072418213, 2.4127378463745117, 2.4061529636383057, 2.3996453285217285, 2.393214702606201, 2.386859655380249, 2.380579948425293, 2.3743743896484375, 2.368242025375366, 2.362182378768921, 2.356194496154785, 2.3502774238586426, 2.3444302082061768, 2.3386523723602295, 2.3329429626464844, 2.327300786972046, 2.321725368499756, 2.316215753555298, 2.3107712268829346, 2.3053908348083496, 2.3000736236572266, 2.2948191165924072, 2.289626359939575, 2.284494400024414, 2.2794225215911865, 2.2744100093841553, 2.269456148147583, 2.2645599842071533, 2.259720802307129, 2.2549376487731934, 2.2502100467681885, 2.245537281036377, 2.2409183979034424, 2.2363526821136475, 2.231839418411255, 2.2273781299591064, 2.2229676246643066, 2.2186076641082764, 2.2142975330352783, 2.210036039352417, 2.2058229446411133, 2.201657772064209, 2.1975393295288086, 2.193467140197754, 2.1894407272338867, 2.1854593753814697, 2.1815223693847656, 2.177628993988037, 2.173779010772705, 2.1699717044830322, 2.166206121444702, 2.162482261657715, 2.158798933029175, 2.155155897140503, -2.151552677154541, -2.155155897140503, -2.158798933029175, -2.162482261657715, -2.166206121444702, -2.1699717044830322, -2.173779010772705, -2.177628993988037, -2.1815223693847656, -2.1854593753814697, -2.1894407272338867, -2.193467140197754, -2.1975393295288086, -2.201657772064209, -2.2058229446411133, -2.210036039352417, -2.2142975330352783, -2.2186076641082764, -2.2229676246643066, -2.2273781299591064, -2.231839418411255, -2.2363526821136475, -2.2409183979034424, -2.245537281036377, -2.2502100467681885, -2.2549376487731934, -2.259720802307129, -2.2645599842071533, -2.269456148147583, -2.2744100093841553, -2.2794225215911865, -2.284494400024414, -2.289626359939575, -2.2948191165924072, -2.3000736236572266, -2.3053908348083496, -2.3107712268829346, -2.316215753555298, -2.321725368499756, -2.327300786972046, -2.3329429626464844, -2.3386523723602295, -2.3444302082061768, -2.3502774238586426, -2.356194496154785, -2.362182378768921, -2.368242025375366, -2.3743743896484375, -2.380579948425293, -2.386859655380249, -2.393214702606201, -2.3996453285217285, -2.4061529636383057, -2.4127378463745117, -2.4194014072418213, -2.4261438846588135, -2.432966470718384, -2.4398696422576904, -2.44685435295105, -2.453921318054199, -2.461071491241455, -2.4683051109313965, -2.475623369216919, -2.4830267429351807, -2.490515947341919, -2.498091459274292, -2.505754232406616, -2.5135045051574707, -2.521343231201172, -2.5292704105377197, -2.5372872352600098, -2.545393466949463, -2.5535900592803955, -2.5618772506713867, -2.5702552795410156, -2.5787243843078613, -2.587285041809082, -2.595937490463257, -2.604681968688965, -2.613518238067627, -2.6224465370178223, -2.631466865539551, -2.6405792236328125, -2.6497833728790283, -2.6590793132781982, -2.668466567993164, -2.677945137023926, -2.687514066696167, -2.6971733570098877, -2.7069225311279297, -2.7167603969573975, -2.726686954498291, -2.7367007732391357, -2.7468016147613525, -2.756988048553467, -2.767259120941162, -2.777613639831543, -2.788050651550293, -2.7985687255859375, -2.809166431427002, -2.8198421001434326, -2.830594301223755, -2.841421365737915, -2.8523216247558594, -2.863292932510376, -2.874333620071411, -2.885441303253174, -2.8966140747070312, -2.9078495502471924, -2.919145345687866, -2.930499315261841, -2.941908836364746, -2.953371047973633, -2.964883804321289, -2.9764440059661865, -2.988048791885376, -2.9996955394744873, -3.011381149291992, -3.0231027603149414, -3.0348570346832275, -3.0466408729553223, -3.0584514141082764, -3.0702850818634033, -3.082139015197754, -3.0940096378326416, -3.105893611907959, -3.1177875995635986, -3.1296885013580322, 3.1415927410125732, 3.129544973373413, 3.1175010204315186, 3.105463743209839, 3.0934371948242188, 3.0814244747161865, 3.0694289207458496, 3.0574543476104736, 3.045503854751587, 3.033581018447876, 3.02168869972229, 3.0098304748535156, 2.998009204864502, 2.9862284660339355, 2.9744908809661865, 2.962799549102783, 2.951157569885254, 2.9395675659179688, 2.928032159805298, 2.9165544509887695, 2.9051365852355957, 2.8937811851501465, 2.882490634918213, 2.871267318725586, 2.8601133823394775, 2.8490309715270996, 2.838021993637085, 2.8270883560180664, 2.8162319660186768, 2.8054544925689697, 2.794757843017578, 2.7841429710388184, 2.7736117839813232, 2.763165235519409, 2.75280499458313, 2.7425317764282227, 2.732346773147583, 2.7222509384155273, 2.712245225906372, 2.7023303508758545, 2.692507028579712, 2.6827759742736816, 2.6731374263763428, 2.6635918617248535, 2.654139995574951, 2.6447818279266357, 2.6355175971984863, 2.626347780227661, 2.617271900177002, 2.608290433883667, 2.599403142929077, 2.5906102657318115, 2.581911087036133, 2.57330584526062, 2.5647940635681152, 2.556375503540039, 2.5480499267578125, 2.5398168563842773, 2.5316758155822754, 2.5236263275146484, 2.5156679153442383, 2.5077998638153076, 2.5000219345092773, 2.49233341217041, 2.4847335815429688, 2.477221727371216, 2.469797134399414, 2.4624593257904053, 2.455207347869873, 2.448040723800659, 2.440958261489868, 2.433959484100342, 2.4270434379577637, 2.4202094078063965, 2.413456678390503, 2.4067842960357666, 2.400191307067871, 2.393676996231079, 2.387240409851074, 2.380880832672119, 2.3745973110198975, 2.3683888912200928, 2.362255096435547, 2.356194496154785, 2.3502066135406494, 2.344290256500244, 2.338444948196411, 2.332669496536255, 2.326962947845459, 2.3213248252868652, 2.3157541751861572, 2.3102498054504395, 2.3048112392425537, 2.2994372844696045, 2.2941274642944336, 2.2888805866241455, 2.283696174621582, 2.2785730361938477, 2.273510456085205, 2.268507719039917, 2.263564109802246, 2.258678674697876, 2.2538506984710693, 2.2490792274475098, 2.24436354637146, 2.2397029399871826, 2.2350969314575195, 2.230544090270996, 2.2260444164276123, 2.2215964794158936, 2.21720027923584, 2.2128543853759766, 2.2085585594177246, 2.2043120861053467, 2.2001140117645264, 2.1959638595581055, 2.1918609142303467, 2.1878042221069336, 2.183793783187866, 2.179828405380249, 2.175907611846924, 2.1720306873321533, 2.1681971549987793, 2.1644062995910645, 2.1606576442718506, 2.1569504737854004, 2.1532843112945557, 2.149658441543579, -2.1460723876953125, -2.149658441543579, -2.1532843112945557, -2.1569504737854004, -2.1606576442718506, -2.1644062995910645, -2.1681971549987793, -2.1720306873321533, -2.175907611846924, -2.179828405380249, -2.183793783187866, -2.1878042221069336, -2.1918609142303467, -2.1959638595581055, -2.2001140117645264, -2.2043120861053467, -2.2085585594177246, -2.2128543853759766, -2.21720027923584, -2.2215964794158936, -2.2260444164276123, -2.230544090270996, -2.2350969314575195, -2.2397029399871826, -2.24436354637146, -2.2490792274475098, -2.2538506984710693, -2.258678674697876, -2.263564109802246, -2.268507719039917, -2.273510456085205, -2.2785730361938477, -2.283696174621582, -2.2888805866241455, -2.2941274642944336, -2.2994372844696045, -2.3048112392425537, -2.3102498054504395, -2.3157541751861572, -2.3213248252868652, -2.326962947845459, -2.332669496536255, -2.338444948196411, -2.344290256500244, -2.3502066135406494, -2.356194496154785, -2.362255096435547, -2.3683888912200928, -2.3745973110198975, -2.380880832672119, -2.387240409851074, -2.393676996231079, -2.400191307067871, -2.4067842960357666, -2.413456678390503, -2.4202094078063965, -2.4270434379577637, -2.433959484100342, -2.440958261489868, -2.448040723800659, -2.455207347869873, -2.4624593257904053, -2.469797134399414, -2.477221727371216, -2.4847335815429688, -2.49233341217041, -2.5000219345092773, -2.5077998638153076, -2.5156679153442383, -2.5236263275146484, -2.5316758155822754, -2.5398168563842773, -2.5480499267578125, -2.556375503540039, -2.5647940635681152, -2.57330584526062, -2.581911087036133, -2.5906102657318115, -2.599403142929077, -2.608290433883667, -2.617271900177002, -2.626347780227661, -2.6355175971984863, -2.6447818279266357, -2.654139995574951, -2.6635918617248535, -2.6731374263763428, -2.6827759742736816, -2.692507028579712, -2.7023303508758545, -2.712245225906372, -2.7222509384155273, -2.732346773147583, -2.7425317764282227, -2.75280499458313, -2.763165235519409, -2.7736117839813232, -2.7841429710388184, -2.794757843017578, -2.8054544925689697, -2.8162319660186768, -2.8270883560180664, -2.838021993637085, -2.8490309715270996, -2.8601133823394775, -2.871267318725586, -2.882490634918213, -2.8937811851501465, -2.9051365852355957, -2.9165544509887695, -2.928032159805298, -2.9395675659179688, -2.951157569885254, -2.962799549102783, -2.9744908809661865, -2.9862284660339355, -2.998009204864502, -3.0098304748535156, -3.02168869972229, -3.033581018447876, -3.045503854751587, -3.0574543476104736, -3.0694289207458496, -3.0814244747161865, -3.0934371948242188, -3.105463743209839, -3.1175010204315186, -3.129544973373413, 3.1415927410125732, 3.1293981075286865, 3.1172072887420654, 3.1050236225128174, 3.092850685119629, 3.0806925296783447, 3.068552017211914, 3.0564332008361816, 3.044339418411255, 3.032274007797241, 3.020240545272827, 3.00824236869812, 2.9962825775146484, 2.9843645095825195, 2.972491502761841, 2.9606661796569824, 2.9488918781280518, 2.937171459197998, 2.9255077838897705, 2.91390323638916, 2.9023611545562744, 2.890883445739746, 2.8794727325439453, 2.868131637573242, 2.8568623065948486, 2.8456666469573975, 2.8345468044281006, 2.823505163192749, 2.8125429153442383, 2.8016622066497803, 2.7908647060394287, 2.780151844024658, 2.7695248126983643, 2.7589855194091797, 2.748534679412842, 2.738173723220825, 2.727903366088867, 2.7177250385284424, 2.707639217376709, 2.6976468563079834, 2.687748670578003, 2.677945137023926, 2.668236494064331, 2.658623695373535, 2.649106979370117, 2.639686107635498, 2.630362033843994, 2.6211342811584473, 2.6120030879974365, 2.602968454360962, 2.5940303802490234, 2.585188627243042, 2.5764431953430176, 2.567793607711792, 2.559239625930786, 2.550781011581421, 2.542417287826538, 2.5341479778289795, 2.525972843170166, 2.5178909301757812, 2.509902000427246, 2.5020053386688232, 2.4942004680633545, 2.4864866733551025, 2.47886323928833, 2.4713292121887207, 2.4638843536376953, 2.4565277099609375, 2.449258327484131, 2.442075490951538, 2.434978485107422, 2.427966356277466, 2.4210386276245117, 2.414193868637085, 2.4074316024780273, 2.4007508754730225, 2.394150972366333, 2.3876307010650635, 2.3811893463134766, 2.374825954437256, 2.368539571762085, 2.3623294830322266, 2.356194496154785, 2.3501338958740234, 2.344146966934204, 2.3382322788238525, 2.3323893547058105, 2.3266172409057617, 2.3209149837493896, 2.315281629562378, 2.3097164630889893, 2.304218292236328, 2.2987864017486572, 2.29341983795166, 2.2881181240081787, 2.2828798294067383, 2.2777044773101807, 2.2725908756256104, 2.267538547515869, 2.2625465393066406, 2.2576138973236084, 2.2527401447296143, 2.2479238510131836, 2.2431647777557373, 2.238461971282959, 2.2338144779205322, 2.2292215824127197, 2.2246828079223633, 2.2201969623565674, 2.215763807296753, 2.2113819122314453, 2.2070512771606445, 2.202770471572876, 2.1985394954681396, 2.19435715675354, 2.19022274017334, 2.186135768890381, 2.182095766067505, 2.1781015396118164, 2.1741528511047363, 2.1702487468719482, 2.166388988494873, 2.1625723838806152, 2.158798933029175, 2.1550676822662354, 2.1513779163360596, 2.1477291584014893, 2.1441211700439453, -2.1405527591705322, -2.1441211700439453, -2.1477291584014893, -2.1513779163360596, -2.1550676822662354, -2.158798933029175, -2.1625723838806152, -2.166388988494873, -2.1702487468719482, -2.1741528511047363, -2.1781015396118164, -2.182095766067505, -2.186135768890381, -2.19022274017334, -2.19435715675354, -2.1985394954681396, -2.202770471572876, -2.2070512771606445, -2.2113819122314453, -2.215763807296753, -2.2201969623565674, -2.2246828079223633, -2.2292215824127197, -2.2338144779205322, -2.238461971282959, -2.2431647777557373, -2.2479238510131836, -2.2527401447296143, -2.2576138973236084, -2.2625465393066406, -2.267538547515869, -2.2725908756256104, -2.2777044773101807, -2.2828798294067383, -2.2881181240081787, -2.29341983795166, -2.2987864017486572, -2.304218292236328, -2.3097164630889893, -2.315281629562378, -2.3209149837493896, -2.3266172409057617, -2.3323893547058105, -2.3382322788238525, -2.344146966934204, -2.3501338958740234, -2.356194496154785, -2.3623294830322266, -2.368539571762085, -2.374825954437256, -2.3811893463134766, -2.3876307010650635, -2.394150972366333, -2.4007508754730225, -2.4074316024780273, -2.414193868637085, -2.4210386276245117, -2.427966356277466, -2.434978485107422, -2.442075490951538, -2.449258327484131, -2.4565277099609375, -2.4638843536376953, -2.4713292121887207, -2.47886323928833, -2.4864866733551025, -2.4942004680633545, -2.5020053386688232, -2.509902000427246, -2.5178909301757812, -2.525972843170166, -2.5341479778289795, -2.542417287826538, -2.550781011581421, -2.559239625930786, -2.567793607711792, -2.5764431953430176, -2.585188627243042, -2.5940303802490234, -2.602968454360962, -2.6120030879974365, -2.6211342811584473, -2.630362033843994, -2.639686107635498, -2.649106979370117, -2.658623695373535, -2.668236494064331, -2.677945137023926, -2.687748670578003, -2.6976468563079834, -2.707639217376709, -2.7177250385284424, -2.727903366088867, -2.738173723220825, -2.748534679412842, -2.7589855194091797, -2.7695248126983643, -2.780151844024658, -2.7908647060394287, -2.8016622066497803, -2.8125429153442383, -2.823505163192749, -2.8345468044281006, -2.8456666469573975, -2.8568623065948486, -2.868131637573242, -2.8794727325439453, -2.890883445739746, -2.9023611545562744, -2.91390323638916, -2.9255077838897705, -2.937171459197998, -2.9488918781280518, -2.9606661796569824, -2.972491502761841, -2.9843645095825195, -2.9962825775146484, -3.00824236869812, -3.020240545272827, -3.032274007797241, -3.044339418411255, -3.0564332008361816, -3.068552017211914, -3.0806925296783447, -3.092850685119629, -3.1050236225128174, -3.1172072887420654, -3.1293981075286865, 3.1415927410125732, 3.1292476654052734, 3.1169064044952393, 3.1045725345611572, 3.092250108718872, 3.079942464828491, 3.0676536560058594, 3.055387020111084, 3.0431466102600098, 3.030935525894165, 3.0187573432922363, 3.0066158771514893, 2.994514226913452, 2.9824559688568115, 2.9704439640045166, 2.958481788635254, 2.9465723037719727, 2.934718608856201, 2.9229238033294678, 2.9111902713775635, 2.8995208740234375, 2.887918472290039, 2.876385450363159, 2.864924430847168, 2.8535373210906982, 2.842226505279541, 2.830994129180908, 2.8198421001434326, 2.808772325515747, 2.7977869510650635, 2.7868869304656982, 2.7760744094848633, 2.765350580215454, 2.7547168731689453, 2.7441744804382324, 2.733724594116211, 2.7233684062957764, 2.713106393814087, 2.702939748764038, 2.6928694248199463, 2.6828954219818115, 2.6730189323425293, 2.6632401943206787, 2.653559684753418, 2.643977642059326, 2.6344940662384033, 2.6251096725463867, 2.6158242225646973, 2.606637477874756, 2.5975499153137207, 2.5885612964630127, 2.5796711444854736, 2.5708794593811035, 2.562185764312744, 2.5535900592803955, 2.5450916290283203, 2.5366902351379395, 2.5283854007720947, 2.520176410675049, 2.5120627880096436, 2.5040438175201416, 2.496119260787964, 2.488287925720215, 2.4805495738983154, 2.47290301322937, 2.4653480052948, 2.457883358001709, 2.4505083560943604, 2.4432225227355957, 2.4360244274139404, 2.4289138317108154, 2.421889305114746, 2.414950370788574, 2.4080958366394043, 2.401325225830078, 2.394637107849121, 2.388030767440796, 2.3815054893493652, 2.3750600814819336, 2.3686938285827637, 2.36240553855896, 2.356194496154785, 2.3500595092773438, 2.3439998626708984, 2.338014602661133, 2.3321027755737305, 2.326263427734375, 2.320495367050171, 2.31479811668396, 2.3091702461242676, 2.3036115169525146, 2.2981202602386475, 2.292696237564087, 2.2873380184173584, 2.2820448875427246, 2.2768161296844482, 2.271650791168213, 2.266547679901123, 2.2615063190460205, 2.256525754928589, 2.251605272293091, 2.2467434406280518, 2.2419402599334717, 2.237194299697876, 2.2325048446655273, 2.2278711795806885, 2.223292589187622, 2.218768358230591, 2.2142975330352783, 2.209879159927368, 2.2055130004882812, 2.201197862625122, 2.1969330310821533, 2.192718029022217, 2.188552141189575, 2.184434413909912, 2.1803641319274902, 2.1763410568237305, 2.1723639965057373, 2.1684324741363525, 2.164546012878418, 2.160703659057617, 2.156904935836792, 2.153149366378784, 2.1494359970092773, 2.1457643508911133, 2.1421337127685547, 2.1385438442230225, -2.1349937915802, -2.1385438442230225, -2.1421337127685547, -2.1457643508911133, -2.1494359970092773, -2.153149366378784, -2.156904935836792, -2.160703659057617, -2.164546012878418, -2.1684324741363525, -2.1723639965057373, -2.1763410568237305, -2.1803641319274902, -2.184434413909912, -2.188552141189575, -2.192718029022217, -2.1969330310821533, -2.201197862625122, -2.2055130004882812, -2.209879159927368, -2.2142975330352783, -2.218768358230591, -2.223292589187622, -2.2278711795806885, -2.2325048446655273, -2.237194299697876, -2.2419402599334717, -2.2467434406280518, -2.251605272293091, -2.256525754928589, -2.2615063190460205, -2.266547679901123, -2.271650791168213, -2.2768161296844482, -2.2820448875427246, -2.2873380184173584, -2.292696237564087, -2.2981202602386475, -2.3036115169525146, -2.3091702461242676, -2.31479811668396, -2.320495367050171, -2.326263427734375, -2.3321027755737305, -2.338014602661133, -2.3439998626708984, -2.3500595092773438, -2.356194496154785, -2.36240553855896, -2.3686938285827637, -2.3750600814819336, -2.3815054893493652, -2.388030767440796, -2.394637107849121, -2.401325225830078, -2.4080958366394043, -2.414950370788574, -2.421889305114746, -2.4289138317108154, -2.4360244274139404, -2.4432225227355957, -2.4505083560943604, -2.457883358001709, -2.4653480052948, -2.47290301322937, -2.4805495738983154, -2.488287925720215, -2.496119260787964, -2.5040438175201416, -2.5120627880096436, -2.520176410675049, -2.5283854007720947, -2.5366902351379395, -2.5450916290283203, -2.5535900592803955, -2.562185764312744, -2.5708794593811035, -2.5796711444854736, -2.5885612964630127, -2.5975499153137207, -2.606637477874756, -2.6158242225646973, -2.6251096725463867, -2.6344940662384033, -2.643977642059326, -2.653559684753418, -2.6632401943206787, -2.6730189323425293, -2.6828954219818115, -2.6928694248199463, -2.702939748764038, -2.713106393814087, -2.7233684062957764, -2.733724594116211, -2.7441744804382324, -2.7547168731689453, -2.765350580215454, -2.7760744094848633, -2.7868869304656982, -2.7977869510650635, -2.808772325515747, -2.8198421001434326, -2.830994129180908, -2.842226505279541, -2.8535373210906982, -2.864924430847168, -2.876385450363159, -2.887918472290039, -2.8995208740234375, -2.9111902713775635, -2.9229238033294678, -2.934718608856201, -2.9465723037719727, -2.958481788635254, -2.9704439640045166, -2.9824559688568115, -2.994514226913452, -3.0066158771514893, -3.0187573432922363, -3.030935525894165, -3.0431466102600098, -3.055387020111084, -3.0676536560058594, -3.079942464828491, -3.092250108718872, -3.1045725345611572, -3.1169064044952393, -3.1292476654052734, 3.1415927410125732, 3.1290934085845947, 3.116597890853882, 3.1041102409362793, 3.0916342735290527, 3.0791738033294678, 3.066732883453369, 3.0543148517608643, 3.041923999786377, 3.0295636653900146, 3.017237663269043, 3.0049495697021484, 2.9927027225494385, 2.9805006980895996, 2.9683470726013184, 2.956244707107544, 2.944197177886963, 2.9322073459625244, 2.920278310775757, 2.9084129333496094, 2.8966140747070312, 2.8848843574523926, 2.8732264041900635, 2.861642837524414, 2.8501358032226562, 2.838707685470581, 2.8273608684539795, 2.816096782684326, 2.804917812347412, 2.793825626373291, 2.7828218936920166, 2.7719082832336426, 2.7610862255096436, 2.750357151031494, 2.7397220134735107, 2.729182243347168, 2.7187387943267822, 2.708392381668091, 2.6981444358825684, 2.687994956970215, 2.677945137023926, 2.6679952144622803, 2.6581456661224365, 2.6483969688415527, 2.638749361038208, 2.6292030811309814, 2.619758367538452, 2.610414981842041, 2.601173162460327, 2.5920326709747314, 2.582993268966675, 2.5740549564361572, 2.5652174949645996, 2.5564801692962646, 2.5478429794311523, 2.5393052101135254, 2.5308666229248047, 2.522526502609253, 2.514284372329712, 2.5061397552490234, 2.498091459274292, 2.4901394844055176, 2.4822826385498047, 2.474520206451416, 2.4668517112731934, 2.4592761993408203, 2.4517927169799805, 2.4444003105163574, 2.437098503112793, 2.4298863410949707, 2.422762632369995, 2.415726661682129, 2.4087774753570557, 2.401914358139038, 2.3951358795166016, 2.388441324234009, 2.3818299770355225, 2.375300407409668, 2.368852138519287, 2.3624837398529053, 2.356194496154785, 2.3499834537506104, 2.3438494205474854, 2.337791681289673, 2.3318090438842773, 2.3259007930755615, 2.32006573677063, 2.314302921295166, 2.3086113929748535, 2.302990198135376, 2.297438621520996, 2.2919554710388184, 2.2865400314331055, 2.281190872192383, 2.2759077548980713, 2.2706892490386963, 2.2655346393585205, 2.2604429721832275, 2.25541353225708, 2.2504451274871826, 2.245537281036377, 2.2406888008117676, 2.235898971557617, 2.2311670780181885, 2.226491928100586, 2.2218730449676514, 2.2173094749450684, 2.2128005027770996, 2.2083451747894287, 2.2039427757263184, 2.1995925903320312, 2.19529390335083, 2.1910457611083984, 2.186847686767578, 2.1826987266540527, 2.178598403930664, 2.1745457649230957, 2.1705400943756104, 2.16658091545105, 2.1626672744750977, 2.158798933029175, 2.154974937438965, 2.1511945724487305, 2.1474573612213135, 2.1437625885009766, 2.1401095390319824, 2.136497735977173, 2.1329267024993896, -2.1293957233428955, -2.1329267024993896, -2.136497735977173, -2.1401095390319824, -2.1437625885009766, -2.1474573612213135, -2.1511945724487305, -2.154974937438965, -2.158798933029175, -2.1626672744750977, -2.16658091545105, -2.1705400943756104, -2.1745457649230957, -2.178598403930664, -2.1826987266540527, -2.186847686767578, -2.1910457611083984, -2.19529390335083, -2.1995925903320312, -2.2039427757263184, -2.2083451747894287, -2.2128005027770996, -2.2173094749450684, -2.2218730449676514, -2.226491928100586, -2.2311670780181885, -2.235898971557617, -2.2406888008117676, -2.245537281036377, -2.2504451274871826, -2.25541353225708, -2.2604429721832275, -2.2655346393585205, -2.2706892490386963, -2.2759077548980713, -2.281190872192383, -2.2865400314331055, -2.2919554710388184, -2.297438621520996, -2.302990198135376, -2.3086113929748535, -2.314302921295166, -2.32006573677063, -2.3259007930755615, -2.3318090438842773, -2.337791681289673, -2.3438494205474854, -2.3499834537506104, -2.356194496154785, -2.3624837398529053, -2.368852138519287, -2.375300407409668, -2.3818299770355225, -2.388441324234009, -2.3951358795166016, -2.401914358139038, -2.4087774753570557, -2.415726661682129, -2.422762632369995, -2.4298863410949707, -2.437098503112793, -2.4444003105163574, -2.4517927169799805, -2.4592761993408203, -2.4668517112731934, -2.474520206451416, -2.4822826385498047, -2.4901394844055176, -2.498091459274292, -2.5061397552490234, -2.514284372329712, -2.522526502609253, -2.5308666229248047, -2.5393052101135254, -2.5478429794311523, -2.5564801692962646, -2.5652174949645996, -2.5740549564361572, -2.582993268966675, -2.5920326709747314, -2.601173162460327, -2.610414981842041, -2.619758367538452, -2.6292030811309814, -2.638749361038208, -2.6483969688415527, -2.6581456661224365, -2.6679952144622803, -2.677945137023926, -2.687994956970215, -2.6981444358825684, -2.708392381668091, -2.7187387943267822, -2.729182243347168, -2.7397220134735107, -2.750357151031494, -2.7610862255096436, -2.7719082832336426, -2.7828218936920166, -2.793825626373291, -2.804917812347412, -2.816096782684326, -2.8273608684539795, -2.838707685470581, -2.8501358032226562, -2.861642837524414, -2.8732264041900635, -2.8848843574523926, -2.8966140747070312, -2.9084129333496094, -2.920278310775757, -2.9322073459625244, -2.944197177886963, -2.956244707107544, -2.9683470726013184, -2.9805006980895996, -2.9927027225494385, -3.0049495697021484, -3.017237663269043, -3.0295636653900146, -3.041923999786377, -3.0543148517608643, -3.066732883453369, -3.0791738033294678, -3.0916342735290527, -3.1041102409362793, -3.116597890853882, -3.1290934085845947, 3.1415927410125732, 3.1289350986480713, 3.116281509399414, 3.1036362648010254, 3.091002941131592, 3.078385829925537, 3.065788745880127, 3.053215980529785, 3.040670871734619, 3.0281577110290527, 3.0156800746917725, 3.003241777420044, 2.9908461570739746, 2.978497266769409, 2.966198444366455, 2.9539527893066406, 2.9417641162872314, 2.9296350479125977, 2.9175689220428467, 2.905569076538086, 2.8936378955841064, 2.8817782402038574, 2.869992971420288, 2.8582847118377686, 2.8466556072235107, 2.8351080417633057, 2.8236443996429443, 2.8122665882110596, 2.800976514816284, 2.789776086807251, 2.7786669731140137, 2.767650842666626, 2.7567288875579834, 2.7459030151367188, 2.7351741790771484, 2.724543333053589, 2.7140119075775146, 2.703580379486084, 2.6932499408721924, 2.683021068572998, 2.6728944778442383, 2.6628708839416504, 2.6529502868652344, 2.6431331634521484, 2.633419990539551, 2.6238107681274414, 2.6143054962158203, 2.6049044132232666, 2.595607280731201, 2.586414098739624, 2.577324390411377, 2.56833815574646, 2.559455156326294, 2.5506746768951416, 2.541996479034424, 2.5334198474884033, 2.524944543838501, 2.5165698528289795, 2.5082952976226807, 2.500119924545288, 2.4920432567596436, 2.4840643405914307, 2.476182699203491, 2.468397378921509, 2.460707426071167, 2.4531121253967285, 2.445610523223877, 2.438201904296875, 2.4308853149414062, 2.423659563064575, 2.4165239334106445, 2.4094772338867188, 2.4025189876556396, 2.3956477642059326, 2.3888626098632812, 2.382162570953369, 2.375546932220459, 2.369014263153076, 2.3625638484954834, 2.356194496154785, 2.349905252456665, 2.3436951637268066, 2.3375630378723145, 2.331508159637451, 2.3255293369293213, 2.3196253776550293, 2.313795566558838, 2.3080389499664307, 2.302354335784912, 2.296740770339966, 2.2911972999572754, 2.2857232093811035, 2.2803170680999756, 2.2749781608581543, 2.2697055339813232, 2.264498233795166, 2.2593555450439453, 2.2542760372161865, 2.2492592334747314, 2.2443041801452637, 2.239409923553467, 2.2345755100250244, 2.22979998588562, 2.2250828742980957, 2.2204229831695557, 2.2158195972442627, 2.2112717628479004, 2.2067787647247314, 2.2023398876190186, 2.1979541778564453, 2.1936209201812744, 2.1893393993377686, 2.1851086616516113, 2.1809282302856445, 2.1767969131469727, 2.1727144718170166, 2.16867995262146, 2.1646928787231445, 2.160752058029175, 2.1568572521209717, 2.1530075073242188, 2.149202346801758, 2.1454410552978516, 2.1417226791381836, 2.138047218322754, 2.134413480758667, 2.1308212280273438, 2.1272695064544678, -2.123757839202881, -2.1272695064544678, -2.1308212280273438, -2.134413480758667, -2.138047218322754, -2.1417226791381836, -2.1454410552978516, -2.149202346801758, -2.1530075073242188, -2.1568572521209717, -2.160752058029175, -2.1646928787231445, -2.16867995262146, -2.1727144718170166, -2.1767969131469727, -2.1809282302856445, -2.1851086616516113, -2.1893393993377686, -2.1936209201812744, -2.1979541778564453, -2.2023398876190186, -2.2067787647247314, -2.2112717628479004, -2.2158195972442627, -2.2204229831695557, -2.2250828742980957, -2.22979998588562, -2.2345755100250244, -2.239409923553467, -2.2443041801452637, -2.2492592334747314, -2.2542760372161865, -2.2593555450439453, -2.264498233795166, -2.2697055339813232, -2.2749781608581543, -2.2803170680999756, -2.2857232093811035, -2.2911972999572754, -2.296740770339966, -2.302354335784912, -2.3080389499664307, -2.313795566558838, -2.3196253776550293, -2.3255293369293213, -2.331508159637451, -2.3375630378723145, -2.3436951637268066, -2.349905252456665, -2.356194496154785, -2.3625638484954834, -2.369014263153076, -2.375546932220459, -2.382162570953369, -2.3888626098632812, -2.3956477642059326, -2.4025189876556396, -2.4094772338867188, -2.4165239334106445, -2.423659563064575, -2.4308853149414062, -2.438201904296875, -2.445610523223877, -2.4531121253967285, -2.460707426071167, -2.468397378921509, -2.476182699203491, -2.4840643405914307, -2.4920432567596436, -2.500119924545288, -2.5082952976226807, -2.5165698528289795, -2.524944543838501, -2.5334198474884033, -2.541996479034424, -2.5506746768951416, -2.559455156326294, -2.56833815574646, -2.577324390411377, -2.586414098739624, -2.595607280731201, -2.6049044132232666, -2.6143054962158203, -2.6238107681274414, -2.633419990539551, -2.6431331634521484, -2.6529502868652344, -2.6628708839416504, -2.6728944778442383, -2.683021068572998, -2.6932499408721924, -2.703580379486084, -2.7140119075775146, -2.724543333053589, -2.7351741790771484, -2.7459030151367188, -2.7567288875579834, -2.767650842666626, -2.7786669731140137, -2.789776086807251, -2.800976514816284, -2.8122665882110596, -2.8236443996429443, -2.8351080417633057, -2.8466556072235107, -2.8582847118377686, -2.869992971420288, -2.8817782402038574, -2.8936378955841064, -2.905569076538086, -2.9175689220428467, -2.9296350479125977, -2.9417641162872314, -2.9539527893066406, -2.966198444366455, -2.978497266769409, -2.9908461570739746, -3.003241777420044, -3.0156800746917725, -3.0281577110290527, -3.040670871734619, -3.053215980529785, -3.065788745880127, -3.078385829925537, -3.091002941131592, -3.1036362648010254, -3.116281509399414, -3.1289350986480713, 3.1415927410125732, 3.128772735595703, 3.115957260131836, 3.1031501293182373, 3.090355396270752, 3.077577590942383, 3.0648207664489746, 3.052088737487793, 3.039386034011841, 3.0267159938812256, 3.01408314704895, 3.001490831375122, 2.988943338394165, 2.9764440059661865, 2.963996410369873, 2.9516043663024902, 2.9392709732055664, 2.926999807357788, 2.9147937297821045, 2.902656316757202, 2.890589952468872, 2.8785979747772217, 2.866682767868042, 2.8548471927642822, 2.8430936336517334, 2.8314244747161865, 2.8198421001434326, 2.8083484172821045, 2.796945333480835, 2.785634994506836, 2.774418830871582, 2.763298749923706, 2.7522759437561035, 2.741352081298828, 2.7305281162261963, 2.7198054790496826, 2.7091848850250244, 2.698667526245117, 2.688253879547119, 2.677945137023926, 2.667741298675537, 2.6576433181762695, 2.647651195526123, 2.637765645980835, 2.6279866695404053, 2.618314266204834, 2.6087486743927, 2.599289894104004, 2.589937686920166, 2.5806918144226074, 2.571552276611328, 2.562518358230591, 2.5535900592803955, 2.544766664505005, 2.53604793548584, 2.527433156967163, 2.5189218521118164, 2.5105133056640625, 2.502206802368164, 2.494001626968384, 2.4858970642089844, 2.4778921604156494, 2.4699864387512207, 2.462178945541382, 2.4544684886932373, 2.44685435295105, 2.439335823059082, 2.4319114685058594, 2.4245808124542236, 2.4173426628112793, 2.41019606590271, 2.40313982963562, 2.3961732387542725, 2.3892948627471924, 2.3825042247772217, 2.3757998943328857, 2.369180679321289, 2.3626461029052734, 2.356194496154785, 2.349825143814087, 2.343536853790283, 2.3373289108276367, 2.3311996459960938, 2.325148582458496, 2.319174289703369, 2.3132760524749756, 2.30745267868042, 2.3017029762268066, 2.2960262298583984, 2.2904212474823, 2.2848870754241943, 2.2794225215911865, 2.274026870727539, 2.2686991691589355, 2.2634382247924805, 2.2582430839538574, 2.25311279296875, 2.248046636581421, 2.2430434226989746, 2.238102436065674, 2.233222723007202, 2.228403091430664, 2.2236430644989014, 2.2189414501190186, 2.2142975330352783, 2.2097103595733643, 2.205179214477539, 2.2007031440734863, 2.1962814331054688, 2.19191312789917, 2.1875975131988525, 2.1833338737487793, 2.179121255874634, 2.174959182739258, 2.170846462249756, 2.166782855987549, 2.162767171859741, 2.158798933029175, 2.1548774242401123, 2.1510019302368164, 2.1471714973449707, 2.143385887145996, 2.139644145965576, 2.1359457969665527, 2.1322898864746094, 2.128676176071167, 2.125103712081909, 2.121572256088257, -2.1180806159973145, -2.121572256088257, -2.125103712081909, -2.128676176071167, -2.1322898864746094, -2.1359457969665527, -2.139644145965576, -2.143385887145996, -2.1471714973449707, -2.1510019302368164, -2.1548774242401123, -2.158798933029175, -2.162767171859741, -2.166782855987549, -2.170846462249756, -2.174959182739258, -2.179121255874634, -2.1833338737487793, -2.1875975131988525, -2.19191312789917, -2.1962814331054688, -2.2007031440734863, -2.205179214477539, -2.2097103595733643, -2.2142975330352783, -2.2189414501190186, -2.2236430644989014, -2.228403091430664, -2.233222723007202, -2.238102436065674, -2.2430434226989746, -2.248046636581421, -2.25311279296875, -2.2582430839538574, -2.2634382247924805, -2.2686991691589355, -2.274026870727539, -2.2794225215911865, -2.2848870754241943, -2.2904212474823, -2.2960262298583984, -2.3017029762268066, -2.30745267868042, -2.3132760524749756, -2.319174289703369, -2.325148582458496, -2.3311996459960938, -2.3373289108276367, -2.343536853790283, -2.349825143814087, -2.356194496154785, -2.3626461029052734, -2.369180679321289, -2.3757998943328857, -2.3825042247772217, -2.3892948627471924, -2.3961732387542725, -2.40313982963562, -2.41019606590271, -2.4173426628112793, -2.4245808124542236, -2.4319114685058594, -2.439335823059082, -2.44685435295105, -2.4544684886932373, -2.462178945541382, -2.4699864387512207, -2.4778921604156494, -2.4858970642089844, -2.494001626968384, -2.502206802368164, -2.5105133056640625, -2.5189218521118164, -2.527433156967163, -2.53604793548584, -2.544766664505005, -2.5535900592803955, -2.562518358230591, -2.571552276611328, -2.5806918144226074, -2.589937686920166, -2.599289894104004, -2.6087486743927, -2.618314266204834, -2.6279866695404053, -2.637765645980835, -2.647651195526123, -2.6576433181762695, -2.667741298675537, -2.677945137023926, -2.688253879547119, -2.698667526245117, -2.7091848850250244, -2.7198054790496826, -2.7305281162261963, -2.741352081298828, -2.7522759437561035, -2.763298749923706, -2.774418830871582, -2.785634994506836, -2.796945333480835, -2.8083484172821045, -2.8198421001434326, -2.8314244747161865, -2.8430936336517334, -2.8548471927642822, -2.866682767868042, -2.8785979747772217, -2.890589952468872, -2.902656316757202, -2.9147937297821045, -2.926999807357788, -2.9392709732055664, -2.9516043663024902, -2.963996410369873, -2.9764440059661865, -2.988943338394165, -3.001490831375122, -3.01408314704895, -3.0267159938812256, -3.039386034011841, -3.052088737487793, -3.0648207664489746, -3.077577590942383, -3.090355396270752, -3.1031501293182373, -3.115957260131836, -3.128772735595703, 3.1415927410125732, 3.1286063194274902, 3.11562442779541, 3.102651357650757, 3.089691162109375, 3.0767486095428467, 3.0638277530670166, 3.0509328842163086, 3.0380680561065674, 3.025237560272217, 3.0124454498291016, 2.9996955394744873, 2.986992120742798, 2.9743387699127197, 2.9617390632629395, 2.9491970539093018, 2.936715841293335, 2.9242992401123047, 2.91195011138916, 2.899672031402588, 2.887467861175537, 2.875340700149536, 2.863292932510376, 2.851327657699585, 2.839447498321533, 2.8276543617248535, 2.815951108932495, 2.8043394088745117, 2.7928216457366943, 2.7813994884490967, 2.7700748443603516, 2.7588491439819336, 2.7477240562438965, 2.7367007732391357, 2.725780963897705, 2.7149651050567627, 2.7042548656463623, 2.693650484085083, 2.6831533908843994, 2.6727638244628906, 2.662482261657715, 2.6523096561431885, 2.6422460079193115, 2.632291555404663, 2.6224465370178223, 2.612711191177368, 2.6030852794647217, 2.593568801879883, 2.5841615200042725, 2.5748634338378906, 2.565674066543579, 2.5565929412841797, 2.5476200580596924, 2.5387542247772217, 2.5299956798553467, 2.521343231201172, 2.512796401977539, 2.504354476928711, 2.49601674079895, 2.4877827167510986, 2.4796509742736816, 2.471621036529541, 2.4636921882629395, 2.4558632373809814, 2.4481332302093506, 2.4405012130737305, 2.432966470718384, 2.425527572631836, 2.4181840419769287, 2.4109342098236084, 2.403777599334717, 2.3967127799987793, 2.3897390365600586, 2.38285493850708, 2.3760595321655273, 2.369351625442505, 2.3627302646636963, 2.356194496154785, 2.349742889404297, 2.343374729156494, 2.3370885848999023, 2.330883502960205, 2.324758291244507, 2.318711996078491, 2.312743663787842, 2.306851863861084, 2.3010358810424805, 2.2952942848205566, 2.289626359939575, 2.2840309143066406, 2.2785067558288574, 2.2730531692504883, 2.2676689624786377, 2.2623531818389893, 2.2571048736572266, 2.251922845840454, 2.2468063831329346, 2.2417542934417725, 2.2367656230926514, 2.231839418411255, 2.2269749641418457, 2.2221713066101074, 2.2174272537231445, 2.212742328643799, 2.2081151008605957, 2.203545093536377, 2.199031352996826, 2.194573163986206, 2.190169334411621, 2.185819387435913, 2.1815223693847656, 2.1772773265838623, 2.173083782196045, 2.168940544128418, 2.1648471355438232, 2.1608028411865234, 2.1568069458007812, 2.1528584957122803, 2.148956775665283, 2.1451010704040527, 2.1412909030914307, 2.1375255584716797, 2.1338040828704834, 2.1301259994506836, 2.126490831375122, 2.1228976249694824, 2.1193456649780273, 2.1158347129821777, -2.112363815307617, -2.1158347129821777, -2.1193456649780273, -2.1228976249694824, -2.126490831375122, -2.1301259994506836, -2.1338040828704834, -2.1375255584716797, -2.1412909030914307, -2.1451010704040527, -2.148956775665283, -2.1528584957122803, -2.1568069458007812, -2.1608028411865234, -2.1648471355438232, -2.168940544128418, -2.173083782196045, -2.1772773265838623, -2.1815223693847656, -2.185819387435913, -2.190169334411621, -2.194573163986206, -2.199031352996826, -2.203545093536377, -2.2081151008605957, -2.212742328643799, -2.2174272537231445, -2.2221713066101074, -2.2269749641418457, -2.231839418411255, -2.2367656230926514, -2.2417542934417725, -2.2468063831329346, -2.251922845840454, -2.2571048736572266, -2.2623531818389893, -2.2676689624786377, -2.2730531692504883, -2.2785067558288574, -2.2840309143066406, -2.289626359939575, -2.2952942848205566, -2.3010358810424805, -2.306851863861084, -2.312743663787842, -2.318711996078491, -2.324758291244507, -2.330883502960205, -2.3370885848999023, -2.343374729156494, -2.349742889404297, -2.356194496154785, -2.3627302646636963, -2.369351625442505, -2.3760595321655273, -2.38285493850708, -2.3897390365600586, -2.3967127799987793, -2.403777599334717, -2.4109342098236084, -2.4181840419769287, -2.425527572631836, -2.432966470718384, -2.4405012130737305, -2.4481332302093506, -2.4558632373809814, -2.4636921882629395, -2.471621036529541, -2.4796509742736816, -2.4877827167510986, -2.49601674079895, -2.504354476928711, -2.512796401977539, -2.521343231201172, -2.5299956798553467, -2.5387542247772217, -2.5476200580596924, -2.5565929412841797, -2.565674066543579, -2.5748634338378906, -2.5841615200042725, -2.593568801879883, -2.6030852794647217, -2.612711191177368, -2.6224465370178223, -2.632291555404663, -2.6422460079193115, -2.6523096561431885, -2.662482261657715, -2.6727638244628906, -2.6831533908843994, -2.693650484085083, -2.7042548656463623, -2.7149651050567627, -2.725780963897705, -2.7367007732391357, -2.7477240562438965, -2.7588491439819336, -2.7700748443603516, -2.7813994884490967, -2.7928216457366943, -2.8043394088745117, -2.815951108932495, -2.8276543617248535, -2.839447498321533, -2.851327657699585, -2.863292932510376, -2.875340700149536, -2.887467861175537, -2.899672031402588, -2.91195011138916, -2.9242992401123047, -2.936715841293335, -2.9491970539093018, -2.9617390632629395, -2.9743387699127197, -2.986992120742798, -2.9996955394744873, -3.0124454498291016, -3.025237560272217, -3.0380680561065674, -3.0509328842163086, -3.0638277530670166, -3.0767486095428467, -3.089691162109375, -3.102651357650757, -3.11562442779541, -3.1286063194274902, 3.1415927410125732, 3.1284356117248535, 3.1152830123901367, 3.102139472961426, 3.0890095233917236, 3.0758979320526123, 3.0628087520599365, 3.049746513366699, 3.0367157459259033, 3.0237205028533936, 3.010765314102173, 2.997853994369507, 2.9849908351898193, 2.972179651260376, 2.9594242572784424, 2.9467287063598633, 2.934096336364746, 2.9215309619903564, 2.9090356826782227, 2.8966140747070312, 2.8842689990997314, 2.8720035552978516, 2.85982084274292, 2.8477232456207275, 2.8357138633728027, 2.8237946033477783, 2.8119683265686035, 2.800236701965332, 2.788602352142334, 2.777066707611084, 2.765631675720215, 2.7542991638183594, 2.743070125579834, 2.7319464683532715, 2.7209293842315674, 2.710019588470459, 2.699218511581421, 2.6885266304016113, 2.677945137023926, 2.6674742698669434, 2.6571147441864014, 2.646867036819458, 2.6367313861846924, 2.6267077922821045, 2.6167969703674316, 2.6069984436035156, 2.5973122119903564, 2.587738275527954, 2.5782763957977295, 2.5689263343811035, 2.559687614440918, 2.5505597591400146, 2.5415425300598145, 2.532634973526001, 2.523836851119995, 2.5151474475860596, 2.506565809249878, 2.498091459274292, 2.4897234439849854, 2.4814610481262207, 2.4733033180236816, 2.4652490615844727, 2.4572978019714355, 2.449448347091675, 2.441699743270874, 2.434051036834717, 2.4265010356903076, 2.419048547744751, 2.4116930961608887, 2.404433012008667, 2.3972673416137695, 2.390194892883301, 2.3832149505615234, 2.376326084136963, 2.3695271015167236, 2.36281681060791, 2.356194496154785, 2.349658727645874, 2.3432083129882812, 2.3368420600891113, 2.330559015274048, 2.3243582248687744, 2.3182380199432373, 2.312197685241699, 2.3062360286712646, 2.300352096557617, 2.294544219970703, 2.2888119220733643, 2.283154010772705, 2.277569055557251, 2.2720563411712646, 2.2666144371032715, 2.2612428665161133, 2.2559399604797363, 2.2507052421569824, 2.245537281036377, 2.2404353618621826, 2.235398292541504, 2.2304251194000244, 2.2255148887634277, 2.2206668853759766, 2.2158796787261963, 2.2111527919769287, 2.2064850330352783, 2.201875686645508, 2.197323799133301, 2.192828416824341, 2.1883885860443115, 2.1840035915374756, 2.1796727180480957, 2.1753950119018555, 2.1711695194244385, 2.1669955253601074, 2.162872314453125, 2.158798933029175, 2.1547749042510986, 2.150799036026001, 2.1468710899353027, 2.1429898738861084, 2.139155149459839, 2.1353657245635986, 2.1316211223602295, 2.127920627593994, 2.1242637634277344, 2.120649576187134, 2.117077350616455, 2.113546848297119, 2.1100571155548096, -2.106607675552368, -2.1100571155548096, -2.113546848297119, -2.117077350616455, -2.120649576187134, -2.1242637634277344, -2.127920627593994, -2.1316211223602295, -2.1353657245635986, -2.139155149459839, -2.1429898738861084, -2.1468710899353027, -2.150799036026001, -2.1547749042510986, -2.158798933029175, -2.162872314453125, -2.1669955253601074, -2.1711695194244385, -2.1753950119018555, -2.1796727180480957, -2.1840035915374756, -2.1883885860443115, -2.192828416824341, -2.197323799133301, -2.201875686645508, -2.2064850330352783, -2.2111527919769287, -2.2158796787261963, -2.2206668853759766, -2.2255148887634277, -2.2304251194000244, -2.235398292541504, -2.2404353618621826, -2.245537281036377, -2.2507052421569824, -2.2559399604797363, -2.2612428665161133, -2.2666144371032715, -2.2720563411712646, -2.277569055557251, -2.283154010772705, -2.2888119220733643, -2.294544219970703, -2.300352096557617, -2.3062360286712646, -2.312197685241699, -2.3182380199432373, -2.3243582248687744, -2.330559015274048, -2.3368420600891113, -2.3432083129882812, -2.349658727645874, -2.356194496154785, -2.36281681060791, -2.3695271015167236, -2.376326084136963, -2.3832149505615234, -2.390194892883301, -2.3972673416137695, -2.404433012008667, -2.4116930961608887, -2.419048547744751, -2.4265010356903076, -2.434051036834717, -2.441699743270874, -2.449448347091675, -2.4572978019714355, -2.4652490615844727, -2.4733033180236816, -2.4814610481262207, -2.4897234439849854, -2.498091459274292, -2.506565809249878, -2.5151474475860596, -2.523836851119995, -2.532634973526001, -2.5415425300598145, -2.5505597591400146, -2.559687614440918, -2.5689263343811035, -2.5782763957977295, -2.587738275527954, -2.5973122119903564, -2.6069984436035156, -2.6167969703674316, -2.6267077922821045, -2.6367313861846924, -2.646867036819458, -2.6571147441864014, -2.6674742698669434, -2.677945137023926, -2.6885266304016113, -2.699218511581421, -2.710019588470459, -2.7209293842315674, -2.7319464683532715, -2.743070125579834, -2.7542991638183594, -2.765631675720215, -2.777066707611084, -2.788602352142334, -2.800236701965332, -2.8119683265686035, -2.8237946033477783, -2.8357138633728027, -2.8477232456207275, -2.85982084274292, -2.8720035552978516, -2.8842689990997314, -2.8966140747070312, -2.9090356826782227, -2.9215309619903564, -2.934096336364746, -2.9467287063598633, -2.9594242572784424, -2.972179651260376, -2.9849908351898193, -2.997853994369507, -3.010765314102173, -3.0237205028533936, -3.0367157459259033, -3.049746513366699, -3.0628087520599365, -3.0758979320526123, -3.0890095233917236, -3.102139472961426, -3.1152830123901367, -3.1284356117248535, 3.1415927410125732, 3.1282601356506348, 3.1149322986602783, 3.101613998413086, 3.0883097648620605, 3.0750246047973633, 3.061762571334839, 3.0485289096832275, 3.035327672958374, 3.0221636295318604, 3.0090410709381104, 2.995964288711548, 2.9829373359680176, 2.9699645042419434, 2.95704984664917, 2.944197177886963, 2.931410074234009, 2.9186923503875732, 2.9060475826263428, 2.893479108810425, 2.8809902667999268, 2.868583917617798, 2.8562631607055664, 2.8440308570861816, 2.8318896293640137, 2.8198421001434326, 2.8078904151916504, 2.796036958694458, 2.7842838764190674, 2.7726330757141113, 2.7610862255096436, 2.749645233154297, 2.738311290740967, 2.727085828781128, 2.715970277786255, 2.704965591430664, 2.694072723388672, 2.6832926273345947, 2.67262601852417, 2.6620733737945557, 2.6516354084014893, 2.6413121223449707, 2.6311042308807373, 2.621011734008789, 2.611034870147705, 2.601173162460327, 2.5914268493652344, 2.5817956924438477, 2.572279453277588, 2.562877655029297, 2.5535900592803955, 2.5444159507751465, 2.5353550910949707, 2.5264065265655518, 2.5175695419311523, 2.5088438987731934, 2.5002284049987793, 2.4917221069335938, 2.4833247661590576, 2.4750349521636963, 2.4668517112731934, 2.4587743282318115, 2.4508016109466553, 2.4429328441619873, 2.435166597366333, 2.427501916885376, 2.4199378490448, 2.41247296333313, 2.405106544494629, 2.3978371620178223, 2.3906636238098145, 2.383584976196289, 2.3765997886657715, 2.3697071075439453, 2.362905740737915, 2.356194496154785, 2.34957218170166, 2.3430373668670654, 2.3365890979766846, 2.330226421356201, 2.3239476680755615, 2.317751884460449, 2.311638116836548, 2.3056046962738037, 2.2996511459350586, 2.293775796890259, 2.287977457046509, 2.2822554111480713, 2.2766082286834717, 2.2710351943969727, 2.2655346393585205, 2.260105848312378, 2.2547476291656494, 2.2494587898254395, 2.2442386150360107, 2.2390856742858887, 2.233999252319336, 2.228978157043457, 2.2240216732025146, 2.219128370285034, 2.2142975330352783, 2.2095279693603516, 2.2048189640045166, 2.200169563293457, 2.1955788135528564, 2.1910457611083984, 2.1865694522857666, 2.1821491718292236, 2.177783966064453, 2.1734728813171387, 2.169215202331543, 2.1650099754333496, 2.1608564853668213, 2.1567540168762207, 2.1527013778686523, 2.148698329925537, 2.1447436809539795, 2.140836715698242, 2.136976957321167, 2.1331634521484375, 2.1293957233428955, 2.1256725788116455, 2.1219937801361084, 2.118358612060547, 2.1147661209106445, 2.111215829849243, 2.1077070236206055, 2.1042392253875732, -2.10081148147583, -2.1042392253875732, -2.1077070236206055, -2.111215829849243, -2.1147661209106445, -2.118358612060547, -2.1219937801361084, -2.1256725788116455, -2.1293957233428955, -2.1331634521484375, -2.136976957321167, -2.140836715698242, -2.1447436809539795, -2.148698329925537, -2.1527013778686523, -2.1567540168762207, -2.1608564853668213, -2.1650099754333496, -2.169215202331543, -2.1734728813171387, -2.177783966064453, -2.1821491718292236, -2.1865694522857666, -2.1910457611083984, -2.1955788135528564, -2.200169563293457, -2.2048189640045166, -2.2095279693603516, -2.2142975330352783, -2.219128370285034, -2.2240216732025146, -2.228978157043457, -2.233999252319336, -2.2390856742858887, -2.2442386150360107, -2.2494587898254395, -2.2547476291656494, -2.260105848312378, -2.2655346393585205, -2.2710351943969727, -2.2766082286834717, -2.2822554111480713, -2.287977457046509, -2.293775796890259, -2.2996511459350586, -2.3056046962738037, -2.311638116836548, -2.317751884460449, -2.3239476680755615, -2.330226421356201, -2.3365890979766846, -2.3430373668670654, -2.34957218170166, -2.356194496154785, -2.362905740737915, -2.3697071075439453, -2.3765997886657715, -2.383584976196289, -2.3906636238098145, -2.3978371620178223, -2.405106544494629, -2.41247296333313, -2.4199378490448, -2.427501916885376, -2.435166597366333, -2.4429328441619873, -2.4508016109466553, -2.4587743282318115, -2.4668517112731934, -2.4750349521636963, -2.4833247661590576, -2.4917221069335938, -2.5002284049987793, -2.5088438987731934, -2.5175695419311523, -2.5264065265655518, -2.5353550910949707, -2.5444159507751465, -2.5535900592803955, -2.562877655029297, -2.572279453277588, -2.5817956924438477, -2.5914268493652344, -2.601173162460327, -2.611034870147705, -2.621011734008789, -2.6311042308807373, -2.6413121223449707, -2.6516354084014893, -2.6620733737945557, -2.67262601852417, -2.6832926273345947, -2.694072723388672, -2.704965591430664, -2.715970277786255, -2.727085828781128, -2.738311290740967, -2.749645233154297, -2.7610862255096436, -2.7726330757141113, -2.7842838764190674, -2.796036958694458, -2.8078904151916504, -2.8198421001434326, -2.8318896293640137, -2.8440308570861816, -2.8562631607055664, -2.868583917617798, -2.8809902667999268, -2.893479108810425, -2.9060475826263428, -2.9186923503875732, -2.931410074234009, -2.944197177886963, -2.95704984664917, -2.9699645042419434, -2.9829373359680176, -2.995964288711548, -3.0090410709381104, -3.0221636295318604, -3.035327672958374, -3.0485289096832275, -3.061762571334839, -3.0750246047973633, -3.0883097648620605, -3.101613998413086, -3.1149322986602783, -3.1282601356506348, 3.1415927410125732, 3.128079891204834, 3.114572286605835, 3.10107421875, 3.0875911712646484, 3.074127674102783, 3.0606884956359863, 3.047278642654419, 3.033902883529663, 3.0205655097961426, 3.0072712898254395, 2.9940245151519775, 2.980829954147339, 2.967691421508789, 2.954613447189331, 2.9415996074676514, 2.928654193878174, 2.915781021118164, 2.9029834270477295, 2.8902649879455566, 2.877629041671753, 2.8650786876678467, 2.8526172637939453, 2.840247392654419, 2.827971935272217, 2.815793514251709, 2.8037145137786865, 2.7917370796203613, 2.7798633575439453, 2.7680954933166504, 2.7564351558685303, 2.7448840141296387, 2.73344349861145, 2.7221152782440186, 2.710900068283081, 2.6997995376586914, 2.688814163208008, 2.677945137023926, 2.6671926975250244, 2.656558036804199, 2.646040916442871, 2.6356422901153564, 2.625361919403076, 2.6152002811431885, 2.6051571369171143, 2.5952327251434326, 2.5854263305664062, 2.5757384300231934, 2.5661680698394775, 2.5567150115966797, 2.5473790168762207, 2.538159132003784, 2.529055118560791, 2.520066022872925, 2.5111911296844482, 2.502429962158203, 2.493781328201294, 2.4852442741394043, 2.476818084716797, 2.4685018062591553, 2.460294485092163, 2.4521946907043457, 2.444201946258545, 2.436314582824707, 2.4285318851470947, 2.4208524227142334, 2.4132752418518066, 2.405799150466919, 2.398422956466675, 2.3911452293395996, 2.383965015411377, 2.3768811225891113, 2.3698923587799072, 2.362997055053711, 2.356194496154785, 2.3494832515716553, 2.3428618907928467, 2.336329460144043, 2.3298847675323486, 2.323526382446289, 2.3172531127929688, 2.311063766479492, 2.304957389831543, 2.2989323139190674, 2.292987585067749, 2.2871222496032715, 2.281334638595581, 2.2756240367889404, 2.269989013671875, 2.2644283771514893, 2.258941173553467, 2.253526449203491, 2.248182773590088, 2.2429091930389404, 2.2377045154571533, 2.23256778717041, 2.2274980545043945, 2.222493886947632, 2.217554807662964, 2.212679386138916, 2.207866668701172, 2.203115701675415, 2.198425769805908, 2.193795680999756, 2.1892242431640625, 2.18471097946167, 2.1802549362182617, 2.1758549213409424, 2.1715102195739746, 2.167219877243042, 2.162982940673828, 2.158798933029175, 2.1546666622161865, 2.150585651397705, 2.146554708480835, 2.142573118209839, 2.1386404037475586, 2.1347553730010986, 2.13091778755188, 2.127126455307007, 2.123380661010742, 2.1196799278259277, 2.116023540496826, 2.112410545349121, 2.1088404655456543, 2.1053128242492676, 2.1018264293670654, 2.0983810424804688, -2.0949759483337402, -2.0983810424804688, -2.1018264293670654, -2.1053128242492676, -2.1088404655456543, -2.112410545349121, -2.116023540496826, -2.1196799278259277, -2.123380661010742, -2.127126455307007, -2.13091778755188, -2.1347553730010986, -2.1386404037475586, -2.142573118209839, -2.146554708480835, -2.150585651397705, -2.1546666622161865, -2.158798933029175, -2.162982940673828, -2.167219877243042, -2.1715102195739746, -2.1758549213409424, -2.1802549362182617, -2.18471097946167, -2.1892242431640625, -2.193795680999756, -2.198425769805908, -2.203115701675415, -2.207866668701172, -2.212679386138916, -2.217554807662964, -2.222493886947632, -2.2274980545043945, -2.23256778717041, -2.2377045154571533, -2.2429091930389404, -2.248182773590088, -2.253526449203491, -2.258941173553467, -2.2644283771514893, -2.269989013671875, -2.2756240367889404, -2.281334638595581, -2.2871222496032715, -2.292987585067749, -2.2989323139190674, -2.304957389831543, -2.311063766479492, -2.3172531127929688, -2.323526382446289, -2.3298847675323486, -2.336329460144043, -2.3428618907928467, -2.3494832515716553, -2.356194496154785, -2.362997055053711, -2.3698923587799072, -2.3768811225891113, -2.383965015411377, -2.3911452293395996, -2.398422956466675, -2.405799150466919, -2.4132752418518066, -2.4208524227142334, -2.4285318851470947, -2.436314582824707, -2.444201946258545, -2.4521946907043457, -2.460294485092163, -2.4685018062591553, -2.476818084716797, -2.4852442741394043, -2.493781328201294, -2.502429962158203, -2.5111911296844482, -2.520066022872925, -2.529055118560791, -2.538159132003784, -2.5473790168762207, -2.5567150115966797, -2.5661680698394775, -2.5757384300231934, -2.5854263305664062, -2.5952327251434326, -2.6051571369171143, -2.6152002811431885, -2.625361919403076, -2.6356422901153564, -2.646040916442871, -2.656558036804199, -2.6671926975250244, -2.677945137023926, -2.688814163208008, -2.6997995376586914, -2.710900068283081, -2.7221152782440186, -2.73344349861145, -2.7448840141296387, -2.7564351558685303, -2.7680954933166504, -2.7798633575439453, -2.7917370796203613, -2.8037145137786865, -2.815793514251709, -2.827971935272217, -2.840247392654419, -2.8526172637939453, -2.8650786876678467, -2.877629041671753, -2.8902649879455566, -2.9029834270477295, -2.915781021118164, -2.928654193878174, -2.9415996074676514, -2.954613447189331, -2.967691421508789, -2.980829954147339, -2.9940245151519775, -3.0072712898254395, -3.0205655097961426, -3.033902883529663, -3.047278642654419, -3.0606884956359863, -3.074127674102783, -3.0875911712646484, -3.10107421875, -3.114572286605835, -3.128079891204834, 3.1415927410125732, 3.127894878387451, 3.1142022609710693, 3.100519895553589, 3.086852788925171, 3.0732064247131348, 3.0595850944519043, 3.045994520187378, 3.0324392318725586, 3.0189239978790283, 3.005453586578369, 2.992033004760742, 2.978666305541992, 2.965358018875122, 2.9521124362945557, 2.938934087753296, 2.9258265495300293, 2.9127938747406006, 2.8998398780822754, 2.886967897415161, 2.8741817474365234, 2.8614847660064697, 2.84887957572937, 2.836369514465332, 2.8239572048187256, 2.8116455078125, 2.7994368076324463, 2.7873332500457764, 2.775336980819702, 2.7634503841400146, 2.7516748905181885, 2.7400121688842773, 2.728463888168335, 2.717031240463257, 2.7057156562805176, 2.6945180892944336, 2.6834394931793213, 2.672480583190918, 2.661642074584961, 2.6509246826171875, 2.6403284072875977, 2.6298537254333496, 2.6195011138916016, 2.6092700958251953, 2.599161148071289, 2.5891737937927246, 2.579307794570923, 2.569563150405884, 2.55993914604187, 2.5504355430603027, 2.5410516262054443, 2.5317866802215576, 2.5226402282714844, 2.513611316680908, 2.504699468612671, 2.495903253555298, 2.48722243309021, 2.4786555767059326, 2.4702017307281494, 2.461860179901123, 2.4536292552948, 2.4455084800720215, 2.4374964237213135, 2.4295918941497803, 2.4217936992645264, 2.4141006469726562, 2.4065117835998535, 2.3990254402160645, 2.3916406631469727, 2.3843560218811035, 2.3771703243255615, 2.370082378387451, 2.363090991973877, 2.356194496154785, 2.3493919372558594, 2.342681884765625, 2.3360629081726074, 2.3295340538024902, 2.323093891143799, 2.3167412281036377, 2.3104746341705322, 2.304293155670166, 2.2981951236724854, 2.292179584503174, 2.286245107650757, 2.280390739440918, 2.2746150493621826, 2.2689168453216553, 2.2632949352264404, 2.2577483654022217, 2.2522757053375244, 2.2468760013580322, 2.2415478229522705, 2.236290454864502, 2.231102466583252, 2.225983142852783, 2.220930814743042, 2.215944766998291, 2.211024045944214, 2.206167459487915, 2.201374053955078, 2.1966428756713867, 2.191972494125366, 2.1873626708984375, 2.182811737060547, 2.178319215774536, 2.1738839149475098, 2.1695051193237305, 2.165181875228882, 2.1609129905700684, 2.156697988510132, 2.152535915374756, 2.148425817489624, 2.144366979598999, 2.1403584480285645, 2.136399507522583, 2.1324892044067383, 2.128627061843872, 2.124812126159668, 2.1210434436798096, 2.1173207759857178, 2.113642930984497, 2.1100096702575684, 2.106419801712036, 2.102872848510742, 2.099368095397949, 2.09590482711792, 2.092482566833496, -2.0891005992889404, -2.092482566833496, -2.09590482711792, -2.099368095397949, -2.102872848510742, -2.106419801712036, -2.1100096702575684, -2.113642930984497, -2.1173207759857178, -2.1210434436798096, -2.124812126159668, -2.128627061843872, -2.1324892044067383, -2.136399507522583, -2.1403584480285645, -2.144366979598999, -2.148425817489624, -2.152535915374756, -2.156697988510132, -2.1609129905700684, -2.165181875228882, -2.1695051193237305, -2.1738839149475098, -2.178319215774536, -2.182811737060547, -2.1873626708984375, -2.191972494125366, -2.1966428756713867, -2.201374053955078, -2.206167459487915, -2.211024045944214, -2.215944766998291, -2.220930814743042, -2.225983142852783, -2.231102466583252, -2.236290454864502, -2.2415478229522705, -2.2468760013580322, -2.2522757053375244, -2.2577483654022217, -2.2632949352264404, -2.2689168453216553, -2.2746150493621826, -2.280390739440918, -2.286245107650757, -2.292179584503174, -2.2981951236724854, -2.304293155670166, -2.3104746341705322, -2.3167412281036377, -2.323093891143799, -2.3295340538024902, -2.3360629081726074, -2.342681884765625, -2.3493919372558594, -2.356194496154785, -2.363090991973877, -2.370082378387451, -2.3771703243255615, -2.3843560218811035, -2.3916406631469727, -2.3990254402160645, -2.4065117835998535, -2.4141006469726562, -2.4217936992645264, -2.4295918941497803, -2.4374964237213135, -2.4455084800720215, -2.4536292552948, -2.461860179901123, -2.4702017307281494, -2.4786555767059326, -2.48722243309021, -2.495903253555298, -2.504699468612671, -2.513611316680908, -2.5226402282714844, -2.5317866802215576, -2.5410516262054443, -2.5504355430603027, -2.55993914604187, -2.569563150405884, -2.579307794570923, -2.5891737937927246, -2.599161148071289, -2.6092700958251953, -2.6195011138916016, -2.6298537254333496, -2.6403284072875977, -2.6509246826171875, -2.661642074584961, -2.672480583190918, -2.6834394931793213, -2.6945180892944336, -2.7057156562805176, -2.717031240463257, -2.728463888168335, -2.7400121688842773, -2.7516748905181885, -2.7634503841400146, -2.775336980819702, -2.7873332500457764, -2.7994368076324463, -2.8116455078125, -2.8239572048187256, -2.836369514465332, -2.84887957572937, -2.8614847660064697, -2.8741817474365234, -2.886967897415161, -2.8998398780822754, -2.9127938747406006, -2.9258265495300293, -2.938934087753296, -2.9521124362945557, -2.965358018875122, -2.978666305541992, -2.992033004760742, -3.005453586578369, -3.0189239978790283, -3.0324392318725586, -3.045994520187378, -3.0595850944519043, -3.0732064247131348, -3.086852788925171, -3.100519895553589, -3.1142022609710693, -3.127894878387451, 3.1415927410125732, 3.127704620361328, 3.1138219833374023, 3.099950075149536, 3.0860941410064697, 3.0722594261169434, 3.0584514141082764, 3.04467511177063, 3.030935525894165, 3.017237663269043, 3.003586530685425, 2.9899871349334717, 2.9764440059661865, 2.9629616737365723, 2.949544668197632, 2.936197280883789, 2.9229238033294678, 2.9097280502319336, 2.8966140747070312, 2.8835854530334473, 2.870645761489868, 2.8577985763549805, 2.8450467586517334, 2.8323936462402344, 2.8198421001434326, 2.807394504547119, 2.795053720474243, 2.7828218936920166, 2.7707014083862305, 2.7586939334869385, 2.7468016147613525, 2.7350258827209473, 2.7233684062957764, 2.7118303775787354, 2.700413227081299, 2.689117670059204, 2.677945137023926, 2.666895866394043, 2.655970573425293, 2.645169973373413, 2.6344940662384033, 2.623943567276001, 2.613518238067627, 2.6032180786132812, 2.593043327331543, 2.582993268966675, 2.573068141937256, 2.563267230987549, 2.5535900592803955, 2.5440361499786377, 2.534605026245117, 2.5252957344055176, 2.5161075592041016, 2.507039785385132, 2.498091459274292, 2.4892618656158447, 2.4805495738983154, 2.4719536304473877, 2.463473320007324, 2.4551072120666504, 2.44685435295105, 2.438713550567627, 2.4306833744049072, 2.422762632369995, 2.414950370788574, 2.407244920730591, 2.3996453285217285, 2.3921501636505127, 2.384758234024048, 2.3774678707122803, 2.3702781200408936, 2.363187313079834, 2.356194496154785, 2.3492980003356934, 2.342496633529663, 2.335789203643799, 2.329174041748047, 2.3226499557495117, 2.316215753555298, 2.3098700046539307, 2.3036115169525146, 2.297438621520996, 2.2913503646850586, 2.2853455543518066, 2.2794225215911865, 2.273580312728882, 2.267817735671997, 2.2621333599090576, 2.256525754928589, 2.2509942054748535, 2.245537281036377, 2.2401537895202637, 2.234842538833618, 2.229602336883545, 2.2244322299957275, 2.2193310260772705, 2.2142975330352783, 2.2093305587768555, 2.2044293880462646, 2.1995925903320312, 2.194819450378418, 2.19010853767395, 2.1854593753814697, 2.180870294570923, 2.1763410568237305, 2.171869993209839, 2.16745662689209, 2.163100004196167, 2.158798933029175, 2.154552698135376, 2.150360345840454, 2.1462209224700928, 2.1421337127685547, 2.1380980014801025, 2.134112596511841, 2.1301767826080322, 2.1262900829315186, 2.1224513053894043, 2.1186599731445312, 2.114914894104004, 2.111215829849243, 2.1075618267059326, 2.103951930999756, 2.100385904312134, 2.09686279296875, 2.093381881713867, 2.089942455291748, 2.0865440368652344, -2.0831856727600098, -2.0865440368652344, -2.089942455291748, -2.093381881713867, -2.09686279296875, -2.100385904312134, -2.103951930999756, -2.1075618267059326, -2.111215829849243, -2.114914894104004, -2.1186599731445312, -2.1224513053894043, -2.1262900829315186, -2.1301767826080322, -2.134112596511841, -2.1380980014801025, -2.1421337127685547, -2.1462209224700928, -2.150360345840454, -2.154552698135376, -2.158798933029175, -2.163100004196167, -2.16745662689209, -2.171869993209839, -2.1763410568237305, -2.180870294570923, -2.1854593753814697, -2.19010853767395, -2.194819450378418, -2.1995925903320312, -2.2044293880462646, -2.2093305587768555, -2.2142975330352783, -2.2193310260772705, -2.2244322299957275, -2.229602336883545, -2.234842538833618, -2.2401537895202637, -2.245537281036377, -2.2509942054748535, -2.256525754928589, -2.2621333599090576, -2.267817735671997, -2.273580312728882, -2.2794225215911865, -2.2853455543518066, -2.2913503646850586, -2.297438621520996, -2.3036115169525146, -2.3098700046539307, -2.316215753555298, -2.3226499557495117, -2.329174041748047, -2.335789203643799, -2.342496633529663, -2.3492980003356934, -2.356194496154785, -2.363187313079834, -2.3702781200408936, -2.3774678707122803, -2.384758234024048, -2.3921501636505127, -2.3996453285217285, -2.407244920730591, -2.414950370788574, -2.422762632369995, -2.4306833744049072, -2.438713550567627, -2.44685435295105, -2.4551072120666504, -2.463473320007324, -2.4719536304473877, -2.4805495738983154, -2.4892618656158447, -2.498091459274292, -2.507039785385132, -2.5161075592041016, -2.5252957344055176, -2.534605026245117, -2.5440361499786377, -2.5535900592803955, -2.563267230987549, -2.573068141937256, -2.582993268966675, -2.593043327331543, -2.6032180786132812, -2.613518238067627, -2.623943567276001, -2.6344940662384033, -2.645169973373413, -2.655970573425293, -2.666895866394043, -2.677945137023926, -2.689117670059204, -2.700413227081299, -2.7118303775787354, -2.7233684062957764, -2.7350258827209473, -2.7468016147613525, -2.7586939334869385, -2.7707014083862305, -2.7828218936920166, -2.795053720474243, -2.807394504547119, -2.8198421001434326, -2.8323936462402344, -2.8450467586517334, -2.8577985763549805, -2.870645761489868, -2.8835854530334473, -2.8966140747070312, -2.9097280502319336, -2.9229238033294678, -2.936197280883789, -2.949544668197632, -2.9629616737365723, -2.9764440059661865, -2.9899871349334717, -3.003586530685425, -3.017237663269043, -3.030935525894165, -3.04467511177063, -3.0584514141082764, -3.0722594261169434, -3.0860941410064697, -3.099950075149536, -3.1138219833374023, -3.127704620361328, 3.1415927410125732, 3.127509117126465, 3.113430976867676, 3.0993642807006836, 3.0853140354156494, 3.071286201477051, 3.057286024093628, 3.043318748474121, 3.0293898582458496, 3.0155045986175537, 3.0016679763793945, 2.9878852367401123, 2.97416090965271, 2.9605000019073486, 2.9469070434570312, 2.93338680267334, 2.91994309425354, 2.9065804481506348, 2.8933026790618896, 2.8801138401031494, 2.8670172691345215, 2.8540167808532715, 2.8411154747009277, 2.8283164501190186, 2.8156228065490723, 2.80303692817688, 2.7905616760253906, 2.7781994342803955, 2.7659523487091064, 2.7538225650787354, 2.741811513900757, 2.729921340942383, 2.718153238296509, 2.7065086364746094, 2.694988965988159, 2.6835947036743164, 2.6723270416259766, 2.661186933517456, 2.650174379348755, 2.6392903327941895, 2.6285347938537598, 2.617908000946045, 2.607410192489624, 2.597040891647339, 2.5868003368377686, 2.576688289642334, 2.566704034805298, 2.556847333908081, 2.5471177101135254, 2.5375142097473145, 2.528036594390869, 2.518683671951294, 2.5094547271728516, 2.5003488063812256, 2.4913651943206787, 2.4825026988983154, 2.4737601280212402, 2.4651365280151367, 2.4566307067871094, 2.4482412338256836, 2.439967393875122, 2.431807518005371, 2.4237606525421143, 2.415825128555298, 2.4079999923706055, 2.4002835750579834, 2.392674684524536, 2.385171890258789, 2.3777737617492676, 2.3704793453216553, 2.3632864952087402, 2.356194496154785, 2.3492016792297363, 2.34230637550354, 2.335507869720459, 2.3288040161132812, 2.3221940994262695, 2.315676212310791, 2.30924916267395, 2.3029115200042725, 2.2966623306274414, 2.290499687194824, 2.2844226360321045, 2.2784295082092285, 2.27251935005188, 2.266690731048584, 2.260942220687866, 2.255272626876831, 2.249680995941162, 2.2441654205322266, 2.238725423812866, 2.2333593368530273, 2.2280659675598145, 2.222844123840332, 2.2176930904388428, 2.212611198425293, 2.207597255706787, 2.202650785446167, 2.197770118713379, 2.1929543018341064, 2.188202142715454, 2.1835129261016846, 2.1788854598999023, 2.174318790435791, 2.169811725616455, 2.165363311767578, 2.160972833633423, 2.1566390991210938, 2.1523611545562744, 2.1481382846832275, 2.1439695358276367, 2.1398537158966064, 2.1357903480529785, 2.1317784786224365, 2.127817153930664, 2.1239054203033447, 2.1200428009033203, 2.1162283420562744, 2.1124610900878906, 2.1087405681610107, 2.1050658226013184, 2.101436138153076, 2.097850799560547, 2.0943093299865723, 2.090810537338257, 2.0873539447784424, 2.0839390754699707, 2.0805649757385254, -2.0772311687469482, -2.0805649757385254, -2.0839390754699707, -2.0873539447784424, -2.090810537338257, -2.0943093299865723, -2.097850799560547, -2.101436138153076, -2.1050658226013184, -2.1087405681610107, -2.1124610900878906, -2.1162283420562744, -2.1200428009033203, -2.1239054203033447, -2.127817153930664, -2.1317784786224365, -2.1357903480529785, -2.1398537158966064, -2.1439695358276367, -2.1481382846832275, -2.1523611545562744, -2.1566390991210938, -2.160972833633423, -2.165363311767578, -2.169811725616455, -2.174318790435791, -2.1788854598999023, -2.1835129261016846, -2.188202142715454, -2.1929543018341064, -2.197770118713379, -2.202650785446167, -2.207597255706787, -2.212611198425293, -2.2176930904388428, -2.222844123840332, -2.2280659675598145, -2.2333593368530273, -2.238725423812866, -2.2441654205322266, -2.249680995941162, -2.255272626876831, -2.260942220687866, -2.266690731048584, -2.27251935005188, -2.2784295082092285, -2.2844226360321045, -2.290499687194824, -2.2966623306274414, -2.3029115200042725, -2.30924916267395, -2.315676212310791, -2.3221940994262695, -2.3288040161132812, -2.335507869720459, -2.34230637550354, -2.3492016792297363, -2.356194496154785, -2.3632864952087402, -2.3704793453216553, -2.3777737617492676, -2.385171890258789, -2.392674684524536, -2.4002835750579834, -2.4079999923706055, -2.415825128555298, -2.4237606525421143, -2.431807518005371, -2.439967393875122, -2.4482412338256836, -2.4566307067871094, -2.4651365280151367, -2.4737601280212402, -2.4825026988983154, -2.4913651943206787, -2.5003488063812256, -2.5094547271728516, -2.518683671951294, -2.528036594390869, -2.5375142097473145, -2.5471177101135254, -2.556847333908081, -2.566704034805298, -2.576688289642334, -2.5868003368377686, -2.597040891647339, -2.607410192489624, -2.617908000946045, -2.6285347938537598, -2.6392903327941895, -2.650174379348755, -2.661186933517456, -2.6723270416259766, -2.6835947036743164, -2.694988965988159, -2.7065086364746094, -2.718153238296509, -2.729921340942383, -2.741811513900757, -2.7538225650787354, -2.7659523487091064, -2.7781994342803955, -2.7905616760253906, -2.80303692817688, -2.8156228065490723, -2.8283164501190186, -2.8411154747009277, -2.8540167808532715, -2.8670172691345215, -2.8801138401031494, -2.8933026790618896, -2.9065804481506348, -2.91994309425354, -2.93338680267334, -2.9469070434570312, -2.9605000019073486, -2.97416090965271, -2.9878852367401123, -3.0016679763793945, -3.0155045986175537, -3.0293898582458496, -3.043318748474121, -3.057286024093628, -3.071286201477051, -3.0853140354156494, -3.0993642807006836, -3.113430976867676, -3.127509117126465, 3.1415927410125732, 3.127307891845703, 3.1130290031433105, 3.098761796951294, 3.0845117568969727, 3.0702850818634033, 3.0560872554779053, 3.041923999786377, 3.0278005599975586, 3.0137226581573486, 2.9996955394744873, 2.985724449157715, 2.9718143939971924, 2.957970380783081, 2.944197177886963, 2.930499315261841, 2.916881561279297, 2.903347969055176, 2.8899025917053223, 2.87654972076416, 2.863292932510376, 2.8501358032226562, 2.8370816707611084, 2.82413387298584, 2.8112952709198, 2.7985687255859375, 2.785956859588623, 2.7734618186950684, 2.7610862255096436, 2.7488319873809814, 2.7367007732391357, 2.7246944904327393, 2.7128145694732666, 2.7010622024536133, 2.689438819885254, 2.677945137023926, 2.666581869125366, 2.6553499698638916, 2.64424991607666, 2.633281946182251, 2.6224465370178223, 2.611743688583374, 2.601173162460327, 2.5907351970672607, 2.5804293155670166, 2.5702552795410156, 2.5602123737335205, 2.5503005981445312, 2.5405189990997314, 2.5308666229248047, 2.521343231201172, 2.5119473934173584, 2.502678632736206, 2.4935357570648193, 2.484517812728882, 2.475623369216919, 2.4668517112731934, 2.4582014083862305, 2.4496712684631348, 2.4412600994110107, 2.432966470718384, 2.4247889518737793, 2.416726589202881, 2.4087774753570557, 2.4009406566619873, 2.393214702606201, 2.3855977058410645, 2.3780887126922607, 2.3706862926483154, 2.3633885383605957, 2.356194496154785, 2.34910249710083, 2.3421108722686768, 2.3352184295654297, 2.3284237384796143, 2.321725368499756, 2.315121650695801, 2.3086113929748535, 2.3021929264068604, 2.295865058898926, 2.289626359939575, 2.283475160598755, 2.2774105072021484, 2.271430730819702, 2.2655346393585205, 2.259720802307129, 2.2539877891540527, 2.2483344078063965, 2.2427594661712646, 2.2372615337371826, 2.231839418411255, 2.226491928100586, 2.221217632293701, 2.216015577316284, 2.2108845710754395, 2.2058229446411133, 2.2008302211761475, 2.1959049701690674, 2.1910457611083984, 2.1862518787384033, 2.1815223693847656, 2.1768555641174316, 2.172250986099243, 2.1677074432373047, 2.1632237434387207, 2.158798933029175, 2.1544320583343506, 2.1501224040985107, 2.1458685398101807, 2.141669988632202, 2.1375255584716797, 2.133434295654297, 2.1293957233428955, 2.125408411026001, 2.121471881866455, 2.1175851821899414, 2.1137473583221436, 2.1099579334259033, 2.1062159538269043, 2.10252046585083, 2.0988707542419434, 2.095266342163086, 2.0917060375213623, 2.0881896018981934, 2.0847160816192627, 2.081284761428833, 2.077894926071167, 2.0745458602905273, -2.071237087249756, -2.0745458602905273, -2.077894926071167, -2.081284761428833, -2.0847160816192627, -2.0881896018981934, -2.0917060375213623, -2.095266342163086, -2.0988707542419434, -2.10252046585083, -2.1062159538269043, -2.1099579334259033, -2.1137473583221436, -2.1175851821899414, -2.121471881866455, -2.125408411026001, -2.1293957233428955, -2.133434295654297, -2.1375255584716797, -2.141669988632202, -2.1458685398101807, -2.1501224040985107, -2.1544320583343506, -2.158798933029175, -2.1632237434387207, -2.1677074432373047, -2.172250986099243, -2.1768555641174316, -2.1815223693847656, -2.1862518787384033, -2.1910457611083984, -2.1959049701690674, -2.2008302211761475, -2.2058229446411133, -2.2108845710754395, -2.216015577316284, -2.221217632293701, -2.226491928100586, -2.231839418411255, -2.2372615337371826, -2.2427594661712646, -2.2483344078063965, -2.2539877891540527, -2.259720802307129, -2.2655346393585205, -2.271430730819702, -2.2774105072021484, -2.283475160598755, -2.289626359939575, -2.295865058898926, -2.3021929264068604, -2.3086113929748535, -2.315121650695801, -2.321725368499756, -2.3284237384796143, -2.3352184295654297, -2.3421108722686768, -2.34910249710083, -2.356194496154785, -2.3633885383605957, -2.3706862926483154, -2.3780887126922607, -2.3855977058410645, -2.393214702606201, -2.4009406566619873, -2.4087774753570557, -2.416726589202881, -2.4247889518737793, -2.432966470718384, -2.4412600994110107, -2.4496712684631348, -2.4582014083862305, -2.4668517112731934, -2.475623369216919, -2.484517812728882, -2.4935357570648193, -2.502678632736206, -2.5119473934173584, -2.521343231201172, -2.5308666229248047, -2.5405189990997314, -2.5503005981445312, -2.5602123737335205, -2.5702552795410156, -2.5804293155670166, -2.5907351970672607, -2.601173162460327, -2.611743688583374, -2.6224465370178223, -2.633281946182251, -2.64424991607666, -2.6553499698638916, -2.666581869125366, -2.677945137023926, -2.689438819885254, -2.7010622024536133, -2.7128145694732666, -2.7246944904327393, -2.7367007732391357, -2.7488319873809814, -2.7610862255096436, -2.7734618186950684, -2.785956859588623, -2.7985687255859375, -2.8112952709198, -2.82413387298584, -2.8370816707611084, -2.8501358032226562, -2.863292932510376, -2.87654972076416, -2.8899025917053223, -2.903347969055176, -2.916881561279297, -2.930499315261841, -2.944197177886963, -2.957970380783081, -2.9718143939971924, -2.985724449157715, -2.9996955394744873, -3.0137226581573486, -3.0278005599975586, -3.041923999786377, -3.0560872554779053, -3.0702850818634033, -3.0845117568969727, -3.098761796951294, -3.1130290031433105, -3.127307891845703, 3.1415927410125732, 3.127100944519043, 3.1126153469085693, 3.098141670227051, 3.083686351776123, 3.0692553520202637, 3.054854393005371, 3.0404891967773438, 3.0261659622192383, 3.011890172958374, 2.9976673126220703, 2.9835026264190674, 2.9694018363952637, 2.955369710922241, 2.9414114952087402, 2.9275319576263428, 2.9137356281280518, 2.90002703666687, 2.8864102363586426, 2.872889518737793, 2.859468936920166, 2.846151828765869, 2.832941770553589, 2.8198421001434326, 2.8068559169769287, 2.7939858436584473, 2.7812347412109375, 2.7686049938201904, 2.756098747253418, 2.743718385696411, 2.7314653396606445, 2.719341516494751, 2.707348346710205, 2.6954870223999023, 2.6837589740753174, 2.6721646785736084, 2.660705327987671, 2.649381399154663, 2.638193368911743, 2.627141237258911, 2.6162257194519043, 2.6054465770721436, 2.594803810119629, 2.5842971801757812, 2.5739262104034424, 2.563690662384033, 2.5535900592803955, 2.543623685836792, 2.5337905883789062, 2.524090528488159, 2.514522075653076, 2.50508451461792, 2.495776653289795, 2.486597776412964, 2.477546453475952, 2.4686217308044434, 2.459821939468384, 2.451146125793457, 2.4425930976867676, 2.4341611862182617, 2.425848960876465, 2.4176554679870605, 2.409578800201416, 2.4016177654266357, 2.393770694732666, 2.3860363960266113, 2.378412961959839, 2.370899200439453, 2.3634936809539795, 2.356194496154785, 2.3490004539489746, 2.341909646987915, 2.33492112159729, 2.328032970428467, 2.3212437629699707, 2.314551830291748, 2.3079559803009033, 2.301454782485962, 2.295046329498291, 2.288729429244995, 2.2825026512145996, 2.27636456489563, 2.2703135013580322, 2.264348268508911, 2.258467674255371, 2.2526698112487793, 2.2469537258148193, 2.2413179874420166, 2.2357609272003174, 2.2302818298339844, 2.224879026412964, 2.2195513248443604, 2.2142975330352783, 2.209116220474243, 2.2040061950683594, 2.1989665031433105, 2.193995714187622, 2.1890926361083984, 2.1842563152313232, 2.179485559463501, 2.1747794151306152, 2.1701362133026123, 2.165555477142334, 2.1610360145568848, 2.156576633453369, 2.15217661857605, 2.147834539413452, 2.143549680709839, 2.1393208503723145, 2.1351473331451416, 2.131028175354004, 2.126962661743164, 2.1229493618011475, 2.118987798690796, 2.115076780319214, 2.111215829849243, 2.1074039936065674, 2.10364031791687, 2.099923849105835, 2.096254348754883, 2.092630624771118, 2.0890519618988037, 2.085517644882202, 2.082026958465576, 2.0785791873931885, 2.075173854827881, 2.071809768676758, 2.068486452102661, -2.0652034282684326, -2.068486452102661, -2.071809768676758, -2.075173854827881, -2.0785791873931885, -2.082026958465576, -2.085517644882202, -2.0890519618988037, -2.092630624771118, -2.096254348754883, -2.099923849105835, -2.10364031791687, -2.1074039936065674, -2.111215829849243, -2.115076780319214, -2.118987798690796, -2.1229493618011475, -2.126962661743164, -2.131028175354004, -2.1351473331451416, -2.1393208503723145, -2.143549680709839, -2.147834539413452, -2.15217661857605, -2.156576633453369, -2.1610360145568848, -2.165555477142334, -2.1701362133026123, -2.1747794151306152, -2.179485559463501, -2.1842563152313232, -2.1890926361083984, -2.193995714187622, -2.1989665031433105, -2.2040061950683594, -2.209116220474243, -2.2142975330352783, -2.2195513248443604, -2.224879026412964, -2.2302818298339844, -2.2357609272003174, -2.2413179874420166, -2.2469537258148193, -2.2526698112487793, -2.258467674255371, -2.264348268508911, -2.2703135013580322, -2.27636456489563, -2.2825026512145996, -2.288729429244995, -2.295046329498291, -2.301454782485962, -2.3079559803009033, -2.314551830291748, -2.3212437629699707, -2.328032970428467, -2.33492112159729, -2.341909646987915, -2.3490004539489746, -2.356194496154785, -2.3634936809539795, -2.370899200439453, -2.378412961959839, -2.3860363960266113, -2.393770694732666, -2.4016177654266357, -2.409578800201416, -2.4176554679870605, -2.425848960876465, -2.4341611862182617, -2.4425930976867676, -2.451146125793457, -2.459821939468384, -2.4686217308044434, -2.477546453475952, -2.486597776412964, -2.495776653289795, -2.50508451461792, -2.514522075653076, -2.524090528488159, -2.5337905883789062, -2.543623685836792, -2.5535900592803955, -2.563690662384033, -2.5739262104034424, -2.5842971801757812, -2.594803810119629, -2.6054465770721436, -2.6162257194519043, -2.627141237258911, -2.638193368911743, -2.649381399154663, -2.660705327987671, -2.6721646785736084, -2.6837589740753174, -2.6954870223999023, -2.707348346710205, -2.719341516494751, -2.7314653396606445, -2.743718385696411, -2.756098747253418, -2.7686049938201904, -2.7812347412109375, -2.7939858436584473, -2.8068559169769287, -2.8198421001434326, -2.832941770553589, -2.846151828765869, -2.859468936920166, -2.872889518737793, -2.8864102363586426, -2.90002703666687, -2.9137356281280518, -2.9275319576263428, -2.9414114952087402, -2.955369710922241, -2.9694018363952637, -2.9835026264190674, -2.9976673126220703, -3.011890172958374, -3.0261659622192383, -3.0404891967773438, -3.054854393005371, -3.0692553520202637, -3.083686351776123, -3.098141670227051, -3.1126153469085693, -3.127100944519043, 3.1415927410125732, 3.126887798309326, 3.112189292907715, 3.097503662109375, 3.082836866378784, 3.068195343017578, 3.0535852909088135, 3.039012908935547, 3.0244839191436768, 3.0100045204162598, 2.9955804347991943, 2.9812171459198, 2.9669203758239746, 2.952695369720459, 2.938547372817993, 2.9244813919067383, 2.9105019569396973, 2.8966140747070312, 2.882821798324585, 2.8691294193267822, 2.855541229248047, 2.8420605659484863, 2.8286914825439453, 2.815436840057373, 2.802299976348877, 2.7892839908599854, 2.7763912677764893, 2.763624429702759, 2.750985622406006, 2.7384769916534424, 2.726100444793701, 2.713857650756836, 2.7017500400543213, 2.6897788047790527, 2.677945137023926, 2.6662497520446777, 2.654693365097046, 2.6432769298553467, 2.63200044631958, 2.620864152908325, 2.6098685264587402, 2.599013328552246, 2.5882983207702637, 2.577723264694214, 2.5672879219055176, 2.5569913387298584, 2.5468335151672363, 2.5368130207061768, 2.5269296169281006, 2.5171823501586914, 2.5075700283050537, 2.498091459274292, 2.488745927810669, 2.479532241821289, 2.4704487323760986, 2.4614946842193604, 2.4526681900024414, 2.4439682960510254, 2.4353935718536377, 2.4269423484802246, 2.4186131954193115, 2.410404920578003, 2.402315616607666, 2.394343852996826, 2.386488199234009, 2.37874698638916, 2.3711187839508057, 2.3636016845703125, 2.356194496154785, 2.348895311355591, 2.341702699661255, 2.3346149921417236, 2.3276307582855225, 2.3207483291625977, 2.3139660358428955, 2.3072824478149414, 2.3006958961486816, 2.2942049503326416, 2.2878081798553467, 2.281503677368164, 2.2752904891967773, 2.2691664695739746, 2.2631306648254395, 2.2571816444396973, 2.2513175010681152, 2.245537281036377, 2.2398393154144287, 2.234222412109375, 2.228684902191162, 2.2232258319854736, 2.217843532562256, 2.2125368118286133, 2.2073044776916504, 2.2021453380584717, 2.1970577239990234, 2.1920409202575684, 2.1870932579040527, 2.18221378326416, 2.177401542663574, 2.172654867172241, 2.167973041534424, 2.1633546352386475, 2.158798933029175, 2.1543045043945312, 2.1498706340789795, 2.145495891571045, 2.1411795616149902, 2.136920690536499, 2.1327178478240967, 2.128570556640625, 2.1244776248931885, 2.12043833732605, 2.1164512634277344, 2.112516164779663, 2.1086318492889404, 2.10479736328125, 2.1010119915008545, 2.0972750186920166, 2.09358549118042, 2.089942455291748, 2.0863454341888428, 2.0827932357788086, 2.0792856216430664, 2.0758216381073, 2.0724003314971924, 2.069021224975586, 2.0656838417053223, 2.062386989593506, -2.0591301918029785, -2.062386989593506, -2.0656838417053223, -2.069021224975586, -2.0724003314971924, -2.0758216381073, -2.0792856216430664, -2.0827932357788086, -2.0863454341888428, -2.089942455291748, -2.09358549118042, -2.0972750186920166, -2.1010119915008545, -2.10479736328125, -2.1086318492889404, -2.112516164779663, -2.1164512634277344, -2.12043833732605, -2.1244776248931885, -2.128570556640625, -2.1327178478240967, -2.136920690536499, -2.1411795616149902, -2.145495891571045, -2.1498706340789795, -2.1543045043945312, -2.158798933029175, -2.1633546352386475, -2.167973041534424, -2.172654867172241, -2.177401542663574, -2.18221378326416, -2.1870932579040527, -2.1920409202575684, -2.1970577239990234, -2.2021453380584717, -2.2073044776916504, -2.2125368118286133, -2.217843532562256, -2.2232258319854736, -2.228684902191162, -2.234222412109375, -2.2398393154144287, -2.245537281036377, -2.2513175010681152, -2.2571816444396973, -2.2631306648254395, -2.2691664695739746, -2.2752904891967773, -2.281503677368164, -2.2878081798553467, -2.2942049503326416, -2.3006958961486816, -2.3072824478149414, -2.3139660358428955, -2.3207483291625977, -2.3276307582855225, -2.3346149921417236, -2.341702699661255, -2.348895311355591, -2.356194496154785, -2.3636016845703125, -2.3711187839508057, -2.37874698638916, -2.386488199234009, -2.394343852996826, -2.402315616607666, -2.410404920578003, -2.4186131954193115, -2.4269423484802246, -2.4353935718536377, -2.4439682960510254, -2.4526681900024414, -2.4614946842193604, -2.4704487323760986, -2.479532241821289, -2.488745927810669, -2.498091459274292, -2.5075700283050537, -2.5171823501586914, -2.5269296169281006, -2.5368130207061768, -2.5468335151672363, -2.5569913387298584, -2.5672879219055176, -2.577723264694214, -2.5882983207702637, -2.599013328552246, -2.6098685264587402, -2.620864152908325, -2.63200044631958, -2.6432769298553467, -2.654693365097046, -2.6662497520446777, -2.677945137023926, -2.6897788047790527, -2.7017500400543213, -2.713857650756836, -2.726100444793701, -2.7384769916534424, -2.750985622406006, -2.763624429702759, -2.7763912677764893, -2.7892839908599854, -2.802299976348877, -2.815436840057373, -2.8286914825439453, -2.8420605659484863, -2.855541229248047, -2.8691294193267822, -2.882821798324585, -2.8966140747070312, -2.9105019569396973, -2.9244813919067383, -2.938547372817993, -2.952695369720459, -2.9669203758239746, -2.9812171459198, -2.9955804347991943, -3.0100045204162598, -3.0244839191436768, -3.039012908935547, -3.0535852909088135, -3.068195343017578, -3.082836866378784, -3.097503662109375, -3.112189292907715, -3.126887798309326, 3.1415927410125732, 3.1266684532165527, 3.111750841140747, 3.096846342086792, 3.0819618701934814, 3.067103862762451, 3.052278757095337, 3.0374927520751953, 3.022752285003662, 3.008063554763794, 2.9934325218200684, 2.978865385055542, 2.964367151260376, 2.949944257736206, 2.935601234436035, 2.921344041824341, 2.907176971435547, 2.8931052684783936, 2.8791332244873047, 2.865265369415283, 2.851505756378174, 2.837858200073242, 2.824326276779175, 2.8109138011932373, 2.797623634338379, 2.784458637237549, 2.7714219093322754, 2.7585155963897705, 2.7457423210144043, 2.7331037521362305, 2.720602035522461, 2.7082388401031494, 2.6960153579711914, 2.6839330196380615, 2.671992778778076, 2.6601953506469727, 2.6485416889190674, 2.6370322704315186, 2.625667095184326, 2.6144466400146484, 2.6033709049224854, 2.592439651489258, 2.581652879714966, 2.571009874343872, 2.5605103969573975, 2.5501537322998047, 2.5399389266967773, 2.5298657417297363, 2.519932746887207, 2.510139226913452, 2.500483989715576, 2.4909658432006836, 2.481583595275879, 2.4723360538482666, 2.463222026824951, 2.454239845275879, 2.445388078689575, 2.4366655349731445, 2.428070545196533, 2.4196014404296875, 2.411256790161133, 2.4030351638793945, 2.394934892654419, 2.3869540691375732, 2.379091262817383, 2.371344804763794, 2.363713264465332, 2.356194496154785, 2.348787307739258, 2.341489553451538, 2.3343002796173096, 2.3272171020507812, 2.3202388286590576, 2.313363552093506, 2.3065898418426514, 2.2999160289764404, 2.2933404445648193, 2.2868614196777344, 2.280477523803711, 2.2741870880126953, 2.267988681793213, 2.26188063621521, 2.255861282348633, 2.249929666519165, 2.244083881378174, 2.2383224964141846, 2.2326440811157227, 2.2270472049713135, 2.2215306758880615, 2.216092824935913, 2.2107324600219727, 2.2054481506347656, 2.2002387046813965, 2.1951026916503906, 2.1900386810302734, 2.1850459575653076, 2.1801226139068604, 2.1752679347991943, 2.170480728149414, 2.165759325027466, 2.1611030101776123, 2.156510591506958, 2.1519808769226074, 2.147512674331665, 2.1431052684783936, 2.1387569904327393, 2.134467363357544, 2.130235195159912, 2.1260595321655273, 2.121939182281494, 2.117873430252075, 2.113861322402954, 2.1099016666412354, 2.1059939861297607, 2.1021368503570557, 2.098330020904541, 2.094572067260742, 2.090862512588501, 2.087200164794922, 2.083584785461426, 2.080014944076538, 2.0764904022216797, 2.073009967803955, 2.069573163986206, 2.0661792755126953, 2.0628275871276855, 2.0595171451568604, 2.0562472343444824, -2.0530176162719727, -2.0562472343444824, -2.0595171451568604, -2.0628275871276855, -2.0661792755126953, -2.069573163986206, -2.073009967803955, -2.0764904022216797, -2.080014944076538, -2.083584785461426, -2.087200164794922, -2.090862512588501, -2.094572067260742, -2.098330020904541, -2.1021368503570557, -2.1059939861297607, -2.1099016666412354, -2.113861322402954, -2.117873430252075, -2.121939182281494, -2.1260595321655273, -2.130235195159912, -2.134467363357544, -2.1387569904327393, -2.1431052684783936, -2.147512674331665, -2.1519808769226074, -2.156510591506958, -2.1611030101776123, -2.165759325027466, -2.170480728149414, -2.1752679347991943, -2.1801226139068604, -2.1850459575653076, -2.1900386810302734, -2.1951026916503906, -2.2002387046813965, -2.2054481506347656, -2.2107324600219727, -2.216092824935913, -2.2215306758880615, -2.2270472049713135, -2.2326440811157227, -2.2383224964141846, -2.244083881378174, -2.249929666519165, -2.255861282348633, -2.26188063621521, -2.267988681793213, -2.2741870880126953, -2.280477523803711, -2.2868614196777344, -2.2933404445648193, -2.2999160289764404, -2.3065898418426514, -2.313363552093506, -2.3202388286590576, -2.3272171020507812, -2.3343002796173096, -2.341489553451538, -2.348787307739258, -2.356194496154785, -2.363713264465332, -2.371344804763794, -2.379091262817383, -2.3869540691375732, -2.394934892654419, -2.4030351638793945, -2.411256790161133, -2.4196014404296875, -2.428070545196533, -2.4366655349731445, -2.445388078689575, -2.454239845275879, -2.463222026824951, -2.4723360538482666, -2.481583595275879, -2.4909658432006836, -2.500483989715576, -2.510139226913452, -2.519932746887207, -2.5298657417297363, -2.5399389266967773, -2.5501537322998047, -2.5605103969573975, -2.571009874343872, -2.581652879714966, -2.592439651489258, -2.6033709049224854, -2.6144466400146484, -2.625667095184326, -2.6370322704315186, -2.6485416889190674, -2.6601953506469727, -2.671992778778076, -2.6839330196380615, -2.6960153579711914, -2.7082388401031494, -2.720602035522461, -2.7331037521362305, -2.7457423210144043, -2.7585155963897705, -2.7714219093322754, -2.784458637237549, -2.797623634338379, -2.8109138011932373, -2.824326276779175, -2.837858200073242, -2.851505756378174, -2.865265369415283, -2.8791332244873047, -2.8931052684783936, -2.907176971435547, -2.921344041824341, -2.935601234436035, -2.949944257736206, -2.964367151260376, -2.978865385055542, -2.9934325218200684, -3.008063554763794, -3.022752285003662, -3.0374927520751953, -3.052278757095337, -3.067103862762451, -3.0819618701934814, -3.096846342086792, -3.111750841140747, -3.1266684532165527, 3.1415927410125732, 3.1264421939849854, 3.1112987995147705, 3.0961694717407227, 3.0810606479644775, 3.065979480743408, 3.0509328842163086, 3.0359270572662354, 3.0209689140319824, 3.0060648918151855, 2.9912211894989014, 2.9764440059661865, 2.9617390632629395, 2.947112560272217, 2.932569742202759, 2.9181160926818848, 2.903756618499756, 2.8894965648651123, 2.875340700149536, 2.861293077468872, 2.847357988357544, 2.8335399627685547, 2.8198421001434326, 2.8062682151794434, 2.7928216457366943, 2.7795052528381348, 2.766321897506714, 2.7532739639282227, 2.740363836288452, 2.7275936603546143, 2.7149651050567627, 2.7024800777435303, 2.6901395320892334, 2.677945137023926, 2.6658973693847656, 2.6539974212646484, 2.6422460079193115, 2.630643129348755, 2.6191892623901367, 2.607884407043457, 2.596728801727295, 2.585721731185913, 2.5748634338378906, 2.564152956008911, 2.5535900592803955, 2.5431737899780273, 2.5329034328460693, 2.522777795791626, 2.512796401977539, 2.502957582473755, 2.493260622024536, 2.483704090118408, 2.4742865562438965, 2.4650065898895264, 2.4558632373809814, 2.44685435295105, 2.437978982925415, 2.4292349815368652, 2.420621395111084, 2.4121360778808594, 2.403777599334717, 2.3955442905426025, 2.387434244155884, 2.379446029663086, 2.3715779781341553, 2.36382794380188, 2.356194496154785, 2.3486757278442383, 2.3412702083587646, 2.3339760303497314, 2.326791286468506, 2.319714307785034, 2.312743663787842, 2.305877208709717, 2.2991137504577637, 2.2924511432647705, 2.2858879566192627, 2.2794225215911865, 2.2730531692504883, 2.2667784690856934, 2.26059627532959, 2.2545056343078613, 2.248504638671875, 2.2425918579101562, 2.2367656230926514, 2.2310245037078857, 2.2253670692443848, 2.219791889190674, 2.2142975330352783, 2.2088823318481445, 2.203545093536377, 2.19828462600708, 2.1930992603302, 2.187987804412842, 2.1829488277435303, 2.17798113822937, 2.173083782196045, 2.168254852294922, 2.1634936332702637, 2.158798933029175, 2.1541693210601807, 2.149603843688965, 2.1451010704040527, 2.140660285949707, 2.1362802982330322, 2.1319596767425537, 2.1276979446411133, 2.1234934329986572, 2.1193456649780273, 2.115253448486328, 2.111215829849243, 2.107231855392456, 2.1033003330230713, 2.0994207859039307, 2.0955920219421387, 2.091813325881958, 2.0880837440490723, 2.084402322769165, 2.080768346786499, 2.077181100845337, 2.0736396312713623, 2.070142984390259, 2.0666909217834473, 2.063282012939453, 2.0599160194396973, 2.0565922260284424, 2.053309679031372, 2.050067663192749, -2.046865701675415, -2.050067663192749, -2.053309679031372, -2.0565922260284424, -2.0599160194396973, -2.063282012939453, -2.0666909217834473, -2.070142984390259, -2.0736396312713623, -2.077181100845337, -2.080768346786499, -2.084402322769165, -2.0880837440490723, -2.091813325881958, -2.0955920219421387, -2.0994207859039307, -2.1033003330230713, -2.107231855392456, -2.111215829849243, -2.115253448486328, -2.1193456649780273, -2.1234934329986572, -2.1276979446411133, -2.1319596767425537, -2.1362802982330322, -2.140660285949707, -2.1451010704040527, -2.149603843688965, -2.1541693210601807, -2.158798933029175, -2.1634936332702637, -2.168254852294922, -2.173083782196045, -2.17798113822937, -2.1829488277435303, -2.187987804412842, -2.1930992603302, -2.19828462600708, -2.203545093536377, -2.2088823318481445, -2.2142975330352783, -2.219791889190674, -2.2253670692443848, -2.2310245037078857, -2.2367656230926514, -2.2425918579101562, -2.248504638671875, -2.2545056343078613, -2.26059627532959, -2.2667784690856934, -2.2730531692504883, -2.2794225215911865, -2.2858879566192627, -2.2924511432647705, -2.2991137504577637, -2.305877208709717, -2.312743663787842, -2.319714307785034, -2.326791286468506, -2.3339760303497314, -2.3412702083587646, -2.3486757278442383, -2.356194496154785, -2.36382794380188, -2.3715779781341553, -2.379446029663086, -2.387434244155884, -2.3955442905426025, -2.403777599334717, -2.4121360778808594, -2.420621395111084, -2.4292349815368652, -2.437978982925415, -2.44685435295105, -2.4558632373809814, -2.4650065898895264, -2.4742865562438965, -2.483704090118408, -2.493260622024536, -2.502957582473755, -2.512796401977539, -2.522777795791626, -2.5329034328460693, -2.5431737899780273, -2.5535900592803955, -2.564152956008911, -2.5748634338378906, -2.585721731185913, -2.596728801727295, -2.607884407043457, -2.6191892623901367, -2.630643129348755, -2.6422460079193115, -2.6539974212646484, -2.6658973693847656, -2.677945137023926, -2.6901395320892334, -2.7024800777435303, -2.7149651050567627, -2.7275936603546143, -2.740363836288452, -2.7532739639282227, -2.766321897506714, -2.7795052528381348, -2.7928216457366943, -2.8062682151794434, -2.8198421001434326, -2.8335399627685547, -2.847357988357544, -2.861293077468872, -2.875340700149536, -2.8894965648651123, -2.903756618499756, -2.9181160926818848, -2.932569742202759, -2.947112560272217, -2.9617390632629395, -2.9764440059661865, -2.9912211894989014, -3.0060648918151855, -3.0209689140319824, -3.0359270572662354, -3.0509328842163086, -3.065979480743408, -3.0810606479644775, -3.0961694717407227, -3.1112987995147705, -3.1264421939849854, 3.1415927410125732, 3.126209259033203, 3.110833168029785, 3.0954716205596924, 3.080131769180298, 3.0648207664489746, 3.0495457649230957, 3.034313678741455, 3.019131660461426, 3.0040059089660645, 2.988943338394165, 2.973950147628784, 2.9590327739715576, 2.944197177886963, 2.9294488430023193, 2.9147937297821045, 2.9002370834350586, 2.885784149169922, 2.8714394569396973, 2.857207775115967, 2.8430936336517334, 2.829101085662842, 2.8152339458465576, 2.8014955520629883, 2.7878894805908203, 2.774418830871582, 2.7610862255096436, 2.747894525527954, 2.7348456382751465, 2.7219417095184326, 2.7091848850250244, 2.6965763568878174, 2.6841177940368652, 2.6718101501464844, 2.659654378890991, 2.647651195526123, 2.635801315307617, 2.6241049766540527, 2.6125621795654297, 2.601173162460327, 2.589937686920166, 2.578855514526367, 2.5679259300231934, 2.5571486949920654, 2.546523094177246, 2.53604793548584, 2.5257227420806885, 2.5155460834503174, 2.5055172443389893, 2.4956345558166504, 2.4858970642089844, 2.4763033390045166, 2.4668517112731934, 2.457540988922119, 2.4483695030212402, 2.439335823059082, 2.4304380416870117, 2.4216744899749756, 2.413043737411499, 2.404543876647949, 2.3961732387542725, 2.387929916381836, 2.379812240600586, 2.3718183040618896, 2.3639461994171143, 2.356194496154785, 2.3485610485076904, 2.3410441875457764, 2.33364200592041, 2.326352596282959, 2.319174289703369, 2.312105417251587, 2.3051440715789795, 2.298288345336914, 2.291536569595337, 2.2848870754241943, 2.2783379554748535, 2.27188777923584, 2.2655346393585205, 2.259276866912842, 2.25311279296875, 2.2470409870147705, 2.2410597801208496, 2.2351672649383545, 2.2293622493743896, 2.2236430644989014, 2.218008041381836, 2.2124557495117188, 2.2069849967956543, 2.2015938758850098, 2.1962814331054688, 2.1910457611083984, 2.1858859062194824, 2.180800199508667, 2.1757876873016357, 2.170846462249756, 2.16597580909729, 2.1611742973327637, 2.156440496444702, 2.15177321434021, 2.1471714973449707, 2.142634153366089, 2.13815975189209, 2.1337473392486572, 2.1293957233428955, 2.125103712081909, 2.120870590209961, 2.1166951656341553, 2.112576484680176, 2.108513116836548, 2.1045045852661133, 2.1005494594573975, 2.096647262573242, 2.092796802520752, 2.0889973640441895, 2.085247755050659, 2.0815470218658447, 2.077894926071167, 2.0742900371551514, 2.0707316398620605, 2.0672190189361572, 2.063751459121704, 2.0603280067443848, 2.056948184967041, 2.0536108016967773, 2.0503156185150146, 2.0470616817474365, 2.0438480377197266, -2.0406744480133057, -2.0438480377197266, -2.0470616817474365, -2.0503156185150146, -2.0536108016967773, -2.056948184967041, -2.0603280067443848, -2.063751459121704, -2.0672190189361572, -2.0707316398620605, -2.0742900371551514, -2.077894926071167, -2.0815470218658447, -2.085247755050659, -2.0889973640441895, -2.092796802520752, -2.096647262573242, -2.1005494594573975, -2.1045045852661133, -2.108513116836548, -2.112576484680176, -2.1166951656341553, -2.120870590209961, -2.125103712081909, -2.1293957233428955, -2.1337473392486572, -2.13815975189209, -2.142634153366089, -2.1471714973449707, -2.15177321434021, -2.156440496444702, -2.1611742973327637, -2.16597580909729, -2.170846462249756, -2.1757876873016357, -2.180800199508667, -2.1858859062194824, -2.1910457611083984, -2.1962814331054688, -2.2015938758850098, -2.2069849967956543, -2.2124557495117188, -2.218008041381836, -2.2236430644989014, -2.2293622493743896, -2.2351672649383545, -2.2410597801208496, -2.2470409870147705, -2.25311279296875, -2.259276866912842, -2.2655346393585205, -2.27188777923584, -2.2783379554748535, -2.2848870754241943, -2.291536569595337, -2.298288345336914, -2.3051440715789795, -2.312105417251587, -2.319174289703369, -2.326352596282959, -2.33364200592041, -2.3410441875457764, -2.3485610485076904, -2.356194496154785, -2.3639461994171143, -2.3718183040618896, -2.379812240600586, -2.387929916381836, -2.3961732387542725, -2.404543876647949, -2.413043737411499, -2.4216744899749756, -2.4304380416870117, -2.439335823059082, -2.4483695030212402, -2.457540988922119, -2.4668517112731934, -2.4763033390045166, -2.4858970642089844, -2.4956345558166504, -2.5055172443389893, -2.5155460834503174, -2.5257227420806885, -2.53604793548584, -2.546523094177246, -2.5571486949920654, -2.5679259300231934, -2.578855514526367, -2.589937686920166, -2.601173162460327, -2.6125621795654297, -2.6241049766540527, -2.635801315307617, -2.647651195526123, -2.659654378890991, -2.6718101501464844, -2.6841177940368652, -2.6965763568878174, -2.7091848850250244, -2.7219417095184326, -2.7348456382751465, -2.747894525527954, -2.7610862255096436, -2.774418830871582, -2.7878894805908203, -2.8014955520629883, -2.8152339458465576, -2.829101085662842, -2.8430936336517334, -2.857207775115967, -2.8714394569396973, -2.885784149169922, -2.9002370834350586, -2.9147937297821045, -2.9294488430023193, -2.944197177886963, -2.9590327739715576, -2.973950147628784, -2.988943338394165, -3.0040059089660645, -3.019131660461426, -3.034313678741455, -3.0495457649230957, -3.0648207664489746, -3.080131769180298, -3.0954716205596924, -3.110833168029785, -3.126209259033203, 3.1415927410125732, 3.1259689331054688, 3.1103527545928955, 3.0947518348693848, 3.0791738033294678, 3.0636260509490967, 3.0481159687042236, 3.0326507091522217, 3.017237663269043, 3.0018837451934814, 2.986595869064331, 2.9713807106018066, 2.956244707107544, 2.9411940574645996, 2.9262349605560303, 2.9113731384277344, 2.8966140747070312, 2.881963014602661, 2.8674252033233643, 2.8530054092407227, 2.838707685470581, 2.8245368003845215, 2.8104965686798096, 2.796590566635132, 2.7828218936920166, 2.7691941261291504, 2.7557098865509033, 2.7423717975616455, 2.729182243347168, 2.7161431312561035, 2.703256130218506, 2.6905229091644287, 2.677945137023926, 2.6655232906341553, 2.653258800506592, 2.6411519050598145, 2.6292030811309814, 2.61741304397583, 2.605781316757202, 2.594308376312256, 2.582993268966675, 2.571836233139038, 2.5608363151550293, 2.5499930381774902, 2.5393052101135254, 2.5287723541259766, 2.5183932781219482, 2.508166790008545, 2.498091459274292, 2.488166332244873, 2.4783897399902344, 2.4687600135803223, 2.4592761993408203, 2.4499359130859375, 2.4407382011413574, 2.431680917739868, 2.422762632369995, 2.4139814376831055, 2.4053351879119873, 2.396822452545166, 2.388441324234009, 2.380189895629883, 2.3720662593841553, 2.3640682697296143, 2.356194496154785, 2.348442792892456, 2.340811014175415, 2.3332977294921875, 2.3259007930755615, 2.3186182975769043, 2.311448335647583, 2.304388999938965, 2.297438621520996, 2.290595293045044, 2.2838571071624756, 2.2772223949432373, 2.2706892490386963, 2.2642557621002197, 2.257920503616333, 2.2516815662384033, 2.245537281036377, 2.2394859790802, 2.2335257530212402, 2.2276554107666016, 2.2218730449676514, 2.216177225112915, 2.2105660438537598, 2.205038547515869, 2.1995925903320312, 2.1942272186279297, 2.1889405250549316, 2.1837313175201416, 2.178598403930664, 2.173539876937866, 2.1685547828674316, 2.1636414527893066, 2.158798933029175, 2.1540257930755615, 2.149320602416992, 2.1446821689605713, 2.1401095390319824, 2.135601282119751, 2.1311562061309814, 2.1267733573913574, 2.1224513053894043, 2.1181890964508057, 2.113986015319824, 2.1098403930664062, 2.1057515144348145, 2.1017181873321533, 2.0977394580841064, 2.0938146114349365, 2.089942455291748, 2.0861220359802246, 2.08235239982605, 2.0786328315734863, 2.0749623775482178, 2.0713398456573486, 2.0677649974823, 2.0642364025115967, 2.060753583908081, 2.0573158264160156, 2.053921937942505, 2.0505716800689697, 2.0472638607025146, 2.0439977645874023, 2.0407729148864746, 2.037588596343994, -2.0344438552856445, -2.037588596343994, -2.0407729148864746, -2.0439977645874023, -2.0472638607025146, -2.0505716800689697, -2.053921937942505, -2.0573158264160156, -2.060753583908081, -2.0642364025115967, -2.0677649974823, -2.0713398456573486, -2.0749623775482178, -2.0786328315734863, -2.08235239982605, -2.0861220359802246, -2.089942455291748, -2.0938146114349365, -2.0977394580841064, -2.1017181873321533, -2.1057515144348145, -2.1098403930664062, -2.113986015319824, -2.1181890964508057, -2.1224513053894043, -2.1267733573913574, -2.1311562061309814, -2.135601282119751, -2.1401095390319824, -2.1446821689605713, -2.149320602416992, -2.1540257930755615, -2.158798933029175, -2.1636414527893066, -2.1685547828674316, -2.173539876937866, -2.178598403930664, -2.1837313175201416, -2.1889405250549316, -2.1942272186279297, -2.1995925903320312, -2.205038547515869, -2.2105660438537598, -2.216177225112915, -2.2218730449676514, -2.2276554107666016, -2.2335257530212402, -2.2394859790802, -2.245537281036377, -2.2516815662384033, -2.257920503616333, -2.2642557621002197, -2.2706892490386963, -2.2772223949432373, -2.2838571071624756, -2.290595293045044, -2.297438621520996, -2.304388999938965, -2.311448335647583, -2.3186182975769043, -2.3259007930755615, -2.3332977294921875, -2.340811014175415, -2.348442792892456, -2.356194496154785, -2.3640682697296143, -2.3720662593841553, -2.380189895629883, -2.388441324234009, -2.396822452545166, -2.4053351879119873, -2.4139814376831055, -2.422762632369995, -2.431680917739868, -2.4407382011413574, -2.4499359130859375, -2.4592761993408203, -2.4687600135803223, -2.4783897399902344, -2.488166332244873, -2.498091459274292, -2.508166790008545, -2.5183932781219482, -2.5287723541259766, -2.5393052101135254, -2.5499930381774902, -2.5608363151550293, -2.571836233139038, -2.582993268966675, -2.594308376312256, -2.605781316757202, -2.61741304397583, -2.6292030811309814, -2.6411519050598145, -2.653258800506592, -2.6655232906341553, -2.677945137023926, -2.6905229091644287, -2.703256130218506, -2.7161431312561035, -2.729182243347168, -2.7423717975616455, -2.7557098865509033, -2.7691941261291504, -2.7828218936920166, -2.796590566635132, -2.8104965686798096, -2.8245368003845215, -2.838707685470581, -2.8530054092407227, -2.8674252033233643, -2.881963014602661, -2.8966140747070312, -2.9113731384277344, -2.9262349605560303, -2.9411940574645996, -2.956244707107544, -2.9713807106018066, -2.986595869064331, -3.0018837451934814, -3.017237663269043, -3.0326507091522217, -3.0481159687042236, -3.0636260509490967, -3.0791738033294678, -3.0947518348693848, -3.1103527545928955, -3.1259689331054688, 3.1415927410125732, 3.125720977783203, 3.1098573207855225, 3.0940096378326416, 3.078185796737671, 3.0623936653137207, 3.0466408729553223, 3.030935525894165, 3.015284538269043, 2.9996955394744873, 2.984175682067871, 2.9687321186065674, 2.953371047973633, 2.9380996227264404, 2.9229238033294678, 2.9078495502471924, 2.8928825855255127, 2.8780288696289062, 2.863292932510376, 2.848680257797241, 2.834195137023926, 2.8198421001434326, 2.8056249618530273, 2.7915477752685547, 2.777613639831543, 2.7638258934020996, 2.750187635421753, 2.7367007732391357, 2.7233684062957764, 2.7101919651031494, 2.6971733570098877, 2.684314489364624, 2.6716160774230957, 2.6590793132781982, 2.646705150604248, 2.6344940662384033, 2.6224465370178223, 2.610562562942505, 2.598842144012451, 2.587285041809082, 2.5758912563323975, 2.564659595489502, 2.5535900592803955, 2.5426814556121826, 2.531932830810547, 2.521343231201172, 2.510911464691162, 2.500636100769043, 2.490515947341919, 2.4805495738983154, 2.4707350730895996, 2.461071491241455, 2.451556444168091, 2.4421887397766113, 2.432966470718384, 2.4238874912261963, 2.414950370788574, 2.4061529636383057, 2.397493362426758, 2.388969659805298, 2.380579948425293, 2.3723220825195312, 2.364194393157959, 2.356194496154785, 2.348320722579956, 2.3405706882476807, 2.3329429626464844, 2.325434923171997, 2.318045139312744, 2.3107712268829346, 2.3036115169525146, 2.2965638637542725, 2.289626359939575, 2.28279709815979, 2.2760744094848633, 2.269456148147583, 2.2629406452178955, 2.256525754928589, 2.2502100467681885, 2.2439916133880615, 2.2378687858581543, 2.231839418411255, 2.2259023189544678, 2.22005558013916, 2.2142975330352783, 2.2086265087127686, 2.203040838241577, 2.1975393295288086, 2.192119836807251, 2.186781406402588, 2.1815223693847656, 2.1763410568237305, 2.171236038208008, 2.166206121444702, 2.161249876022339, 2.1563658714294434, 2.151552677154541, 2.1468091011047363, 2.1421337127685547, 2.1375255584716797, 2.1329829692840576, 2.128505229949951, 2.1240906715393066, 2.1197383403778076, 2.1154470443725586, 2.111215829849243, 2.107043504714966, 2.102928638458252, 2.0988707542419434, 2.0948684215545654, 2.090920925140381, 2.087027072906494, 2.0831856727600098, 2.0793962478637695, 2.075657606124878, 2.0719690322875977, 2.068329334259033, 2.0647377967834473, 2.0611934661865234, 2.0576956272125244, 2.054243326187134, 2.0508358478546143, 2.0474724769592285, 2.04415225982666, 2.040874719619751, 2.0376389026641846, 2.0344438552856445, 2.0312893390655518, -2.02817440032959, -2.0312893390655518, -2.0344438552856445, -2.0376389026641846, -2.040874719619751, -2.04415225982666, -2.0474724769592285, -2.0508358478546143, -2.054243326187134, -2.0576956272125244, -2.0611934661865234, -2.0647377967834473, -2.068329334259033, -2.0719690322875977, -2.075657606124878, -2.0793962478637695, -2.0831856727600098, -2.087027072906494, -2.090920925140381, -2.0948684215545654, -2.0988707542419434, -2.102928638458252, -2.107043504714966, -2.111215829849243, -2.1154470443725586, -2.1197383403778076, -2.1240906715393066, -2.128505229949951, -2.1329829692840576, -2.1375255584716797, -2.1421337127685547, -2.1468091011047363, -2.151552677154541, -2.1563658714294434, -2.161249876022339, -2.166206121444702, -2.171236038208008, -2.1763410568237305, -2.1815223693847656, -2.186781406402588, -2.192119836807251, -2.1975393295288086, -2.203040838241577, -2.2086265087127686, -2.2142975330352783, -2.22005558013916, -2.2259023189544678, -2.231839418411255, -2.2378687858581543, -2.2439916133880615, -2.2502100467681885, -2.256525754928589, -2.2629406452178955, -2.269456148147583, -2.2760744094848633, -2.28279709815979, -2.289626359939575, -2.2965638637542725, -2.3036115169525146, -2.3107712268829346, -2.318045139312744, -2.325434923171997, -2.3329429626464844, -2.3405706882476807, -2.348320722579956, -2.356194496154785, -2.364194393157959, -2.3723220825195312, -2.380579948425293, -2.388969659805298, -2.397493362426758, -2.4061529636383057, -2.414950370788574, -2.4238874912261963, -2.432966470718384, -2.4421887397766113, -2.451556444168091, -2.461071491241455, -2.4707350730895996, -2.4805495738983154, -2.490515947341919, -2.500636100769043, -2.510911464691162, -2.521343231201172, -2.531932830810547, -2.5426814556121826, -2.5535900592803955, -2.564659595489502, -2.5758912563323975, -2.587285041809082, -2.598842144012451, -2.610562562942505, -2.6224465370178223, -2.6344940662384033, -2.646705150604248, -2.6590793132781982, -2.6716160774230957, -2.684314489364624, -2.6971733570098877, -2.7101919651031494, -2.7233684062957764, -2.7367007732391357, -2.750187635421753, -2.7638258934020996, -2.777613639831543, -2.7915477752685547, -2.8056249618530273, -2.8198421001434326, -2.834195137023926, -2.848680257797241, -2.863292932510376, -2.8780288696289062, -2.8928825855255127, -2.9078495502471924, -2.9229238033294678, -2.9380996227264404, -2.953371047973633, -2.9687321186065674, -2.984175682067871, -2.9996955394744873, -3.015284538269043, -3.030935525894165, -3.0466408729553223, -3.0623936653137207, -3.078185796737671, -3.0940096378326416, -3.1098573207855225, -3.125720977783203, 3.1415927410125732, 3.125464916229248, 3.1093456745147705, 3.093243360519409, 3.0771658420562744, 3.061121702194214, 3.045118808746338, 3.029165506362915, 3.0132694244384766, 2.9974381923675537, 2.9816794395446777, 2.966000556945801, 2.9504082202911377, 2.9349093437194824, 2.919510841369629, 2.9042184352874756, 2.889038324356079, 2.873976230621338, 2.8590376377105713, 2.8442275524139404, 2.8295505046844482, 2.8150112628936768, 2.8006136417388916, 2.7863616943359375, 2.772258996963501, 2.7583084106445312, 2.7445132732391357, 2.7308757305145264, 2.717398166656494, 2.70408296585083, 2.6909313201904297, 2.677945137023926, 2.6651251316070557, 2.652472734451294, 2.639988660812378, 2.6276729106903076, 2.6155261993408203, 2.603548526763916, 2.5917394161224365, 2.580099105834961, 2.5686264038085938, 2.557321310043335, 2.546182870864868, 2.5352096557617188, 2.5244011878967285, 2.513756036758423, 2.503272771835327, 2.492950201034546, 2.4827866554260254, 2.472780466079712, 2.462930202484131, 2.4532339572906494, 2.4436898231506348, 2.434296131134033, 2.425050973892212, 2.415952205657959, 2.4069981575012207, 2.398186683654785, 2.3895153999328613, 2.3809828758239746, 2.372586488723755, 2.3643243312835693, 2.356194496154785, 2.3481945991516113, 2.340322732925415, 2.3325767517089844, 2.3249547481536865, 2.3174540996551514, 2.3100733757019043, 2.3028101921081543, 2.2956624031066895, 2.288628339767456, 2.281705617904663, 2.274892568588257, 2.2681870460510254, 2.261587142944336, 2.2550911903381348, 2.248696804046631, 2.2424025535583496, 2.236206293106079, 2.2301063537597656, 2.2241010665893555, 2.218188524246216, 2.212366819381714, 2.206634759902954, 2.2009902000427246, 2.195431709289551, 2.189957618713379, 2.1845664978027344, 2.1792564392089844, 2.1740262508392334, 2.1688742637634277, 2.1637988090515137, 2.158798933029175, 2.1538729667663574, 2.149019241333008, 2.1442368030548096, 2.139524221420288, 2.1348800659179688, 2.130303144454956, 2.1257920265197754, 2.1213457584381104, 2.1169629096984863, 2.112642288208008, 2.1083829402923584, 2.1041836738586426, 2.1000430583953857, 2.0959603786468506, 2.0919344425201416, 2.0879642963409424, 2.0840485095977783, 2.080186605453491, 2.0763773918151855, 2.072619915008545, 2.068912982940674, 2.065256118774414, 2.06164813041687, 2.0580880641937256, 2.0545754432678223, 2.0511090755462646, 2.0476882457733154, 2.044312000274658, 2.0409798622131348, 2.0376906394958496, 2.0344438552856445, 2.0312387943267822, 2.0280745029449463, 2.0249505043029785, -2.0218660831451416, -2.0249505043029785, -2.0280745029449463, -2.0312387943267822, -2.0344438552856445, -2.0376906394958496, -2.0409798622131348, -2.044312000274658, -2.0476882457733154, -2.0511090755462646, -2.0545754432678223, -2.0580880641937256, -2.06164813041687, -2.065256118774414, -2.068912982940674, -2.072619915008545, -2.0763773918151855, -2.080186605453491, -2.0840485095977783, -2.0879642963409424, -2.0919344425201416, -2.0959603786468506, -2.1000430583953857, -2.1041836738586426, -2.1083829402923584, -2.112642288208008, -2.1169629096984863, -2.1213457584381104, -2.1257920265197754, -2.130303144454956, -2.1348800659179688, -2.139524221420288, -2.1442368030548096, -2.149019241333008, -2.1538729667663574, -2.158798933029175, -2.1637988090515137, -2.1688742637634277, -2.1740262508392334, -2.1792564392089844, -2.1845664978027344, -2.189957618713379, -2.195431709289551, -2.2009902000427246, -2.206634759902954, -2.212366819381714, -2.218188524246216, -2.2241010665893555, -2.2301063537597656, -2.236206293106079, -2.2424025535583496, -2.248696804046631, -2.2550911903381348, -2.261587142944336, -2.2681870460510254, -2.274892568588257, -2.281705617904663, -2.288628339767456, -2.2956624031066895, -2.3028101921081543, -2.3100733757019043, -2.3174540996551514, -2.3249547481536865, -2.3325767517089844, -2.340322732925415, -2.3481945991516113, -2.356194496154785, -2.3643243312835693, -2.372586488723755, -2.3809828758239746, -2.3895153999328613, -2.398186683654785, -2.4069981575012207, -2.415952205657959, -2.425050973892212, -2.434296131134033, -2.4436898231506348, -2.4532339572906494, -2.462930202484131, -2.472780466079712, -2.4827866554260254, -2.492950201034546, -2.503272771835327, -2.513756036758423, -2.5244011878967285, -2.5352096557617188, -2.546182870864868, -2.557321310043335, -2.5686264038085938, -2.580099105834961, -2.5917394161224365, -2.603548526763916, -2.6155261993408203, -2.6276729106903076, -2.639988660812378, -2.652472734451294, -2.6651251316070557, -2.677945137023926, -2.6909313201904297, -2.70408296585083, -2.717398166656494, -2.7308757305145264, -2.7445132732391357, -2.7583084106445312, -2.772258996963501, -2.7863616943359375, -2.8006136417388916, -2.8150112628936768, -2.8295505046844482, -2.8442275524139404, -2.8590376377105713, -2.873976230621338, -2.889038324356079, -2.9042184352874756, -2.919510841369629, -2.9349093437194824, -2.9504082202911377, -2.966000556945801, -2.9816794395446777, -2.9974381923675537, -3.0132694244384766, -3.029165506362915, -3.045118808746338, -3.061121702194214, -3.0771658420562744, -3.093243360519409, -3.1093456745147705, -3.125464916229248, 3.1415927410125732, 3.1252007484436035, 3.1088175773620605, 3.092451810836792, 3.076112747192383, 3.0598082542419434, 3.0435473918914795, 3.0273382663726807, 3.0111894607543945, 2.9951083660125732, 2.9791035652160645, 2.963182210922241, 2.9473516941070557, 2.931619167327881, 2.9159913063049316, 2.900475025177002, 2.8850760459899902, 2.869800567626953, 2.854653835296631, 2.839641571044922, 2.82476806640625, 2.8100385665893555, 2.795456647872925, 2.781026601791382, 2.766752004623413, 2.7526357173919678, 2.7386810779571533, 2.7248904705047607, 2.711266040802002, 2.697809934616089, 2.684523820877075, 2.6714091300964355, 2.6584670543670654, 2.645698070526123, 2.633103370666504, 2.620682954788208, 2.6084370613098145, 2.596365451812744, 2.584468364715576, 2.572744846343994, 2.56119441986084, 2.549816370010376, 2.5386099815368652, 2.527573585510254, 2.5167064666748047, 2.506006956100464, 2.495473861694336, 2.485105276107788, 2.4748997688293457, 2.464855670928955, 2.4549710750579834, 2.445244073867798, 2.4356727600097656, 2.426254987716675, 2.4169890880584717, 2.4078726768493652, 2.3989036083221436, 2.3900797367095947, 2.381399154663086, 2.3728597164154053, 2.3644587993621826, 2.356194496154785, 2.348064661026001, 2.340066909790039, 2.3321990966796875, 2.3244590759277344, 2.3168447017669678, 2.309353828430176, 2.3019840717315674, 2.2947335243225098, 2.287600040435791, 2.28058123588562, 2.2736754417419434, 2.266880512237549, 2.2601943016052246, 2.253614664077759, 2.2471399307250977, 2.24076771736145, 2.234496593475342, 2.2283246517181396, 2.2222495079040527, 2.2162697315216064, 2.210383653640747, 2.2045888900756836, 2.1988844871520996, 2.193268060684204, 2.1877381801605225, 2.18229341506958, 2.176931619644165, 2.171651601791382, 2.166451930999756, 2.161330461502075, 2.1562864780426025, 2.151317834854126, 2.14642333984375, 2.1416015625, 2.1368513107299805, 2.1321709156036377, 2.127559185028076, 2.1230146884918213, 2.1185362339019775, 2.1141228675842285, 2.1097729206085205, 2.105485200881958, 2.1012587547302246, 2.097092390060425, 2.092984914779663, 2.088935375213623, 2.084942579269409, 2.081005334854126, 2.077122688293457, 2.073293685913086, 2.0695173740386963, 2.0657925605773926, 2.0621185302734375, 2.0584943294525146, 2.0549190044403076, 2.051391363143921, 2.0479111671447754, 2.0444769859313965, 2.041088342666626, 2.0377442836761475, 2.0344438552856445, 2.031186580657959, 2.0279715061187744, 2.0247979164123535, 2.021665096282959, 2.0185723304748535, -2.0155186653137207, -2.0185723304748535, -2.021665096282959, -2.0247979164123535, -2.0279715061187744, -2.031186580657959, -2.0344438552856445, -2.0377442836761475, -2.041088342666626, -2.0444769859313965, -2.0479111671447754, -2.051391363143921, -2.0549190044403076, -2.0584943294525146, -2.0621185302734375, -2.0657925605773926, -2.0695173740386963, -2.073293685913086, -2.077122688293457, -2.081005334854126, -2.084942579269409, -2.088935375213623, -2.092984914779663, -2.097092390060425, -2.1012587547302246, -2.105485200881958, -2.1097729206085205, -2.1141228675842285, -2.1185362339019775, -2.1230146884918213, -2.127559185028076, -2.1321709156036377, -2.1368513107299805, -2.1416015625, -2.14642333984375, -2.151317834854126, -2.1562864780426025, -2.161330461502075, -2.166451930999756, -2.171651601791382, -2.176931619644165, -2.18229341506958, -2.1877381801605225, -2.193268060684204, -2.1988844871520996, -2.2045888900756836, -2.210383653640747, -2.2162697315216064, -2.2222495079040527, -2.2283246517181396, -2.234496593475342, -2.24076771736145, -2.2471399307250977, -2.253614664077759, -2.2601943016052246, -2.266880512237549, -2.2736754417419434, -2.28058123588562, -2.287600040435791, -2.2947335243225098, -2.3019840717315674, -2.309353828430176, -2.3168447017669678, -2.3244590759277344, -2.3321990966796875, -2.340066909790039, -2.348064661026001, -2.356194496154785, -2.3644587993621826, -2.3728597164154053, -2.381399154663086, -2.3900797367095947, -2.3989036083221436, -2.4078726768493652, -2.4169890880584717, -2.426254987716675, -2.4356727600097656, -2.445244073867798, -2.4549710750579834, -2.464855670928955, -2.4748997688293457, -2.485105276107788, -2.495473861694336, -2.506006956100464, -2.5167064666748047, -2.527573585510254, -2.5386099815368652, -2.549816370010376, -2.56119441986084, -2.572744846343994, -2.584468364715576, -2.596365451812744, -2.6084370613098145, -2.620682954788208, -2.633103370666504, -2.645698070526123, -2.6584670543670654, -2.6714091300964355, -2.684523820877075, -2.697809934616089, -2.711266040802002, -2.7248904705047607, -2.7386810779571533, -2.7526357173919678, -2.766752004623413, -2.781026601791382, -2.795456647872925, -2.8100385665893555, -2.82476806640625, -2.839641571044922, -2.854653835296631, -2.869800567626953, -2.8850760459899902, -2.900475025177002, -2.9159913063049316, -2.931619167327881, -2.9473516941070557, -2.963182210922241, -2.9791035652160645, -2.9951083660125732, -3.0111894607543945, -3.0273382663726807, -3.0435473918914795, -3.0598082542419434, -3.076112747192383, -3.092451810836792, -3.1088175773620605, -3.1252007484436035, 3.1415927410125732, 3.124927520751953, 3.108271598815918, 3.0916342735290527, 3.0750246047973633, 3.0584514141082764, 3.041923999786377, 3.0254509449005127, 3.0090410709381104, 2.9927027225494385, 2.9764440059661865, 2.960272789001465, 2.944197177886963, 2.9282240867614746, 2.912360668182373, 2.8966140747070312, 2.8809902667999268, 2.8654956817626953, 2.8501358032226562, 2.834916353225708, 2.8198421001434326, 2.804917812347412, 2.7901477813720703, 2.775536060333252, 2.7610862255096436, 2.7468016147613525, 2.732684850692749, 2.7187387943267822, 2.704965591430664, 2.6913671493530273, 2.677945137023926, 2.664700746536255, 2.6516354084014893, 2.638749361038208, 2.6260435581207275, 2.613518238067627, 2.601173162460327, 2.589008331298828, 2.5770232677459717, 2.5652174949645996, 2.5535900592803955, 2.542140245437622, 2.5308666229248047, 2.519768476486206, 2.5088438987731934, 2.498091459274292, 2.4875099658966064, 2.477097272872925, 2.4668517112731934, 2.4567713737487793, 2.44685435295105, 2.437098503112793, 2.427501916885376, 2.418062448501587, 2.4087774753570557, 2.3996453285217285, 2.3906636238098145, 2.3818299770355225, 2.3731420040130615, 2.3645975589752197, 2.356194496154785, 2.3479301929473877, 2.3398025035858154, 2.3318090438842773, 2.3239476680755615, 2.316215753555298, 2.3086113929748535, 2.3011322021484375, 2.293775796890259, 2.2865400314331055, 2.2794225215911865, 2.2724215984344482, 2.2655346393585205, 2.2587597370147705, 2.2520945072174072, 2.245537281036377, 2.2390856742858887, 2.2327380180358887, 2.226491928100586, 2.2203457355499268, 2.2142975330352783, 2.2083451747894287, 2.202486991882324, 2.196721076965332, 2.1910457611083984, 2.1854593753814697, 2.179959774017334, 2.1745457649230957, 2.169215202331543, 2.1639668941497803, 2.158798933029175, 2.153709888458252, 2.148698329925537, 2.1437625885009766, 2.1389009952545166, 2.134112596511841, 2.1293957233428955, 2.124748945236206, 2.120170831680298, 2.1156601905822754, 2.111215829849243, 2.1068363189697266, 2.10252046585083, 2.098266839981079, 2.0940747261047363, 2.089942455291748, 2.085869073867798, 2.0818536281585693, 2.077894926071167, 2.073991537094116, 2.070142984390259, 2.066348075866699, 2.062605619430542, 2.0589146614074707, 2.055274248123169, 2.0516836643218994, 2.0481417179107666, 2.044647693634033, 2.041200637817383, 2.037799596786499, 2.0344438552856445, 2.031132698059082, 2.027865171432495, 2.0246403217315674, 2.0214576721191406, 2.0183162689208984, 2.0152156352996826, 2.0121545791625977, -2.0091328620910645, -2.0121545791625977, -2.0152156352996826, -2.0183162689208984, -2.0214576721191406, -2.0246403217315674, -2.027865171432495, -2.031132698059082, -2.0344438552856445, -2.037799596786499, -2.041200637817383, -2.044647693634033, -2.0481417179107666, -2.0516836643218994, -2.055274248123169, -2.0589146614074707, -2.062605619430542, -2.066348075866699, -2.070142984390259, -2.073991537094116, -2.077894926071167, -2.0818536281585693, -2.085869073867798, -2.089942455291748, -2.0940747261047363, -2.098266839981079, -2.10252046585083, -2.1068363189697266, -2.111215829849243, -2.1156601905822754, -2.120170831680298, -2.124748945236206, -2.1293957233428955, -2.134112596511841, -2.1389009952545166, -2.1437625885009766, -2.148698329925537, -2.153709888458252, -2.158798933029175, -2.1639668941497803, -2.169215202331543, -2.1745457649230957, -2.179959774017334, -2.1854593753814697, -2.1910457611083984, -2.196721076965332, -2.202486991882324, -2.2083451747894287, -2.2142975330352783, -2.2203457355499268, -2.226491928100586, -2.2327380180358887, -2.2390856742858887, -2.245537281036377, -2.2520945072174072, -2.2587597370147705, -2.2655346393585205, -2.2724215984344482, -2.2794225215911865, -2.2865400314331055, -2.293775796890259, -2.3011322021484375, -2.3086113929748535, -2.316215753555298, -2.3239476680755615, -2.3318090438842773, -2.3398025035858154, -2.3479301929473877, -2.356194496154785, -2.3645975589752197, -2.3731420040130615, -2.3818299770355225, -2.3906636238098145, -2.3996453285217285, -2.4087774753570557, -2.418062448501587, -2.427501916885376, -2.437098503112793, -2.44685435295105, -2.4567713737487793, -2.4668517112731934, -2.477097272872925, -2.4875099658966064, -2.498091459274292, -2.5088438987731934, -2.519768476486206, -2.5308666229248047, -2.542140245437622, -2.5535900592803955, -2.5652174949645996, -2.5770232677459717, -2.589008331298828, -2.601173162460327, -2.613518238067627, -2.6260435581207275, -2.638749361038208, -2.6516354084014893, -2.664700746536255, -2.677945137023926, -2.6913671493530273, -2.704965591430664, -2.7187387943267822, -2.732684850692749, -2.7468016147613525, -2.7610862255096436, -2.775536060333252, -2.7901477813720703, -2.804917812347412, -2.8198421001434326, -2.834916353225708, -2.8501358032226562, -2.8654956817626953, -2.8809902667999268, -2.8966140747070312, -2.912360668182373, -2.9282240867614746, -2.944197177886963, -2.960272789001465, -2.9764440059661865, -2.9927027225494385, -3.0090410709381104, -3.0254509449005127, -3.041923999786377, -3.0584514141082764, -3.0750246047973633, -3.0916342735290527, -3.108271598815918, -3.124927520751953, 3.1415927410125732, 3.124645233154297, 3.1077072620391846, 3.0907888412475586, 3.073899745941162, 3.057048797607422, 3.0402462482452393, 3.023500680923462, 3.006821393966675, 2.9902172088623047, 2.973696708679199, 2.957268238067627, 2.9409396648406982, 2.9247190952301025, 2.908613443374634, 2.892629861831665, 2.8767752647399902, 2.861055850982666, 2.84547758102417, 2.8300459384918213, 2.8147659301757812, 2.79964280128479, 2.7846806049346924, 2.769883632659912, 2.7552554607391357, 2.7407991886138916, 2.726517915725708, 2.712414264678955, 2.6984901428222656, 2.6847476959228516, 2.6711883544921875, 2.657813549041748, 2.6446239948272705, 2.6316206455230713, 2.6188035011291504, 2.606173038482666, 2.593729019165039, 2.5814712047576904, 2.569399118423462, 2.557511568069458, 2.5458080768585205, 2.534287452697754, 2.5229482650756836, 2.511789321899414, 2.5008089542388916, 2.4900054931640625, 2.479377269744873, 2.4689221382141113, 2.4586384296417236, 2.448523759841919, 2.4385764598846436, 2.4287939071655273, 2.4191741943359375, 2.409714698791504, 2.4004135131835938, 2.391267776489258, 2.3822755813598633, 2.373434066772461, 2.364741325378418, 2.356194496154785, 2.3477914333343506, 2.339529275894165, 2.3314061164855957, 2.3234193325042725, 2.3155665397644043, 2.307845115661621, 2.300252914428711, 2.292787551879883, 2.2854466438293457, 2.2782278060913086, 2.2711288928985596, 2.2641477584838867, 2.25728178024292, 2.2505288124084473, 2.243887186050415, 2.237354040145874, 2.2309279441833496, 2.2246062755584717, 2.2183873653411865, 2.2122690677642822, 2.206249237060547, 2.2003262042999268, 2.194498062133789, 2.188762664794922, 2.1831183433532715, 2.177563428878784, 2.172096014022827, 2.1667144298553467, 2.16141676902771, 2.1562016010284424, 2.151067018508911, 2.1460118293762207, 2.1410343647003174, 2.1361327171325684, 2.1313059329986572, 2.126552104949951, 2.1218698024749756, 2.117258071899414, 2.112715005874634, 2.1082396507263184, 2.103830337524414, 2.0994861125946045, 2.095205545425415, 2.09098744392395, 2.0868303775787354, 2.082733392715454, 2.07869553565979, 2.0747151374816895, 2.070791482925415, 2.0669233798980713, 2.063109874725342, 2.059349775314331, 2.0556421279907227, 2.0519859790802, 2.0483803749084473, 2.0448241233825684, 2.0413167476654053, 2.0378568172454834, 2.0344438552856445, 2.0310769081115723, 2.02775502204895, 2.024477481842041, 2.0212433338165283, 2.018051862716675, 2.014902353286743, 2.011794090270996, 2.008726119995117, 2.0056979656219482, -2.002708673477173, -2.0056979656219482, -2.008726119995117, -2.011794090270996, -2.014902353286743, -2.018051862716675, -2.0212433338165283, -2.024477481842041, -2.02775502204895, -2.0310769081115723, -2.0344438552856445, -2.0378568172454834, -2.0413167476654053, -2.0448241233825684, -2.0483803749084473, -2.0519859790802, -2.0556421279907227, -2.059349775314331, -2.063109874725342, -2.0669233798980713, -2.070791482925415, -2.0747151374816895, -2.07869553565979, -2.082733392715454, -2.0868303775787354, -2.09098744392395, -2.095205545425415, -2.0994861125946045, -2.103830337524414, -2.1082396507263184, -2.112715005874634, -2.117258071899414, -2.1218698024749756, -2.126552104949951, -2.1313059329986572, -2.1361327171325684, -2.1410343647003174, -2.1460118293762207, -2.151067018508911, -2.1562016010284424, -2.16141676902771, -2.1667144298553467, -2.172096014022827, -2.177563428878784, -2.1831183433532715, -2.188762664794922, -2.194498062133789, -2.2003262042999268, -2.206249237060547, -2.2122690677642822, -2.2183873653411865, -2.2246062755584717, -2.2309279441833496, -2.237354040145874, -2.243887186050415, -2.2505288124084473, -2.25728178024292, -2.2641477584838867, -2.2711288928985596, -2.2782278060913086, -2.2854466438293457, -2.292787551879883, -2.300252914428711, -2.307845115661621, -2.3155665397644043, -2.3234193325042725, -2.3314061164855957, -2.339529275894165, -2.3477914333343506, -2.356194496154785, -2.364741325378418, -2.373434066772461, -2.3822755813598633, -2.391267776489258, -2.4004135131835938, -2.409714698791504, -2.4191741943359375, -2.4287939071655273, -2.4385764598846436, -2.448523759841919, -2.4586384296417236, -2.4689221382141113, -2.479377269744873, -2.4900054931640625, -2.5008089542388916, -2.511789321899414, -2.5229482650756836, -2.534287452697754, -2.5458080768585205, -2.557511568069458, -2.569399118423462, -2.5814712047576904, -2.593729019165039, -2.606173038482666, -2.6188035011291504, -2.6316206455230713, -2.6446239948272705, -2.657813549041748, -2.6711883544921875, -2.6847476959228516, -2.6984901428222656, -2.712414264678955, -2.726517915725708, -2.7407991886138916, -2.7552554607391357, -2.769883632659912, -2.7846806049346924, -2.79964280128479, -2.8147659301757812, -2.8300459384918213, -2.84547758102417, -2.861055850982666, -2.8767752647399902, -2.892629861831665, -2.908613443374634, -2.9247190952301025, -2.9409396648406982, -2.957268238067627, -2.973696708679199, -2.9902172088623047, -3.006821393966675, -3.023500680923462, -3.0402462482452393, -3.057048797607422, -3.073899745941162, -3.0907888412475586, -3.1077072620391846, -3.124645233154297, 3.1415927410125732, 3.1243529319763184, 3.107123613357544, 3.089914560317993, 3.0727362632751465, 3.055598258972168, 3.038511037826538, 3.021483898162842, 3.004526376724243, 2.9876480102539062, 2.9708573818206787, 2.9541635513305664, 2.937574625015259, 2.9210989475250244, 2.9047439098358154, 2.888516902923584, 2.872425079345703, 2.8564748764038086, 2.840672492980957, 2.8250234127044678, 2.80953311920166, 2.7942066192626953, 2.779048442840576, 2.7640624046325684, 2.7492525577545166, 2.73462176322937, 2.7201733589172363, 2.7059097290039062, 2.691833019256592, 2.677945137023926, 2.6642472743988037, 2.6507408618927, 2.6374266147613525, 2.624305248260498, 2.6113767623901367, 2.5986413955688477, 2.5860989093780518, 2.5737485885620117, 2.5615899562835693, 2.549621820449829, 2.5378432273864746, 2.5262532234191895, 2.5148496627807617, 2.503631591796875, 2.4925971031188965, 2.4817442893981934, 2.4710710048675537, 2.460575580596924, 2.4502556324005127, 2.4401090145111084, 2.430133581161499, 2.4203267097473145, 2.4106860160827637, 2.4012091159820557, 2.3918936252593994, 2.382736921310425, 2.373736619949341, 2.3648898601531982, 2.356194496154785, 2.3476476669311523, 2.339246988296509, 2.3309898376464844, 2.322873592376709, 2.3148956298828125, 2.307053804397583, 2.2993452548980713, 2.2917675971984863, 2.284318447113037, 2.2769954204559326, 2.2697958946228027, 2.2627177238464355, 2.255758285522461, 2.248915672302246, 2.242187261581421, 2.2355709075927734, 2.2290642261505127, 2.222665548324585, 2.216372013092041, 2.2101821899414062, 2.2040936946868896, 2.1981046199798584, 2.1922125816345215, 2.1864161491394043, 2.180713176727295, 2.1751017570495605, 2.1695802211761475, 2.1641464233398438, 2.158798933029175, 2.153535842895508, 2.148355484008789, 2.143256187438965, 2.1382362842559814, 2.1332943439483643, 2.1284284591674805, 2.1236374378204346, 2.118919849395752, 2.114274024963379, 2.1096982955932617, 2.105191707611084, 2.100752830505371, 2.0963802337646484, 2.0920722484588623, 2.0878283977508545, 2.083646535873413, 2.07952618598938, 2.075465679168701, 2.0714640617370605, 2.0675201416015625, 2.0636327266693115, 2.059800863265991, 2.056023359298706, 2.0522992610931396, 2.0486273765563965, 2.0450069904327393, 2.0414369106292725, 2.0379161834716797, 2.0344438552856445, 2.0310192108154297, 2.0276412963867188, 2.0243091583251953, 2.021021842956543, 2.0177788734436035, 2.0145790576934814, 2.0114216804504395, 2.0083060264587402, 2.0052313804626465, 2.002197027206421, 1.9992021322250366, -1.9962459802627563, -1.9992021322250366, -2.002197027206421, -2.0052313804626465, -2.0083060264587402, -2.0114216804504395, -2.0145790576934814, -2.0177788734436035, -2.021021842956543, -2.0243091583251953, -2.0276412963867188, -2.0310192108154297, -2.0344438552856445, -2.0379161834716797, -2.0414369106292725, -2.0450069904327393, -2.0486273765563965, -2.0522992610931396, -2.056023359298706, -2.059800863265991, -2.0636327266693115, -2.0675201416015625, -2.0714640617370605, -2.075465679168701, -2.07952618598938, -2.083646535873413, -2.0878283977508545, -2.0920722484588623, -2.0963802337646484, -2.100752830505371, -2.105191707611084, -2.1096982955932617, -2.114274024963379, -2.118919849395752, -2.1236374378204346, -2.1284284591674805, -2.1332943439483643, -2.1382362842559814, -2.143256187438965, -2.148355484008789, -2.153535842895508, -2.158798933029175, -2.1641464233398438, -2.1695802211761475, -2.1751017570495605, -2.180713176727295, -2.1864161491394043, -2.1922125816345215, -2.1981046199798584, -2.2040936946868896, -2.2101821899414062, -2.216372013092041, -2.222665548324585, -2.2290642261505127, -2.2355709075927734, -2.242187261581421, -2.248915672302246, -2.255758285522461, -2.2627177238464355, -2.2697958946228027, -2.2769954204559326, -2.284318447113037, -2.2917675971984863, -2.2993452548980713, -2.307053804397583, -2.3148956298828125, -2.322873592376709, -2.3309898376464844, -2.339246988296509, -2.3476476669311523, -2.356194496154785, -2.3648898601531982, -2.373736619949341, -2.382736921310425, -2.3918936252593994, -2.4012091159820557, -2.4106860160827637, -2.4203267097473145, -2.430133581161499, -2.4401090145111084, -2.4502556324005127, -2.460575580596924, -2.4710710048675537, -2.4817442893981934, -2.4925971031188965, -2.503631591796875, -2.5148496627807617, -2.5262532234191895, -2.5378432273864746, -2.549621820449829, -2.5615899562835693, -2.5737485885620117, -2.5860989093780518, -2.5986413955688477, -2.6113767623901367, -2.624305248260498, -2.6374266147613525, -2.6507408618927, -2.6642472743988037, -2.677945137023926, -2.691833019256592, -2.7059097290039062, -2.7201733589172363, -2.73462176322937, -2.7492525577545166, -2.7640624046325684, -2.779048442840576, -2.7942066192626953, -2.80953311920166, -2.8250234127044678, -2.840672492980957, -2.8564748764038086, -2.872425079345703, -2.888516902923584, -2.9047439098358154, -2.9210989475250244, -2.937574625015259, -2.9541635513305664, -2.9708573818206787, -2.9876480102539062, -3.004526376724243, -3.021483898162842, -3.038511037826538, -3.055598258972168, -3.0727362632751465, -3.089914560317993, -3.107123613357544, -3.1243529319763184, 3.1415927410125732, 3.1240506172180176, 3.1065192222595215, 3.0890095233917236, 3.0715320110321045, 3.0540974140167236, 3.0367157459259033, 3.019397497177124, 3.002152681350708, 2.9849908351898193, 2.967921495437622, 2.950953722000122, 2.934096336364746, 2.917357921600342, 2.9007461071014404, 2.8842689990997314, 2.8679332733154297, 2.851746082305908, 2.8357138633728027, 2.8198421001434326, 2.8041365146636963, 2.788602352142334, 2.7732436656951904, 2.7580652236938477, 2.743070125579834, 2.728262186050415, 2.71364426612854, 2.699218511581421, 2.6849870681762695, 2.670952081680298, 2.6571147441864014, 2.6434760093688965, 2.6300365924835205, 2.6167969703674316, 2.60375714302063, 2.5909171104431152, 2.5782763957977295, 2.5658342838287354, 2.5535900592803955, 2.5415425300598145, 2.5296902656555176, 2.5180318355560303, 2.506565809249878, 2.495290517807007, 2.484203577041626, 2.4733033180236816, 2.462587356567383, 2.4520535469055176, 2.441699743270874, 2.431523323059082, 2.4215219020843506, 2.4116930961608887, 2.402033805847168, 2.3925421237945557, 2.3832149505615234, 2.374049663543701, 2.365043878555298, 2.356194496154785, 2.347499132156372, 2.3389549255371094, 2.330559015274048, 2.3223092555999756, 2.314202308654785, 2.3062360286712646, 2.298407554626465, 2.2907145023345947, 2.283154010772705, 2.275723457336426, 2.268420696258545, 2.2612428665161133, 2.25418758392334, 2.2472524642944336, 2.2404353618621826, 2.2337334156036377, 2.227144718170166, 2.2206668853759766, 2.2142975330352783, 2.2080345153808594, 2.201875686645508, 2.195819139480591, 2.1898624897003174, 2.1840035915374756, 2.178241014480591, 2.172572135925293, 2.1669955253601074, 2.1615090370178223, 2.1561107635498047, 2.150799036026001, 2.1455721855163574, 2.140428304672241, 2.1353657245635986, 2.130382776260376, 2.1254780292510986, 2.120649576187134, 2.115895986557007, 2.111215829849243, 2.106607675552368, 2.102069854736328, 2.0976009368896484, 2.0931997299194336, 2.088864803314209, 2.084594964981079, 2.0803885459899902, 2.076244592666626, 2.072161912918091, 2.06813907623291, 2.0641748905181885, 2.0602684020996094, 2.0564184188842773, 2.052623748779297, 2.0488834381103516, 2.045196294784546, 2.0415613651275635, 2.037977457046509, 2.0344438552856445, 2.0309596061706543, 2.0275235176086426, 2.024135112762451, 2.0207929611206055, 2.017496347427368, 2.014244556427002, 2.0110368728637695, 2.0078721046447754, 2.0047497749328613, 2.001668691635132, 1.9986286163330078, 1.9956284761428833, 1.992667555809021, -1.9897452592849731, -1.992667555809021, -1.9956284761428833, -1.9986286163330078, -2.001668691635132, -2.0047497749328613, -2.0078721046447754, -2.0110368728637695, -2.014244556427002, -2.017496347427368, -2.0207929611206055, -2.024135112762451, -2.0275235176086426, -2.0309596061706543, -2.0344438552856445, -2.037977457046509, -2.0415613651275635, -2.045196294784546, -2.0488834381103516, -2.052623748779297, -2.0564184188842773, -2.0602684020996094, -2.0641748905181885, -2.06813907623291, -2.072161912918091, -2.076244592666626, -2.0803885459899902, -2.084594964981079, -2.088864803314209, -2.0931997299194336, -2.0976009368896484, -2.102069854736328, -2.106607675552368, -2.111215829849243, -2.115895986557007, -2.120649576187134, -2.1254780292510986, -2.130382776260376, -2.1353657245635986, -2.140428304672241, -2.1455721855163574, -2.150799036026001, -2.1561107635498047, -2.1615090370178223, -2.1669955253601074, -2.172572135925293, -2.178241014480591, -2.1840035915374756, -2.1898624897003174, -2.195819139480591, -2.201875686645508, -2.2080345153808594, -2.2142975330352783, -2.2206668853759766, -2.227144718170166, -2.2337334156036377, -2.2404353618621826, -2.2472524642944336, -2.25418758392334, -2.2612428665161133, -2.268420696258545, -2.275723457336426, -2.283154010772705, -2.2907145023345947, -2.298407554626465, -2.3062360286712646, -2.314202308654785, -2.3223092555999756, -2.330559015274048, -2.3389549255371094, -2.347499132156372, -2.356194496154785, -2.365043878555298, -2.374049663543701, -2.3832149505615234, -2.3925421237945557, -2.402033805847168, -2.4116930961608887, -2.4215219020843506, -2.431523323059082, -2.441699743270874, -2.4520535469055176, -2.462587356567383, -2.4733033180236816, -2.484203577041626, -2.495290517807007, -2.506565809249878, -2.5180318355560303, -2.5296902656555176, -2.5415425300598145, -2.5535900592803955, -2.5658342838287354, -2.5782763957977295, -2.5909171104431152, -2.60375714302063, -2.6167969703674316, -2.6300365924835205, -2.6434760093688965, -2.6571147441864014, -2.670952081680298, -2.6849870681762695, -2.699218511581421, -2.71364426612854, -2.728262186050415, -2.743070125579834, -2.7580652236938477, -2.7732436656951904, -2.788602352142334, -2.8041365146636963, -2.8198421001434326, -2.8357138633728027, -2.851746082305908, -2.8679332733154297, -2.8842689990997314, -2.9007461071014404, -2.917357921600342, -2.934096336364746, -2.950953722000122, -2.967921495437622, -2.9849908351898193, -3.002152681350708, -3.019397497177124, -3.0367157459259033, -3.0540974140167236, -3.0715320110321045, -3.0890095233917236, -3.1065192222595215, -3.1240506172180176, 3.1415927410125732, 3.123737335205078, 3.105893611907959, 3.0880722999572754, 3.0702850818634033, 3.0525431632995605, 3.0348570346832275, 3.017237663269043, 2.9996955394744873, 2.982240915298462, 2.964883804321289, 2.9476335048675537, 2.930499315261841, 2.913490056991577, 2.8966140747070312, 2.8798792362213135, 2.863292932510376, 2.846862554550171, 2.830594301223755, 2.8144946098327637, 2.7985687255859375, 2.7828218936920166, 2.767259120941162, 2.7518839836120605, 2.7367007732391357, 2.721712589263916, 2.7069225311279297, 2.6923325061798096, 2.677945137023926, 2.663761615753174, 2.6497833728790283, 2.6360116004943848, 2.6224465370178223, 2.609088659286499, 2.595937490463257, 2.582993268966675, 2.5702552795410156, 2.557722330093384, 2.545393466949463, 2.5332677364349365, 2.521343231201172, 2.5096185207366943, 2.498091459274292, 2.4867606163024902, 2.475623369216919, 2.4646778106689453, 2.453921318054199, 2.4433517456054688, 2.432966470718384, 2.422762632369995, 2.4127378463745117, 2.4028894901275635, 2.393214702606201, 2.3837103843688965, 2.3743743896484375, 2.3652031421661377, 2.356194496154785, 2.3473451137542725, 2.3386523723602295, 2.330113410949707, 2.321725368499756, 2.3134853839874268, 2.3053908348083496, 2.297438621520996, 2.289626359939575, 2.2819509506225586, 2.2744100093841553, 2.267000913619995, 2.259720802307129, 2.2525670528411865, 2.245537281036377, 2.23862886428833, 2.231839418411255, 2.2251665592193604, 2.2186076641082764, 2.212160587310791, 2.2058229446411133, 2.1995925903320312, 2.193467140197754, 2.1874444484710693, 2.1815223693847656, 2.175698757171631, 2.1699717044830322, 2.164339065551758, 2.158798933029175, 2.1533493995666504, 2.1479885578155518, 2.142714500427246, 2.1375255584716797, 2.1324198246002197, 2.1273956298828125, 2.1224513053894043, 2.1175851821899414, 2.11279559135437, 2.108081102371216, 2.103440046310425, 2.0988707542419434, 2.094372034072876, 2.089942455291748, 2.085580348968506, 2.081284761428833, 2.0770537853240967, 2.0728864669799805, 2.068781614303589, 2.0647377967834473, 2.060753583908081, 2.056828260421753, 2.0529603958129883, 2.0491487979888916, 2.0453925132751465, 2.0416901111602783, 2.038041114807129, 2.0344438552856445, 2.030897855758667, 2.0274016857147217, 2.0239548683166504, 2.0205559730529785, 2.0172042846679688, 2.0138988494873047, 2.010638952255249, 2.0074234008789062, 2.004251718521118, 2.0011229515075684, 1.9980361461639404, 1.9949907064437866, 1.99198579788208, 1.9890207052230835, 1.98609459400177, -1.9832067489624023, -1.98609459400177, -1.9890207052230835, -1.99198579788208, -1.9949907064437866, -1.9980361461639404, -2.0011229515075684, -2.004251718521118, -2.0074234008789062, -2.010638952255249, -2.0138988494873047, -2.0172042846679688, -2.0205559730529785, -2.0239548683166504, -2.0274016857147217, -2.030897855758667, -2.0344438552856445, -2.038041114807129, -2.0416901111602783, -2.0453925132751465, -2.0491487979888916, -2.0529603958129883, -2.056828260421753, -2.060753583908081, -2.0647377967834473, -2.068781614303589, -2.0728864669799805, -2.0770537853240967, -2.081284761428833, -2.085580348968506, -2.089942455291748, -2.094372034072876, -2.0988707542419434, -2.103440046310425, -2.108081102371216, -2.11279559135437, -2.1175851821899414, -2.1224513053894043, -2.1273956298828125, -2.1324198246002197, -2.1375255584716797, -2.142714500427246, -2.1479885578155518, -2.1533493995666504, -2.158798933029175, -2.164339065551758, -2.1699717044830322, -2.175698757171631, -2.1815223693847656, -2.1874444484710693, -2.193467140197754, -2.1995925903320312, -2.2058229446411133, -2.212160587310791, -2.2186076641082764, -2.2251665592193604, -2.231839418411255, -2.23862886428833, -2.245537281036377, -2.2525670528411865, -2.259720802307129, -2.267000913619995, -2.2744100093841553, -2.2819509506225586, -2.289626359939575, -2.297438621520996, -2.3053908348083496, -2.3134853839874268, -2.321725368499756, -2.330113410949707, -2.3386523723602295, -2.3473451137542725, -2.356194496154785, -2.3652031421661377, -2.3743743896484375, -2.3837103843688965, -2.393214702606201, -2.4028894901275635, -2.4127378463745117, -2.422762632369995, -2.432966470718384, -2.4433517456054688, -2.453921318054199, -2.4646778106689453, -2.475623369216919, -2.4867606163024902, -2.498091459274292, -2.5096185207366943, -2.521343231201172, -2.5332677364349365, -2.545393466949463, -2.557722330093384, -2.5702552795410156, -2.582993268966675, -2.595937490463257, -2.609088659286499, -2.6224465370178223, -2.6360116004943848, -2.6497833728790283, -2.663761615753174, -2.677945137023926, -2.6923325061798096, -2.7069225311279297, -2.721712589263916, -2.7367007732391357, -2.7518839836120605, -2.767259120941162, -2.7828218936920166, -2.7985687255859375, -2.8144946098327637, -2.830594301223755, -2.846862554550171, -2.863292932510376, -2.8798792362213135, -2.8966140747070312, -2.913490056991577, -2.930499315261841, -2.9476335048675537, -2.964883804321289, -2.982240915298462, -2.9996955394744873, -3.017237663269043, -3.0348570346832275, -3.0525431632995605, -3.0702850818634033, -3.0880722999572754, -3.105893611907959, -3.123737335205078, 3.1415927410125732, 3.123412847518921, 3.1052451133728027, 3.0871012210845947, 3.068993091583252, 3.0509328842163086, 3.032931327819824, 3.015000581741333, 2.9971511363983154, 2.979393720626831, 2.9617390632629395, 2.944197177886963, 2.9267773628234863, 2.9094889163970947, 2.8923404216766357, 2.875340700149536, 2.858496904373169, 2.8418166637420654, 2.8253064155578613, 2.8089730739593506, 2.7928216457366943, 2.776857852935791, 2.7610862255096436, 2.745511293411255, 2.7301363945007324, 2.7149651050567627, 2.700000286102295, 2.685244083404541, 2.670698881149292, 2.6563656330108643, 2.6422460079193115, 2.628340482711792, 2.614649534225464, 2.601173162460327, 2.587911367416382, 2.5748634338378906, 2.562028646469116, 2.549406051635742, 2.536993980407715, 2.5247914791107178, 2.512796401977539, 2.501007080078125, 2.4894211292266846, 2.478036880493164, 2.4668517112731934, 2.4558632373809814, 2.445068597793579, 2.4344656467437744, 2.424051284790039, 2.413822889328003, 2.403777599334717, 2.3939125537872314, 2.3842244148254395, 2.37471079826355, 2.365368604660034, 2.356194496154785, 2.3471856117248535, 2.338339328765869, 2.3296520709991455, 2.3211212158203125, 2.312743663787842, 2.304516315460205, 2.2964365482330322, 2.288501501083374, 2.280707836151123, 2.2730531692504883, 2.2655346393585205, 2.2581491470336914, 2.25089430809021, 2.243767261505127, 2.2367656230926514, 2.229886293411255, 2.2231271266937256, 2.2164855003356934, 2.209959030151367, 2.203545093536377, 2.1972415447235107, 2.1910457611083984, 2.1849558353424072, 2.178969144821167, 2.173083782196045, 2.16729736328125, 2.1616079807281494, 2.1560134887695312, 2.1505117416381836, 2.1451010704040527, 2.139779567718506, 2.134544849395752, 2.1293957233428955, 2.1243298053741455, 2.1193456649780273, 2.1144416332244873, 2.1096158027648926, 2.1048667430877686, 2.1001925468444824, 2.0955920219421387, 2.0910634994506836, 2.0866053104400635, 2.082216262817383, 2.077894926071167, 2.0736396312713623, 2.0694491863250732, 2.065322160720825, 2.0612573623657227, 2.05725359916687, 2.053309679031372, 2.049424171447754, 2.04559588432312, 2.0418238639831543, 2.038106918334961, 2.0344438552856445, 2.0308339595794678, 2.027275562286377, 2.023768186569214, 2.020310640335083, 2.016901969909668, 2.0135409832000732, 2.0102272033691406, 2.0069594383239746, 2.003736972808838, 2.000558614730835, 1.997423768043518, 1.99433171749115, 1.9912813901901245, 1.9882721900939941, 1.9853031635284424, 1.982373833656311, 1.9794831275939941, -1.9766305685043335, -1.9794831275939941, -1.982373833656311, -1.9853031635284424, -1.9882721900939941, -1.9912813901901245, -1.99433171749115, -1.997423768043518, -2.000558614730835, -2.003736972808838, -2.0069594383239746, -2.0102272033691406, -2.0135409832000732, -2.016901969909668, -2.020310640335083, -2.023768186569214, -2.027275562286377, -2.0308339595794678, -2.0344438552856445, -2.038106918334961, -2.0418238639831543, -2.04559588432312, -2.049424171447754, -2.053309679031372, -2.05725359916687, -2.0612573623657227, -2.065322160720825, -2.0694491863250732, -2.0736396312713623, -2.077894926071167, -2.082216262817383, -2.0866053104400635, -2.0910634994506836, -2.0955920219421387, -2.1001925468444824, -2.1048667430877686, -2.1096158027648926, -2.1144416332244873, -2.1193456649780273, -2.1243298053741455, -2.1293957233428955, -2.134544849395752, -2.139779567718506, -2.1451010704040527, -2.1505117416381836, -2.1560134887695312, -2.1616079807281494, -2.16729736328125, -2.173083782196045, -2.178969144821167, -2.1849558353424072, -2.1910457611083984, -2.1972415447235107, -2.203545093536377, -2.209959030151367, -2.2164855003356934, -2.2231271266937256, -2.229886293411255, -2.2367656230926514, -2.243767261505127, -2.25089430809021, -2.2581491470336914, -2.2655346393585205, -2.2730531692504883, -2.280707836151123, -2.288501501083374, -2.2964365482330322, -2.304516315460205, -2.312743663787842, -2.3211212158203125, -2.3296520709991455, -2.338339328765869, -2.3471856117248535, -2.356194496154785, -2.365368604660034, -2.37471079826355, -2.3842244148254395, -2.3939125537872314, -2.403777599334717, -2.413822889328003, -2.424051284790039, -2.4344656467437744, -2.445068597793579, -2.4558632373809814, -2.4668517112731934, -2.478036880493164, -2.4894211292266846, -2.501007080078125, -2.512796401977539, -2.5247914791107178, -2.536993980407715, -2.549406051635742, -2.562028646469116, -2.5748634338378906, -2.587911367416382, -2.601173162460327, -2.614649534225464, -2.628340482711792, -2.6422460079193115, -2.6563656330108643, -2.670698881149292, -2.685244083404541, -2.700000286102295, -2.7149651050567627, -2.7301363945007324, -2.745511293411255, -2.7610862255096436, -2.776857852935791, -2.7928216457366943, -2.8089730739593506, -2.8253064155578613, -2.8418166637420654, -2.858496904373169, -2.875340700149536, -2.8923404216766357, -2.9094889163970947, -2.9267773628234863, -2.944197177886963, -2.9617390632629395, -2.979393720626831, -2.9971511363983154, -3.015000581741333, -3.032931327819824, -3.0509328842163086, -3.068993091583252, -3.0871012210845947, -3.1052451133728027, -3.123412847518921, 3.1415927410125732, 3.1230762004852295, 3.1045725345611572, 3.0860941410064697, 3.0676536560058594, 3.0492632389068604, 3.030935525894165, 3.0126819610595703, 2.994514226913452, 2.9764440059661865, 2.958481788635254, 2.940638303756714, 2.9229238033294678, 2.9053473472595215, 2.887918472290039, 2.870645761489868, 2.8535373210906982, 2.8366003036499023, 2.8198421001434326, 2.803269147872925, 2.7868869304656982, 2.7707014083862305, 2.7547168731689453, 2.738938093185425, 2.7233684062957764, 2.7080111503601074, 2.6928694248199463, 2.677945137023926, 2.6632401943206787, 2.648756265640259, 2.6344940662384033, 2.6204545497894287, 2.606637477874756, 2.593043327331543, 2.5796711444854736, 2.5665204524993896, 2.5535900592803955, 2.5408787727355957, 2.5283854007720947, 2.5161075592041016, 2.5040438175201416, 2.492191791534424, 2.4805495738983154, 2.469114065170288, 2.457883358001709, 2.44685435295105, 2.4360244274139404, 2.4253907203674316, 2.414950370788574, 2.4047000408172607, 2.394637107849121, 2.384758234024048, 2.3750600814819336, 2.365540027618408, 2.356194496154785, 2.347020387649536, 2.338014602661133, 2.329174041748047, 2.320495367050171, 2.3119754791259766, 2.3036115169525146, 2.2953999042510986, 2.2873380184173584, 2.2794225215911865, 2.271650791168213, 2.26401948928833, 2.256525754928589, 2.249166965484619, 2.2419402599334717, 2.234842538833618, 2.2278711795806885, 2.2210237979888916, 2.2142975330352783, 2.2076895236968994, 2.201197862625122, 2.194819450378418, 2.188552141189575, 2.1823933124542236, 2.1763410568237305, 2.1703925132751465, 2.164546012878418, 2.158798933029175, 2.153149366378784, 2.147594928741455, 2.1421337127685547, 2.13676381111145, 2.131483316421509, 2.1262900829315186, 2.1211822032928467, 2.1161580085754395, 2.111215829849243, 2.106353521347046, 2.101569890975952, 2.09686279296875, 2.092230796813965, 2.087672233581543, 2.0831856727600098, 2.0787696838378906, 2.074422597885132, 2.070142984390259, 2.065929651260376, 2.0617809295654297, 2.0576956272125244, 2.0536723136901855, 2.0497100353240967, 2.045807123184204, 2.0419626235961914, 2.038175344467163, 2.0344438552856445, 2.0307674407958984, 2.0271449089050293, 2.0235748291015625, 2.0200564861297607, 2.0165886878967285, 2.0131704807281494, 2.009801149368286, 2.006479263305664, 2.003204107284546, 1.9999748468399048, 1.9967905282974243, 1.993650197982788, 1.9905532598495483, 1.9874986410140991, 1.9844855070114136, 1.981513261795044, 1.9785810708999634, 1.975688099861145, 1.9728337526321411, -1.9700170755386353, -1.9728337526321411, -1.975688099861145, -1.9785810708999634, -1.981513261795044, -1.9844855070114136, -1.9874986410140991, -1.9905532598495483, -1.993650197982788, -1.9967905282974243, -1.9999748468399048, -2.003204107284546, -2.006479263305664, -2.009801149368286, -2.0131704807281494, -2.0165886878967285, -2.0200564861297607, -2.0235748291015625, -2.0271449089050293, -2.0307674407958984, -2.0344438552856445, -2.038175344467163, -2.0419626235961914, -2.045807123184204, -2.0497100353240967, -2.0536723136901855, -2.0576956272125244, -2.0617809295654297, -2.065929651260376, -2.070142984390259, -2.074422597885132, -2.0787696838378906, -2.0831856727600098, -2.087672233581543, -2.092230796813965, -2.09686279296875, -2.101569890975952, -2.106353521347046, -2.111215829849243, -2.1161580085754395, -2.1211822032928467, -2.1262900829315186, -2.131483316421509, -2.13676381111145, -2.1421337127685547, -2.147594928741455, -2.153149366378784, -2.158798933029175, -2.164546012878418, -2.1703925132751465, -2.1763410568237305, -2.1823933124542236, -2.188552141189575, -2.194819450378418, -2.201197862625122, -2.2076895236968994, -2.2142975330352783, -2.2210237979888916, -2.2278711795806885, -2.234842538833618, -2.2419402599334717, -2.249166965484619, -2.256525754928589, -2.26401948928833, -2.271650791168213, -2.2794225215911865, -2.2873380184173584, -2.2953999042510986, -2.3036115169525146, -2.3119754791259766, -2.320495367050171, -2.329174041748047, -2.338014602661133, -2.347020387649536, -2.356194496154785, -2.365540027618408, -2.3750600814819336, -2.384758234024048, -2.394637107849121, -2.4047000408172607, -2.414950370788574, -2.4253907203674316, -2.4360244274139404, -2.44685435295105, -2.457883358001709, -2.469114065170288, -2.4805495738983154, -2.492191791534424, -2.5040438175201416, -2.5161075592041016, -2.5283854007720947, -2.5408787727355957, -2.5535900592803955, -2.5665204524993896, -2.5796711444854736, -2.593043327331543, -2.606637477874756, -2.6204545497894287, -2.6344940662384033, -2.648756265640259, -2.6632401943206787, -2.677945137023926, -2.6928694248199463, -2.7080111503601074, -2.7233684062957764, -2.738938093185425, -2.7547168731689453, -2.7707014083862305, -2.7868869304656982, -2.803269147872925, -2.8198421001434326, -2.8366003036499023, -2.8535373210906982, -2.870645761489868, -2.887918472290039, -2.9053473472595215, -2.9229238033294678, -2.940638303756714, -2.958481788635254, -2.9764440059661865, -2.994514226913452, -3.0126819610595703, -3.030935525894165, -3.0492632389068604, -3.0676536560058594, -3.0860941410064697, -3.1045725345611572, -3.1230762004852295, 3.1415927410125732, 3.1227269172668457, 3.103874683380127, 3.0850491523742676, 3.0662636756896973, 3.0475313663482666, 3.028865098953247, 3.010277271270752, 2.9917802810668945, 2.973385810852051, 2.955105781555176, 2.936950922012329, 2.918931722640991, 2.9010584354400635, 2.883340358734131, 2.8657867908477783, 2.8484058380126953, 2.831205129623413, 2.814192533493042, 2.7973740100860596, 2.7807557582855225, 2.764343500137329, 2.7481420040130615, 2.7321555614471436, 2.7163877487182617, 2.7008419036865234, 2.685520648956299, 2.670426368713379, 2.6555607318878174, 2.6409249305725098, 2.6265199184417725, 2.6123459339141846, 2.598402976989746, 2.584691047668457, 2.57120943069458, 2.5579569339752197, 2.5449323654174805, 2.5321340560913086, 2.5195605754852295, 2.5072097778320312, 2.495079517364502, 2.4831671714782715, 2.471470594406128, 2.459986925125122, 2.4487130641937256, 2.4376466274261475, 2.426784038543701, 2.4161226749420166, 2.4056589603424072, 2.395390033721924, 2.385312557220459, 2.375422954559326, 2.365718126296997, 2.356194496154785, 2.346848964691162, 2.3376781940460205, 2.328678607940674, 2.3198468685150146, 2.3111798763275146, 2.3026742935180664, 2.2943265438079834, 2.2861340045928955, 2.278092861175537, 2.270200252532959, 2.2624528408050537, 2.254848003387451, 2.247382402420044, 2.2400529384613037, 2.2328567504882812, 2.2257912158966064, 2.218853235244751, 2.2120401859283447, 2.2053492069244385, 2.198777675628662, 2.1923229694366455, 2.1859824657440186, 2.1797540187835693, 2.1736345291137695, 2.1676223278045654, 2.1617143154144287, 2.1559088230133057, 2.150203227996826, 2.1445953845977783, 2.13908314704895, 2.133664608001709, 2.1283373832702637, 2.1230998039245605, 2.1179497241973877, 2.1128852367401123, 2.1079046726226807, 2.103005886077881, 2.098187208175659, 2.093447208404541, 2.0887837409973145, 2.084195375442505, 2.0796804428100586, 2.075237512588501, 2.0708651542663574, 2.066561460494995, 2.0623252391815186, 2.058154821395874, 2.054049253463745, 2.050006866455078, 2.0460264682769775, 2.0421066284179688, 2.0382461547851562, 2.0344438552856445, 2.030698537826538, 2.0270090103149414, 2.023374319076538, 2.0197930335998535, 2.0162642002105713, 2.012786626815796, 2.00935959815979, 2.005981922149658, 2.002652645111084, 1.9993705749511719, 1.9961351156234741, 1.9929453134536743, 1.9898000955581665, 1.9866986274719238, 1.983640193939209, 1.9806239604949951, 1.9776488542556763, 1.9747143983840942, 1.9718196392059326, 1.968963861465454, 1.966146469116211, -1.9633665084838867, -1.966146469116211, -1.968963861465454, -1.9718196392059326, -1.9747143983840942, -1.9776488542556763, -1.9806239604949951, -1.983640193939209, -1.9866986274719238, -1.9898000955581665, -1.9929453134536743, -1.9961351156234741, -1.9993705749511719, -2.002652645111084, -2.005981922149658, -2.00935959815979, -2.012786626815796, -2.0162642002105713, -2.0197930335998535, -2.023374319076538, -2.0270090103149414, -2.030698537826538, -2.0344438552856445, -2.0382461547851562, -2.0421066284179688, -2.0460264682769775, -2.050006866455078, -2.054049253463745, -2.058154821395874, -2.0623252391815186, -2.066561460494995, -2.0708651542663574, -2.075237512588501, -2.0796804428100586, -2.084195375442505, -2.0887837409973145, -2.093447208404541, -2.098187208175659, -2.103005886077881, -2.1079046726226807, -2.1128852367401123, -2.1179497241973877, -2.1230998039245605, -2.1283373832702637, -2.133664608001709, -2.13908314704895, -2.1445953845977783, -2.150203227996826, -2.1559088230133057, -2.1617143154144287, -2.1676223278045654, -2.1736345291137695, -2.1797540187835693, -2.1859824657440186, -2.1923229694366455, -2.198777675628662, -2.2053492069244385, -2.2120401859283447, -2.218853235244751, -2.2257912158966064, -2.2328567504882812, -2.2400529384613037, -2.247382402420044, -2.254848003387451, -2.2624528408050537, -2.270200252532959, -2.278092861175537, -2.2861340045928955, -2.2943265438079834, -2.3026742935180664, -2.3111798763275146, -2.3198468685150146, -2.328678607940674, -2.3376781940460205, -2.346848964691162, -2.356194496154785, -2.365718126296997, -2.375422954559326, -2.385312557220459, -2.395390033721924, -2.4056589603424072, -2.4161226749420166, -2.426784038543701, -2.4376466274261475, -2.4487130641937256, -2.459986925125122, -2.471470594406128, -2.4831671714782715, -2.495079517364502, -2.5072097778320312, -2.5195605754852295, -2.5321340560913086, -2.5449323654174805, -2.5579569339752197, -2.57120943069458, -2.584691047668457, -2.598402976989746, -2.6123459339141846, -2.6265199184417725, -2.6409249305725098, -2.6555607318878174, -2.670426368713379, -2.685520648956299, -2.7008419036865234, -2.7163877487182617, -2.7321555614471436, -2.7481420040130615, -2.764343500137329, -2.7807557582855225, -2.7973740100860596, -2.814192533493042, -2.831205129623413, -2.8484058380126953, -2.8657867908477783, -2.883340358734131, -2.9010584354400635, -2.918931722640991, -2.936950922012329, -2.955105781555176, -2.973385810852051, -2.9917802810668945, -3.010277271270752, -3.028865098953247, -3.0475313663482666, -3.0662636756896973, -3.0850491523742676, -3.103874683380127, -3.1227269172668457, 3.1415927410125732, 3.1223642826080322, 3.1031501293182373, 3.0839641094207764, 3.0648207664489746, 3.0457334518432617, 3.0267159938812256, 3.007781744003296, 2.988943338394165, 2.9702134132385254, 2.9516043663024902, 2.9331274032592773, 2.9147937297821045, 2.8966140747070312, 2.8785979747772217, 2.86075496673584, 2.8430936336517334, 2.825622320175171, 2.8083484172821045, 2.79127836227417, 2.774418830871582, 2.757775068283081, 2.741352081298828, 2.725153923034668, 2.7091848850250244, 2.6934475898742676, 2.677945137023926, 2.6626789569854736, 2.647651195526123, 2.6328628063201904, 2.618314266204834, 2.604006052017212, 2.589937686920166, 2.576108694076538, 2.562518358230591, 2.5491652488708496, 2.53604793548584, 2.523164749145508, 2.5105133056640625, 2.498091459274292, 2.4858970642089844, 2.4739270210266113, 2.462178945541382, 2.4506494998931885, 2.439335823059082, 2.428234577178955, 2.4173426628112793, 2.4066567420959473, 2.3961732387542725, 2.3858888149261475, 2.3757998943328857, 2.365902900695801, 2.356194496154785, 2.3466708660125732, 2.3373289108276367, 2.3281643390655518, 2.319174289703369, 2.3103549480438232, 2.3017029762268066, 2.293214797973633, 2.2848870754241943, 2.2767162322998047, 2.2686991691589355, 2.2608325481414795, 2.25311279296875, 2.245537281036377, 2.238102436065674, 2.2308053970336914, 2.2236430644989014, 2.2166123390197754, 2.2097103595733643, 2.2029342651367188, 2.1962814331054688, 2.189748764038086, 2.1833338737487793, 2.1770339012145996, 2.170846462249756, 2.164768934249878, 2.158798933029175, 2.1529338359832764, 2.1471714973449707, 2.141509532928467, 2.1359457969665527, 2.1304779052734375, 2.125103712081909, 2.119821548461914, 2.114628791809082, 2.1095237731933594, 2.1045045852661133, 2.099569082260132, 2.0947155952453613, 2.089942455291748, 2.085247755050659, 2.080629587173462, 2.0760865211486816, 2.0716168880462646, 2.0672190189361572, 2.0628914833068848, 2.0586328506469727, 2.054441213607788, 2.0503156185150146, 2.0462543964385986, 2.0422563552856445, 2.0383198261260986, 2.0344438552856445, 2.0306272506713867, 2.0268683433532715, 2.0231661796569824, 2.019519567489624, 2.01592755317688, 2.0123887062072754, 2.008902072906494, 2.0054664611816406, 2.0020811557769775, 1.9987448453903198, 1.995456576347351, 1.9922155141830444, 1.9890207052230835, 1.9858710765838623, 1.982765793800354, 1.9797041416168213, 1.9766851663589478, 1.973707914352417, 1.9707717895507812, 1.9678757190704346, 1.9650192260742188, 1.962201476097107, 1.9594216346740723, -1.9566789865493774, -1.9594216346740723, -1.962201476097107, -1.9650192260742188, -1.9678757190704346, -1.9707717895507812, -1.973707914352417, -1.9766851663589478, -1.9797041416168213, -1.982765793800354, -1.9858710765838623, -1.9890207052230835, -1.9922155141830444, -1.995456576347351, -1.9987448453903198, -2.0020811557769775, -2.0054664611816406, -2.008902072906494, -2.0123887062072754, -2.01592755317688, -2.019519567489624, -2.0231661796569824, -2.0268683433532715, -2.0306272506713867, -2.0344438552856445, -2.0383198261260986, -2.0422563552856445, -2.0462543964385986, -2.0503156185150146, -2.054441213607788, -2.0586328506469727, -2.0628914833068848, -2.0672190189361572, -2.0716168880462646, -2.0760865211486816, -2.080629587173462, -2.085247755050659, -2.089942455291748, -2.0947155952453613, -2.099569082260132, -2.1045045852661133, -2.1095237731933594, -2.114628791809082, -2.119821548461914, -2.125103712081909, -2.1304779052734375, -2.1359457969665527, -2.141509532928467, -2.1471714973449707, -2.1529338359832764, -2.158798933029175, -2.164768934249878, -2.170846462249756, -2.1770339012145996, -2.1833338737487793, -2.189748764038086, -2.1962814331054688, -2.2029342651367188, -2.2097103595733643, -2.2166123390197754, -2.2236430644989014, -2.2308053970336914, -2.238102436065674, -2.245537281036377, -2.25311279296875, -2.2608325481414795, -2.2686991691589355, -2.2767162322998047, -2.2848870754241943, -2.293214797973633, -2.3017029762268066, -2.3103549480438232, -2.319174289703369, -2.3281643390655518, -2.3373289108276367, -2.3466708660125732, -2.356194496154785, -2.365902900695801, -2.3757998943328857, -2.3858888149261475, -2.3961732387542725, -2.4066567420959473, -2.4173426628112793, -2.428234577178955, -2.439335823059082, -2.4506494998931885, -2.462178945541382, -2.4739270210266113, -2.4858970642089844, -2.498091459274292, -2.5105133056640625, -2.523164749145508, -2.53604793548584, -2.5491652488708496, -2.562518358230591, -2.576108694076538, -2.589937686920166, -2.604006052017212, -2.618314266204834, -2.6328628063201904, -2.647651195526123, -2.6626789569854736, -2.677945137023926, -2.6934475898742676, -2.7091848850250244, -2.725153923034668, -2.741352081298828, -2.757775068283081, -2.774418830871582, -2.79127836227417, -2.8083484172821045, -2.825622320175171, -2.8430936336517334, -2.86075496673584, -2.8785979747772217, -2.8966140747070312, -2.9147937297821045, -2.9331274032592773, -2.9516043663024902, -2.9702134132385254, -2.988943338394165, -3.007781744003296, -3.0267159938812256, -3.0457334518432617, -3.0648207664489746, -3.0839641094207764, -3.1031501293182373, -3.1223642826080322, 3.1415927410125732, 3.1219873428344727, 3.1023969650268555, 3.082836866378784, 3.063321590423584, 3.04386568069458, 3.0244839191436768, 3.005190134048462, 2.9859979152679443, 2.9669203758239746, 2.9479706287384033, 2.9291605949401855, 2.9105019569396973, 2.892005681991577, 2.8736822605133057, 2.855541229248047, 2.8375916481018066, 2.8198421001434326, 2.802299976348877, 2.7849724292755127, 2.7678658962249756, 2.750985622406006, 2.7343368530273438, 2.717923641204834, 2.7017500400543213, 2.685818910598755, 2.670132637023926, 2.654693365097046, 2.63950252532959, 2.624560594558716, 2.6098685264587402, 2.595426082611084, 2.581232786178589, 2.5672879219055176, 2.5535900592803955, 2.540138006210327, 2.5269296169281006, 2.513963222503662, 2.5012362003326416, 2.488745927810669, 2.476490020751953, 2.4644651412963867, 2.4526681900024414, 2.441096305847168, 2.429745674133301, 2.4186131954193115, 2.4076952934265137, 2.3969881534576416, 2.386488199234009, 2.3761918544769287, 2.3660950660705566, 2.356194496154785, 2.3464860916137695, 2.336966037750244, 2.3276307582855225, 2.318476438522339, 2.309499502182007, 2.3006958961486816, 2.292062282562256, 2.283595085144043, 2.2752904891967773, 2.2671449184417725, 2.259155035018921, 2.2513175010681152, 2.243628978729248, 2.2360856533050537, 2.228684902191162, 2.2214231491088867, 2.2142975330352783, 2.2073044776916504, 2.200441598892212, 2.1937053203582764, 2.1870932579040527, 2.1806023120880127, 2.174229860305786, 2.167973041534424, 2.1618292331695557, 2.1557960510253906, 2.1498706340789795, 2.1440508365631104, 2.138334035873413, 2.1327178478240967, 2.1272003650665283, 2.121778726577759, 2.1164512634277344, 2.111215829849243, 2.106070041656494, 2.1010119915008545, 2.0960400104522705, 2.091151714324951, 2.0863454341888428, 2.0816192626953125, 2.0769715309143066, 2.0724003314971924, 2.067904233932495, 2.063481330871582, 2.0591301918029785, 2.054849147796631, 2.0506367683410645, 2.0464916229248047, 2.0424118041992188, 2.0383965969085693, 2.0344438552856445, 2.030552864074707, 2.0267221927642822, 2.0229501724243164, 2.0192360877990723, 2.015578269958496, 2.0119757652282715, 2.008427619934082, 2.004932165145874, 2.0014889240264893, 1.9980963468551636, 1.9947535991668701, 1.9914597272872925, 1.9882135391235352, 1.9850143194198608, 1.981860876083374, 1.9787524938583374, 1.975688099861145, 1.9726669788360596, 1.9696881771087646, 1.9667508602142334, 1.9638543128967285, 1.9609977006912231, 1.9581801891326904, 1.955401062965393, 1.9526596069335938, -1.9499549865722656, -1.9526596069335938, -1.955401062965393, -1.9581801891326904, -1.9609977006912231, -1.9638543128967285, -1.9667508602142334, -1.9696881771087646, -1.9726669788360596, -1.975688099861145, -1.9787524938583374, -1.981860876083374, -1.9850143194198608, -1.9882135391235352, -1.9914597272872925, -1.9947535991668701, -1.9980963468551636, -2.0014889240264893, -2.004932165145874, -2.008427619934082, -2.0119757652282715, -2.015578269958496, -2.0192360877990723, -2.0229501724243164, -2.0267221927642822, -2.030552864074707, -2.0344438552856445, -2.0383965969085693, -2.0424118041992188, -2.0464916229248047, -2.0506367683410645, -2.054849147796631, -2.0591301918029785, -2.063481330871582, -2.067904233932495, -2.0724003314971924, -2.0769715309143066, -2.0816192626953125, -2.0863454341888428, -2.091151714324951, -2.0960400104522705, -2.1010119915008545, -2.106070041656494, -2.111215829849243, -2.1164512634277344, -2.121778726577759, -2.1272003650665283, -2.1327178478240967, -2.138334035873413, -2.1440508365631104, -2.1498706340789795, -2.1557960510253906, -2.1618292331695557, -2.167973041534424, -2.174229860305786, -2.1806023120880127, -2.1870932579040527, -2.1937053203582764, -2.200441598892212, -2.2073044776916504, -2.2142975330352783, -2.2214231491088867, -2.228684902191162, -2.2360856533050537, -2.243628978729248, -2.2513175010681152, -2.259155035018921, -2.2671449184417725, -2.2752904891967773, -2.283595085144043, -2.292062282562256, -2.3006958961486816, -2.309499502182007, -2.318476438522339, -2.3276307582855225, -2.336966037750244, -2.3464860916137695, -2.356194496154785, -2.3660950660705566, -2.3761918544769287, -2.386488199234009, -2.3969881534576416, -2.4076952934265137, -2.4186131954193115, -2.429745674133301, -2.441096305847168, -2.4526681900024414, -2.4644651412963867, -2.476490020751953, -2.488745927810669, -2.5012362003326416, -2.513963222503662, -2.5269296169281006, -2.540138006210327, -2.5535900592803955, -2.5672879219055176, -2.581232786178589, -2.595426082611084, -2.6098685264587402, -2.624560594558716, -2.63950252532959, -2.654693365097046, -2.670132637023926, -2.685818910598755, -2.7017500400543213, -2.717923641204834, -2.7343368530273438, -2.750985622406006, -2.7678658962249756, -2.7849724292755127, -2.802299976348877, -2.8198421001434326, -2.8375916481018066, -2.855541229248047, -2.8736822605133057, -2.892005681991577, -2.9105019569396973, -2.9291605949401855, -2.9479706287384033, -2.9669203758239746, -2.9859979152679443, -3.005190134048462, -3.0244839191436768, -3.04386568069458, -3.063321590423584, -3.082836866378784, -3.1023969650268555, -3.1219873428344727, 3.1415927410125732, 3.1215953826904297, 3.101613998413086, 3.081664562225342, 3.061762571334839, 3.041923999786377, 3.0221636295318604, 3.0024967193603516, 2.9829373359680176, 2.9634997844696045, 2.944197177886963, 2.9250423908233643, 2.9060475826263428, 2.8872246742248535, 2.868583917617798, 2.8501358032226562, 2.8318896293640137, 2.813854217529297, 2.796036958694458, 2.7784457206726074, 2.7610862255096436, 2.743964672088623, 2.727085828781128, 2.710453987121582, 2.694072723388672, 2.677945137023926, 2.6620733737945557, 2.6464593410491943, 2.6311042308807373, 2.616008758544922, 2.601173162460327, 2.586596965789795, 2.572279453277588, 2.5582196712493896, 2.5444159507751465, 2.5308666229248047, 2.5175695419311523, 2.5045223236083984, 2.4917221069335938, 2.479166269302368, 2.4668517112731934, 2.454775094985962, 2.4429328441619873, 2.431321620941162, 2.4199378490448, 2.4087774753570557, 2.3978371620178223, 2.3871123790740967, 2.3765997886657715, 2.366295099258423, 2.356194496154785, 2.3462939262390137, 2.3365890979766846, 2.3270764350891113, 2.317751884460449, 2.3086113929748535, 2.2996511459350586, 2.2908670902252197, 2.2822554111480713, 2.2738125324249268, 2.2655346393585205, 2.257417917251587, 2.2494587898254395, 2.2416536808013916, 2.233999252319336, 2.226491928100586, 2.219128370285034, 2.211905002593994, 2.2048189640045166, 2.197866916656494, 2.1910457611083984, 2.184352397918701, 2.177783966064453, 2.171337366104126, 2.1650099754333496, 2.158798933029175, 2.1527013778686523, 2.146714925765991, 2.140836715698242, 2.1350646018981934, 2.1293957233428955, 2.1238276958465576, 2.118358612060547, 2.112985849380493, 2.1077070236206055, 2.10252046585083, 2.097423553466797, 2.092414617538452, 2.087491512298584, 2.0826520919799805, 2.077894926071167, 2.0732176303863525, 2.0686187744140625, 2.064096212387085, 2.0596487522125244, 2.055274248123169, 2.050971269607544, 2.046738386154175, 2.042573928833008, 2.0384762287139893, 2.0344438552856445, 2.030475616455078, 2.0265700817108154, 2.022725820541382, 2.0189414024353027, 2.0152156352996826, 2.011547088623047, 2.007935047149658, 2.004377841949463, 2.0008745193481445, 1.997423768043518, 1.9940247535705566, 1.9906762838363647, 1.9873772859573364, 1.9841266870498657, 1.9809236526489258, 1.9777671098709106, 1.974656105041504, 1.9715898036956787, 1.968567132949829, 1.9655874967575073, 1.9626497030258179, 1.959753155708313, 1.9568970203399658, 1.9540804624557495, 1.9513026475906372, 1.9485629796981812, 1.9458606243133545, -1.9431947469711304, -1.9458606243133545, -1.9485629796981812, -1.9513026475906372, -1.9540804624557495, -1.9568970203399658, -1.959753155708313, -1.9626497030258179, -1.9655874967575073, -1.968567132949829, -1.9715898036956787, -1.974656105041504, -1.9777671098709106, -1.9809236526489258, -1.9841266870498657, -1.9873772859573364, -1.9906762838363647, -1.9940247535705566, -1.997423768043518, -2.0008745193481445, -2.004377841949463, -2.007935047149658, -2.011547088623047, -2.0152156352996826, -2.0189414024353027, -2.022725820541382, -2.0265700817108154, -2.030475616455078, -2.0344438552856445, -2.0384762287139893, -2.042573928833008, -2.046738386154175, -2.050971269607544, -2.055274248123169, -2.0596487522125244, -2.064096212387085, -2.0686187744140625, -2.0732176303863525, -2.077894926071167, -2.0826520919799805, -2.087491512298584, -2.092414617538452, -2.097423553466797, -2.10252046585083, -2.1077070236206055, -2.112985849380493, -2.118358612060547, -2.1238276958465576, -2.1293957233428955, -2.1350646018981934, -2.140836715698242, -2.146714925765991, -2.1527013778686523, -2.158798933029175, -2.1650099754333496, -2.171337366104126, -2.177783966064453, -2.184352397918701, -2.1910457611083984, -2.197866916656494, -2.2048189640045166, -2.211905002593994, -2.219128370285034, -2.226491928100586, -2.233999252319336, -2.2416536808013916, -2.2494587898254395, -2.257417917251587, -2.2655346393585205, -2.2738125324249268, -2.2822554111480713, -2.2908670902252197, -2.2996511459350586, -2.3086113929748535, -2.317751884460449, -2.3270764350891113, -2.3365890979766846, -2.3462939262390137, -2.356194496154785, -2.366295099258423, -2.3765997886657715, -2.3871123790740967, -2.3978371620178223, -2.4087774753570557, -2.4199378490448, -2.431321620941162, -2.4429328441619873, -2.454775094985962, -2.4668517112731934, -2.479166269302368, -2.4917221069335938, -2.5045223236083984, -2.5175695419311523, -2.5308666229248047, -2.5444159507751465, -2.5582196712493896, -2.572279453277588, -2.586596965789795, -2.601173162460327, -2.616008758544922, -2.6311042308807373, -2.6464593410491943, -2.6620733737945557, -2.677945137023926, -2.694072723388672, -2.710453987121582, -2.727085828781128, -2.743964672088623, -2.7610862255096436, -2.7784457206726074, -2.796036958694458, -2.813854217529297, -2.8318896293640137, -2.8501358032226562, -2.868583917617798, -2.8872246742248535, -2.9060475826263428, -2.9250423908233643, -2.944197177886963, -2.9634997844696045, -2.9829373359680176, -3.0024967193603516, -3.0221636295318604, -3.041923999786377, -3.061762571334839, -3.081664562225342, -3.101613998413086, -3.1215953826904297, 3.1415927410125732, 3.121187210083008, 3.100799083709717, 3.080444574356079, 3.060140609741211, 3.0399038791656494, 3.0197501182556152, 2.9996955394744873, 2.979755163192749, 2.9599437713623047, 2.9402754306793213, 2.9207639694213867, 2.901421546936035, 2.882260799407959, 2.863292932510376, 2.8445284366607666, 2.825977087020874, 2.807647466659546, 2.789548397064209, 2.771686553955078, 2.7540688514709473, 2.7367007732391357, 2.719587564468384, 2.702733278274536, 2.6861414909362793, 2.6698150634765625, 2.6537561416625977, 2.6379663944244385, 2.6224465370178223, 2.6071972846984863, 2.5922181606292725, 2.5775089263916016, 2.563068389892578, 2.5488953590393066, 2.534987449645996, 2.521343231201172, 2.5079596042633057, 2.4948341846466064, 2.481963872909546, 2.4693455696105957, 2.4569754600524902, 2.444850444793701, 2.432966470718384, 2.4213197231292725, 2.4099061489105225, 2.398721933364868, 2.387763023376465, 2.3770248889923096, 2.3665034770965576, 2.356194496154785, 2.3460938930511475, 2.3361971378326416, 2.326500177383423, 2.3169989585876465, 2.3076889514923096, 2.2985661029815674, 2.289626359939575, 2.2808656692504883, 2.272279977798462, 2.2638652324676514, 2.255617618560791, 2.2475333213806152, 2.2396085262298584, 2.231839418411255, 2.2242226600646973, 2.21675443649292, 2.2094314098358154, 2.202249765396118, 2.195206642150879, 2.188298463821411, 2.1815223693847656, 2.174874782562256, 2.1683528423309326, 2.1619534492492676, 2.1556739807128906, 2.1495113372802734, 2.143462657928467, 2.1375255584716797, 2.131697177886963, 2.1259748935699463, 2.120356321334839, 2.1148390769958496, 2.1094205379486084, 2.1040985584259033, 2.0988707542419434, 2.0937349796295166, 2.0886893272399902, 2.0837314128875732, 2.0788590908050537, 2.074070692062378, 2.069364309310913, 2.0647377967834473, 2.0601892471313477, 2.0557172298431396, 2.0513200759887695, 2.0469956398010254, 2.0427424907684326, 2.0385591983795166, 2.0344438552856445, 2.030395269393921, 2.026412010192871, 2.0224924087524414, 2.0186350345611572, 2.014838695526123, 2.0111019611358643, 2.0074234008789062, 2.0038022994995117, 2.000236749649048, 1.9967260360717773, 1.9932687282562256, 1.9898638725280762, 1.986510157585144, 1.9832067489624023, 1.9799524545669556, 1.9767463207244873, 1.9735872745513916, 1.970474362373352, 1.9674067497253418, 1.9643833637237549, 1.9614033699035645, 1.9584659337997437, 1.955570101737976, 1.9527151584625244, 1.9499001502990723, 1.9471244812011719, 1.9443871974945068, 1.9416875839233398, 1.9390250444412231, -1.9363986253738403, -1.9390250444412231, -1.9416875839233398, -1.9443871974945068, -1.9471244812011719, -1.9499001502990723, -1.9527151584625244, -1.955570101737976, -1.9584659337997437, -1.9614033699035645, -1.9643833637237549, -1.9674067497253418, -1.970474362373352, -1.9735872745513916, -1.9767463207244873, -1.9799524545669556, -1.9832067489624023, -1.986510157585144, -1.9898638725280762, -1.9932687282562256, -1.9967260360717773, -2.000236749649048, -2.0038022994995117, -2.0074234008789062, -2.0111019611358643, -2.014838695526123, -2.0186350345611572, -2.0224924087524414, -2.026412010192871, -2.030395269393921, -2.0344438552856445, -2.0385591983795166, -2.0427424907684326, -2.0469956398010254, -2.0513200759887695, -2.0557172298431396, -2.0601892471313477, -2.0647377967834473, -2.069364309310913, -2.074070692062378, -2.0788590908050537, -2.0837314128875732, -2.0886893272399902, -2.0937349796295166, -2.0988707542419434, -2.1040985584259033, -2.1094205379486084, -2.1148390769958496, -2.120356321334839, -2.1259748935699463, -2.131697177886963, -2.1375255584716797, -2.143462657928467, -2.1495113372802734, -2.1556739807128906, -2.1619534492492676, -2.1683528423309326, -2.174874782562256, -2.1815223693847656, -2.188298463821411, -2.195206642150879, -2.202249765396118, -2.2094314098358154, -2.21675443649292, -2.2242226600646973, -2.231839418411255, -2.2396085262298584, -2.2475333213806152, -2.255617618560791, -2.2638652324676514, -2.272279977798462, -2.2808656692504883, -2.289626359939575, -2.2985661029815674, -2.3076889514923096, -2.3169989585876465, -2.326500177383423, -2.3361971378326416, -2.3460938930511475, -2.356194496154785, -2.3665034770965576, -2.3770248889923096, -2.387763023376465, -2.398721933364868, -2.4099061489105225, -2.4213197231292725, -2.432966470718384, -2.444850444793701, -2.4569754600524902, -2.4693455696105957, -2.481963872909546, -2.4948341846466064, -2.5079596042633057, -2.521343231201172, -2.534987449645996, -2.5488953590393066, -2.563068389892578, -2.5775089263916016, -2.5922181606292725, -2.6071972846984863, -2.6224465370178223, -2.6379663944244385, -2.6537561416625977, -2.6698150634765625, -2.6861414909362793, -2.702733278274536, -2.719587564468384, -2.7367007732391357, -2.7540688514709473, -2.771686553955078, -2.789548397064209, -2.807647466659546, -2.825977087020874, -2.8445284366607666, -2.863292932510376, -2.882260799407959, -2.901421546936035, -2.9207639694213867, -2.9402754306793213, -2.9599437713623047, -2.979755163192749, -2.9996955394744873, -3.0197501182556152, -3.0399038791656494, -3.060140609741211, -3.080444574356079, -3.100799083709717, -3.121187210083008, 3.1415927410125732, 3.120762348175049, 3.099950075149536, 3.0791738033294678, 3.0584514141082764, 3.0378003120422363, 3.017237663269043, 2.9967801570892334, 2.9764440059661865, 2.956244707107544, 2.936197280883789, 2.916315793991089, 2.8966140747070312, 2.8771042823791504, 2.8577985763549805, 2.838707685470581, 2.8198421001434326, 2.801210641860962, 2.7828218936920166, 2.764683485031128, 2.7468016147613525, 2.729182243347168, 2.7118303775787354, 2.6947500705718994, 2.677945137023926, 2.6614177227020264, 2.645169973373413, 2.6292030811309814, 2.613518238067627, 2.5981149673461914, 2.582993268966675, 2.5681521892547607, 2.5535900592803955, 2.5393052101135254, 2.5252957344055176, 2.511558771133423, 2.498091459274292, 2.484890937805176, 2.4719536304473877, 2.4592761993408203, 2.44685435295105, 2.4346845149993896, 2.422762632369995, 2.4110844135284424, 2.3996453285217285, 2.388441324234009, 2.3774678707122803, 2.36672043800354, 2.356194496154785, 2.3458855152130127, 2.335789203643799, 2.3259007930755615, 2.316215753555298, 2.306730031967163, 2.297438621520996, 2.2883377075195312, 2.2794225215911865, 2.2706892490386963, 2.2621333599090576, 2.2537505626678467, 2.245537281036377, 2.2374892234802246, 2.229602336883545, 2.2218730449676514, 2.2142975330352783, 2.206871747970581, 2.1995925903320312, 2.1924562454223633, 2.1854593753814697, 2.178598403930664, 2.171869993209839, 2.165271282196045, 2.158798933029175, 2.1524498462677, 2.1462209224700928, 2.1401095390319824, 2.134112596511841, 2.128227472305298, 2.1224513053894043, 2.116781711578369, 2.111215829849243, 2.1057515144348145, 2.100385904312134, 2.0951170921325684, 2.089942455291748, 2.084859848022461, 2.079867124557495, 2.0749623775482178, 2.070142984390259, 2.0654075145721436, 2.060753583908081, 2.0561795234680176, 2.0516836643218994, 2.0472638607025146, 2.0429182052612305, 2.0386455059051514, 2.0344438552856445, 2.0303118228912354, 2.026247501373291, 2.022249460220337, 2.0183162689208984, 2.014446496963501, 2.010638952255249, 2.006891965866089, 2.003204107284546, 1.9995743036270142, 1.9960013628005981, 1.9924838542938232, 1.9890207052230835, 1.9856106042861938, 1.982252597808838, 1.9789453744888306, 1.975688099861145, 1.9724795818328857, 1.9693187475204468, 1.9662047624588013, 1.9631364345550537, 1.9601130485534668, 1.9571335315704346, 1.9541970491409302, 1.9513026475906372, 1.9484496116638184, 1.9456369876861572, 1.9428640604019165, 1.9401299953460693, 1.9374339580535889, 1.9347752332687378, 1.9321532249450684, -1.9295669794082642, -1.9321532249450684, -1.9347752332687378, -1.9374339580535889, -1.9401299953460693, -1.9428640604019165, -1.9456369876861572, -1.9484496116638184, -1.9513026475906372, -1.9541970491409302, -1.9571335315704346, -1.9601130485534668, -1.9631364345550537, -1.9662047624588013, -1.9693187475204468, -1.9724795818328857, -1.975688099861145, -1.9789453744888306, -1.982252597808838, -1.9856106042861938, -1.9890207052230835, -1.9924838542938232, -1.9960013628005981, -1.9995743036270142, -2.003204107284546, -2.006891965866089, -2.010638952255249, -2.014446496963501, -2.0183162689208984, -2.022249460220337, -2.026247501373291, -2.0303118228912354, -2.0344438552856445, -2.0386455059051514, -2.0429182052612305, -2.0472638607025146, -2.0516836643218994, -2.0561795234680176, -2.060753583908081, -2.0654075145721436, -2.070142984390259, -2.0749623775482178, -2.079867124557495, -2.084859848022461, -2.089942455291748, -2.0951170921325684, -2.100385904312134, -2.1057515144348145, -2.111215829849243, -2.116781711578369, -2.1224513053894043, -2.128227472305298, -2.134112596511841, -2.1401095390319824, -2.1462209224700928, -2.1524498462677, -2.158798933029175, -2.165271282196045, -2.171869993209839, -2.178598403930664, -2.1854593753814697, -2.1924562454223633, -2.1995925903320312, -2.206871747970581, -2.2142975330352783, -2.2218730449676514, -2.229602336883545, -2.2374892234802246, -2.245537281036377, -2.2537505626678467, -2.2621333599090576, -2.2706892490386963, -2.2794225215911865, -2.2883377075195312, -2.297438621520996, -2.306730031967163, -2.316215753555298, -2.3259007930755615, -2.335789203643799, -2.3458855152130127, -2.356194496154785, -2.36672043800354, -2.3774678707122803, -2.388441324234009, -2.3996453285217285, -2.4110844135284424, -2.422762632369995, -2.4346845149993896, -2.44685435295105, -2.4592761993408203, -2.4719536304473877, -2.484890937805176, -2.498091459274292, -2.511558771133423, -2.5252957344055176, -2.5393052101135254, -2.5535900592803955, -2.5681521892547607, -2.582993268966675, -2.5981149673461914, -2.613518238067627, -2.6292030811309814, -2.645169973373413, -2.6614177227020264, -2.677945137023926, -2.6947500705718994, -2.7118303775787354, -2.729182243347168, -2.7468016147613525, -2.764683485031128, -2.7828218936920166, -2.801210641860962, -2.8198421001434326, -2.838707685470581, -2.8577985763549805, -2.8771042823791504, -2.8966140747070312, -2.916315793991089, -2.936197280883789, -2.956244707107544, -2.9764440059661865, -2.9967801570892334, -3.017237663269043, -3.0378003120422363, -3.0584514141082764, -3.0791738033294678, -3.099950075149536, -3.120762348175049, 3.1415927410125732, 3.120319366455078, 3.099065065383911, 3.0778493881225586, 3.0566909313201904, 3.0356082916259766, 3.014619827270508, 2.9937431812286377, 2.9729957580566406, 2.9523935317993164, 2.931952714920044, 2.9116883277893066, 2.8916139602661133, 2.8717434406280518, 2.8520889282226562, 2.8326618671417236, 2.8134727478027344, 2.7945311069488525, 2.7758452892303467, 2.7574234008789062, 2.739271640777588, 2.721395969390869, 2.703801393508911, 2.6864917278289795, 2.66947078704834, 2.652740240097046, 2.6363024711608887, 2.6201581954956055, 2.6043078899383545, 2.5887513160705566, 2.5734879970550537, 2.558516025543213, 2.5438342094421387, 2.52944016456604, 2.515331268310547, 2.501504421234131, 2.4879567623138428, 2.474684476852417, 2.461683750152588, 2.44895076751709, 2.436481237411499, 2.4242708683013916, 2.4123153686523438, 2.4006097316741943, 2.3891496658325195, 2.377930164337158, 2.3669466972351074, 2.356194496154785, 2.3456685543060303, 2.3353641033172607, 2.3252766132354736, 2.3154008388519287, 2.305732250213623, 2.2962663173675537, 2.2869982719421387, 2.277923345565796, 2.2690372467041016, 2.2603354454040527, 2.2518134117126465, 2.243466854095459, 2.2352917194366455, 2.2272837162017822, 2.2194387912750244, 2.2117528915405273, 2.2042222023010254, 2.196842908859253, 2.1896111965179443, 2.182523250579834, 2.1755759716033936, 2.1687653064727783, 2.162088394165039, 2.1555416584014893, 2.1491217613220215, 2.1428258419036865, 2.136650562286377, 2.1305932998657227, 2.124650716781616, 2.1188201904296875, 2.1130990982055664, 2.1074845790863037, 2.1019740104675293, 2.096564769744873, 2.091254711151123, 2.086041212081909, 2.0809221267700195, 2.075894832611084, 2.0709574222564697, 2.0661075115203857, 2.061343193054199, 2.0566625595092773, 2.052063226699829, 2.047543525695801, 2.0431017875671387, 2.038735866546631, 2.0344438552856445, 2.030224561691284, 2.026075839996338, 2.02199649810791, 2.017984628677368, 2.014038562774658, 2.0101571083068848, 2.0063388347625732, 2.002582311630249, 1.9988857507705688, 1.9952483177185059, 1.991668462753296, 1.9881449937820435, 1.9846765995025635, 1.98126220703125, 1.977900505065918, 1.9745904207229614, 1.9713308811187744, 1.9681206941604614, 1.964958906173706, 1.9618444442749023, 1.9587763547897339, 1.9557536840438843, 1.952775478363037, 1.9498406648635864, 1.9469486474990845, 1.9440982341766357, 1.941288709640503, 1.9385193586349487, 1.9357891082763672, 1.9330974817276, 1.9304434061050415, 1.9278264045715332, 1.9252455234527588, -1.9227001667022705, -1.9252455234527588, -1.9278264045715332, -1.9304434061050415, -1.9330974817276, -1.9357891082763672, -1.9385193586349487, -1.941288709640503, -1.9440982341766357, -1.9469486474990845, -1.9498406648635864, -1.952775478363037, -1.9557536840438843, -1.9587763547897339, -1.9618444442749023, -1.964958906173706, -1.9681206941604614, -1.9713308811187744, -1.9745904207229614, -1.977900505065918, -1.98126220703125, -1.9846765995025635, -1.9881449937820435, -1.991668462753296, -1.9952483177185059, -1.9988857507705688, -2.002582311630249, -2.0063388347625732, -2.0101571083068848, -2.014038562774658, -2.017984628677368, -2.02199649810791, -2.026075839996338, -2.030224561691284, -2.0344438552856445, -2.038735866546631, -2.0431017875671387, -2.047543525695801, -2.052063226699829, -2.0566625595092773, -2.061343193054199, -2.0661075115203857, -2.0709574222564697, -2.075894832611084, -2.0809221267700195, -2.086041212081909, -2.091254711151123, -2.096564769744873, -2.1019740104675293, -2.1074845790863037, -2.1130990982055664, -2.1188201904296875, -2.124650716781616, -2.1305932998657227, -2.136650562286377, -2.1428258419036865, -2.1491217613220215, -2.1555416584014893, -2.162088394165039, -2.1687653064727783, -2.1755759716033936, -2.182523250579834, -2.1896111965179443, -2.196842908859253, -2.2042222023010254, -2.2117528915405273, -2.2194387912750244, -2.2272837162017822, -2.2352917194366455, -2.243466854095459, -2.2518134117126465, -2.2603354454040527, -2.2690372467041016, -2.277923345565796, -2.2869982719421387, -2.2962663173675537, -2.305732250213623, -2.3154008388519287, -2.3252766132354736, -2.3353641033172607, -2.3456685543060303, -2.356194496154785, -2.3669466972351074, -2.377930164337158, -2.3891496658325195, -2.4006097316741943, -2.4123153686523438, -2.4242708683013916, -2.436481237411499, -2.44895076751709, -2.461683750152588, -2.474684476852417, -2.4879567623138428, -2.501504421234131, -2.515331268310547, -2.52944016456604, -2.5438342094421387, -2.558516025543213, -2.5734879970550537, -2.5887513160705566, -2.6043078899383545, -2.6201581954956055, -2.6363024711608887, -2.652740240097046, -2.66947078704834, -2.6864917278289795, -2.703801393508911, -2.721395969390869, -2.739271640777588, -2.7574234008789062, -2.7758452892303467, -2.7945311069488525, -2.8134727478027344, -2.8326618671417236, -2.8520889282226562, -2.8717434406280518, -2.8916139602661133, -2.9116883277893066, -2.931952714920044, -2.9523935317993164, -2.9729957580566406, -2.9937431812286377, -3.014619827270508, -3.0356082916259766, -3.0566909313201904, -3.0778493881225586, -3.099065065383911, -3.120319366455078, 3.1415927410125732, 3.119856834411621, 3.098141670227051, 3.076467514038086, 3.054854393005371, 3.0333220958709717, 3.011890172958374, 2.990577220916748, 2.9694018363952637, 2.948381185531616, 2.9275319576263428, 2.906870126724243, 2.8864102363586426, 2.866166591644287, 2.846151828765869, 2.8263778686523438, 2.8068559169769287, 2.787595272064209, 2.7686049938201904, 2.7498927116394043, 2.7314653396606445, 2.7133285999298096, 2.6954870223999023, 2.677945137023926, 2.660705327987671, 2.643770217895508, 2.627141237258911, 2.610819101333618, 2.594803810119629, 2.579094648361206, 2.563690662384033, 2.5485901832580566, 2.5337905883789062, 2.51928973197937, 2.50508451461792, 2.49117112159729, 2.477546453475952, 2.4642062187194824, 2.451146125793457, 2.4383621215820312, 2.425848960876465, 2.413602590560913, 2.4016177654266357, 2.3898894786834717, 2.378412961959839, 2.367182970046997, 2.356194496154785, 2.345442295074463, 2.33492112159729, 2.3246259689331055, 2.314551830291748, 2.3046936988830566, 2.295046329498291, 2.285604953765869, 2.27636456489563, 2.267320394515991, 2.258467674255371, 2.2498016357421875, 2.2413179874420166, 2.2330117225646973, 2.224879026412964, 2.2169151306152344, 2.209116220474243, 2.201477527618408, 2.193995714187622, 2.186666250228882, 2.179485559463501, 2.172450065612793, 2.165555477142334, 2.158798933029175, 2.15217661857605, 2.1456849575042725, 2.1393208503723145, 2.1330811977386475, 2.126962661743164, 2.120962142944336, 2.115076780319214, 2.1093037128448486, 2.10364031791687, 2.098083257675171, 2.092630624771118, 2.0872793197631836, 2.082026958465576, 2.076871395111084, 2.071809768676758, 2.0668399333953857, 2.061959981918335, 2.0571672916412354, 2.052459955215454, 2.0478360652923584, 2.0432932376861572, 2.038829803466797, 2.0344438552856445, 2.0301337242126465, 2.0258970260620117, 2.021732807159424, 2.017638683319092, 2.013613700866699, 2.009655714035034, 2.005763292312622, 2.0019350051879883, 1.9981695413589478, 1.9944652318954468, 1.9908208847045898, 1.9872349500656128, 1.9837062358856201, 1.9802335500717163, 1.9768154621124268, 1.973451018333435, 1.9701387882232666, 1.966877818107605, 1.9636667966842651, 1.9605048894882202, 1.9573909044265747, 1.9543238878250122, 1.9513026475906372, 1.9483264684677124, 1.9453943967819214, 1.9425052404403687, 1.9396584033966064, 1.9368528127670288, 1.9340877532958984, 1.931362271308899, 1.9286757707595825, 1.9260271787643433, 1.9234158992767334, 1.9208412170410156, 1.918302297592163, -1.915798544883728, -1.918302297592163, -1.9208412170410156, -1.9234158992767334, -1.9260271787643433, -1.9286757707595825, -1.931362271308899, -1.9340877532958984, -1.9368528127670288, -1.9396584033966064, -1.9425052404403687, -1.9453943967819214, -1.9483264684677124, -1.9513026475906372, -1.9543238878250122, -1.9573909044265747, -1.9605048894882202, -1.9636667966842651, -1.966877818107605, -1.9701387882232666, -1.973451018333435, -1.9768154621124268, -1.9802335500717163, -1.9837062358856201, -1.9872349500656128, -1.9908208847045898, -1.9944652318954468, -1.9981695413589478, -2.0019350051879883, -2.005763292312622, -2.009655714035034, -2.013613700866699, -2.017638683319092, -2.021732807159424, -2.0258970260620117, -2.0301337242126465, -2.0344438552856445, -2.038829803466797, -2.0432932376861572, -2.0478360652923584, -2.052459955215454, -2.0571672916412354, -2.061959981918335, -2.0668399333953857, -2.071809768676758, -2.076871395111084, -2.082026958465576, -2.0872793197631836, -2.092630624771118, -2.098083257675171, -2.10364031791687, -2.1093037128448486, -2.115076780319214, -2.120962142944336, -2.126962661743164, -2.1330811977386475, -2.1393208503723145, -2.1456849575042725, -2.15217661857605, -2.158798933029175, -2.165555477142334, -2.172450065612793, -2.179485559463501, -2.186666250228882, -2.193995714187622, -2.201477527618408, -2.209116220474243, -2.2169151306152344, -2.224879026412964, -2.2330117225646973, -2.2413179874420166, -2.2498016357421875, -2.258467674255371, -2.267320394515991, -2.27636456489563, -2.285604953765869, -2.295046329498291, -2.3046936988830566, -2.314551830291748, -2.3246259689331055, -2.33492112159729, -2.345442295074463, -2.356194496154785, -2.367182970046997, -2.378412961959839, -2.3898894786834717, -2.4016177654266357, -2.413602590560913, -2.425848960876465, -2.4383621215820312, -2.451146125793457, -2.4642062187194824, -2.477546453475952, -2.49117112159729, -2.50508451461792, -2.51928973197937, -2.5337905883789062, -2.5485901832580566, -2.563690662384033, -2.579094648361206, -2.594803810119629, -2.610819101333618, -2.627141237258911, -2.643770217895508, -2.660705327987671, -2.677945137023926, -2.6954870223999023, -2.7133285999298096, -2.7314653396606445, -2.7498927116394043, -2.7686049938201904, -2.787595272064209, -2.8068559169769287, -2.8263778686523438, -2.846151828765869, -2.866166591644287, -2.8864102363586426, -2.906870126724243, -2.9275319576263428, -2.948381185531616, -2.9694018363952637, -2.990577220916748, -3.011890172958374, -3.0333220958709717, -3.054854393005371, -3.076467514038086, -3.098141670227051, -3.119856834411621, 3.1415927410125732, 3.1193740367889404, 3.097177505493164, 3.0750246047973633, 3.0529367923736572, 3.030935525894165, 3.0090410709381104, 2.987273931503296, 2.9656529426574707, 2.944197177886963, 2.9229238033294678, 2.9018495082855225, 2.8809902667999268, 2.8603603839874268, 2.8399736881256104, 2.8198421001434326, 2.7999770641326904, 2.780388832092285, 2.7610862255096436, 2.742077112197876, 2.7233684062957764, 2.704965591430664, 2.686873435974121, 2.669095754623413, 2.6516354084014893, 2.6344940662384033, 2.617673397064209, 2.601173162460327, 2.584993362426758, 2.5691328048706055, 2.5535900592803955, 2.538362741470337, 2.5234484672546387, 2.5088438987731934, 2.4945454597473145, 2.4805495738983154, 2.4668517112731934, 2.4534475803375244, 2.4403326511383057, 2.427501916885376, 2.414950370788574, 2.402672529220581, 2.3906636238098145, 2.378917932510376, 2.3674299716949463, 2.356194496154785, 2.3452060222625732, 2.334458827972412, 2.3239476680755615, 2.313667058944702, 2.3036115169525146, 2.293775796890259, 2.2841544151306152, 2.274742364883423, 2.2655346393585205, 2.256525754928589, 2.247711181640625, 2.2390856742858887, 2.230644702911377, 2.222383499145508, 2.2142975330352783, 2.2063820362091064, 2.1986329555511475, 2.1910457611083984, 2.1836166381835938, 2.1763410568237305, 2.169215202331543, 2.1622352600097656, 2.155397653579712, 2.148698329925537, 2.1421337127685547, 2.1357007026672363, 2.1293957233428955, 2.1232151985168457, 2.1171562671661377, 2.111215829849243, 2.1053905487060547, 2.099677801132202, 2.0940747261047363, 2.088578224182129, 2.0831856727600098, 2.077894926071167, 2.0727028846740723, 2.0676071643829346, 2.062605619430542, 2.0576956272125244, 2.05287504196167, 2.0481417179107666, 2.0434935092926025, 2.038928270339966, 2.0344438552856445, 2.030038595199585, 2.0257105827331543, 2.0214576721191406, 2.0172781944274902, 2.0131704807281494, 2.0091328620910645, 2.0051636695861816, 2.001260995864868, 1.997423768043518, 1.993650197982788, 1.9899389743804932, 1.9862884283065796, 1.9826973676681519, 1.9791643619537354, 1.975688099861145, 1.9722673892974854, 1.9689009189605713, 1.9655874967575073, 1.962325930595398, 1.9591150283813477, 1.95595383644104, 1.9528411626815796, 1.9497759342193604, 1.9467573165893555, 1.9437839984893799, 1.9408552646636963, 1.9379701614379883, 1.93512761592865, 1.9323269128799438, 1.9295669794082642, 1.9268471002578735, 1.9241665601730347, 1.9215242862701416, 1.9189196825027466, 1.9163519144058228, 1.9138202667236328, 1.9113240242004395, -1.9088624715805054, -1.9113240242004395, -1.9138202667236328, -1.9163519144058228, -1.9189196825027466, -1.9215242862701416, -1.9241665601730347, -1.9268471002578735, -1.9295669794082642, -1.9323269128799438, -1.93512761592865, -1.9379701614379883, -1.9408552646636963, -1.9437839984893799, -1.9467573165893555, -1.9497759342193604, -1.9528411626815796, -1.95595383644104, -1.9591150283813477, -1.962325930595398, -1.9655874967575073, -1.9689009189605713, -1.9722673892974854, -1.975688099861145, -1.9791643619537354, -1.9826973676681519, -1.9862884283065796, -1.9899389743804932, -1.993650197982788, -1.997423768043518, -2.001260995864868, -2.0051636695861816, -2.0091328620910645, -2.0131704807281494, -2.0172781944274902, -2.0214576721191406, -2.0257105827331543, -2.030038595199585, -2.0344438552856445, -2.038928270339966, -2.0434935092926025, -2.0481417179107666, -2.05287504196167, -2.0576956272125244, -2.062605619430542, -2.0676071643829346, -2.0727028846740723, -2.077894926071167, -2.0831856727600098, -2.088578224182129, -2.0940747261047363, -2.099677801132202, -2.1053905487060547, -2.111215829849243, -2.1171562671661377, -2.1232151985168457, -2.1293957233428955, -2.1357007026672363, -2.1421337127685547, -2.148698329925537, -2.155397653579712, -2.1622352600097656, -2.169215202331543, -2.1763410568237305, -2.1836166381835938, -2.1910457611083984, -2.1986329555511475, -2.2063820362091064, -2.2142975330352783, -2.222383499145508, -2.230644702911377, -2.2390856742858887, -2.247711181640625, -2.256525754928589, -2.2655346393585205, -2.274742364883423, -2.2841544151306152, -2.293775796890259, -2.3036115169525146, -2.313667058944702, -2.3239476680755615, -2.334458827972412, -2.3452060222625732, -2.356194496154785, -2.3674299716949463, -2.378917932510376, -2.3906636238098145, -2.402672529220581, -2.414950370788574, -2.427501916885376, -2.4403326511383057, -2.4534475803375244, -2.4668517112731934, -2.4805495738983154, -2.4945454597473145, -2.5088438987731934, -2.5234484672546387, -2.538362741470337, -2.5535900592803955, -2.5691328048706055, -2.584993362426758, -2.601173162460327, -2.617673397064209, -2.6344940662384033, -2.6516354084014893, -2.669095754623413, -2.686873435974121, -2.704965591430664, -2.7233684062957764, -2.742077112197876, -2.7610862255096436, -2.780388832092285, -2.7999770641326904, -2.8198421001434326, -2.8399736881256104, -2.8603603839874268, -2.8809902667999268, -2.9018495082855225, -2.9229238033294678, -2.944197177886963, -2.9656529426574707, -2.987273931503296, -3.0090410709381104, -3.030935525894165, -3.0529367923736572, -3.0750246047973633, -3.097177505493164, -3.1193740367889404, 3.1415927410125732, 3.1188693046569824, 3.0961694717407227, 3.0735161304473877, 3.0509328842163086, 3.0284416675567627, 3.0060648918151855, 2.9838240146636963, 2.9617390632629395, 2.9398303031921387, 2.9181160926818848, 2.8966140747070312, 2.875340700149536, 2.854311227798462, 2.8335399627685547, 2.813039541244507, 2.7928216457366943, 2.7728967666625977, 2.7532739639282227, 2.7339611053466797, 2.7149651050567627, 2.69629168510437, 2.677945137023926, 2.659929037094116, 2.6422460079193115, 2.6248974800109863, 2.607884407043457, 2.5912067890167236, 2.5748634338378906, 2.5588531494140625, 2.5431737899780273, 2.527822494506836, 2.512796401977539, 2.498091459274292, 2.483704090118408, 2.4696295261383057, 2.4558632373809814, 2.4423999786376953, 2.4292349815368652, 2.416362762451172, 2.403777599334717, 2.3914740085601807, 2.379446029663086, 2.3676881790161133, 2.356194496154785, 2.344959020614624, 2.3339760303497314, 2.323239326477051, 2.312743663787842, 2.302482843399048, 2.2924511432647705, 2.2826433181762695, 2.2730531692504883, 2.2636759281158447, 2.2545056343078613, 2.245537281036377, 2.2367656230926514, 2.2281854152679443, 2.219791889190674, 2.2115800380706787, 2.203545093536377, 2.1956825256347656, 2.187987804412842, 2.1804561614990234, 2.173083782196045, 2.165865898132324, 2.158798933029175, 2.151878595352173, 2.1451010704040527, 2.138462781906128, 2.1319596767425537, 2.1255886554718018, 2.1193456649780273, 2.1132278442382812, 2.107231855392456, 2.1013541221618652, 2.0955920219421387, 2.089942455291748, 2.084402322769165, 2.0789690017700195, 2.0736396312713623, 2.068411350250244, 2.063282012939453, 2.058248996734619, 2.053309679031372, 2.048461675643921, 2.0437028408050537, 2.0390310287475586, 2.0344438552856445, 2.0299394130706787, 2.025515556335449, 2.0211703777313232, 2.016901969909668, 2.0127081871032715, 2.008587598800659, 2.0045382976531982, 2.000558614730835, 1.996646761894226, 1.992801308631897, 1.9890207052230835, 1.9853031635284424, 1.9816474914550781, 1.9780521392822266, 1.9745157957077026, 1.9710370302200317, 1.9676144123077393, 1.9642469882965088, 1.9609332084655762, 1.9576719999313354, 1.9544622898101807, 1.9513026475906372, 1.9481922388076782, 1.9451299905776978, 1.9421145915985107, 1.9391452074050903, 1.9362208843231201, 1.9333405494689941, 1.9305033683776855, 1.9277082681655884, 1.9249545335769653, 1.9222410917282104, 1.919567346572876, 1.9169323444366455, 1.9143352508544922, 1.9117752313613892, 1.9092518091201782, 1.9067639112472534, 1.9043110609054565, -1.9018924236297607, -1.9043110609054565, -1.9067639112472534, -1.9092518091201782, -1.9117752313613892, -1.9143352508544922, -1.9169323444366455, -1.919567346572876, -1.9222410917282104, -1.9249545335769653, -1.9277082681655884, -1.9305033683776855, -1.9333405494689941, -1.9362208843231201, -1.9391452074050903, -1.9421145915985107, -1.9451299905776978, -1.9481922388076782, -1.9513026475906372, -1.9544622898101807, -1.9576719999313354, -1.9609332084655762, -1.9642469882965088, -1.9676144123077393, -1.9710370302200317, -1.9745157957077026, -1.9780521392822266, -1.9816474914550781, -1.9853031635284424, -1.9890207052230835, -1.992801308631897, -1.996646761894226, -2.000558614730835, -2.0045382976531982, -2.008587598800659, -2.0127081871032715, -2.016901969909668, -2.0211703777313232, -2.025515556335449, -2.0299394130706787, -2.0344438552856445, -2.0390310287475586, -2.0437028408050537, -2.048461675643921, -2.053309679031372, -2.058248996734619, -2.063282012939453, -2.068411350250244, -2.0736396312713623, -2.0789690017700195, -2.084402322769165, -2.089942455291748, -2.0955920219421387, -2.1013541221618652, -2.107231855392456, -2.1132278442382812, -2.1193456649780273, -2.1255886554718018, -2.1319596767425537, -2.138462781906128, -2.1451010704040527, -2.151878595352173, -2.158798933029175, -2.165865898132324, -2.173083782196045, -2.1804561614990234, -2.187987804412842, -2.1956825256347656, -2.203545093536377, -2.2115800380706787, -2.219791889190674, -2.2281854152679443, -2.2367656230926514, -2.245537281036377, -2.2545056343078613, -2.2636759281158447, -2.2730531692504883, -2.2826433181762695, -2.2924511432647705, -2.302482843399048, -2.312743663787842, -2.323239326477051, -2.3339760303497314, -2.344959020614624, -2.356194496154785, -2.3676881790161133, -2.379446029663086, -2.3914740085601807, -2.403777599334717, -2.416362762451172, -2.4292349815368652, -2.4423999786376953, -2.4558632373809814, -2.4696295261383057, -2.483704090118408, -2.498091459274292, -2.512796401977539, -2.527822494506836, -2.5431737899780273, -2.5588531494140625, -2.5748634338378906, -2.5912067890167236, -2.607884407043457, -2.6248974800109863, -2.6422460079193115, -2.659929037094116, -2.677945137023926, -2.69629168510437, -2.7149651050567627, -2.7339611053466797, -2.7532739639282227, -2.7728967666625977, -2.7928216457366943, -2.813039541244507, -2.8335399627685547, -2.854311227798462, -2.875340700149536, -2.8966140747070312, -2.9181160926818848, -2.9398303031921387, -2.9617390632629395, -2.9838240146636963, -3.0060648918151855, -3.0284416675567627, -3.0509328842163086, -3.0735161304473877, -3.0961694717407227, -3.1188693046569824, 3.1415927410125732, 3.1183409690856934, 3.0951144695281982, 3.0719380378723145, 3.0488362312316895, 3.0258333683013916, 3.002952814102173, 2.980217456817627, 2.9576492309570312, 2.9352686405181885, 2.9130959510803223, 2.8911495208740234, 2.8694467544555664, 2.848003625869751, 2.8268349170684814, 2.8059542179107666, 2.7853729724884033, 2.7651023864746094, 2.7451512813568115, 2.7255282402038574, 2.7062394618988037, 2.687290668487549, 2.6686861515045166, 2.6504290103912354, 2.632521867752075, 2.6149654388427734, 2.5977602005004883, 2.5809056758880615, 2.5644004344940186, 2.5482425689697266, 2.5324292182922363, 2.5169572830200195, 2.5018229484558105, 2.4870219230651855, 2.4725496768951416, 2.4584012031555176, 2.4445712566375732, 2.4310543537139893, 2.417844772338867, 2.4049363136291504, 2.3923232555389404, 2.3799993991851807, 2.3679585456848145, 2.356194496154785, 2.344700813293457, 2.3334710597991943, 2.3224992752075195, 2.311779260635376, 2.301304578781128, 2.291069269180298, 2.281067371368408, 2.2712926864624023, 2.261739492416382, 2.2524020671844482, 2.2432749271392822, 2.2343521118164062, 2.22562837600708, 2.2170984745025635, 2.2087574005126953, 2.2005996704101562, 2.1926205158233643, 2.1848154067993164, 2.1771790981292725, 2.1697075366973877, 2.16239595413208, 2.155240297317505, 2.148236036300659, 2.1413791179656982, 2.1346657276153564, 2.128091812133789, 2.1216537952423096, 2.1153481006622314, 2.109170913696289, 2.103118896484375, 2.097188711166382, 2.0913772583007812, 2.085681200027466, 2.0800974369049072, 2.0746233463287354, 2.069255828857422, 2.0639920234680176, 2.0588293075561523, 2.053765296936035, 2.048797130584717, 2.0439224243164062, 2.0391387939453125, 2.0344438552856445, 2.0298357009887695, 2.0253117084503174, 2.0208702087402344, 2.0165085792541504, 2.012225389480591, 2.0080182552337646, 2.0038857460021973, 1.9998257160186768, 1.9958364963531494, 1.9919164180755615, 1.9880636930465698, 1.9842768907546997, 1.980554223060608, 1.9768943786621094, 1.97329580783844, 1.9697569608688354, 1.9662766456604004, 1.9628533124923706, 1.9594857692718506, 1.9561728239059448, 1.9529130458831787, 1.9497052431106567, 1.946548342704773, 1.9434412717819214, 1.940382719039917, 1.9373717308044434, 1.9344072341918945, 1.931488275527954, 1.9286136627197266, 1.9257826805114746, 1.9229943752288818, 1.9202475547790527, 1.9175416231155396, 1.9148756265640259, 1.9122487306594849, 1.9096601009368896, 1.9071089029312134, 1.9045945405960083, 1.9021159410476685, 1.8996726274490356, 1.8972638845443726, -1.8948887586593628, -1.8972638845443726, -1.8996726274490356, -1.9021159410476685, -1.9045945405960083, -1.9071089029312134, -1.9096601009368896, -1.9122487306594849, -1.9148756265640259, -1.9175416231155396, -1.9202475547790527, -1.9229943752288818, -1.9257826805114746, -1.9286136627197266, -1.931488275527954, -1.9344072341918945, -1.9373717308044434, -1.940382719039917, -1.9434412717819214, -1.946548342704773, -1.9497052431106567, -1.9529130458831787, -1.9561728239059448, -1.9594857692718506, -1.9628533124923706, -1.9662766456604004, -1.9697569608688354, -1.97329580783844, -1.9768943786621094, -1.980554223060608, -1.9842768907546997, -1.9880636930465698, -1.9919164180755615, -1.9958364963531494, -1.9998257160186768, -2.0038857460021973, -2.0080182552337646, -2.012225389480591, -2.0165085792541504, -2.0208702087402344, -2.0253117084503174, -2.0298357009887695, -2.0344438552856445, -2.0391387939453125, -2.0439224243164062, -2.048797130584717, -2.053765296936035, -2.0588293075561523, -2.0639920234680176, -2.069255828857422, -2.0746233463287354, -2.0800974369049072, -2.085681200027466, -2.0913772583007812, -2.097188711166382, -2.103118896484375, -2.109170913696289, -2.1153481006622314, -2.1216537952423096, -2.128091812133789, -2.1346657276153564, -2.1413791179656982, -2.148236036300659, -2.155240297317505, -2.16239595413208, -2.1697075366973877, -2.1771790981292725, -2.1848154067993164, -2.1926205158233643, -2.2005996704101562, -2.2087574005126953, -2.2170984745025635, -2.22562837600708, -2.2343521118164062, -2.2432749271392822, -2.2524020671844482, -2.261739492416382, -2.2712926864624023, -2.281067371368408, -2.291069269180298, -2.301304578781128, -2.311779260635376, -2.3224992752075195, -2.3334710597991943, -2.344700813293457, -2.356194496154785, -2.3679585456848145, -2.3799993991851807, -2.3923232555389404, -2.4049363136291504, -2.417844772338867, -2.4310543537139893, -2.4445712566375732, -2.4584012031555176, -2.4725496768951416, -2.4870219230651855, -2.5018229484558105, -2.5169572830200195, -2.5324292182922363, -2.5482425689697266, -2.5644004344940186, -2.5809056758880615, -2.5977602005004883, -2.6149654388427734, -2.632521867752075, -2.6504290103912354, -2.6686861515045166, -2.687290668487549, -2.7062394618988037, -2.7255282402038574, -2.7451512813568115, -2.7651023864746094, -2.7853729724884033, -2.8059542179107666, -2.8268349170684814, -2.848003625869751, -2.8694467544555664, -2.8911495208740234, -2.9130959510803223, -2.9352686405181885, -2.9576492309570312, -2.980217456817627, -3.002952814102173, -3.0258333683013916, -3.0488362312316895, -3.0719380378723145, -3.0951144695281982, -3.1183409690856934, 3.1415927410125732, 3.1177875995635986, 3.0940096378326416, 3.0702850818634033, 3.0466408729553223, 3.0231027603149414, 2.9996955394744873, 2.9764440059661865, 2.953371047973633, 2.930499315261841, 2.9078495502471924, 2.885441303253174, 2.863292932510376, 2.841421365737915, 2.8198421001434326, 2.7985687255859375, 2.777613639831543, 2.756988048553467, 2.7367007732391357, 2.7167603969573975, 2.6971733570098877, 2.677945137023926, 2.6590793132781982, 2.6405792236328125, 2.6224465370178223, 2.604681968688965, 2.587285041809082, 2.5702552795410156, 2.5535900592803955, 2.5372872352600098, 2.521343231201172, 2.505754232406616, 2.490515947341919, 2.475623369216919, 2.461071491241455, 2.44685435295105, 2.432966470718384, 2.4194014072418213, 2.4061529636383057, 2.393214702606201, 2.380579948425293, 2.368242025375366, 2.356194496154785, 2.3444302082061768, 2.3329429626464844, 2.321725368499756, 2.3107712268829346, 2.3000736236572266, 2.289626359939575, 2.2794225215911865, 2.269456148147583, 2.259720802307129, 2.2502100467681885, 2.2409183979034424, 2.231839418411255, 2.2229676246643066, 2.2142975330352783, 2.2058229446411133, 2.1975393295288086, 2.1894407272338867, 2.1815223693847656, 2.173779010772705, 2.166206121444702, 2.158798933029175, 2.151552677154541, 2.144463062286377, 2.1375255584716797, 2.1307361125946045, 2.1240906715393066, 2.1175851821899414, 2.111215829849243, 2.1049787998199463, 2.0988707542419434, 2.0928878784179688, 2.087027072906494, 2.081284761428833, 2.075657606124878, 2.070142984390259, 2.0647377967834473, 2.059438705444336, 2.054243326187134, 2.0491487979888916, 2.04415225982666, 2.0392515659332275, 2.0344438552856445, 2.029726982116699, 2.0250983238220215, 2.0205559730529785, 2.0160973072052, 2.011720657348633, 2.0074234008789062, 2.003204107284546, 1.9990605115890503, 1.9949907064437866, 1.9909930229187012, 1.9870656728744507, 1.9832067489624023, 1.9794148206710815, 1.975688099861145, 1.9720251560211182, 1.9684243202209473, 1.9648841619491577, 1.9614033699035645, 1.9579803943634033, 1.9546139240264893, 1.9513026475906372, 1.9480453729629517, 1.9448407888412476, 1.9416875839233398, 1.938584804534912, 1.9355311393737793, 1.9325255155563354, 1.9295669794082642, 1.92665433883667, 1.9237867593765259, 1.9209630489349365, 1.9181822538375854, 1.9154436588287354, 1.9127461910247803, 1.9100888967514038, 1.9074711799621582, 1.9048919677734375, 1.9023505449295044, 1.899846076965332, 1.8973777294158936, 1.8949449062347412, 1.8925468921661377, 1.8901828527450562, -1.8878520727157593, -1.8901828527450562, -1.8925468921661377, -1.8949449062347412, -1.8973777294158936, -1.899846076965332, -1.9023505449295044, -1.9048919677734375, -1.9074711799621582, -1.9100888967514038, -1.9127461910247803, -1.9154436588287354, -1.9181822538375854, -1.9209630489349365, -1.9237867593765259, -1.92665433883667, -1.9295669794082642, -1.9325255155563354, -1.9355311393737793, -1.938584804534912, -1.9416875839233398, -1.9448407888412476, -1.9480453729629517, -1.9513026475906372, -1.9546139240264893, -1.9579803943634033, -1.9614033699035645, -1.9648841619491577, -1.9684243202209473, -1.9720251560211182, -1.975688099861145, -1.9794148206710815, -1.9832067489624023, -1.9870656728744507, -1.9909930229187012, -1.9949907064437866, -1.9990605115890503, -2.003204107284546, -2.0074234008789062, -2.011720657348633, -2.0160973072052, -2.0205559730529785, -2.0250983238220215, -2.029726982116699, -2.0344438552856445, -2.0392515659332275, -2.04415225982666, -2.0491487979888916, -2.054243326187134, -2.059438705444336, -2.0647377967834473, -2.070142984390259, -2.075657606124878, -2.081284761428833, -2.087027072906494, -2.0928878784179688, -2.0988707542419434, -2.1049787998199463, -2.111215829849243, -2.1175851821899414, -2.1240906715393066, -2.1307361125946045, -2.1375255584716797, -2.144463062286377, -2.151552677154541, -2.158798933029175, -2.166206121444702, -2.173779010772705, -2.1815223693847656, -2.1894407272338867, -2.1975393295288086, -2.2058229446411133, -2.2142975330352783, -2.2229676246643066, -2.231839418411255, -2.2409183979034424, -2.2502100467681885, -2.259720802307129, -2.269456148147583, -2.2794225215911865, -2.289626359939575, -2.3000736236572266, -2.3107712268829346, -2.321725368499756, -2.3329429626464844, -2.3444302082061768, -2.356194496154785, -2.368242025375366, -2.380579948425293, -2.393214702606201, -2.4061529636383057, -2.4194014072418213, -2.432966470718384, -2.44685435295105, -2.461071491241455, -2.475623369216919, -2.490515947341919, -2.505754232406616, -2.521343231201172, -2.5372872352600098, -2.5535900592803955, -2.5702552795410156, -2.587285041809082, -2.604681968688965, -2.6224465370178223, -2.6405792236328125, -2.6590793132781982, -2.677945137023926, -2.6971733570098877, -2.7167603969573975, -2.7367007732391357, -2.756988048553467, -2.777613639831543, -2.7985687255859375, -2.8198421001434326, -2.841421365737915, -2.863292932510376, -2.885441303253174, -2.9078495502471924, -2.930499315261841, -2.953371047973633, -2.9764440059661865, -2.9996955394744873, -3.0231027603149414, -3.0466408729553223, -3.0702850818634033, -3.0940096378326416, -3.1177875995635986, 3.1415927410125732, 3.1172072887420654, 3.092850685119629, 3.068552017211914, 3.044339418411255, 3.020240545272827, 2.9962825775146484, 2.972491502761841, 2.9488918781280518, 2.9255077838897705, 2.9023611545562744, 2.8794727325439453, 2.8568623065948486, 2.8345468044281006, 2.8125429153442383, 2.7908647060394287, 2.7695248126983643, 2.748534679412842, 2.727903366088867, 2.707639217376709, 2.687748670578003, 2.668236494064331, 2.649106979370117, 2.630362033843994, 2.6120030879974365, 2.5940303802490234, 2.5764431953430176, 2.559239625930786, 2.542417287826538, 2.525972843170166, 2.509902000427246, 2.4942004680633545, 2.47886323928833, 2.4638843536376953, 2.449258327484131, 2.434978485107422, 2.4210386276245117, 2.4074316024780273, 2.394150972366333, 2.3811893463134766, 2.368539571762085, 2.356194496154785, 2.344146966934204, 2.3323893547058105, 2.3209149837493896, 2.3097164630889893, 2.2987864017486572, 2.2881181240081787, 2.2777044773101807, 2.267538547515869, 2.2576138973236084, 2.2479238510131836, 2.238461971282959, 2.2292215824127197, 2.2201969623565674, 2.2113819122314453, 2.202770471572876, 2.19435715675354, 2.186135768890381, 2.1781015396118164, 2.1702487468719482, 2.1625723838806152, 2.1550676822662354, 2.1477291584014893, 2.1405527591705322, 2.133533477783203, 2.126667022705078, 2.1199493408203125, 2.113375663757324, 2.1069424152374268, 2.1006453037261963, 2.0944809913635254, 2.0884454250335693, 2.0825352668762207, 2.076746702194214, 2.0710768699645996, 2.0655219554901123, 2.060079336166382, 2.054745674133301, 2.04951810836792, 2.04439377784729, 2.039370059967041, 2.0344438552856445, 2.0296130180358887, 2.0248749256134033, 2.0202269554138184, 2.0156667232513428, 2.0111923217773438, 2.006801128387451, 2.0024912357330322, 1.9982606172561646, 1.9941071271896362, 1.990028738975525, 1.9860236644744873, 1.9820901155471802, 1.9782261848449707, 1.9744302034378052, 1.9707006216049194, 1.9670356512069702, 1.963433861732483, 1.9598935842514038, 1.9564133882522583, 1.9529918432235718, 1.9496276378631592, 1.946319341659546, 1.9430656433105469, 1.9398653507232666, 1.9367170333862305, 1.9336196184158325, 1.9305720329284668, 1.9275729656219482, 1.9246214628219604, 1.921716332435608, 1.9188566207885742, 1.9160412549972534, 1.913269281387329, 1.9105397462844849, 1.9078518152236938, 1.90520441532135, 1.9025968313217163, 1.9000279903411865, 1.897497296333313, 1.8950039148330688, 1.8925468921661377, 1.8901256322860718, 1.8877391815185547, 1.8853870630264282, 1.8830684423446655, -1.8807827234268188, -1.8830684423446655, -1.8853870630264282, -1.8877391815185547, -1.8901256322860718, -1.8925468921661377, -1.8950039148330688, -1.897497296333313, -1.9000279903411865, -1.9025968313217163, -1.90520441532135, -1.9078518152236938, -1.9105397462844849, -1.913269281387329, -1.9160412549972534, -1.9188566207885742, -1.921716332435608, -1.9246214628219604, -1.9275729656219482, -1.9305720329284668, -1.9336196184158325, -1.9367170333862305, -1.9398653507232666, -1.9430656433105469, -1.946319341659546, -1.9496276378631592, -1.9529918432235718, -1.9564133882522583, -1.9598935842514038, -1.963433861732483, -1.9670356512069702, -1.9707006216049194, -1.9744302034378052, -1.9782261848449707, -1.9820901155471802, -1.9860236644744873, -1.990028738975525, -1.9941071271896362, -1.9982606172561646, -2.0024912357330322, -2.006801128387451, -2.0111923217773438, -2.0156667232513428, -2.0202269554138184, -2.0248749256134033, -2.0296130180358887, -2.0344438552856445, -2.039370059967041, -2.04439377784729, -2.04951810836792, -2.054745674133301, -2.060079336166382, -2.0655219554901123, -2.0710768699645996, -2.076746702194214, -2.0825352668762207, -2.0884454250335693, -2.0944809913635254, -2.1006453037261963, -2.1069424152374268, -2.113375663757324, -2.1199493408203125, -2.126667022705078, -2.133533477783203, -2.1405527591705322, -2.1477291584014893, -2.1550676822662354, -2.1625723838806152, -2.1702487468719482, -2.1781015396118164, -2.186135768890381, -2.19435715675354, -2.202770471572876, -2.2113819122314453, -2.2201969623565674, -2.2292215824127197, -2.238461971282959, -2.2479238510131836, -2.2576138973236084, -2.267538547515869, -2.2777044773101807, -2.2881181240081787, -2.2987864017486572, -2.3097164630889893, -2.3209149837493896, -2.3323893547058105, -2.344146966934204, -2.356194496154785, -2.368539571762085, -2.3811893463134766, -2.394150972366333, -2.4074316024780273, -2.4210386276245117, -2.434978485107422, -2.449258327484131, -2.4638843536376953, -2.47886323928833, -2.4942004680633545, -2.509902000427246, -2.525972843170166, -2.542417287826538, -2.559239625930786, -2.5764431953430176, -2.5940303802490234, -2.6120030879974365, -2.630362033843994, -2.649106979370117, -2.668236494064331, -2.687748670578003, -2.707639217376709, -2.727903366088867, -2.748534679412842, -2.7695248126983643, -2.7908647060394287, -2.8125429153442383, -2.8345468044281006, -2.8568623065948486, -2.8794727325439453, -2.9023611545562744, -2.9255077838897705, -2.9488918781280518, -2.972491502761841, -2.9962825775146484, -3.020240545272827, -3.044339418411255, -3.068552017211914, -3.092850685119629, -3.1172072887420654, 3.1415927410125732, 3.116597890853882, 3.0916342735290527, 3.066732883453369, 3.041923999786377, 3.017237663269043, 2.9927027225494385, 2.9683470726013184, 2.944197177886963, 2.920278310775757, 2.8966140747070312, 2.8732264041900635, 2.8501358032226562, 2.8273608684539795, 2.804917812347412, 2.7828218936920166, 2.7610862255096436, 2.7397220134735107, 2.7187387943267822, 2.6981444358825684, 2.677945137023926, 2.6581456661224365, 2.638749361038208, 2.619758367538452, 2.601173162460327, 2.582993268966675, 2.5652174949645996, 2.5478429794311523, 2.5308666229248047, 2.514284372329712, 2.498091459274292, 2.4822826385498047, 2.4668517112731934, 2.4517927169799805, 2.437098503112793, 2.422762632369995, 2.4087774753570557, 2.3951358795166016, 2.3818299770355225, 2.368852138519287, 2.356194496154785, 2.3438494205474854, 2.3318090438842773, 2.32006573677063, 2.3086113929748535, 2.297438621520996, 2.2865400314331055, 2.2759077548980713, 2.2655346393585205, 2.25541353225708, 2.245537281036377, 2.235898971557617, 2.226491928100586, 2.2173094749450684, 2.2083451747894287, 2.1995925903320312, 2.1910457611083984, 2.1826987266540527, 2.1745457649230957, 2.16658091545105, 2.158798933029175, 2.1511945724487305, 2.1437625885009766, 2.136497735977173, 2.1293957233428955, 2.1224513053894043, 2.1156601905822754, 2.109018087387085, 2.10252046585083, 2.096163272857666, 2.089942455291748, 2.0838541984558105, 2.077894926071167, 2.0720605850219727, 2.066348075866699, 2.060753583908081, 2.055274248123169, 2.0499067306518555, 2.044647693634033, 2.039494514465332, 2.0344438552856445, 2.029493570327759, 2.0246403217315674, 2.0198819637298584, 2.0152156352996826, 2.010638952255249, 2.0061495304107666, 2.0017452239990234, 1.997423768043518, 1.9931830167770386, 1.9890207052230835, 1.98493492603302, 1.9809236526489258, 1.9769850969314575, 1.973117470741272, 1.9693187475204468, 1.9655874967575073, 1.9619218111038208, 1.958320140838623, 1.95478093624115, 1.9513026475906372, 1.9478839635849, 1.9445230960845947, 1.9412189722061157, 1.9379701614379883, 1.9347752332687378, 1.9316331148147583, 1.9285423755645752, 1.9255019426345825, 1.9225106239318848, 1.919567346572876, 1.9166709184646606, 1.9138202667236328, 1.911014437675476, 1.9082523584365845, 1.9055331945419312, 1.9028557538986206, 1.9002193212509155, 1.8976229429244995, 1.8950657844543457, 1.8925468921661377, 1.8900655508041382, 1.8876208066940308, 1.8852120637893677, 1.882838487625122, 1.880499243736267, 1.8781938552856445, 1.875921368598938, -1.8736811876296997, -1.875921368598938, -1.8781938552856445, -1.880499243736267, -1.882838487625122, -1.8852120637893677, -1.8876208066940308, -1.8900655508041382, -1.8925468921661377, -1.8950657844543457, -1.8976229429244995, -1.9002193212509155, -1.9028557538986206, -1.9055331945419312, -1.9082523584365845, -1.911014437675476, -1.9138202667236328, -1.9166709184646606, -1.919567346572876, -1.9225106239318848, -1.9255019426345825, -1.9285423755645752, -1.9316331148147583, -1.9347752332687378, -1.9379701614379883, -1.9412189722061157, -1.9445230960845947, -1.9478839635849, -1.9513026475906372, -1.95478093624115, -1.958320140838623, -1.9619218111038208, -1.9655874967575073, -1.9693187475204468, -1.973117470741272, -1.9769850969314575, -1.9809236526489258, -1.98493492603302, -1.9890207052230835, -1.9931830167770386, -1.997423768043518, -2.0017452239990234, -2.0061495304107666, -2.010638952255249, -2.0152156352996826, -2.0198819637298584, -2.0246403217315674, -2.029493570327759, -2.0344438552856445, -2.039494514465332, -2.044647693634033, -2.0499067306518555, -2.055274248123169, -2.060753583908081, -2.066348075866699, -2.0720605850219727, -2.077894926071167, -2.0838541984558105, -2.089942455291748, -2.096163272857666, -2.10252046585083, -2.109018087387085, -2.1156601905822754, -2.1224513053894043, -2.1293957233428955, -2.136497735977173, -2.1437625885009766, -2.1511945724487305, -2.158798933029175, -2.16658091545105, -2.1745457649230957, -2.1826987266540527, -2.1910457611083984, -2.1995925903320312, -2.2083451747894287, -2.2173094749450684, -2.226491928100586, -2.235898971557617, -2.245537281036377, -2.25541353225708, -2.2655346393585205, -2.2759077548980713, -2.2865400314331055, -2.297438621520996, -2.3086113929748535, -2.32006573677063, -2.3318090438842773, -2.3438494205474854, -2.356194496154785, -2.368852138519287, -2.3818299770355225, -2.3951358795166016, -2.4087774753570557, -2.422762632369995, -2.437098503112793, -2.4517927169799805, -2.4668517112731934, -2.4822826385498047, -2.498091459274292, -2.514284372329712, -2.5308666229248047, -2.5478429794311523, -2.5652174949645996, -2.582993268966675, -2.601173162460327, -2.619758367538452, -2.638749361038208, -2.6581456661224365, -2.677945137023926, -2.6981444358825684, -2.7187387943267822, -2.7397220134735107, -2.7610862255096436, -2.7828218936920166, -2.804917812347412, -2.8273608684539795, -2.8501358032226562, -2.8732264041900635, -2.8966140747070312, -2.920278310775757, -2.944197177886963, -2.9683470726013184, -2.9927027225494385, -3.017237663269043, -3.041923999786377, -3.066732883453369, -3.0916342735290527, -3.116597890853882, 3.1415927410125732, 3.115957260131836, 3.090355396270752, 3.0648207664489746, 3.039386034011841, 3.01408314704895, 2.988943338394165, 2.963996410369873, 2.9392709732055664, 2.9147937297821045, 2.890589952468872, 2.866682767868042, 2.8430936336517334, 2.8198421001434326, 2.796945333480835, 2.774418830871582, 2.7522759437561035, 2.7305281162261963, 2.7091848850250244, 2.688253879547119, 2.667741298675537, 2.647651195526123, 2.6279866695404053, 2.6087486743927, 2.589937686920166, 2.571552276611328, 2.5535900592803955, 2.53604793548584, 2.5189218521118164, 2.502206802368164, 2.4858970642089844, 2.4699864387512207, 2.4544684886932373, 2.439335823059082, 2.4245808124542236, 2.41019606590271, 2.3961732387542725, 2.3825042247772217, 2.369180679321289, 2.356194496154785, 2.343536853790283, 2.3311996459960938, 2.319174289703369, 2.30745267868042, 2.2960262298583984, 2.2848870754241943, 2.274026870727539, 2.2634382247924805, 2.25311279296875, 2.2430434226989746, 2.233222723007202, 2.2236430644989014, 2.2142975330352783, 2.205179214477539, 2.1962814331054688, 2.1875975131988525, 2.179121255874634, 2.170846462249756, 2.162767171859741, 2.1548774242401123, 2.1471714973449707, 2.139644145965576, 2.1322898864746094, 2.125103712081909, 2.1180806159973145, 2.111215829849243, 2.1045045852661133, 2.097942352294922, 2.091524600982666, 2.085247755050659, 2.0791070461273193, 2.073098659515381, 2.0672190189361572, 2.061464309692383, 2.055830955505371, 2.0503156185150146, 2.044914722442627, 2.0396251678466797, 2.0344438552856445, 2.0293679237365723, 2.0243940353393555, 2.019519567489624, 2.014742136001587, 2.010058641433716, 2.0054664611816406, 2.0009636878967285, 1.9965473413467407, 1.9922155141830444, 1.9879658222198486, 1.9837960004806519, 1.9797041416168213, 1.975688099861145, 1.9717459678649902, 1.9678757190704346, 1.9640756845474243, 1.9603440761566162, 1.9566789865493774, 1.9530788660049438, 1.9495421648025513, 1.9460670948028564, 1.9426523447036743, 1.9392963647842407, 1.935997724533081, 1.9327551126480103, 1.9295669794082642, 1.9264322519302368, 1.9233494997024536, 1.920317530632019, 1.9173351526260376, 1.9144012928009033, 1.9115147590637207, 1.9086744785308838, 1.9058793783187866, 1.9031285047531128, 1.9004207849502563, 1.8977551460266113, 1.8951308727264404, 1.8925468921661377, 1.8900023698806763, 1.8874964714050293, 1.8850282430648804, 1.8825969696044922, 1.880201816558838, 1.8778420686721802, 1.8755168914794922, 1.8732255697250366, 1.8709675073623657, 1.8687418699264526, -1.8665480613708496, -1.8687418699264526, -1.8709675073623657, -1.8732255697250366, -1.8755168914794922, -1.8778420686721802, -1.880201816558838, -1.8825969696044922, -1.8850282430648804, -1.8874964714050293, -1.8900023698806763, -1.8925468921661377, -1.8951308727264404, -1.8977551460266113, -1.9004207849502563, -1.9031285047531128, -1.9058793783187866, -1.9086744785308838, -1.9115147590637207, -1.9144012928009033, -1.9173351526260376, -1.920317530632019, -1.9233494997024536, -1.9264322519302368, -1.9295669794082642, -1.9327551126480103, -1.935997724533081, -1.9392963647842407, -1.9426523447036743, -1.9460670948028564, -1.9495421648025513, -1.9530788660049438, -1.9566789865493774, -1.9603440761566162, -1.9640756845474243, -1.9678757190704346, -1.9717459678649902, -1.975688099861145, -1.9797041416168213, -1.9837960004806519, -1.9879658222198486, -1.9922155141830444, -1.9965473413467407, -2.0009636878967285, -2.0054664611816406, -2.010058641433716, -2.014742136001587, -2.019519567489624, -2.0243940353393555, -2.0293679237365723, -2.0344438552856445, -2.0396251678466797, -2.044914722442627, -2.0503156185150146, -2.055830955505371, -2.061464309692383, -2.0672190189361572, -2.073098659515381, -2.0791070461273193, -2.085247755050659, -2.091524600982666, -2.097942352294922, -2.1045045852661133, -2.111215829849243, -2.1180806159973145, -2.125103712081909, -2.1322898864746094, -2.139644145965576, -2.1471714973449707, -2.1548774242401123, -2.162767171859741, -2.170846462249756, -2.179121255874634, -2.1875975131988525, -2.1962814331054688, -2.205179214477539, -2.2142975330352783, -2.2236430644989014, -2.233222723007202, -2.2430434226989746, -2.25311279296875, -2.2634382247924805, -2.274026870727539, -2.2848870754241943, -2.2960262298583984, -2.30745267868042, -2.319174289703369, -2.3311996459960938, -2.343536853790283, -2.356194496154785, -2.369180679321289, -2.3825042247772217, -2.3961732387542725, -2.41019606590271, -2.4245808124542236, -2.439335823059082, -2.4544684886932373, -2.4699864387512207, -2.4858970642089844, -2.502206802368164, -2.5189218521118164, -2.53604793548584, -2.5535900592803955, -2.571552276611328, -2.589937686920166, -2.6087486743927, -2.6279866695404053, -2.647651195526123, -2.667741298675537, -2.688253879547119, -2.7091848850250244, -2.7305281162261963, -2.7522759437561035, -2.774418830871582, -2.796945333480835, -2.8198421001434326, -2.8430936336517334, -2.866682767868042, -2.890589952468872, -2.9147937297821045, -2.9392709732055664, -2.963996410369873, -2.988943338394165, -3.01408314704895, -3.039386034011841, -3.0648207664489746, -3.090355396270752, -3.115957260131836, 3.1415927410125732, 3.1152830123901367, 3.0890095233917236, 3.0628087520599365, 3.0367157459259033, 3.010765314102173, 2.9849908351898193, 2.9594242572784424, 2.934096336364746, 2.9090356826782227, 2.8842689990997314, 2.85982084274292, 2.8357138633728027, 2.8119683265686035, 2.788602352142334, 2.765631675720215, 2.743070125579834, 2.7209293842315674, 2.699218511581421, 2.677945137023926, 2.6571147441864014, 2.6367313861846924, 2.6167969703674316, 2.5973122119903564, 2.5782763957977295, 2.559687614440918, 2.5415425300598145, 2.523836851119995, 2.506565809249878, 2.4897234439849854, 2.4733033180236816, 2.4572978019714355, 2.441699743270874, 2.4265010356903076, 2.4116930961608887, 2.3972673416137695, 2.3832149505615234, 2.3695271015167236, 2.356194496154785, 2.3432083129882812, 2.330559015274048, 2.3182380199432373, 2.3062360286712646, 2.294544219970703, 2.283154010772705, 2.2720563411712646, 2.2612428665161133, 2.2507052421569824, 2.2404353618621826, 2.2304251194000244, 2.2206668853759766, 2.2111527919769287, 2.201875686645508, 2.192828416824341, 2.1840035915374756, 2.1753950119018555, 2.1669955253601074, 2.158798933029175, 2.150799036026001, 2.1429898738861084, 2.1353657245635986, 2.127920627593994, 2.120649576187134, 2.113546848297119, 2.106607675552368, 2.0998268127441406, 2.0931997299194336, 2.086721897125244, 2.0803885459899902, 2.074195623397827, 2.06813907623291, 2.0622146129608154, 2.0564184188842773, 2.0507469177246094, 2.045196294784546, 2.0397629737854004, 2.0344438552856445, 2.029235601425171, 2.024135112762451, 2.019139051437378, 2.014244556427002, 2.0094492435455322, 2.0047497749328613, 2.0001437664031982, 1.9956284761428833, 1.991201639175415, 1.9868608713150024, 1.982603669166565, 1.9784278869628906, 1.974331259727478, 1.9703118801116943, 1.966367483139038, 1.962496280670166, 1.9586962461471558, 1.9549657106399536, 1.9513026475906372, 1.947705626487732, 1.944172739982605, 1.9407024383544922, 1.9372931718826294, 1.9339433908462524, 1.9306515455245972, 1.927416443824768, 1.924236536026001, 1.9211105108261108, 1.9180370569229126, 1.9150149822235107, 1.9120429754257202, 1.909119963645935, 1.9062446355819702, 1.9034160375595093, 1.9006329774856567, 1.8978943824768066, 1.8951994180679321, 1.8925468921661377, 1.8899359703063965, 1.8873655796051025, 1.8848350048065186, 1.8823431730270386, 1.8798893690109253, 1.8774726390838623, 1.8750922679901123, 1.872747540473938, 1.870437502861023, 1.8681614398956299, 1.865918755531311, 1.863708734512329, 1.8615305423736572, -1.8593837022781372, -1.8615305423736572, -1.863708734512329, -1.865918755531311, -1.8681614398956299, -1.870437502861023, -1.872747540473938, -1.8750922679901123, -1.8774726390838623, -1.8798893690109253, -1.8823431730270386, -1.8848350048065186, -1.8873655796051025, -1.8899359703063965, -1.8925468921661377, -1.8951994180679321, -1.8978943824768066, -1.9006329774856567, -1.9034160375595093, -1.9062446355819702, -1.909119963645935, -1.9120429754257202, -1.9150149822235107, -1.9180370569229126, -1.9211105108261108, -1.924236536026001, -1.927416443824768, -1.9306515455245972, -1.9339433908462524, -1.9372931718826294, -1.9407024383544922, -1.944172739982605, -1.947705626487732, -1.9513026475906372, -1.9549657106399536, -1.9586962461471558, -1.962496280670166, -1.966367483139038, -1.9703118801116943, -1.974331259727478, -1.9784278869628906, -1.982603669166565, -1.9868608713150024, -1.991201639175415, -1.9956284761428833, -2.0001437664031982, -2.0047497749328613, -2.0094492435455322, -2.014244556427002, -2.019139051437378, -2.024135112762451, -2.029235601425171, -2.0344438552856445, -2.0397629737854004, -2.045196294784546, -2.0507469177246094, -2.0564184188842773, -2.0622146129608154, -2.06813907623291, -2.074195623397827, -2.0803885459899902, -2.086721897125244, -2.0931997299194336, -2.0998268127441406, -2.106607675552368, -2.113546848297119, -2.120649576187134, -2.127920627593994, -2.1353657245635986, -2.1429898738861084, -2.150799036026001, -2.158798933029175, -2.1669955253601074, -2.1753950119018555, -2.1840035915374756, -2.192828416824341, -2.201875686645508, -2.2111527919769287, -2.2206668853759766, -2.2304251194000244, -2.2404353618621826, -2.2507052421569824, -2.2612428665161133, -2.2720563411712646, -2.283154010772705, -2.294544219970703, -2.3062360286712646, -2.3182380199432373, -2.330559015274048, -2.3432083129882812, -2.356194496154785, -2.3695271015167236, -2.3832149505615234, -2.3972673416137695, -2.4116930961608887, -2.4265010356903076, -2.441699743270874, -2.4572978019714355, -2.4733033180236816, -2.4897234439849854, -2.506565809249878, -2.523836851119995, -2.5415425300598145, -2.559687614440918, -2.5782763957977295, -2.5973122119903564, -2.6167969703674316, -2.6367313861846924, -2.6571147441864014, -2.677945137023926, -2.699218511581421, -2.7209293842315674, -2.743070125579834, -2.765631675720215, -2.788602352142334, -2.8119683265686035, -2.8357138633728027, -2.85982084274292, -2.8842689990997314, -2.9090356826782227, -2.934096336364746, -2.9594242572784424, -2.9849908351898193, -3.010765314102173, -3.0367157459259033, -3.0628087520599365, -3.0890095233917236, -3.1152830123901367, 3.1415927410125732, 3.114572286605835, 3.0875911712646484, 3.0606884956359863, 3.033902883529663, 3.0072712898254395, 2.980829954147339, 2.954613447189331, 2.928654193878174, 2.9029834270477295, 2.877629041671753, 2.8526172637939453, 2.827971935272217, 2.8037145137786865, 2.7798633575439453, 2.7564351558685303, 2.73344349861145, 2.710900068283081, 2.688814163208008, 2.6671926975250244, 2.646040916442871, 2.625361919403076, 2.6051571369171143, 2.5854263305664062, 2.5661680698394775, 2.5473790168762207, 2.529055118560791, 2.5111911296844482, 2.493781328201294, 2.476818084716797, 2.460294485092163, 2.444201946258545, 2.4285318851470947, 2.4132752418518066, 2.398422956466675, 2.383965015411377, 2.3698923587799072, 2.356194496154785, 2.3428618907928467, 2.3298847675323486, 2.3172531127929688, 2.304957389831543, 2.292987585067749, 2.281334638595581, 2.269989013671875, 2.258941173553467, 2.248182773590088, 2.2377045154571533, 2.2274980545043945, 2.217554807662964, 2.207866668701172, 2.198425769805908, 2.1892242431640625, 2.1802549362182617, 2.1715102195739746, 2.162982940673828, 2.1546666622161865, 2.146554708480835, 2.1386404037475586, 2.13091778755188, 2.123380661010742, 2.116023540496826, 2.1088404655456543, 2.1018264293670654, 2.0949759483337402, 2.0882840156555176, 2.0817458629608154, 2.0753567218780518, 2.0691120624542236, 2.0630075931549072, 2.0570390224456787, 2.0512020587921143, 2.0454931259155273, 2.0399084091186523, 2.0344438552856445, 2.0290963649749756, 2.023862361907959, 2.0187385082244873, 2.013721466064453, 2.0088086128234863, 2.0039966106414795, 1.9992825984954834, 1.994663953781128, 1.9901379346847534, 1.9857020378112793, 1.981353759765625, 1.97709059715271, 1.9729102849960327, 1.9688106775283813, 1.9647893905639648, 1.9608443975448608, 1.956973671913147, 1.9531753063201904, 1.9494473934173584, 1.945788025856018, 1.9421955347061157, 1.9386680126190186, 1.9352039098739624, 1.931801676750183, 1.9284595251083374, 1.9251762628555298, 1.9219502210617065, 1.918779969215393, 1.9156641960144043, 1.9126014709472656, 1.909590721130371, 1.906630516052246, 1.9037195444107056, 1.9008569717407227, 1.8980413675308228, 1.8952716588974, 1.8925468921661377, 1.8898658752441406, 1.8872277736663818, 1.8846315145492554, 1.8820760250091553, 1.8795605897903442, 1.8770842552185059, 1.8746459484100342, 1.8722450733184814, 1.8698807954788208, 1.8675520420074463, 1.8652583360671997, 1.8629988431930542, 1.860772728919983, 1.858579397201538, 1.8564180135726929, 1.854288101196289, -1.8521887063980103, -1.854288101196289, -1.8564180135726929, -1.858579397201538, -1.860772728919983, -1.8629988431930542, -1.8652583360671997, -1.8675520420074463, -1.8698807954788208, -1.8722450733184814, -1.8746459484100342, -1.8770842552185059, -1.8795605897903442, -1.8820760250091553, -1.8846315145492554, -1.8872277736663818, -1.8898658752441406, -1.8925468921661377, -1.8952716588974, -1.8980413675308228, -1.9008569717407227, -1.9037195444107056, -1.906630516052246, -1.909590721130371, -1.9126014709472656, -1.9156641960144043, -1.918779969215393, -1.9219502210617065, -1.9251762628555298, -1.9284595251083374, -1.931801676750183, -1.9352039098739624, -1.9386680126190186, -1.9421955347061157, -1.945788025856018, -1.9494473934173584, -1.9531753063201904, -1.956973671913147, -1.9608443975448608, -1.9647893905639648, -1.9688106775283813, -1.9729102849960327, -1.97709059715271, -1.981353759765625, -1.9857020378112793, -1.9901379346847534, -1.994663953781128, -1.9992825984954834, -2.0039966106414795, -2.0088086128234863, -2.013721466064453, -2.0187385082244873, -2.023862361907959, -2.0290963649749756, -2.0344438552856445, -2.0399084091186523, -2.0454931259155273, -2.0512020587921143, -2.0570390224456787, -2.0630075931549072, -2.0691120624542236, -2.0753567218780518, -2.0817458629608154, -2.0882840156555176, -2.0949759483337402, -2.1018264293670654, -2.1088404655456543, -2.116023540496826, -2.123380661010742, -2.13091778755188, -2.1386404037475586, -2.146554708480835, -2.1546666622161865, -2.162982940673828, -2.1715102195739746, -2.1802549362182617, -2.1892242431640625, -2.198425769805908, -2.207866668701172, -2.217554807662964, -2.2274980545043945, -2.2377045154571533, -2.248182773590088, -2.258941173553467, -2.269989013671875, -2.281334638595581, -2.292987585067749, -2.304957389831543, -2.3172531127929688, -2.3298847675323486, -2.3428618907928467, -2.356194496154785, -2.3698923587799072, -2.383965015411377, -2.398422956466675, -2.4132752418518066, -2.4285318851470947, -2.444201946258545, -2.460294485092163, -2.476818084716797, -2.493781328201294, -2.5111911296844482, -2.529055118560791, -2.5473790168762207, -2.5661680698394775, -2.5854263305664062, -2.6051571369171143, -2.625361919403076, -2.646040916442871, -2.6671926975250244, -2.688814163208008, -2.710900068283081, -2.73344349861145, -2.7564351558685303, -2.7798633575439453, -2.8037145137786865, -2.827971935272217, -2.8526172637939453, -2.877629041671753, -2.9029834270477295, -2.928654193878174, -2.954613447189331, -2.980829954147339, -3.0072712898254395, -3.033902883529663, -3.0606884956359863, -3.0875911712646484, -3.114572286605835, 3.1415927410125732, 3.1138219833374023, 3.0860941410064697, 3.0584514141082764, 3.030935525894165, 3.003586530685425, 2.9764440059661865, 2.949544668197632, 2.9229238033294678, 2.8966140747070312, 2.870645761489868, 2.8450467586517334, 2.8198421001434326, 2.795053720474243, 2.7707014083862305, 2.7468016147613525, 2.7233684062957764, 2.700413227081299, 2.677945137023926, 2.655970573425293, 2.6344940662384033, 2.613518238067627, 2.593043327331543, 2.573068141937256, 2.5535900592803955, 2.534605026245117, 2.5161075592041016, 2.498091459274292, 2.4805495738983154, 2.463473320007324, 2.44685435295105, 2.4306833744049072, 2.414950370788574, 2.3996453285217285, 2.384758234024048, 2.3702781200408936, 2.356194496154785, 2.342496633529663, 2.329174041748047, 2.316215753555298, 2.3036115169525146, 2.2913503646850586, 2.2794225215911865, 2.267817735671997, 2.256525754928589, 2.245537281036377, 2.234842538833618, 2.2244322299957275, 2.2142975330352783, 2.2044293880462646, 2.194819450378418, 2.1854593753814697, 2.1763410568237305, 2.16745662689209, 2.158798933029175, 2.150360345840454, 2.1421337127685547, 2.134112596511841, 2.1262900829315186, 2.1186599731445312, 2.111215829849243, 2.103951930999756, 2.09686279296875, 2.089942455291748, 2.0831856727600098, 2.076587677001953, 2.070142984390259, 2.063847303390503, 2.0576956272125244, 2.0516836643218994, 2.045807123184204, 2.0400619506835938, 2.0344438552856445, 2.028949499130249, 2.0235748291015625, 2.0183162689208984, 2.0131704807281494, 2.008134126663208, 2.003204107284546, 1.9983770847320557, 1.993650197982788, 1.9890207052230835, 1.9844855070114136, 1.9800422191619873, 1.975688099861145, 1.9714207649230957, 1.9672375917434692, 1.9631364345550537, 1.9591150283813477, 1.9551711082458496, 1.9513026475906372, 1.947507619857788, 1.9437839984893799, 1.9401299953460693, 1.936543583869934, 1.93302321434021, 1.9295669794082642, 1.9261733293533325, 1.9228405952453613, 1.919567346572876, 1.9163519144058228, 1.913192868232727, 1.9100888967514038, 1.9070385694503784, 1.9040405750274658, 1.9010937213897705, 1.8981965780258179, 1.8953479528427124, 1.8925468921661377, 1.8897920846939087, 1.8870824575424194, 1.884416937828064, 1.8817945718765259, 1.8792142868041992, 1.8766752481460571, 1.874176263809204, 1.8717166185379028, 1.8692952394485474, 1.86691153049469, 1.8645644187927246, 1.8622530698776245, 1.8599770069122314, 1.85773503780365, 1.8555268049240112, 1.8533512353897095, 1.851207971572876, 1.8490959405899048, 1.8470147848129272, -1.844963788986206, -1.8470147848129272, -1.8490959405899048, -1.851207971572876, -1.8533512353897095, -1.8555268049240112, -1.85773503780365, -1.8599770069122314, -1.8622530698776245, -1.8645644187927246, -1.86691153049469, -1.8692952394485474, -1.8717166185379028, -1.874176263809204, -1.8766752481460571, -1.8792142868041992, -1.8817945718765259, -1.884416937828064, -1.8870824575424194, -1.8897920846939087, -1.8925468921661377, -1.8953479528427124, -1.8981965780258179, -1.9010937213897705, -1.9040405750274658, -1.9070385694503784, -1.9100888967514038, -1.913192868232727, -1.9163519144058228, -1.919567346572876, -1.9228405952453613, -1.9261733293533325, -1.9295669794082642, -1.93302321434021, -1.936543583869934, -1.9401299953460693, -1.9437839984893799, -1.947507619857788, -1.9513026475906372, -1.9551711082458496, -1.9591150283813477, -1.9631364345550537, -1.9672375917434692, -1.9714207649230957, -1.975688099861145, -1.9800422191619873, -1.9844855070114136, -1.9890207052230835, -1.993650197982788, -1.9983770847320557, -2.003204107284546, -2.008134126663208, -2.0131704807281494, -2.0183162689208984, -2.0235748291015625, -2.028949499130249, -2.0344438552856445, -2.0400619506835938, -2.045807123184204, -2.0516836643218994, -2.0576956272125244, -2.063847303390503, -2.070142984390259, -2.076587677001953, -2.0831856727600098, -2.089942455291748, -2.09686279296875, -2.103951930999756, -2.111215829849243, -2.1186599731445312, -2.1262900829315186, -2.134112596511841, -2.1421337127685547, -2.150360345840454, -2.158798933029175, -2.16745662689209, -2.1763410568237305, -2.1854593753814697, -2.194819450378418, -2.2044293880462646, -2.2142975330352783, -2.2244322299957275, -2.234842538833618, -2.245537281036377, -2.256525754928589, -2.267817735671997, -2.2794225215911865, -2.2913503646850586, -2.3036115169525146, -2.316215753555298, -2.329174041748047, -2.342496633529663, -2.356194496154785, -2.3702781200408936, -2.384758234024048, -2.3996453285217285, -2.414950370788574, -2.4306833744049072, -2.44685435295105, -2.463473320007324, -2.4805495738983154, -2.498091459274292, -2.5161075592041016, -2.534605026245117, -2.5535900592803955, -2.573068141937256, -2.593043327331543, -2.613518238067627, -2.6344940662384033, -2.655970573425293, -2.677945137023926, -2.700413227081299, -2.7233684062957764, -2.7468016147613525, -2.7707014083862305, -2.795053720474243, -2.8198421001434326, -2.8450467586517334, -2.870645761489868, -2.8966140747070312, -2.9229238033294678, -2.949544668197632, -2.9764440059661865, -3.003586530685425, -3.030935525894165, -3.0584514141082764, -3.0860941410064697, -3.1138219833374023, 3.1415927410125732, 3.1130290031433105, 3.0845117568969727, 3.0560872554779053, 3.0278005599975586, 2.9996955394744873, 2.9718143939971924, 2.944197177886963, 2.916881561279297, 2.8899025917053223, 2.863292932510376, 2.8370816707611084, 2.8112952709198, 2.785956859588623, 2.7610862255096436, 2.7367007732391357, 2.7128145694732666, 2.689438819885254, 2.666581869125366, 2.64424991607666, 2.6224465370178223, 2.601173162460327, 2.5804293155670166, 2.5602123737335205, 2.5405189990997314, 2.521343231201172, 2.502678632736206, 2.484517812728882, 2.4668517112731934, 2.4496712684631348, 2.432966470718384, 2.416726589202881, 2.4009406566619873, 2.3855977058410645, 2.3706862926483154, 2.356194496154785, 2.3421108722686768, 2.3284237384796143, 2.315121650695801, 2.3021929264068604, 2.289626359939575, 2.2774105072021484, 2.2655346393585205, 2.2539877891540527, 2.2427594661712646, 2.231839418411255, 2.221217632293701, 2.2108845710754395, 2.2008302211761475, 2.1910457611083984, 2.1815223693847656, 2.172250986099243, 2.1632237434387207, 2.1544320583343506, 2.1458685398101807, 2.1375255584716797, 2.1293957233428955, 2.121471881866455, 2.1137473583221436, 2.1062159538269043, 2.0988707542419434, 2.0917060375213623, 2.0847160816192627, 2.077894926071167, 2.071237087249756, 2.0647377967834473, 2.058391571044922, 2.0521936416625977, 2.0461392402648926, 2.040224313735962, 2.0344438552856445, 2.028794288635254, 2.023271322250366, 2.0178709030151367, 2.012589454650879, 2.0074234008789062, 2.0023694038391113, 1.997423768043518, 1.9925836324691772, 1.987845540046692, 1.9832067489624023, 1.9786642789840698, 1.9742153882980347, 1.9698572158813477, 1.9655874967575073, 1.9614033699035645, 1.9573026895523071, 1.9532829523086548, 1.949341893196106, 1.9454774856567383, 1.9416875839233398, 1.9379701614379883, 1.9343231916427612, 1.9307448863983154, 1.927233338356018, 1.9237867593765259, 1.9204034805297852, 1.9170818328857422, 1.9138202667236328, 1.9106172323226929, 1.9074711799621582, 1.9043806791305542, 1.9013442993164062, 1.8983607292175293, 1.8954287767410278, 1.8925468921661377, 1.889714002609253, 1.886928915977478, 1.884190559387207, 1.8814976215362549, 1.8788491487503052, 1.8762439489364624, 1.8736811876296997, 1.8711597919464111, 1.8686786890029907, 1.8662371635437012, 1.8638341426849365, 1.86146879196167, 1.8591402769088745, 1.8568477630615234, 1.8545904159545898, 1.8523675203323364, 1.8501782417297363, 1.8480218648910522, 1.8458976745605469, 1.8438050746917725, 1.8417432308197021, 1.8397114276885986, -1.8377093076705933, -1.8397114276885986, -1.8417432308197021, -1.8438050746917725, -1.8458976745605469, -1.8480218648910522, -1.8501782417297363, -1.8523675203323364, -1.8545904159545898, -1.8568477630615234, -1.8591402769088745, -1.86146879196167, -1.8638341426849365, -1.8662371635437012, -1.8686786890029907, -1.8711597919464111, -1.8736811876296997, -1.8762439489364624, -1.8788491487503052, -1.8814976215362549, -1.884190559387207, -1.886928915977478, -1.889714002609253, -1.8925468921661377, -1.8954287767410278, -1.8983607292175293, -1.9013442993164062, -1.9043806791305542, -1.9074711799621582, -1.9106172323226929, -1.9138202667236328, -1.9170818328857422, -1.9204034805297852, -1.9237867593765259, -1.927233338356018, -1.9307448863983154, -1.9343231916427612, -1.9379701614379883, -1.9416875839233398, -1.9454774856567383, -1.949341893196106, -1.9532829523086548, -1.9573026895523071, -1.9614033699035645, -1.9655874967575073, -1.9698572158813477, -1.9742153882980347, -1.9786642789840698, -1.9832067489624023, -1.987845540046692, -1.9925836324691772, -1.997423768043518, -2.0023694038391113, -2.0074234008789062, -2.012589454650879, -2.0178709030151367, -2.023271322250366, -2.028794288635254, -2.0344438552856445, -2.040224313735962, -2.0461392402648926, -2.0521936416625977, -2.058391571044922, -2.0647377967834473, -2.071237087249756, -2.077894926071167, -2.0847160816192627, -2.0917060375213623, -2.0988707542419434, -2.1062159538269043, -2.1137473583221436, -2.121471881866455, -2.1293957233428955, -2.1375255584716797, -2.1458685398101807, -2.1544320583343506, -2.1632237434387207, -2.172250986099243, -2.1815223693847656, -2.1910457611083984, -2.2008302211761475, -2.2108845710754395, -2.221217632293701, -2.231839418411255, -2.2427594661712646, -2.2539877891540527, -2.2655346393585205, -2.2774105072021484, -2.289626359939575, -2.3021929264068604, -2.315121650695801, -2.3284237384796143, -2.3421108722686768, -2.356194496154785, -2.3706862926483154, -2.3855977058410645, -2.4009406566619873, -2.416726589202881, -2.432966470718384, -2.4496712684631348, -2.4668517112731934, -2.484517812728882, -2.502678632736206, -2.521343231201172, -2.5405189990997314, -2.5602123737335205, -2.5804293155670166, -2.601173162460327, -2.6224465370178223, -2.64424991607666, -2.666581869125366, -2.689438819885254, -2.7128145694732666, -2.7367007732391357, -2.7610862255096436, -2.785956859588623, -2.8112952709198, -2.8370816707611084, -2.863292932510376, -2.8899025917053223, -2.916881561279297, -2.944197177886963, -2.9718143939971924, -2.9996955394744873, -3.0278005599975586, -3.0560872554779053, -3.0845117568969727, -3.1130290031433105, 3.1415927410125732, 3.112189292907715, 3.082836866378784, 3.0535852909088135, 3.0244839191436768, 2.9955804347991943, 2.9669203758239746, 2.938547372817993, 2.9105019569396973, 2.882821798324585, 2.855541229248047, 2.8286914825439453, 2.802299976348877, 2.7763912677764893, 2.750985622406006, 2.726100444793701, 2.7017500400543213, 2.677945137023926, 2.654693365097046, 2.63200044631958, 2.6098685264587402, 2.5882983207702637, 2.5672879219055176, 2.5468335151672363, 2.5269296169281006, 2.5075700283050537, 2.488745927810669, 2.4704487323760986, 2.4526681900024414, 2.4353935718536377, 2.4186131954193115, 2.402315616607666, 2.386488199234009, 2.3711187839508057, 2.356194496154785, 2.341702699661255, 2.3276307582855225, 2.3139660358428955, 2.3006958961486816, 2.2878081798553467, 2.2752904891967773, 2.2631306648254395, 2.2513175010681152, 2.2398393154144287, 2.228684902191162, 2.217843532562256, 2.2073044776916504, 2.1970577239990234, 2.1870932579040527, 2.177401542663574, 2.167973041534424, 2.158798933029175, 2.1498706340789795, 2.1411795616149902, 2.1327178478240967, 2.1244776248931885, 2.1164512634277344, 2.1086318492889404, 2.1010119915008545, 2.09358549118042, 2.0863454341888428, 2.0792856216430664, 2.0724003314971924, 2.0656838417053223, 2.0591301918029785, 2.052734613418579, 2.0464916229248047, 2.040396213531494, 2.0344438552856445, 2.028630018234253, 2.0229501724243164, 2.017400026321411, 2.0119757652282715, 2.0066733360290527, 2.0014889240264893, 1.996418833732605, 1.9914597272872925, 1.9866081476211548, 1.981860876083374, 1.9772148132324219, 1.9726669788360596, 1.9682143926620483, 1.9638543128967285, 1.95958411693573, 1.955401062965393, 1.9513026475906372, 1.947286605834961, 1.9433505535125732, 1.9394922256469727, 1.9357094764709473, 1.9320000410079956, 1.9283621311187744, 1.9247937202453613, 1.9212929010391235, 1.9178578853607178, 1.9144868850708008, 1.9111782312393188, 1.9079302549362183, 1.9047414064407349, 1.9016101360321045, 1.8985347747802734, 1.8955142498016357, 1.8925468921661377, 1.8896313905715942, 1.8867665529251099, 1.8839510679244995, 1.8811837434768677, 1.8784632682800293, 1.875788688659668, 1.8731586933135986, 1.8705724477767944, 1.8680286407470703, 1.8655264377593994, 1.8630647659301758, 1.8606427907943726, 1.8582595586776733, 1.8559141159057617, 1.8536055088043213, 1.8513331413269043, 1.8490959405899048, 1.846893310546875, 1.844724416732788, 1.8425885438919067, 1.8404847383499146, 1.8384126424789429, 1.8363713026046753, 1.8343602418899536, 1.832378625869751, -1.8304259777069092, -1.832378625869751, -1.8343602418899536, -1.8363713026046753, -1.8384126424789429, -1.8404847383499146, -1.8425885438919067, -1.844724416732788, -1.846893310546875, -1.8490959405899048, -1.8513331413269043, -1.8536055088043213, -1.8559141159057617, -1.8582595586776733, -1.8606427907943726, -1.8630647659301758, -1.8655264377593994, -1.8680286407470703, -1.8705724477767944, -1.8731586933135986, -1.875788688659668, -1.8784632682800293, -1.8811837434768677, -1.8839510679244995, -1.8867665529251099, -1.8896313905715942, -1.8925468921661377, -1.8955142498016357, -1.8985347747802734, -1.9016101360321045, -1.9047414064407349, -1.9079302549362183, -1.9111782312393188, -1.9144868850708008, -1.9178578853607178, -1.9212929010391235, -1.9247937202453613, -1.9283621311187744, -1.9320000410079956, -1.9357094764709473, -1.9394922256469727, -1.9433505535125732, -1.947286605834961, -1.9513026475906372, -1.955401062965393, -1.95958411693573, -1.9638543128967285, -1.9682143926620483, -1.9726669788360596, -1.9772148132324219, -1.981860876083374, -1.9866081476211548, -1.9914597272872925, -1.996418833732605, -2.0014889240264893, -2.0066733360290527, -2.0119757652282715, -2.017400026321411, -2.0229501724243164, -2.028630018234253, -2.0344438552856445, -2.040396213531494, -2.0464916229248047, -2.052734613418579, -2.0591301918029785, -2.0656838417053223, -2.0724003314971924, -2.0792856216430664, -2.0863454341888428, -2.09358549118042, -2.1010119915008545, -2.1086318492889404, -2.1164512634277344, -2.1244776248931885, -2.1327178478240967, -2.1411795616149902, -2.1498706340789795, -2.158798933029175, -2.167973041534424, -2.177401542663574, -2.1870932579040527, -2.1970577239990234, -2.2073044776916504, -2.217843532562256, -2.228684902191162, -2.2398393154144287, -2.2513175010681152, -2.2631306648254395, -2.2752904891967773, -2.2878081798553467, -2.3006958961486816, -2.3139660358428955, -2.3276307582855225, -2.341702699661255, -2.356194496154785, -2.3711187839508057, -2.386488199234009, -2.402315616607666, -2.4186131954193115, -2.4353935718536377, -2.4526681900024414, -2.4704487323760986, -2.488745927810669, -2.5075700283050537, -2.5269296169281006, -2.5468335151672363, -2.5672879219055176, -2.5882983207702637, -2.6098685264587402, -2.63200044631958, -2.654693365097046, -2.677945137023926, -2.7017500400543213, -2.726100444793701, -2.750985622406006, -2.7763912677764893, -2.802299976348877, -2.8286914825439453, -2.855541229248047, -2.882821798324585, -2.9105019569396973, -2.938547372817993, -2.9669203758239746, -2.9955804347991943, -3.0244839191436768, -3.0535852909088135, -3.082836866378784, -3.112189292907715, 3.1415927410125732, 3.1112987995147705, 3.0810606479644775, 3.0509328842163086, 3.0209689140319824, 2.9912211894989014, 2.9617390632629395, 2.932569742202759, 2.903756618499756, 2.875340700149536, 2.847357988357544, 2.8198421001434326, 2.7928216457366943, 2.766321897506714, 2.740363836288452, 2.7149651050567627, 2.6901395320892334, 2.6658973693847656, 2.6422460079193115, 2.6191892623901367, 2.596728801727295, 2.5748634338378906, 2.5535900592803955, 2.5329034328460693, 2.512796401977539, 2.493260622024536, 2.4742865562438965, 2.4558632373809814, 2.437978982925415, 2.420621395111084, 2.403777599334717, 2.387434244155884, 2.3715779781341553, 2.356194496154785, 2.3412702083587646, 2.326791286468506, 2.312743663787842, 2.2991137504577637, 2.2858879566192627, 2.2730531692504883, 2.26059627532959, 2.248504638671875, 2.2367656230926514, 2.2253670692443848, 2.2142975330352783, 2.203545093536377, 2.1930992603302, 2.1829488277435303, 2.173083782196045, 2.1634936332702637, 2.1541693210601807, 2.1451010704040527, 2.1362802982330322, 2.1276979446411133, 2.1193456649780273, 2.111215829849243, 2.1033003330230713, 2.0955920219421387, 2.0880837440490723, 2.080768346786499, 2.0736396312713623, 2.0666909217834473, 2.0599160194396973, 2.053309679031372, 2.046865701675415, 2.040578842163086, 2.0344438552856445, 2.028455972671509, 2.0226101875305176, 2.016901969909668, 2.011326551437378, 2.005880355834961, 2.000558614730835, 1.9953577518463135, 1.9902738332748413, 1.9853031635284424, 1.9804424047470093, 1.975688099861145, 1.9710370302200317, 1.9664859771728516, 1.9620319604873657, 1.9576719999313354, 1.9534035921096802, 1.9492237567901611, 1.9451299905776978, 1.9411197900772095, 1.9371907711029053, 1.9333405494689941, 1.9295669794082642, 1.9258679151535034, 1.9222410917282104, 1.918684720993042, 1.9151967763900757, 1.9117752313613892, 1.9084185361862183, 1.9051247835159302, 1.9018924236297607, 1.8987196683883667, 1.8956049680709839, 1.8925468921661377, 1.889543890953064, 1.886594533920288, 1.883697509765625, 1.8808515071868896, 1.8780550956726074, 1.8753072023391724, 1.8726065158843994, 1.869951844215393, 1.8673421144485474, 1.8647762537002563, 1.8622530698776245, 1.859771728515625, 1.8573310375213623, 1.8549302816390991, 1.8525681495666504, 1.8502440452575684, 1.8479570150375366, 1.8457062244415283, 1.843490719795227, 1.841309666633606, 1.8391625881195068, 1.8370484113693237, 1.8349665403366089, 1.8329161405563354, 1.8308967351913452, 1.8289074897766113, 1.8269476890563965, 1.8250168561935425, -1.823114275932312, -1.8250168561935425, -1.8269476890563965, -1.8289074897766113, -1.8308967351913452, -1.8329161405563354, -1.8349665403366089, -1.8370484113693237, -1.8391625881195068, -1.841309666633606, -1.843490719795227, -1.8457062244415283, -1.8479570150375366, -1.8502440452575684, -1.8525681495666504, -1.8549302816390991, -1.8573310375213623, -1.859771728515625, -1.8622530698776245, -1.8647762537002563, -1.8673421144485474, -1.869951844215393, -1.8726065158843994, -1.8753072023391724, -1.8780550956726074, -1.8808515071868896, -1.883697509765625, -1.886594533920288, -1.889543890953064, -1.8925468921661377, -1.8956049680709839, -1.8987196683883667, -1.9018924236297607, -1.9051247835159302, -1.9084185361862183, -1.9117752313613892, -1.9151967763900757, -1.918684720993042, -1.9222410917282104, -1.9258679151535034, -1.9295669794082642, -1.9333405494689941, -1.9371907711029053, -1.9411197900772095, -1.9451299905776978, -1.9492237567901611, -1.9534035921096802, -1.9576719999313354, -1.9620319604873657, -1.9664859771728516, -1.9710370302200317, -1.975688099861145, -1.9804424047470093, -1.9853031635284424, -1.9902738332748413, -1.9953577518463135, -2.000558614730835, -2.005880355834961, -2.011326551437378, -2.016901969909668, -2.0226101875305176, -2.028455972671509, -2.0344438552856445, -2.040578842163086, -2.046865701675415, -2.053309679031372, -2.0599160194396973, -2.0666909217834473, -2.0736396312713623, -2.080768346786499, -2.0880837440490723, -2.0955920219421387, -2.1033003330230713, -2.111215829849243, -2.1193456649780273, -2.1276979446411133, -2.1362802982330322, -2.1451010704040527, -2.1541693210601807, -2.1634936332702637, -2.173083782196045, -2.1829488277435303, -2.1930992603302, -2.203545093536377, -2.2142975330352783, -2.2253670692443848, -2.2367656230926514, -2.248504638671875, -2.26059627532959, -2.2730531692504883, -2.2858879566192627, -2.2991137504577637, -2.312743663787842, -2.326791286468506, -2.3412702083587646, -2.356194496154785, -2.3715779781341553, -2.387434244155884, -2.403777599334717, -2.420621395111084, -2.437978982925415, -2.4558632373809814, -2.4742865562438965, -2.493260622024536, -2.512796401977539, -2.5329034328460693, -2.5535900592803955, -2.5748634338378906, -2.596728801727295, -2.6191892623901367, -2.6422460079193115, -2.6658973693847656, -2.6901395320892334, -2.7149651050567627, -2.740363836288452, -2.766321897506714, -2.7928216457366943, -2.8198421001434326, -2.847357988357544, -2.875340700149536, -2.903756618499756, -2.932569742202759, -2.9617390632629395, -2.9912211894989014, -3.0209689140319824, -3.0509328842163086, -3.0810606479644775, -3.1112987995147705, 3.1415927410125732, 3.1103527545928955, 3.0791738033294678, 3.0481159687042236, 3.017237663269043, 2.986595869064331, 2.956244707107544, 2.9262349605560303, 2.8966140747070312, 2.8674252033233643, 2.838707685470581, 2.8104965686798096, 2.7828218936920166, 2.7557098865509033, 2.729182243347168, 2.703256130218506, 2.677945137023926, 2.653258800506592, 2.6292030811309814, 2.605781316757202, 2.582993268966675, 2.5608363151550293, 2.5393052101135254, 2.5183932781219482, 2.498091459274292, 2.4783897399902344, 2.4592761993408203, 2.4407382011413574, 2.422762632369995, 2.4053351879119873, 2.388441324234009, 2.3720662593841553, 2.356194496154785, 2.340811014175415, 2.3259007930755615, 2.311448335647583, 2.297438621520996, 2.2838571071624756, 2.2706892490386963, 2.257920503616333, 2.245537281036377, 2.2335257530212402, 2.2218730449676514, 2.2105660438537598, 2.1995925903320312, 2.1889405250549316, 2.178598403930664, 2.1685547828674316, 2.158798933029175, 2.149320602416992, 2.1401095390319824, 2.1311562061309814, 2.1224513053894043, 2.113986015319824, 2.1057515144348145, 2.0977394580841064, 2.089942455291748, 2.08235239982605, 2.0749623775482178, 2.0677649974823, 2.060753583908081, 2.053921937942505, 2.0472638607025146, 2.0407729148864746, 2.0344438552856445, 2.028271198272705, 2.022249460220337, 2.016373634338379, 2.010638952255249, 2.0050406455993652, 1.9995743036270142, 1.9942357540130615, 1.9890207052230835, 1.9839251041412354, 1.9789453744888306, 1.974077820777893, 1.9693187475204468, 1.9646649360656738, 1.9601130485534668, 1.9556599855422974, 1.9513026475906372, 1.9470382928848267, 1.9428640604019165, 1.938777208328247, 1.9347752332687378, 1.930855631828308, 1.927016019821167, 1.9232538938522339, 1.919567346572876, 1.9159539937973022, 1.9124118089675903, 1.9089388847351074, 1.9055331945419312, 1.9021928310394287, 1.898916244506836, 1.8957014083862305, 1.8925468921661377, 1.8894509077072144, 1.8864120244979858, 1.8834285736083984, 1.880499243736267, 1.8776226043701172, 1.8747972249984741, 1.8720219135284424, 1.8692952394485474, 1.866616129875183, 1.8639832735061646, 1.8613954782485962, 1.8588517904281616, 1.8563510179519653, 1.8538920879364014, 1.8514740467071533, 1.8490959405899048, 1.8467568159103394, 1.844455599784851, 1.8421915769577026, 1.8399637937545776, 1.8377714157104492, 1.8356136083602905, 1.8334896564483643, 1.8313987255096436, 1.8293401002883911, 1.82731294631958, 1.8253166675567627, 1.8233505487442017, 1.8214139938354492, 1.819506287574768, 1.8176268339157104, -1.8157750368118286, -1.8176268339157104, -1.819506287574768, -1.8214139938354492, -1.8233505487442017, -1.8253166675567627, -1.82731294631958, -1.8293401002883911, -1.8313987255096436, -1.8334896564483643, -1.8356136083602905, -1.8377714157104492, -1.8399637937545776, -1.8421915769577026, -1.844455599784851, -1.8467568159103394, -1.8490959405899048, -1.8514740467071533, -1.8538920879364014, -1.8563510179519653, -1.8588517904281616, -1.8613954782485962, -1.8639832735061646, -1.866616129875183, -1.8692952394485474, -1.8720219135284424, -1.8747972249984741, -1.8776226043701172, -1.880499243736267, -1.8834285736083984, -1.8864120244979858, -1.8894509077072144, -1.8925468921661377, -1.8957014083862305, -1.898916244506836, -1.9021928310394287, -1.9055331945419312, -1.9089388847351074, -1.9124118089675903, -1.9159539937973022, -1.919567346572876, -1.9232538938522339, -1.927016019821167, -1.930855631828308, -1.9347752332687378, -1.938777208328247, -1.9428640604019165, -1.9470382928848267, -1.9513026475906372, -1.9556599855422974, -1.9601130485534668, -1.9646649360656738, -1.9693187475204468, -1.974077820777893, -1.9789453744888306, -1.9839251041412354, -1.9890207052230835, -1.9942357540130615, -1.9995743036270142, -2.0050406455993652, -2.010638952255249, -2.016373634338379, -2.022249460220337, -2.028271198272705, -2.0344438552856445, -2.0407729148864746, -2.0472638607025146, -2.053921937942505, -2.060753583908081, -2.0677649974823, -2.0749623775482178, -2.08235239982605, -2.089942455291748, -2.0977394580841064, -2.1057515144348145, -2.113986015319824, -2.1224513053894043, -2.1311562061309814, -2.1401095390319824, -2.149320602416992, -2.158798933029175, -2.1685547828674316, -2.178598403930664, -2.1889405250549316, -2.1995925903320312, -2.2105660438537598, -2.2218730449676514, -2.2335257530212402, -2.245537281036377, -2.257920503616333, -2.2706892490386963, -2.2838571071624756, -2.297438621520996, -2.311448335647583, -2.3259007930755615, -2.340811014175415, -2.356194496154785, -2.3720662593841553, -2.388441324234009, -2.4053351879119873, -2.422762632369995, -2.4407382011413574, -2.4592761993408203, -2.4783897399902344, -2.498091459274292, -2.5183932781219482, -2.5393052101135254, -2.5608363151550293, -2.582993268966675, -2.605781316757202, -2.6292030811309814, -2.653258800506592, -2.677945137023926, -2.703256130218506, -2.729182243347168, -2.7557098865509033, -2.7828218936920166, -2.8104965686798096, -2.838707685470581, -2.8674252033233643, -2.8966140747070312, -2.9262349605560303, -2.956244707107544, -2.986595869064331, -3.017237663269043, -3.0481159687042236, -3.0791738033294678, -3.1103527545928955, 3.1415927410125732, 3.1093456745147705, 3.0771658420562744, 3.045118808746338, 3.0132694244384766, 2.9816794395446777, 2.9504082202911377, 2.919510841369629, 2.889038324356079, 2.8590376377105713, 2.8295505046844482, 2.8006136417388916, 2.772258996963501, 2.7445132732391357, 2.717398166656494, 2.6909313201904297, 2.6651251316070557, 2.639988660812378, 2.6155261993408203, 2.5917394161224365, 2.5686264038085938, 2.546182870864868, 2.5244011878967285, 2.503272771835327, 2.4827866554260254, 2.462930202484131, 2.4436898231506348, 2.425050973892212, 2.4069981575012207, 2.3895153999328613, 2.372586488723755, 2.356194496154785, 2.340322732925415, 2.3249547481536865, 2.3100733757019043, 2.2956624031066895, 2.281705617904663, 2.2681870460510254, 2.2550911903381348, 2.2424025535583496, 2.2301063537597656, 2.218188524246216, 2.206634759902954, 2.195431709289551, 2.1845664978027344, 2.1740262508392334, 2.1637988090515137, 2.1538729667663574, 2.1442368030548096, 2.1348800659179688, 2.1257920265197754, 2.1169629096984863, 2.1083829402923584, 2.1000430583953857, 2.0919344425201416, 2.0840485095977783, 2.0763773918151855, 2.068912982940674, 2.06164813041687, 2.0545754432678223, 2.0476882457733154, 2.0409798622131348, 2.0344438552856445, 2.0280745029449463, 2.0218660831451416, 2.015812635421753, 2.00990891456604, 2.004150152206421, 1.9985312223434448, 1.9930474758148193, 1.9876943826675415, 1.9824676513671875, 1.977363109588623, 1.972376823425293, 1.9675049781799316, 1.962743878364563, 1.9580899477005005, 1.9535398483276367, 1.9490903615951538, 1.9447382688522339, 1.9404805898666382, 1.936314582824707, 1.9322372674942017, 1.928246021270752, 1.9243383407592773, 1.9205116033554077, 1.9167635440826416, 1.9130918979644775, 1.909494400024414, 1.9059689044952393, 1.9025133848190308, 1.8991256952285767, 1.8958041667938232, 1.8925468921661377, 1.8893519639968872, 1.8862178325653076, 1.8831428289413452, 1.8801251649856567, 1.8771635293960571, 1.8742562532424927, 1.8714020252227783, 1.8685994148254395, 1.8658469915390015, 1.8631435632705688, 1.860487937927246, 1.8578786849975586, 1.85531485080719, 1.852795124053955, 1.850318431854248, 1.8478838205337524, 1.8454902172088623, 1.8431365489959717, 1.8408219814300537, 1.838545322418213, 1.8363059759140015, 1.8341028690338135, 1.831935167312622, 1.82980215549469, 1.8277028799057007, 1.825636625289917, 1.8236026763916016, 1.8216001987457275, 1.8196284770965576, 1.8176870346069336, 1.8157750368118286, 1.8138917684555054, 1.8120366334915161, 1.8102091550827026, -1.8084086179733276, -1.8102091550827026, -1.8120366334915161, -1.8138917684555054, -1.8157750368118286, -1.8176870346069336, -1.8196284770965576, -1.8216001987457275, -1.8236026763916016, -1.825636625289917, -1.8277028799057007, -1.82980215549469, -1.831935167312622, -1.8341028690338135, -1.8363059759140015, -1.838545322418213, -1.8408219814300537, -1.8431365489959717, -1.8454902172088623, -1.8478838205337524, -1.850318431854248, -1.852795124053955, -1.85531485080719, -1.8578786849975586, -1.860487937927246, -1.8631435632705688, -1.8658469915390015, -1.8685994148254395, -1.8714020252227783, -1.8742562532424927, -1.8771635293960571, -1.8801251649856567, -1.8831428289413452, -1.8862178325653076, -1.8893519639968872, -1.8925468921661377, -1.8958041667938232, -1.8991256952285767, -1.9025133848190308, -1.9059689044952393, -1.909494400024414, -1.9130918979644775, -1.9167635440826416, -1.9205116033554077, -1.9243383407592773, -1.928246021270752, -1.9322372674942017, -1.936314582824707, -1.9404805898666382, -1.9447382688522339, -1.9490903615951538, -1.9535398483276367, -1.9580899477005005, -1.962743878364563, -1.9675049781799316, -1.972376823425293, -1.977363109588623, -1.9824676513671875, -1.9876943826675415, -1.9930474758148193, -1.9985312223434448, -2.004150152206421, -2.00990891456604, -2.015812635421753, -2.0218660831451416, -2.0280745029449463, -2.0344438552856445, -2.0409798622131348, -2.0476882457733154, -2.0545754432678223, -2.06164813041687, -2.068912982940674, -2.0763773918151855, -2.0840485095977783, -2.0919344425201416, -2.1000430583953857, -2.1083829402923584, -2.1169629096984863, -2.1257920265197754, -2.1348800659179688, -2.1442368030548096, -2.1538729667663574, -2.1637988090515137, -2.1740262508392334, -2.1845664978027344, -2.195431709289551, -2.206634759902954, -2.218188524246216, -2.2301063537597656, -2.2424025535583496, -2.2550911903381348, -2.2681870460510254, -2.281705617904663, -2.2956624031066895, -2.3100733757019043, -2.3249547481536865, -2.340322732925415, -2.356194496154785, -2.372586488723755, -2.3895153999328613, -2.4069981575012207, -2.425050973892212, -2.4436898231506348, -2.462930202484131, -2.4827866554260254, -2.503272771835327, -2.5244011878967285, -2.546182870864868, -2.5686264038085938, -2.5917394161224365, -2.6155261993408203, -2.639988660812378, -2.6651251316070557, -2.6909313201904297, -2.717398166656494, -2.7445132732391357, -2.772258996963501, -2.8006136417388916, -2.8295505046844482, -2.8590376377105713, -2.889038324356079, -2.919510841369629, -2.9504082202911377, -2.9816794395446777, -3.0132694244384766, -3.045118808746338, -3.0771658420562744, -3.1093456745147705, 3.1415927410125732, 3.108271598815918, 3.0750246047973633, 3.041923999786377, 3.0090410709381104, 2.9764440059661865, 2.944197177886963, 2.912360668182373, 2.8809902667999268, 2.8501358032226562, 2.8198421001434326, 2.7901477813720703, 2.7610862255096436, 2.732684850692749, 2.704965591430664, 2.677945137023926, 2.6516354084014893, 2.6260435581207275, 2.601173162460327, 2.5770232677459717, 2.5535900592803955, 2.5308666229248047, 2.5088438987731934, 2.4875099658966064, 2.4668517112731934, 2.44685435295105, 2.427501916885376, 2.4087774753570557, 2.3906636238098145, 2.3731420040130615, 2.356194496154785, 2.3398025035858154, 2.3239476680755615, 2.3086113929748535, 2.293775796890259, 2.2794225215911865, 2.2655346393585205, 2.2520945072174072, 2.2390856742858887, 2.226491928100586, 2.2142975330352783, 2.202486991882324, 2.1910457611083984, 2.179959774017334, 2.169215202331543, 2.158798933029175, 2.148698329925537, 2.1389009952545166, 2.1293957233428955, 2.120170831680298, 2.111215829849243, 2.10252046585083, 2.0940747261047363, 2.085869073867798, 2.077894926071167, 2.070142984390259, 2.062605619430542, 2.055274248123169, 2.0481417179107666, 2.041200637817383, 2.0344438552856445, 2.027865171432495, 2.0214576721191406, 2.0152156352996826, 2.0091328620910645, 2.003204107284546, 1.997423768043518, 1.9917869567871094, 1.9862884283065796, 1.9809236526489258, 1.975688099861145, 1.9705774784088135, 1.9655874967575073, 1.9607142210006714, 1.95595383644104, 1.9513026475906372, 1.9467573165893555, 1.9423141479492188, 1.9379701614379883, 1.9337221384048462, 1.9295669794082642, 1.9255019426345825, 1.9215242862701416, 1.9176312685012817, 1.9138202667236328, 1.9100888967514038, 1.9064348936080933, 1.9028557538986206, 1.8993494510650635, 1.89591383934021, 1.8925468921661377, 1.8892465829849243, 1.886011004447937, 1.882838487625122, 1.8797271251678467, 1.8766752481460571, 1.8736811876296997, 1.8707435131072998, 1.8678605556488037, 1.8650308847427368, 1.8622530698776245, 1.8595257997512817, 1.8568477630615234, 1.854217529296875, 1.8516340255737305, 1.8490959405899048, 1.846602201461792, 1.8441516160964966, 1.8417432308197021, 1.8393757343292236, 1.8370484113693237, 1.834760069847107, 1.8325098752975464, 1.8302967548370361, 1.8281199932098389, 1.8259787559509277, 1.8238719701766968, 1.8217990398406982, 1.8197590112686157, 1.8177512884140015, 1.8157750368118286, 1.8138294219970703, 1.8119139671325684, 1.8100279569625854, 1.8081705570220947, 1.806341290473938, 1.8045395612716675, 1.8027645349502563, -1.8010159730911255, -1.8027645349502563, -1.8045395612716675, -1.806341290473938, -1.8081705570220947, -1.8100279569625854, -1.8119139671325684, -1.8138294219970703, -1.8157750368118286, -1.8177512884140015, -1.8197590112686157, -1.8217990398406982, -1.8238719701766968, -1.8259787559509277, -1.8281199932098389, -1.8302967548370361, -1.8325098752975464, -1.834760069847107, -1.8370484113693237, -1.8393757343292236, -1.8417432308197021, -1.8441516160964966, -1.846602201461792, -1.8490959405899048, -1.8516340255737305, -1.854217529296875, -1.8568477630615234, -1.8595257997512817, -1.8622530698776245, -1.8650308847427368, -1.8678605556488037, -1.8707435131072998, -1.8736811876296997, -1.8766752481460571, -1.8797271251678467, -1.882838487625122, -1.886011004447937, -1.8892465829849243, -1.8925468921661377, -1.89591383934021, -1.8993494510650635, -1.9028557538986206, -1.9064348936080933, -1.9100888967514038, -1.9138202667236328, -1.9176312685012817, -1.9215242862701416, -1.9255019426345825, -1.9295669794082642, -1.9337221384048462, -1.9379701614379883, -1.9423141479492188, -1.9467573165893555, -1.9513026475906372, -1.95595383644104, -1.9607142210006714, -1.9655874967575073, -1.9705774784088135, -1.975688099861145, -1.9809236526489258, -1.9862884283065796, -1.9917869567871094, -1.997423768043518, -2.003204107284546, -2.0091328620910645, -2.0152156352996826, -2.0214576721191406, -2.027865171432495, -2.0344438552856445, -2.041200637817383, -2.0481417179107666, -2.055274248123169, -2.062605619430542, -2.070142984390259, -2.077894926071167, -2.085869073867798, -2.0940747261047363, -2.10252046585083, -2.111215829849243, -2.120170831680298, -2.1293957233428955, -2.1389009952545166, -2.148698329925537, -2.158798933029175, -2.169215202331543, -2.179959774017334, -2.1910457611083984, -2.202486991882324, -2.2142975330352783, -2.226491928100586, -2.2390856742858887, -2.2520945072174072, -2.2655346393585205, -2.2794225215911865, -2.293775796890259, -2.3086113929748535, -2.3239476680755615, -2.3398025035858154, -2.356194496154785, -2.3731420040130615, -2.3906636238098145, -2.4087774753570557, -2.427501916885376, -2.44685435295105, -2.4668517112731934, -2.4875099658966064, -2.5088438987731934, -2.5308666229248047, -2.5535900592803955, -2.5770232677459717, -2.601173162460327, -2.6260435581207275, -2.6516354084014893, -2.677945137023926, -2.704965591430664, -2.732684850692749, -2.7610862255096436, -2.7901477813720703, -2.8198421001434326, -2.8501358032226562, -2.8809902667999268, -2.912360668182373, -2.944197177886963, -2.9764440059661865, -3.0090410709381104, -3.041923999786377, -3.0750246047973633, -3.108271598815918, 3.1415927410125732, 3.107123613357544, 3.0727362632751465, 3.038511037826538, 3.004526376724243, 2.9708573818206787, 2.937574625015259, 2.9047439098358154, 2.872425079345703, 2.840672492980957, 2.80953311920166, 2.779048442840576, 2.7492525577545166, 2.7201733589172363, 2.691833019256592, 2.6642472743988037, 2.6374266147613525, 2.6113767623901367, 2.5860989093780518, 2.5615899562835693, 2.5378432273864746, 2.5148496627807617, 2.4925971031188965, 2.4710710048675537, 2.4502556324005127, 2.430133581161499, 2.4106860160827637, 2.3918936252593994, 2.373736619949341, 2.356194496154785, 2.339246988296509, 2.322873592376709, 2.307053804397583, 2.2917675971984863, 2.2769954204559326, 2.2627177238464355, 2.248915672302246, 2.2355709075927734, 2.222665548324585, 2.2101821899414062, 2.1981046199798584, 2.1864161491394043, 2.1751017570495605, 2.1641464233398438, 2.153535842895508, 2.143256187438965, 2.1332943439483643, 2.1236374378204346, 2.114274024963379, 2.105191707611084, 2.0963802337646484, 2.0878283977508545, 2.07952618598938, 2.0714640617370605, 2.0636327266693115, 2.056023359298706, 2.0486273765563965, 2.0414369106292725, 2.0344438552856445, 2.0276412963867188, 2.021021842956543, 2.0145790576934814, 2.0083060264587402, 2.002197027206421, 1.9962459802627563, 1.9904471635818481, 1.984795331954956, 1.9792852401733398, 1.9739118814468384, 1.9686707258224487, 1.9635570049285889, 1.9585665464401245, 1.9536950588226318, 1.9489386081695557, 1.94429349899292, 1.939755916595459, 1.9353222846984863, 1.9309895038604736, 1.926754117012024, 1.9226130247116089, 1.9185633659362793, 1.9146021604537964, 1.9107266664505005, 1.906934380531311, 1.903222680091858, 1.8995890617370605, 1.896031141281128, 1.8925468921661377, 1.8891339302062988, 1.885790228843689, 1.8825137615203857, 1.8793026208877563, 1.876154899597168, 1.8730688095092773, 1.8700426816940308, 1.867074728012085, 1.8641632795333862, 1.8613070249557495, 1.858504295349121, 1.8557536602020264, 1.8530538082122803, 1.8504031896591187, 1.847800612449646, 1.8452448844909668, 1.842734694480896, 1.8402689695358276, 1.8378465175628662, 1.8354661464691162, 1.8331267833709717, 1.8308275938034058, 1.8285675048828125, 1.826345443725586, 1.8241605758666992, 1.822011947631836, 1.8198987245559692, 1.8178199529647827, 1.8157750368118286, 1.813762903213501, 1.811782956123352, 1.8098344802856445, 1.8079166412353516, 1.8060287237167358, 1.8041701316833496, 1.8023401498794556, 1.8005380630493164, 1.798763394355774, 1.7970154285430908, 1.7952936887741089, -1.7935974597930908, -1.7952936887741089, -1.7970154285430908, -1.798763394355774, -1.8005380630493164, -1.8023401498794556, -1.8041701316833496, -1.8060287237167358, -1.8079166412353516, -1.8098344802856445, -1.811782956123352, -1.813762903213501, -1.8157750368118286, -1.8178199529647827, -1.8198987245559692, -1.822011947631836, -1.8241605758666992, -1.826345443725586, -1.8285675048828125, -1.8308275938034058, -1.8331267833709717, -1.8354661464691162, -1.8378465175628662, -1.8402689695358276, -1.842734694480896, -1.8452448844909668, -1.847800612449646, -1.8504031896591187, -1.8530538082122803, -1.8557536602020264, -1.858504295349121, -1.8613070249557495, -1.8641632795333862, -1.867074728012085, -1.8700426816940308, -1.8730688095092773, -1.876154899597168, -1.8793026208877563, -1.8825137615203857, -1.885790228843689, -1.8891339302062988, -1.8925468921661377, -1.896031141281128, -1.8995890617370605, -1.903222680091858, -1.906934380531311, -1.9107266664505005, -1.9146021604537964, -1.9185633659362793, -1.9226130247116089, -1.926754117012024, -1.9309895038604736, -1.9353222846984863, -1.939755916595459, -1.94429349899292, -1.9489386081695557, -1.9536950588226318, -1.9585665464401245, -1.9635570049285889, -1.9686707258224487, -1.9739118814468384, -1.9792852401733398, -1.984795331954956, -1.9904471635818481, -1.9962459802627563, -2.002197027206421, -2.0083060264587402, -2.0145790576934814, -2.021021842956543, -2.0276412963867188, -2.0344438552856445, -2.0414369106292725, -2.0486273765563965, -2.056023359298706, -2.0636327266693115, -2.0714640617370605, -2.07952618598938, -2.0878283977508545, -2.0963802337646484, -2.105191707611084, -2.114274024963379, -2.1236374378204346, -2.1332943439483643, -2.143256187438965, -2.153535842895508, -2.1641464233398438, -2.1751017570495605, -2.1864161491394043, -2.1981046199798584, -2.2101821899414062, -2.222665548324585, -2.2355709075927734, -2.248915672302246, -2.2627177238464355, -2.2769954204559326, -2.2917675971984863, -2.307053804397583, -2.322873592376709, -2.339246988296509, -2.356194496154785, -2.373736619949341, -2.3918936252593994, -2.4106860160827637, -2.430133581161499, -2.4502556324005127, -2.4710710048675537, -2.4925971031188965, -2.5148496627807617, -2.5378432273864746, -2.5615899562835693, -2.5860989093780518, -2.6113767623901367, -2.6374266147613525, -2.6642472743988037, -2.691833019256592, -2.7201733589172363, -2.7492525577545166, -2.779048442840576, -2.80953311920166, -2.840672492980957, -2.872425079345703, -2.9047439098358154, -2.937574625015259, -2.9708573818206787, -3.004526376724243, -3.038511037826538, -3.0727362632751465, -3.107123613357544, 3.1415927410125732, 3.105893611907959, 3.0702850818634033, 3.0348570346832275, 2.9996955394744873, 2.964883804321289, 2.930499315261841, 2.8966140747070312, 2.863292932510376, 2.830594301223755, 2.7985687255859375, 2.767259120941162, 2.7367007732391357, 2.7069225311279297, 2.677945137023926, 2.6497833728790283, 2.6224465370178223, 2.595937490463257, 2.5702552795410156, 2.545393466949463, 2.521343231201172, 2.498091459274292, 2.475623369216919, 2.453921318054199, 2.432966470718384, 2.4127378463745117, 2.393214702606201, 2.3743743896484375, 2.356194496154785, 2.3386523723602295, 2.321725368499756, 2.3053908348083496, 2.289626359939575, 2.2744100093841553, 2.259720802307129, 2.245537281036377, 2.231839418411255, 2.2186076641082764, 2.2058229446411133, 2.193467140197754, 2.1815223693847656, 2.1699717044830322, 2.158798933029175, 2.1479885578155518, 2.1375255584716797, 2.1273956298828125, 2.1175851821899414, 2.108081102371216, 2.0988707542419434, 2.089942455291748, 2.081284761428833, 2.0728864669799805, 2.0647377967834473, 2.056828260421753, 2.0491487979888916, 2.0416901111602783, 2.0344438552856445, 2.0274016857147217, 2.0205559730529785, 2.0138988494873047, 2.0074234008789062, 2.0011229515075684, 1.9949907064437866, 1.9890207052230835, 1.9832067489624023, 1.9775433540344238, 1.9720251560211182, 1.9666467905044556, 1.9614033699035645, 1.9562902450561523, 1.9513026475906372, 1.9464365243911743, 1.9416875839233398, 1.9370518922805786, 1.9325255155563354, 1.9281049966812134, 1.9237867593765259, 1.919567346572876, 1.9154436588287354, 1.9114125967025757, 1.9074711799621582, 1.9036165475845337, 1.899846076965332, 1.8961570262908936, 1.8925468921661377, 1.8890132904052734, 1.8855539560317993, 1.8821666240692139, 1.8788491487503052, 1.8755993843078613, 1.8724154233932495, 1.8692952394485474, 1.8662371635437012, 1.8632392883300781, 1.8602999448776245, 1.8574175834655762, 1.8545904159545898, 1.851817011833191, 1.8490959405899048, 1.8464257717132568, 1.8438050746917725, 1.841232419013977, 1.8387067317962646, 1.8362267017364502, 1.8337910175323486, 1.8313987255096436, 1.82904851436615, 1.8267394304275513, 1.8244704008102417, 1.8222404718399048, 1.820048451423645, 1.817893624305725, 1.8157750368118286, 1.8136916160583496, 1.8116427659988403, 1.8096275329589844, 1.8076450824737549, 1.8056946992874146, 1.8037755489349365, 1.801887035369873, 1.8000282049179077, 1.7981986999511719, 1.7963975667953491, 1.7946243286132812, 1.792878270149231, 1.7911587953567505, 1.789465308189392, 1.787797212600708, -1.78615403175354, -1.787797212600708, -1.789465308189392, -1.7911587953567505, -1.792878270149231, -1.7946243286132812, -1.7963975667953491, -1.7981986999511719, -1.8000282049179077, -1.801887035369873, -1.8037755489349365, -1.8056946992874146, -1.8076450824737549, -1.8096275329589844, -1.8116427659988403, -1.8136916160583496, -1.8157750368118286, -1.817893624305725, -1.820048451423645, -1.8222404718399048, -1.8244704008102417, -1.8267394304275513, -1.82904851436615, -1.8313987255096436, -1.8337910175323486, -1.8362267017364502, -1.8387067317962646, -1.841232419013977, -1.8438050746917725, -1.8464257717132568, -1.8490959405899048, -1.851817011833191, -1.8545904159545898, -1.8574175834655762, -1.8602999448776245, -1.8632392883300781, -1.8662371635437012, -1.8692952394485474, -1.8724154233932495, -1.8755993843078613, -1.8788491487503052, -1.8821666240692139, -1.8855539560317993, -1.8890132904052734, -1.8925468921661377, -1.8961570262908936, -1.899846076965332, -1.9036165475845337, -1.9074711799621582, -1.9114125967025757, -1.9154436588287354, -1.919567346572876, -1.9237867593765259, -1.9281049966812134, -1.9325255155563354, -1.9370518922805786, -1.9416875839233398, -1.9464365243911743, -1.9513026475906372, -1.9562902450561523, -1.9614033699035645, -1.9666467905044556, -1.9720251560211182, -1.9775433540344238, -1.9832067489624023, -1.9890207052230835, -1.9949907064437866, -2.0011229515075684, -2.0074234008789062, -2.0138988494873047, -2.0205559730529785, -2.0274016857147217, -2.0344438552856445, -2.0416901111602783, -2.0491487979888916, -2.056828260421753, -2.0647377967834473, -2.0728864669799805, -2.081284761428833, -2.089942455291748, -2.0988707542419434, -2.108081102371216, -2.1175851821899414, -2.1273956298828125, -2.1375255584716797, -2.1479885578155518, -2.158798933029175, -2.1699717044830322, -2.1815223693847656, -2.193467140197754, -2.2058229446411133, -2.2186076641082764, -2.231839418411255, -2.245537281036377, -2.259720802307129, -2.2744100093841553, -2.289626359939575, -2.3053908348083496, -2.321725368499756, -2.3386523723602295, -2.356194496154785, -2.3743743896484375, -2.393214702606201, -2.4127378463745117, -2.432966470718384, -2.453921318054199, -2.475623369216919, -2.498091459274292, -2.521343231201172, -2.545393466949463, -2.5702552795410156, -2.595937490463257, -2.6224465370178223, -2.6497833728790283, -2.677945137023926, -2.7069225311279297, -2.7367007732391357, -2.767259120941162, -2.7985687255859375, -2.830594301223755, -2.863292932510376, -2.8966140747070312, -2.930499315261841, -2.964883804321289, -2.9996955394744873, -3.0348570346832275, -3.0702850818634033, -3.105893611907959, 3.1415927410125732, 3.1045725345611572, 3.0676536560058594, 3.030935525894165, 2.994514226913452, 2.958481788635254, 2.9229238033294678, 2.887918472290039, 2.8535373210906982, 2.8198421001434326, 2.7868869304656982, 2.7547168731689453, 2.7233684062957764, 2.6928694248199463, 2.6632401943206787, 2.6344940662384033, 2.606637477874756, 2.5796711444854736, 2.5535900592803955, 2.5283854007720947, 2.5040438175201416, 2.4805495738983154, 2.457883358001709, 2.4360244274139404, 2.414950370788574, 2.394637107849121, 2.3750600814819336, 2.356194496154785, 2.338014602661133, 2.320495367050171, 2.3036115169525146, 2.2873380184173584, 2.271650791168213, 2.256525754928589, 2.2419402599334717, 2.2278711795806885, 2.2142975330352783, 2.201197862625122, 2.188552141189575, 2.1763410568237305, 2.164546012878418, 2.153149366378784, 2.1421337127685547, 2.131483316421509, 2.1211822032928467, 2.111215829849243, 2.101569890975952, 2.092230796813965, 2.0831856727600098, 2.074422597885132, 2.065929651260376, 2.0576956272125244, 2.0497100353240967, 2.0419626235961914, 2.0344438552856445, 2.0271449089050293, 2.0200564861297607, 2.0131704807281494, 2.006479263305664, 1.9999748468399048, 1.993650197982788, 1.9874986410140991, 1.981513261795044, 1.975688099861145, 1.9700170755386353, 1.9644945859909058, 1.9591150283813477, 1.9538733959197998, 1.948764681816101, 1.9437839984893799, 1.9389270544052124, 1.9341894388198853, 1.9295669794082642, 1.925055742263794, 1.920651912689209, 1.9163519144058228, 1.9121521711349487, 1.908049464225769, 1.9040405750274658, 1.9001225233078003, 1.8962922096252441, 1.8925468921661377, 1.8888839483261108, 1.885300636291504, 1.8817945718765259, 1.8783634901046753, 1.875004768371582, 1.8717166185379028, 1.8684965372085571, 1.8653427362442017, 1.8622530698776245, 1.859225869178772, 1.8562592267990112, 1.8533512353897095, 1.850500464439392, 1.8477051258087158, 1.844963788986206, 1.842274785041809, 1.8396368026733398, 1.8370484113693237, 1.8345081806182861, 1.8320149183273315, 1.8295671939849854, 1.8271640539169312, 1.8248040676116943, 1.8224862813949585, 1.8202095031738281, 1.8179727792739868, 1.8157750368118286, 1.8136152029037476, 1.8114923238754272, 1.8094056844711304, 1.8073540925979614, 1.8053369522094727, 1.8033533096313477, 1.80140221118927, 1.7994831800460815, 1.7975951433181763, 1.795737624168396, 1.7939096689224243, 1.792110800743103, 1.7903401851654053, 1.7885972261428833, 1.7868813276290894, 1.7851917743682861, 1.7835280895233154, 1.7818896770477295, 1.7802759408950806, -1.778686285018921, -1.7802759408950806, -1.7818896770477295, -1.7835280895233154, -1.7851917743682861, -1.7868813276290894, -1.7885972261428833, -1.7903401851654053, -1.792110800743103, -1.7939096689224243, -1.795737624168396, -1.7975951433181763, -1.7994831800460815, -1.80140221118927, -1.8033533096313477, -1.8053369522094727, -1.8073540925979614, -1.8094056844711304, -1.8114923238754272, -1.8136152029037476, -1.8157750368118286, -1.8179727792739868, -1.8202095031738281, -1.8224862813949585, -1.8248040676116943, -1.8271640539169312, -1.8295671939849854, -1.8320149183273315, -1.8345081806182861, -1.8370484113693237, -1.8396368026733398, -1.842274785041809, -1.844963788986206, -1.8477051258087158, -1.850500464439392, -1.8533512353897095, -1.8562592267990112, -1.859225869178772, -1.8622530698776245, -1.8653427362442017, -1.8684965372085571, -1.8717166185379028, -1.875004768371582, -1.8783634901046753, -1.8817945718765259, -1.885300636291504, -1.8888839483261108, -1.8925468921661377, -1.8962922096252441, -1.9001225233078003, -1.9040405750274658, -1.908049464225769, -1.9121521711349487, -1.9163519144058228, -1.920651912689209, -1.925055742263794, -1.9295669794082642, -1.9341894388198853, -1.9389270544052124, -1.9437839984893799, -1.948764681816101, -1.9538733959197998, -1.9591150283813477, -1.9644945859909058, -1.9700170755386353, -1.975688099861145, -1.981513261795044, -1.9874986410140991, -1.993650197982788, -1.9999748468399048, -2.006479263305664, -2.0131704807281494, -2.0200564861297607, -2.0271449089050293, -2.0344438552856445, -2.0419626235961914, -2.0497100353240967, -2.0576956272125244, -2.065929651260376, -2.074422597885132, -2.0831856727600098, -2.092230796813965, -2.101569890975952, -2.111215829849243, -2.1211822032928467, -2.131483316421509, -2.1421337127685547, -2.153149366378784, -2.164546012878418, -2.1763410568237305, -2.188552141189575, -2.201197862625122, -2.2142975330352783, -2.2278711795806885, -2.2419402599334717, -2.256525754928589, -2.271650791168213, -2.2873380184173584, -2.3036115169525146, -2.320495367050171, -2.338014602661133, -2.356194496154785, -2.3750600814819336, -2.394637107849121, -2.414950370788574, -2.4360244274139404, -2.457883358001709, -2.4805495738983154, -2.5040438175201416, -2.5283854007720947, -2.5535900592803955, -2.5796711444854736, -2.606637477874756, -2.6344940662384033, -2.6632401943206787, -2.6928694248199463, -2.7233684062957764, -2.7547168731689453, -2.7868869304656982, -2.8198421001434326, -2.8535373210906982, -2.887918472290039, -2.9229238033294678, -2.958481788635254, -2.994514226913452, -3.030935525894165, -3.0676536560058594, -3.1045725345611572, 3.1415927410125732, 3.1031501293182373, 3.0648207664489746, 3.0267159938812256, 2.988943338394165, 2.9516043663024902, 2.9147937297821045, 2.8785979747772217, 2.8430936336517334, 2.8083484172821045, 2.774418830871582, 2.741352081298828, 2.7091848850250244, 2.677945137023926, 2.647651195526123, 2.618314266204834, 2.589937686920166, 2.562518358230591, 2.53604793548584, 2.5105133056640625, 2.4858970642089844, 2.462178945541382, 2.439335823059082, 2.4173426628112793, 2.3961732387542725, 2.3757998943328857, 2.356194496154785, 2.3373289108276367, 2.319174289703369, 2.3017029762268066, 2.2848870754241943, 2.2686991691589355, 2.25311279296875, 2.238102436065674, 2.2236430644989014, 2.2097103595733643, 2.1962814331054688, 2.1833338737487793, 2.170846462249756, 2.158798933029175, 2.1471714973449707, 2.1359457969665527, 2.125103712081909, 2.114628791809082, 2.1045045852661133, 2.0947155952453613, 2.085247755050659, 2.0760865211486816, 2.0672190189361572, 2.0586328506469727, 2.0503156185150146, 2.0422563552856445, 2.0344438552856445, 2.0268683433532715, 2.019519567489624, 2.0123887062072754, 2.0054664611816406, 1.9987448453903198, 1.9922155141830444, 1.9858710765838623, 1.9797041416168213, 1.973707914352417, 1.9678757190704346, 1.962201476097107, 1.9566789865493774, 1.9513026475906372, 1.9460670948028564, 1.9409672021865845, 1.935997724533081, 1.9311542510986328, 1.9264322519302368, 1.9218271970748901, 1.9173351526260376, 1.912952184677124, 1.9086744785308838, 1.9044984579086304, 1.9004207849502563, 1.8964378833770752, 1.8925468921661377, 1.888744592666626, 1.8850282430648804, 1.8813949823379517, 1.8778420686721802, 1.874367117881775, 1.8709675073623657, 1.8676409721374512, 1.8643853664398193, 1.8611983060836792, 1.8580777645111084, 1.8550218343734741, 1.852028489112854, 1.8490959405899048, 1.8462224006652832, 1.8434062004089355, 1.840645432472229, 1.837938904762268, 1.83528470993042, 1.8326815366744995, 1.8301280736923218, 1.8276227712631226, 1.8251644372940063, 1.8227516412734985, 1.8203833103179932, 1.8180581331253052, 1.8157750368118286, 1.813532829284668, 1.8113305568695068, 1.8091671466827393, 1.8070416450500488, 1.80495285987854, 1.8029001951217651, 1.8008824586868286, 1.7988989353179932, 1.796948790550232, 1.7950310707092285, 1.7931450605392456, 1.791290044784546, 1.789465308189392, 1.7876698970794678, 1.7859034538269043, 1.7841650247573853, 1.782454013824463, 1.7807698249816895, 1.7791118621826172, 1.7774795293807983, 1.7758722305297852, 1.7742893695831299, 1.7727304697036743, -1.7711949348449707, -1.7727304697036743, -1.7742893695831299, -1.7758722305297852, -1.7774795293807983, -1.7791118621826172, -1.7807698249816895, -1.782454013824463, -1.7841650247573853, -1.7859034538269043, -1.7876698970794678, -1.789465308189392, -1.791290044784546, -1.7931450605392456, -1.7950310707092285, -1.796948790550232, -1.7988989353179932, -1.8008824586868286, -1.8029001951217651, -1.80495285987854, -1.8070416450500488, -1.8091671466827393, -1.8113305568695068, -1.813532829284668, -1.8157750368118286, -1.8180581331253052, -1.8203833103179932, -1.8227516412734985, -1.8251644372940063, -1.8276227712631226, -1.8301280736923218, -1.8326815366744995, -1.83528470993042, -1.837938904762268, -1.840645432472229, -1.8434062004089355, -1.8462224006652832, -1.8490959405899048, -1.852028489112854, -1.8550218343734741, -1.8580777645111084, -1.8611983060836792, -1.8643853664398193, -1.8676409721374512, -1.8709675073623657, -1.874367117881775, -1.8778420686721802, -1.8813949823379517, -1.8850282430648804, -1.888744592666626, -1.8925468921661377, -1.8964378833770752, -1.9004207849502563, -1.9044984579086304, -1.9086744785308838, -1.912952184677124, -1.9173351526260376, -1.9218271970748901, -1.9264322519302368, -1.9311542510986328, -1.935997724533081, -1.9409672021865845, -1.9460670948028564, -1.9513026475906372, -1.9566789865493774, -1.962201476097107, -1.9678757190704346, -1.973707914352417, -1.9797041416168213, -1.9858710765838623, -1.9922155141830444, -1.9987448453903198, -2.0054664611816406, -2.0123887062072754, -2.019519567489624, -2.0268683433532715, -2.0344438552856445, -2.0422563552856445, -2.0503156185150146, -2.0586328506469727, -2.0672190189361572, -2.0760865211486816, -2.085247755050659, -2.0947155952453613, -2.1045045852661133, -2.114628791809082, -2.125103712081909, -2.1359457969665527, -2.1471714973449707, -2.158798933029175, -2.170846462249756, -2.1833338737487793, -2.1962814331054688, -2.2097103595733643, -2.2236430644989014, -2.238102436065674, -2.25311279296875, -2.2686991691589355, -2.2848870754241943, -2.3017029762268066, -2.319174289703369, -2.3373289108276367, -2.356194496154785, -2.3757998943328857, -2.3961732387542725, -2.4173426628112793, -2.439335823059082, -2.462178945541382, -2.4858970642089844, -2.5105133056640625, -2.53604793548584, -2.562518358230591, -2.589937686920166, -2.618314266204834, -2.647651195526123, -2.677945137023926, -2.7091848850250244, -2.741352081298828, -2.774418830871582, -2.8083484172821045, -2.8430936336517334, -2.8785979747772217, -2.9147937297821045, -2.9516043663024902, -2.988943338394165, -3.0267159938812256, -3.0648207664489746, -3.1031501293182373, 3.1415927410125732, 3.101613998413086, 3.061762571334839, 3.0221636295318604, 2.9829373359680176, 2.944197177886963, 2.9060475826263428, 2.868583917617798, 2.8318896293640137, 2.796036958694458, 2.7610862255096436, 2.727085828781128, 2.694072723388672, 2.6620733737945557, 2.6311042308807373, 2.601173162460327, 2.572279453277588, 2.5444159507751465, 2.5175695419311523, 2.4917221069335938, 2.4668517112731934, 2.4429328441619873, 2.4199378490448, 2.3978371620178223, 2.3765997886657715, 2.356194496154785, 2.3365890979766846, 2.317751884460449, 2.2996511459350586, 2.2822554111480713, 2.2655346393585205, 2.2494587898254395, 2.233999252319336, 2.219128370285034, 2.2048189640045166, 2.1910457611083984, 2.177783966064453, 2.1650099754333496, 2.1527013778686523, 2.140836715698242, 2.1293957233428955, 2.118358612060547, 2.1077070236206055, 2.097423553466797, 2.087491512298584, 2.077894926071167, 2.0686187744140625, 2.0596487522125244, 2.050971269607544, 2.042573928833008, 2.0344438552856445, 2.0265700817108154, 2.0189414024353027, 2.011547088623047, 2.004377841949463, 1.997423768043518, 1.9906762838363647, 1.9841266870498657, 1.9777671098709106, 1.9715898036956787, 1.9655874967575073, 1.959753155708313, 1.9540804624557495, 1.9485629796981812, 1.9431947469711304, 1.9379701614379883, 1.9328837394714355, 1.9279303550720215, 1.923105001449585, 1.918403148651123, 1.9138202667236328, 1.9093520641326904, 1.9049943685531616, 1.9007433652877808, 1.8965954780578613, 1.8925468921661377, 1.888594388961792, 1.8847345113754272, 1.8809643983840942, 1.8772809505462646, 1.8736811876296997, 1.8701626062393188, 1.8667223453521729, 1.8633581399917603, 1.860067367553711, 1.8568477630615234, 1.8536971807479858, 1.8506134748458862, 1.8475944995880127, 1.8446383476257324, 1.8417432308197021, 1.8389071226119995, 1.8361283540725708, 1.8334053754806519, 1.830736517906189, 1.8281199932098389, 1.825554609298706, 1.8230388164520264, 1.8205710649490356, 1.818150281906128, 1.8157750368118286, 1.8134440183639526, 1.8111560344696045, 1.8089101314544678, 1.8067049980163574, 1.8045395612716675, 1.802412748336792, 1.800323724746704, 1.7982712984085083, 1.7962546348571777, 1.7942728996276855, 1.7923251390457153, 1.7904103994369507, 1.7885280847549438, 1.7866771221160889, 1.7848570346832275, 1.7830668687820435, 1.7813059091567993, 1.7795735597610474, 1.7778689861297607, 1.7761917114257812, 1.7745410203933716, 1.772916316986084, 1.7713168859481812, 1.7697422504425049, 1.768191933631897, 1.7666652202606201, 1.7651616334915161, -1.7636806964874268, -1.7651616334915161, -1.7666652202606201, -1.768191933631897, -1.7697422504425049, -1.7713168859481812, -1.772916316986084, -1.7745410203933716, -1.7761917114257812, -1.7778689861297607, -1.7795735597610474, -1.7813059091567993, -1.7830668687820435, -1.7848570346832275, -1.7866771221160889, -1.7885280847549438, -1.7904103994369507, -1.7923251390457153, -1.7942728996276855, -1.7962546348571777, -1.7982712984085083, -1.800323724746704, -1.802412748336792, -1.8045395612716675, -1.8067049980163574, -1.8089101314544678, -1.8111560344696045, -1.8134440183639526, -1.8157750368118286, -1.818150281906128, -1.8205710649490356, -1.8230388164520264, -1.825554609298706, -1.8281199932098389, -1.830736517906189, -1.8334053754806519, -1.8361283540725708, -1.8389071226119995, -1.8417432308197021, -1.8446383476257324, -1.8475944995880127, -1.8506134748458862, -1.8536971807479858, -1.8568477630615234, -1.860067367553711, -1.8633581399917603, -1.8667223453521729, -1.8701626062393188, -1.8736811876296997, -1.8772809505462646, -1.8809643983840942, -1.8847345113754272, -1.888594388961792, -1.8925468921661377, -1.8965954780578613, -1.9007433652877808, -1.9049943685531616, -1.9093520641326904, -1.9138202667236328, -1.918403148651123, -1.923105001449585, -1.9279303550720215, -1.9328837394714355, -1.9379701614379883, -1.9431947469711304, -1.9485629796981812, -1.9540804624557495, -1.959753155708313, -1.9655874967575073, -1.9715898036956787, -1.9777671098709106, -1.9841266870498657, -1.9906762838363647, -1.997423768043518, -2.004377841949463, -2.011547088623047, -2.0189414024353027, -2.0265700817108154, -2.0344438552856445, -2.042573928833008, -2.050971269607544, -2.0596487522125244, -2.0686187744140625, -2.077894926071167, -2.087491512298584, -2.097423553466797, -2.1077070236206055, -2.118358612060547, -2.1293957233428955, -2.140836715698242, -2.1527013778686523, -2.1650099754333496, -2.177783966064453, -2.1910457611083984, -2.2048189640045166, -2.219128370285034, -2.233999252319336, -2.2494587898254395, -2.2655346393585205, -2.2822554111480713, -2.2996511459350586, -2.317751884460449, -2.3365890979766846, -2.356194496154785, -2.3765997886657715, -2.3978371620178223, -2.4199378490448, -2.4429328441619873, -2.4668517112731934, -2.4917221069335938, -2.5175695419311523, -2.5444159507751465, -2.572279453277588, -2.601173162460327, -2.6311042308807373, -2.6620733737945557, -2.694072723388672, -2.727085828781128, -2.7610862255096436, -2.796036958694458, -2.8318896293640137, -2.868583917617798, -2.9060475826263428, -2.944197177886963, -2.9829373359680176, -3.0221636295318604, -3.061762571334839, -3.101613998413086, 3.1415927410125732, 3.099950075149536, 3.0584514141082764, 3.017237663269043, 2.9764440059661865, 2.936197280883789, 2.8966140747070312, 2.8577985763549805, 2.8198421001434326, 2.7828218936920166, 2.7468016147613525, 2.7118303775787354, 2.677945137023926, 2.645169973373413, 2.613518238067627, 2.582993268966675, 2.5535900592803955, 2.5252957344055176, 2.498091459274292, 2.4719536304473877, 2.44685435295105, 2.422762632369995, 2.3996453285217285, 2.3774678707122803, 2.356194496154785, 2.335789203643799, 2.316215753555298, 2.297438621520996, 2.2794225215911865, 2.2621333599090576, 2.245537281036377, 2.229602336883545, 2.2142975330352783, 2.1995925903320312, 2.1854593753814697, 2.171869993209839, 2.158798933029175, 2.1462209224700928, 2.134112596511841, 2.1224513053894043, 2.111215829849243, 2.100385904312134, 2.089942455291748, 2.079867124557495, 2.070142984390259, 2.060753583908081, 2.0516836643218994, 2.0429182052612305, 2.0344438552856445, 2.026247501373291, 2.0183162689208984, 2.010638952255249, 2.003204107284546, 1.9960013628005981, 1.9890207052230835, 1.982252597808838, 1.975688099861145, 1.9693187475204468, 1.9631364345550537, 1.9571335315704346, 1.9513026475906372, 1.9456369876861572, 1.9401299953460693, 1.9347752332687378, 1.9295669794082642, 1.92449951171875, 1.919567346572876, 1.914765477180481, 1.9100888967514038, 1.9055331945419312, 1.9010937213897705, 1.8967663049697876, 1.8925468921661377, 1.8884316682815552, 1.884416937828064, 1.880499243736267, 1.8766752481460571, 1.872941493988037, 1.8692952394485474, 1.8657333850860596, 1.8622530698776245, 1.8588517904281616, 1.8555268049240112, 1.8522756099700928, 1.8490959405899048, 1.8459855318069458, 1.842942237854004, 1.8399637937545776, 1.8370484113693237, 1.8341939449310303, 1.8313987255096436, 1.8286608457565308, 1.8259787559509277, 1.8233505487442017, 1.8207749128341675, 1.8182501792907715, 1.8157750368118286, 1.8133478164672852, 1.8109673261642456, 1.808632254600525, 1.806341290473938, 1.8040932416915894, 1.801887035369873, 1.799721360206604, 1.7975951433181763, 1.795507550239563, 1.793457269668579, 1.7914434671401978, 1.789465308189392, 1.7875216007232666, 1.7856117486953735, 1.783734679222107, 1.7818896770477295, 1.7800759077072144, 1.7782925367355347, 1.7765389680862427, 1.774814248085022, 1.7731178998947144, 1.7714492082595825, 1.7698073387145996, 1.768191933631897, 1.7666020393371582, 1.7650372982025146, 1.7634971141815186, 1.7619807720184326, 1.7604879140853882, 1.759017825126648, 1.7575701475143433, -1.7561442852020264, -1.7575701475143433, -1.759017825126648, -1.7604879140853882, -1.7619807720184326, -1.7634971141815186, -1.7650372982025146, -1.7666020393371582, -1.768191933631897, -1.7698073387145996, -1.7714492082595825, -1.7731178998947144, -1.774814248085022, -1.7765389680862427, -1.7782925367355347, -1.7800759077072144, -1.7818896770477295, -1.783734679222107, -1.7856117486953735, -1.7875216007232666, -1.789465308189392, -1.7914434671401978, -1.793457269668579, -1.795507550239563, -1.7975951433181763, -1.799721360206604, -1.801887035369873, -1.8040932416915894, -1.806341290473938, -1.808632254600525, -1.8109673261642456, -1.8133478164672852, -1.8157750368118286, -1.8182501792907715, -1.8207749128341675, -1.8233505487442017, -1.8259787559509277, -1.8286608457565308, -1.8313987255096436, -1.8341939449310303, -1.8370484113693237, -1.8399637937545776, -1.842942237854004, -1.8459855318069458, -1.8490959405899048, -1.8522756099700928, -1.8555268049240112, -1.8588517904281616, -1.8622530698776245, -1.8657333850860596, -1.8692952394485474, -1.872941493988037, -1.8766752481460571, -1.880499243736267, -1.884416937828064, -1.8884316682815552, -1.8925468921661377, -1.8967663049697876, -1.9010937213897705, -1.9055331945419312, -1.9100888967514038, -1.914765477180481, -1.919567346572876, -1.92449951171875, -1.9295669794082642, -1.9347752332687378, -1.9401299953460693, -1.9456369876861572, -1.9513026475906372, -1.9571335315704346, -1.9631364345550537, -1.9693187475204468, -1.975688099861145, -1.982252597808838, -1.9890207052230835, -1.9960013628005981, -2.003204107284546, -2.010638952255249, -2.0183162689208984, -2.026247501373291, -2.0344438552856445, -2.0429182052612305, -2.0516836643218994, -2.060753583908081, -2.070142984390259, -2.079867124557495, -2.089942455291748, -2.100385904312134, -2.111215829849243, -2.1224513053894043, -2.134112596511841, -2.1462209224700928, -2.158798933029175, -2.171869993209839, -2.1854593753814697, -2.1995925903320312, -2.2142975330352783, -2.229602336883545, -2.245537281036377, -2.2621333599090576, -2.2794225215911865, -2.297438621520996, -2.316215753555298, -2.335789203643799, -2.356194496154785, -2.3774678707122803, -2.3996453285217285, -2.422762632369995, -2.44685435295105, -2.4719536304473877, -2.498091459274292, -2.5252957344055176, -2.5535900592803955, -2.582993268966675, -2.613518238067627, -2.645169973373413, -2.677945137023926, -2.7118303775787354, -2.7468016147613525, -2.7828218936920166, -2.8198421001434326, -2.8577985763549805, -2.8966140747070312, -2.936197280883789, -2.9764440059661865, -3.017237663269043, -3.0584514141082764, -3.099950075149536, 3.1415927410125732, 3.098141670227051, 3.054854393005371, 3.011890172958374, 2.9694018363952637, 2.9275319576263428, 2.8864102363586426, 2.846151828765869, 2.8068559169769287, 2.7686049938201904, 2.7314653396606445, 2.6954870223999023, 2.660705327987671, 2.627141237258911, 2.594803810119629, 2.563690662384033, 2.5337905883789062, 2.50508451461792, 2.477546453475952, 2.451146125793457, 2.425848960876465, 2.4016177654266357, 2.378412961959839, 2.356194496154785, 2.33492112159729, 2.314551830291748, 2.295046329498291, 2.27636456489563, 2.258467674255371, 2.2413179874420166, 2.224879026412964, 2.209116220474243, 2.193995714187622, 2.179485559463501, 2.165555477142334, 2.15217661857605, 2.1393208503723145, 2.126962661743164, 2.115076780319214, 2.10364031791687, 2.092630624771118, 2.082026958465576, 2.071809768676758, 2.061959981918335, 2.052459955215454, 2.0432932376861572, 2.0344438552856445, 2.0258970260620117, 2.017638683319092, 2.009655714035034, 2.0019350051879883, 1.9944652318954468, 1.9872349500656128, 1.9802335500717163, 1.973451018333435, 1.966877818107605, 1.9605048894882202, 1.9543238878250122, 1.9483264684677124, 1.9425052404403687, 1.9368528127670288, 1.931362271308899, 1.9260271787643433, 1.9208412170410156, 1.915798544883728, 1.910893440246582, 1.9061206579208374, 1.901475191116333, 1.8969521522521973, 1.8925468921661377, 1.8882551193237305, 1.8840725421905518, 1.8799952268600464, 1.8760194778442383, 1.8721415996551514, 1.8683580160140991, 1.8646656274795532, 1.8610612154006958, 1.8575416803359985, 1.8541042804718018, 1.8507461547851562, 1.847464680671692, 1.8442573547363281, 1.8411216735839844, 1.8380553722381592, 1.8350563049316406, 1.8321223258972168, 1.8292512893676758, 1.8264412879943848, 1.823690414428711, 1.820996880531311, 1.8183590173721313, 1.8157750368118286, 1.8132433891296387, 1.8107625246047974, 1.80833101272583, 1.8059473037719727, 1.80361008644104, 1.8013181686401367, 1.799070119857788, 1.7968647480010986, 1.7947008609771729, 1.7925772666931152, 1.7904930114746094, 1.7884469032287598, 1.78643798828125, 1.7844653129577637, 1.7825278043746948, 1.7806246280670166, 1.7787548303604126, 1.7769176959991455, 1.7751121520996094, 1.7733376026153564, 1.7715932130813599, 1.7698782682418823, 1.768191933631897, 1.7665334939956665, 1.7649024724960327, 1.7632979154586792, 1.7617194652557373, 1.7601664066314697, 1.7586380243301392, 1.7571338415145874, 1.7556533813476562, 1.7541959285736084, 1.7527610063552856, 1.7513481378555298, 1.7499568462371826, -1.7485865354537964, -1.7499568462371826, -1.7513481378555298, -1.7527610063552856, -1.7541959285736084, -1.7556533813476562, -1.7571338415145874, -1.7586380243301392, -1.7601664066314697, -1.7617194652557373, -1.7632979154586792, -1.7649024724960327, -1.7665334939956665, -1.768191933631897, -1.7698782682418823, -1.7715932130813599, -1.7733376026153564, -1.7751121520996094, -1.7769176959991455, -1.7787548303604126, -1.7806246280670166, -1.7825278043746948, -1.7844653129577637, -1.78643798828125, -1.7884469032287598, -1.7904930114746094, -1.7925772666931152, -1.7947008609771729, -1.7968647480010986, -1.799070119857788, -1.8013181686401367, -1.80361008644104, -1.8059473037719727, -1.80833101272583, -1.8107625246047974, -1.8132433891296387, -1.8157750368118286, -1.8183590173721313, -1.820996880531311, -1.823690414428711, -1.8264412879943848, -1.8292512893676758, -1.8321223258972168, -1.8350563049316406, -1.8380553722381592, -1.8411216735839844, -1.8442573547363281, -1.847464680671692, -1.8507461547851562, -1.8541042804718018, -1.8575416803359985, -1.8610612154006958, -1.8646656274795532, -1.8683580160140991, -1.8721415996551514, -1.8760194778442383, -1.8799952268600464, -1.8840725421905518, -1.8882551193237305, -1.8925468921661377, -1.8969521522521973, -1.901475191116333, -1.9061206579208374, -1.910893440246582, -1.915798544883728, -1.9208412170410156, -1.9260271787643433, -1.931362271308899, -1.9368528127670288, -1.9425052404403687, -1.9483264684677124, -1.9543238878250122, -1.9605048894882202, -1.966877818107605, -1.973451018333435, -1.9802335500717163, -1.9872349500656128, -1.9944652318954468, -2.0019350051879883, -2.009655714035034, -2.017638683319092, -2.0258970260620117, -2.0344438552856445, -2.0432932376861572, -2.052459955215454, -2.061959981918335, -2.071809768676758, -2.082026958465576, -2.092630624771118, -2.10364031791687, -2.115076780319214, -2.126962661743164, -2.1393208503723145, -2.15217661857605, -2.165555477142334, -2.179485559463501, -2.193995714187622, -2.209116220474243, -2.224879026412964, -2.2413179874420166, -2.258467674255371, -2.27636456489563, -2.295046329498291, -2.314551830291748, -2.33492112159729, -2.356194496154785, -2.378412961959839, -2.4016177654266357, -2.425848960876465, -2.451146125793457, -2.477546453475952, -2.50508451461792, -2.5337905883789062, -2.563690662384033, -2.594803810119629, -2.627141237258911, -2.660705327987671, -2.6954870223999023, -2.7314653396606445, -2.7686049938201904, -2.8068559169769287, -2.846151828765869, -2.8864102363586426, -2.9275319576263428, -2.9694018363952637, -3.011890172958374, -3.054854393005371, -3.098141670227051, 3.1415927410125732, 3.0961694717407227, 3.0509328842163086, 3.0060648918151855, 2.9617390632629395, 2.9181160926818848, 2.875340700149536, 2.8335399627685547, 2.7928216457366943, 2.7532739639282227, 2.7149651050567627, 2.677945137023926, 2.6422460079193115, 2.607884407043457, 2.5748634338378906, 2.5431737899780273, 2.512796401977539, 2.483704090118408, 2.4558632373809814, 2.4292349815368652, 2.403777599334717, 2.379446029663086, 2.356194496154785, 2.3339760303497314, 2.312743663787842, 2.2924511432647705, 2.2730531692504883, 2.2545056343078613, 2.2367656230926514, 2.219791889190674, 2.203545093536377, 2.187987804412842, 2.173083782196045, 2.158798933029175, 2.1451010704040527, 2.1319596767425537, 2.1193456649780273, 2.107231855392456, 2.0955920219421387, 2.084402322769165, 2.0736396312713623, 2.063282012939453, 2.053309679031372, 2.0437028408050537, 2.0344438552856445, 2.025515556335449, 2.016901969909668, 2.008587598800659, 2.000558614730835, 1.992801308631897, 1.9853031635284424, 1.9780521392822266, 1.9710370302200317, 1.9642469882965088, 1.9576719999313354, 1.9513026475906372, 1.9451299905776978, 1.9391452074050903, 1.9333405494689941, 1.9277082681655884, 1.9222410917282104, 1.9169323444366455, 1.9117752313613892, 1.9067639112472534, 1.9018924236297607, 1.8971551656723022, 1.8925468921661377, 1.888062596321106, 1.883697509765625, 1.8794472217559814, 1.8753072023391724, 1.8712735176086426, 1.8673421144485474, 1.8635094165802002, 1.859771728515625, 1.8561257123947144, 1.8525681495666504, 1.8490959405899048, 1.8457062244415283, 1.8423959016799927, 1.8391625881195068, 1.8360034227371216, 1.8329161405563354, 1.8298983573913574, 1.8269476890563965, 1.8240621089935303, 1.8212394714355469, 1.8184776306152344, 1.8157750368118286, 1.8131295442581177, 1.8105394840240479, 1.8080030679702759, 1.8055189847946167, 1.8030853271484375, 1.8007007837295532, 1.7983638048171997, 1.796073079109192, 1.7938272953033447, 1.7916251420974731, 1.789465308189392, 1.787346601486206, 1.7852680683135986, 1.7832283973693848, 1.7812265157699585, 1.779261589050293, 1.7773324251174927, 1.7754381895065308, 1.7735778093338013, 1.771750569343567, 1.7699555158615112, 1.768191933631897, 1.7664587497711182, 1.7647554874420166, 1.7630811929702759, 1.7614352703094482, 1.7598168849945068, 1.758225440979004, 1.7566602230072021, 1.7551207542419434, 1.7536062002182007, 1.752116084098816, 1.7506498098373413, 1.749206781387329, 1.747786521911621, 1.7463884353637695, 1.7450121641159058, 1.7436569929122925, 1.7423224449157715, -1.7410082817077637, -1.7423224449157715, -1.7436569929122925, -1.7450121641159058, -1.7463884353637695, -1.747786521911621, -1.749206781387329, -1.7506498098373413, -1.752116084098816, -1.7536062002182007, -1.7551207542419434, -1.7566602230072021, -1.758225440979004, -1.7598168849945068, -1.7614352703094482, -1.7630811929702759, -1.7647554874420166, -1.7664587497711182, -1.768191933631897, -1.7699555158615112, -1.771750569343567, -1.7735778093338013, -1.7754381895065308, -1.7773324251174927, -1.779261589050293, -1.7812265157699585, -1.7832283973693848, -1.7852680683135986, -1.787346601486206, -1.789465308189392, -1.7916251420974731, -1.7938272953033447, -1.796073079109192, -1.7983638048171997, -1.8007007837295532, -1.8030853271484375, -1.8055189847946167, -1.8080030679702759, -1.8105394840240479, -1.8131295442581177, -1.8157750368118286, -1.8184776306152344, -1.8212394714355469, -1.8240621089935303, -1.8269476890563965, -1.8298983573913574, -1.8329161405563354, -1.8360034227371216, -1.8391625881195068, -1.8423959016799927, -1.8457062244415283, -1.8490959405899048, -1.8525681495666504, -1.8561257123947144, -1.859771728515625, -1.8635094165802002, -1.8673421144485474, -1.8712735176086426, -1.8753072023391724, -1.8794472217559814, -1.883697509765625, -1.888062596321106, -1.8925468921661377, -1.8971551656723022, -1.9018924236297607, -1.9067639112472534, -1.9117752313613892, -1.9169323444366455, -1.9222410917282104, -1.9277082681655884, -1.9333405494689941, -1.9391452074050903, -1.9451299905776978, -1.9513026475906372, -1.9576719999313354, -1.9642469882965088, -1.9710370302200317, -1.9780521392822266, -1.9853031635284424, -1.992801308631897, -2.000558614730835, -2.008587598800659, -2.016901969909668, -2.025515556335449, -2.0344438552856445, -2.0437028408050537, -2.053309679031372, -2.063282012939453, -2.0736396312713623, -2.084402322769165, -2.0955920219421387, -2.107231855392456, -2.1193456649780273, -2.1319596767425537, -2.1451010704040527, -2.158798933029175, -2.173083782196045, -2.187987804412842, -2.203545093536377, -2.219791889190674, -2.2367656230926514, -2.2545056343078613, -2.2730531692504883, -2.2924511432647705, -2.312743663787842, -2.3339760303497314, -2.356194496154785, -2.379446029663086, -2.403777599334717, -2.4292349815368652, -2.4558632373809814, -2.483704090118408, -2.512796401977539, -2.5431737899780273, -2.5748634338378906, -2.607884407043457, -2.6422460079193115, -2.677945137023926, -2.7149651050567627, -2.7532739639282227, -2.7928216457366943, -2.8335399627685547, -2.875340700149536, -2.9181160926818848, -2.9617390632629395, -3.0060648918151855, -3.0509328842163086, -3.0961694717407227, 3.1415927410125732, 3.0940096378326416, 3.0466408729553223, 2.9996955394744873, 2.953371047973633, 2.9078495502471924, 2.863292932510376, 2.8198421001434326, 2.777613639831543, 2.7367007732391357, 2.6971733570098877, 2.6590793132781982, 2.6224465370178223, 2.587285041809082, 2.5535900592803955, 2.521343231201172, 2.490515947341919, 2.461071491241455, 2.432966470718384, 2.4061529636383057, 2.380579948425293, 2.356194496154785, 2.3329429626464844, 2.3107712268829346, 2.289626359939575, 2.269456148147583, 2.2502100467681885, 2.231839418411255, 2.2142975330352783, 2.1975393295288086, 2.1815223693847656, 2.166206121444702, 2.151552677154541, 2.1375255584716797, 2.1240906715393066, 2.111215829849243, 2.0988707542419434, 2.087027072906494, 2.075657606124878, 2.0647377967834473, 2.054243326187134, 2.04415225982666, 2.0344438552856445, 2.0250983238220215, 2.0160973072052, 2.0074234008789062, 1.9990605115890503, 1.9909930229187012, 1.9832067489624023, 1.975688099861145, 1.9684243202209473, 1.9614033699035645, 1.9546139240264893, 1.9480453729629517, 1.9416875839233398, 1.9355311393737793, 1.9295669794082642, 1.9237867593765259, 1.9181822538375854, 1.9127461910247803, 1.9074711799621582, 1.9023505449295044, 1.8973777294158936, 1.8925468921661377, 1.8878520727157593, 1.8832879066467285, 1.8788491487503052, 1.8745307922363281, 1.8703283071517944, 1.8662371635437012, 1.8622530698776245, 1.8583722114562988, 1.8545904159545898, 1.8509043455123901, 1.8473103046417236, 1.8438050746917725, 1.8403854370117188, 1.8370484113693237, 1.8337910175323486, 1.830610752105713, 1.8275046348571777, 1.8244704008102417, 1.8215055465698242, 1.8186078071594238, 1.8157750368118286, 1.813004970550537, 1.810295581817627, 1.8076450824737549, 1.805051565170288, 1.8025131225585938, 1.8000282049179077, 1.7975951433181763, 1.7952123880386353, 1.792878270149231, 1.7905913591384888, 1.7883504629135132, 1.78615403175354, 1.7840008735656738, 1.7818896770477295, 1.7798192501068115, 1.777788519859314, 1.7757962942123413, 1.7738415002822876, 1.7719231843948364, 1.7700402736663818, 1.768191933631897, 1.7663769721984863, 1.7645947933197021, 1.7628443241119385, 1.761124849319458, 1.7594355344772339, 1.7577755451202393, 1.7561442852020264, 1.7545408010482788, 1.7529646158218384, 1.7514148950576782, 1.7498910427093506, 1.7483924627304077, 1.7469185590744019, 1.7454684972763062, 1.7440420389175415, 1.742638349533081, 1.7412570714950562, 1.739897608757019, 1.738559365272522, 1.7372419834136963, 1.7359449863433838, 1.7346678972244263, -1.733410120010376, -1.7346678972244263, -1.7359449863433838, -1.7372419834136963, -1.738559365272522, -1.739897608757019, -1.7412570714950562, -1.742638349533081, -1.7440420389175415, -1.7454684972763062, -1.7469185590744019, -1.7483924627304077, -1.7498910427093506, -1.7514148950576782, -1.7529646158218384, -1.7545408010482788, -1.7561442852020264, -1.7577755451202393, -1.7594355344772339, -1.761124849319458, -1.7628443241119385, -1.7645947933197021, -1.7663769721984863, -1.768191933631897, -1.7700402736663818, -1.7719231843948364, -1.7738415002822876, -1.7757962942123413, -1.777788519859314, -1.7798192501068115, -1.7818896770477295, -1.7840008735656738, -1.78615403175354, -1.7883504629135132, -1.7905913591384888, -1.792878270149231, -1.7952123880386353, -1.7975951433181763, -1.8000282049179077, -1.8025131225585938, -1.805051565170288, -1.8076450824737549, -1.810295581817627, -1.813004970550537, -1.8157750368118286, -1.8186078071594238, -1.8215055465698242, -1.8244704008102417, -1.8275046348571777, -1.830610752105713, -1.8337910175323486, -1.8370484113693237, -1.8403854370117188, -1.8438050746917725, -1.8473103046417236, -1.8509043455123901, -1.8545904159545898, -1.8583722114562988, -1.8622530698776245, -1.8662371635437012, -1.8703283071517944, -1.8745307922363281, -1.8788491487503052, -1.8832879066467285, -1.8878520727157593, -1.8925468921661377, -1.8973777294158936, -1.9023505449295044, -1.9074711799621582, -1.9127461910247803, -1.9181822538375854, -1.9237867593765259, -1.9295669794082642, -1.9355311393737793, -1.9416875839233398, -1.9480453729629517, -1.9546139240264893, -1.9614033699035645, -1.9684243202209473, -1.975688099861145, -1.9832067489624023, -1.9909930229187012, -1.9990605115890503, -2.0074234008789062, -2.0160973072052, -2.0250983238220215, -2.0344438552856445, -2.04415225982666, -2.054243326187134, -2.0647377967834473, -2.075657606124878, -2.087027072906494, -2.0988707542419434, -2.111215829849243, -2.1240906715393066, -2.1375255584716797, -2.151552677154541, -2.166206121444702, -2.1815223693847656, -2.1975393295288086, -2.2142975330352783, -2.231839418411255, -2.2502100467681885, -2.269456148147583, -2.289626359939575, -2.3107712268829346, -2.3329429626464844, -2.356194496154785, -2.380579948425293, -2.4061529636383057, -2.432966470718384, -2.461071491241455, -2.490515947341919, -2.521343231201172, -2.5535900592803955, -2.587285041809082, -2.6224465370178223, -2.6590793132781982, -2.6971733570098877, -2.7367007732391357, -2.777613639831543, -2.8198421001434326, -2.863292932510376, -2.9078495502471924, -2.953371047973633, -2.9996955394744873, -3.0466408729553223, -3.0940096378326416, 3.1415927410125732, 3.0916342735290527, 3.041923999786377, 2.9927027225494385, 2.944197177886963, 2.8966140747070312, 2.8501358032226562, 2.804917812347412, 2.7610862255096436, 2.7187387943267822, 2.677945137023926, 2.638749361038208, 2.601173162460327, 2.5652174949645996, 2.5308666229248047, 2.498091459274292, 2.4668517112731934, 2.437098503112793, 2.4087774753570557, 2.3818299770355225, 2.356194496154785, 2.3318090438842773, 2.3086113929748535, 2.2865400314331055, 2.2655346393585205, 2.245537281036377, 2.226491928100586, 2.2083451747894287, 2.1910457611083984, 2.1745457649230957, 2.158798933029175, 2.1437625885009766, 2.1293957233428955, 2.1156601905822754, 2.10252046585083, 2.089942455291748, 2.077894926071167, 2.066348075866699, 2.055274248123169, 2.044647693634033, 2.0344438552856445, 2.0246403217315674, 2.0152156352996826, 2.0061495304107666, 1.997423768043518, 1.9890207052230835, 1.9809236526489258, 1.973117470741272, 1.9655874967575073, 1.958320140838623, 1.9513026475906372, 1.9445230960845947, 1.9379701614379883, 1.9316331148147583, 1.9255019426345825, 1.919567346572876, 1.9138202667236328, 1.9082523584365845, 1.9028557538986206, 1.8976229429244995, 1.8925468921661377, 1.8876208066940308, 1.882838487625122, 1.8781938552856445, 1.8736811876296997, 1.8692952394485474, 1.8650308847427368, 1.8608832359313965, 1.8568477630615234, 1.8529200553894043, 1.8490959405899048, 1.8453716039657593, 1.8417432308197021, 1.8382071256637573, 1.834760069847107, 1.8313987255096436, 1.8281199932098389, 1.8249211311340332, 1.8217990398406982, 1.8187512159347534, 1.8157750368118286, 1.8128679990768433, 1.8100279569625854, 1.8072525262832642, 1.8045395612716675, 1.801887035369873, 1.7992929220199585, 1.7967555522918701, 1.7942728996276855, 1.7918434143066406, 1.789465308189392, 1.7871370315551758, 1.7848570346832275, 1.7826238870620728, 1.7804361581802368, 1.7782925367355347, 1.7761917114257812, 1.7741323709487915, 1.7721134424209595, 1.7701336145401, 1.768191933631897, 1.766287088394165, 1.764418363571167, 1.7625844478607178, 1.76078462600708, 1.759017825126648, 1.7572832107543945, 1.755579948425293, 1.7539070844650269, 1.7522640228271484, 1.7506498098373413, 1.7490637302398682, 1.7475051879882812, 1.7459733486175537, 1.7444674968719482, 1.7429871559143066, 1.741531491279602, 1.7401001453399658, 1.738692283630371, 1.7373074293136597, 1.7359449863433838, 1.7346044778823853, 1.7332854270935059, 1.7319872379302979, 1.730709433555603, 1.7294515371322632, 1.7282131910324097, 1.7269937992095947, -1.7257931232452393, -1.7269937992095947, -1.7282131910324097, -1.7294515371322632, -1.730709433555603, -1.7319872379302979, -1.7332854270935059, -1.7346044778823853, -1.7359449863433838, -1.7373074293136597, -1.738692283630371, -1.7401001453399658, -1.741531491279602, -1.7429871559143066, -1.7444674968719482, -1.7459733486175537, -1.7475051879882812, -1.7490637302398682, -1.7506498098373413, -1.7522640228271484, -1.7539070844650269, -1.755579948425293, -1.7572832107543945, -1.759017825126648, -1.76078462600708, -1.7625844478607178, -1.764418363571167, -1.766287088394165, -1.768191933631897, -1.7701336145401, -1.7721134424209595, -1.7741323709487915, -1.7761917114257812, -1.7782925367355347, -1.7804361581802368, -1.7826238870620728, -1.7848570346832275, -1.7871370315551758, -1.789465308189392, -1.7918434143066406, -1.7942728996276855, -1.7967555522918701, -1.7992929220199585, -1.801887035369873, -1.8045395612716675, -1.8072525262832642, -1.8100279569625854, -1.8128679990768433, -1.8157750368118286, -1.8187512159347534, -1.8217990398406982, -1.8249211311340332, -1.8281199932098389, -1.8313987255096436, -1.834760069847107, -1.8382071256637573, -1.8417432308197021, -1.8453716039657593, -1.8490959405899048, -1.8529200553894043, -1.8568477630615234, -1.8608832359313965, -1.8650308847427368, -1.8692952394485474, -1.8736811876296997, -1.8781938552856445, -1.882838487625122, -1.8876208066940308, -1.8925468921661377, -1.8976229429244995, -1.9028557538986206, -1.9082523584365845, -1.9138202667236328, -1.919567346572876, -1.9255019426345825, -1.9316331148147583, -1.9379701614379883, -1.9445230960845947, -1.9513026475906372, -1.958320140838623, -1.9655874967575073, -1.973117470741272, -1.9809236526489258, -1.9890207052230835, -1.997423768043518, -2.0061495304107666, -2.0152156352996826, -2.0246403217315674, -2.0344438552856445, -2.044647693634033, -2.055274248123169, -2.066348075866699, -2.077894926071167, -2.089942455291748, -2.10252046585083, -2.1156601905822754, -2.1293957233428955, -2.1437625885009766, -2.158798933029175, -2.1745457649230957, -2.1910457611083984, -2.2083451747894287, -2.226491928100586, -2.245537281036377, -2.2655346393585205, -2.2865400314331055, -2.3086113929748535, -2.3318090438842773, -2.356194496154785, -2.3818299770355225, -2.4087774753570557, -2.437098503112793, -2.4668517112731934, -2.498091459274292, -2.5308666229248047, -2.5652174949645996, -2.601173162460327, -2.638749361038208, -2.677945137023926, -2.7187387943267822, -2.7610862255096436, -2.804917812347412, -2.8501358032226562, -2.8966140747070312, -2.944197177886963, -2.9927027225494385, -3.041923999786377, -3.0916342735290527, 3.1415927410125732, 3.0890095233917236, 3.0367157459259033, 2.9849908351898193, 2.934096336364746, 2.8842689990997314, 2.8357138633728027, 2.788602352142334, 2.743070125579834, 2.699218511581421, 2.6571147441864014, 2.6167969703674316, 2.5782763957977295, 2.5415425300598145, 2.506565809249878, 2.4733033180236816, 2.441699743270874, 2.4116930961608887, 2.3832149505615234, 2.356194496154785, 2.330559015274048, 2.3062360286712646, 2.283154010772705, 2.2612428665161133, 2.2404353618621826, 2.2206668853759766, 2.201875686645508, 2.1840035915374756, 2.1669955253601074, 2.150799036026001, 2.1353657245635986, 2.120649576187134, 2.106607675552368, 2.0931997299194336, 2.0803885459899902, 2.06813907623291, 2.0564184188842773, 2.045196294784546, 2.0344438552856445, 2.024135112762451, 2.014244556427002, 2.0047497749328613, 1.9956284761428833, 1.9868608713150024, 1.9784278869628906, 1.9703118801116943, 1.962496280670166, 1.9549657106399536, 1.947705626487732, 1.9407024383544922, 1.9339433908462524, 1.927416443824768, 1.9211105108261108, 1.9150149822235107, 1.909119963645935, 1.9034160375595093, 1.8978943824768066, 1.8925468921661377, 1.8873655796051025, 1.8823431730270386, 1.8774726390838623, 1.872747540473938, 1.8681614398956299, 1.863708734512329, 1.8593837022781372, 1.855181097984314, 1.8510960340499878, 1.847123622894287, 1.8432594537734985, 1.8394993543624878, 1.8358391523361206, 1.832275152206421, 1.828803539276123, 1.8254209756851196, 1.8221241235733032, 1.818909764289856, 1.8157750368118286, 1.8127168416976929, 1.8097327947616577, 1.806820034980774, 1.8039761781692505, 1.8011987209320068, 1.7984856367111206, 1.7958346605300903, 1.793243646621704, 1.7907105684280396, 1.788233757019043, 1.785811185836792, 1.7834413051605225, 1.7811222076416016, 1.7788524627685547, 1.7766305208206177, 1.7744548320770264, 1.7723240852355957, 1.770236849784851, 1.768191933631897, 1.7661879062652588, 1.7642236948013306, 1.7622979879379272, 1.760409951210022, 1.7585582733154297, 1.756742000579834, 1.7549601793289185, 1.7532117366790771, 1.7514958381652832, 1.7498116493225098, 1.7481580972671509, 1.7465345859527588, 1.7449402809143066, 1.743374228477478, 1.7418359518051147, 1.7403244972229004, 1.7388393878936768, 1.7373796701431274, 1.7359449863433838, 1.7345346212387085, 1.7331478595733643, 1.7317841053009033, 1.730443000793457, 1.729123830795288, 1.7278261184692383, 1.7265492677688599, 1.7252929210662842, 1.7240564823150635, 1.722839593887329, 1.7216416597366333, 1.7204623222351074, 1.7193012237548828, -1.7181577682495117, -1.7193012237548828, -1.7204623222351074, -1.7216416597366333, -1.722839593887329, -1.7240564823150635, -1.7252929210662842, -1.7265492677688599, -1.7278261184692383, -1.729123830795288, -1.730443000793457, -1.7317841053009033, -1.7331478595733643, -1.7345346212387085, -1.7359449863433838, -1.7373796701431274, -1.7388393878936768, -1.7403244972229004, -1.7418359518051147, -1.743374228477478, -1.7449402809143066, -1.7465345859527588, -1.7481580972671509, -1.7498116493225098, -1.7514958381652832, -1.7532117366790771, -1.7549601793289185, -1.756742000579834, -1.7585582733154297, -1.760409951210022, -1.7622979879379272, -1.7642236948013306, -1.7661879062652588, -1.768191933631897, -1.770236849784851, -1.7723240852355957, -1.7744548320770264, -1.7766305208206177, -1.7788524627685547, -1.7811222076416016, -1.7834413051605225, -1.785811185836792, -1.788233757019043, -1.7907105684280396, -1.793243646621704, -1.7958346605300903, -1.7984856367111206, -1.8011987209320068, -1.8039761781692505, -1.806820034980774, -1.8097327947616577, -1.8127168416976929, -1.8157750368118286, -1.818909764289856, -1.8221241235733032, -1.8254209756851196, -1.828803539276123, -1.832275152206421, -1.8358391523361206, -1.8394993543624878, -1.8432594537734985, -1.847123622894287, -1.8510960340499878, -1.855181097984314, -1.8593837022781372, -1.863708734512329, -1.8681614398956299, -1.872747540473938, -1.8774726390838623, -1.8823431730270386, -1.8873655796051025, -1.8925468921661377, -1.8978943824768066, -1.9034160375595093, -1.909119963645935, -1.9150149822235107, -1.9211105108261108, -1.927416443824768, -1.9339433908462524, -1.9407024383544922, -1.947705626487732, -1.9549657106399536, -1.962496280670166, -1.9703118801116943, -1.9784278869628906, -1.9868608713150024, -1.9956284761428833, -2.0047497749328613, -2.014244556427002, -2.024135112762451, -2.0344438552856445, -2.045196294784546, -2.0564184188842773, -2.06813907623291, -2.0803885459899902, -2.0931997299194336, -2.106607675552368, -2.120649576187134, -2.1353657245635986, -2.150799036026001, -2.1669955253601074, -2.1840035915374756, -2.201875686645508, -2.2206668853759766, -2.2404353618621826, -2.2612428665161133, -2.283154010772705, -2.3062360286712646, -2.330559015274048, -2.356194496154785, -2.3832149505615234, -2.4116930961608887, -2.441699743270874, -2.4733033180236816, -2.506565809249878, -2.5415425300598145, -2.5782763957977295, -2.6167969703674316, -2.6571147441864014, -2.699218511581421, -2.743070125579834, -2.788602352142334, -2.8357138633728027, -2.8842689990997314, -2.934096336364746, -2.9849908351898193, -3.0367157459259033, -3.0890095233917236, 3.1415927410125732, 3.0860941410064697, 3.030935525894165, 2.9764440059661865, 2.9229238033294678, 2.870645761489868, 2.8198421001434326, 2.7707014083862305, 2.7233684062957764, 2.677945137023926, 2.6344940662384033, 2.593043327331543, 2.5535900592803955, 2.5161075592041016, 2.4805495738983154, 2.44685435295105, 2.414950370788574, 2.384758234024048, 2.356194496154785, 2.329174041748047, 2.3036115169525146, 2.2794225215911865, 2.256525754928589, 2.234842538833618, 2.2142975330352783, 2.194819450378418, 2.1763410568237305, 2.158798933029175, 2.1421337127685547, 2.1262900829315186, 2.111215829849243, 2.09686279296875, 2.0831856727600098, 2.070142984390259, 2.0576956272125244, 2.045807123184204, 2.0344438552856445, 2.0235748291015625, 2.0131704807281494, 2.003204107284546, 1.993650197982788, 1.9844855070114136, 1.975688099861145, 1.9672375917434692, 1.9591150283813477, 1.9513026475906372, 1.9437839984893799, 1.936543583869934, 1.9295669794082642, 1.9228405952453613, 1.9163519144058228, 1.9100888967514038, 1.9040405750274658, 1.8981965780258179, 1.8925468921661377, 1.8870824575424194, 1.8817945718765259, 1.8766752481460571, 1.8717166185379028, 1.86691153049469, 1.8622530698776245, 1.85773503780365, 1.8533512353897095, 1.8490959405899048, 1.844963788986206, 1.840949535369873, 1.8370484113693237, 1.8332557678222656, 1.8295671939849854, 1.8259787559509277, 1.8224862813949585, 1.8190861940383911, 1.8157750368118286, 1.8125492334365845, 1.8094056844711304, 1.806341290473938, 1.8033533096313477, 1.8004387617111206, 1.7975951433181763, 1.794819951057434, 1.792110800743103, 1.789465308189392, 1.7868813276290894, 1.784356713294983, 1.7818896770477295, 1.7794780731201172, 1.7771202325820923, 1.774814248085022, 1.7725586891174316, 1.770351767539978, 1.768191933631897, 1.7660777568817139, 1.764007806777954, 1.7619807720184326, 1.7599953413009644, 1.7580502033233643, 1.7561442852020264, 1.7542762756347656, 1.752445101737976, 1.7506498098373413, 1.7488892078399658, 1.7471624612808228, 1.7454684972763062, 1.7438064813613892, 1.7421754598617554, 1.740574598312378, 1.73900306224823, 1.7374601364135742, 1.7359449863433838, 1.7344568967819214, 1.7329951524734497, 1.7315590381622314, 1.7301479578018188, 1.7287611961364746, 1.727398157119751, 1.7260583639144897, 1.724740982055664, 1.7234456539154053, 1.7221717834472656, 1.7209187746047974, 1.7196862697601318, 1.7184736728668213, 1.7172805070877075, 1.7161062955856323, 1.714950680732727, 1.7138131856918335, 1.7126933336257935, 1.7115908861160278, -1.7105052471160889, -1.7115908861160278, -1.7126933336257935, -1.7138131856918335, -1.714950680732727, -1.7161062955856323, -1.7172805070877075, -1.7184736728668213, -1.7196862697601318, -1.7209187746047974, -1.7221717834472656, -1.7234456539154053, -1.724740982055664, -1.7260583639144897, -1.727398157119751, -1.7287611961364746, -1.7301479578018188, -1.7315590381622314, -1.7329951524734497, -1.7344568967819214, -1.7359449863433838, -1.7374601364135742, -1.73900306224823, -1.740574598312378, -1.7421754598617554, -1.7438064813613892, -1.7454684972763062, -1.7471624612808228, -1.7488892078399658, -1.7506498098373413, -1.752445101737976, -1.7542762756347656, -1.7561442852020264, -1.7580502033233643, -1.7599953413009644, -1.7619807720184326, -1.764007806777954, -1.7660777568817139, -1.768191933631897, -1.770351767539978, -1.7725586891174316, -1.774814248085022, -1.7771202325820923, -1.7794780731201172, -1.7818896770477295, -1.784356713294983, -1.7868813276290894, -1.789465308189392, -1.792110800743103, -1.794819951057434, -1.7975951433181763, -1.8004387617111206, -1.8033533096313477, -1.806341290473938, -1.8094056844711304, -1.8125492334365845, -1.8157750368118286, -1.8190861940383911, -1.8224862813949585, -1.8259787559509277, -1.8295671939849854, -1.8332557678222656, -1.8370484113693237, -1.840949535369873, -1.844963788986206, -1.8490959405899048, -1.8533512353897095, -1.85773503780365, -1.8622530698776245, -1.86691153049469, -1.8717166185379028, -1.8766752481460571, -1.8817945718765259, -1.8870824575424194, -1.8925468921661377, -1.8981965780258179, -1.9040405750274658, -1.9100888967514038, -1.9163519144058228, -1.9228405952453613, -1.9295669794082642, -1.936543583869934, -1.9437839984893799, -1.9513026475906372, -1.9591150283813477, -1.9672375917434692, -1.975688099861145, -1.9844855070114136, -1.993650197982788, -2.003204107284546, -2.0131704807281494, -2.0235748291015625, -2.0344438552856445, -2.045807123184204, -2.0576956272125244, -2.070142984390259, -2.0831856727600098, -2.09686279296875, -2.111215829849243, -2.1262900829315186, -2.1421337127685547, -2.158798933029175, -2.1763410568237305, -2.194819450378418, -2.2142975330352783, -2.234842538833618, -2.256525754928589, -2.2794225215911865, -2.3036115169525146, -2.329174041748047, -2.356194496154785, -2.384758234024048, -2.414950370788574, -2.44685435295105, -2.4805495738983154, -2.5161075592041016, -2.5535900592803955, -2.593043327331543, -2.6344940662384033, -2.677945137023926, -2.7233684062957764, -2.7707014083862305, -2.8198421001434326, -2.870645761489868, -2.9229238033294678, -2.9764440059661865, -3.030935525894165, -3.0860941410064697, 3.1415927410125732, 3.082836866378784, 3.0244839191436768, 2.9669203758239746, 2.9105019569396973, 2.855541229248047, 2.802299976348877, 2.750985622406006, 2.7017500400543213, 2.654693365097046, 2.6098685264587402, 2.5672879219055176, 2.5269296169281006, 2.488745927810669, 2.4526681900024414, 2.4186131954193115, 2.386488199234009, 2.356194496154785, 2.3276307582855225, 2.3006958961486816, 2.2752904891967773, 2.2513175010681152, 2.228684902191162, 2.2073044776916504, 2.1870932579040527, 2.167973041534424, 2.1498706340789795, 2.1327178478240967, 2.1164512634277344, 2.1010119915008545, 2.0863454341888428, 2.0724003314971924, 2.0591301918029785, 2.0464916229248047, 2.0344438552856445, 2.0229501724243164, 2.0119757652282715, 2.0014889240264893, 1.9914597272872925, 1.981860876083374, 1.9726669788360596, 1.9638543128967285, 1.955401062965393, 1.947286605834961, 1.9394922256469727, 1.9320000410079956, 1.9247937202453613, 1.9178578853607178, 1.9111782312393188, 1.9047414064407349, 1.8985347747802734, 1.8925468921661377, 1.8867665529251099, 1.8811837434768677, 1.875788688659668, 1.8705724477767944, 1.8655264377593994, 1.8606427907943726, 1.8559141159057617, 1.8513331413269043, 1.846893310546875, 1.8425885438919067, 1.8384126424789429, 1.8343602418899536, 1.8304259777069092, 1.8266048431396484, 1.8228923082351685, 1.8192837238311768, 1.8157750368118286, 1.8123620748519897, 1.809041142463684, 1.8058085441589355, 1.8026609420776367, 1.7995951175689697, 1.7966079711914062, 1.7936965227127075, 1.7908580303192139, 1.7880897521972656, 1.7853891849517822, 1.7827539443969727, 1.7801817655563354, 1.7776702642440796, 1.7752175331115723, 1.7728214263916016, 1.7704801559448242, 1.768191933631897, 1.7659547328948975, 1.763767123222351, 1.761627435684204, 1.7595341205596924, 1.7574856281280518, 1.7554807662963867, 1.7535178661346436, 1.7515958547592163, 1.7497135400772095, 1.7478694915771484, 1.7460627555847168, 1.7442920207977295, 1.7425564527511597, 1.7408549785614014, 1.7391865253448486, 1.737550139427185, 1.7359449863433838, 1.734370231628418, 1.7328249216079712, 1.7313082218170166, 1.7298195362091064, 1.7283579111099243, 1.7269227504730225, 1.725513219833374, 1.7241287231445312, 1.7227686643600464, 1.7214322090148926, 1.7201189994812012, 1.7188283205032349, 1.717559576034546, 1.7163121700286865, 1.715085744857788, 1.7138795852661133, 1.7126933336257935, 1.7115265130996704, 1.7103785276412964, 1.7092490196228027, 1.7081376314163208, 1.7070437669754028, 1.7059670686721802, 1.7049070596694946, 1.7038636207580566, -1.702836036682129, -1.7038636207580566, -1.7049070596694946, -1.7059670686721802, -1.7070437669754028, -1.7081376314163208, -1.7092490196228027, -1.7103785276412964, -1.7115265130996704, -1.7126933336257935, -1.7138795852661133, -1.715085744857788, -1.7163121700286865, -1.717559576034546, -1.7188283205032349, -1.7201189994812012, -1.7214322090148926, -1.7227686643600464, -1.7241287231445312, -1.725513219833374, -1.7269227504730225, -1.7283579111099243, -1.7298195362091064, -1.7313082218170166, -1.7328249216079712, -1.734370231628418, -1.7359449863433838, -1.737550139427185, -1.7391865253448486, -1.7408549785614014, -1.7425564527511597, -1.7442920207977295, -1.7460627555847168, -1.7478694915771484, -1.7497135400772095, -1.7515958547592163, -1.7535178661346436, -1.7554807662963867, -1.7574856281280518, -1.7595341205596924, -1.761627435684204, -1.763767123222351, -1.7659547328948975, -1.768191933631897, -1.7704801559448242, -1.7728214263916016, -1.7752175331115723, -1.7776702642440796, -1.7801817655563354, -1.7827539443969727, -1.7853891849517822, -1.7880897521972656, -1.7908580303192139, -1.7936965227127075, -1.7966079711914062, -1.7995951175689697, -1.8026609420776367, -1.8058085441589355, -1.809041142463684, -1.8123620748519897, -1.8157750368118286, -1.8192837238311768, -1.8228923082351685, -1.8266048431396484, -1.8304259777069092, -1.8343602418899536, -1.8384126424789429, -1.8425885438919067, -1.846893310546875, -1.8513331413269043, -1.8559141159057617, -1.8606427907943726, -1.8655264377593994, -1.8705724477767944, -1.875788688659668, -1.8811837434768677, -1.8867665529251099, -1.8925468921661377, -1.8985347747802734, -1.9047414064407349, -1.9111782312393188, -1.9178578853607178, -1.9247937202453613, -1.9320000410079956, -1.9394922256469727, -1.947286605834961, -1.955401062965393, -1.9638543128967285, -1.9726669788360596, -1.981860876083374, -1.9914597272872925, -2.0014889240264893, -2.0119757652282715, -2.0229501724243164, -2.0344438552856445, -2.0464916229248047, -2.0591301918029785, -2.0724003314971924, -2.0863454341888428, -2.1010119915008545, -2.1164512634277344, -2.1327178478240967, -2.1498706340789795, -2.167973041534424, -2.1870932579040527, -2.2073044776916504, -2.228684902191162, -2.2513175010681152, -2.2752904891967773, -2.3006958961486816, -2.3276307582855225, -2.356194496154785, -2.386488199234009, -2.4186131954193115, -2.4526681900024414, -2.488745927810669, -2.5269296169281006, -2.5672879219055176, -2.6098685264587402, -2.654693365097046, -2.7017500400543213, -2.750985622406006, -2.802299976348877, -2.855541229248047, -2.9105019569396973, -2.9669203758239746, -3.0244839191436768, -3.082836866378784, 3.1415927410125732, 3.0791738033294678, 3.017237663269043, 2.956244707107544, 2.8966140747070312, 2.838707685470581, 2.7828218936920166, 2.729182243347168, 2.677945137023926, 2.6292030811309814, 2.582993268966675, 2.5393052101135254, 2.498091459274292, 2.4592761993408203, 2.422762632369995, 2.388441324234009, 2.356194496154785, 2.3259007930755615, 2.297438621520996, 2.2706892490386963, 2.245537281036377, 2.2218730449676514, 2.1995925903320312, 2.178598403930664, 2.158798933029175, 2.1401095390319824, 2.1224513053894043, 2.1057515144348145, 2.089942455291748, 2.0749623775482178, 2.060753583908081, 2.0472638607025146, 2.0344438552856445, 2.022249460220337, 2.010638952255249, 1.9995743036270142, 1.9890207052230835, 1.9789453744888306, 1.9693187475204468, 1.9601130485534668, 1.9513026475906372, 1.9428640604019165, 1.9347752332687378, 1.927016019821167, 1.919567346572876, 1.9124118089675903, 1.9055331945419312, 1.898916244506836, 1.8925468921661377, 1.8864120244979858, 1.880499243736267, 1.8747972249984741, 1.8692952394485474, 1.8639832735061646, 1.8588517904281616, 1.8538920879364014, 1.8490959405899048, 1.844455599784851, 1.8399637937545776, 1.8356136083602905, 1.8313987255096436, 1.82731294631958, 1.8233505487442017, 1.819506287574768, 1.8157750368118286, 1.8121517896652222, 1.808632254600525, 1.8052120208740234, 1.801887035369873, 1.7986533641815186, 1.795507550239563, 1.7924458980560303, 1.789465308189392, 1.7865625619888306, 1.783734679222107, 1.7809789180755615, 1.7782925367355347, 1.7756730318069458, 1.7731178998947144, 1.7706249952316284, 1.768191933631897, 1.765816569328308, 1.7634971141815186, 1.7612314224243164, 1.759017825126648, 1.75685453414917, 1.754739761352539, 1.7526720762252808, 1.7506498098373413, 1.748671531677246, 1.74673593044281, 1.7448415756225586, 1.7429871559143066, 1.7411714792251587, 1.7393932342529297, 1.7376514673233032, 1.7359449863433838, 1.7342727184295654, 1.7326337099075317, 1.7310270071029663, 1.7294515371322632, 1.727906584739685, 1.7263911962509155, 1.7249044179916382, 1.7234456539154053, 1.72201406955719, 1.7206088304519653, 1.7192292213439941, 1.7178746461868286, 1.716544508934021, 1.7152378559112549, 1.7139544486999512, 1.7126933336257935, 1.7114542722702026, 1.7102364301681519, 1.709039330482483, 1.7078624963760376, 1.7067054510116577, 1.7055675983428955, 1.7044485807418823, 1.7033478021621704, 1.7022650241851807, 1.7011996507644653, 1.7001513242721558, 1.6991195678710938, 1.6981040239334106, 1.6971044540405273, 1.696120262145996, -1.6951513290405273, -1.696120262145996, -1.6971044540405273, -1.6981040239334106, -1.6991195678710938, -1.7001513242721558, -1.7011996507644653, -1.7022650241851807, -1.7033478021621704, -1.7044485807418823, -1.7055675983428955, -1.7067054510116577, -1.7078624963760376, -1.709039330482483, -1.7102364301681519, -1.7114542722702026, -1.7126933336257935, -1.7139544486999512, -1.7152378559112549, -1.716544508934021, -1.7178746461868286, -1.7192292213439941, -1.7206088304519653, -1.72201406955719, -1.7234456539154053, -1.7249044179916382, -1.7263911962509155, -1.727906584739685, -1.7294515371322632, -1.7310270071029663, -1.7326337099075317, -1.7342727184295654, -1.7359449863433838, -1.7376514673233032, -1.7393932342529297, -1.7411714792251587, -1.7429871559143066, -1.7448415756225586, -1.74673593044281, -1.748671531677246, -1.7506498098373413, -1.7526720762252808, -1.754739761352539, -1.75685453414917, -1.759017825126648, -1.7612314224243164, -1.7634971141815186, -1.765816569328308, -1.768191933631897, -1.7706249952316284, -1.7731178998947144, -1.7756730318069458, -1.7782925367355347, -1.7809789180755615, -1.783734679222107, -1.7865625619888306, -1.789465308189392, -1.7924458980560303, -1.795507550239563, -1.7986533641815186, -1.801887035369873, -1.8052120208740234, -1.808632254600525, -1.8121517896652222, -1.8157750368118286, -1.819506287574768, -1.8233505487442017, -1.82731294631958, -1.8313987255096436, -1.8356136083602905, -1.8399637937545776, -1.844455599784851, -1.8490959405899048, -1.8538920879364014, -1.8588517904281616, -1.8639832735061646, -1.8692952394485474, -1.8747972249984741, -1.880499243736267, -1.8864120244979858, -1.8925468921661377, -1.898916244506836, -1.9055331945419312, -1.9124118089675903, -1.919567346572876, -1.927016019821167, -1.9347752332687378, -1.9428640604019165, -1.9513026475906372, -1.9601130485534668, -1.9693187475204468, -1.9789453744888306, -1.9890207052230835, -1.9995743036270142, -2.010638952255249, -2.022249460220337, -2.0344438552856445, -2.0472638607025146, -2.060753583908081, -2.0749623775482178, -2.089942455291748, -2.1057515144348145, -2.1224513053894043, -2.1401095390319824, -2.158798933029175, -2.178598403930664, -2.1995925903320312, -2.2218730449676514, -2.245537281036377, -2.2706892490386963, -2.297438621520996, -2.3259007930755615, -2.356194496154785, -2.388441324234009, -2.422762632369995, -2.4592761993408203, -2.498091459274292, -2.5393052101135254, -2.582993268966675, -2.6292030811309814, -2.677945137023926, -2.729182243347168, -2.7828218936920166, -2.838707685470581, -2.8966140747070312, -2.956244707107544, -3.017237663269043, -3.0791738033294678, 3.1415927410125732, 3.0750246047973633, 3.0090410709381104, 2.944197177886963, 2.8809902667999268, 2.8198421001434326, 2.7610862255096436, 2.704965591430664, 2.6516354084014893, 2.601173162460327, 2.5535900592803955, 2.5088438987731934, 2.4668517112731934, 2.427501916885376, 2.3906636238098145, 2.356194496154785, 2.3239476680755615, 2.293775796890259, 2.2655346393585205, 2.2390856742858887, 2.2142975330352783, 2.1910457611083984, 2.169215202331543, 2.148698329925537, 2.1293957233428955, 2.111215829849243, 2.0940747261047363, 2.077894926071167, 2.062605619430542, 2.0481417179107666, 2.0344438552856445, 2.0214576721191406, 2.0091328620910645, 1.997423768043518, 1.9862884283065796, 1.975688099861145, 1.9655874967575073, 1.95595383644104, 1.9467573165893555, 1.9379701614379883, 1.9295669794082642, 1.9215242862701416, 1.9138202667236328, 1.9064348936080933, 1.8993494510650635, 1.8925468921661377, 1.886011004447937, 1.8797271251678467, 1.8736811876296997, 1.8678605556488037, 1.8622530698776245, 1.8568477630615234, 1.8516340255737305, 1.846602201461792, 1.8417432308197021, 1.8370484113693237, 1.8325098752975464, 1.8281199932098389, 1.8238719701766968, 1.8197590112686157, 1.8157750368118286, 1.8119139671325684, 1.8081705570220947, 1.8045395612716675, 1.8010159730911255, 1.7975951433181763, 1.7942728996276855, 1.791045069694519, 1.787907600402832, 1.7848570346832275, 1.7818896770477295, 1.77900230884552, 1.7761917114257812, 1.773455023765564, 1.7707892656326294, 1.768191933631897, 1.765660285949707, 1.7631919384002686, 1.76078462600708, 1.7584360837936401, 1.7561442852020264, 1.7539070844650269, 1.751722812652588, 1.7495893239974976, 1.7475051879882812, 1.7454684972763062, 1.7434778213500977, 1.741531491279602, 1.7396281957626343, 1.7377665042877197, 1.7359449863433838, 1.734162449836731, 1.7324177026748657, 1.730709433555603, 1.7290366888046265, 1.727398157119751, 1.7257931232452393, 1.7242202758789062, 1.722678780555725, 1.721167802810669, 1.7196862697601318, 1.7182334661483765, 1.716808557510376, 1.7154107093811035, 1.7140393257141113, 1.7126933336257935, 1.7113723754882812, 1.7100756168365479, 1.708802342414856, 1.7075520753860474, 1.7063239812850952, 1.7051178216934204, 1.7039326429367065, 1.7027682065963745, 1.7016236782073975, 1.7004988193511963, 1.6993930339813232, 1.6983058452606201, 1.6972367763519287, 1.6961854696273804, 1.6951513290405273, 1.694133996963501, 1.6931331157684326, 1.6921483278274536, 1.6911791563034058, 1.6902252435684204, 1.689286231994629, 1.6883618831634521, -1.687451720237732, -1.6883618831634521, -1.689286231994629, -1.6902252435684204, -1.6911791563034058, -1.6921483278274536, -1.6931331157684326, -1.694133996963501, -1.6951513290405273, -1.6961854696273804, -1.6972367763519287, -1.6983058452606201, -1.6993930339813232, -1.7004988193511963, -1.7016236782073975, -1.7027682065963745, -1.7039326429367065, -1.7051178216934204, -1.7063239812850952, -1.7075520753860474, -1.708802342414856, -1.7100756168365479, -1.7113723754882812, -1.7126933336257935, -1.7140393257141113, -1.7154107093811035, -1.716808557510376, -1.7182334661483765, -1.7196862697601318, -1.721167802810669, -1.722678780555725, -1.7242202758789062, -1.7257931232452393, -1.727398157119751, -1.7290366888046265, -1.730709433555603, -1.7324177026748657, -1.734162449836731, -1.7359449863433838, -1.7377665042877197, -1.7396281957626343, -1.741531491279602, -1.7434778213500977, -1.7454684972763062, -1.7475051879882812, -1.7495893239974976, -1.751722812652588, -1.7539070844650269, -1.7561442852020264, -1.7584360837936401, -1.76078462600708, -1.7631919384002686, -1.765660285949707, -1.768191933631897, -1.7707892656326294, -1.773455023765564, -1.7761917114257812, -1.77900230884552, -1.7818896770477295, -1.7848570346832275, -1.787907600402832, -1.791045069694519, -1.7942728996276855, -1.7975951433181763, -1.8010159730911255, -1.8045395612716675, -1.8081705570220947, -1.8119139671325684, -1.8157750368118286, -1.8197590112686157, -1.8238719701766968, -1.8281199932098389, -1.8325098752975464, -1.8370484113693237, -1.8417432308197021, -1.846602201461792, -1.8516340255737305, -1.8568477630615234, -1.8622530698776245, -1.8678605556488037, -1.8736811876296997, -1.8797271251678467, -1.886011004447937, -1.8925468921661377, -1.8993494510650635, -1.9064348936080933, -1.9138202667236328, -1.9215242862701416, -1.9295669794082642, -1.9379701614379883, -1.9467573165893555, -1.95595383644104, -1.9655874967575073, -1.975688099861145, -1.9862884283065796, -1.997423768043518, -2.0091328620910645, -2.0214576721191406, -2.0344438552856445, -2.0481417179107666, -2.062605619430542, -2.077894926071167, -2.0940747261047363, -2.111215829849243, -2.1293957233428955, -2.148698329925537, -2.169215202331543, -2.1910457611083984, -2.2142975330352783, -2.2390856742858887, -2.2655346393585205, -2.293775796890259, -2.3239476680755615, -2.356194496154785, -2.3906636238098145, -2.427501916885376, -2.4668517112731934, -2.5088438987731934, -2.5535900592803955, -2.601173162460327, -2.6516354084014893, -2.704965591430664, -2.7610862255096436, -2.8198421001434326, -2.8809902667999268, -2.944197177886963, -3.0090410709381104, -3.0750246047973633, 3.1415927410125732, 3.0702850818634033, 2.9996955394744873, 2.930499315261841, 2.863292932510376, 2.7985687255859375, 2.7367007732391357, 2.677945137023926, 2.6224465370178223, 2.5702552795410156, 2.521343231201172, 2.475623369216919, 2.432966470718384, 2.393214702606201, 2.356194496154785, 2.321725368499756, 2.289626359939575, 2.259720802307129, 2.231839418411255, 2.2058229446411133, 2.1815223693847656, 2.158798933029175, 2.1375255584716797, 2.1175851821899414, 2.0988707542419434, 2.081284761428833, 2.0647377967834473, 2.0491487979888916, 2.0344438552856445, 2.0205559730529785, 2.0074234008789062, 1.9949907064437866, 1.9832067489624023, 1.9720251560211182, 1.9614033699035645, 1.9513026475906372, 1.9416875839233398, 1.9325255155563354, 1.9237867593765259, 1.9154436588287354, 1.9074711799621582, 1.899846076965332, 1.8925468921661377, 1.8855539560317993, 1.8788491487503052, 1.8724154233932495, 1.8662371635437012, 1.8602999448776245, 1.8545904159545898, 1.8490959405899048, 1.8438050746917725, 1.8387067317962646, 1.8337910175323486, 1.82904851436615, 1.8244704008102417, 1.820048451423645, 1.8157750368118286, 1.8116427659988403, 1.8076450824737549, 1.8037755489349365, 1.8000282049179077, 1.7963975667953491, 1.792878270149231, 1.789465308189392, 1.78615403175354, 1.7829400300979614, 1.7798192501068115, 1.7767876386642456, 1.7738415002822876, 1.7709773778915405, 1.768191933631897, 1.7654818296432495, 1.7628443241119385, 1.760276436805725, 1.7577755451202393, 1.7553391456604004, 1.7529646158218384, 1.7506498098373413, 1.7483924627304077, 1.7461905479431152, 1.7440420389175415, 1.7419449090957642, 1.739897608757019, 1.7378981113433838, 1.7359449863433838, 1.7340365648269653, 1.7321714162826538, 1.730347990989685, 1.7285650968551636, 1.7268211841583252, 1.7251150608062744, 1.7234456539154053, 1.7218116521835327, 1.7202119827270508, 1.718645691871643, 1.717111587524414, 1.715608835220337, 1.7141363620758057, 1.7126933336257935, 1.7112789154052734, 1.7098922729492188, 1.7085325717926025, 1.707198977470398, 1.7058907747268677, 1.7046072483062744, 1.7033478021621704, 1.7021117210388184, 1.7008984088897705, 1.6997071504592896, 1.6985373497009277, 1.6973884105682373, 1.6962599754333496, 1.6951513290405273, 1.6940619945526123, 1.6929914951324463, 1.691939353942871, 1.6909050941467285, 1.6898882389068604, 1.6888883113861084, 1.6879050731658936, 1.686937928199768, 1.6859866380691528, 1.6850506067276, 1.6841297149658203, 1.6832234859466553, 1.6823315620422363, 1.6814535856246948, 1.680589199066162, -1.6797382831573486, -1.680589199066162, -1.6814535856246948, -1.6823315620422363, -1.6832234859466553, -1.6841297149658203, -1.6850506067276, -1.6859866380691528, -1.686937928199768, -1.6879050731658936, -1.6888883113861084, -1.6898882389068604, -1.6909050941467285, -1.691939353942871, -1.6929914951324463, -1.6940619945526123, -1.6951513290405273, -1.6962599754333496, -1.6973884105682373, -1.6985373497009277, -1.6997071504592896, -1.7008984088897705, -1.7021117210388184, -1.7033478021621704, -1.7046072483062744, -1.7058907747268677, -1.707198977470398, -1.7085325717926025, -1.7098922729492188, -1.7112789154052734, -1.7126933336257935, -1.7141363620758057, -1.715608835220337, -1.717111587524414, -1.718645691871643, -1.7202119827270508, -1.7218116521835327, -1.7234456539154053, -1.7251150608062744, -1.7268211841583252, -1.7285650968551636, -1.730347990989685, -1.7321714162826538, -1.7340365648269653, -1.7359449863433838, -1.7378981113433838, -1.739897608757019, -1.7419449090957642, -1.7440420389175415, -1.7461905479431152, -1.7483924627304077, -1.7506498098373413, -1.7529646158218384, -1.7553391456604004, -1.7577755451202393, -1.760276436805725, -1.7628443241119385, -1.7654818296432495, -1.768191933631897, -1.7709773778915405, -1.7738415002822876, -1.7767876386642456, -1.7798192501068115, -1.7829400300979614, -1.78615403175354, -1.789465308189392, -1.792878270149231, -1.7963975667953491, -1.8000282049179077, -1.8037755489349365, -1.8076450824737549, -1.8116427659988403, -1.8157750368118286, -1.820048451423645, -1.8244704008102417, -1.82904851436615, -1.8337910175323486, -1.8387067317962646, -1.8438050746917725, -1.8490959405899048, -1.8545904159545898, -1.8602999448776245, -1.8662371635437012, -1.8724154233932495, -1.8788491487503052, -1.8855539560317993, -1.8925468921661377, -1.899846076965332, -1.9074711799621582, -1.9154436588287354, -1.9237867593765259, -1.9325255155563354, -1.9416875839233398, -1.9513026475906372, -1.9614033699035645, -1.9720251560211182, -1.9832067489624023, -1.9949907064437866, -2.0074234008789062, -2.0205559730529785, -2.0344438552856445, -2.0491487979888916, -2.0647377967834473, -2.081284761428833, -2.0988707542419434, -2.1175851821899414, -2.1375255584716797, -2.158798933029175, -2.1815223693847656, -2.2058229446411133, -2.231839418411255, -2.259720802307129, -2.289626359939575, -2.321725368499756, -2.356194496154785, -2.393214702606201, -2.432966470718384, -2.475623369216919, -2.521343231201172, -2.5702552795410156, -2.6224465370178223, -2.677945137023926, -2.7367007732391357, -2.7985687255859375, -2.863292932510376, -2.930499315261841, -2.9996955394744873, -3.0702850818634033, 3.1415927410125732, 3.0648207664489746, 2.988943338394165, 2.9147937297821045, 2.8430936336517334, 2.774418830871582, 2.7091848850250244, 2.647651195526123, 2.589937686920166, 2.53604793548584, 2.4858970642089844, 2.439335823059082, 2.3961732387542725, 2.356194496154785, 2.319174289703369, 2.2848870754241943, 2.25311279296875, 2.2236430644989014, 2.1962814331054688, 2.170846462249756, 2.1471714973449707, 2.125103712081909, 2.1045045852661133, 2.085247755050659, 2.0672190189361572, 2.0503156185150146, 2.0344438552856445, 2.019519567489624, 2.0054664611816406, 1.9922155141830444, 1.9797041416168213, 1.9678757190704346, 1.9566789865493774, 1.9460670948028564, 1.935997724533081, 1.9264322519302368, 1.9173351526260376, 1.9086744785308838, 1.9004207849502563, 1.8925468921661377, 1.8850282430648804, 1.8778420686721802, 1.8709675073623657, 1.8643853664398193, 1.8580777645111084, 1.852028489112854, 1.8462224006652832, 1.840645432472229, 1.83528470993042, 1.8301280736923218, 1.8251644372940063, 1.8203833103179932, 1.8157750368118286, 1.8113305568695068, 1.8070416450500488, 1.8029001951217651, 1.7988989353179932, 1.7950310707092285, 1.791290044784546, 1.7876698970794678, 1.7841650247573853, 1.7807698249816895, 1.7774795293807983, 1.7742893695831299, 1.7711949348449707, 1.768191933631897, 1.7652764320373535, 1.7624448537826538, 1.7596935033798218, 1.7570191621780396, 1.7544186115264893, 1.7518889904022217, 1.749427318572998, 1.7470309734344482, 1.7446975708007812, 1.7424243688583374, 1.7402093410491943, 1.7380502223968506, 1.7359449863433838, 1.7338916063308716, 1.7318881750106812, 1.7299330234527588, 1.7280243635177612, 1.7261605262756348, 1.7243400812149048, 1.7225614786148071, 1.7208232879638672, 1.7191241979599, 1.7174627780914307, 1.715838074684143, 1.714248538017273, 1.7126933336257935, 1.711171269416809, 1.7096813917160034, 1.708222508430481, 1.7067937850952148, 1.7053942680358887, 1.7040231227874756, 1.7026793956756592, 1.7013623714447021, 1.7000713348388672, 1.698805332183838, 1.697563886642456, 1.6963460445404053, 1.6951513290405273, 1.693979024887085, 1.6928284168243408, 1.6916991472244263, 1.6905903816223145, 1.6895016431808472, 1.6884324550628662, 1.6873823404312134, 1.686350703239441, 1.6853370666503906, 1.6843409538269043, 1.6833618879318237, 1.6823996305465698, 1.6814535856246948, 1.6805232763290405, 1.6796085834503174, 1.678708791732788, 1.677823781967163, 1.6769530773162842, 1.6760964393615723, 1.6752533912658691, 1.6744238138198853, 1.6736071109771729, 1.672803282737732, -1.6720117330551147, -1.672803282737732, -1.6736071109771729, -1.6744238138198853, -1.6752533912658691, -1.6760964393615723, -1.6769530773162842, -1.677823781967163, -1.678708791732788, -1.6796085834503174, -1.6805232763290405, -1.6814535856246948, -1.6823996305465698, -1.6833618879318237, -1.6843409538269043, -1.6853370666503906, -1.686350703239441, -1.6873823404312134, -1.6884324550628662, -1.6895016431808472, -1.6905903816223145, -1.6916991472244263, -1.6928284168243408, -1.693979024887085, -1.6951513290405273, -1.6963460445404053, -1.697563886642456, -1.698805332183838, -1.7000713348388672, -1.7013623714447021, -1.7026793956756592, -1.7040231227874756, -1.7053942680358887, -1.7067937850952148, -1.708222508430481, -1.7096813917160034, -1.711171269416809, -1.7126933336257935, -1.714248538017273, -1.715838074684143, -1.7174627780914307, -1.7191241979599, -1.7208232879638672, -1.7225614786148071, -1.7243400812149048, -1.7261605262756348, -1.7280243635177612, -1.7299330234527588, -1.7318881750106812, -1.7338916063308716, -1.7359449863433838, -1.7380502223968506, -1.7402093410491943, -1.7424243688583374, -1.7446975708007812, -1.7470309734344482, -1.749427318572998, -1.7518889904022217, -1.7544186115264893, -1.7570191621780396, -1.7596935033798218, -1.7624448537826538, -1.7652764320373535, -1.768191933631897, -1.7711949348449707, -1.7742893695831299, -1.7774795293807983, -1.7807698249816895, -1.7841650247573853, -1.7876698970794678, -1.791290044784546, -1.7950310707092285, -1.7988989353179932, -1.8029001951217651, -1.8070416450500488, -1.8113305568695068, -1.8157750368118286, -1.8203833103179932, -1.8251644372940063, -1.8301280736923218, -1.83528470993042, -1.840645432472229, -1.8462224006652832, -1.852028489112854, -1.8580777645111084, -1.8643853664398193, -1.8709675073623657, -1.8778420686721802, -1.8850282430648804, -1.8925468921661377, -1.9004207849502563, -1.9086744785308838, -1.9173351526260376, -1.9264322519302368, -1.935997724533081, -1.9460670948028564, -1.9566789865493774, -1.9678757190704346, -1.9797041416168213, -1.9922155141830444, -2.0054664611816406, -2.019519567489624, -2.0344438552856445, -2.0503156185150146, -2.0672190189361572, -2.085247755050659, -2.1045045852661133, -2.125103712081909, -2.1471714973449707, -2.170846462249756, -2.1962814331054688, -2.2236430644989014, -2.25311279296875, -2.2848870754241943, -2.319174289703369, -2.356194496154785, -2.3961732387542725, -2.439335823059082, -2.4858970642089844, -2.53604793548584, -2.589937686920166, -2.647651195526123, -2.7091848850250244, -2.774418830871582, -2.8430936336517334, -2.9147937297821045, -2.988943338394165, -3.0648207664489746, 3.1415927410125732, 3.0584514141082764, 2.9764440059661865, 2.8966140747070312, 2.8198421001434326, 2.7468016147613525, 2.677945137023926, 2.613518238067627, 2.5535900592803955, 2.498091459274292, 2.44685435295105, 2.3996453285217285, 2.356194496154785, 2.316215753555298, 2.2794225215911865, 2.245537281036377, 2.2142975330352783, 2.1854593753814697, 2.158798933029175, 2.134112596511841, 2.111215829849243, 2.089942455291748, 2.070142984390259, 2.0516836643218994, 2.0344438552856445, 2.0183162689208984, 2.003204107284546, 1.9890207052230835, 1.975688099861145, 1.9631364345550537, 1.9513026475906372, 1.9401299953460693, 1.9295669794082642, 1.919567346572876, 1.9100888967514038, 1.9010937213897705, 1.8925468921661377, 1.884416937828064, 1.8766752481460571, 1.8692952394485474, 1.8622530698776245, 1.8555268049240112, 1.8490959405899048, 1.842942237854004, 1.8370484113693237, 1.8313987255096436, 1.8259787559509277, 1.8207749128341675, 1.8157750368118286, 1.8109673261642456, 1.806341290473938, 1.801887035369873, 1.7975951433181763, 1.793457269668579, 1.789465308189392, 1.7856117486953735, 1.7818896770477295, 1.7782925367355347, 1.774814248085022, 1.7714492082595825, 1.768191933631897, 1.7650372982025146, 1.7619807720184326, 1.759017825126648, 1.7561442852020264, 1.7533562183380127, 1.7506498098373413, 1.7480217218399048, 1.7454684972763062, 1.7429871559143066, 1.740574598312378, 1.7382280826568604, 1.7359449863433838, 1.7337228059768677, 1.7315590381622314, 1.7294515371322632, 1.727398157119751, 1.7253968715667725, 1.7234456539154053, 1.7215427160263062, 1.7196862697601318, 1.7178746461868286, 1.7161062955856323, 1.7143796682357788, 1.7126933336257935, 1.7110459804534912, 1.709436058998108, 1.7078624963760376, 1.7063239812850952, 1.7048195600509644, 1.7033478021621704, 1.701907992362976, 1.7004988193511963, 1.6991195678710938, 1.6977691650390625, 1.6964466571807861, 1.6951513290405273, 1.6938822269439697, 1.6926387548446655, 1.6914199590682983, 1.6902252435684204, 1.6890538930892944, 1.6879050731658936, 1.6867783069610596, 1.6856728792190552, 1.6845883131027222, 1.6835238933563232, 1.6824791431427002, 1.6814535856246948, 1.6804465055465698, 1.6794575452804565, 1.6784862279891968, 1.6775319576263428, 1.6765944957733154, 1.675673246383667, 1.6747678518295288, 1.6738779544830322, 1.673003077507019, 1.6721428632736206, 1.6712969541549683, 1.6704649925231934, 1.6696466207504272, 1.6688416004180908, 1.6680495738983154, 1.6672700643539429, 1.6665030717849731, 1.6657480001449585, 1.665004849433899, -1.6642731428146362, -1.665004849433899, -1.6657480001449585, -1.6665030717849731, -1.6672700643539429, -1.6680495738983154, -1.6688416004180908, -1.6696466207504272, -1.6704649925231934, -1.6712969541549683, -1.6721428632736206, -1.673003077507019, -1.6738779544830322, -1.6747678518295288, -1.675673246383667, -1.6765944957733154, -1.6775319576263428, -1.6784862279891968, -1.6794575452804565, -1.6804465055465698, -1.6814535856246948, -1.6824791431427002, -1.6835238933563232, -1.6845883131027222, -1.6856728792190552, -1.6867783069610596, -1.6879050731658936, -1.6890538930892944, -1.6902252435684204, -1.6914199590682983, -1.6926387548446655, -1.6938822269439697, -1.6951513290405273, -1.6964466571807861, -1.6977691650390625, -1.6991195678710938, -1.7004988193511963, -1.701907992362976, -1.7033478021621704, -1.7048195600509644, -1.7063239812850952, -1.7078624963760376, -1.709436058998108, -1.7110459804534912, -1.7126933336257935, -1.7143796682357788, -1.7161062955856323, -1.7178746461868286, -1.7196862697601318, -1.7215427160263062, -1.7234456539154053, -1.7253968715667725, -1.727398157119751, -1.7294515371322632, -1.7315590381622314, -1.7337228059768677, -1.7359449863433838, -1.7382280826568604, -1.740574598312378, -1.7429871559143066, -1.7454684972763062, -1.7480217218399048, -1.7506498098373413, -1.7533562183380127, -1.7561442852020264, -1.759017825126648, -1.7619807720184326, -1.7650372982025146, -1.768191933631897, -1.7714492082595825, -1.774814248085022, -1.7782925367355347, -1.7818896770477295, -1.7856117486953735, -1.789465308189392, -1.793457269668579, -1.7975951433181763, -1.801887035369873, -1.806341290473938, -1.8109673261642456, -1.8157750368118286, -1.8207749128341675, -1.8259787559509277, -1.8313987255096436, -1.8370484113693237, -1.842942237854004, -1.8490959405899048, -1.8555268049240112, -1.8622530698776245, -1.8692952394485474, -1.8766752481460571, -1.884416937828064, -1.8925468921661377, -1.9010937213897705, -1.9100888967514038, -1.919567346572876, -1.9295669794082642, -1.9401299953460693, -1.9513026475906372, -1.9631364345550537, -1.975688099861145, -1.9890207052230835, -2.003204107284546, -2.0183162689208984, -2.0344438552856445, -2.0516836643218994, -2.070142984390259, -2.089942455291748, -2.111215829849243, -2.134112596511841, -2.158798933029175, -2.1854593753814697, -2.2142975330352783, -2.245537281036377, -2.2794225215911865, -2.316215753555298, -2.356194496154785, -2.3996453285217285, -2.44685435295105, -2.498091459274292, -2.5535900592803955, -2.613518238067627, -2.677945137023926, -2.7468016147613525, -2.8198421001434326, -2.8966140747070312, -2.9764440059661865, -3.0584514141082764, 3.1415927410125732, 3.0509328842163086, 2.9617390632629395, 2.875340700149536, 2.7928216457366943, 2.7149651050567627, 2.6422460079193115, 2.5748634338378906, 2.512796401977539, 2.4558632373809814, 2.403777599334717, 2.356194496154785, 2.312743663787842, 2.2730531692504883, 2.2367656230926514, 2.203545093536377, 2.173083782196045, 2.1451010704040527, 2.1193456649780273, 2.0955920219421387, 2.0736396312713623, 2.053309679031372, 2.0344438552856445, 2.016901969909668, 2.000558614730835, 1.9853031635284424, 1.9710370302200317, 1.9576719999313354, 1.9451299905776978, 1.9333405494689941, 1.9222410917282104, 1.9117752313613892, 1.9018924236297607, 1.8925468921661377, 1.883697509765625, 1.8753072023391724, 1.8673421144485474, 1.859771728515625, 1.8525681495666504, 1.8457062244415283, 1.8391625881195068, 1.8329161405563354, 1.8269476890563965, 1.8212394714355469, 1.8157750368118286, 1.8105394840240479, 1.8055189847946167, 1.8007007837295532, 1.796073079109192, 1.7916251420974731, 1.787346601486206, 1.7832283973693848, 1.779261589050293, 1.7754381895065308, 1.771750569343567, 1.768191933631897, 1.7647554874420166, 1.7614352703094482, 1.758225440979004, 1.7551207542419434, 1.752116084098816, 1.749206781387329, 1.7463884353637695, 1.7436569929122925, 1.7410082817077637, 1.7384387254714966, 1.7359449863433838, 1.7335237264633179, 1.731171727180481, 1.7288862466812134, 1.7266645431518555, 1.7245038747787476, 1.7224018573760986, 1.7203561067581177, 1.7183643579483032, 1.7164247035980225, 1.7145349979400635, 1.7126933336257935, 1.7108980417251587, 1.709147334098816, 1.7074395418167114, 1.705773115158081, 1.7041466236114502, 1.7025586366653442, 1.7010077238082886, 1.6994928121566772, 1.6980125904083252, 1.6965657472610474, 1.6951513290405273, 1.6937681436538696, 1.6924153566360474, 1.691091775894165, 1.6897965669631958, 1.6885288953781128, 1.6872878074645996, 1.6860724687576294, 1.6848821640014648, 1.6837159395217896, 1.6825733184814453, 1.6814535856246948, 1.6803559064865112, 1.6792796850204468, 1.6782243251800537, 1.6771892309188843, 1.6761738061904907, 1.6751774549484253, 1.6741998195648193, 1.6732401847839355, 1.6722981929779053, 1.6713732481002808, 1.6704649925231934, 1.6695729494094849, 1.668696641921997, 1.6678357124328613, 1.666989803314209, 1.6661583185195923, 1.6653411388397217, 1.6645379066467285, 1.663748025894165, 1.6629713773727417, 1.6622074842453003, 1.6614562273025513, 1.6607171297073364, 1.6599899530410767, 1.6592743396759033, 1.6585701704025269, 1.6578770875930786, 1.6571948528289795, -1.6565232276916504, -1.6571948528289795, -1.6578770875930786, -1.6585701704025269, -1.6592743396759033, -1.6599899530410767, -1.6607171297073364, -1.6614562273025513, -1.6622074842453003, -1.6629713773727417, -1.663748025894165, -1.6645379066467285, -1.6653411388397217, -1.6661583185195923, -1.666989803314209, -1.6678357124328613, -1.668696641921997, -1.6695729494094849, -1.6704649925231934, -1.6713732481002808, -1.6722981929779053, -1.6732401847839355, -1.6741998195648193, -1.6751774549484253, -1.6761738061904907, -1.6771892309188843, -1.6782243251800537, -1.6792796850204468, -1.6803559064865112, -1.6814535856246948, -1.6825733184814453, -1.6837159395217896, -1.6848821640014648, -1.6860724687576294, -1.6872878074645996, -1.6885288953781128, -1.6897965669631958, -1.691091775894165, -1.6924153566360474, -1.6937681436538696, -1.6951513290405273, -1.6965657472610474, -1.6980125904083252, -1.6994928121566772, -1.7010077238082886, -1.7025586366653442, -1.7041466236114502, -1.705773115158081, -1.7074395418167114, -1.709147334098816, -1.7108980417251587, -1.7126933336257935, -1.7145349979400635, -1.7164247035980225, -1.7183643579483032, -1.7203561067581177, -1.7224018573760986, -1.7245038747787476, -1.7266645431518555, -1.7288862466812134, -1.731171727180481, -1.7335237264633179, -1.7359449863433838, -1.7384387254714966, -1.7410082817077637, -1.7436569929122925, -1.7463884353637695, -1.749206781387329, -1.752116084098816, -1.7551207542419434, -1.758225440979004, -1.7614352703094482, -1.7647554874420166, -1.768191933631897, -1.771750569343567, -1.7754381895065308, -1.779261589050293, -1.7832283973693848, -1.787346601486206, -1.7916251420974731, -1.796073079109192, -1.8007007837295532, -1.8055189847946167, -1.8105394840240479, -1.8157750368118286, -1.8212394714355469, -1.8269476890563965, -1.8329161405563354, -1.8391625881195068, -1.8457062244415283, -1.8525681495666504, -1.859771728515625, -1.8673421144485474, -1.8753072023391724, -1.883697509765625, -1.8925468921661377, -1.9018924236297607, -1.9117752313613892, -1.9222410917282104, -1.9333405494689941, -1.9451299905776978, -1.9576719999313354, -1.9710370302200317, -1.9853031635284424, -2.000558614730835, -2.016901969909668, -2.0344438552856445, -2.053309679031372, -2.0736396312713623, -2.0955920219421387, -2.1193456649780273, -2.1451010704040527, -2.173083782196045, -2.203545093536377, -2.2367656230926514, -2.2730531692504883, -2.312743663787842, -2.356194496154785, -2.403777599334717, -2.4558632373809814, -2.512796401977539, -2.5748634338378906, -2.6422460079193115, -2.7149651050567627, -2.7928216457366943, -2.875340700149536, -2.9617390632629395, -3.0509328842163086, 3.1415927410125732, 3.041923999786377, 2.944197177886963, 2.8501358032226562, 2.7610862255096436, 2.677945137023926, 2.601173162460327, 2.5308666229248047, 2.4668517112731934, 2.4087774753570557, 2.356194496154785, 2.3086113929748535, 2.2655346393585205, 2.226491928100586, 2.1910457611083984, 2.158798933029175, 2.1293957233428955, 2.10252046585083, 2.077894926071167, 2.055274248123169, 2.0344438552856445, 2.0152156352996826, 1.997423768043518, 1.9809236526489258, 1.9655874967575073, 1.9513026475906372, 1.9379701614379883, 1.9255019426345825, 1.9138202667236328, 1.9028557538986206, 1.8925468921661377, 1.882838487625122, 1.8736811876296997, 1.8650308847427368, 1.8568477630615234, 1.8490959405899048, 1.8417432308197021, 1.834760069847107, 1.8281199932098389, 1.8217990398406982, 1.8157750368118286, 1.8100279569625854, 1.8045395612716675, 1.7992929220199585, 1.7942728996276855, 1.789465308189392, 1.7848570346832275, 1.7804361581802368, 1.7761917114257812, 1.7721134424209595, 1.768191933631897, 1.764418363571167, 1.76078462600708, 1.7572832107543945, 1.7539070844650269, 1.7506498098373413, 1.7475051879882812, 1.7444674968719482, 1.741531491279602, 1.738692283630371, 1.7359449863433838, 1.7332854270935059, 1.730709433555603, 1.7282131910324097, 1.7257931232452393, 1.7234456539154053, 1.721167802810669, 1.7189563512802124, 1.716808557510376, 1.7147217988967896, 1.7126933336257935, 1.7107210159301758, 1.708802342414856, 1.7069352865219116, 1.7051178216934204, 1.7033478021621704, 1.7016236782073975, 1.6999436616897583, 1.6983058452606201, 1.6967089176177979, 1.6951513290405273, 1.6936315298080444, 1.6921483278274536, 1.6907002925872803, 1.689286231994629, 1.6879050731658936, 1.6865555047988892, 1.6852365732192993, 1.6839473247528076, 1.6826865673065186, 1.6814535856246948, 1.6802473068237305, 1.6790668964385986, 1.677911639213562, 1.6767807006835938, 1.675673246383667, 1.674588680267334, 1.6735261678695679, 1.6724852323532104, 1.6714649200439453, 1.6704649925231934, 1.6694846153259277, 1.6685231924057007, 1.6675803661346436, 1.666655421257019, 1.6657480001449585, 1.6648575067520142, 1.6639835834503174, 1.6631256341934204, 1.6622833013534546, 1.6614562273025513, 1.6606438159942627, 1.6598459482192993, 1.6590619087219238, 1.6582916975021362, 1.6575347185134888, 1.6567906141281128, 1.6560591459274292, 1.6553400754928589, 1.6546329259872437, 1.653937578201294, 1.6532535552978516, 1.652580738067627, 1.6519187688827515, 1.6512672901153564, 1.650626301765442, 1.6499954462051392, 1.6493743658065796, -1.6487629413604736, -1.6493743658065796, -1.6499954462051392, -1.650626301765442, -1.6512672901153564, -1.6519187688827515, -1.652580738067627, -1.6532535552978516, -1.653937578201294, -1.6546329259872437, -1.6553400754928589, -1.6560591459274292, -1.6567906141281128, -1.6575347185134888, -1.6582916975021362, -1.6590619087219238, -1.6598459482192993, -1.6606438159942627, -1.6614562273025513, -1.6622833013534546, -1.6631256341934204, -1.6639835834503174, -1.6648575067520142, -1.6657480001449585, -1.666655421257019, -1.6675803661346436, -1.6685231924057007, -1.6694846153259277, -1.6704649925231934, -1.6714649200439453, -1.6724852323532104, -1.6735261678695679, -1.674588680267334, -1.675673246383667, -1.6767807006835938, -1.677911639213562, -1.6790668964385986, -1.6802473068237305, -1.6814535856246948, -1.6826865673065186, -1.6839473247528076, -1.6852365732192993, -1.6865555047988892, -1.6879050731658936, -1.689286231994629, -1.6907002925872803, -1.6921483278274536, -1.6936315298080444, -1.6951513290405273, -1.6967089176177979, -1.6983058452606201, -1.6999436616897583, -1.7016236782073975, -1.7033478021621704, -1.7051178216934204, -1.7069352865219116, -1.708802342414856, -1.7107210159301758, -1.7126933336257935, -1.7147217988967896, -1.716808557510376, -1.7189563512802124, -1.721167802810669, -1.7234456539154053, -1.7257931232452393, -1.7282131910324097, -1.730709433555603, -1.7332854270935059, -1.7359449863433838, -1.738692283630371, -1.741531491279602, -1.7444674968719482, -1.7475051879882812, -1.7506498098373413, -1.7539070844650269, -1.7572832107543945, -1.76078462600708, -1.764418363571167, -1.768191933631897, -1.7721134424209595, -1.7761917114257812, -1.7804361581802368, -1.7848570346832275, -1.789465308189392, -1.7942728996276855, -1.7992929220199585, -1.8045395612716675, -1.8100279569625854, -1.8157750368118286, -1.8217990398406982, -1.8281199932098389, -1.834760069847107, -1.8417432308197021, -1.8490959405899048, -1.8568477630615234, -1.8650308847427368, -1.8736811876296997, -1.882838487625122, -1.8925468921661377, -1.9028557538986206, -1.9138202667236328, -1.9255019426345825, -1.9379701614379883, -1.9513026475906372, -1.9655874967575073, -1.9809236526489258, -1.997423768043518, -2.0152156352996826, -2.0344438552856445, -2.055274248123169, -2.077894926071167, -2.10252046585083, -2.1293957233428955, -2.158798933029175, -2.1910457611083984, -2.226491928100586, -2.2655346393585205, -2.3086113929748535, -2.356194496154785, -2.4087774753570557, -2.4668517112731934, -2.5308666229248047, -2.601173162460327, -2.677945137023926, -2.7610862255096436, -2.8501358032226562, -2.944197177886963, -3.041923999786377, 3.1415927410125732, 3.030935525894165, 2.9229238033294678, 2.8198421001434326, 2.7233684062957764, 2.6344940662384033, 2.5535900592803955, 2.4805495738983154, 2.414950370788574, 2.356194496154785, 2.3036115169525146, 2.256525754928589, 2.2142975330352783, 2.1763410568237305, 2.1421337127685547, 2.111215829849243, 2.0831856727600098, 2.0576956272125244, 2.0344438552856445, 2.0131704807281494, 1.993650197982788, 1.975688099861145, 1.9591150283813477, 1.9437839984893799, 1.9295669794082642, 1.9163519144058228, 1.9040405750274658, 1.8925468921661377, 1.8817945718765259, 1.8717166185379028, 1.8622530698776245, 1.8533512353897095, 1.844963788986206, 1.8370484113693237, 1.8295671939849854, 1.8224862813949585, 1.8157750368118286, 1.8094056844711304, 1.8033533096313477, 1.7975951433181763, 1.792110800743103, 1.7868813276290894, 1.7818896770477295, 1.7771202325820923, 1.7725586891174316, 1.768191933631897, 1.764007806777954, 1.7599953413009644, 1.7561442852020264, 1.752445101737976, 1.7488892078399658, 1.7454684972763062, 1.7421754598617554, 1.73900306224823, 1.7359449863433838, 1.7329951524734497, 1.7301479578018188, 1.727398157119751, 1.724740982055664, 1.7221717834472656, 1.7196862697601318, 1.7172805070877075, 1.714950680732727, 1.7126933336257935, 1.7105052471160889, 1.7083830833435059, 1.7063239812850952, 1.7043253183364868, 1.7023844718933105, 1.7004988193511963, 1.6986662149429321, 1.6968843936920166, 1.6951513290405273, 1.693464994430542, 1.6918236017227173, 1.6902252435684204, 1.6886684894561768, 1.687151551246643, 1.6856728792190552, 1.6842312812805176, 1.6828253269195557, 1.6814535856246948, 1.6801148653030396, 1.6788080930709839, 1.6775319576263428, 1.6762856245040894, 1.6750679016113281, 1.6738779544830322, 1.6727147102355957, 1.6715773344039917, 1.6704649925231934, 1.6693768501281738, 1.6683120727539062, 1.6672700643539429, 1.6662499904632568, 1.6652512550354004, 1.6642731428146362, 1.663314938545227, 1.6623761653900146, 1.6614562273025513, 1.6605545282363892, 1.6596704721450806, 1.6588037014007568, 1.6579536199569702, 1.6571197509765625, 1.6563016176223755, 1.6554988622665405, 1.6547110080718994, 1.653937578201294, 1.6531782150268555, 1.6524326801300049, 1.6517003774642944, 1.6509811878204346, 1.6502745151519775, 1.6495802402496338, 1.6488980054855347, 1.6482274532318115, 1.6475682258605957, 1.646920084953308, 1.6462829113006592, 1.6456562280654907, 1.6450397968292236, 1.6444333791732788, 1.6438368558883667, 1.6432498693466187, 1.6426723003387451, 1.6421037912368774, 1.641544222831726, -1.640993356704712, -1.641544222831726, -1.6421037912368774, -1.6426723003387451, -1.6432498693466187, -1.6438368558883667, -1.6444333791732788, -1.6450397968292236, -1.6456562280654907, -1.6462829113006592, -1.646920084953308, -1.6475682258605957, -1.6482274532318115, -1.6488980054855347, -1.6495802402496338, -1.6502745151519775, -1.6509811878204346, -1.6517003774642944, -1.6524326801300049, -1.6531782150268555, -1.653937578201294, -1.6547110080718994, -1.6554988622665405, -1.6563016176223755, -1.6571197509765625, -1.6579536199569702, -1.6588037014007568, -1.6596704721450806, -1.6605545282363892, -1.6614562273025513, -1.6623761653900146, -1.663314938545227, -1.6642731428146362, -1.6652512550354004, -1.6662499904632568, -1.6672700643539429, -1.6683120727539062, -1.6693768501281738, -1.6704649925231934, -1.6715773344039917, -1.6727147102355957, -1.6738779544830322, -1.6750679016113281, -1.6762856245040894, -1.6775319576263428, -1.6788080930709839, -1.6801148653030396, -1.6814535856246948, -1.6828253269195557, -1.6842312812805176, -1.6856728792190552, -1.687151551246643, -1.6886684894561768, -1.6902252435684204, -1.6918236017227173, -1.693464994430542, -1.6951513290405273, -1.6968843936920166, -1.6986662149429321, -1.7004988193511963, -1.7023844718933105, -1.7043253183364868, -1.7063239812850952, -1.7083830833435059, -1.7105052471160889, -1.7126933336257935, -1.714950680732727, -1.7172805070877075, -1.7196862697601318, -1.7221717834472656, -1.724740982055664, -1.727398157119751, -1.7301479578018188, -1.7329951524734497, -1.7359449863433838, -1.73900306224823, -1.7421754598617554, -1.7454684972763062, -1.7488892078399658, -1.752445101737976, -1.7561442852020264, -1.7599953413009644, -1.764007806777954, -1.768191933631897, -1.7725586891174316, -1.7771202325820923, -1.7818896770477295, -1.7868813276290894, -1.792110800743103, -1.7975951433181763, -1.8033533096313477, -1.8094056844711304, -1.8157750368118286, -1.8224862813949585, -1.8295671939849854, -1.8370484113693237, -1.844963788986206, -1.8533512353897095, -1.8622530698776245, -1.8717166185379028, -1.8817945718765259, -1.8925468921661377, -1.9040405750274658, -1.9163519144058228, -1.9295669794082642, -1.9437839984893799, -1.9591150283813477, -1.975688099861145, -1.993650197982788, -2.0131704807281494, -2.0344438552856445, -2.0576956272125244, -2.0831856727600098, -2.111215829849243, -2.1421337127685547, -2.1763410568237305, -2.2142975330352783, -2.256525754928589, -2.3036115169525146, -2.356194496154785, -2.414950370788574, -2.4805495738983154, -2.5535900592803955, -2.6344940662384033, -2.7233684062957764, -2.8198421001434326, -2.9229238033294678, -3.030935525894165, 3.1415927410125732, 3.017237663269043, 2.8966140747070312, 2.7828218936920166, 2.677945137023926, 2.582993268966675, 2.498091459274292, 2.422762632369995, 2.356194496154785, 2.297438621520996, 2.245537281036377, 2.1995925903320312, 2.158798933029175, 2.1224513053894043, 2.089942455291748, 2.060753583908081, 2.0344438552856445, 2.010638952255249, 1.9890207052230835, 1.9693187475204468, 1.9513026475906372, 1.9347752332687378, 1.919567346572876, 1.9055331945419312, 1.8925468921661377, 1.880499243736267, 1.8692952394485474, 1.8588517904281616, 1.8490959405899048, 1.8399637937545776, 1.8313987255096436, 1.8233505487442017, 1.8157750368118286, 1.808632254600525, 1.801887035369873, 1.795507550239563, 1.789465308189392, 1.783734679222107, 1.7782925367355347, 1.7731178998947144, 1.768191933631897, 1.7634971141815186, 1.759017825126648, 1.754739761352539, 1.7506498098373413, 1.74673593044281, 1.7429871559143066, 1.7393932342529297, 1.7359449863433838, 1.7326337099075317, 1.7294515371322632, 1.7263911962509155, 1.7234456539154053, 1.7206088304519653, 1.7178746461868286, 1.7152378559112549, 1.7126933336257935, 1.7102364301681519, 1.7078624963760376, 1.7055675983428955, 1.7033478021621704, 1.7011996507644653, 1.6991195678710938, 1.6971044540405273, 1.6951513290405273, 1.6932573318481445, 1.6914199590682983, 1.6896367073059082, 1.6879050731658936, 1.686223030090332, 1.6845883131027222, 1.6829991340637207, 1.6814535856246948, 1.6799497604370117, 1.6784862279891968, 1.6770612001419067, 1.675673246383667, 1.6743210554122925, 1.673003077507019, 1.6717181205749512, 1.6704649925231934, 1.66924250125885, 1.6680495738983154, 1.6668850183486938, 1.6657480001449585, 1.664637565612793, 1.6635526418685913, 1.6624925136566162, 1.6614562273025513, 1.6604430675506592, 1.659452199935913, 1.6584830284118652, 1.6575347185134888, 1.6566065549850464, 1.6556980609893799, 1.6548086404800415, 1.653937578201294, 1.6530842781066895, 1.6522483825683594, 1.6514291763305664, 1.650626301765442, 1.649839162826538, 1.6490675210952759, 1.648310661315918, 1.6475682258605957, 1.6468398571014404, 1.6461251974105835, 1.6454238891601562, 1.644735336303711, 1.644059419631958, 1.6433957815170288, 1.6427439451217651, 1.6421037912368774, 1.6414748430252075, 1.6408568620681763, 1.6402496099472046, 1.6396528482437134, 1.6390661001205444, 1.6384893655776978, 1.6379221677780151, 1.6373645067214966, 1.6368159055709839, 1.636276364326477, 1.6357455253601074, 1.635223150253296, 1.634709119796753, 1.634203314781189, 1.6337053775787354, -1.6332151889801025, -1.6337053775787354, -1.634203314781189, -1.634709119796753, -1.635223150253296, -1.6357455253601074, -1.636276364326477, -1.6368159055709839, -1.6373645067214966, -1.6379221677780151, -1.6384893655776978, -1.6390661001205444, -1.6396528482437134, -1.6402496099472046, -1.6408568620681763, -1.6414748430252075, -1.6421037912368774, -1.6427439451217651, -1.6433957815170288, -1.644059419631958, -1.644735336303711, -1.6454238891601562, -1.6461251974105835, -1.6468398571014404, -1.6475682258605957, -1.648310661315918, -1.6490675210952759, -1.649839162826538, -1.650626301765442, -1.6514291763305664, -1.6522483825683594, -1.6530842781066895, -1.653937578201294, -1.6548086404800415, -1.6556980609893799, -1.6566065549850464, -1.6575347185134888, -1.6584830284118652, -1.659452199935913, -1.6604430675506592, -1.6614562273025513, -1.6624925136566162, -1.6635526418685913, -1.664637565612793, -1.6657480001449585, -1.6668850183486938, -1.6680495738983154, -1.66924250125885, -1.6704649925231934, -1.6717181205749512, -1.673003077507019, -1.6743210554122925, -1.675673246383667, -1.6770612001419067, -1.6784862279891968, -1.6799497604370117, -1.6814535856246948, -1.6829991340637207, -1.6845883131027222, -1.686223030090332, -1.6879050731658936, -1.6896367073059082, -1.6914199590682983, -1.6932573318481445, -1.6951513290405273, -1.6971044540405273, -1.6991195678710938, -1.7011996507644653, -1.7033478021621704, -1.7055675983428955, -1.7078624963760376, -1.7102364301681519, -1.7126933336257935, -1.7152378559112549, -1.7178746461868286, -1.7206088304519653, -1.7234456539154053, -1.7263911962509155, -1.7294515371322632, -1.7326337099075317, -1.7359449863433838, -1.7393932342529297, -1.7429871559143066, -1.74673593044281, -1.7506498098373413, -1.754739761352539, -1.759017825126648, -1.7634971141815186, -1.768191933631897, -1.7731178998947144, -1.7782925367355347, -1.783734679222107, -1.789465308189392, -1.795507550239563, -1.801887035369873, -1.808632254600525, -1.8157750368118286, -1.8233505487442017, -1.8313987255096436, -1.8399637937545776, -1.8490959405899048, -1.8588517904281616, -1.8692952394485474, -1.880499243736267, -1.8925468921661377, -1.9055331945419312, -1.919567346572876, -1.9347752332687378, -1.9513026475906372, -1.9693187475204468, -1.9890207052230835, -2.010638952255249, -2.0344438552856445, -2.060753583908081, -2.089942455291748, -2.1224513053894043, -2.158798933029175, -2.1995925903320312, -2.245537281036377, -2.297438621520996, -2.356194496154785, -2.422762632369995, -2.498091459274292, -2.582993268966675, -2.677945137023926, -2.7828218936920166, -2.8966140747070312, -3.017237663269043, 3.1415927410125732, 2.9996955394744873, 2.863292932510376, 2.7367007732391357, 2.6224465370178223, 2.521343231201172, 2.432966470718384, 2.356194496154785, 2.289626359939575, 2.231839418411255, 2.1815223693847656, 2.1375255584716797, 2.0988707542419434, 2.0647377967834473, 2.0344438552856445, 2.0074234008789062, 1.9832067489624023, 1.9614033699035645, 1.9416875839233398, 1.9237867593765259, 1.9074711799621582, 1.8925468921661377, 1.8788491487503052, 1.8662371635437012, 1.8545904159545898, 1.8438050746917725, 1.8337910175323486, 1.8244704008102417, 1.8157750368118286, 1.8076450824737549, 1.8000282049179077, 1.792878270149231, 1.78615403175354, 1.7798192501068115, 1.7738415002822876, 1.768191933631897, 1.7628443241119385, 1.7577755451202393, 1.7529646158218384, 1.7483924627304077, 1.7440420389175415, 1.739897608757019, 1.7359449863433838, 1.7321714162826538, 1.7285650968551636, 1.7251150608062744, 1.7218116521835327, 1.718645691871643, 1.715608835220337, 1.7126933336257935, 1.7098922729492188, 1.707198977470398, 1.7046072483062744, 1.7021117210388184, 1.6997071504592896, 1.6973884105682373, 1.6951513290405273, 1.6929914951324463, 1.6909050941467285, 1.6888883113861084, 1.686937928199768, 1.6850506067276, 1.6832234859466553, 1.6814535856246948, 1.6797382831573486, 1.6780751943588257, 1.676461935043335, 1.674896240234375, 1.673376202583313, 1.671899676322937, 1.6704649925231934, 1.6690702438354492, 1.66771399974823, 1.6663944721221924, 1.6651102304458618, 1.6638600826263428, 1.662642478942871, 1.6614562273025513, 1.6603001356124878, 1.6591731309890747, 1.6580740213394165, 1.6570018529891968, 1.6559556722640991, 1.6549345254898071, 1.653937578201294, 1.6529638767242432, 1.652012586593628, 1.6510831117630005, 1.650174617767334, 1.6492863893508911, 1.6484178304672241, 1.6475682258605957, 1.646736979484558, 1.6459234952926636, 1.6451271772384644, 1.6443476676940918, 1.643584132194519, 1.6428364515304565, 1.6421037912368774, 1.6413859128952026, 1.640682339668274, 1.639992594718933, 1.6393163204193115, 1.6386531591415405, 1.638002634048462, 1.6373645067214966, 1.6367383003234863, 1.636123776435852, 1.635520577430725, 1.6349284648895264, 1.6343469619750977, 1.6337759494781494, 1.6332151889801025, 1.6326642036437988, 1.6321228742599487, 1.6315908432006836, 1.6310681104660034, 1.63055419921875, 1.6300488710403442, 1.6295521259307861, 1.629063606262207, 1.6285831928253174, 1.6281105279922485, 1.6276456117630005, 1.6271880865097046, 1.6267379522323608, 1.6262948513031006, 1.6258586645126343, -1.625429391860962, -1.6258586645126343, -1.6262948513031006, -1.6267379522323608, -1.6271880865097046, -1.6276456117630005, -1.6281105279922485, -1.6285831928253174, -1.629063606262207, -1.6295521259307861, -1.6300488710403442, -1.63055419921875, -1.6310681104660034, -1.6315908432006836, -1.6321228742599487, -1.6326642036437988, -1.6332151889801025, -1.6337759494781494, -1.6343469619750977, -1.6349284648895264, -1.635520577430725, -1.636123776435852, -1.6367383003234863, -1.6373645067214966, -1.638002634048462, -1.6386531591415405, -1.6393163204193115, -1.639992594718933, -1.640682339668274, -1.6413859128952026, -1.6421037912368774, -1.6428364515304565, -1.643584132194519, -1.6443476676940918, -1.6451271772384644, -1.6459234952926636, -1.646736979484558, -1.6475682258605957, -1.6484178304672241, -1.6492863893508911, -1.650174617767334, -1.6510831117630005, -1.652012586593628, -1.6529638767242432, -1.653937578201294, -1.6549345254898071, -1.6559556722640991, -1.6570018529891968, -1.6580740213394165, -1.6591731309890747, -1.6603001356124878, -1.6614562273025513, -1.662642478942871, -1.6638600826263428, -1.6651102304458618, -1.6663944721221924, -1.66771399974823, -1.6690702438354492, -1.6704649925231934, -1.671899676322937, -1.673376202583313, -1.674896240234375, -1.676461935043335, -1.6780751943588257, -1.6797382831573486, -1.6814535856246948, -1.6832234859466553, -1.6850506067276, -1.686937928199768, -1.6888883113861084, -1.6909050941467285, -1.6929914951324463, -1.6951513290405273, -1.6973884105682373, -1.6997071504592896, -1.7021117210388184, -1.7046072483062744, -1.707198977470398, -1.7098922729492188, -1.7126933336257935, -1.715608835220337, -1.718645691871643, -1.7218116521835327, -1.7251150608062744, -1.7285650968551636, -1.7321714162826538, -1.7359449863433838, -1.739897608757019, -1.7440420389175415, -1.7483924627304077, -1.7529646158218384, -1.7577755451202393, -1.7628443241119385, -1.768191933631897, -1.7738415002822876, -1.7798192501068115, -1.78615403175354, -1.792878270149231, -1.8000282049179077, -1.8076450824737549, -1.8157750368118286, -1.8244704008102417, -1.8337910175323486, -1.8438050746917725, -1.8545904159545898, -1.8662371635437012, -1.8788491487503052, -1.8925468921661377, -1.9074711799621582, -1.9237867593765259, -1.9416875839233398, -1.9614033699035645, -1.9832067489624023, -2.0074234008789062, -2.0344438552856445, -2.0647377967834473, -2.0988707542419434, -2.1375255584716797, -2.1815223693847656, -2.231839418411255, -2.289626359939575, -2.356194496154785, -2.432966470718384, -2.521343231201172, -2.6224465370178223, -2.7367007732391357, -2.863292932510376, -2.9996955394744873, 3.1415927410125732, 2.9764440059661865, 2.8198421001434326, 2.677945137023926, 2.5535900592803955, 2.44685435295105, 2.356194496154785, 2.2794225215911865, 2.2142975330352783, 2.158798933029175, 2.111215829849243, 2.070142984390259, 2.0344438552856445, 2.003204107284546, 1.975688099861145, 1.9513026475906372, 1.9295669794082642, 1.9100888967514038, 1.8925468921661377, 1.8766752481460571, 1.8622530698776245, 1.8490959405899048, 1.8370484113693237, 1.8259787559509277, 1.8157750368118286, 1.806341290473938, 1.7975951433181763, 1.789465308189392, 1.7818896770477295, 1.774814248085022, 1.768191933631897, 1.7619807720184326, 1.7561442852020264, 1.7506498098373413, 1.7454684972763062, 1.740574598312378, 1.7359449863433838, 1.7315590381622314, 1.727398157119751, 1.7234456539154053, 1.7196862697601318, 1.7161062955856323, 1.7126933336257935, 1.709436058998108, 1.7063239812850952, 1.7033478021621704, 1.7004988193511963, 1.6977691650390625, 1.6951513290405273, 1.6926387548446655, 1.6902252435684204, 1.6879050731658936, 1.6856728792190552, 1.6835238933563232, 1.6814535856246948, 1.6794575452804565, 1.6775319576263428, 1.675673246383667, 1.6738779544830322, 1.6721428632736206, 1.6704649925231934, 1.6688416004180908, 1.6672700643539429, 1.6657480001449585, 1.6642731428146362, 1.6628432273864746, 1.6614562273025513, 1.660110354423523, 1.6588037014007568, 1.6575347185134888, 1.6563016176223755, 1.655103087425232, 1.653937578201294, 1.6528037786483765, 1.6517003774642944, 1.650626301765442, 1.6495802402496338, 1.6485612392425537, 1.6475682258605957, 1.6466001272201538, 1.6456562280654907, 1.644735336303711, 1.6438368558883667, 1.6429599523544312, 1.6421037912368774, 1.6412676572799683, 1.6404509544372559, 1.6396528482437134, 1.638872742652893, 1.6381101608276367, 1.6373645067214966, 1.6366350650787354, 1.6359214782714844, 1.635223150253296, 1.6345396041870117, 1.6338704824447632, 1.6332151889801025, 1.6325732469558716, 1.6319445371627808, 1.6313283443450928, 1.6307244300842285, 1.6301325559616089, 1.6295521259307861, 1.6289830207824707, 1.6284247636795044, 1.627877116203308, 1.6273397207260132, 1.62681245803833, 1.6262948513031006, 1.6257866621017456, 1.6252877712249756, 1.6247978210449219, 1.6243165731430054, 1.6238439083099365, 1.6233793497085571, 1.6229230165481567, 1.6224744319915771, 1.6220334768295288, 1.6216000318527222, 1.6211738586425781, 1.6207547187805176, 1.620342493057251, 1.6199370622634888, 1.6195381879806519, 1.6191457509994507, 1.6187595129013062, 1.6183794736862183, 1.6180052757263184, -1.617637038230896, -1.6180052757263184, -1.6183794736862183, -1.6187595129013062, -1.6191457509994507, -1.6195381879806519, -1.6199370622634888, -1.620342493057251, -1.6207547187805176, -1.6211738586425781, -1.6216000318527222, -1.6220334768295288, -1.6224744319915771, -1.6229230165481567, -1.6233793497085571, -1.6238439083099365, -1.6243165731430054, -1.6247978210449219, -1.6252877712249756, -1.6257866621017456, -1.6262948513031006, -1.62681245803833, -1.6273397207260132, -1.627877116203308, -1.6284247636795044, -1.6289830207824707, -1.6295521259307861, -1.6301325559616089, -1.6307244300842285, -1.6313283443450928, -1.6319445371627808, -1.6325732469558716, -1.6332151889801025, -1.6338704824447632, -1.6345396041870117, -1.635223150253296, -1.6359214782714844, -1.6366350650787354, -1.6373645067214966, -1.6381101608276367, -1.638872742652893, -1.6396528482437134, -1.6404509544372559, -1.6412676572799683, -1.6421037912368774, -1.6429599523544312, -1.6438368558883667, -1.644735336303711, -1.6456562280654907, -1.6466001272201538, -1.6475682258605957, -1.6485612392425537, -1.6495802402496338, -1.650626301765442, -1.6517003774642944, -1.6528037786483765, -1.653937578201294, -1.655103087425232, -1.6563016176223755, -1.6575347185134888, -1.6588037014007568, -1.660110354423523, -1.6614562273025513, -1.6628432273864746, -1.6642731428146362, -1.6657480001449585, -1.6672700643539429, -1.6688416004180908, -1.6704649925231934, -1.6721428632736206, -1.6738779544830322, -1.675673246383667, -1.6775319576263428, -1.6794575452804565, -1.6814535856246948, -1.6835238933563232, -1.6856728792190552, -1.6879050731658936, -1.6902252435684204, -1.6926387548446655, -1.6951513290405273, -1.6977691650390625, -1.7004988193511963, -1.7033478021621704, -1.7063239812850952, -1.709436058998108, -1.7126933336257935, -1.7161062955856323, -1.7196862697601318, -1.7234456539154053, -1.727398157119751, -1.7315590381622314, -1.7359449863433838, -1.740574598312378, -1.7454684972763062, -1.7506498098373413, -1.7561442852020264, -1.7619807720184326, -1.768191933631897, -1.774814248085022, -1.7818896770477295, -1.789465308189392, -1.7975951433181763, -1.806341290473938, -1.8157750368118286, -1.8259787559509277, -1.8370484113693237, -1.8490959405899048, -1.8622530698776245, -1.8766752481460571, -1.8925468921661377, -1.9100888967514038, -1.9295669794082642, -1.9513026475906372, -1.975688099861145, -2.003204107284546, -2.0344438552856445, -2.070142984390259, -2.111215829849243, -2.158798933029175, -2.2142975330352783, -2.2794225215911865, -2.356194496154785, -2.44685435295105, -2.5535900592803955, -2.677945137023926, -2.8198421001434326, -2.9764440059661865, 3.1415927410125732, 2.944197177886963, 2.7610862255096436, 2.601173162460327, 2.4668517112731934, 2.356194496154785, 2.2655346393585205, 2.1910457611083984, 2.1293957233428955, 2.077894926071167, 2.0344438552856445, 1.997423768043518, 1.9655874967575073, 1.9379701614379883, 1.9138202667236328, 1.8925468921661377, 1.8736811876296997, 1.8568477630615234, 1.8417432308197021, 1.8281199932098389, 1.8157750368118286, 1.8045395612716675, 1.7942728996276855, 1.7848570346832275, 1.7761917114257812, 1.768191933631897, 1.76078462600708, 1.7539070844650269, 1.7475051879882812, 1.741531491279602, 1.7359449863433838, 1.730709433555603, 1.7257931232452393, 1.721167802810669, 1.716808557510376, 1.7126933336257935, 1.708802342414856, 1.7051178216934204, 1.7016236782073975, 1.6983058452606201, 1.6951513290405273, 1.6921483278274536, 1.689286231994629, 1.6865555047988892, 1.6839473247528076, 1.6814535856246948, 1.6790668964385986, 1.6767807006835938, 1.674588680267334, 1.6724852323532104, 1.6704649925231934, 1.6685231924057007, 1.666655421257019, 1.6648575067520142, 1.6631256341934204, 1.6614562273025513, 1.6598459482192993, 1.6582916975021362, 1.6567906141281128, 1.6553400754928589, 1.653937578201294, 1.652580738067627, 1.6512672901153564, 1.6499954462051392, 1.6487629413604736, 1.6475682258605957, 1.646409511566162, 1.6452851295471191, 1.6441936492919922, 1.6431336402893066, 1.6421037912368774, 1.6411027908325195, 1.6401294469833374, 1.639182686805725, 1.638261318206787, 1.6373645067214966, 1.6364911794662476, 1.6356403827667236, 1.634811282157898, 1.6340031623840332, 1.6332151889801025, 1.632446527481079, 1.6316965818405151, 1.6309646368026733, 1.6302499771118164, 1.6295521259307861, 1.6288704872131348, 1.6282044649124146, 1.6275534629821777, 1.6269171237945557, 1.6262948513031006, 1.6256861686706543, 1.6250907182693481, 1.624508023262024, 1.623937726020813, 1.6233793497085571, 1.6228326559066772, 1.6222971677780151, 1.6217725276947021, 1.6212584972381592, 1.6207547187805176, 1.6202609539031982, 1.619776725769043, 1.6193019151687622, 1.6188362836837769, 1.6183794736862183, 1.6179312467575073, 1.617491364479065, 1.617059588432312, 1.616635799407959, 1.6162196397781372, 1.6158109903335571, 1.6154096126556396, 1.6150152683258057, 1.6146278381347656, 1.61424720287323, 1.6138731241226196, 1.6135053634643555, 1.6131439208984375, 1.612788438796997, 1.6124389171600342, 1.6120951175689697, 1.6117570400238037, 1.6114243268966675, 1.6110970973968506, 1.6107749938964844, 1.6104580163955688, 1.6101460456848145, -1.6098389625549316, -1.6101460456848145, -1.6104580163955688, -1.6107749938964844, -1.6110970973968506, -1.6114243268966675, -1.6117570400238037, -1.6120951175689697, -1.6124389171600342, -1.612788438796997, -1.6131439208984375, -1.6135053634643555, -1.6138731241226196, -1.61424720287323, -1.6146278381347656, -1.6150152683258057, -1.6154096126556396, -1.6158109903335571, -1.6162196397781372, -1.616635799407959, -1.617059588432312, -1.617491364479065, -1.6179312467575073, -1.6183794736862183, -1.6188362836837769, -1.6193019151687622, -1.619776725769043, -1.6202609539031982, -1.6207547187805176, -1.6212584972381592, -1.6217725276947021, -1.6222971677780151, -1.6228326559066772, -1.6233793497085571, -1.623937726020813, -1.624508023262024, -1.6250907182693481, -1.6256861686706543, -1.6262948513031006, -1.6269171237945557, -1.6275534629821777, -1.6282044649124146, -1.6288704872131348, -1.6295521259307861, -1.6302499771118164, -1.6309646368026733, -1.6316965818405151, -1.632446527481079, -1.6332151889801025, -1.6340031623840332, -1.634811282157898, -1.6356403827667236, -1.6364911794662476, -1.6373645067214966, -1.638261318206787, -1.639182686805725, -1.6401294469833374, -1.6411027908325195, -1.6421037912368774, -1.6431336402893066, -1.6441936492919922, -1.6452851295471191, -1.646409511566162, -1.6475682258605957, -1.6487629413604736, -1.6499954462051392, -1.6512672901153564, -1.652580738067627, -1.653937578201294, -1.6553400754928589, -1.6567906141281128, -1.6582916975021362, -1.6598459482192993, -1.6614562273025513, -1.6631256341934204, -1.6648575067520142, -1.666655421257019, -1.6685231924057007, -1.6704649925231934, -1.6724852323532104, -1.674588680267334, -1.6767807006835938, -1.6790668964385986, -1.6814535856246948, -1.6839473247528076, -1.6865555047988892, -1.689286231994629, -1.6921483278274536, -1.6951513290405273, -1.6983058452606201, -1.7016236782073975, -1.7051178216934204, -1.708802342414856, -1.7126933336257935, -1.716808557510376, -1.721167802810669, -1.7257931232452393, -1.730709433555603, -1.7359449863433838, -1.741531491279602, -1.7475051879882812, -1.7539070844650269, -1.76078462600708, -1.768191933631897, -1.7761917114257812, -1.7848570346832275, -1.7942728996276855, -1.8045395612716675, -1.8157750368118286, -1.8281199932098389, -1.8417432308197021, -1.8568477630615234, -1.8736811876296997, -1.8925468921661377, -1.9138202667236328, -1.9379701614379883, -1.9655874967575073, -1.997423768043518, -2.0344438552856445, -2.077894926071167, -2.1293957233428955, -2.1910457611083984, -2.2655346393585205, -2.356194496154785, -2.4668517112731934, -2.601173162460327, -2.7610862255096436, -2.944197177886963, 3.1415927410125732, 2.8966140747070312, 2.677945137023926, 2.498091459274292, 2.356194496154785, 2.245537281036377, 2.158798933029175, 2.089942455291748, 2.0344438552856445, 1.9890207052230835, 1.9513026475906372, 1.919567346572876, 1.8925468921661377, 1.8692952394485474, 1.8490959405899048, 1.8313987255096436, 1.8157750368118286, 1.801887035369873, 1.789465308189392, 1.7782925367355347, 1.768191933631897, 1.759017825126648, 1.7506498098373413, 1.7429871559143066, 1.7359449863433838, 1.7294515371322632, 1.7234456539154053, 1.7178746461868286, 1.7126933336257935, 1.7078624963760376, 1.7033478021621704, 1.6991195678710938, 1.6951513290405273, 1.6914199590682983, 1.6879050731658936, 1.6845883131027222, 1.6814535856246948, 1.6784862279891968, 1.675673246383667, 1.673003077507019, 1.6704649925231934, 1.6680495738983154, 1.6657480001449585, 1.6635526418685913, 1.6614562273025513, 1.659452199935913, 1.6575347185134888, 1.6556980609893799, 1.653937578201294, 1.6522483825683594, 1.650626301765442, 1.6490675210952759, 1.6475682258605957, 1.6461251974105835, 1.644735336303711, 1.6433957815170288, 1.6421037912368774, 1.6408568620681763, 1.6396528482437134, 1.6384893655776978, 1.6373645067214966, 1.636276364326477, 1.635223150253296, 1.634203314781189, 1.6332151889801025, 1.6322572231292725, 1.6313283443450928, 1.6304270029067993, 1.6295521259307861, 1.6287025213241577, 1.627877116203308, 1.6270748376846313, 1.6262948513031006, 1.6255360841751099, 1.6247978210449219, 1.6240792274475098, 1.6233793497085571, 1.6226977109909058, 1.6220334768295288, 1.6213860511779785, 1.6207547187805176, 1.6201390027999878, 1.6195381879806519, 1.6189517974853516, 1.6183794736862183, 1.6178205013275146, 1.6172744035720825, 1.6167409420013428, 1.6162196397781372, 1.615709900856018, 1.6152114868164062, 1.614724040031433, 1.61424720287323, 1.6137806177139282, 1.6133238077163696, 1.6128767728805542, 1.6124389171600342, 1.61201012134552, 1.611590027809143, 1.6111783981323242, 1.6107749938964844, 1.6103795766830444, 1.6099919080734253, 1.6096117496490479, 1.609238862991333, 1.6088731288909912, 1.6085143089294434, 1.6081620454788208, 1.607816457748413, 1.607477068901062, 1.6071439981460571, 1.6068167686462402, 1.6064953804016113, 1.6061798334121704, 1.6058696508407593, 1.6055649518966675, 1.6052653789520264, 1.6049710512161255, 1.6046816110610962, 1.604397177696228, 1.6041172742843628, 1.6038421392440796, 1.6035714149475098, 1.6033052206039429, 1.6030431985855103, 1.6027854681015015, 1.6025316715240479, 1.602281928062439, -1.6020361185073853, -1.602281928062439, -1.6025316715240479, -1.6027854681015015, -1.6030431985855103, -1.6033052206039429, -1.6035714149475098, -1.6038421392440796, -1.6041172742843628, -1.604397177696228, -1.6046816110610962, -1.6049710512161255, -1.6052653789520264, -1.6055649518966675, -1.6058696508407593, -1.6061798334121704, -1.6064953804016113, -1.6068167686462402, -1.6071439981460571, -1.607477068901062, -1.607816457748413, -1.6081620454788208, -1.6085143089294434, -1.6088731288909912, -1.609238862991333, -1.6096117496490479, -1.6099919080734253, -1.6103795766830444, -1.6107749938964844, -1.6111783981323242, -1.611590027809143, -1.61201012134552, -1.6124389171600342, -1.6128767728805542, -1.6133238077163696, -1.6137806177139282, -1.61424720287323, -1.614724040031433, -1.6152114868164062, -1.615709900856018, -1.6162196397781372, -1.6167409420013428, -1.6172744035720825, -1.6178205013275146, -1.6183794736862183, -1.6189517974853516, -1.6195381879806519, -1.6201390027999878, -1.6207547187805176, -1.6213860511779785, -1.6220334768295288, -1.6226977109909058, -1.6233793497085571, -1.6240792274475098, -1.6247978210449219, -1.6255360841751099, -1.6262948513031006, -1.6270748376846313, -1.627877116203308, -1.6287025213241577, -1.6295521259307861, -1.6304270029067993, -1.6313283443450928, -1.6322572231292725, -1.6332151889801025, -1.634203314781189, -1.635223150253296, -1.636276364326477, -1.6373645067214966, -1.6384893655776978, -1.6396528482437134, -1.6408568620681763, -1.6421037912368774, -1.6433957815170288, -1.644735336303711, -1.6461251974105835, -1.6475682258605957, -1.6490675210952759, -1.650626301765442, -1.6522483825683594, -1.653937578201294, -1.6556980609893799, -1.6575347185134888, -1.659452199935913, -1.6614562273025513, -1.6635526418685913, -1.6657480001449585, -1.6680495738983154, -1.6704649925231934, -1.673003077507019, -1.675673246383667, -1.6784862279891968, -1.6814535856246948, -1.6845883131027222, -1.6879050731658936, -1.6914199590682983, -1.6951513290405273, -1.6991195678710938, -1.7033478021621704, -1.7078624963760376, -1.7126933336257935, -1.7178746461868286, -1.7234456539154053, -1.7294515371322632, -1.7359449863433838, -1.7429871559143066, -1.7506498098373413, -1.759017825126648, -1.768191933631897, -1.7782925367355347, -1.789465308189392, -1.801887035369873, -1.8157750368118286, -1.8313987255096436, -1.8490959405899048, -1.8692952394485474, -1.8925468921661377, -1.919567346572876, -1.9513026475906372, -1.9890207052230835, -2.0344438552856445, -2.089942455291748, -2.158798933029175, -2.245537281036377, -2.356194496154785, -2.498091459274292, -2.677945137023926, -2.8966140747070312, 3.1415927410125732, 2.8198421001434326, 2.5535900592803955, 2.356194496154785, 2.2142975330352783, 2.111215829849243, 2.0344438552856445, 1.975688099861145, 1.9295669794082642, 1.8925468921661377, 1.8622530698776245, 1.8370484113693237, 1.8157750368118286, 1.7975951433181763, 1.7818896770477295, 1.768191933631897, 1.7561442852020264, 1.7454684972763062, 1.7359449863433838, 1.727398157119751, 1.7196862697601318, 1.7126933336257935, 1.7063239812850952, 1.7004988193511963, 1.6951513290405273, 1.6902252435684204, 1.6856728792190552, 1.6814535856246948, 1.6775319576263428, 1.6738779544830322, 1.6704649925231934, 1.6672700643539429, 1.6642731428146362, 1.6614562273025513, 1.6588037014007568, 1.6563016176223755, 1.653937578201294, 1.6517003774642944, 1.6495802402496338, 1.6475682258605957, 1.6456562280654907, 1.6438368558883667, 1.6421037912368774, 1.6404509544372559, 1.638872742652893, 1.6373645067214966, 1.6359214782714844, 1.6345396041870117, 1.6332151889801025, 1.6319445371627808, 1.6307244300842285, 1.6295521259307861, 1.6284247636795044, 1.6273397207260132, 1.6262948513031006, 1.6252877712249756, 1.6243165731430054, 1.6233793497085571, 1.6224744319915771, 1.6216000318527222, 1.6207547187805176, 1.6199370622634888, 1.6191457509994507, 1.6183794736862183, 1.617637038230896, 1.6169174909591675, 1.6162196397781372, 1.6155425310134888, 1.6148853302001953, 1.61424720287323, 1.613627314567566, 1.6130247116088867, 1.6124389171600342, 1.6118690967559814, 1.6113146543502808, 1.6107749938964844, 1.6102495193481445, 1.6097376346588135, 1.609238862991333, 1.608752727508545, 1.608278751373291, 1.607816457748413, 1.607365369796753, 1.606925129890442, 1.6064953804016113, 1.6060757637023926, 1.605665922164917, 1.6052653789520264, 1.6048740148544312, 1.6044914722442627, 1.6041172742843628, 1.6037514209747314, 1.6033934354782104, 1.6030431985855103, 1.6027003526687622, 1.6023647785186768, 1.6020361185073853, 1.6017142534255981, 1.6013990640640259, 1.6010900735855103, 1.6007872819900513, 1.6004905700683594, 1.600199580192566, 1.599914312362671, 1.5996345281600952, 1.5993599891662598, 1.5990906953811646, 1.5988264083862305, 1.598567008972168, 1.598312258720398, 1.59806227684021, 1.597816824913025, 1.5975756645202637, 1.5973387956619263, 1.5971060991287231, 1.5968773365020752, 1.596652626991272, 1.5964317321777344, 1.5962145328521729, 1.5960010290145874, 1.5957911014556885, 1.5955846309661865, 1.595381498336792, 1.5951817035675049, 1.5949851274490356, 1.5947917699813843, 1.5946013927459717, 1.5944139957427979, -1.5942295789718628, -1.5944139957427979, -1.5946013927459717, -1.5947917699813843, -1.5949851274490356, -1.5951817035675049, -1.595381498336792, -1.5955846309661865, -1.5957911014556885, -1.5960010290145874, -1.5962145328521729, -1.5964317321777344, -1.596652626991272, -1.5968773365020752, -1.5971060991287231, -1.5973387956619263, -1.5975756645202637, -1.597816824913025, -1.59806227684021, -1.598312258720398, -1.598567008972168, -1.5988264083862305, -1.5990906953811646, -1.5993599891662598, -1.5996345281600952, -1.599914312362671, -1.600199580192566, -1.6004905700683594, -1.6007872819900513, -1.6010900735855103, -1.6013990640640259, -1.6017142534255981, -1.6020361185073853, -1.6023647785186768, -1.6027003526687622, -1.6030431985855103, -1.6033934354782104, -1.6037514209747314, -1.6041172742843628, -1.6044914722442627, -1.6048740148544312, -1.6052653789520264, -1.605665922164917, -1.6060757637023926, -1.6064953804016113, -1.606925129890442, -1.607365369796753, -1.607816457748413, -1.608278751373291, -1.608752727508545, -1.609238862991333, -1.6097376346588135, -1.6102495193481445, -1.6107749938964844, -1.6113146543502808, -1.6118690967559814, -1.6124389171600342, -1.6130247116088867, -1.613627314567566, -1.61424720287323, -1.6148853302001953, -1.6155425310134888, -1.6162196397781372, -1.6169174909591675, -1.617637038230896, -1.6183794736862183, -1.6191457509994507, -1.6199370622634888, -1.6207547187805176, -1.6216000318527222, -1.6224744319915771, -1.6233793497085571, -1.6243165731430054, -1.6252877712249756, -1.6262948513031006, -1.6273397207260132, -1.6284247636795044, -1.6295521259307861, -1.6307244300842285, -1.6319445371627808, -1.6332151889801025, -1.6345396041870117, -1.6359214782714844, -1.6373645067214966, -1.638872742652893, -1.6404509544372559, -1.6421037912368774, -1.6438368558883667, -1.6456562280654907, -1.6475682258605957, -1.6495802402496338, -1.6517003774642944, -1.653937578201294, -1.6563016176223755, -1.6588037014007568, -1.6614562273025513, -1.6642731428146362, -1.6672700643539429, -1.6704649925231934, -1.6738779544830322, -1.6775319576263428, -1.6814535856246948, -1.6856728792190552, -1.6902252435684204, -1.6951513290405273, -1.7004988193511963, -1.7063239812850952, -1.7126933336257935, -1.7196862697601318, -1.727398157119751, -1.7359449863433838, -1.7454684972763062, -1.7561442852020264, -1.768191933631897, -1.7818896770477295, -1.7975951433181763, -1.8157750368118286, -1.8370484113693237, -1.8622530698776245, -1.8925468921661377, -1.9295669794082642, -1.975688099861145, -2.0344438552856445, -2.111215829849243, -2.2142975330352783, -2.356194496154785, -2.5535900592803955, -2.8198421001434326, 3.1415927410125732, 2.677945137023926, 2.356194496154785, 2.158798933029175, 2.0344438552856445, 1.9513026475906372, 1.8925468921661377, 1.8490959405899048, 1.8157750368118286, 1.789465308189392, 1.768191933631897, 1.7506498098373413, 1.7359449863433838, 1.7234456539154053, 1.7126933336257935, 1.7033478021621704, 1.6951513290405273, 1.6879050731658936, 1.6814535856246948, 1.675673246383667, 1.6704649925231934, 1.6657480001449585, 1.6614562273025513, 1.6575347185134888, 1.653937578201294, 1.650626301765442, 1.6475682258605957, 1.644735336303711, 1.6421037912368774, 1.6396528482437134, 1.6373645067214966, 1.635223150253296, 1.6332151889801025, 1.6313283443450928, 1.6295521259307861, 1.627877116203308, 1.6262948513031006, 1.6247978210449219, 1.6233793497085571, 1.6220334768295288, 1.6207547187805176, 1.6195381879806519, 1.6183794736862183, 1.6172744035720825, 1.6162196397781372, 1.6152114868164062, 1.61424720287323, 1.6133238077163696, 1.6124389171600342, 1.611590027809143, 1.6107749938964844, 1.6099919080734253, 1.609238862991333, 1.6085143089294434, 1.607816457748413, 1.6071439981460571, 1.6064953804016113, 1.6058696508407593, 1.6052653789520264, 1.6046816110610962, 1.6041172742843628, 1.6035714149475098, 1.6030431985855103, 1.6025316715240479, 1.6020361185073853, 1.6015558242797852, 1.6010900735855103, 1.6006382703781128, 1.600199580192566, 1.5997737646102905, 1.5993599891662598, 1.598957896232605, 1.598567008972168, 1.598186731338501, 1.597816824913025, 1.597456693649292, 1.5971060991287231, 1.5967645645141602, 1.5964317321777344, 1.5961073637008667, 1.5957911014556885, 1.5954827070236206, 1.5951817035675049, 1.5948880910873413, 1.5946013927459717, 1.594321370124817, 1.5940479040145874, 1.593780755996704, 1.593519687652588, 1.5932644605636597, 1.5930148363113403, 1.5927708148956299, 1.5925320386886597, 1.5922983884811401, 1.5920697450637817, 1.5918458700180054, 1.5916266441345215, 1.5914119482040405, 1.591201663017273, 1.5909955501556396, 1.5907936096191406, 1.5905957221984863, 1.5904016494750977, 1.5902113914489746, 1.590024709701538, 1.589841604232788, 1.589661955833435, 1.589485764503479, 1.5893126726150513, 1.589142918586731, 1.5889761447906494, 1.5888123512268066, 1.5886515378952026, 1.5884935855865479, 1.5883383750915527, 1.5881859064102173, 1.5880359411239624, 1.5878887176513672, 1.587743878364563, 1.5876014232635498, 1.5874614715576172, 1.587323784828186, 1.5871882438659668, 1.5870550870895386, 1.5869239568710327, 1.5867949724197388, 1.5866680145263672, 1.586543083190918, -1.5864200592041016, -1.586543083190918, -1.5866680145263672, -1.5867949724197388, -1.5869239568710327, -1.5870550870895386, -1.5871882438659668, -1.587323784828186, -1.5874614715576172, -1.5876014232635498, -1.587743878364563, -1.5878887176513672, -1.5880359411239624, -1.5881859064102173, -1.5883383750915527, -1.5884935855865479, -1.5886515378952026, -1.5888123512268066, -1.5889761447906494, -1.589142918586731, -1.5893126726150513, -1.589485764503479, -1.589661955833435, -1.589841604232788, -1.590024709701538, -1.5902113914489746, -1.5904016494750977, -1.5905957221984863, -1.5907936096191406, -1.5909955501556396, -1.591201663017273, -1.5914119482040405, -1.5916266441345215, -1.5918458700180054, -1.5920697450637817, -1.5922983884811401, -1.5925320386886597, -1.5927708148956299, -1.5930148363113403, -1.5932644605636597, -1.593519687652588, -1.593780755996704, -1.5940479040145874, -1.594321370124817, -1.5946013927459717, -1.5948880910873413, -1.5951817035675049, -1.5954827070236206, -1.5957911014556885, -1.5961073637008667, -1.5964317321777344, -1.5967645645141602, -1.5971060991287231, -1.597456693649292, -1.597816824913025, -1.598186731338501, -1.598567008972168, -1.598957896232605, -1.5993599891662598, -1.5997737646102905, -1.600199580192566, -1.6006382703781128, -1.6010900735855103, -1.6015558242797852, -1.6020361185073853, -1.6025316715240479, -1.6030431985855103, -1.6035714149475098, -1.6041172742843628, -1.6046816110610962, -1.6052653789520264, -1.6058696508407593, -1.6064953804016113, -1.6071439981460571, -1.607816457748413, -1.6085143089294434, -1.609238862991333, -1.6099919080734253, -1.6107749938964844, -1.611590027809143, -1.6124389171600342, -1.6133238077163696, -1.61424720287323, -1.6152114868164062, -1.6162196397781372, -1.6172744035720825, -1.6183794736862183, -1.6195381879806519, -1.6207547187805176, -1.6220334768295288, -1.6233793497085571, -1.6247978210449219, -1.6262948513031006, -1.627877116203308, -1.6295521259307861, -1.6313283443450928, -1.6332151889801025, -1.635223150253296, -1.6373645067214966, -1.6396528482437134, -1.6421037912368774, -1.644735336303711, -1.6475682258605957, -1.650626301765442, -1.653937578201294, -1.6575347185134888, -1.6614562273025513, -1.6657480001449585, -1.6704649925231934, -1.675673246383667, -1.6814535856246948, -1.6879050731658936, -1.6951513290405273, -1.7033478021621704, -1.7126933336257935, -1.7234456539154053, -1.7359449863433838, -1.7506498098373413, -1.768191933631897, -1.789465308189392, -1.8157750368118286, -1.8490959405899048, -1.8925468921661377, -1.9513026475906372, -2.0344438552856445, -2.158798933029175, -2.356194496154785, -2.677945137023926, 3.1415927410125732, 2.356194496154785, 2.0344438552856445, 1.8925468921661377, 1.8157750368118286, 1.768191933631897, 1.7359449863433838, 1.7126933336257935, 1.6951513290405273, 1.6814535856246948, 1.6704649925231934, 1.6614562273025513, 1.653937578201294, 1.6475682258605957, 1.6421037912368774, 1.6373645067214966, 1.6332151889801025, 1.6295521259307861, 1.6262948513031006, 1.6233793497085571, 1.6207547187805176, 1.6183794736862183, 1.6162196397781372, 1.61424720287323, 1.6124389171600342, 1.6107749938964844, 1.609238862991333, 1.607816457748413, 1.6064953804016113, 1.6052653789520264, 1.6041172742843628, 1.6030431985855103, 1.6020361185073853, 1.6010900735855103, 1.600199580192566, 1.5993599891662598, 1.598567008972168, 1.597816824913025, 1.5971060991287231, 1.5964317321777344, 1.5957911014556885, 1.5951817035675049, 1.5946013927459717, 1.5940479040145874, 1.593519687652588, 1.5930148363113403, 1.5925320386886597, 1.5920697450637817, 1.5916266441345215, 1.591201663017273, 1.5907936096191406, 1.5904016494750977, 1.590024709701538, 1.589661955833435, 1.5893126726150513, 1.5889761447906494, 1.5886515378952026, 1.5883383750915527, 1.5880359411239624, 1.587743878364563, 1.5874614715576172, 1.5871882438659668, 1.5869239568710327, 1.5866680145263672, 1.5864200592041016, 1.5861797332763672, 1.5859466791152954, 1.5857205390930176, 1.5855011940002441, 1.5852880477905273, 1.5850811004638672, 1.5848798751831055, 1.5846843719482422, 1.5844941139221191, 1.5843089818954468, 1.5841288566589355, 1.5839534997940063, 1.5837825536727905, 1.5836161375045776, 1.583453893661499, 1.5832957029342651, 1.5831413269042969, 1.5829908847808838, 1.5828438997268677, 1.582700490951538, 1.5825605392456055, 1.5824236869812012, 1.5822900533676147, 1.5821595191955566, 1.5820318460464478, 1.581907033920288, 1.5817848443984985, 1.5816655158996582, 1.5815485715866089, 1.5814342498779297, 1.5813223123550415, 1.5812126398086548, 1.5811052322387695, 1.5810000896453857, 1.5808969736099243, 1.5807960033416748, 1.580696940422058, 1.5805999040603638, 1.5805047750473022, 1.580411434173584, 1.580319881439209, 1.5802299976348877, 1.5801419019699097, 1.5800553560256958, 1.579970359802246, 1.57988703250885, 1.5798051357269287, 1.579724669456482, 1.5796456336975098, 1.5795680284500122, 1.5794917345046997, 1.5794167518615723, 1.5793430805206299, 1.5792707204818726, 1.5791994333267212, 1.5791294574737549, 1.5790605545043945, 1.5789928436279297, 1.5789262056350708, 1.5788606405258179, 1.578796148300171, 1.5787326097488403, 1.5786701440811157, -1.5786086320877075, -1.5786701440811157, -1.5787326097488403, -1.578796148300171, -1.5788606405258179, -1.5789262056350708, -1.5789928436279297, -1.5790605545043945, -1.5791294574737549, -1.5791994333267212, -1.5792707204818726, -1.5793430805206299, -1.5794167518615723, -1.5794917345046997, -1.5795680284500122, -1.5796456336975098, -1.579724669456482, -1.5798051357269287, -1.57988703250885, -1.579970359802246, -1.5800553560256958, -1.5801419019699097, -1.5802299976348877, -1.580319881439209, -1.580411434173584, -1.5805047750473022, -1.5805999040603638, -1.580696940422058, -1.5807960033416748, -1.5808969736099243, -1.5810000896453857, -1.5811052322387695, -1.5812126398086548, -1.5813223123550415, -1.5814342498779297, -1.5815485715866089, -1.5816655158996582, -1.5817848443984985, -1.581907033920288, -1.5820318460464478, -1.5821595191955566, -1.5822900533676147, -1.5824236869812012, -1.5825605392456055, -1.582700490951538, -1.5828438997268677, -1.5829908847808838, -1.5831413269042969, -1.5832957029342651, -1.583453893661499, -1.5836161375045776, -1.5837825536727905, -1.5839534997940063, -1.5841288566589355, -1.5843089818954468, -1.5844941139221191, -1.5846843719482422, -1.5848798751831055, -1.5850811004638672, -1.5852880477905273, -1.5855011940002441, -1.5857205390930176, -1.5859466791152954, -1.5861797332763672, -1.5864200592041016, -1.5866680145263672, -1.5869239568710327, -1.5871882438659668, -1.5874614715576172, -1.587743878364563, -1.5880359411239624, -1.5883383750915527, -1.5886515378952026, -1.5889761447906494, -1.5893126726150513, -1.589661955833435, -1.590024709701538, -1.5904016494750977, -1.5907936096191406, -1.591201663017273, -1.5916266441345215, -1.5920697450637817, -1.5925320386886597, -1.5930148363113403, -1.593519687652588, -1.5940479040145874, -1.5946013927459717, -1.5951817035675049, -1.5957911014556885, -1.5964317321777344, -1.5971060991287231, -1.597816824913025, -1.598567008972168, -1.5993599891662598, -1.600199580192566, -1.6010900735855103, -1.6020361185073853, -1.6030431985855103, -1.6041172742843628, -1.6052653789520264, -1.6064953804016113, -1.607816457748413, -1.609238862991333, -1.6107749938964844, -1.6124389171600342, -1.61424720287323, -1.6162196397781372, -1.6183794736862183, -1.6207547187805176, -1.6233793497085571, -1.6262948513031006, -1.6295521259307861, -1.6332151889801025, -1.6373645067214966, -1.6421037912368774, -1.6475682258605957, -1.653937578201294, -1.6614562273025513, -1.6704649925231934, -1.6814535856246948, -1.6951513290405273, -1.7126933336257935, -1.7359449863433838, -1.768191933631897, -1.8157750368118286, -1.8925468921661377, -2.0344438552856445, -2.356194496154785, };
const data_t my_LUT_r[] = {0.0, 0.015625, 0.03125, 0.046875, 0.0625, 0.078125, 0.09375, 0.109375, 0.125, 0.140625, 0.15625, 0.171875, 0.1875, 0.203125, 0.21875, 0.234375, 0.25, 0.265625, 0.28125, 0.296875, 0.3125, 0.328125, 0.34375, 0.359375, 0.375, 0.390625, 0.40625, 0.421875, 0.4375, 0.453125, 0.46875, 0.484375, 0.5, 0.515625, 0.53125, 0.546875, 0.5625, 0.578125, 0.59375, 0.609375, 0.625, 0.640625, 0.65625, 0.671875, 0.6875, 0.703125, 0.71875, 0.734375, 0.75, 0.765625, 0.78125, 0.796875, 0.8125, 0.828125, 0.84375, 0.859375, 0.875, 0.890625, 0.90625, 0.921875, 0.9375, 0.953125, 0.96875, 0.984375, 1.0, 1.015625, 1.03125, 1.046875, 1.0625, 1.078125, 1.09375, 1.109375, 1.125, 1.140625, 1.15625, 1.171875, 1.1875, 1.203125, 1.21875, 1.234375, 1.25, 1.265625, 1.28125, 1.296875, 1.3125, 1.328125, 1.34375, 1.359375, 1.375, 1.390625, 1.40625, 1.421875, 1.4375, 1.453125, 1.46875, 1.484375, 1.5, 1.515625, 1.53125, 1.546875, 1.5625, 1.578125, 1.59375, 1.609375, 1.625, 1.640625, 1.65625, 1.671875, 1.6875, 1.703125, 1.71875, 1.734375, 1.75, 1.765625, 1.78125, 1.796875, 1.8125, 1.828125, 1.84375, 1.859375, 1.875, 1.890625, 1.90625, 1.921875, 1.9375, 1.953125, 1.96875, 1.984375, 2.0, 1.984375, 1.96875, 1.953125, 1.9375, 1.921875, 1.90625, 1.890625, 1.875, 1.859375, 1.84375, 1.828125, 1.8125, 1.796875, 1.78125, 1.765625, 1.75, 1.734375, 1.71875, 1.703125, 1.6875, 1.671875, 1.65625, 1.640625, 1.625, 1.609375, 1.59375, 1.578125, 1.5625, 1.546875, 1.53125, 1.515625, 1.5, 1.484375, 1.46875, 1.453125, 1.4375, 1.421875, 1.40625, 1.390625, 1.375, 1.359375, 1.34375, 1.328125, 1.3125, 1.296875, 1.28125, 1.265625, 1.25, 1.234375, 1.21875, 1.203125, 1.1875, 1.171875, 1.15625, 1.140625, 1.125, 1.109375, 1.09375, 1.078125, 1.0625, 1.046875, 1.03125, 1.015625, 1.0, 0.984375, 0.96875, 0.953125, 0.9375, 0.921875, 0.90625, 0.890625, 0.875, 0.859375, 0.84375, 0.828125, 0.8125, 0.796875, 0.78125, 0.765625, 0.75, 0.734375, 0.71875, 0.703125, 0.6875, 0.671875, 0.65625, 0.640625, 0.625, 0.609375, 0.59375, 0.578125, 0.5625, 0.546875, 0.53125, 0.515625, 0.5, 0.484375, 0.46875, 0.453125, 0.4375, 0.421875, 0.40625, 0.390625, 0.375, 0.359375, 0.34375, 0.328125, 0.3125, 0.296875, 0.28125, 0.265625, 0.25, 0.234375, 0.21875, 0.203125, 0.1875, 0.171875, 0.15625, 0.140625, 0.125, 0.109375, 0.09375, 0.078125, 0.0625, 0.046875, 0.03125, 0.015625, 0.015625, 0.022097086533904076, 0.03493856266140938, 0.049410589039325714, 0.06442352384328842, 0.0796721801161766, 0.09504316747188568, 0.11048543453216553, 0.12597277760505676, 0.1414903998374939, 0.15702930092811584, 0.17258375883102417, 0.18814991414546967, 0.20372506976127625, 0.2193073183298111, 0.234895259141922, 0.2504878044128418, 0.2660841643810272, 0.28168368339538574, 0.29728591442108154, 0.3128903806209564, 0.3284968137741089, 0.34410491585731506, 0.3597145080566406, 0.37532538175582886, 0.3909373879432678, 0.4065503776073456, 0.42216426134109497, 0.43777891993522644, 0.4533943235874176, 0.4690103530883789, 0.4846269488334656, 0.5002440810203552, 0.5158616900444031, 0.5314797163009644, 0.5470981597900391, 0.5627169609069824, 0.5783361196517944, 0.5939555764198303, 0.6095752716064453, 0.6251952648162842, 0.6408154964447021, 0.6564359664916992, 0.6720566749572754, 0.6876775622367859, 0.7032985687255859, 0.7189198136329651, 0.7345411777496338, 0.7501627206802368, 0.7657844424247742, 0.7814062237739563, 0.7970281839370728, 0.812650203704834, 0.8282724022865295, 0.8438946604728699, 0.8595170378684998, 0.8751394748687744, 0.8907620310783386, 0.9063847064971924, 0.9220073819160461, 0.9376301765441895, 0.9532530903816223, 0.9688760042190552, 0.9844989776611328, 1.0001220703125, 1.0157451629638672, 1.031368374824524, 1.0469915866851807, 1.062614917755127, 1.0782382488250732, 1.0938615798950195, 1.1094850301742554, 1.1251084804534912, 1.1407320499420166, 1.156355619430542, 1.1719791889190674, 1.1876027584075928, 1.2032264471054077, 1.2188501358032227, 1.2344739437103271, 1.250097632408142, 1.2657214403152466, 1.281345248222351, 1.2969691753387451, 1.3125929832458496, 1.3282169103622437, 1.3438408374786377, 1.3594647645950317, 1.3750888109207153, 1.3907127380371094, 1.406336784362793, 1.4219608306884766, 1.4375848770141602, 1.4532090425491333, 1.468833088874817, 1.48445725440979, 1.5000814199447632, 1.5157055854797363, 1.5313297510147095, 1.5469539165496826, 1.5625780820846558, 1.5782023668289185, 1.5938265323638916, 1.6094508171081543, 1.625075101852417, 1.6406993865966797, 1.6563236713409424, 1.671947956085205, 1.6875723600387573, 1.70319664478302, 1.7188210487365723, 1.734445333480835, 1.7500697374343872, 1.7656941413879395, 1.7813185453414917, 1.796942949295044, 1.8125673532485962, 1.8281917572021484, 1.8438161611557007, 1.8594406843185425, 1.8750650882720947, 1.8906896114349365, 1.9063140153884888, 1.9219385385513306, 1.9375630617141724, 1.9531874656677246, 1.9688119888305664, 1.9844365119934082, 2.00006103515625, 1.9844365119934082, 1.9688119888305664, 1.9531874656677246, 1.9375630617141724, 1.9219385385513306, 1.9063140153884888, 1.8906896114349365, 1.8750650882720947, 1.8594406843185425, 1.8438161611557007, 1.8281917572021484, 1.8125673532485962, 1.796942949295044, 1.7813185453414917, 1.7656941413879395, 1.7500697374343872, 1.734445333480835, 1.7188210487365723, 1.70319664478302, 1.6875723600387573, 1.671947956085205, 1.6563236713409424, 1.6406993865966797, 1.625075101852417, 1.6094508171081543, 1.5938265323638916, 1.5782023668289185, 1.5625780820846558, 1.5469539165496826, 1.5313297510147095, 1.5157055854797363, 1.5000814199447632, 1.48445725440979, 1.468833088874817, 1.4532090425491333, 1.4375848770141602, 1.4219608306884766, 1.406336784362793, 1.3907127380371094, 1.3750888109207153, 1.3594647645950317, 1.3438408374786377, 1.3282169103622437, 1.3125929832458496, 1.2969691753387451, 1.281345248222351, 1.2657214403152466, 1.250097632408142, 1.2344739437103271, 1.2188501358032227, 1.2032264471054077, 1.1876027584075928, 1.1719791889190674, 1.156355619430542, 1.1407320499420166, 1.1251084804534912, 1.1094850301742554, 1.0938615798950195, 1.0782382488250732, 1.062614917755127, 1.0469915866851807, 1.031368374824524, 1.0157451629638672, 1.0001220703125, 0.9844989776611328, 0.9688760042190552, 0.9532530903816223, 0.9376301765441895, 0.9220073819160461, 0.9063847064971924, 0.8907620310783386, 0.8751394748687744, 0.8595170378684998, 0.8438946604728699, 0.8282724022865295, 0.812650203704834, 0.7970281839370728, 0.7814062237739563, 0.7657844424247742, 0.7501627206802368, 0.7345411777496338, 0.7189198136329651, 0.7032985687255859, 0.6876775622367859, 0.6720566749572754, 0.6564359664916992, 0.6408154964447021, 0.6251952648162842, 0.6095752716064453, 0.5939555764198303, 0.5783361196517944, 0.5627169609069824, 0.5470981597900391, 0.5314797163009644, 0.5158616900444031, 0.5002440810203552, 0.4846269488334656, 0.4690103530883789, 0.4533943235874176, 0.43777891993522644, 0.42216426134109497, 0.4065503776073456, 0.3909373879432678, 0.37532538175582886, 0.3597145080566406, 0.34410491585731506, 0.3284968137741089, 0.3128903806209564, 0.29728591442108154, 0.28168368339538574, 0.2660841643810272, 0.2504878044128418, 0.234895259141922, 0.2193073183298111, 0.20372506976127625, 0.18814991414546967, 0.17258375883102417, 0.15702930092811584, 0.1414903998374939, 0.12597277760505676, 0.11048543453216553, 0.09504316747188568, 0.0796721801161766, 0.06442352384328842, 0.049410589039325714, 0.03493856266140938, 0.022097086533904076, 0.03125, 0.03493856266140938, 0.04419417306780815, 0.05633673816919327, 0.06987712532281876, 0.08414319902658463, 0.09882117807865143, 0.11375171691179276, 0.12884704768657684, 0.14405538141727448, 0.1593443602323532, 0.1746928095817566, 0.19008633494377136, 0.2055147886276245, 0.22097086906433105, 0.23644915223121643, 0.2519455552101135, 0.26745691895484924, 0.2829807996749878, 0.2985152006149292, 0.3140586018562317, 0.3296097218990326, 0.34516751766204834, 0.3607311248779297, 0.37629982829093933, 0.39187300205230713, 0.4074501395225525, 0.423030823469162, 0.4386146366596222, 0.4542013108730316, 0.469790518283844, 0.4853820204734802, 0.5009756088256836, 0.5165711045265198, 0.5321683287620544, 0.5477671027183533, 0.5633673667907715, 0.5789690017700195, 0.5945718288421631, 0.6101757287979126, 0.6257807612419128, 0.6413867473602295, 0.6569936275482178, 0.6726013422012329, 0.6882098317146301, 0.7038190960884094, 0.7194290161132812, 0.7350395917892456, 0.7506507635116577, 0.7662624716758728, 0.7818747758865356, 0.7974874973297119, 0.8131007552146912, 0.8287144303321838, 0.8443285226821899, 0.8599429726600647, 0.8755578398704529, 0.8911730647087097, 0.9067886471748352, 0.9224045276641846, 0.9380207061767578, 0.9536371827125549, 0.9692538976669312, 0.9848709106445312, 1.0004881620407104, 1.0161056518554688, 1.0317233800888062, 1.0473413467407227, 1.0629594326019287, 1.0785777568817139, 1.0941963195800781, 1.109815001487732, 1.1254339218139648, 1.1410529613494873, 1.1566722393035889, 1.17229163646698, 1.1879111528396606, 1.2035307884216309, 1.2191505432128906, 1.2347705364227295, 1.2503905296325684, 1.2660107612609863, 1.2816309928894043, 1.2972514629364014, 1.3128719329833984, 1.3284926414489746, 1.3441133499145508, 1.3597341775894165, 1.3753551244735718, 1.390976071357727, 1.4065971374511719, 1.4222183227539062, 1.4378396272659302, 1.453460931777954, 1.4690823554992676, 1.4847038984298706, 1.5003254413604736, 1.5159471035003662, 1.5315688848495483, 1.5471906661987305, 1.5628124475479126, 1.5784343481063843, 1.5940563678741455, 1.6096783876419067, 1.625300407409668, 1.6409225463867188, 1.656544804573059, 1.6721670627593994, 1.6877893209457397, 1.7034116983413696, 1.7190340757369995, 1.7346564531326294, 1.7502789497375488, 1.7659015655517578, 1.7815240621566772, 1.7971466779708862, 1.8127694129943848, 1.8283920288085938, 1.8440147638320923, 1.8596376180648804, 1.875260353088379, 1.890883207321167, 1.9065061807632446, 1.9221290349960327, 1.9377520084381104, 1.953374981880188, 1.9689979553222656, 1.9846210479736328, 2.000244140625, 1.9846210479736328, 1.9689979553222656, 1.953374981880188, 1.9377520084381104, 1.9221290349960327, 1.9065061807632446, 1.890883207321167, 1.875260353088379, 1.8596376180648804, 1.8440147638320923, 1.8283920288085938, 1.8127694129943848, 1.7971466779708862, 1.7815240621566772, 1.7659015655517578, 1.7502789497375488, 1.7346564531326294, 1.7190340757369995, 1.7034116983413696, 1.6877893209457397, 1.6721670627593994, 1.656544804573059, 1.6409225463867188, 1.625300407409668, 1.6096783876419067, 1.5940563678741455, 1.5784343481063843, 1.5628124475479126, 1.5471906661987305, 1.5315688848495483, 1.5159471035003662, 1.5003254413604736, 1.4847038984298706, 1.4690823554992676, 1.453460931777954, 1.4378396272659302, 1.4222183227539062, 1.4065971374511719, 1.390976071357727, 1.3753551244735718, 1.3597341775894165, 1.3441133499145508, 1.3284926414489746, 1.3128719329833984, 1.2972514629364014, 1.2816309928894043, 1.2660107612609863, 1.2503905296325684, 1.2347705364227295, 1.2191505432128906, 1.2035307884216309, 1.1879111528396606, 1.17229163646698, 1.1566722393035889, 1.1410529613494873, 1.1254339218139648, 1.109815001487732, 1.0941963195800781, 1.0785777568817139, 1.0629594326019287, 1.0473413467407227, 1.0317233800888062, 1.0161056518554688, 1.0004881620407104, 0.9848709106445312, 0.9692538976669312, 0.9536371827125549, 0.9380207061767578, 0.9224045276641846, 0.9067886471748352, 0.8911730647087097, 0.8755578398704529, 0.8599429726600647, 0.8443285226821899, 0.8287144303321838, 0.8131007552146912, 0.7974874973297119, 0.7818747758865356, 0.7662624716758728, 0.7506507635116577, 0.7350395917892456, 0.7194290161132812, 0.7038190960884094, 0.6882098317146301, 0.6726013422012329, 0.6569936275482178, 0.6413867473602295, 0.6257807612419128, 0.6101757287979126, 0.5945718288421631, 0.5789690017700195, 0.5633673667907715, 0.5477671027183533, 0.5321683287620544, 0.5165711045265198, 0.5009756088256836, 0.4853820204734802, 0.469790518283844, 0.4542013108730316, 0.4386146366596222, 0.423030823469162, 0.4074501395225525, 0.39187300205230713, 0.37629982829093933, 0.3607311248779297, 0.34516751766204834, 0.3296097218990326, 0.3140586018562317, 0.2985152006149292, 0.2829807996749878, 0.26745691895484924, 0.2519455552101135, 0.23644915223121643, 0.22097086906433105, 0.2055147886276245, 0.19008633494377136, 0.1746928095817566, 0.1593443602323532, 0.14405538141727448, 0.12884704768657684, 0.11375171691179276, 0.09882117807865143, 0.08414319902658463, 0.06987712532281876, 0.05633673816919327, 0.04419417306780815, 0.03493856266140938, 0.046875, 0.049410589039325714, 0.05633673816919327, 0.06629125773906708, 0.078125, 0.09110862016677856, 0.10481568425893784, 0.11899645626544952, 0.13350005447864532, 0.14823175966739655, 0.1631297916173935, 0.1781524121761322, 0.19327057898044586, 0.20846350491046906, 0.22371596097946167, 0.23901653289794922, 0.2543565630912781, 0.2697293162345886, 0.28512948751449585, 0.3005528748035431, 0.31599608063697815, 0.3314563035964966, 0.3469313085079193, 0.36241915822029114, 0.3779183328151703, 0.39342746138572693, 0.40894538164138794, 0.4244711697101593, 0.44000399112701416, 0.4555431306362152, 0.4710879325866699, 0.4866378605365753, 0.5021924376487732, 0.5177512764930725, 0.5333139896392822, 0.5488802790641785, 0.5644497275352478, 0.5800222158432007, 0.5955974459648132, 0.6111752390861511, 0.6267553567886353, 0.6423376202583313, 0.6579219698905945, 0.6735081672668457, 0.6890961527824402, 0.7046857476234436, 0.7202768921852112, 0.7358694672584534, 0.7514634132385254, 0.7670586109161377, 0.7826550006866455, 0.7982524633407593, 0.8138510584831238, 0.8294506072998047, 0.845051109790802, 0.8606524467468262, 0.876254677772522, 0.8918576836585999, 0.9074614644050598, 0.9230659604072571, 0.9386711716651917, 0.954276978969574, 0.969883382320404, 0.9854904413223267, 1.0010980367660522, 1.016706109046936, 1.0323147773742676, 1.0479239225387573, 1.0635335445404053, 1.0791435241699219, 1.0947539806365967, 1.1103649139404297, 1.1259760856628418, 1.141587734222412, 1.157199740409851, 1.1728121042251587, 1.188424825668335, 1.2040377855300903, 1.2196511030197144, 1.2352646589279175, 1.2508785724639893, 1.2664927244186401, 1.2821072340011597, 1.2977218627929688, 1.313336730003357, 1.3289519548416138, 1.3445672988891602, 1.3601830005645752, 1.3757988214492798, 1.391414761543274, 1.4070310592651367, 1.422647476196289, 1.438264012336731, 1.4538809061050415, 1.469497799873352, 1.4851149320602417, 1.5007323026657104, 1.5163496732711792, 1.531967282295227, 1.5475850105285645, 1.563202977180481, 1.578821063041687, 1.594439148902893, 1.6100574731826782, 1.625675916671753, 1.6412944793701172, 1.656913161277771, 1.6725319623947144, 1.6881508827209473, 1.7037699222564697, 1.7193890810012817, 1.7350083589553833, 1.7506276369094849, 1.7662471532821655, 1.7818666696548462, 1.7974863052368164, 1.8131060600280762, 1.828725814819336, 1.8443458080291748, 1.8599658012390137, 1.8755857944488525, 1.8912060260772705, 1.9068262577056885, 1.922446608543396, 1.9380669593811035, 1.9536874294281006, 1.9693078994750977, 1.9849286079406738, 2.00054931640625, 1.9849286079406738, 1.9693078994750977, 1.9536874294281006, 1.9380669593811035, 1.922446608543396, 1.9068262577056885, 1.8912060260772705, 1.8755857944488525, 1.8599658012390137, 1.8443458080291748, 1.828725814819336, 1.8131060600280762, 1.7974863052368164, 1.7818666696548462, 1.7662471532821655, 1.7506276369094849, 1.7350083589553833, 1.7193890810012817, 1.7037699222564697, 1.6881508827209473, 1.6725319623947144, 1.656913161277771, 1.6412944793701172, 1.625675916671753, 1.6100574731826782, 1.594439148902893, 1.578821063041687, 1.563202977180481, 1.5475850105285645, 1.531967282295227, 1.5163496732711792, 1.5007323026657104, 1.4851149320602417, 1.469497799873352, 1.4538809061050415, 1.438264012336731, 1.422647476196289, 1.4070310592651367, 1.391414761543274, 1.3757988214492798, 1.3601830005645752, 1.3445672988891602, 1.3289519548416138, 1.313336730003357, 1.2977218627929688, 1.2821072340011597, 1.2664927244186401, 1.2508785724639893, 1.2352646589279175, 1.2196511030197144, 1.2040377855300903, 1.188424825668335, 1.1728121042251587, 1.157199740409851, 1.141587734222412, 1.1259760856628418, 1.1103649139404297, 1.0947539806365967, 1.0791435241699219, 1.0635335445404053, 1.0479239225387573, 1.0323147773742676, 1.016706109046936, 1.0010980367660522, 0.9854904413223267, 0.969883382320404, 0.954276978969574, 0.9386711716651917, 0.9230659604072571, 0.9074614644050598, 0.8918576836585999, 0.876254677772522, 0.8606524467468262, 0.845051109790802, 0.8294506072998047, 0.8138510584831238, 0.7982524633407593, 0.7826550006866455, 0.7670586109161377, 0.7514634132385254, 0.7358694672584534, 0.7202768921852112, 0.7046857476234436, 0.6890961527824402, 0.6735081672668457, 0.6579219698905945, 0.6423376202583313, 0.6267553567886353, 0.6111752390861511, 0.5955974459648132, 0.5800222158432007, 0.5644497275352478, 0.5488802790641785, 0.5333139896392822, 0.5177512764930725, 0.5021924376487732, 0.4866378605365753, 0.4710879325866699, 0.4555431306362152, 0.44000399112701416, 0.4244711697101593, 0.40894538164138794, 0.39342746138572693, 0.3779183328151703, 0.36241915822029114, 0.3469313085079193, 0.3314563035964966, 0.31599608063697815, 0.3005528748035431, 0.28512948751449585, 0.2697293162345886, 0.2543565630912781, 0.23901653289794922, 0.22371596097946167, 0.20846350491046906, 0.19327057898044586, 0.1781524121761322, 0.1631297916173935, 0.14823175966739655, 0.13350005447864532, 0.11899645626544952, 0.10481568425893784, 0.09110862016677856, 0.078125, 0.06629125773906708, 0.05633673816919327, 0.049410589039325714, 0.0625, 0.06442352384328842, 0.06987712532281876, 0.078125, 0.0883883461356163, 0.10004881769418716, 0.11267347633838654, 0.12597277760505676, 0.1397542506456375, 0.15388840436935425, 0.16828639805316925, 0.18288592994213104, 0.19764235615730286, 0.2125229835510254, 0.2275034338235855, 0.24256522953510284, 0.2576940953731537, 0.27287888526916504, 0.28811076283454895, 0.30338263511657715, 0.3186887204647064, 0.3340243399143219, 0.3493856191635132, 0.36476930975914, 0.3801726698875427, 0.39559340476989746, 0.411029577255249, 0.4264794886112213, 0.4419417381286621, 0.45741504430770874, 0.47289830446243286, 0.48839062452316284, 0.503891110420227, 0.5193990468978882, 0.5349138379096985, 0.5504348278045654, 0.5659615993499756, 0.5814935564994812, 0.5970304012298584, 0.6125717163085938, 0.6281172037124634, 0.6436665654182434, 0.6592194437980652, 0.6747757196426392, 0.6903350353240967, 0.705897331237793, 0.7214622497558594, 0.7370297908782959, 0.7525996565818787, 0.7681717872619629, 0.7837460041046143, 0.799322247505188, 0.814900279045105, 0.83048015832901, 0.846061646938324, 0.8616447448730469, 0.8772292733192444, 0.8928152918815613, 0.9084026217460632, 0.9239912033081055, 0.939581036567688, 0.9551720023155212, 0.9707640409469604, 0.9863571524620056, 1.0019512176513672, 1.01754629611969, 1.0331422090530396, 1.048738956451416, 1.0643366575241089, 1.079935073852539, 1.0955342054367065, 1.1111341714859009, 1.126734733581543, 1.1423360109329224, 1.157938003540039, 1.173540472984314, 1.1891436576843262, 1.2047473192214966, 1.2203514575958252, 1.2359563112258911, 1.2515615224838257, 1.267167329788208, 1.282773494720459, 1.2983801364898682, 1.3139872550964355, 1.3295947313308716, 1.3452026844024658, 1.3608109951019287, 1.3764196634292603, 1.39202880859375, 1.4076381921768188, 1.4232479333877563, 1.4388580322265625, 1.4544684886932373, 1.4700791835784912, 1.4856902360916138, 1.5013015270233154, 1.5169130563735962, 1.5325249433517456, 1.5481370687484741, 1.5637495517730713, 1.579362154006958, 1.5949749946594238, 1.6105881929397583, 1.6262015104293823, 1.6418150663375854, 1.6574288606643677, 1.6730427742004395, 1.6886570453643799, 1.7042714357376099, 1.7198859453201294, 1.7355008125305176, 1.7511156797409058, 1.7667309045791626, 1.7823461294174194, 1.7979615926742554, 1.8135772943496704, 1.829193115234375, 1.8448090553283691, 1.8604251146316528, 1.8760414123535156, 1.891657829284668, 1.9072743654251099, 1.9228910207748413, 1.9385077953338623, 1.9541246891021729, 1.9697418212890625, 1.9853589534759521, 2.000976324081421, 1.9853589534759521, 1.9697418212890625, 1.9541246891021729, 1.9385077953338623, 1.9228910207748413, 1.9072743654251099, 1.891657829284668, 1.8760414123535156, 1.8604251146316528, 1.8448090553283691, 1.829193115234375, 1.8135772943496704, 1.7979615926742554, 1.7823461294174194, 1.7667309045791626, 1.7511156797409058, 1.7355008125305176, 1.7198859453201294, 1.7042714357376099, 1.6886570453643799, 1.6730427742004395, 1.6574288606643677, 1.6418150663375854, 1.6262015104293823, 1.6105881929397583, 1.5949749946594238, 1.579362154006958, 1.5637495517730713, 1.5481370687484741, 1.5325249433517456, 1.5169130563735962, 1.5013015270233154, 1.4856902360916138, 1.4700791835784912, 1.4544684886932373, 1.4388580322265625, 1.4232479333877563, 1.4076381921768188, 1.39202880859375, 1.3764196634292603, 1.3608109951019287, 1.3452026844024658, 1.3295947313308716, 1.3139872550964355, 1.2983801364898682, 1.282773494720459, 1.267167329788208, 1.2515615224838257, 1.2359563112258911, 1.2203514575958252, 1.2047473192214966, 1.1891436576843262, 1.173540472984314, 1.157938003540039, 1.1423360109329224, 1.126734733581543, 1.1111341714859009, 1.0955342054367065, 1.079935073852539, 1.0643366575241089, 1.048738956451416, 1.0331422090530396, 1.01754629611969, 1.0019512176513672, 0.9863571524620056, 0.9707640409469604, 0.9551720023155212, 0.939581036567688, 0.9239912033081055, 0.9084026217460632, 0.8928152918815613, 0.8772292733192444, 0.8616447448730469, 0.846061646938324, 0.83048015832901, 0.814900279045105, 0.799322247505188, 0.7837460041046143, 0.7681717872619629, 0.7525996565818787, 0.7370297908782959, 0.7214622497558594, 0.705897331237793, 0.6903350353240967, 0.6747757196426392, 0.6592194437980652, 0.6436665654182434, 0.6281172037124634, 0.6125717163085938, 0.5970304012298584, 0.5814935564994812, 0.5659615993499756, 0.5504348278045654, 0.5349138379096985, 0.5193990468978882, 0.503891110420227, 0.48839062452316284, 0.47289830446243286, 0.45741504430770874, 0.4419417381286621, 0.4264794886112213, 0.411029577255249, 0.39559340476989746, 0.3801726698875427, 0.36476930975914, 0.3493856191635132, 0.3340243399143219, 0.3186887204647064, 0.30338263511657715, 0.28811076283454895, 0.27287888526916504, 0.2576940953731537, 0.24256522953510284, 0.2275034338235855, 0.2125229835510254, 0.19764235615730286, 0.18288592994213104, 0.16828639805316925, 0.15388840436935425, 0.1397542506456375, 0.12597277760505676, 0.11267347633838654, 0.10004881769418716, 0.0883883461356163, 0.078125, 0.06987712532281876, 0.06442352384328842, 0.078125, 0.0796721801161766, 0.08414319902658463, 0.09110862016677856, 0.10004881769418716, 0.11048543453216553, 0.12203515321016312, 0.13441133499145508, 0.1474059522151947, 0.16086922585964203, 0.1746928095817566, 0.18879759311676025, 0.203125, 0.21763107180595398, 0.23228232562541962, 0.24705293774604797, 0.2619227170944214, 0.27687570452690125, 0.29189908504486084, 0.30698254704475403, 0.3221176266670227, 0.33729737997055054, 0.3525160551071167, 0.3677688241004944, 0.3830515742301941, 0.3983609080314636, 0.4136938154697418, 0.4290478229522705, 0.4444206953048706, 0.4598105847835541, 0.4752158224582672, 0.490634948015213, 0.5060667395591736, 0.5215100049972534, 0.5369637608528137, 0.5524271726608276, 0.5678994059562683, 0.5833798050880432, 0.5988677740097046, 0.6143625974655151, 0.6298638582229614, 0.64537113904953, 0.6608839631080627, 0.6764019131660461, 0.6919246912002563, 0.7074519395828247, 0.7229834794998169, 0.7385188937187195, 0.7540580034255981, 0.7696006298065186, 0.7851465344429016, 0.8006954789161682, 0.8162473440170288, 0.8318019509315491, 0.8473591804504395, 0.8629188537597656, 0.8784807920455933, 0.8940449953079224, 0.9096112251281738, 0.9251794815063477, 0.9407495856285095, 0.9563214778900146, 0.9718950986862183, 0.9874703288078308, 1.0030471086502075, 1.0186253786087036, 1.0342050790786743, 1.04978609085083, 1.065368413925171, 1.0809519290924072, 1.096536636352539, 1.1121225357055664, 1.1277093887329102, 1.1432974338531494, 1.1588863134384155, 1.1744762659072876, 1.190067172050476, 1.2056589126586914, 1.2212514877319336, 1.2368448972702026, 1.252439022064209, 1.2680339813232422, 1.2836296558380127, 1.2992260456085205, 1.3148231506347656, 1.3304208517074585, 1.3460191488265991, 1.361618161201477, 1.3772176504135132, 1.392817735671997, 1.4084184169769287, 1.424019694328308, 1.4396214485168457, 1.455223560333252, 1.470826268196106, 1.4864294528961182, 1.5020331144332886, 1.5176372528076172, 1.5332417488098145, 1.5488466024398804, 1.5644519329071045, 1.5800576210021973, 1.5956636667251587, 1.6112700700759888, 1.626876950263977, 1.6424840688705444, 1.6580915451049805, 1.6736993789672852, 1.689307451248169, 1.7049158811569214, 1.7205246686935425, 1.7361336946487427, 1.751742959022522, 1.76735258102417, 1.782962441444397, 1.7985725402832031, 1.814182996749878, 1.8297935724258423, 1.8454045057296753, 1.8610155582427979, 1.8766268491744995, 1.8922384977340698, 1.9078502655029297, 1.9234622716903687, 1.9390745162963867, 1.9546868801116943, 1.970299482345581, 1.9859123229980469, 2.001525402069092, 1.9859123229980469, 1.970299482345581, 1.9546868801116943, 1.9390745162963867, 1.9234622716903687, 1.9078502655029297, 1.8922384977340698, 1.8766268491744995, 1.8610155582427979, 1.8454045057296753, 1.8297935724258423, 1.814182996749878, 1.7985725402832031, 1.782962441444397, 1.76735258102417, 1.751742959022522, 1.7361336946487427, 1.7205246686935425, 1.7049158811569214, 1.689307451248169, 1.6736993789672852, 1.6580915451049805, 1.6424840688705444, 1.626876950263977, 1.6112700700759888, 1.5956636667251587, 1.5800576210021973, 1.5644519329071045, 1.5488466024398804, 1.5332417488098145, 1.5176372528076172, 1.5020331144332886, 1.4864294528961182, 1.470826268196106, 1.455223560333252, 1.4396214485168457, 1.424019694328308, 1.4084184169769287, 1.392817735671997, 1.3772176504135132, 1.361618161201477, 1.3460191488265991, 1.3304208517074585, 1.3148231506347656, 1.2992260456085205, 1.2836296558380127, 1.2680339813232422, 1.252439022064209, 1.2368448972702026, 1.2212514877319336, 1.2056589126586914, 1.190067172050476, 1.1744762659072876, 1.1588863134384155, 1.1432974338531494, 1.1277093887329102, 1.1121225357055664, 1.096536636352539, 1.0809519290924072, 1.065368413925171, 1.04978609085083, 1.0342050790786743, 1.0186253786087036, 1.0030471086502075, 0.9874703288078308, 0.9718950986862183, 0.9563214778900146, 0.9407495856285095, 0.9251794815063477, 0.9096112251281738, 0.8940449953079224, 0.8784807920455933, 0.8629188537597656, 0.8473591804504395, 0.8318019509315491, 0.8162473440170288, 0.8006954789161682, 0.7851465344429016, 0.7696006298065186, 0.7540580034255981, 0.7385188937187195, 0.7229834794998169, 0.7074519395828247, 0.6919246912002563, 0.6764019131660461, 0.6608839631080627, 0.64537113904953, 0.6298638582229614, 0.6143625974655151, 0.5988677740097046, 0.5833798050880432, 0.5678994059562683, 0.5524271726608276, 0.5369637608528137, 0.5215100049972534, 0.5060667395591736, 0.490634948015213, 0.4752158224582672, 0.4598105847835541, 0.4444206953048706, 0.4290478229522705, 0.4136938154697418, 0.3983609080314636, 0.3830515742301941, 0.3677688241004944, 0.3525160551071167, 0.33729737997055054, 0.3221176266670227, 0.30698254704475403, 0.29189908504486084, 0.27687570452690125, 0.2619227170944214, 0.24705293774604797, 0.23228232562541962, 0.21763107180595398, 0.203125, 0.18879759311676025, 0.1746928095817566, 0.16086922585964203, 0.1474059522151947, 0.13441133499145508, 0.12203515321016312, 0.11048543453216553, 0.10004881769418716, 0.09110862016677856, 0.08414319902658463, 0.0796721801161766, 0.09375, 0.09504316747188568, 0.09882117807865143, 0.10481568425893784, 0.11267347633838654, 0.12203515321016312, 0.13258251547813416, 0.14405538141727448, 0.15625, 0.1690102219581604, 0.18221724033355713, 0.1957806944847107, 0.20963136851787567, 0.22371596097946167, 0.23799291253089905, 0.2524296045303345, 0.26700010895729065, 0.28168368339538574, 0.2964635193347931, 0.31132590770721436, 0.326259583234787, 0.34125515818595886, 0.3563048243522644, 0.37140199542045593, 0.3865411579608917, 0.40171751379966736, 0.4169270098209381, 0.4321661591529846, 0.44743192195892334, 0.46272164583206177, 0.47803306579589844, 0.493364155292511, 0.5087131261825562, 0.5240784287452698, 0.5394586324691772, 0.5548525452613831, 0.5702589750289917, 0.5856770277023315, 0.6011057496070862, 0.6165443658828735, 0.6319921612739563, 0.6474484205245972, 0.6629126071929932, 0.6783841848373413, 0.6938626170158386, 0.7093474864959717, 0.7248383164405823, 0.7403348684310913, 0.7558366656303406, 0.771343469619751, 0.7868549227714539, 0.8023707270622253, 0.8178907632827759, 0.8334147334098816, 0.8489423394203186, 0.8644735217094421, 0.8800079822540283, 0.8955456018447876, 0.9110862612724304, 0.9266296625137329, 0.9421758651733398, 0.9577245712280273, 0.9732757210731506, 0.9888291954994202, 1.0043848752975464, 1.0199427604675293, 1.035502552986145, 1.051064372062683, 1.0666279792785645, 1.082193374633789, 1.097760558128357, 1.1133291721343994, 1.1288994550704956, 1.144471287727356, 1.1600444316864014, 1.1756190061569214, 1.1911948919296265, 1.2067720890045166, 1.2223504781723022, 1.2379300594329834, 1.2535107135772705, 1.2690924406051636, 1.2846752405166626, 1.3002591133117676, 1.315843939781189, 1.3314297199249268, 1.3470163345336914, 1.3626039028167725, 1.3781923055648804, 1.3937815427780151, 1.4093714952468872, 1.4249622821807861, 1.4405537843704224, 1.456146001815796, 1.4717389345169067, 1.4873325824737549, 1.5029268264770508, 1.5185216665267944, 1.5341172218322754, 1.5497132539749146, 1.565310001373291, 1.5809072256088257, 1.5965049266815186, 1.6121032238006592, 1.6277021169662476, 1.6433013677597046, 1.6589012145996094, 1.6745014190673828, 1.690102219581604, 1.7057033777236938, 1.7213048934936523, 1.736906886100769, 1.752509355545044, 1.7681121826171875, 1.7837153673171997, 1.7993190288543701, 1.8149229288101196, 1.8305273056030273, 1.8461319208145142, 1.8617368936538696, 1.8773423433303833, 1.8929479122161865, 1.908553957939148, 1.9241602420806885, 1.939766764640808, 1.955373764038086, 1.9709808826446533, 1.9865883588790894, 2.0021960735321045, 1.9865883588790894, 1.9709808826446533, 1.955373764038086, 1.939766764640808, 1.9241602420806885, 1.908553957939148, 1.8929479122161865, 1.8773423433303833, 1.8617368936538696, 1.8461319208145142, 1.8305273056030273, 1.8149229288101196, 1.7993190288543701, 1.7837153673171997, 1.7681121826171875, 1.752509355545044, 1.736906886100769, 1.7213048934936523, 1.7057033777236938, 1.690102219581604, 1.6745014190673828, 1.6589012145996094, 1.6433013677597046, 1.6277021169662476, 1.6121032238006592, 1.5965049266815186, 1.5809072256088257, 1.565310001373291, 1.5497132539749146, 1.5341172218322754, 1.5185216665267944, 1.5029268264770508, 1.4873325824737549, 1.4717389345169067, 1.456146001815796, 1.4405537843704224, 1.4249622821807861, 1.4093714952468872, 1.3937815427780151, 1.3781923055648804, 1.3626039028167725, 1.3470163345336914, 1.3314297199249268, 1.315843939781189, 1.3002591133117676, 1.2846752405166626, 1.2690924406051636, 1.2535107135772705, 1.2379300594329834, 1.2223504781723022, 1.2067720890045166, 1.1911948919296265, 1.1756190061569214, 1.1600444316864014, 1.144471287727356, 1.1288994550704956, 1.1133291721343994, 1.097760558128357, 1.082193374633789, 1.0666279792785645, 1.051064372062683, 1.035502552986145, 1.0199427604675293, 1.0043848752975464, 0.9888291954994202, 0.9732757210731506, 0.9577245712280273, 0.9421758651733398, 0.9266296625137329, 0.9110862612724304, 0.8955456018447876, 0.8800079822540283, 0.8644735217094421, 0.8489423394203186, 0.8334147334098816, 0.8178907632827759, 0.8023707270622253, 0.7868549227714539, 0.771343469619751, 0.7558366656303406, 0.7403348684310913, 0.7248383164405823, 0.7093474864959717, 0.6938626170158386, 0.6783841848373413, 0.6629126071929932, 0.6474484205245972, 0.6319921612739563, 0.6165443658828735, 0.6011057496070862, 0.5856770277023315, 0.5702589750289917, 0.5548525452613831, 0.5394586324691772, 0.5240784287452698, 0.5087131261825562, 0.493364155292511, 0.47803306579589844, 0.46272164583206177, 0.44743192195892334, 0.4321661591529846, 0.4169270098209381, 0.40171751379966736, 0.3865411579608917, 0.37140199542045593, 0.3563048243522644, 0.34125515818595886, 0.326259583234787, 0.31132590770721436, 0.2964635193347931, 0.28168368339538574, 0.26700010895729065, 0.2524296045303345, 0.23799291253089905, 0.22371596097946167, 0.20963136851787567, 0.1957806944847107, 0.18221724033355713, 0.1690102219581604, 0.15625, 0.14405538141727448, 0.13258251547813416, 0.12203515321016312, 0.11267347633838654, 0.10481568425893784, 0.09882117807865143, 0.09504316747188568, 0.109375, 0.11048543453216553, 0.11375171691179276, 0.11899645626544952, 0.12597277760505676, 0.13441133499145508, 0.14405538141727448, 0.15467961132526398, 0.166096031665802, 0.1781524121761322, 0.19072742760181427, 0.20372506976127625, 0.21706943213939667, 0.23070035874843597, 0.24456994235515594, 0.25863978266716003, 0.27287888526916504, 0.2872621417045593, 0.30176886916160583, 0.31638213992118835, 0.3310878276824951, 0.3458741307258606, 0.3607311248779297, 0.37565046548843384, 0.390625, 0.4056485891342163, 0.42071598768234253, 0.43582266569137573, 0.45096468925476074, 0.4661385715007782, 0.48134130239486694, 0.49657025933265686, 0.5118231177330017, 0.527097761631012, 0.5423923134803772, 0.557705283164978, 0.5730350017547607, 0.5883803367614746, 0.6037399768829346, 0.6191129088401794, 0.634498119354248, 0.6498948335647583, 0.6653021574020386, 0.6807193756103516, 0.6961458921432495, 0.7115811109542847, 0.7270243763923645, 0.7424752712249756, 0.7579333186149597, 0.7733980417251587, 0.7888690829277039, 0.8043460845947266, 0.8198287487030029, 0.8353166580200195, 0.8508095741271973, 0.866307258605957, 0.881809413433075, 0.8973158597946167, 0.9128263592720032, 0.9283406734466553, 0.9438586235046387, 0.9593800902366638, 0.9749048352241516, 0.9904327392578125, 1.005963683128357, 1.0214974880218506, 1.0370339155197144, 1.0525730848312378, 1.0681147575378418, 1.0836588144302368, 1.0992051362991333, 1.1147537231445312, 1.1303043365478516, 1.1458569765090942, 1.1614116430282593, 1.1769680976867676, 1.1925263404846191, 1.208086371421814, 1.223647952079773, 1.2392112016677856, 1.2547760009765625, 1.270342230796814, 1.2859100103378296, 1.3014789819717407, 1.3170493841171265, 1.3326210975646973, 1.3481940031051636, 1.3637681007385254, 1.3793432712554932, 1.3949196338653564, 1.4104970693588257, 1.4260755777359009, 1.4416550397872925, 1.4572354555130005, 1.472816824913025, 1.4883991479873657, 1.5039823055267334, 1.5195664167404175, 1.5351512432098389, 1.5507370233535767, 1.5663233995437622, 1.5819107294082642, 1.5974986553192139, 1.6130872964859009, 1.6286767721176147, 1.6442668437957764, 1.6598575115203857, 1.6754488945007324, 1.6910408735275269, 1.706633448600769, 1.722226619720459, 1.7378203868865967, 1.7534146308898926, 1.7690094709396362, 1.784604787826538, 1.8002007007598877, 1.8157970905303955, 1.8313939571380615, 1.8469913005828857, 1.8625891208648682, 1.8781874179840088, 1.893786072731018, 1.9093852043151855, 1.9249848127365112, 1.9405847787857056, 1.9561851024627686, 1.9717859029769897, 1.98738694190979, 2.002988576889038, 1.98738694190979, 1.9717859029769897, 1.9561851024627686, 1.9405847787857056, 1.9249848127365112, 1.9093852043151855, 1.893786072731018, 1.8781874179840088, 1.8625891208648682, 1.8469913005828857, 1.8313939571380615, 1.8157970905303955, 1.8002007007598877, 1.784604787826538, 1.7690094709396362, 1.7534146308898926, 1.7378203868865967, 1.722226619720459, 1.706633448600769, 1.6910408735275269, 1.6754488945007324, 1.6598575115203857, 1.6442668437957764, 1.6286767721176147, 1.6130872964859009, 1.5974986553192139, 1.5819107294082642, 1.5663233995437622, 1.5507370233535767, 1.5351512432098389, 1.5195664167404175, 1.5039823055267334, 1.4883991479873657, 1.472816824913025, 1.4572354555130005, 1.4416550397872925, 1.4260755777359009, 1.4104970693588257, 1.3949196338653564, 1.3793432712554932, 1.3637681007385254, 1.3481940031051636, 1.3326210975646973, 1.3170493841171265, 1.3014789819717407, 1.2859100103378296, 1.270342230796814, 1.2547760009765625, 1.2392112016677856, 1.223647952079773, 1.208086371421814, 1.1925263404846191, 1.1769680976867676, 1.1614116430282593, 1.1458569765090942, 1.1303043365478516, 1.1147537231445312, 1.0992051362991333, 1.0836588144302368, 1.0681147575378418, 1.0525730848312378, 1.0370339155197144, 1.0214974880218506, 1.005963683128357, 0.9904327392578125, 0.9749048352241516, 0.9593800902366638, 0.9438586235046387, 0.9283406734466553, 0.9128263592720032, 0.8973158597946167, 0.881809413433075, 0.866307258605957, 0.8508095741271973, 0.8353166580200195, 0.8198287487030029, 0.8043460845947266, 0.7888690829277039, 0.7733980417251587, 0.7579333186149597, 0.7424752712249756, 0.7270243763923645, 0.7115811109542847, 0.6961458921432495, 0.6807193756103516, 0.6653021574020386, 0.6498948335647583, 0.634498119354248, 0.6191129088401794, 0.6037399768829346, 0.5883803367614746, 0.5730350017547607, 0.557705283164978, 0.5423923134803772, 0.527097761631012, 0.5118231177330017, 0.49657025933265686, 0.48134130239486694, 0.4661385715007782, 0.45096468925476074, 0.43582266569137573, 0.42071598768234253, 0.4056485891342163, 0.390625, 0.37565046548843384, 0.3607311248779297, 0.3458741307258606, 0.3310878276824951, 0.31638213992118835, 0.30176886916160583, 0.2872621417045593, 0.27287888526916504, 0.25863978266716003, 0.24456994235515594, 0.23070035874843597, 0.21706943213939667, 0.20372506976127625, 0.19072742760181427, 0.1781524121761322, 0.166096031665802, 0.15467961132526398, 0.14405538141727448, 0.13441133499145508, 0.12597277760505676, 0.11899645626544952, 0.11375171691179276, 0.11048543453216553, 0.125, 0.12597277760505676, 0.12884704768657684, 0.13350005447864532, 0.1397542506456375, 0.1474059522151947, 0.15625, 0.166096031665802, 0.1767766922712326, 0.18814991414546967, 0.20009763538837433, 0.2125229835510254, 0.22534695267677307, 0.2385052740573883, 0.2519455552101135, 0.265625, 0.279508501291275, 0.29356709122657776, 0.3077768087387085, 0.3221176266670227, 0.3365727961063385, 0.3511281907558441, 0.3657718598842621, 0.3804936110973358, 0.3952847123146057, 0.4101376533508301, 0.4250459671020508, 0.44000399112701416, 0.455006867647171, 0.47005027532577515, 0.4851304590702057, 0.5002440810203552, 0.5153881907463074, 0.5305601954460144, 0.5457577705383301, 0.5609788298606873, 0.5762215256690979, 0.5914841890335083, 0.6067652702331543, 0.622063398361206, 0.6373774409294128, 0.6527062058448792, 0.6680486798286438, 0.6834039688110352, 0.6987712383270264, 0.7141496539115906, 0.72953861951828, 0.7449373602867126, 0.7603453397750854, 0.7757619619369507, 0.7911868095397949, 0.8066193461418152, 0.822059154510498, 0.8375058174133301, 0.8529589772224426, 0.8684183359146118, 0.8838834762573242, 0.8993541598320007, 0.9148300886154175, 0.9303109645843506, 0.9457966089248657, 0.9612867832183838, 0.9767812490463257, 0.9922797679901123, 1.007782220840454, 1.023288369178772, 1.0387980937957764, 1.0543112754821777, 1.069827675819397, 1.0853471755981445, 1.1008696556091309, 1.1163949966430664, 1.1319231986999512, 1.1474539041519165, 1.1629871129989624, 1.1785228252410889, 1.1940608024597168, 1.2096010446548462, 1.2251434326171875, 1.2406879663467407, 1.2562344074249268, 1.2717828750610352, 1.2873331308364868, 1.3028851747512817, 1.3184388875961304, 1.3339943885803223, 1.3495514392852783, 1.3651100397109985, 1.3806700706481934, 1.3962316513061523, 1.411794662475586, 1.4273589849472046, 1.4429244995117188, 1.4584914445877075, 1.4740595817565918, 1.4896289110183716, 1.5051993131637573, 1.5207709074020386, 1.5363435745239258, 1.551917314529419, 1.5674920082092285, 1.583067774772644, 1.598644495010376, 1.6142220497131348, 1.62980055809021, 1.6453800201416016, 1.66096031665802, 1.6765413284301758, 1.692123293876648, 1.7077059745788574, 1.7232894897460938, 1.7388737201690674, 1.7544585466384888, 1.770044207572937, 1.7856305837631226, 1.8012175559997559, 1.8168052434921265, 1.8323935270309448, 1.847982406616211, 1.8635720014572144, 1.879162073135376, 1.8947527408599854, 1.9103440046310425, 1.9259357452392578, 1.941528081893921, 1.9571208953857422, 1.9727143049240112, 1.988308072090149, 2.0039024353027344, 1.988308072090149, 1.9727143049240112, 1.9571208953857422, 1.941528081893921, 1.9259357452392578, 1.9103440046310425, 1.8947527408599854, 1.879162073135376, 1.8635720014572144, 1.847982406616211, 1.8323935270309448, 1.8168052434921265, 1.8012175559997559, 1.7856305837631226, 1.770044207572937, 1.7544585466384888, 1.7388737201690674, 1.7232894897460938, 1.7077059745788574, 1.692123293876648, 1.6765413284301758, 1.66096031665802, 1.6453800201416016, 1.62980055809021, 1.6142220497131348, 1.598644495010376, 1.583067774772644, 1.5674920082092285, 1.551917314529419, 1.5363435745239258, 1.5207709074020386, 1.5051993131637573, 1.4896289110183716, 1.4740595817565918, 1.4584914445877075, 1.4429244995117188, 1.4273589849472046, 1.411794662475586, 1.3962316513061523, 1.3806700706481934, 1.3651100397109985, 1.3495514392852783, 1.3339943885803223, 1.3184388875961304, 1.3028851747512817, 1.2873331308364868, 1.2717828750610352, 1.2562344074249268, 1.2406879663467407, 1.2251434326171875, 1.2096010446548462, 1.1940608024597168, 1.1785228252410889, 1.1629871129989624, 1.1474539041519165, 1.1319231986999512, 1.1163949966430664, 1.1008696556091309, 1.0853471755981445, 1.069827675819397, 1.0543112754821777, 1.0387980937957764, 1.023288369178772, 1.007782220840454, 0.9922797679901123, 0.9767812490463257, 0.9612867832183838, 0.9457966089248657, 0.9303109645843506, 0.9148300886154175, 0.8993541598320007, 0.8838834762573242, 0.8684183359146118, 0.8529589772224426, 0.8375058174133301, 0.822059154510498, 0.8066193461418152, 0.7911868095397949, 0.7757619619369507, 0.7603453397750854, 0.7449373602867126, 0.72953861951828, 0.7141496539115906, 0.6987712383270264, 0.6834039688110352, 0.6680486798286438, 0.6527062058448792, 0.6373774409294128, 0.622063398361206, 0.6067652702331543, 0.5914841890335083, 0.5762215256690979, 0.5609788298606873, 0.5457577705383301, 0.5305601954460144, 0.5153881907463074, 0.5002440810203552, 0.4851304590702057, 0.47005027532577515, 0.455006867647171, 0.44000399112701416, 0.4250459671020508, 0.4101376533508301, 0.3952847123146057, 0.3804936110973358, 0.3657718598842621, 0.3511281907558441, 0.3365727961063385, 0.3221176266670227, 0.3077768087387085, 0.29356709122657776, 0.279508501291275, 0.265625, 0.2519455552101135, 0.2385052740573883, 0.22534695267677307, 0.2125229835510254, 0.20009763538837433, 0.18814991414546967, 0.1767766922712326, 0.166096031665802, 0.15625, 0.1474059522151947, 0.1397542506456375, 0.13350005447864532, 0.12884704768657684, 0.12597277760505676, 0.140625, 0.1414903998374939, 0.14405538141727448, 0.14823175966739655, 0.15388840436935425, 0.16086922585964203, 0.1690102219581604, 0.1781524121761322, 0.18814991414546967, 0.19887378811836243, 0.21021287143230438, 0.22207297384738922, 0.234375, 0.24705293774604797, 0.26005181670188904, 0.2733258605003357, 0.2868368625640869, 0.3005528748035431, 0.3144470453262329, 0.3284968137741089, 0.34268301725387573, 0.3569893538951874, 0.37140199542045593, 0.3859090209007263, 0.40050017833709717, 0.41516655683517456, 0.42990052700042725, 0.44469529390335083, 0.4595450460910797, 0.47444456815719604, 0.4893893599510193, 0.5043753981590271, 0.5193990468978882, 0.5344572067260742, 0.549547016620636, 0.5646659731864929, 0.5798117518424988, 0.5949822664260864, 0.6101757287979126, 0.6253905296325684, 0.640625, 0.6558778882026672, 0.671147882938385, 0.6864338517189026, 0.701734721660614, 0.7170495986938477, 0.7323775887489319, 0.7477178573608398, 0.7630696892738342, 0.7784324288368225, 0.7938053607940674, 0.8091879487037659, 0.824579656124115, 0.8399800062179565, 0.8553884625434875, 0.8708046674728394, 0.8862282037734985, 0.9016586542129517, 0.9170956611633301, 0.9325389862060547, 0.9479882121086121, 0.9634431004524231, 0.9789034724235535, 0.9943689107894897, 1.0098392963409424, 1.0253143310546875, 1.0407938957214355, 1.0562777519226074, 1.071765661239624, 1.0872575044631958, 1.1027531623840332, 1.1182522773742676, 1.1337549686431885, 1.1492609977722168, 1.1647701263427734, 1.1802823543548584, 1.1957974433898926, 1.2113155126571655, 1.2268362045288086, 1.2423595190048218, 1.2578853368759155, 1.2734135389328003, 1.288944125175476, 1.3044769763946533, 1.3200119733810425, 1.3355491161346436, 1.351088285446167, 1.3666293621063232, 1.3821723461151123, 1.3977171182632446, 1.4132637977600098, 1.428812026977539, 1.4443620443344116, 1.4599136114120483, 1.4754667282104492, 1.4910212755203247, 1.5065773725509644, 1.5221349000930786, 1.537693738937378, 1.5532538890838623, 1.5688153505325317, 1.5843781232833862, 1.5999419689178467, 1.6155071258544922, 1.6310733556747437, 1.6466407775878906, 1.662209153175354, 1.677778720855713, 1.6933492422103882, 1.7089207172393799, 1.7244932651519775, 1.740066647529602, 1.755640983581543, 1.7712162733078003, 1.7867923974990845, 1.8023693561553955, 1.8179471492767334, 1.8335256576538086, 1.8491050004959106, 1.8646851778030396, 1.8802660703659058, 1.8958476781845093, 1.91143000125885, 1.9270129203796387, 1.942596673965454, 1.9581809043884277, 1.9737659692764282, 1.989351511001587, 2.0049376487731934, 1.989351511001587, 1.9737659692764282, 1.9581809043884277, 1.942596673965454, 1.9270129203796387, 1.91143000125885, 1.8958476781845093, 1.8802660703659058, 1.8646851778030396, 1.8491050004959106, 1.8335256576538086, 1.8179471492767334, 1.8023693561553955, 1.7867923974990845, 1.7712162733078003, 1.755640983581543, 1.740066647529602, 1.7244932651519775, 1.7089207172393799, 1.6933492422103882, 1.677778720855713, 1.662209153175354, 1.6466407775878906, 1.6310733556747437, 1.6155071258544922, 1.5999419689178467, 1.5843781232833862, 1.5688153505325317, 1.5532538890838623, 1.537693738937378, 1.5221349000930786, 1.5065773725509644, 1.4910212755203247, 1.4754667282104492, 1.4599136114120483, 1.4443620443344116, 1.428812026977539, 1.4132637977600098, 1.3977171182632446, 1.3821723461151123, 1.3666293621063232, 1.351088285446167, 1.3355491161346436, 1.3200119733810425, 1.3044769763946533, 1.288944125175476, 1.2734135389328003, 1.2578853368759155, 1.2423595190048218, 1.2268362045288086, 1.2113155126571655, 1.1957974433898926, 1.1802823543548584, 1.1647701263427734, 1.1492609977722168, 1.1337549686431885, 1.1182522773742676, 1.1027531623840332, 1.0872575044631958, 1.071765661239624, 1.0562777519226074, 1.0407938957214355, 1.0253143310546875, 1.0098392963409424, 0.9943689107894897, 0.9789034724235535, 0.9634431004524231, 0.9479882121086121, 0.9325389862060547, 0.9170956611633301, 0.9016586542129517, 0.8862282037734985, 0.8708046674728394, 0.8553884625434875, 0.8399800062179565, 0.824579656124115, 0.8091879487037659, 0.7938053607940674, 0.7784324288368225, 0.7630696892738342, 0.7477178573608398, 0.7323775887489319, 0.7170495986938477, 0.701734721660614, 0.6864338517189026, 0.671147882938385, 0.6558778882026672, 0.640625, 0.6253905296325684, 0.6101757287979126, 0.5949822664260864, 0.5798117518424988, 0.5646659731864929, 0.549547016620636, 0.5344572067260742, 0.5193990468978882, 0.5043753981590271, 0.4893893599510193, 0.47444456815719604, 0.4595450460910797, 0.44469529390335083, 0.42990052700042725, 0.41516655683517456, 0.40050017833709717, 0.3859090209007263, 0.37140199542045593, 0.3569893538951874, 0.34268301725387573, 0.3284968137741089, 0.3144470453262329, 0.3005528748035431, 0.2868368625640869, 0.2733258605003357, 0.26005181670188904, 0.24705293774604797, 0.234375, 0.22207297384738922, 0.21021287143230438, 0.19887378811836243, 0.18814991414546967, 0.1781524121761322, 0.1690102219581604, 0.16086922585964203, 0.15388840436935425, 0.14823175966739655, 0.14405538141727448, 0.1414903998374939, 0.15625, 0.15702930092811584, 0.1593443602323532, 0.1631297916173935, 0.16828639805316925, 0.1746928095817566, 0.18221724033355713, 0.19072742760181427, 0.20009763538837433, 0.21021287143230438, 0.22097086906433105, 0.23228232562541962, 0.24407030642032623, 0.25626906752586365, 0.26882266998291016, 0.28168368339538574, 0.2948119044303894, 0.30817317962646484, 0.32173845171928406, 0.33548298478126526, 0.3493856191635132, 0.3634282350540161, 0.3775951862335205, 0.39187300205230713, 0.40625, 0.42071598768234253, 0.43526214361190796, 0.4498806297779083, 0.46456465125083923, 0.47930818796157837, 0.49410587549209595, 0.5089530348777771, 0.5238454341888428, 0.5387793779373169, 0.5537514090538025, 0.5687586069107056, 0.5837981700897217, 0.5988677740097046, 0.6139650940895081, 0.6290881633758545, 0.6442352533340454, 0.6594046354293823, 0.6745947599411011, 0.6898043751716614, 0.7050321102142334, 0.7202768921852112, 0.7355376482009888, 0.750813364982605, 0.7661031484603882, 0.7814062237739563, 0.7967218160629272, 0.812049150466919, 0.8273876309394836, 0.8427366614341736, 0.858095645904541, 0.873464047908783, 0.8888413906097412, 0.9042272567749023, 0.9196211695671082, 0.93502277135849, 0.9504316449165344, 0.9658474922180176, 0.981269896030426, 0.9966986775398254, 1.0121334791183472, 1.0275739431381226, 1.0430200099945068, 1.0584712028503418, 1.0739275217056274, 1.0893886089324951, 1.1048543453216553, 1.1203244924545288, 1.1357988119125366, 1.1512773036956787, 1.1667596101760864, 1.1822457313537598, 1.1977355480194092, 1.213228702545166, 1.2287251949310303, 1.2442249059677124, 1.2597277164459229, 1.2752336263656616, 1.29074227809906, 1.3062537908554077, 1.3217679262161255, 1.3372845649719238, 1.3528038263320923, 1.3683254718780518, 1.3838493824005127, 1.399375557899475, 1.4149038791656494, 1.4304343461990356, 1.4459669589996338, 1.4615013599395752, 1.477037787437439, 1.492576003074646, 1.5081160068511963, 1.5236577987670898, 1.539201259613037, 1.554746389389038, 1.5702930688858032, 1.5858412981033325, 1.6013909578323364, 1.6169421672821045, 1.6324946880340576, 1.6480486392974854, 1.6636039018630981, 1.679160475730896, 1.694718360900879, 1.7102774381637573, 1.7258377075195312, 1.7413990497589111, 1.7569615840911865, 1.7725251913070679, 1.7880899906158447, 1.803655743598938, 1.8192224502563477, 1.8347902297973633, 1.8503589630126953, 1.8659285306930542, 1.881499171257019, 1.8970706462860107, 1.9126429557800293, 1.9282162189483643, 1.9437901973724365, 1.9593650102615356, 1.9749406576156616, 1.990517020225525, 2.006094217300415, 1.990517020225525, 1.9749406576156616, 1.9593650102615356, 1.9437901973724365, 1.9282162189483643, 1.9126429557800293, 1.8970706462860107, 1.881499171257019, 1.8659285306930542, 1.8503589630126953, 1.8347902297973633, 1.8192224502563477, 1.803655743598938, 1.7880899906158447, 1.7725251913070679, 1.7569615840911865, 1.7413990497589111, 1.7258377075195312, 1.7102774381637573, 1.694718360900879, 1.679160475730896, 1.6636039018630981, 1.6480486392974854, 1.6324946880340576, 1.6169421672821045, 1.6013909578323364, 1.5858412981033325, 1.5702930688858032, 1.554746389389038, 1.539201259613037, 1.5236577987670898, 1.5081160068511963, 1.492576003074646, 1.477037787437439, 1.4615013599395752, 1.4459669589996338, 1.4304343461990356, 1.4149038791656494, 1.399375557899475, 1.3838493824005127, 1.3683254718780518, 1.3528038263320923, 1.3372845649719238, 1.3217679262161255, 1.3062537908554077, 1.29074227809906, 1.2752336263656616, 1.2597277164459229, 1.2442249059677124, 1.2287251949310303, 1.213228702545166, 1.1977355480194092, 1.1822457313537598, 1.1667596101760864, 1.1512773036956787, 1.1357988119125366, 1.1203244924545288, 1.1048543453216553, 1.0893886089324951, 1.0739275217056274, 1.0584712028503418, 1.0430200099945068, 1.0275739431381226, 1.0121334791183472, 0.9966986775398254, 0.981269896030426, 0.9658474922180176, 0.9504316449165344, 0.93502277135849, 0.9196211695671082, 0.9042272567749023, 0.8888413906097412, 0.873464047908783, 0.858095645904541, 0.8427366614341736, 0.8273876309394836, 0.812049150466919, 0.7967218160629272, 0.7814062237739563, 0.7661031484603882, 0.750813364982605, 0.7355376482009888, 0.7202768921852112, 0.7050321102142334, 0.6898043751716614, 0.6745947599411011, 0.6594046354293823, 0.6442352533340454, 0.6290881633758545, 0.6139650940895081, 0.5988677740097046, 0.5837981700897217, 0.5687586069107056, 0.5537514090538025, 0.5387793779373169, 0.5238454341888428, 0.5089530348777771, 0.49410587549209595, 0.47930818796157837, 0.46456465125083923, 0.4498806297779083, 0.43526214361190796, 0.42071598768234253, 0.40625, 0.39187300205230713, 0.3775951862335205, 0.3634282350540161, 0.3493856191635132, 0.33548298478126526, 0.32173845171928406, 0.30817317962646484, 0.2948119044303894, 0.28168368339538574, 0.26882266998291016, 0.25626906752586365, 0.24407030642032623, 0.23228232562541962, 0.22097086906433105, 0.21021287143230438, 0.20009763538837433, 0.19072742760181427, 0.18221724033355713, 0.1746928095817566, 0.16828639805316925, 0.1631297916173935, 0.1593443602323532, 0.15702930092811584, 0.171875, 0.17258375883102417, 0.1746928095817566, 0.1781524121761322, 0.18288592994213104, 0.18879759311676025, 0.1957806944847107, 0.20372506976127625, 0.2125229835510254, 0.22207297384738922, 0.23228232562541962, 0.24306795001029968, 0.2543565630912781, 0.2660841643810272, 0.27819520235061646, 0.29064181447029114, 0.30338263511657715, 0.31638213992118835, 0.3296097218990326, 0.34303903579711914, 0.356647253036499, 0.370414674282074, 0.38432419300079346, 0.3983609080314636, 0.41251182556152344, 0.4267656207084656, 0.44111230969429016, 0.4555431306362152, 0.47005027532577515, 0.4846269488334656, 0.499267041683197, 0.5139651298522949, 0.5287163853645325, 0.5435164570808411, 0.5583615303039551, 0.573248028755188, 0.5881727933883667, 0.6031330823898315, 0.6181262731552124, 0.6331499814987183, 0.648202121257782, 0.6632807850837708, 0.6783841848373413, 0.6935106515884399, 0.708658754825592, 0.7238271832466125, 0.7390146255493164, 0.7542198896408081, 0.7694420218467712, 0.7846799492835999, 0.7999328374862671, 0.8151998519897461, 0.83048015832901, 0.8457730412483215, 0.8610778450965881, 0.8763939738273621, 0.8917208313941956, 0.9070578217506409, 0.9224045276641846, 0.9377603530883789, 0.953125, 0.9684979319572449, 0.9838788509368896, 0.9992672801017761, 1.0146629810333252, 1.030065655708313, 1.0454747676849365, 1.0608903169631958, 1.0763118267059326, 1.0917391777038574, 1.1071721315383911, 1.122610330581665, 1.1380536556243896, 1.1535017490386963, 1.1689547300338745, 1.1844121217727661, 1.1998738050460815, 1.2153397798538208, 1.2308096885681152, 1.2462835311889648, 1.2617610692977905, 1.2772421836853027, 1.292726755142212, 1.308214783668518, 1.3237059116363525, 1.3392001390457153, 1.3546974658966064, 1.3701975345611572, 1.3857005834579468, 1.4012062549591064, 1.4167145490646362, 1.4322253465652466, 1.4477386474609375, 1.4632543325424194, 1.4787722826004028, 1.4942924976348877, 1.5098148584365845, 1.5253393650054932, 1.5408658981323242, 1.556394338607788, 1.5719246864318848, 1.5874569416046143, 1.602990984916687, 1.618526816368103, 1.6340643167495728, 1.6496033668518066, 1.6651442050933838, 1.6806864738464355, 1.6962302923202515, 1.7117756605148315, 1.7273223400115967, 1.742870569229126, 1.7584199905395508, 1.7739708423614502, 1.7895230054855347, 1.8050763607025146, 1.8206310272216797, 1.8361867666244507, 1.8517438173294067, 1.8673019409179688, 1.8828611373901367, 1.8984214067459106, 1.9139827489852905, 1.9295451641082764, 1.9451085329055786, 1.9606729745864868, 1.9762382507324219, 1.9918044805526733, 2.007371664047241, 1.9918044805526733, 1.9762382507324219, 1.9606729745864868, 1.9451085329055786, 1.9295451641082764, 1.9139827489852905, 1.8984214067459106, 1.8828611373901367, 1.8673019409179688, 1.8517438173294067, 1.8361867666244507, 1.8206310272216797, 1.8050763607025146, 1.7895230054855347, 1.7739708423614502, 1.7584199905395508, 1.742870569229126, 1.7273223400115967, 1.7117756605148315, 1.6962302923202515, 1.6806864738464355, 1.6651442050933838, 1.6496033668518066, 1.6340643167495728, 1.618526816368103, 1.602990984916687, 1.5874569416046143, 1.5719246864318848, 1.556394338607788, 1.5408658981323242, 1.5253393650054932, 1.5098148584365845, 1.4942924976348877, 1.4787722826004028, 1.4632543325424194, 1.4477386474609375, 1.4322253465652466, 1.4167145490646362, 1.4012062549591064, 1.3857005834579468, 1.3701975345611572, 1.3546974658966064, 1.3392001390457153, 1.3237059116363525, 1.308214783668518, 1.292726755142212, 1.2772421836853027, 1.2617610692977905, 1.2462835311889648, 1.2308096885681152, 1.2153397798538208, 1.1998738050460815, 1.1844121217727661, 1.1689547300338745, 1.1535017490386963, 1.1380536556243896, 1.122610330581665, 1.1071721315383911, 1.0917391777038574, 1.0763118267059326, 1.0608903169631958, 1.0454747676849365, 1.030065655708313, 1.0146629810333252, 0.9992672801017761, 0.9838788509368896, 0.9684979319572449, 0.953125, 0.9377603530883789, 0.9224045276641846, 0.9070578217506409, 0.8917208313941956, 0.8763939738273621, 0.8610778450965881, 0.8457730412483215, 0.83048015832901, 0.8151998519897461, 0.7999328374862671, 0.7846799492835999, 0.7694420218467712, 0.7542198896408081, 0.7390146255493164, 0.7238271832466125, 0.708658754825592, 0.6935106515884399, 0.6783841848373413, 0.6632807850837708, 0.648202121257782, 0.6331499814987183, 0.6181262731552124, 0.6031330823898315, 0.5881727933883667, 0.573248028755188, 0.5583615303039551, 0.5435164570808411, 0.5287163853645325, 0.5139651298522949, 0.499267041683197, 0.4846269488334656, 0.47005027532577515, 0.4555431306362152, 0.44111230969429016, 0.4267656207084656, 0.41251182556152344, 0.3983609080314636, 0.38432419300079346, 0.370414674282074, 0.356647253036499, 0.34303903579711914, 0.3296097218990326, 0.31638213992118835, 0.30338263511657715, 0.29064181447029114, 0.27819520235061646, 0.2660841643810272, 0.2543565630912781, 0.24306795001029968, 0.23228232562541962, 0.22207297384738922, 0.2125229835510254, 0.20372506976127625, 0.1957806944847107, 0.18879759311676025, 0.18288592994213104, 0.1781524121761322, 0.1746928095817566, 0.17258375883102417, 0.1875, 0.18814991414546967, 0.19008633494377136, 0.19327057898044586, 0.19764235615730286, 0.203125, 0.20963136851787567, 0.21706943213939667, 0.22534695267677307, 0.234375, 0.24407030642032623, 0.2543565630912781, 0.2651650309562683, 0.2764344811439514, 0.28811076283454895, 0.3001464605331421, 0.3125, 0.325135201215744, 0.3380204439163208, 0.3511281907558441, 0.36443448066711426, 0.3779183328151703, 0.3915613889694214, 0.4053475558757782, 0.41926273703575134, 0.43329450488090515, 0.44743192195892334, 0.46166521310806274, 0.4759858250617981, 0.49038609862327576, 0.504859209060669, 0.5193990468978882, 0.5340002179145813, 0.5486578345298767, 0.5633673667907715, 0.578125, 0.5929270386695862, 0.6077703237533569, 0.6226518154144287, 0.6375689506530762, 0.652519166469574, 0.6675003170967102, 0.6825103163719177, 0.6975473165512085, 0.7126096487045288, 0.7276957035064697, 0.7428039908409119, 0.7579333186149597, 0.7730823159217834, 0.7882499098777771, 0.8034350275993347, 0.8186366558074951, 0.8338540196418762, 0.8490861058235168, 0.8643323183059692, 0.8795917630195618, 0.8948638439178467, 0.9101478457450867, 0.9254432916641235, 0.9407495856285095, 0.9560661315917969, 0.9713925719261169, 0.986728310585022, 1.002073049545288, 1.0174262523651123, 1.0327876806259155, 1.0481568574905396, 1.0635335445404053, 1.0789172649383545, 1.0943078994750977, 1.1097050905227661, 1.1251084804534912, 1.1405179500579834, 1.1559332609176636, 1.171354055404663, 1.1867802143096924, 1.2022114992141724, 1.2176477909088135, 1.233088731765747, 1.2485343217849731, 1.2639843225479126, 1.2794384956359863, 1.2948968410491943, 1.3103591203689575, 1.3258252143859863, 1.3412950038909912, 1.3567683696746826, 1.3722450733184814, 1.3877252340316772, 1.4032084941864014, 1.4186949729919434, 1.4341843128204346, 1.4496766328811646, 1.4651718139648438, 1.4806697368621826, 1.4961702823638916, 1.5116733312606812, 1.5271788835525513, 1.542686939239502, 1.558197259902954, 1.5737098455429077, 1.5892245769500732, 1.6047414541244507, 1.62026047706604, 1.6357815265655518, 1.6513044834136963, 1.6668294668197632, 1.6823561191558838, 1.6978846788406372, 1.7134150266647339, 1.7289470434188843, 1.7444807291030884, 1.7600159645080566, 1.7755528688430786, 1.7910912036895752, 1.806631088256836, 1.8221725225448608, 1.8377152681350708, 1.8532593250274658, 1.8688048124313354, 1.8843517303466797, 1.8998997211456299, 1.9154491424560547, 1.9309996366500854, 1.9465514421463013, 1.962104320526123, 1.9776583909988403, 1.9932135343551636, 2.0087697505950928, 1.9932135343551636, 1.9776583909988403, 1.962104320526123, 1.9465514421463013, 1.9309996366500854, 1.9154491424560547, 1.8998997211456299, 1.8843517303466797, 1.8688048124313354, 1.8532593250274658, 1.8377152681350708, 1.8221725225448608, 1.806631088256836, 1.7910912036895752, 1.7755528688430786, 1.7600159645080566, 1.7444807291030884, 1.7289470434188843, 1.7134150266647339, 1.6978846788406372, 1.6823561191558838, 1.6668294668197632, 1.6513044834136963, 1.6357815265655518, 1.62026047706604, 1.6047414541244507, 1.5892245769500732, 1.5737098455429077, 1.558197259902954, 1.542686939239502, 1.5271788835525513, 1.5116733312606812, 1.4961702823638916, 1.4806697368621826, 1.4651718139648438, 1.4496766328811646, 1.4341843128204346, 1.4186949729919434, 1.4032084941864014, 1.3877252340316772, 1.3722450733184814, 1.3567683696746826, 1.3412950038909912, 1.3258252143859863, 1.3103591203689575, 1.2948968410491943, 1.2794384956359863, 1.2639843225479126, 1.2485343217849731, 1.233088731765747, 1.2176477909088135, 1.2022114992141724, 1.1867802143096924, 1.171354055404663, 1.1559332609176636, 1.1405179500579834, 1.1251084804534912, 1.1097050905227661, 1.0943078994750977, 1.0789172649383545, 1.0635335445404053, 1.0481568574905396, 1.0327876806259155, 1.0174262523651123, 1.002073049545288, 0.986728310585022, 0.9713925719261169, 0.9560661315917969, 0.9407495856285095, 0.9254432916641235, 0.9101478457450867, 0.8948638439178467, 0.8795917630195618, 0.8643323183059692, 0.8490861058235168, 0.8338540196418762, 0.8186366558074951, 0.8034350275993347, 0.7882499098777771, 0.7730823159217834, 0.7579333186149597, 0.7428039908409119, 0.7276957035064697, 0.7126096487045288, 0.6975473165512085, 0.6825103163719177, 0.6675003170967102, 0.652519166469574, 0.6375689506530762, 0.6226518154144287, 0.6077703237533569, 0.5929270386695862, 0.578125, 0.5633673667907715, 0.5486578345298767, 0.5340002179145813, 0.5193990468978882, 0.504859209060669, 0.49038609862327576, 0.4759858250617981, 0.46166521310806274, 0.44743192195892334, 0.43329450488090515, 0.41926273703575134, 0.4053475558757782, 0.3915613889694214, 0.3779183328151703, 0.36443448066711426, 0.3511281907558441, 0.3380204439163208, 0.325135201215744, 0.3125, 0.3001464605331421, 0.28811076283454895, 0.2764344811439514, 0.2651650309562683, 0.2543565630912781, 0.24407030642032623, 0.234375, 0.22534695267677307, 0.21706943213939667, 0.20963136851787567, 0.203125, 0.19764235615730286, 0.19327057898044586, 0.19008633494377136, 0.18814991414546967, 0.203125, 0.20372506976127625, 0.2055147886276245, 0.20846350491046906, 0.2125229835510254, 0.21763107180595398, 0.22371596097946167, 0.23070035874843597, 0.2385052740573883, 0.24705293774604797, 0.25626906752586365, 0.2660841643810272, 0.2764344811439514, 0.2872621417045593, 0.2985152006149292, 0.31014740467071533, 0.3221176266670227, 0.3343895971775055, 0.3469313085079193, 0.3597145080566406, 0.37271440029144287, 0.3859090209007263, 0.3992791473865509, 0.4128076434135437, 0.4264794886112213, 0.44028133153915405, 0.4542013108730316, 0.46822887659072876, 0.48235467076301575, 0.49657025933265686, 0.5108681917190552, 0.5252417325973511, 0.5396848917007446, 0.5541921257972717, 0.5687586069107056, 0.5833798050880432, 0.5980518460273743, 0.6127709746360779, 0.6275339126586914, 0.6423376202583313, 0.6571794152259827, 0.6720566749572754, 0.686967134475708, 0.7019086480140686, 0.7168793678283691, 0.7318773865699768, 0.7469011545181274, 0.7619490623474121, 0.7770197987556458, 0.7921119928359985, 0.807224452495575, 0.822356104850769, 0.8375058174133301, 0.8526727557182312, 0.8678559064865112, 0.8830544352531433, 0.8982676267623901, 0.9134947657585144, 0.928735077381134, 0.9439879655838013, 0.9592528343200684, 0.9745291471481323, 0.9898163080215454, 1.0051138401031494, 1.0204213857650757, 1.0357383489608765, 1.051064372062683, 1.066399097442627, 1.0817421674728394, 1.097093105316162, 1.1124516725540161, 1.1278176307678223, 1.143190622329712, 1.1585702896118164, 1.1739565134048462, 1.1893489360809326, 1.2047473192214966, 1.220151424407959, 1.2355611324310303, 1.2509762048721313, 1.266396403312683, 1.2818214893341064, 1.2972514629364014, 1.3126859664916992, 1.328125, 1.3435683250427246, 1.359015703201294, 1.3744672536849976, 1.3899226188659668, 1.405381679534912, 1.4208444356918335, 1.4363106489181519, 1.4517803192138672, 1.4672532081604004, 1.4827293157577515, 1.4982085227966309, 1.5136908292770386, 1.529175877571106, 1.5446637868881226, 1.5601544380187988, 1.5756478309631348, 1.5911437273025513, 1.6066421270370483, 1.6221429109573364, 1.6376460790634155, 1.6531516313552856, 1.6686593294143677, 1.6841691732406616, 1.6996811628341675, 1.7151951789855957, 1.7307112216949463, 1.7462291717529297, 1.761749029159546, 1.777270793914795, 1.7927942276000977, 1.8083195686340332, 1.823846459388733, 1.8393751382827759, 1.854905366897583, 1.8704371452331543, 1.8859704732894897, 1.9015053510665894, 1.9170416593551636, 1.9325793981552124, 1.9481185674667358, 1.9636590480804443, 1.9792009592056274, 1.994744062423706, 2.0102884769439697, 1.994744062423706, 1.9792009592056274, 1.9636590480804443, 1.9481185674667358, 1.9325793981552124, 1.9170416593551636, 1.9015053510665894, 1.8859704732894897, 1.8704371452331543, 1.854905366897583, 1.8393751382827759, 1.823846459388733, 1.8083195686340332, 1.7927942276000977, 1.777270793914795, 1.761749029159546, 1.7462291717529297, 1.7307112216949463, 1.7151951789855957, 1.6996811628341675, 1.6841691732406616, 1.6686593294143677, 1.6531516313552856, 1.6376460790634155, 1.6221429109573364, 1.6066421270370483, 1.5911437273025513, 1.5756478309631348, 1.5601544380187988, 1.5446637868881226, 1.529175877571106, 1.5136908292770386, 1.4982085227966309, 1.4827293157577515, 1.4672532081604004, 1.4517803192138672, 1.4363106489181519, 1.4208444356918335, 1.405381679534912, 1.3899226188659668, 1.3744672536849976, 1.359015703201294, 1.3435683250427246, 1.328125, 1.3126859664916992, 1.2972514629364014, 1.2818214893341064, 1.266396403312683, 1.2509762048721313, 1.2355611324310303, 1.220151424407959, 1.2047473192214966, 1.1893489360809326, 1.1739565134048462, 1.1585702896118164, 1.143190622329712, 1.1278176307678223, 1.1124516725540161, 1.097093105316162, 1.0817421674728394, 1.066399097442627, 1.051064372062683, 1.0357383489608765, 1.0204213857650757, 1.0051138401031494, 0.9898163080215454, 0.9745291471481323, 0.9592528343200684, 0.9439879655838013, 0.928735077381134, 0.9134947657585144, 0.8982676267623901, 0.8830544352531433, 0.8678559064865112, 0.8526727557182312, 0.8375058174133301, 0.822356104850769, 0.807224452495575, 0.7921119928359985, 0.7770197987556458, 0.7619490623474121, 0.7469011545181274, 0.7318773865699768, 0.7168793678283691, 0.7019086480140686, 0.686967134475708, 0.6720566749572754, 0.6571794152259827, 0.6423376202583313, 0.6275339126586914, 0.6127709746360779, 0.5980518460273743, 0.5833798050880432, 0.5687586069107056, 0.5541921257972717, 0.5396848917007446, 0.5252417325973511, 0.5108681917190552, 0.49657025933265686, 0.48235467076301575, 0.46822887659072876, 0.4542013108730316, 0.44028133153915405, 0.4264794886112213, 0.4128076434135437, 0.3992791473865509, 0.3859090209007263, 0.37271440029144287, 0.3597145080566406, 0.3469313085079193, 0.3343895971775055, 0.3221176266670227, 0.31014740467071533, 0.2985152006149292, 0.2872621417045593, 0.2764344811439514, 0.2660841643810272, 0.25626906752586365, 0.24705293774604797, 0.2385052740573883, 0.23070035874843597, 0.22371596097946167, 0.21763107180595398, 0.2125229835510254, 0.20846350491046906, 0.2055147886276245, 0.20372506976127625, 0.21875, 0.2193073183298111, 0.22097086906433105, 0.22371596097946167, 0.2275034338235855, 0.23228232562541962, 0.23799291253089905, 0.24456994235515594, 0.2519455552101135, 0.26005181670188904, 0.26882266998291016, 0.27819520235061646, 0.28811076283454895, 0.2985152006149292, 0.30935922265052795, 0.32059818506240845, 0.332192063331604, 0.34410491585731506, 0.3563048243522644, 0.3687632381916046, 0.38145485520362854, 0.39435717463493347, 0.4074501395225525, 0.42071598768234253, 0.43413886427879333, 0.44770464301109314, 0.46140071749687195, 0.4752158224582672, 0.4891398847103119, 0.5031638145446777, 0.5172795653343201, 0.5314797163009644, 0.5457577705383301, 0.5601077675819397, 0.5745242834091187, 0.5890024304389954, 0.6035377383232117, 0.6181262731552124, 0.6327642798423767, 0.6474484205245972, 0.6621756553649902, 0.6769431233406067, 0.6917482614517212, 0.7065886855125427, 0.7214622497558594, 0.7363669872283936, 0.7513009309768677, 0.7662624716758728, 0.78125, 0.7962620258331299, 0.8112971782684326, 0.8263542652130127, 0.8414319753646851, 0.8565293550491333, 0.8716453313827515, 0.8867789506912231, 0.9019293785095215, 0.9170956611633301, 0.9322771430015564, 0.9474729895591736, 0.9626826047897339, 0.9779053330421448, 0.9931405186653137, 1.0083876848220825, 1.0236462354660034, 1.0389156341552734, 1.054195523262024, 1.0694853067398071, 1.0847846269607544, 1.1000932455062866, 1.115410566329956, 1.130736231803894, 1.1460700035095215, 1.1614116430282593, 1.1767606735229492, 1.1921168565750122, 1.2074799537658691, 1.222849726676941, 1.2382258176803589, 1.2536081075668335, 1.268996238708496, 1.2843902111053467, 1.2997896671295166, 1.3151943683624268, 1.3306043148040771, 1.3460191488265991, 1.3614387512207031, 1.3768631219863892, 1.392291784286499, 1.4077249765396118, 1.4231622219085693, 1.4386035203933716, 1.454048752784729, 1.469497799873352, 1.4849505424499512, 1.5004068613052368, 1.5158666372299194, 1.5313297510147095, 1.5467960834503174, 1.5622656345367432, 1.5777381658554077, 1.5932137966156006, 1.6086921691894531, 1.6241735219955444, 1.6396574974060059, 1.6551440954208374, 1.670633316040039, 1.6861250400543213, 1.7016191482543945, 1.7171157598495483, 1.732614517211914, 1.7481156587600708, 1.76361882686615, 1.7791242599487305, 1.7946317195892334, 1.8101412057876587, 1.8256527185440063, 1.8411661386489868, 1.8566813468933105, 1.872198462486267, 1.8877172470092773, 1.9032379388809204, 1.9187601804733276, 1.9342840909957886, 1.9498096704483032, 1.965336799621582, 1.980865478515625, 1.9963957071304321, 2.011927366256714, 1.9963957071304321, 1.980865478515625, 1.965336799621582, 1.9498096704483032, 1.9342840909957886, 1.9187601804733276, 1.9032379388809204, 1.8877172470092773, 1.872198462486267, 1.8566813468933105, 1.8411661386489868, 1.8256527185440063, 1.8101412057876587, 1.7946317195892334, 1.7791242599487305, 1.76361882686615, 1.7481156587600708, 1.732614517211914, 1.7171157598495483, 1.7016191482543945, 1.6861250400543213, 1.670633316040039, 1.6551440954208374, 1.6396574974060059, 1.6241735219955444, 1.6086921691894531, 1.5932137966156006, 1.5777381658554077, 1.5622656345367432, 1.5467960834503174, 1.5313297510147095, 1.5158666372299194, 1.5004068613052368, 1.4849505424499512, 1.469497799873352, 1.454048752784729, 1.4386035203933716, 1.4231622219085693, 1.4077249765396118, 1.392291784286499, 1.3768631219863892, 1.3614387512207031, 1.3460191488265991, 1.3306043148040771, 1.3151943683624268, 1.2997896671295166, 1.2843902111053467, 1.268996238708496, 1.2536081075668335, 1.2382258176803589, 1.222849726676941, 1.2074799537658691, 1.1921168565750122, 1.1767606735229492, 1.1614116430282593, 1.1460700035095215, 1.130736231803894, 1.115410566329956, 1.1000932455062866, 1.0847846269607544, 1.0694853067398071, 1.054195523262024, 1.0389156341552734, 1.0236462354660034, 1.0083876848220825, 0.9931405186653137, 0.9779053330421448, 0.9626826047897339, 0.9474729895591736, 0.9322771430015564, 0.9170956611633301, 0.9019293785095215, 0.8867789506912231, 0.8716453313827515, 0.8565293550491333, 0.8414319753646851, 0.8263542652130127, 0.8112971782684326, 0.7962620258331299, 0.78125, 0.7662624716758728, 0.7513009309768677, 0.7363669872283936, 0.7214622497558594, 0.7065886855125427, 0.6917482614517212, 0.6769431233406067, 0.6621756553649902, 0.6474484205245972, 0.6327642798423767, 0.6181262731552124, 0.6035377383232117, 0.5890024304389954, 0.5745242834091187, 0.5601077675819397, 0.5457577705383301, 0.5314797163009644, 0.5172795653343201, 0.5031638145446777, 0.4891398847103119, 0.4752158224582672, 0.46140071749687195, 0.44770464301109314, 0.43413886427879333, 0.42071598768234253, 0.4074501395225525, 0.39435717463493347, 0.38145485520362854, 0.3687632381916046, 0.3563048243522644, 0.34410491585731506, 0.332192063331604, 0.32059818506240845, 0.30935922265052795, 0.2985152006149292, 0.28811076283454895, 0.27819520235061646, 0.26882266998291016, 0.26005181670188904, 0.2519455552101135, 0.24456994235515594, 0.23799291253089905, 0.23228232562541962, 0.2275034338235855, 0.22371596097946167, 0.22097086906433105, 0.2193073183298111, 0.234375, 0.234895259141922, 0.23644915223121643, 0.23901653289794922, 0.24256522953510284, 0.24705293774604797, 0.2524296045303345, 0.25863978266716003, 0.265625, 0.2733258605003357, 0.28168368339538574, 0.29064181447029114, 0.3001464605331421, 0.31014740467071533, 0.32059818506240845, 0.3314563035964966, 0.34268301725387573, 0.3542432487010956, 0.36610546708106995, 0.3782412111759186, 0.390625, 0.40323400497436523, 0.41604772210121155, 0.4290478229522705, 0.4422178566455841, 0.4555431306362152, 0.4690103530883789, 0.4826076626777649, 0.4963243901729584, 0.5101508498191833, 0.5240784287452698, 0.5380992293357849, 0.5522061586380005, 0.5663927793502808, 0.5806532502174377, 0.5949822664260864, 0.609375, 0.6238270401954651, 0.638334333896637, 0.6528931856155396, 0.6675003170967102, 0.682152509689331, 0.6968469619750977, 0.7115811109542847, 0.7263524532318115, 0.7411588430404663, 0.7559981346130371, 0.7708685398101807, 0.7857682108879089, 0.8006954789161682, 0.8156489729881287, 0.8306271433830261, 0.8456286787986755, 0.8606524467468262, 0.8756972551345825, 0.8907620310783386, 0.9058458209037781, 0.9209476113319397, 0.9360666275024414, 0.9512019753456116, 0.9663528800010681, 0.9815186858177185, 0.9966986775398254, 1.0118921995162964, 1.0270986557006836, 1.042317509651184, 1.05754816532135, 1.072790265083313, 1.0880430936813354, 1.1033064126968384, 1.1185797452926636, 1.1338626146316528, 1.149154782295227, 1.1644556522369385, 1.1797651052474976, 1.195082664489746, 1.210408091545105, 1.2257411479949951, 1.2410814762115479, 1.256428837776184, 1.2717828750610352, 1.2871434688568115, 1.302510380744934, 1.3178832530975342, 1.3332620859146118, 1.348646640777588, 1.3640365600585938, 1.3794317245483398, 1.3948321342468262, 1.410237431526184, 1.425647497177124, 1.4410622119903564, 1.4564813375473022, 1.4719048738479614, 1.4873325824737549, 1.502764344215393, 1.518200159072876, 1.533639669418335, 1.5490829944610596, 1.5645298957824707, 1.5799803733825684, 1.5954341888427734, 1.6108912229537964, 1.6263515949249268, 1.6418150663375854, 1.657281517982483, 1.6727509498596191, 1.6882232427597046, 1.7036982774734497, 1.7191760540008545, 1.7346564531326294, 1.7501394748687744, 1.765625, 1.7811129093170166, 1.7966032028198242, 1.8120958805084229, 1.8275907039642334, 1.8430877923965454, 1.8585870265960693, 1.8740882873535156, 1.8895916938781738, 1.9050970077514648, 1.9206042289733887, 1.9361133575439453, 1.9516243934631348, 1.9671372175216675, 1.9826518297195435, 1.9981681108474731, 2.013686180114746, 1.9981681108474731, 1.9826518297195435, 1.9671372175216675, 1.9516243934631348, 1.9361133575439453, 1.9206042289733887, 1.9050970077514648, 1.8895916938781738, 1.8740882873535156, 1.8585870265960693, 1.8430877923965454, 1.8275907039642334, 1.8120958805084229, 1.7966032028198242, 1.7811129093170166, 1.765625, 1.7501394748687744, 1.7346564531326294, 1.7191760540008545, 1.7036982774734497, 1.6882232427597046, 1.6727509498596191, 1.657281517982483, 1.6418150663375854, 1.6263515949249268, 1.6108912229537964, 1.5954341888427734, 1.5799803733825684, 1.5645298957824707, 1.5490829944610596, 1.533639669418335, 1.518200159072876, 1.502764344215393, 1.4873325824737549, 1.4719048738479614, 1.4564813375473022, 1.4410622119903564, 1.425647497177124, 1.410237431526184, 1.3948321342468262, 1.3794317245483398, 1.3640365600585938, 1.348646640777588, 1.3332620859146118, 1.3178832530975342, 1.302510380744934, 1.2871434688568115, 1.2717828750610352, 1.256428837776184, 1.2410814762115479, 1.2257411479949951, 1.210408091545105, 1.195082664489746, 1.1797651052474976, 1.1644556522369385, 1.149154782295227, 1.1338626146316528, 1.1185797452926636, 1.1033064126968384, 1.0880430936813354, 1.072790265083313, 1.05754816532135, 1.042317509651184, 1.0270986557006836, 1.0118921995162964, 0.9966986775398254, 0.9815186858177185, 0.9663528800010681, 0.9512019753456116, 0.9360666275024414, 0.9209476113319397, 0.9058458209037781, 0.8907620310783386, 0.8756972551345825, 0.8606524467468262, 0.8456286787986755, 0.8306271433830261, 0.8156489729881287, 0.8006954789161682, 0.7857682108879089, 0.7708685398101807, 0.7559981346130371, 0.7411588430404663, 0.7263524532318115, 0.7115811109542847, 0.6968469619750977, 0.682152509689331, 0.6675003170967102, 0.6528931856155396, 0.638334333896637, 0.6238270401954651, 0.609375, 0.5949822664260864, 0.5806532502174377, 0.5663927793502808, 0.5522061586380005, 0.5380992293357849, 0.5240784287452698, 0.5101508498191833, 0.4963243901729584, 0.4826076626777649, 0.4690103530883789, 0.4555431306362152, 0.4422178566455841, 0.4290478229522705, 0.41604772210121155, 0.40323400497436523, 0.390625, 0.3782412111759186, 0.36610546708106995, 0.3542432487010956, 0.34268301725387573, 0.3314563035964966, 0.32059818506240845, 0.31014740467071533, 0.3001464605331421, 0.29064181447029114, 0.28168368339538574, 0.2733258605003357, 0.265625, 0.25863978266716003, 0.2524296045303345, 0.24705293774604797, 0.24256522953510284, 0.23901653289794922, 0.23644915223121643, 0.234895259141922, 0.25, 0.2504878044128418, 0.2519455552101135, 0.2543565630912781, 0.2576940953731537, 0.2619227170944214, 0.26700010895729065, 0.27287888526916504, 0.279508501291275, 0.2868368625640869, 0.2948119044303894, 0.30338263511657715, 0.3125, 0.3221176266670227, 0.332192063331604, 0.34268301725387573, 0.3535533845424652, 0.36476930975914, 0.37629982829093933, 0.3881169557571411, 0.40019527077674866, 0.41251182556152344, 0.4250459671020508, 0.43777891993522644, 0.45069390535354614, 0.4637756943702698, 0.4770105481147766, 0.49038609862327576, 0.503891110420227, 0.5175154805183411, 0.53125, 0.5450863838195801, 0.55901700258255, 0.5730350017547607, 0.5871341824531555, 0.6013088226318359, 0.615553617477417, 0.6298638582229614, 0.6442352533340454, 0.6586636900901794, 0.673145592212677, 0.6876775622367859, 0.7022563815116882, 0.7168793678283691, 0.7315437197685242, 0.7462471127510071, 0.7609872221946716, 0.7757619619369507, 0.7905694246292114, 0.8054077625274658, 0.8202753067016602, 0.8351705074310303, 0.8500919342041016, 0.8650381565093994, 0.8800079822540283, 0.8950002193450928, 0.910013735294342, 0.9250475168228149, 0.9401005506515503, 0.9551720023155212, 0.9702609181404114, 0.9853665828704834, 1.0004881620407104, 1.015625, 1.0307763814926147, 1.045941710472107, 1.0611203908920288, 1.0763118267059326, 1.0915155410766602, 1.1067310571670532, 1.1219576597213745, 1.1371952295303345, 1.1524430513381958, 1.1677008867263794, 1.1829683780670166, 1.1982449293136597, 1.2135305404663086, 1.228824496269226, 1.244126796722412, 1.259437084197998, 1.2747548818588257, 1.2900800704956055, 1.3054124116897583, 1.3207515478134155, 1.3360973596572876, 1.3514496088027954, 1.3668079376220703, 1.3821723461151123, 1.3975424766540527, 1.412918210029602, 1.4282993078231812, 1.44368577003479, 1.45907723903656, 1.4744735956192017, 1.4898747205734253, 1.5052803754806519, 1.520690679550171, 1.5361051559448242, 1.5515239238739014, 1.5669467449188232, 1.5823736190795898, 1.597804307937622, 1.6132386922836304, 1.6286767721176147, 1.644118309020996, 1.6595633029937744, 1.6750116348266602, 1.6904633045196533, 1.7059179544448853, 1.721375823020935, 1.7368366718292236, 1.7523003816604614, 1.7677669525146484, 1.7832362651824951, 1.7987083196640015, 1.814182996749878, 1.829660177230835, 1.8451398611068726, 1.8606219291687012, 1.8761065006256104, 1.8915932178497314, 1.9070823192596436, 1.9225735664367676, 1.9380669593811035, 1.9535624980926514, 1.969059944152832, 1.9845595359802246, 2.00006103515625, 2.015564441680908, 2.00006103515625, 1.9845595359802246, 1.969059944152832, 1.9535624980926514, 1.9380669593811035, 1.9225735664367676, 1.9070823192596436, 1.8915932178497314, 1.8761065006256104, 1.8606219291687012, 1.8451398611068726, 1.829660177230835, 1.814182996749878, 1.7987083196640015, 1.7832362651824951, 1.7677669525146484, 1.7523003816604614, 1.7368366718292236, 1.721375823020935, 1.7059179544448853, 1.6904633045196533, 1.6750116348266602, 1.6595633029937744, 1.644118309020996, 1.6286767721176147, 1.6132386922836304, 1.597804307937622, 1.5823736190795898, 1.5669467449188232, 1.5515239238739014, 1.5361051559448242, 1.520690679550171, 1.5052803754806519, 1.4898747205734253, 1.4744735956192017, 1.45907723903656, 1.44368577003479, 1.4282993078231812, 1.412918210029602, 1.3975424766540527, 1.3821723461151123, 1.3668079376220703, 1.3514496088027954, 1.3360973596572876, 1.3207515478134155, 1.3054124116897583, 1.2900800704956055, 1.2747548818588257, 1.259437084197998, 1.244126796722412, 1.228824496269226, 1.2135305404663086, 1.1982449293136597, 1.1829683780670166, 1.1677008867263794, 1.1524430513381958, 1.1371952295303345, 1.1219576597213745, 1.1067310571670532, 1.0915155410766602, 1.0763118267059326, 1.0611203908920288, 1.045941710472107, 1.0307763814926147, 1.015625, 1.0004881620407104, 0.9853665828704834, 0.9702609181404114, 0.9551720023155212, 0.9401005506515503, 0.9250475168228149, 0.910013735294342, 0.8950002193450928, 0.8800079822540283, 0.8650381565093994, 0.8500919342041016, 0.8351705074310303, 0.8202753067016602, 0.8054077625274658, 0.7905694246292114, 0.7757619619369507, 0.7609872221946716, 0.7462471127510071, 0.7315437197685242, 0.7168793678283691, 0.7022563815116882, 0.6876775622367859, 0.673145592212677, 0.6586636900901794, 0.6442352533340454, 0.6298638582229614, 0.615553617477417, 0.6013088226318359, 0.5871341824531555, 0.5730350017547607, 0.55901700258255, 0.5450863838195801, 0.53125, 0.5175154805183411, 0.503891110420227, 0.49038609862327576, 0.4770105481147766, 0.4637756943702698, 0.45069390535354614, 0.43777891993522644, 0.4250459671020508, 0.41251182556152344, 0.40019527077674866, 0.3881169557571411, 0.37629982829093933, 0.36476930975914, 0.3535533845424652, 0.34268301725387573, 0.332192063331604, 0.3221176266670227, 0.3125, 0.30338263511657715, 0.2948119044303894, 0.2868368625640869, 0.279508501291275, 0.27287888526916504, 0.26700010895729065, 0.2619227170944214, 0.2576940953731537, 0.2543565630912781, 0.2519455552101135, 0.2504878044128418, 0.265625, 0.2660841643810272, 0.26745691895484924, 0.2697293162345886, 0.27287888526916504, 0.27687570452690125, 0.28168368339538574, 0.2872621417045593, 0.29356709122657776, 0.3005528748035431, 0.30817317962646484, 0.31638213992118835, 0.325135201215744, 0.3343895971775055, 0.34410491585731506, 0.3542432487010956, 0.36476930975914, 0.37565046548843384, 0.3868568241596222, 0.3983609080314636, 0.4101376533508301, 0.42216426134109497, 0.4344199597835541, 0.4468859136104584, 0.4595450460910797, 0.4723817706108093, 0.4853820204734802, 0.4985330104827881, 0.5118231177330017, 0.5252417325973511, 0.5387793779373169, 0.5524271726608276, 0.5661771893501282, 0.5800222158432007, 0.5939555764198303, 0.6079711318016052, 0.622063398361206, 0.6362273097038269, 0.6504580974578857, 0.6647514700889587, 0.6791035532951355, 0.6935106515884399, 0.7079694271087646, 0.7224767804145813, 0.7370297908782959, 0.7516258358955383, 0.7662624716758728, 0.7809374332427979, 0.7956485748291016, 0.8103939294815063, 0.8251716494560242, 0.8399800062179565, 0.8548174500465393, 0.8696824908256531, 0.884573757648468, 0.8994898796081543, 0.9144296646118164, 0.9293920397758484, 0.9443758130073547, 0.9593800902366638, 0.9744038581848145, 0.9894462823867798, 1.0045064687728882, 1.0195835828781128, 1.0346770286560059, 1.04978609085083, 1.0649099349975586, 1.0800480842590332, 1.0951999425888062, 1.1103649139404297, 1.125542402267456, 1.1407320499420166, 1.1559332609176636, 1.1711455583572388, 1.186368703842163, 1.2016021013259888, 1.2168455123901367, 1.2320983409881592, 1.2473604679107666, 1.2626315355300903, 1.2779110670089722, 1.293198823928833, 1.3084946870803833, 1.3237980604171753, 1.339108943939209, 1.3544270992279053, 1.369752049446106, 1.385083794593811, 1.4004219770431519, 1.4157663583755493, 1.4311169385910034, 1.4464733600616455, 1.461835503578186, 1.4772030115127563, 1.492576003074646, 1.5079541206359863, 1.5233373641967773, 1.5387253761291504, 1.5541181564331055, 1.5695154666900635, 1.5849173069000244, 1.6003234386444092, 1.6157337427139282, 1.6311482191085815, 1.64656662940979, 1.6619888544082642, 1.677414894104004, 1.6928445100784302, 1.708277702331543, 1.7237144708633423, 1.7391544580459595, 1.754597783088684, 1.770044207572937, 1.7854938507080078, 1.8009464740753174, 1.8164020776748657, 1.8318605422973633, 1.8473217487335205, 1.8627856969833374, 1.878252387046814, 1.893721580505371, 1.9091933965682983, 1.9246677160263062, 1.940144419670105, 1.9556233882904053, 1.9711047410964966, 1.9865883588790894, 2.0020740032196045, 2.0175621509552, 2.0020740032196045, 1.9865883588790894, 1.9711047410964966, 1.9556233882904053, 1.940144419670105, 1.9246677160263062, 1.9091933965682983, 1.893721580505371, 1.878252387046814, 1.8627856969833374, 1.8473217487335205, 1.8318605422973633, 1.8164020776748657, 1.8009464740753174, 1.7854938507080078, 1.770044207572937, 1.754597783088684, 1.7391544580459595, 1.7237144708633423, 1.708277702331543, 1.6928445100784302, 1.677414894104004, 1.6619888544082642, 1.64656662940979, 1.6311482191085815, 1.6157337427139282, 1.6003234386444092, 1.5849173069000244, 1.5695154666900635, 1.5541181564331055, 1.5387253761291504, 1.5233373641967773, 1.5079541206359863, 1.492576003074646, 1.4772030115127563, 1.461835503578186, 1.4464733600616455, 1.4311169385910034, 1.4157663583755493, 1.4004219770431519, 1.385083794593811, 1.369752049446106, 1.3544270992279053, 1.339108943939209, 1.3237980604171753, 1.3084946870803833, 1.293198823928833, 1.2779110670089722, 1.2626315355300903, 1.2473604679107666, 1.2320983409881592, 1.2168455123901367, 1.2016021013259888, 1.186368703842163, 1.1711455583572388, 1.1559332609176636, 1.1407320499420166, 1.125542402267456, 1.1103649139404297, 1.0951999425888062, 1.0800480842590332, 1.0649099349975586, 1.04978609085083, 1.0346770286560059, 1.0195835828781128, 1.0045064687728882, 0.9894462823867798, 0.9744038581848145, 0.9593800902366638, 0.9443758130073547, 0.9293920397758484, 0.9144296646118164, 0.8994898796081543, 0.884573757648468, 0.8696824908256531, 0.8548174500465393, 0.8399800062179565, 0.8251716494560242, 0.8103939294815063, 0.7956485748291016, 0.7809374332427979, 0.7662624716758728, 0.7516258358955383, 0.7370297908782959, 0.7224767804145813, 0.7079694271087646, 0.6935106515884399, 0.6791035532951355, 0.6647514700889587, 0.6504580974578857, 0.6362273097038269, 0.622063398361206, 0.6079711318016052, 0.5939555764198303, 0.5800222158432007, 0.5661771893501282, 0.5524271726608276, 0.5387793779373169, 0.5252417325973511, 0.5118231177330017, 0.4985330104827881, 0.4853820204734802, 0.4723817706108093, 0.4595450460910797, 0.4468859136104584, 0.4344199597835541, 0.42216426134109497, 0.4101376533508301, 0.3983609080314636, 0.3868568241596222, 0.37565046548843384, 0.36476930975914, 0.3542432487010956, 0.34410491585731506, 0.3343895971775055, 0.325135201215744, 0.31638213992118835, 0.30817317962646484, 0.3005528748035431, 0.29356709122657776, 0.2872621417045593, 0.28168368339538574, 0.27687570452690125, 0.27287888526916504, 0.2697293162345886, 0.26745691895484924, 0.2660841643810272, 0.28125, 0.28168368339538574, 0.2829807996749878, 0.28512948751449585, 0.28811076283454895, 0.29189908504486084, 0.2964635193347931, 0.30176886916160583, 0.3077768087387085, 0.3144470453262329, 0.32173845171928406, 0.3296097218990326, 0.3380204439163208, 0.3469313085079193, 0.3563048243522644, 0.36610546708106995, 0.37629982829093933, 0.3868568241596222, 0.39774757623672485, 0.40894538164138794, 0.42042574286460876, 0.4321661591529846, 0.44414594769477844, 0.4563463032245636, 0.46875, 0.48134130239486694, 0.49410587549209595, 0.5070306658744812, 0.5201036334037781, 0.5333139896392822, 0.5466517210006714, 0.5601077675819397, 0.5736737251281738, 0.5873420834541321, 0.6011057496070862, 0.6149584054946899, 0.6288940906524658, 0.6429075002670288, 0.6569936275482178, 0.671147882938385, 0.6853660345077515, 0.699644148349762, 0.7139787077903748, 0.7283663749694824, 0.7428039908409119, 0.7572888135910034, 0.7718180418014526, 0.7863893508911133, 0.8010003566741943, 0.8156489729881287, 0.8303331136703491, 0.845051109790802, 0.8598010540008545, 0.8745813965797424, 0.8893905878067017, 0.9042272567749023, 0.9190900921821594, 0.9339777827262878, 0.9488891363143921, 0.963823139667511, 0.9787787199020386, 0.9937549233436584, 1.0087507963180542, 1.0237654447555542, 1.0387980937957764, 1.0538480281829834, 1.0689144134521484, 1.0839966535568237, 1.099094033241272, 1.114206075668335, 1.1293319463729858, 1.144471287727356, 1.1596235036849976, 1.174787998199463, 1.1899645328521729, 1.2051525115966797, 1.2203514575958252, 1.2355611324310303, 1.2507810592651367, 1.2660107612609863, 1.28125, 1.296498417854309, 1.3117557764053345, 1.327021598815918, 1.34229576587677, 1.3575778007507324, 1.3728677034378052, 1.38816499710083, 1.403469443321228, 1.4187809228897095, 1.4340991973876953, 1.4494240283966064, 1.4647551774978638, 1.4800925254821777, 1.4954357147216797, 1.5107847452163696, 1.5261393785476685, 1.5414994955062866, 1.556864857673645, 1.572235345840454, 1.5876107215881348, 1.602990984916687, 1.6183758974075317, 1.633765459060669, 1.64915931224823, 1.6645575761795044, 1.679960012435913, 1.6953665018081665, 1.710776925086975, 1.7261912822723389, 1.7416093349456787, 1.7570310831069946, 1.772456407546997, 1.787885069847107, 1.8033173084259033, 1.818752646446228, 1.8341913223266602, 1.8496330976486206, 1.8650779724121094, 1.8805257081985474, 1.8959764242172241, 1.91143000125885, 1.9268862009048462, 1.9423452615737915, 1.957806944847107, 1.973271131515503, 1.9887378215789795, 2.004206895828247, 2.0196785926818848, 2.004206895828247, 1.9887378215789795, 1.973271131515503, 1.957806944847107, 1.9423452615737915, 1.9268862009048462, 1.91143000125885, 1.8959764242172241, 1.8805257081985474, 1.8650779724121094, 1.8496330976486206, 1.8341913223266602, 1.818752646446228, 1.8033173084259033, 1.787885069847107, 1.772456407546997, 1.7570310831069946, 1.7416093349456787, 1.7261912822723389, 1.710776925086975, 1.6953665018081665, 1.679960012435913, 1.6645575761795044, 1.64915931224823, 1.633765459060669, 1.6183758974075317, 1.602990984916687, 1.5876107215881348, 1.572235345840454, 1.556864857673645, 1.5414994955062866, 1.5261393785476685, 1.5107847452163696, 1.4954357147216797, 1.4800925254821777, 1.4647551774978638, 1.4494240283966064, 1.4340991973876953, 1.4187809228897095, 1.403469443321228, 1.38816499710083, 1.3728677034378052, 1.3575778007507324, 1.34229576587677, 1.327021598815918, 1.3117557764053345, 1.296498417854309, 1.28125, 1.2660107612609863, 1.2507810592651367, 1.2355611324310303, 1.2203514575958252, 1.2051525115966797, 1.1899645328521729, 1.174787998199463, 1.1596235036849976, 1.144471287727356, 1.1293319463729858, 1.114206075668335, 1.099094033241272, 1.0839966535568237, 1.0689144134521484, 1.0538480281829834, 1.0387980937957764, 1.0237654447555542, 1.0087507963180542, 0.9937549233436584, 0.9787787199020386, 0.963823139667511, 0.9488891363143921, 0.9339777827262878, 0.9190900921821594, 0.9042272567749023, 0.8893905878067017, 0.8745813965797424, 0.8598010540008545, 0.845051109790802, 0.8303331136703491, 0.8156489729881287, 0.8010003566741943, 0.7863893508911133, 0.7718180418014526, 0.7572888135910034, 0.7428039908409119, 0.7283663749694824, 0.7139787077903748, 0.699644148349762, 0.6853660345077515, 0.671147882938385, 0.6569936275482178, 0.6429075002670288, 0.6288940906524658, 0.6149584054946899, 0.6011057496070862, 0.5873420834541321, 0.5736737251281738, 0.5601077675819397, 0.5466517210006714, 0.5333139896392822, 0.5201036334037781, 0.5070306658744812, 0.49410587549209595, 0.48134130239486694, 0.46875, 0.4563463032245636, 0.44414594769477844, 0.4321661591529846, 0.42042574286460876, 0.40894538164138794, 0.39774757623672485, 0.3868568241596222, 0.37629982829093933, 0.36610546708106995, 0.3563048243522644, 0.3469313085079193, 0.3380204439163208, 0.3296097218990326, 0.32173845171928406, 0.3144470453262329, 0.3077768087387085, 0.30176886916160583, 0.2964635193347931, 0.29189908504486084, 0.28811076283454895, 0.28512948751449585, 0.2829807996749878, 0.28168368339538574, 0.296875, 0.29728591442108154, 0.2985152006149292, 0.3005528748035431, 0.30338263511657715, 0.30698254704475403, 0.31132590770721436, 0.31638213992118835, 0.3221176266670227, 0.3284968137741089, 0.33548298478126526, 0.34303903579711914, 0.3511281907558441, 0.3597145080566406, 0.3687632381916046, 0.3782412111759186, 0.3881169557571411, 0.3983609080314636, 0.40894538164138794, 0.4198446571826935, 0.4310348331928253, 0.44249382615089417, 0.4542013108730316, 0.4661385715007782, 0.4782883822917938, 0.490634948015213, 0.5031638145446777, 0.5158616900444031, 0.5287163853645325, 0.5417167544364929, 0.5548525452613831, 0.5681143403053284, 0.5814935564994812, 0.5949822664260864, 0.6085731983184814, 0.6222596168518066, 0.6360353827476501, 0.6498948335647583, 0.6638326644897461, 0.6778441071510315, 0.6919246912002563, 0.7060702443122864, 0.7202768921852112, 0.7345411777496338, 0.7488598227500916, 0.7632296681404114, 0.7776479721069336, 0.7921119928359985, 0.8066193461418152, 0.8211677074432373, 0.835754930973053, 0.8503790497779846, 0.8650381565093994, 0.8797305226325989, 0.8944544792175293, 0.9092085361480713, 0.9239912033081055, 0.9388011693954468, 0.9536371827125549, 0.9684979319572449, 0.9833824634552002, 0.9982895255088806, 1.0132182836532593, 1.028167724609375, 1.0431369543075562, 1.0581251382827759, 1.0731315612792969, 1.0881553888320923, 1.1031957864761353, 1.1182522773742676, 1.1333242654800415, 1.1484109163284302, 1.163511872291565, 1.1786264181137085, 1.1937540769577026, 1.2088944911956787, 1.2240469455718994, 1.2392112016677856, 1.2543867826461792, 1.2695733308792114, 1.2847703695297241, 1.299977421760559, 1.3151943683624268, 1.3304208517074585, 1.345656394958496, 1.3609007596969604, 1.376153588294983, 1.391414761543274, 1.4066839218139648, 1.4219608306884766, 1.43724524974823, 1.4525368213653564, 1.467835545539856, 1.4831409454345703, 1.4984530210494995, 1.513771414756775, 1.529096007347107, 1.544426679611206, 1.5597631931304932, 1.5751054286956787, 1.590453028678894, 1.6058061122894287, 1.621164321899414, 1.63652765750885, 1.6518957614898682, 1.6672687530517578, 1.68264639377594, 1.6980284452438354, 1.7134150266647339, 1.7288057804107666, 1.7442008256912231, 1.7595998048782349, 1.7750027179718018, 1.7904095649719238, 1.805820107460022, 1.8212343454360962, 1.836652159690857, 1.8520734310150146, 1.8674980401992798, 1.8829259872436523, 1.8983571529388428, 1.9137914180755615, 1.9292287826538086, 1.944669246673584, 1.960112452507019, 1.9755586385726929, 1.9910075664520264, 2.0064592361450195, 2.021913528442383, 2.0064592361450195, 1.9910075664520264, 1.9755586385726929, 1.960112452507019, 1.944669246673584, 1.9292287826538086, 1.9137914180755615, 1.8983571529388428, 1.8829259872436523, 1.8674980401992798, 1.8520734310150146, 1.836652159690857, 1.8212343454360962, 1.805820107460022, 1.7904095649719238, 1.7750027179718018, 1.7595998048782349, 1.7442008256912231, 1.7288057804107666, 1.7134150266647339, 1.6980284452438354, 1.68264639377594, 1.6672687530517578, 1.6518957614898682, 1.63652765750885, 1.621164321899414, 1.6058061122894287, 1.590453028678894, 1.5751054286956787, 1.5597631931304932, 1.544426679611206, 1.529096007347107, 1.513771414756775, 1.4984530210494995, 1.4831409454345703, 1.467835545539856, 1.4525368213653564, 1.43724524974823, 1.4219608306884766, 1.4066839218139648, 1.391414761543274, 1.376153588294983, 1.3609007596969604, 1.345656394958496, 1.3304208517074585, 1.3151943683624268, 1.299977421760559, 1.2847703695297241, 1.2695733308792114, 1.2543867826461792, 1.2392112016677856, 1.2240469455718994, 1.2088944911956787, 1.1937540769577026, 1.1786264181137085, 1.163511872291565, 1.1484109163284302, 1.1333242654800415, 1.1182522773742676, 1.1031957864761353, 1.0881553888320923, 1.0731315612792969, 1.0581251382827759, 1.0431369543075562, 1.028167724609375, 1.0132182836532593, 0.9982895255088806, 0.9833824634552002, 0.9684979319572449, 0.9536371827125549, 0.9388011693954468, 0.9239912033081055, 0.9092085361480713, 0.8944544792175293, 0.8797305226325989, 0.8650381565093994, 0.8503790497779846, 0.835754930973053, 0.8211677074432373, 0.8066193461418152, 0.7921119928359985, 0.7776479721069336, 0.7632296681404114, 0.7488598227500916, 0.7345411777496338, 0.7202768921852112, 0.7060702443122864, 0.6919246912002563, 0.6778441071510315, 0.6638326644897461, 0.6498948335647583, 0.6360353827476501, 0.6222596168518066, 0.6085731983184814, 0.5949822664260864, 0.5814935564994812, 0.5681143403053284, 0.5548525452613831, 0.5417167544364929, 0.5287163853645325, 0.5158616900444031, 0.5031638145446777, 0.490634948015213, 0.4782883822917938, 0.4661385715007782, 0.4542013108730316, 0.44249382615089417, 0.4310348331928253, 0.4198446571826935, 0.40894538164138794, 0.3983609080314636, 0.3881169557571411, 0.3782412111759186, 0.3687632381916046, 0.3597145080566406, 0.3511281907558441, 0.34303903579711914, 0.33548298478126526, 0.3284968137741089, 0.3221176266670227, 0.31638213992118835, 0.31132590770721436, 0.30698254704475403, 0.30338263511657715, 0.3005528748035431, 0.2985152006149292, 0.29728591442108154, 0.3125, 0.3128903806209564, 0.3140586018562317, 0.31599608063697815, 0.3186887204647064, 0.3221176266670227, 0.326259583234787, 0.3310878276824951, 0.3365727961063385, 0.34268301725387573, 0.3493856191635132, 0.356647253036499, 0.36443448066711426, 0.37271440029144287, 0.38145485520362854, 0.390625, 0.40019527077674866, 0.4101376533508301, 0.42042574286460876, 0.4310348331928253, 0.4419417381286621, 0.453125, 0.46456465125083923, 0.47624221444129944, 0.48814061284065247, 0.5002440810203552, 0.5125381350517273, 0.525009274482727, 0.5376453399658203, 0.5504348278045654, 0.5633673667907715, 0.5764333605766296, 0.5896238088607788, 0.6029306650161743, 0.6163463592529297, 0.6298638582229614, 0.6434769034385681, 0.6571794152259827, 0.6709659695625305, 0.684831440448761, 0.6987712383270264, 0.7127808928489685, 0.7268564701080322, 0.7409940958023071, 0.755190372467041, 0.7694420218467712, 0.7837460041046143, 0.7980995774269104, 0.8125, 0.826944887638092, 0.8414319753646851, 0.8559591174125671, 0.8705242872238159, 0.8851255774497986, 0.8997612595558167, 0.9144296646118164, 0.9291293025016785, 0.9438586235046387, 0.9586163759231567, 0.9734011292457581, 0.9882117509841919, 1.0030471086502075, 1.0179060697555542, 1.0327876806259155, 1.0476908683776855, 1.062614917755127, 1.0775587558746338, 1.0925216674804688, 1.107502818107605, 1.1225016117095947, 1.1375172138214111, 1.1525490283966064, 1.1675963401794434, 1.1826586723327637, 1.1977355480194092, 1.212826132774353, 1.2279301881790161, 1.2430471181869507, 1.258176326751709, 1.2733176946640015, 1.2884705066680908, 1.303634524345398, 1.3188092708587646, 1.3339943885803223, 1.3491895198822021, 1.3643944263458252, 1.3796087503433228, 1.3948321342468262, 1.4100642204284668, 1.425304889678955, 1.4405537843704224, 1.4558106660842896, 1.4710752964019775, 1.4863473176956177, 1.50162672996521, 1.5169130563735962, 1.5322062969207764, 1.5475062131881714, 1.5628124475479126, 1.578125, 1.5934436321258545, 1.608768105506897, 1.624098300933838, 1.6394340991973877, 1.6547752618789673, 1.6701217889785767, 1.6854733228683472, 1.7008298635482788, 1.716191291809082, 1.7315573692321777, 1.746928095817566, 1.7623032331466675, 1.7776827812194824, 1.7930666208267212, 1.8084545135498047, 1.823846459388733, 1.8392423391342163, 1.8546420335769653, 1.87004554271698, 1.8854526281356812, 1.9008632898330688, 1.9162774085998535, 1.9316949844360352, 1.9471157789230347, 1.962539792060852, 1.9779670238494873, 1.9933973550796509, 2.0088305473327637, 2.0242669582366943, 2.0088305473327637, 1.9933973550796509, 1.9779670238494873, 1.962539792060852, 1.9471157789230347, 1.9316949844360352, 1.9162774085998535, 1.9008632898330688, 1.8854526281356812, 1.87004554271698, 1.8546420335769653, 1.8392423391342163, 1.823846459388733, 1.8084545135498047, 1.7930666208267212, 1.7776827812194824, 1.7623032331466675, 1.746928095817566, 1.7315573692321777, 1.716191291809082, 1.7008298635482788, 1.6854733228683472, 1.6701217889785767, 1.6547752618789673, 1.6394340991973877, 1.624098300933838, 1.608768105506897, 1.5934436321258545, 1.578125, 1.5628124475479126, 1.5475062131881714, 1.5322062969207764, 1.5169130563735962, 1.50162672996521, 1.4863473176956177, 1.4710752964019775, 1.4558106660842896, 1.4405537843704224, 1.425304889678955, 1.4100642204284668, 1.3948321342468262, 1.3796087503433228, 1.3643944263458252, 1.3491895198822021, 1.3339943885803223, 1.3188092708587646, 1.303634524345398, 1.2884705066680908, 1.2733176946640015, 1.258176326751709, 1.2430471181869507, 1.2279301881790161, 1.212826132774353, 1.1977355480194092, 1.1826586723327637, 1.1675963401794434, 1.1525490283966064, 1.1375172138214111, 1.1225016117095947, 1.107502818107605, 1.0925216674804688, 1.0775587558746338, 1.062614917755127, 1.0476908683776855, 1.0327876806259155, 1.0179060697555542, 1.0030471086502075, 0.9882117509841919, 0.9734011292457581, 0.9586163759231567, 0.9438586235046387, 0.9291293025016785, 0.9144296646118164, 0.8997612595558167, 0.8851255774497986, 0.8705242872238159, 0.8559591174125671, 0.8414319753646851, 0.826944887638092, 0.8125, 0.7980995774269104, 0.7837460041046143, 0.7694420218467712, 0.755190372467041, 0.7409940958023071, 0.7268564701080322, 0.7127808928489685, 0.6987712383270264, 0.684831440448761, 0.6709659695625305, 0.6571794152259827, 0.6434769034385681, 0.6298638582229614, 0.6163463592529297, 0.6029306650161743, 0.5896238088607788, 0.5764333605766296, 0.5633673667907715, 0.5504348278045654, 0.5376453399658203, 0.525009274482727, 0.5125381350517273, 0.5002440810203552, 0.48814061284065247, 0.47624221444129944, 0.46456465125083923, 0.453125, 0.4419417381286621, 0.4310348331928253, 0.42042574286460876, 0.4101376533508301, 0.40019527077674866, 0.390625, 0.38145485520362854, 0.37271440029144287, 0.36443448066711426, 0.356647253036499, 0.3493856191635132, 0.34268301725387573, 0.3365727961063385, 0.3310878276824951, 0.326259583234787, 0.3221176266670227, 0.3186887204647064, 0.31599608063697815, 0.3140586018562317, 0.3128903806209564, 0.328125, 0.3284968137741089, 0.3296097218990326, 0.3314563035964966, 0.3340243399143219, 0.33729737997055054, 0.34125515818595886, 0.3458741307258606, 0.3511281907558441, 0.3569893538951874, 0.3634282350540161, 0.370414674282074, 0.3779183328151703, 0.3859090209007263, 0.39435717463493347, 0.40323400497436523, 0.41251182556152344, 0.42216426134109497, 0.4321661591529846, 0.44249382615089417, 0.453125, 0.46403881907463074, 0.4752158224582672, 0.4866378605365753, 0.498288094997406, 0.5101508498191833, 0.5222117304801941, 0.5344572067260742, 0.546875, 0.559453547000885, 0.572182297706604, 0.585051417350769, 0.5980518460273743, 0.6111752390861511, 0.624413788318634, 0.63776034116745, 0.6512083411216736, 0.6647514700889587, 0.6783841848373413, 0.6921010613441467, 0.705897331237793, 0.7197682857513428, 0.7337098121643066, 0.7477178573608398, 0.7617888450622559, 0.7759193181991577, 0.7901060581207275, 0.8043460845947266, 0.8186366558074951, 0.8329752087593079, 0.8473591804504395, 0.8617863655090332, 0.876254677772522, 0.8907620310783386, 0.9053066372871399, 0.9198866486549377, 0.9345003962516785, 0.9491463899612427, 0.963823139667511, 0.9785292744636536, 0.9932634234428406, 1.0080244541168213, 1.0228111743927002, 1.037622332572937, 1.0524570941925049, 1.0673145055770874, 1.082193374633789, 1.097093105316162, 1.1120127439498901, 1.1269514560699463, 1.1419085264205933, 1.1568832397460938, 1.171875, 1.1868830919265747, 1.2019068002700806, 1.216945767402649, 1.2319992780685425, 1.247066855430603, 1.2621480226516724, 1.2772421836853027, 1.2923489809036255, 1.307468056678772, 1.3225988149642944, 1.3377408981323242, 1.3528940677642822, 1.3680577278137207, 1.38323175907135, 1.3984156847000122, 1.413609266281128, 1.428812026977539, 1.4440239667892456, 1.4592444896697998, 1.4744735956192017, 1.489710807800293, 1.5049560070037842, 1.5202089548110962, 1.5354692935943604, 1.5507370233535767, 1.566011667251587, 1.5812932252883911, 1.5965814590454102, 1.611876130104065, 1.6271770000457764, 1.6424840688705444, 1.6577969789505005, 1.6731157302856445, 1.6884400844573975, 1.7037699222564697, 1.7191051244735718, 1.734445333480835, 1.7497906684875488, 1.7651410102844238, 1.7804960012435913, 1.7958556413650513, 1.8112199306488037, 1.82658851146698, 1.8419615030288696, 1.8573386669158936, 1.8727200031280518, 1.8881052732467651, 1.9034944772720337, 1.9188873767852783, 1.9342840909957886, 1.949684500694275, 1.9650883674621582, 1.9804956912994385, 1.9959064722061157, 2.0113205909729004, 2.026737689971924, 2.0113205909729004, 1.9959064722061157, 1.9804956912994385, 1.9650883674621582, 1.949684500694275, 1.9342840909957886, 1.9188873767852783, 1.9034944772720337, 1.8881052732467651, 1.8727200031280518, 1.8573386669158936, 1.8419615030288696, 1.82658851146698, 1.8112199306488037, 1.7958556413650513, 1.7804960012435913, 1.7651410102844238, 1.7497906684875488, 1.734445333480835, 1.7191051244735718, 1.7037699222564697, 1.6884400844573975, 1.6731157302856445, 1.6577969789505005, 1.6424840688705444, 1.6271770000457764, 1.611876130104065, 1.5965814590454102, 1.5812932252883911, 1.566011667251587, 1.5507370233535767, 1.5354692935943604, 1.5202089548110962, 1.5049560070037842, 1.489710807800293, 1.4744735956192017, 1.4592444896697998, 1.4440239667892456, 1.428812026977539, 1.413609266281128, 1.3984156847000122, 1.38323175907135, 1.3680577278137207, 1.3528940677642822, 1.3377408981323242, 1.3225988149642944, 1.307468056678772, 1.2923489809036255, 1.2772421836853027, 1.2621480226516724, 1.247066855430603, 1.2319992780685425, 1.216945767402649, 1.2019068002700806, 1.1868830919265747, 1.171875, 1.1568832397460938, 1.1419085264205933, 1.1269514560699463, 1.1120127439498901, 1.097093105316162, 1.082193374633789, 1.0673145055770874, 1.0524570941925049, 1.037622332572937, 1.0228111743927002, 1.0080244541168213, 0.9932634234428406, 0.9785292744636536, 0.963823139667511, 0.9491463899612427, 0.9345003962516785, 0.9198866486549377, 0.9053066372871399, 0.8907620310783386, 0.876254677772522, 0.8617863655090332, 0.8473591804504395, 0.8329752087593079, 0.8186366558074951, 0.8043460845947266, 0.7901060581207275, 0.7759193181991577, 0.7617888450622559, 0.7477178573608398, 0.7337098121643066, 0.7197682857513428, 0.705897331237793, 0.6921010613441467, 0.6783841848373413, 0.6647514700889587, 0.6512083411216736, 0.63776034116745, 0.624413788318634, 0.6111752390861511, 0.5980518460273743, 0.585051417350769, 0.572182297706604, 0.559453547000885, 0.546875, 0.5344572067260742, 0.5222117304801941, 0.5101508498191833, 0.498288094997406, 0.4866378605365753, 0.4752158224582672, 0.46403881907463074, 0.453125, 0.44249382615089417, 0.4321661591529846, 0.42216426134109497, 0.41251182556152344, 0.40323400497436523, 0.39435717463493347, 0.3859090209007263, 0.3779183328151703, 0.370414674282074, 0.3634282350540161, 0.3569893538951874, 0.3511281907558441, 0.3458741307258606, 0.34125515818595886, 0.33729737997055054, 0.3340243399143219, 0.3314563035964966, 0.3296097218990326, 0.3284968137741089, 0.34375, 0.34410491585731506, 0.34516751766204834, 0.3469313085079193, 0.3493856191635132, 0.3525160551071167, 0.3563048243522644, 0.3607311248779297, 0.3657718598842621, 0.37140199542045593, 0.3775951862335205, 0.38432419300079346, 0.3915613889694214, 0.3992791473865509, 0.4074501395225525, 0.41604772210121155, 0.4250459671020508, 0.4344199597835541, 0.44414594769477844, 0.4542013108730316, 0.46456465125083923, 0.4752158224582672, 0.48613590002059937, 0.4973072111606598, 0.5087131261825562, 0.5203382968902588, 0.5321683287620544, 0.5441898107528687, 0.5563904047012329, 0.5687586069107056, 0.5812836289405823, 0.5939555764198303, 0.6067652702331543, 0.6197041273117065, 0.6327642798423767, 0.6459383368492126, 0.6592194437980652, 0.6726013422012329, 0.6860780715942383, 0.699644148349762, 0.713294506072998, 0.7270243763923645, 0.740829348564148, 0.7547053098678589, 0.7686483860015869, 0.7826550006866455, 0.7967218160629272, 0.810845673084259, 0.8250236511230469, 0.8392530679702759, 0.8535312414169312, 0.8678559064865112, 0.8822246193885803, 0.8966354131698608, 0.9110862612724304, 0.9255751967430115, 0.9401005506515503, 0.9546606540679932, 0.9692538976669312, 0.9838788509368896, 0.998534083366394, 1.0132182836532593, 1.0279302597045898, 1.0426688194274902, 1.057432770729065, 1.0722211599349976, 1.0870329141616821, 1.1018671989440918, 1.1167230606079102, 1.1315995454788208, 1.146496057510376, 1.1614116430282593, 1.1763455867767334, 1.1912974119186401, 1.206266164779663, 1.2212514877319336, 1.2362525463104248, 1.2512688636779785, 1.2662999629974365, 1.281345248222351, 1.296404242515564, 1.3114765882492065, 1.3265615701675415, 1.3416589498519897, 1.3567683696746826, 1.3718892335891724, 1.3870213031768799, 1.4021642208099365, 1.417317509651184, 1.432481050491333, 1.447654366493225, 1.4628372192382812, 1.4780292510986328, 1.4932302236557007, 1.5084397792816162, 1.5236577987670898, 1.5388840436935425, 1.5541181564331055, 1.5693598985671997, 1.5846091508865356, 1.5998656749725342, 1.6151292324066162, 1.6303997039794922, 1.6456767320632935, 1.66096031665802, 1.6762501001358032, 1.691546082496643, 1.7068480253219604, 1.7221556901931763, 1.7374690771102905, 1.7527879476547241, 1.7681121826171875, 1.7834416627883911, 1.7987761497497559, 1.8141156435012817, 1.8294600248336792, 1.8448090553283691, 1.860162615776062, 1.8755207061767578, 1.890883207321167, 1.90625, 1.9216209650039673, 1.9369958639144897, 1.952374815940857, 1.9677577018737793, 1.9831442832946777, 1.9985345602035522, 2.0139286518096924, 2.0293259620666504, 2.0139286518096924, 1.9985345602035522, 1.9831442832946777, 1.9677577018737793, 1.952374815940857, 1.9369958639144897, 1.9216209650039673, 1.90625, 1.890883207321167, 1.8755207061767578, 1.860162615776062, 1.8448090553283691, 1.8294600248336792, 1.8141156435012817, 1.7987761497497559, 1.7834416627883911, 1.7681121826171875, 1.7527879476547241, 1.7374690771102905, 1.7221556901931763, 1.7068480253219604, 1.691546082496643, 1.6762501001358032, 1.66096031665802, 1.6456767320632935, 1.6303997039794922, 1.6151292324066162, 1.5998656749725342, 1.5846091508865356, 1.5693598985671997, 1.5541181564331055, 1.5388840436935425, 1.5236577987670898, 1.5084397792816162, 1.4932302236557007, 1.4780292510986328, 1.4628372192382812, 1.447654366493225, 1.432481050491333, 1.417317509651184, 1.4021642208099365, 1.3870213031768799, 1.3718892335891724, 1.3567683696746826, 1.3416589498519897, 1.3265615701675415, 1.3114765882492065, 1.296404242515564, 1.281345248222351, 1.2662999629974365, 1.2512688636779785, 1.2362525463104248, 1.2212514877319336, 1.206266164779663, 1.1912974119186401, 1.1763455867767334, 1.1614116430282593, 1.146496057510376, 1.1315995454788208, 1.1167230606079102, 1.1018671989440918, 1.0870329141616821, 1.0722211599349976, 1.057432770729065, 1.0426688194274902, 1.0279302597045898, 1.0132182836532593, 0.998534083366394, 0.9838788509368896, 0.9692538976669312, 0.9546606540679932, 0.9401005506515503, 0.9255751967430115, 0.9110862612724304, 0.8966354131698608, 0.8822246193885803, 0.8678559064865112, 0.8535312414169312, 0.8392530679702759, 0.8250236511230469, 0.810845673084259, 0.7967218160629272, 0.7826550006866455, 0.7686483860015869, 0.7547053098678589, 0.740829348564148, 0.7270243763923645, 0.713294506072998, 0.699644148349762, 0.6860780715942383, 0.6726013422012329, 0.6592194437980652, 0.6459383368492126, 0.6327642798423767, 0.6197041273117065, 0.6067652702331543, 0.5939555764198303, 0.5812836289405823, 0.5687586069107056, 0.5563904047012329, 0.5441898107528687, 0.5321683287620544, 0.5203382968902588, 0.5087131261825562, 0.4973072111606598, 0.48613590002059937, 0.4752158224582672, 0.46456465125083923, 0.4542013108730316, 0.44414594769477844, 0.4344199597835541, 0.4250459671020508, 0.41604772210121155, 0.4074501395225525, 0.3992791473865509, 0.3915613889694214, 0.38432419300079346, 0.3775951862335205, 0.37140199542045593, 0.3657718598842621, 0.3607311248779297, 0.3563048243522644, 0.3525160551071167, 0.3493856191635132, 0.3469313085079193, 0.34516751766204834, 0.34410491585731506, 0.359375, 0.3597145080566406, 0.3607311248779297, 0.36241915822029114, 0.36476930975914, 0.3677688241004944, 0.37140199542045593, 0.37565046548843384, 0.3804936110973358, 0.3859090209007263, 0.39187300205230713, 0.3983609080314636, 0.4053475558757782, 0.4128076434135437, 0.42071598768234253, 0.4290478229522705, 0.43777891993522644, 0.4468859136104584, 0.4563463032245636, 0.4661385715007782, 0.47624221444129944, 0.4866378605365753, 0.4973072111606598, 0.5082330107688904, 0.5193990468978882, 0.5307902693748474, 0.5423923134803772, 0.5541921257972717, 0.5661771893501282, 0.5783361196517944, 0.5906580686569214, 0.6031330823898315, 0.6157518625259399, 0.6285057663917542, 0.6413867473602295, 0.6543872356414795, 0.6675003170967102, 0.6807193756103516, 0.6940385103225708, 0.7074519395828247, 0.7209544777870178, 0.7345411777496338, 0.7482075095176697, 0.7619490623474121, 0.7757619619369507, 0.7896423935890198, 0.8035869002342224, 0.817592203617096, 0.8316552042961121, 0.8457730412483215, 0.8599429726600647, 0.8741625547409058, 0.8884292840957642, 0.9027410745620728, 0.9170956611633301, 0.9314911365509033, 0.9459256529808044, 0.960397481918335, 0.9749048352241516, 0.9894462823867798, 1.0040202140808105, 1.0186253786087036, 1.0332603454589844, 1.0479239225387573, 1.062614917755127, 1.0773321390151978, 1.0920746326446533, 1.1068413257598877, 1.1216312646865845, 1.1364434957504272, 1.1512773036956787, 1.1661317348480225, 1.1810060739517212, 1.1958996057510376, 1.2108114957809448, 1.2257411479949951, 1.2406879663467407, 1.2556512355804443, 1.2706304788589478, 1.2856251001358032, 1.3006346225738525, 1.315658450126648, 1.3306959867477417, 1.3457471132278442, 1.3608109951019287, 1.3758875131607056, 1.390976071357727, 1.406076431274414, 1.4211879968643188, 1.4363106489181519, 1.4514439105987549, 1.4665875434875488, 1.4817410707473755, 1.4969043731689453, 1.5120769739151, 1.5272588729858398, 1.5424494743347168, 1.557648777961731, 1.5728563070297241, 1.5880719423294067, 1.6032955646514893, 1.618526816368103, 1.633765459060669, 1.649011254310608, 1.66426420211792, 1.6795239448547363, 1.6947903633117676, 1.7100632190704346, 1.7253425121307373, 1.7406277656555176, 1.755919098854065, 1.7712162733078003, 1.7865190505981445, 1.8018274307250977, 1.8171411752700806, 1.8324601650238037, 1.8477842807769775, 1.8631134033203125, 1.8784472942352295, 1.893786072731018, 1.9091295003890991, 1.924477458000183, 1.939829707145691, 1.955186367034912, 1.9705473184585571, 1.9859123229980469, 2.001281261444092, 2.0166542530059814, 2.0320310592651367, 2.0166542530059814, 2.001281261444092, 1.9859123229980469, 1.9705473184585571, 1.955186367034912, 1.939829707145691, 1.924477458000183, 1.9091295003890991, 1.893786072731018, 1.8784472942352295, 1.8631134033203125, 1.8477842807769775, 1.8324601650238037, 1.8171411752700806, 1.8018274307250977, 1.7865190505981445, 1.7712162733078003, 1.755919098854065, 1.7406277656555176, 1.7253425121307373, 1.7100632190704346, 1.6947903633117676, 1.6795239448547363, 1.66426420211792, 1.649011254310608, 1.633765459060669, 1.618526816368103, 1.6032955646514893, 1.5880719423294067, 1.5728563070297241, 1.557648777961731, 1.5424494743347168, 1.5272588729858398, 1.5120769739151, 1.4969043731689453, 1.4817410707473755, 1.4665875434875488, 1.4514439105987549, 1.4363106489181519, 1.4211879968643188, 1.406076431274414, 1.390976071357727, 1.3758875131607056, 1.3608109951019287, 1.3457471132278442, 1.3306959867477417, 1.315658450126648, 1.3006346225738525, 1.2856251001358032, 1.2706304788589478, 1.2556512355804443, 1.2406879663467407, 1.2257411479949951, 1.2108114957809448, 1.1958996057510376, 1.1810060739517212, 1.1661317348480225, 1.1512773036956787, 1.1364434957504272, 1.1216312646865845, 1.1068413257598877, 1.0920746326446533, 1.0773321390151978, 1.062614917755127, 1.0479239225387573, 1.0332603454589844, 1.0186253786087036, 1.0040202140808105, 0.9894462823867798, 0.9749048352241516, 0.960397481918335, 0.9459256529808044, 0.9314911365509033, 0.9170956611633301, 0.9027410745620728, 0.8884292840957642, 0.8741625547409058, 0.8599429726600647, 0.8457730412483215, 0.8316552042961121, 0.817592203617096, 0.8035869002342224, 0.7896423935890198, 0.7757619619369507, 0.7619490623474121, 0.7482075095176697, 0.7345411777496338, 0.7209544777870178, 0.7074519395828247, 0.6940385103225708, 0.6807193756103516, 0.6675003170967102, 0.6543872356414795, 0.6413867473602295, 0.6285057663917542, 0.6157518625259399, 0.6031330823898315, 0.5906580686569214, 0.5783361196517944, 0.5661771893501282, 0.5541921257972717, 0.5423923134803772, 0.5307902693748474, 0.5193990468978882, 0.5082330107688904, 0.4973072111606598, 0.4866378605365753, 0.47624221444129944, 0.4661385715007782, 0.4563463032245636, 0.4468859136104584, 0.43777891993522644, 0.4290478229522705, 0.42071598768234253, 0.4128076434135437, 0.4053475558757782, 0.3983609080314636, 0.39187300205230713, 0.3859090209007263, 0.3804936110973358, 0.37565046548843384, 0.37140199542045593, 0.3677688241004944, 0.36476930975914, 0.36241915822029114, 0.3607311248779297, 0.3597145080566406, 0.375, 0.37532538175582886, 0.37629982829093933, 0.3779183328151703, 0.3801726698875427, 0.3830515742301941, 0.3865411579608917, 0.390625, 0.3952847123146057, 0.40050017833709717, 0.40625, 0.41251182556152344, 0.41926273703575134, 0.4264794886112213, 0.43413886427879333, 0.4422178566455841, 0.45069390535354614, 0.4595450460910797, 0.46875, 0.4782883822917938, 0.48814061284065247, 0.498288094997406, 0.5087131261825562, 0.5193990468978882, 0.5303300619125366, 0.5414913296699524, 0.5528689622879028, 0.5644497275352478, 0.5762215256690979, 0.5881727933883667, 0.6002929210662842, 0.6125717163085938, 0.625, 0.6375689506530762, 0.650270402431488, 0.6630967259407043, 0.6760408878326416, 0.6890961527824402, 0.7022563815116882, 0.7155157923698425, 0.7288689613342285, 0.7423108220100403, 0.7558366656303406, 0.7694420218467712, 0.7831227779388428, 0.796875, 0.8106951117515564, 0.824579656124115, 0.8385254740715027, 0.8525295257568359, 0.8665890097618103, 0.8807013034820557, 0.8948638439178467, 0.9090742468833923, 0.9233304262161255, 0.9376301765441895, 0.9519716501235962, 0.9663528800010681, 0.9807721972465515, 0.9952278733253479, 1.009718418121338, 1.0242422819137573, 1.0387980937957764, 1.0533846616744995, 1.0680004358291626, 1.0826444625854492, 1.0973156690597534, 1.1120127439498901, 1.126734733581543, 1.141480803489685, 1.15625, 1.1710413694381714, 1.1858540773391724, 1.2006874084472656, 1.2155406475067139, 1.2304129600524902, 1.2453036308288574, 1.2602121829986572, 1.2751379013061523, 1.2900800704956055, 1.305038332939148, 1.3200119733810425, 1.3350006341934204, 1.3500036001205444, 1.3650206327438354, 1.3800511360168457, 1.395094633102417, 1.4101508855819702, 1.4252192974090576, 1.4402996301651, 1.4553914070129395, 1.470494270324707, 1.4856079816818237, 1.5007323026657104, 1.5158666372299194, 1.5310108661651611, 1.546164631843567, 1.5613276958465576, 1.5764998197555542, 1.591680645942688, 1.6068700551986694, 1.6220676898956299, 1.6372733116149902, 1.6524869203567505, 1.6677080392837524, 1.6829365491867065, 1.6981722116470337, 1.7134150266647339, 1.7286646366119385, 1.7439208030700684, 1.7591835260391235, 1.7744524478912354, 1.7897276878356934, 1.8050087690353394, 1.8202956914901733, 1.8355884552001953, 1.850886583328247, 1.8661901950836182, 1.881499171257019, 1.8968132734298706, 1.9121322631835938, 1.9274563789367676, 1.9427851438522339, 1.9581185579299927, 1.973456621170044, 1.9887992143630981, 2.004146099090576, 2.0194971561431885, 2.0348525047302246, 2.0194971561431885, 2.004146099090576, 1.9887992143630981, 1.973456621170044, 1.9581185579299927, 1.9427851438522339, 1.9274563789367676, 1.9121322631835938, 1.8968132734298706, 1.881499171257019, 1.8661901950836182, 1.850886583328247, 1.8355884552001953, 1.8202956914901733, 1.8050087690353394, 1.7897276878356934, 1.7744524478912354, 1.7591835260391235, 1.7439208030700684, 1.7286646366119385, 1.7134150266647339, 1.6981722116470337, 1.6829365491867065, 1.6677080392837524, 1.6524869203567505, 1.6372733116149902, 1.6220676898956299, 1.6068700551986694, 1.591680645942688, 1.5764998197555542, 1.5613276958465576, 1.546164631843567, 1.5310108661651611, 1.5158666372299194, 1.5007323026657104, 1.4856079816818237, 1.470494270324707, 1.4553914070129395, 1.4402996301651, 1.4252192974090576, 1.4101508855819702, 1.395094633102417, 1.3800511360168457, 1.3650206327438354, 1.3500036001205444, 1.3350006341934204, 1.3200119733810425, 1.305038332939148, 1.2900800704956055, 1.2751379013061523, 1.2602121829986572, 1.2453036308288574, 1.2304129600524902, 1.2155406475067139, 1.2006874084472656, 1.1858540773391724, 1.1710413694381714, 1.15625, 1.141480803489685, 1.126734733581543, 1.1120127439498901, 1.0973156690597534, 1.0826444625854492, 1.0680004358291626, 1.0533846616744995, 1.0387980937957764, 1.0242422819137573, 1.009718418121338, 0.9952278733253479, 0.9807721972465515, 0.9663528800010681, 0.9519716501235962, 0.9376301765441895, 0.9233304262161255, 0.9090742468833923, 0.8948638439178467, 0.8807013034820557, 0.8665890097618103, 0.8525295257568359, 0.8385254740715027, 0.824579656124115, 0.8106951117515564, 0.796875, 0.7831227779388428, 0.7694420218467712, 0.7558366656303406, 0.7423108220100403, 0.7288689613342285, 0.7155157923698425, 0.7022563815116882, 0.6890961527824402, 0.6760408878326416, 0.6630967259407043, 0.650270402431488, 0.6375689506530762, 0.625, 0.6125717163085938, 0.6002929210662842, 0.5881727933883667, 0.5762215256690979, 0.5644497275352478, 0.5528689622879028, 0.5414913296699524, 0.5303300619125366, 0.5193990468978882, 0.5087131261825562, 0.498288094997406, 0.48814061284065247, 0.4782883822917938, 0.46875, 0.4595450460910797, 0.45069390535354614, 0.4422178566455841, 0.43413886427879333, 0.4264794886112213, 0.41926273703575134, 0.41251182556152344, 0.40625, 0.40050017833709717, 0.3952847123146057, 0.390625, 0.3865411579608917, 0.3830515742301941, 0.3801726698875427, 0.3779183328151703, 0.37629982829093933, 0.37532538175582886, 0.390625, 0.3909373879432678, 0.39187300205230713, 0.39342746138572693, 0.39559340476989746, 0.3983609080314636, 0.40171751379966736, 0.4056485891342163, 0.4101376533508301, 0.41516655683517456, 0.42071598768234253, 0.4267656207084656, 0.43329450488090515, 0.44028133153915405, 0.44770464301109314, 0.4555431306362152, 0.4637756943702698, 0.4723817706108093, 0.48134130239486694, 0.490634948015213, 0.5002440810203552, 0.5101508498191833, 0.5203382968902588, 0.5307902693748474, 0.5414913296699524, 0.5524271726608276, 0.56358402967453, 0.5749490261077881, 0.5865101218223572, 0.5982559323310852, 0.6101757287979126, 0.6222596168518066, 0.634498119354248, 0.6468825340270996, 0.6594046354293823, 0.6720566749572754, 0.684831440448761, 0.697722315788269, 0.7107228636741638, 0.7238271832466125, 0.7370297908782959, 0.7503254413604736, 0.7637093663215637, 0.7771768569946289, 0.7907238006591797, 0.8043460845947266, 0.8180400133132935, 0.8318019509315491, 0.8456286787986755, 0.8595170378684998, 0.873464047908783, 0.8874669671058655, 0.901523232460022, 0.9156303405761719, 0.929785966873169, 0.9439879655838013, 0.9582342505455017, 0.9725229144096375, 0.9868520498275757, 1.0012199878692627, 1.015625, 1.030065655708313, 1.044540286064148, 1.0590476989746094, 1.0735864639282227, 1.0881553888320923, 1.1027531623840332, 1.1173787117004395, 1.132030963897705, 1.1467089653015137, 1.1614116430282593, 1.1761380434036255, 1.190887451171875, 1.2056589126586914, 1.2204515933990479, 1.2352646589279175, 1.250097632408142, 1.2649496793746948, 1.2798200845718384, 1.294708251953125, 1.309613585472107, 1.324535608291626, 1.3394736051559448, 1.3544270992279053, 1.3693954944610596, 1.3843785524368286, 1.399375557899475, 1.4143861532211304, 1.4294099807739258, 1.4444465637207031, 1.4594954252243042, 1.47455632686615, 1.4896289110183716, 1.504712700843811, 1.5198073387145996, 1.5349127054214478, 1.5500283241271973, 1.565153956413269, 1.580289363861084, 1.5954341888427734, 1.6105881929397583, 1.62575101852417, 1.6409225463867188, 1.6561025381088257, 1.6712907552719116, 1.6864869594573975, 1.701690912246704, 1.7169023752212524, 1.732121229171753, 1.747347354888916, 1.762580394744873, 1.777820110321045, 1.7930666208267212, 1.8083195686340332, 1.8235787153244019, 1.8388440608978271, 1.8541154861450195, 1.8693926334381104, 1.8846755027770996, 1.8999639749526978, 1.9152579307556152, 1.930557131767273, 1.9458614587783813, 1.9611709117889404, 1.976485252380371, 1.9918044805526733, 2.0071284770965576, 2.0224568843841553, 2.037790060043335, 2.0224568843841553, 2.0071284770965576, 1.9918044805526733, 1.976485252380371, 1.9611709117889404, 1.9458614587783813, 1.930557131767273, 1.9152579307556152, 1.8999639749526978, 1.8846755027770996, 1.8693926334381104, 1.8541154861450195, 1.8388440608978271, 1.8235787153244019, 1.8083195686340332, 1.7930666208267212, 1.777820110321045, 1.762580394744873, 1.747347354888916, 1.732121229171753, 1.7169023752212524, 1.701690912246704, 1.6864869594573975, 1.6712907552719116, 1.6561025381088257, 1.6409225463867188, 1.62575101852417, 1.6105881929397583, 1.5954341888427734, 1.580289363861084, 1.565153956413269, 1.5500283241271973, 1.5349127054214478, 1.5198073387145996, 1.504712700843811, 1.4896289110183716, 1.47455632686615, 1.4594954252243042, 1.4444465637207031, 1.4294099807739258, 1.4143861532211304, 1.399375557899475, 1.3843785524368286, 1.3693954944610596, 1.3544270992279053, 1.3394736051559448, 1.324535608291626, 1.309613585472107, 1.294708251953125, 1.2798200845718384, 1.2649496793746948, 1.250097632408142, 1.2352646589279175, 1.2204515933990479, 1.2056589126586914, 1.190887451171875, 1.1761380434036255, 1.1614116430282593, 1.1467089653015137, 1.132030963897705, 1.1173787117004395, 1.1027531623840332, 1.0881553888320923, 1.0735864639282227, 1.0590476989746094, 1.044540286064148, 1.030065655708313, 1.015625, 1.0012199878692627, 0.9868520498275757, 0.9725229144096375, 0.9582342505455017, 0.9439879655838013, 0.929785966873169, 0.9156303405761719, 0.901523232460022, 0.8874669671058655, 0.873464047908783, 0.8595170378684998, 0.8456286787986755, 0.8318019509315491, 0.8180400133132935, 0.8043460845947266, 0.7907238006591797, 0.7771768569946289, 0.7637093663215637, 0.7503254413604736, 0.7370297908782959, 0.7238271832466125, 0.7107228636741638, 0.697722315788269, 0.684831440448761, 0.6720566749572754, 0.6594046354293823, 0.6468825340270996, 0.634498119354248, 0.6222596168518066, 0.6101757287979126, 0.5982559323310852, 0.5865101218223572, 0.5749490261077881, 0.56358402967453, 0.5524271726608276, 0.5414913296699524, 0.5307902693748474, 0.5203382968902588, 0.5101508498191833, 0.5002440810203552, 0.490634948015213, 0.48134130239486694, 0.4723817706108093, 0.4637756943702698, 0.4555431306362152, 0.44770464301109314, 0.44028133153915405, 0.43329450488090515, 0.4267656207084656, 0.42071598768234253, 0.41516655683517456, 0.4101376533508301, 0.4056485891342163, 0.40171751379966736, 0.3983609080314636, 0.39559340476989746, 0.39342746138572693, 0.39187300205230713, 0.3909373879432678, 0.40625, 0.4065503776073456, 0.4074501395225525, 0.40894538164138794, 0.411029577255249, 0.4136938154697418, 0.4169270098209381, 0.42071598768234253, 0.4250459671020508, 0.42990052700042725, 0.43526214361190796, 0.44111230969429016, 0.44743192195892334, 0.4542013108730316, 0.46140071749687195, 0.4690103530883789, 0.4770105481147766, 0.4853820204734802, 0.49410587549209595, 0.5031638145446777, 0.5125381350517273, 0.5222117304801941, 0.5321683287620544, 0.5423923134803772, 0.5528689622879028, 0.56358402967453, 0.5745242834091187, 0.5856770277023315, 0.5970304012298584, 0.6085731983184814, 0.6202948093414307, 0.6321852803230286, 0.6442352533340454, 0.6564359664916992, 0.668779194355011, 0.6812571883201599, 0.6938626170158386, 0.7065886855125427, 0.7194290161132812, 0.7323775887489319, 0.7454288005828857, 0.7585772275924683, 0.7718180418014526, 0.7851465344429016, 0.7985582947731018, 0.812049150466919, 0.8256152868270874, 0.8392530679702759, 0.8529589772224426, 0.8667299151420593, 0.8805626630783081, 0.8944544792175293, 0.9084026217460632, 0.9224045276641846, 0.9364577531814575, 0.9505600929260254, 0.9647093415260315, 0.9789034724235535, 0.9931405186653137, 1.0074187517166138, 1.0217363834381104, 1.0360918045043945, 1.0504834651947021, 1.0649099349975586, 1.0793697834014893, 1.0938615798950195, 1.1083842515945435, 1.122936487197876, 1.1375172138214111, 1.1521252393722534, 1.1667596101760864, 1.1814194917678833, 1.1961036920547485, 1.2108114957809448, 1.2255419492721558, 1.240294337272644, 1.2550678253173828, 1.2698616981506348, 1.2846752405166626, 1.2995078563690186, 1.3143588304519653, 1.3292274475097656, 1.3441133499145508, 1.359015703201294, 1.373934268951416, 1.3888683319091797, 1.4038172960281372, 1.4187809228897095, 1.4337587356567383, 1.4487501382827759, 1.4637547731399536, 1.4787722826004028, 1.4938023090362549, 1.5088443756103516, 1.5238981246948242, 1.5389633178710938, 1.5540395975112915, 1.5691266059875488, 1.584223985671997, 1.5993314981460571, 1.61444890499115, 1.6295758485794067, 1.644712209701538, 1.6598575115203857, 1.6750116348266602, 1.6901743412017822, 1.7053455114364624, 1.7205246686935425, 1.7357118129730225, 1.7509065866470337, 1.7661088705062866, 1.7813185453414917, 1.7965352535247803, 1.8117589950561523, 1.8269895315170288, 1.8422266244888306, 1.857470154762268, 1.8727200031280518, 1.8879759311676025, 1.9032379388809204, 1.9185056686401367, 1.933779239654541, 1.9490582942962646, 1.9643428325653076, 1.9796326160430908, 1.9949276447296143, 2.010227680206299, 2.0255327224731445, 2.0408427715301514, 2.0255327224731445, 2.010227680206299, 1.9949276447296143, 1.9796326160430908, 1.9643428325653076, 1.9490582942962646, 1.933779239654541, 1.9185056686401367, 1.9032379388809204, 1.8879759311676025, 1.8727200031280518, 1.857470154762268, 1.8422266244888306, 1.8269895315170288, 1.8117589950561523, 1.7965352535247803, 1.7813185453414917, 1.7661088705062866, 1.7509065866470337, 1.7357118129730225, 1.7205246686935425, 1.7053455114364624, 1.6901743412017822, 1.6750116348266602, 1.6598575115203857, 1.644712209701538, 1.6295758485794067, 1.61444890499115, 1.5993314981460571, 1.584223985671997, 1.5691266059875488, 1.5540395975112915, 1.5389633178710938, 1.5238981246948242, 1.5088443756103516, 1.4938023090362549, 1.4787722826004028, 1.4637547731399536, 1.4487501382827759, 1.4337587356567383, 1.4187809228897095, 1.4038172960281372, 1.3888683319091797, 1.373934268951416, 1.359015703201294, 1.3441133499145508, 1.3292274475097656, 1.3143588304519653, 1.2995078563690186, 1.2846752405166626, 1.2698616981506348, 1.2550678253173828, 1.240294337272644, 1.2255419492721558, 1.2108114957809448, 1.1961036920547485, 1.1814194917678833, 1.1667596101760864, 1.1521252393722534, 1.1375172138214111, 1.122936487197876, 1.1083842515945435, 1.0938615798950195, 1.0793697834014893, 1.0649099349975586, 1.0504834651947021, 1.0360918045043945, 1.0217363834381104, 1.0074187517166138, 0.9931405186653137, 0.9789034724235535, 0.9647093415260315, 0.9505600929260254, 0.9364577531814575, 0.9224045276641846, 0.9084026217460632, 0.8944544792175293, 0.8805626630783081, 0.8667299151420593, 0.8529589772224426, 0.8392530679702759, 0.8256152868270874, 0.812049150466919, 0.7985582947731018, 0.7851465344429016, 0.7718180418014526, 0.7585772275924683, 0.7454288005828857, 0.7323775887489319, 0.7194290161132812, 0.7065886855125427, 0.6938626170158386, 0.6812571883201599, 0.668779194355011, 0.6564359664916992, 0.6442352533340454, 0.6321852803230286, 0.6202948093414307, 0.6085731983184814, 0.5970304012298584, 0.5856770277023315, 0.5745242834091187, 0.56358402967453, 0.5528689622879028, 0.5423923134803772, 0.5321683287620544, 0.5222117304801941, 0.5125381350517273, 0.5031638145446777, 0.49410587549209595, 0.4853820204734802, 0.4770105481147766, 0.4690103530883789, 0.46140071749687195, 0.4542013108730316, 0.44743192195892334, 0.44111230969429016, 0.43526214361190796, 0.42990052700042725, 0.4250459671020508, 0.42071598768234253, 0.4169270098209381, 0.4136938154697418, 0.411029577255249, 0.40894538164138794, 0.4074501395225525, 0.4065503776073456, 0.421875, 0.42216426134109497, 0.423030823469162, 0.4244711697101593, 0.4264794886112213, 0.4290478229522705, 0.4321661591529846, 0.43582266569137573, 0.44000399112701416, 0.44469529390335083, 0.4498806297779083, 0.4555431306362152, 0.46166521310806274, 0.46822887659072876, 0.4752158224582672, 0.4826076626777649, 0.49038609862327576, 0.4985330104827881, 0.5070306658744812, 0.5158616900444031, 0.525009274482727, 0.5344572067260742, 0.5441898107528687, 0.5541921257972717, 0.5644497275352478, 0.5749490261077881, 0.5856770277023315, 0.5966213345527649, 0.6077703237533569, 0.6191129088401794, 0.630638599395752, 0.6423376202583313, 0.6542006731033325, 0.6662189364433289, 0.6783841848373413, 0.6906886100769043, 0.703125, 0.7156863808631897, 0.7283663749694824, 0.7411588430404663, 0.7540580034255981, 0.7670586109161377, 0.7801554799079895, 0.7933439016342163, 0.8066193461418152, 0.8199775815010071, 0.8334147334098816, 0.8469268679618835, 0.8605105876922607, 0.8741625547409058, 0.8878795504570007, 0.9016586542129517, 0.9154970049858093, 0.9293920397758484, 0.9433411955833435, 0.9573420882225037, 0.9713925719261169, 0.9854904413223267, 0.9996337294578552, 1.0138205289840698, 1.0280489921569824, 1.042317509651184, 1.056624412536621, 1.0709681510925293, 1.0853471755981445, 1.0997602939605713, 1.114206075668335, 1.1286832094192505, 1.143190622329712, 1.1577271223068237, 1.17229163646698, 1.1868830919265747, 1.2015005350112915, 1.216143012046814, 1.2308096885681152, 1.2454997301101685, 1.2602121829986572, 1.2749463319778442, 1.2897015810012817, 1.3044769763946533, 1.3192719221115112, 1.3340859413146973, 1.348918080329895, 1.3637681007385254, 1.3786351680755615, 1.3935188055038452, 1.4084184169769287, 1.423333764076233, 1.438264012336731, 1.4532090425491333, 1.4681681394577026, 1.4831409454345703, 1.4981271028518677, 1.5131261348724365, 1.5281378030776978, 1.5431616306304932, 1.558197259902954, 1.573244333267212, 1.5883026123046875, 1.6033717393875122, 1.6184513568878174, 1.633541226387024, 1.6486411094665527, 1.6637506484985352, 1.6788697242736816, 1.693997859954834, 1.7091350555419922, 1.724280834197998, 1.7394351959228516, 1.754597783088684, 1.7697683572769165, 1.7849467992782593, 1.8001328706741333, 1.815326452255249, 1.8305273056030273, 1.8457351922988892, 1.860949993133545, 1.8761714696884155, 1.891399621963501, 1.9066342115402222, 1.921875, 1.9371219873428345, 1.952374815940857, 1.967633605003357, 1.9828981161117554, 1.9981681108474731, 2.0134434700012207, 2.028724431991577, 2.0440104007720947, 2.028724431991577, 2.0134434700012207, 1.9981681108474731, 1.9828981161117554, 1.967633605003357, 1.952374815940857, 1.9371219873428345, 1.921875, 1.9066342115402222, 1.891399621963501, 1.8761714696884155, 1.860949993133545, 1.8457351922988892, 1.8305273056030273, 1.815326452255249, 1.8001328706741333, 1.7849467992782593, 1.7697683572769165, 1.754597783088684, 1.7394351959228516, 1.724280834197998, 1.7091350555419922, 1.693997859954834, 1.6788697242736816, 1.6637506484985352, 1.6486411094665527, 1.633541226387024, 1.6184513568878174, 1.6033717393875122, 1.5883026123046875, 1.573244333267212, 1.558197259902954, 1.5431616306304932, 1.5281378030776978, 1.5131261348724365, 1.4981271028518677, 1.4831409454345703, 1.4681681394577026, 1.4532090425491333, 1.438264012336731, 1.423333764076233, 1.4084184169769287, 1.3935188055038452, 1.3786351680755615, 1.3637681007385254, 1.348918080329895, 1.3340859413146973, 1.3192719221115112, 1.3044769763946533, 1.2897015810012817, 1.2749463319778442, 1.2602121829986572, 1.2454997301101685, 1.2308096885681152, 1.216143012046814, 1.2015005350112915, 1.1868830919265747, 1.17229163646698, 1.1577271223068237, 1.143190622329712, 1.1286832094192505, 1.114206075668335, 1.0997602939605713, 1.0853471755981445, 1.0709681510925293, 1.056624412536621, 1.042317509651184, 1.0280489921569824, 1.0138205289840698, 0.9996337294578552, 0.9854904413223267, 0.9713925719261169, 0.9573420882225037, 0.9433411955833435, 0.9293920397758484, 0.9154970049858093, 0.9016586542129517, 0.8878795504570007, 0.8741625547409058, 0.8605105876922607, 0.8469268679618835, 0.8334147334098816, 0.8199775815010071, 0.8066193461418152, 0.7933439016342163, 0.7801554799079895, 0.7670586109161377, 0.7540580034255981, 0.7411588430404663, 0.7283663749694824, 0.7156863808631897, 0.703125, 0.6906886100769043, 0.6783841848373413, 0.6662189364433289, 0.6542006731033325, 0.6423376202583313, 0.630638599395752, 0.6191129088401794, 0.6077703237533569, 0.5966213345527649, 0.5856770277023315, 0.5749490261077881, 0.5644497275352478, 0.5541921257972717, 0.5441898107528687, 0.5344572067260742, 0.525009274482727, 0.5158616900444031, 0.5070306658744812, 0.4985330104827881, 0.49038609862327576, 0.4826076626777649, 0.4752158224582672, 0.46822887659072876, 0.46166521310806274, 0.4555431306362152, 0.4498806297779083, 0.44469529390335083, 0.44000399112701416, 0.43582266569137573, 0.4321661591529846, 0.4290478229522705, 0.4264794886112213, 0.4244711697101593, 0.423030823469162, 0.42216426134109497, 0.4375, 0.43777891993522644, 0.4386146366596222, 0.44000399112701416, 0.4419417381286621, 0.4444206953048706, 0.44743192195892334, 0.45096468925476074, 0.455006867647171, 0.4595450460910797, 0.46456465125083923, 0.47005027532577515, 0.4759858250617981, 0.48235467076301575, 0.4891398847103119, 0.4963243901729584, 0.503891110420227, 0.5118231177330017, 0.5201036334037781, 0.5287163853645325, 0.5376453399658203, 0.546875, 0.5563904047012329, 0.5661771893501282, 0.5762215256690979, 0.5865101218223572, 0.5970304012298584, 0.6077703237533569, 0.6187184453010559, 0.6298638582229614, 0.6411963701248169, 0.6527062058448792, 0.664384126663208, 0.6762214303016663, 0.6882098317146301, 0.7003417015075684, 0.7126096487045288, 0.7250067591667175, 0.7375264763832092, 0.7501627206802368, 0.7629097104072571, 0.7757619619369507, 0.7887143492698669, 0.8017619848251343, 0.814900279045105, 0.828125, 0.8414319753646851, 0.8548174500465393, 0.8682777285575867, 0.881809413433075, 0.8954092860221863, 0.9090742468833923, 0.9228014349937439, 0.9365881085395813, 0.9504316449165344, 0.9643296599388123, 0.9782797694206238, 0.9922797679901123, 1.0063276290893555, 1.0204213857650757, 1.0345591306686401, 1.048738956451416, 1.0629594326019287, 1.077218770980835, 1.0915155410766602, 1.1058483123779297, 1.1202155351638794, 1.1346160173416138, 1.1490485668182373, 1.163511872291565, 1.1780048608779907, 1.1925263404846191, 1.2070754766464233, 1.2216511964797974, 1.2362525463104248, 1.2508785724639893, 1.2655285596847534, 1.2802015542984009, 1.2948968410491943, 1.309613585472107, 1.3243513107299805, 1.339108943939209, 1.3538862466812134, 1.3686822652816772, 1.3834965229034424, 1.398328423500061, 1.4131773710250854, 1.4280428886413574, 1.4429244995117188, 1.4578217267990112, 1.472733974456787, 1.4876608848571777, 1.5026018619537354, 1.5175567865371704, 1.5325249433517456, 1.5475062131881714, 1.5625, 1.5775060653686523, 1.5925240516662598, 1.6075536012649536, 1.6225943565368652, 1.6376460790634155, 1.6527085304260254, 1.6677812337875366, 1.6828639507293701, 1.6979565620422363, 1.7130587100982666, 1.7281701564788818, 1.743290662765503, 1.7584199905395508, 1.7735579013824463, 1.7887042760849, 1.803858757019043, 1.8190211057662964, 1.8341913223266602, 1.8493690490722656, 1.8645542860031128, 1.8797465562820435, 1.8949459791183472, 1.9101521968841553, 1.9253652095794678, 1.9405847787857056, 1.9558106660842896, 1.9710427522659302, 1.9862810373306274, 2.001525402069092, 2.016775369644165, 2.0320310592651367, 2.047292470932007, 2.0320310592651367, 2.016775369644165, 2.001525402069092, 1.9862810373306274, 1.9710427522659302, 1.9558106660842896, 1.9405847787857056, 1.9253652095794678, 1.9101521968841553, 1.8949459791183472, 1.8797465562820435, 1.8645542860031128, 1.8493690490722656, 1.8341913223266602, 1.8190211057662964, 1.803858757019043, 1.7887042760849, 1.7735579013824463, 1.7584199905395508, 1.743290662765503, 1.7281701564788818, 1.7130587100982666, 1.6979565620422363, 1.6828639507293701, 1.6677812337875366, 1.6527085304260254, 1.6376460790634155, 1.6225943565368652, 1.6075536012649536, 1.5925240516662598, 1.5775060653686523, 1.5625, 1.5475062131881714, 1.5325249433517456, 1.5175567865371704, 1.5026018619537354, 1.4876608848571777, 1.472733974456787, 1.4578217267990112, 1.4429244995117188, 1.4280428886413574, 1.4131773710250854, 1.398328423500061, 1.3834965229034424, 1.3686822652816772, 1.3538862466812134, 1.339108943939209, 1.3243513107299805, 1.309613585472107, 1.2948968410491943, 1.2802015542984009, 1.2655285596847534, 1.2508785724639893, 1.2362525463104248, 1.2216511964797974, 1.2070754766464233, 1.1925263404846191, 1.1780048608779907, 1.163511872291565, 1.1490485668182373, 1.1346160173416138, 1.1202155351638794, 1.1058483123779297, 1.0915155410766602, 1.077218770980835, 1.0629594326019287, 1.048738956451416, 1.0345591306686401, 1.0204213857650757, 1.0063276290893555, 0.9922797679901123, 0.9782797694206238, 0.9643296599388123, 0.9504316449165344, 0.9365881085395813, 0.9228014349937439, 0.9090742468833923, 0.8954092860221863, 0.881809413433075, 0.8682777285575867, 0.8548174500465393, 0.8414319753646851, 0.828125, 0.814900279045105, 0.8017619848251343, 0.7887143492698669, 0.7757619619369507, 0.7629097104072571, 0.7501627206802368, 0.7375264763832092, 0.7250067591667175, 0.7126096487045288, 0.7003417015075684, 0.6882098317146301, 0.6762214303016663, 0.664384126663208, 0.6527062058448792, 0.6411963701248169, 0.6298638582229614, 0.6187184453010559, 0.6077703237533569, 0.5970304012298584, 0.5865101218223572, 0.5762215256690979, 0.5661771893501282, 0.5563904047012329, 0.546875, 0.5376453399658203, 0.5287163853645325, 0.5201036334037781, 0.5118231177330017, 0.503891110420227, 0.4963243901729584, 0.4891398847103119, 0.48235467076301575, 0.4759858250617981, 0.47005027532577515, 0.46456465125083923, 0.4595450460910797, 0.455006867647171, 0.45096468925476074, 0.44743192195892334, 0.4444206953048706, 0.4419417381286621, 0.44000399112701416, 0.4386146366596222, 0.43777891993522644, 0.453125, 0.4533943235874176, 0.4542013108730316, 0.4555431306362152, 0.45741504430770874, 0.4598105847835541, 0.46272164583206177, 0.4661385715007782, 0.47005027532577515, 0.47444456815719604, 0.47930818796157837, 0.4846269488334656, 0.49038609862327576, 0.49657025933265686, 0.5031638145446777, 0.5101508498191833, 0.5175154805183411, 0.5252417325973511, 0.5333139896392822, 0.5417167544364929, 0.5504348278045654, 0.559453547000885, 0.5687586069107056, 0.5783361196517944, 0.5881727933883667, 0.5982559323310852, 0.6085731983184814, 0.6191129088401794, 0.6298638582229614, 0.6408154964447021, 0.6519576907157898, 0.6632807850837708, 0.6747757196426392, 0.6864338517189026, 0.698246955871582, 0.7102074027061462, 0.7223077416419983, 0.7345411777496338, 0.7469011545181274, 0.7593814134597778, 0.7719762325286865, 0.7846799492835999, 0.7974874973297119, 0.8103939294815063, 0.8233945369720459, 0.8364849090576172, 0.8496609926223755, 0.8629188537597656, 0.876254677772522, 0.8896650671958923, 0.9031466245651245, 0.9166962504386902, 0.9303109645843506, 0.9439879655838013, 0.9577245712280273, 0.9715182185173035, 0.9853665828704834, 0.9992672801017761, 1.0132182836532593, 1.0272175073623657, 1.0412629842758179, 1.055352807044983, 1.0694853067398071, 1.0836588144302368, 1.0978716611862183, 1.1121225357055664, 1.126409649848938, 1.1407320499420166, 1.1550880670547485, 1.1694767475128174, 1.1838966608047485, 1.1983468532562256, 1.212826132774353, 1.2273335456848145, 1.2418681383132935, 1.256428837776184, 1.2710148096084595, 1.2856251001358032, 1.3002591133117676, 1.3149158954620361, 1.3295947313308716, 1.3442949056625366, 1.359015703201294, 1.3737565279006958, 1.3885166645050049, 1.4032955169677734, 1.4180924892425537, 1.4329071044921875, 1.4477386474609375, 1.462586760520935, 1.477450966835022, 1.4923306703567505, 1.5072253942489624, 1.5221349000930786, 1.5370584726333618, 1.5519959926605225, 1.5669467449188232, 1.5819107294082642, 1.596887230873108, 1.611876130104065, 1.626876950263977, 1.6418894529342651, 1.656913161277771, 1.671947956085205, 1.6869935989379883, 1.7020494937896729, 1.7171157598495483, 1.732191801071167, 1.7472774982452393, 1.762372612953186, 1.7774767875671387, 1.7925900220870972, 1.8077118396759033, 1.8228422403335571, 1.83798086643219, 1.8531275987625122, 1.8682821989059448, 1.8834445476531982, 1.8986142873764038, 1.9137914180755615, 1.9289757013320923, 1.944166898727417, 1.9593650102615356, 1.9745697975158691, 1.9897810220718384, 2.0049986839294434, 2.0202224254608154, 2.035452365875244, 2.0506882667541504, 2.035452365875244, 2.0202224254608154, 2.0049986839294434, 1.9897810220718384, 1.9745697975158691, 1.9593650102615356, 1.944166898727417, 1.9289757013320923, 1.9137914180755615, 1.8986142873764038, 1.8834445476531982, 1.8682821989059448, 1.8531275987625122, 1.83798086643219, 1.8228422403335571, 1.8077118396759033, 1.7925900220870972, 1.7774767875671387, 1.762372612953186, 1.7472774982452393, 1.732191801071167, 1.7171157598495483, 1.7020494937896729, 1.6869935989379883, 1.671947956085205, 1.656913161277771, 1.6418894529342651, 1.626876950263977, 1.611876130104065, 1.596887230873108, 1.5819107294082642, 1.5669467449188232, 1.5519959926605225, 1.5370584726333618, 1.5221349000930786, 1.5072253942489624, 1.4923306703567505, 1.477450966835022, 1.462586760520935, 1.4477386474609375, 1.4329071044921875, 1.4180924892425537, 1.4032955169677734, 1.3885166645050049, 1.3737565279006958, 1.359015703201294, 1.3442949056625366, 1.3295947313308716, 1.3149158954620361, 1.3002591133117676, 1.2856251001358032, 1.2710148096084595, 1.256428837776184, 1.2418681383132935, 1.2273335456848145, 1.212826132774353, 1.1983468532562256, 1.1838966608047485, 1.1694767475128174, 1.1550880670547485, 1.1407320499420166, 1.126409649848938, 1.1121225357055664, 1.0978716611862183, 1.0836588144302368, 1.0694853067398071, 1.055352807044983, 1.0412629842758179, 1.0272175073623657, 1.0132182836532593, 0.9992672801017761, 0.9853665828704834, 0.9715182185173035, 0.9577245712280273, 0.9439879655838013, 0.9303109645843506, 0.9166962504386902, 0.9031466245651245, 0.8896650671958923, 0.876254677772522, 0.8629188537597656, 0.8496609926223755, 0.8364849090576172, 0.8233945369720459, 0.8103939294815063, 0.7974874973297119, 0.7846799492835999, 0.7719762325286865, 0.7593814134597778, 0.7469011545181274, 0.7345411777496338, 0.7223077416419983, 0.7102074027061462, 0.698246955871582, 0.6864338517189026, 0.6747757196426392, 0.6632807850837708, 0.6519576907157898, 0.6408154964447021, 0.6298638582229614, 0.6191129088401794, 0.6085731983184814, 0.5982559323310852, 0.5881727933883667, 0.5783361196517944, 0.5687586069107056, 0.559453547000885, 0.5504348278045654, 0.5417167544364929, 0.5333139896392822, 0.5252417325973511, 0.5175154805183411, 0.5101508498191833, 0.5031638145446777, 0.49657025933265686, 0.49038609862327576, 0.4846269488334656, 0.47930818796157837, 0.47444456815719604, 0.47005027532577515, 0.4661385715007782, 0.46272164583206177, 0.4598105847835541, 0.45741504430770874, 0.4555431306362152, 0.4542013108730316, 0.4533943235874176, 0.46875, 0.4690103530883789, 0.469790518283844, 0.4710879325866699, 0.47289830446243286, 0.4752158224582672, 0.47803306579589844, 0.48134130239486694, 0.4851304590702057, 0.4893893599510193, 0.49410587549209595, 0.499267041683197, 0.504859209060669, 0.5108681917190552, 0.5172795653343201, 0.5240784287452698, 0.53125, 0.5387793779373169, 0.5466517210006714, 0.5548525452613831, 0.5633673667907715, 0.572182297706604, 0.5812836289405823, 0.5906580686569214, 0.6002929210662842, 0.6101757287979126, 0.6202948093414307, 0.630638599395752, 0.6411963701248169, 0.6519576907157898, 0.6629126071929932, 0.6740517020225525, 0.6853660345077515, 0.6968469619750977, 0.7084864974021912, 0.7202768921852112, 0.7322109341621399, 0.7442815899848938, 0.7564824223518372, 0.7688071727752686, 0.78125, 0.7938053607940674, 0.8064680099487305, 0.8192329406738281, 0.8320954442024231, 0.845051109790802, 0.858095645904541, 0.871225118637085, 0.8844357132911682, 0.897723913192749, 0.9110862612724304, 0.9245195388793945, 0.9380207061767578, 0.951586902141571, 0.9652153253555298, 0.9789034724235535, 0.9926487803459167, 1.0064489841461182, 1.0203016996383667, 1.0342050790786743, 1.0481568574905396, 1.0621552467346191, 1.0761984586715698, 1.0902847051620483, 1.104412317276001, 1.1185797452926636, 1.1327855587005615, 1.1470282077789307, 1.1613065004348755, 1.1756190061569214, 1.1899645328521729, 1.2043418884277344, 1.21875, 1.2331876754760742, 1.2476540803909302, 1.2621480226516724, 1.276668667793274, 1.2912150621414185, 1.305786371231079, 1.3203818798065186, 1.3350006341934204, 1.3496419191360474, 1.364305019378662, 1.3789892196655273, 1.3936939239501953, 1.4084184169769287, 1.4231622219085693, 1.4379245042800903, 1.452704906463623, 1.4675028324127197, 1.4823176860809326, 1.4971489906311035, 1.5119962692260742, 1.526859164237976, 1.5417370796203613, 1.5566295385360718, 1.5715364217758179, 1.5864570140838623, 1.6013909578323364, 1.6163381338119507, 1.6312979459762573, 1.6462700366973877, 1.6612542867660522, 1.6762501001358032, 1.691257357597351, 1.7062757015228271, 1.7213048934936523, 1.736344575881958, 1.751394510269165, 1.7664544582366943, 1.7815240621566772, 1.7966032028198242, 1.8116916418075562, 1.8267890214920044, 1.8418952226638794, 1.857010006904602, 1.8721332550048828, 1.887264609336853, 1.9024039506912231, 1.917551040649414, 1.9327057600021362, 1.9478678703308105, 1.963037371635437, 1.978213906288147, 1.9933973550796509, 2.008587598800659, 2.0237843990325928, 2.038987636566162, 2.054197311401367, 2.038987636566162, 2.0237843990325928, 2.008587598800659, 1.9933973550796509, 1.978213906288147, 1.963037371635437, 1.9478678703308105, 1.9327057600021362, 1.917551040649414, 1.9024039506912231, 1.887264609336853, 1.8721332550048828, 1.857010006904602, 1.8418952226638794, 1.8267890214920044, 1.8116916418075562, 1.7966032028198242, 1.7815240621566772, 1.7664544582366943, 1.751394510269165, 1.736344575881958, 1.7213048934936523, 1.7062757015228271, 1.691257357597351, 1.6762501001358032, 1.6612542867660522, 1.6462700366973877, 1.6312979459762573, 1.6163381338119507, 1.6013909578323364, 1.5864570140838623, 1.5715364217758179, 1.5566295385360718, 1.5417370796203613, 1.526859164237976, 1.5119962692260742, 1.4971489906311035, 1.4823176860809326, 1.4675028324127197, 1.452704906463623, 1.4379245042800903, 1.4231622219085693, 1.4084184169769287, 1.3936939239501953, 1.3789892196655273, 1.364305019378662, 1.3496419191360474, 1.3350006341934204, 1.3203818798065186, 1.305786371231079, 1.2912150621414185, 1.276668667793274, 1.2621480226516724, 1.2476540803909302, 1.2331876754760742, 1.21875, 1.2043418884277344, 1.1899645328521729, 1.1756190061569214, 1.1613065004348755, 1.1470282077789307, 1.1327855587005615, 1.1185797452926636, 1.104412317276001, 1.0902847051620483, 1.0761984586715698, 1.0621552467346191, 1.0481568574905396, 1.0342050790786743, 1.0203016996383667, 1.0064489841461182, 0.9926487803459167, 0.9789034724235535, 0.9652153253555298, 0.951586902141571, 0.9380207061767578, 0.9245195388793945, 0.9110862612724304, 0.897723913192749, 0.8844357132911682, 0.871225118637085, 0.858095645904541, 0.845051109790802, 0.8320954442024231, 0.8192329406738281, 0.8064680099487305, 0.7938053607940674, 0.78125, 0.7688071727752686, 0.7564824223518372, 0.7442815899848938, 0.7322109341621399, 0.7202768921852112, 0.7084864974021912, 0.6968469619750977, 0.6853660345077515, 0.6740517020225525, 0.6629126071929932, 0.6519576907157898, 0.6411963701248169, 0.630638599395752, 0.6202948093414307, 0.6101757287979126, 0.6002929210662842, 0.5906580686569214, 0.5812836289405823, 0.572182297706604, 0.5633673667907715, 0.5548525452613831, 0.5466517210006714, 0.5387793779373169, 0.53125, 0.5240784287452698, 0.5172795653343201, 0.5108681917190552, 0.504859209060669, 0.499267041683197, 0.49410587549209595, 0.4893893599510193, 0.4851304590702057, 0.48134130239486694, 0.47803306579589844, 0.4752158224582672, 0.47289830446243286, 0.4710879325866699, 0.469790518283844, 0.4690103530883789, 0.484375, 0.4846269488334656, 0.4853820204734802, 0.4866378605365753, 0.48839062452316284, 0.490634948015213, 0.493364155292511, 0.49657025933265686, 0.5002440810203552, 0.5043753981590271, 0.5089530348777771, 0.5139651298522949, 0.5193990468978882, 0.5252417325973511, 0.5314797163009644, 0.5380992293357849, 0.5450863838195801, 0.5524271726608276, 0.5601077675819397, 0.5681143403053284, 0.5764333605766296, 0.585051417350769, 0.5939555764198303, 0.6031330823898315, 0.6125717163085938, 0.6222596168518066, 0.6321852803230286, 0.6423376202583313, 0.6527062058448792, 0.6632807850837708, 0.6740517020225525, 0.6850097179412842, 0.6961458921432495, 0.7074519395828247, 0.7189198136329651, 0.7305418848991394, 0.7423108220100403, 0.7542198896408081, 0.7662624716758728, 0.7784324288368225, 0.7907238006591797, 0.803131103515625, 0.8156489729881287, 0.8282724022865295, 0.8409966826438904, 0.8538172841072083, 0.8667299151420593, 0.8797305226325989, 0.8928152918815613, 0.9059805870056152, 0.919222891330719, 0.9325389862060547, 0.9459256529808044, 0.9593800902366638, 0.9728993773460388, 0.9864808917045593, 1.0001220703125, 1.0138205289840698, 1.0275739431381226, 1.0413801670074463, 1.0552371740341187, 1.0691428184509277, 1.0830954313278198, 1.097093105316162, 1.1111341714859009, 1.1252169609069824, 1.1393400430679321, 1.1535017490386963, 1.1677008867263794, 1.1819360256195068, 1.196205735206604, 1.210508942604065, 1.2248445749282837, 1.2392112016677856, 1.2536081075668335, 1.2680339813232422, 1.2824879884719849, 1.2969691753387451, 1.3114765882492065, 1.3260093927383423, 1.3405667543411255, 1.3551478385925293, 1.369752049446106, 1.3843785524368286, 1.39902663230896, 1.4136955738067627, 1.428384780883789, 1.4430937767028809, 1.4578217267990112, 1.472568154335022, 1.4873325824737549, 1.5021144151687622, 1.5169130563735962, 1.5317282676696777, 1.5465593338012695, 1.561405897140503, 1.5762674808502197, 1.5911437273025513, 1.6060341596603394, 1.6209384202957153, 1.6358561515808105, 1.6507869958877563, 1.6657304763793945, 1.6806864738464355, 1.6956545114517212, 1.7106342315673828, 1.7256253957748413, 1.7406277656555176, 1.755640983581543, 1.7706648111343384, 1.7856988906860352, 1.8007431030273438, 1.8157970905303955, 1.8308606147766113, 1.8459335565567017, 1.8610155582427979, 1.8761065006256104, 1.8912060260772705, 1.9063140153884888, 1.9214303493499756, 1.9365546703338623, 1.951686978340149, 1.9668269157409668, 1.981974482536316, 1.9971293210983276, 2.012291431427002, 2.0274603366851807, 2.0426363945007324, 2.057819128036499, 2.0426363945007324, 2.0274603366851807, 2.012291431427002, 1.9971293210983276, 1.981974482536316, 1.9668269157409668, 1.951686978340149, 1.9365546703338623, 1.9214303493499756, 1.9063140153884888, 1.8912060260772705, 1.8761065006256104, 1.8610155582427979, 1.8459335565567017, 1.8308606147766113, 1.8157970905303955, 1.8007431030273438, 1.7856988906860352, 1.7706648111343384, 1.755640983581543, 1.7406277656555176, 1.7256253957748413, 1.7106342315673828, 1.6956545114517212, 1.6806864738464355, 1.6657304763793945, 1.6507869958877563, 1.6358561515808105, 1.6209384202957153, 1.6060341596603394, 1.5911437273025513, 1.5762674808502197, 1.561405897140503, 1.5465593338012695, 1.5317282676696777, 1.5169130563735962, 1.5021144151687622, 1.4873325824737549, 1.472568154335022, 1.4578217267990112, 1.4430937767028809, 1.428384780883789, 1.4136955738067627, 1.39902663230896, 1.3843785524368286, 1.369752049446106, 1.3551478385925293, 1.3405667543411255, 1.3260093927383423, 1.3114765882492065, 1.2969691753387451, 1.2824879884719849, 1.2680339813232422, 1.2536081075668335, 1.2392112016677856, 1.2248445749282837, 1.210508942604065, 1.196205735206604, 1.1819360256195068, 1.1677008867263794, 1.1535017490386963, 1.1393400430679321, 1.1252169609069824, 1.1111341714859009, 1.097093105316162, 1.0830954313278198, 1.0691428184509277, 1.0552371740341187, 1.0413801670074463, 1.0275739431381226, 1.0138205289840698, 1.0001220703125, 0.9864808917045593, 0.9728993773460388, 0.9593800902366638, 0.9459256529808044, 0.9325389862060547, 0.919222891330719, 0.9059805870056152, 0.8928152918815613, 0.8797305226325989, 0.8667299151420593, 0.8538172841072083, 0.8409966826438904, 0.8282724022865295, 0.8156489729881287, 0.803131103515625, 0.7907238006591797, 0.7784324288368225, 0.7662624716758728, 0.7542198896408081, 0.7423108220100403, 0.7305418848991394, 0.7189198136329651, 0.7074519395828247, 0.6961458921432495, 0.6850097179412842, 0.6740517020225525, 0.6632807850837708, 0.6527062058448792, 0.6423376202583313, 0.6321852803230286, 0.6222596168518066, 0.6125717163085938, 0.6031330823898315, 0.5939555764198303, 0.585051417350769, 0.5764333605766296, 0.5681143403053284, 0.5601077675819397, 0.5524271726608276, 0.5450863838195801, 0.5380992293357849, 0.5314797163009644, 0.5252417325973511, 0.5193990468978882, 0.5139651298522949, 0.5089530348777771, 0.5043753981590271, 0.5002440810203552, 0.49657025933265686, 0.493364155292511, 0.490634948015213, 0.48839062452316284, 0.4866378605365753, 0.4853820204734802, 0.4846269488334656, 0.5, 0.5002440810203552, 0.5009756088256836, 0.5021924376487732, 0.503891110420227, 0.5060667395591736, 0.5087131261825562, 0.5118231177330017, 0.5153881907463074, 0.5193990468978882, 0.5238454341888428, 0.5287163853645325, 0.5340002179145813, 0.5396848917007446, 0.5457577705383301, 0.5522061586380005, 0.55901700258255, 0.5661771893501282, 0.5736737251281738, 0.5814935564994812, 0.5896238088607788, 0.5980518460273743, 0.6067652702331543, 0.6157518625259399, 0.625, 0.634498119354248, 0.6442352533340454, 0.6542006731033325, 0.664384126663208, 0.6747757196426392, 0.6853660345077515, 0.6961458921432495, 0.7071067690849304, 0.7182403206825256, 0.72953861951828, 0.7409940958023071, 0.7525996565818787, 0.7643484473228455, 0.7762339115142822, 0.7882499098777771, 0.8003905415534973, 0.812650203704834, 0.8250236511230469, 0.8375058174133301, 0.8500919342041016, 0.8627773523330688, 0.8755578398704529, 0.8884292840957642, 0.9013878107070923, 0.9144296646118164, 0.9275513887405396, 0.9407495856285095, 0.9540210962295532, 0.9673629403114319, 0.9807721972465515, 0.9942461252212524, 1.007782220840454, 1.0213779211044312, 1.0350309610366821, 1.048738956451416, 1.0625, 1.0763118267059326, 1.0901727676391602, 1.1040806770324707, 1.1180340051651, 1.132030963897705, 1.1460700035095215, 1.1601496934890747, 1.174268364906311, 1.188424825668335, 1.2026176452636719, 1.2168455123901367, 1.231107234954834, 1.2454017400741577, 1.2597277164459229, 1.2740843296051025, 1.2884705066680908, 1.3028851747512817, 1.3173273801803589, 1.331796407699585, 1.346291184425354, 1.3608109951019287, 1.3753551244735718, 1.3899226188659668, 1.4045127630233765, 1.4191250801086426, 1.4337587356567383, 1.4484130144119263, 1.4630874395370483, 1.4777814149856567, 1.4924942255020142, 1.5072253942489624, 1.5219744443893433, 1.536740779876709, 1.5515239238739014, 1.5663233995437622, 1.5811388492584229, 1.5959696769714355, 1.6108155250549316, 1.625675916671753, 1.6405506134033203, 1.655439019203186, 1.6703410148620605, 1.685256004333496, 1.7001838684082031, 1.7151240110397339, 1.7300763130187988, 1.7450404167175293, 1.7600159645080566, 1.7750027179718018, 1.7900004386901855, 1.8050087690353394, 1.820027470588684, 1.8350563049316406, 1.8500950336456299, 1.8651434183120728, 1.8802011013031006, 1.8952680826187134, 1.9103440046310425, 1.9254286289215088, 1.9405218362808228, 1.9556233882904053, 1.9707331657409668, 1.9858508110046387, 2.000976324081421, 2.0161094665527344, 2.03125, 2.0463979244232178, 2.0615527629852295, 2.0463979244232178, 2.03125, 2.0161094665527344, 2.000976324081421, 1.9858508110046387, 1.9707331657409668, 1.9556233882904053, 1.9405218362808228, 1.9254286289215088, 1.9103440046310425, 1.8952680826187134, 1.8802011013031006, 1.8651434183120728, 1.8500950336456299, 1.8350563049316406, 1.820027470588684, 1.8050087690353394, 1.7900004386901855, 1.7750027179718018, 1.7600159645080566, 1.7450404167175293, 1.7300763130187988, 1.7151240110397339, 1.7001838684082031, 1.685256004333496, 1.6703410148620605, 1.655439019203186, 1.6405506134033203, 1.625675916671753, 1.6108155250549316, 1.5959696769714355, 1.5811388492584229, 1.5663233995437622, 1.5515239238739014, 1.536740779876709, 1.5219744443893433, 1.5072253942489624, 1.4924942255020142, 1.4777814149856567, 1.4630874395370483, 1.4484130144119263, 1.4337587356567383, 1.4191250801086426, 1.4045127630233765, 1.3899226188659668, 1.3753551244735718, 1.3608109951019287, 1.346291184425354, 1.331796407699585, 1.3173273801803589, 1.3028851747512817, 1.2884705066680908, 1.2740843296051025, 1.2597277164459229, 1.2454017400741577, 1.231107234954834, 1.2168455123901367, 1.2026176452636719, 1.188424825668335, 1.174268364906311, 1.1601496934890747, 1.1460700035095215, 1.132030963897705, 1.1180340051651, 1.1040806770324707, 1.0901727676391602, 1.0763118267059326, 1.0625, 1.048738956451416, 1.0350309610366821, 1.0213779211044312, 1.007782220840454, 0.9942461252212524, 0.9807721972465515, 0.9673629403114319, 0.9540210962295532, 0.9407495856285095, 0.9275513887405396, 0.9144296646118164, 0.9013878107070923, 0.8884292840957642, 0.8755578398704529, 0.8627773523330688, 0.8500919342041016, 0.8375058174133301, 0.8250236511230469, 0.812650203704834, 0.8003905415534973, 0.7882499098777771, 0.7762339115142822, 0.7643484473228455, 0.7525996565818787, 0.7409940958023071, 0.72953861951828, 0.7182403206825256, 0.7071067690849304, 0.6961458921432495, 0.6853660345077515, 0.6747757196426392, 0.664384126663208, 0.6542006731033325, 0.6442352533340454, 0.634498119354248, 0.625, 0.6157518625259399, 0.6067652702331543, 0.5980518460273743, 0.5896238088607788, 0.5814935564994812, 0.5736737251281738, 0.5661771893501282, 0.55901700258255, 0.5522061586380005, 0.5457577705383301, 0.5396848917007446, 0.5340002179145813, 0.5287163853645325, 0.5238454341888428, 0.5193990468978882, 0.5153881907463074, 0.5118231177330017, 0.5087131261825562, 0.5060667395591736, 0.503891110420227, 0.5021924376487732, 0.5009756088256836, 0.5002440810203552, 0.515625, 0.5158616900444031, 0.5165711045265198, 0.5177512764930725, 0.5193990468978882, 0.5215100049972534, 0.5240784287452698, 0.527097761631012, 0.5305601954460144, 0.5344572067260742, 0.5387793779373169, 0.5435164570808411, 0.5486578345298767, 0.5541921257972717, 0.5601077675819397, 0.5663927793502808, 0.5730350017547607, 0.5800222158432007, 0.5873420834541321, 0.5949822664260864, 0.6029306650161743, 0.6111752390861511, 0.6197041273117065, 0.6285057663917542, 0.6375689506530762, 0.6468825340270996, 0.6564359664916992, 0.6662189364433289, 0.6762214303016663, 0.6864338517189026, 0.6968469619750977, 0.7074519395828247, 0.7182403206825256, 0.7292038798332214, 0.7403348684310913, 0.7516258358955383, 0.7630696892738342, 0.7746596932411194, 0.7863893508911133, 0.7982524633407593, 0.8102432489395142, 0.822356104850769, 0.8345856666564941, 0.8469268679618835, 0.859375, 0.871925413608551, 0.884573757648468, 0.8973158597946167, 0.9101478457450867, 0.9230659604072571, 0.9360666275024414, 0.9491463899612427, 0.9623021483421326, 0.9755306839942932, 0.9888291954994202, 1.002194881439209, 1.015625, 1.0291171073913574, 1.0426688194274902, 1.0562777519226074, 1.069941759109497, 1.0836588144302368, 1.0974268913269043, 1.1112440824508667, 1.1251084804534912, 1.1390185356140137, 1.1529725790023804, 1.1669689416885376, 1.1810060739517212, 1.195082664489746, 1.2091972827911377, 1.2233487367630005, 1.2375354766845703, 1.2517565488815308, 1.2660107612609863, 1.2802969217300415, 1.2946139574050903, 1.308961033821106, 1.3233369588851929, 1.3377408981323242, 1.3521720170974731, 1.3666293621063232, 1.3811120986938477, 1.395619511604309, 1.4101508855819702, 1.4247052669525146, 1.4392821788787842, 1.4538809061050415, 1.4685006141662598, 1.4831409454345703, 1.4978010654449463, 1.512480616569519, 1.5271788835525513, 1.5418953895568848, 1.5566295385360718, 1.5713809728622437, 1.5861490964889526, 1.60093355178833, 1.6157337427139282, 1.630549430847168, 1.6453800201416016, 1.6602251529693604, 1.6750845909118652, 1.6899577379226685, 1.704844355583191, 1.719744086265564, 1.7346564531326294, 1.7495814561843872, 1.7645184993743896, 1.7794673442840576, 1.7944276332855225, 1.8093992471694946, 1.8243818283081055, 1.8393751382827759, 1.8543788194656372, 1.8693926334381104, 1.8844164609909058, 1.8994499444961548, 1.9144929647445679, 1.9295451641082764, 1.9446064233779907, 1.9596765041351318, 1.9747551679611206, 1.989842414855957, 2.0049376487731934, 2.0200412273406982, 2.0351524353027344, 2.050271511077881, 2.0653979778289795, 2.050271511077881, 2.0351524353027344, 2.0200412273406982, 2.0049376487731934, 1.989842414855957, 1.9747551679611206, 1.9596765041351318, 1.9446064233779907, 1.9295451641082764, 1.9144929647445679, 1.8994499444961548, 1.8844164609909058, 1.8693926334381104, 1.8543788194656372, 1.8393751382827759, 1.8243818283081055, 1.8093992471694946, 1.7944276332855225, 1.7794673442840576, 1.7645184993743896, 1.7495814561843872, 1.7346564531326294, 1.719744086265564, 1.704844355583191, 1.6899577379226685, 1.6750845909118652, 1.6602251529693604, 1.6453800201416016, 1.630549430847168, 1.6157337427139282, 1.60093355178833, 1.5861490964889526, 1.5713809728622437, 1.5566295385360718, 1.5418953895568848, 1.5271788835525513, 1.512480616569519, 1.4978010654449463, 1.4831409454345703, 1.4685006141662598, 1.4538809061050415, 1.4392821788787842, 1.4247052669525146, 1.4101508855819702, 1.395619511604309, 1.3811120986938477, 1.3666293621063232, 1.3521720170974731, 1.3377408981323242, 1.3233369588851929, 1.308961033821106, 1.2946139574050903, 1.2802969217300415, 1.2660107612609863, 1.2517565488815308, 1.2375354766845703, 1.2233487367630005, 1.2091972827911377, 1.195082664489746, 1.1810060739517212, 1.1669689416885376, 1.1529725790023804, 1.1390185356140137, 1.1251084804534912, 1.1112440824508667, 1.0974268913269043, 1.0836588144302368, 1.069941759109497, 1.0562777519226074, 1.0426688194274902, 1.0291171073913574, 1.015625, 1.002194881439209, 0.9888291954994202, 0.9755306839942932, 0.9623021483421326, 0.9491463899612427, 0.9360666275024414, 0.9230659604072571, 0.9101478457450867, 0.8973158597946167, 0.884573757648468, 0.871925413608551, 0.859375, 0.8469268679618835, 0.8345856666564941, 0.822356104850769, 0.8102432489395142, 0.7982524633407593, 0.7863893508911133, 0.7746596932411194, 0.7630696892738342, 0.7516258358955383, 0.7403348684310913, 0.7292038798332214, 0.7182403206825256, 0.7074519395828247, 0.6968469619750977, 0.6864338517189026, 0.6762214303016663, 0.6662189364433289, 0.6564359664916992, 0.6468825340270996, 0.6375689506530762, 0.6285057663917542, 0.6197041273117065, 0.6111752390861511, 0.6029306650161743, 0.5949822664260864, 0.5873420834541321, 0.5800222158432007, 0.5730350017547607, 0.5663927793502808, 0.5601077675819397, 0.5541921257972717, 0.5486578345298767, 0.5435164570808411, 0.5387793779373169, 0.5344572067260742, 0.5305601954460144, 0.527097761631012, 0.5240784287452698, 0.5215100049972534, 0.5193990468978882, 0.5177512764930725, 0.5165711045265198, 0.5158616900444031, 0.53125, 0.5314797163009644, 0.5321683287620544, 0.5333139896392822, 0.5349138379096985, 0.5369637608528137, 0.5394586324691772, 0.5423923134803772, 0.5457577705383301, 0.549547016620636, 0.5537514090538025, 0.5583615303039551, 0.5633673667907715, 0.5687586069107056, 0.5745242834091187, 0.5806532502174377, 0.5871341824531555, 0.5939555764198303, 0.6011057496070862, 0.6085731983184814, 0.6163463592529297, 0.624413788318634, 0.6327642798423767, 0.6413867473602295, 0.650270402431488, 0.6594046354293823, 0.668779194355011, 0.6783841848373413, 0.6882098317146301, 0.698246955871582, 0.7084864974021912, 0.7189198136329651, 0.72953861951828, 0.7403348684310913, 0.7513009309768677, 0.7624295353889465, 0.7737136483192444, 0.7851465344429016, 0.7967218160629272, 0.8084333539009094, 0.8202753067016602, 0.8322421312332153, 0.8443285226821899, 0.8565293550491333, 0.8688399195671082, 0.881255567073822, 0.8937718272209167, 0.9063847064971924, 0.9190900921821594, 0.931884229183197, 0.9447635412216187, 0.9577245712280273, 0.9707640409469604, 0.9838788509368896, 0.9970660209655762, 1.0103226900100708, 1.0236462354660034, 1.0370339155197144, 1.0504834651947021, 1.0639925003051758, 1.0775587558746338, 1.0911799669265747, 1.1048543453216553, 1.1185797452926636, 1.1323543787002563, 1.1461765766143799, 1.1600444316864014, 1.1739565134048462, 1.1879111528396606, 1.2019068002700806, 1.2159422636032104, 1.2300159931182861, 1.244126796722412, 1.2582733631134033, 1.2724546194076538, 1.286669135093689, 1.3009161949157715, 1.3151943683624268, 1.3295029401779175, 1.3438408374786377, 1.358207106590271, 1.3726009130477905, 1.3870213031768799, 1.4014675617218018, 1.4159388542175293, 1.4304343461990356, 1.4449535608291626, 1.4594954252243042, 1.4740595817565918, 1.4886451959609985, 1.5032516717910767, 1.517878532409668, 1.5325249433517456, 1.5471906661987305, 1.5618748664855957, 1.5765771865844727, 1.5912971496582031, 1.6060341596603394, 1.6207878589630127, 1.6355576515197754, 1.6503432989120483, 1.6651442050933838, 1.679960012435913, 1.6947903633117676, 1.7096349000930786, 1.7244932651519775, 1.7393649816513062, 1.7542498111724854, 1.769147515296936, 1.7840574979782104, 1.7989797592163086, 1.8139138221740723, 1.8288593292236328, 1.8438161611557007, 1.8587840795516968, 1.873762607574463, 1.8887516260147095, 1.9037508964538574, 1.9187601804733276, 1.933779239654541, 1.948807716369629, 1.9638456106185913, 1.9788925647735596, 1.9939483404159546, 2.0090129375457764, 2.0240859985351562, 2.0391671657562256, 2.0542566776275635, 2.0693540573120117, 2.0542566776275635, 2.0391671657562256, 2.0240859985351562, 2.0090129375457764, 1.9939483404159546, 1.9788925647735596, 1.9638456106185913, 1.948807716369629, 1.933779239654541, 1.9187601804733276, 1.9037508964538574, 1.8887516260147095, 1.873762607574463, 1.8587840795516968, 1.8438161611557007, 1.8288593292236328, 1.8139138221740723, 1.7989797592163086, 1.7840574979782104, 1.769147515296936, 1.7542498111724854, 1.7393649816513062, 1.7244932651519775, 1.7096349000930786, 1.6947903633117676, 1.679960012435913, 1.6651442050933838, 1.6503432989120483, 1.6355576515197754, 1.6207878589630127, 1.6060341596603394, 1.5912971496582031, 1.5765771865844727, 1.5618748664855957, 1.5471906661987305, 1.5325249433517456, 1.517878532409668, 1.5032516717910767, 1.4886451959609985, 1.4740595817565918, 1.4594954252243042, 1.4449535608291626, 1.4304343461990356, 1.4159388542175293, 1.4014675617218018, 1.3870213031768799, 1.3726009130477905, 1.358207106590271, 1.3438408374786377, 1.3295029401779175, 1.3151943683624268, 1.3009161949157715, 1.286669135093689, 1.2724546194076538, 1.2582733631134033, 1.244126796722412, 1.2300159931182861, 1.2159422636032104, 1.2019068002700806, 1.1879111528396606, 1.1739565134048462, 1.1600444316864014, 1.1461765766143799, 1.1323543787002563, 1.1185797452926636, 1.1048543453216553, 1.0911799669265747, 1.0775587558746338, 1.0639925003051758, 1.0504834651947021, 1.0370339155197144, 1.0236462354660034, 1.0103226900100708, 0.9970660209655762, 0.9838788509368896, 0.9707640409469604, 0.9577245712280273, 0.9447635412216187, 0.931884229183197, 0.9190900921821594, 0.9063847064971924, 0.8937718272209167, 0.881255567073822, 0.8688399195671082, 0.8565293550491333, 0.8443285226821899, 0.8322421312332153, 0.8202753067016602, 0.8084333539009094, 0.7967218160629272, 0.7851465344429016, 0.7737136483192444, 0.7624295353889465, 0.7513009309768677, 0.7403348684310913, 0.72953861951828, 0.7189198136329651, 0.7084864974021912, 0.698246955871582, 0.6882098317146301, 0.6783841848373413, 0.668779194355011, 0.6594046354293823, 0.650270402431488, 0.6413867473602295, 0.6327642798423767, 0.624413788318634, 0.6163463592529297, 0.6085731983184814, 0.6011057496070862, 0.5939555764198303, 0.5871341824531555, 0.5806532502174377, 0.5745242834091187, 0.5687586069107056, 0.5633673667907715, 0.5583615303039551, 0.5537514090538025, 0.549547016620636, 0.5457577705383301, 0.5423923134803772, 0.5394586324691772, 0.5369637608528137, 0.5349138379096985, 0.5333139896392822, 0.5321683287620544, 0.5314797163009644, 0.546875, 0.5470981597900391, 0.5477671027183533, 0.5488802790641785, 0.5504348278045654, 0.5524271726608276, 0.5548525452613831, 0.557705283164978, 0.5609788298606873, 0.5646659731864929, 0.5687586069107056, 0.573248028755188, 0.578125, 0.5833798050880432, 0.5890024304389954, 0.5949822664260864, 0.6013088226318359, 0.6079711318016052, 0.6149584054946899, 0.6222596168518066, 0.6298638582229614, 0.63776034116745, 0.6459383368492126, 0.6543872356414795, 0.6630967259407043, 0.6720566749572754, 0.6812571883201599, 0.6906886100769043, 0.7003417015075684, 0.7102074027061462, 0.7202768921852112, 0.7305418848991394, 0.7409940958023071, 0.7516258358955383, 0.7624295353889465, 0.7733980417251587, 0.7845243811607361, 0.7958019971847534, 0.807224452495575, 0.8187857866287231, 0.83048015832901, 0.8423020243644714, 0.8542460799217224, 0.866307258605957, 0.8784807920455933, 0.8907620310783386, 0.9031466245651245, 0.9156303405761719, 0.9282091856002808, 0.9408793449401855, 0.9536371827125549, 0.9664791822433472, 0.9794021248817444, 0.9924027919769287, 1.0054781436920166, 1.0186253786087036, 1.0318416357040405, 1.0451244115829468, 1.0584712028503418, 1.071879506111145, 1.0853471755981445, 1.0988719463348389, 1.1124516725540161, 1.126084566116333, 1.1397684812545776, 1.1535017490386963, 1.1672827005386353, 1.1811094284057617, 1.194980502128601, 1.2088944911956787, 1.222849726676941, 1.2368448972702026, 1.2508785724639893, 1.2649496793746948, 1.2790567874908447, 1.293198823928833, 1.3073747158050537, 1.3215831518173218, 1.3358232975006104, 1.3500940799713135, 1.3643944263458252, 1.3787236213684082, 1.393080711364746, 1.4074647426605225, 1.421875, 1.4363106489181519, 1.4507709741592407, 1.4652551412582397, 1.4797625541687012, 1.4942924976348877, 1.5088443756103516, 1.5234174728393555, 1.5380111932754517, 1.552625060081482, 1.567258358001709, 1.5819107294082642, 1.5965814590454102, 1.6112700700759888, 1.625976324081421, 1.6406993865966797, 1.655439019203186, 1.6701948642730713, 1.6849663257598877, 1.699752926826477, 1.7145545482635498, 1.7293705940246582, 1.7442008256912231, 1.7590447664260864, 1.7739020586013794, 1.788772463798523, 1.803655743598938, 1.8185513019561768, 1.8334591388702393, 1.8483787775039673, 1.8633098602294922, 1.878252387046814, 1.8932058811187744, 1.9081701040267944, 1.9231449365615845, 1.9381299018859863, 1.953125, 1.9681298732757568, 1.9831442832946777, 1.9981681108474731, 2.0132009983062744, 2.028243064880371, 2.0432937145233154, 2.0583529472351074, 2.073420524597168, 2.0583529472351074, 2.0432937145233154, 2.028243064880371, 2.0132009983062744, 1.9981681108474731, 1.9831442832946777, 1.9681298732757568, 1.953125, 1.9381299018859863, 1.9231449365615845, 1.9081701040267944, 1.8932058811187744, 1.878252387046814, 1.8633098602294922, 1.8483787775039673, 1.8334591388702393, 1.8185513019561768, 1.803655743598938, 1.788772463798523, 1.7739020586013794, 1.7590447664260864, 1.7442008256912231, 1.7293705940246582, 1.7145545482635498, 1.699752926826477, 1.6849663257598877, 1.6701948642730713, 1.655439019203186, 1.6406993865966797, 1.625976324081421, 1.6112700700759888, 1.5965814590454102, 1.5819107294082642, 1.567258358001709, 1.552625060081482, 1.5380111932754517, 1.5234174728393555, 1.5088443756103516, 1.4942924976348877, 1.4797625541687012, 1.4652551412582397, 1.4507709741592407, 1.4363106489181519, 1.421875, 1.4074647426605225, 1.393080711364746, 1.3787236213684082, 1.3643944263458252, 1.3500940799713135, 1.3358232975006104, 1.3215831518173218, 1.3073747158050537, 1.293198823928833, 1.2790567874908447, 1.2649496793746948, 1.2508785724639893, 1.2368448972702026, 1.222849726676941, 1.2088944911956787, 1.194980502128601, 1.1811094284057617, 1.1672827005386353, 1.1535017490386963, 1.1397684812545776, 1.126084566116333, 1.1124516725540161, 1.0988719463348389, 1.0853471755981445, 1.071879506111145, 1.0584712028503418, 1.0451244115829468, 1.0318416357040405, 1.0186253786087036, 1.0054781436920166, 0.9924027919769287, 0.9794021248817444, 0.9664791822433472, 0.9536371827125549, 0.9408793449401855, 0.9282091856002808, 0.9156303405761719, 0.9031466245651245, 0.8907620310783386, 0.8784807920455933, 0.866307258605957, 0.8542460799217224, 0.8423020243644714, 0.83048015832901, 0.8187857866287231, 0.807224452495575, 0.7958019971847534, 0.7845243811607361, 0.7733980417251587, 0.7624295353889465, 0.7516258358955383, 0.7409940958023071, 0.7305418848991394, 0.7202768921852112, 0.7102074027061462, 0.7003417015075684, 0.6906886100769043, 0.6812571883201599, 0.6720566749572754, 0.6630967259407043, 0.6543872356414795, 0.6459383368492126, 0.63776034116745, 0.6298638582229614, 0.6222596168518066, 0.6149584054946899, 0.6079711318016052, 0.6013088226318359, 0.5949822664260864, 0.5890024304389954, 0.5833798050880432, 0.578125, 0.573248028755188, 0.5687586069107056, 0.5646659731864929, 0.5609788298606873, 0.557705283164978, 0.5548525452613831, 0.5524271726608276, 0.5504348278045654, 0.5488802790641785, 0.5477671027183533, 0.5470981597900391, 0.5625, 0.5627169609069824, 0.5633673667907715, 0.5644497275352478, 0.5659615993499756, 0.5678994059562683, 0.5702589750289917, 0.5730350017547607, 0.5762215256690979, 0.5798117518424988, 0.5837981700897217, 0.5881727933883667, 0.5929270386695862, 0.5980518460273743, 0.6035377383232117, 0.609375, 0.615553617477417, 0.622063398361206, 0.6288940906524658, 0.6360353827476501, 0.6434769034385681, 0.6512083411216736, 0.6592194437980652, 0.6675003170967102, 0.6760408878326416, 0.684831440448761, 0.6938626170158386, 0.703125, 0.7126096487045288, 0.7223077416419983, 0.7322109341621399, 0.7423108220100403, 0.7525996565818787, 0.7630696892738342, 0.7737136483192444, 0.7845243811607361, 0.7954951524734497, 0.8066193461418152, 0.8178907632827759, 0.8293033838272095, 0.8408514857292175, 0.8525295257568359, 0.8643323183059692, 0.876254677772522, 0.8882918953895569, 0.9004393219947815, 0.9126926064491272, 0.9250475168228149, 0.9375, 0.9500462412834167, 0.9626826047897339, 0.9754055738449097, 0.9882117509841919, 1.0010980367660522, 1.0140613317489624, 1.0270986557006836, 1.0402072668075562, 1.0533846616744995, 1.0666279792785645, 1.079935073852539, 1.0933034420013428, 1.1067310571670532, 1.1202155351638794, 1.1337549686431885, 1.1473474502563477, 1.1609910726547241, 1.1746841669082642, 1.188424825668335, 1.2022114992141724, 1.2160426378250122, 1.2299168109893799, 1.2438324689865112, 1.2577881813049316, 1.2717828750610352, 1.2858150005340576, 1.2998836040496826, 1.3139872550964355, 1.328125, 1.34229576587677, 1.35649836063385, 1.370732069015503, 1.3849955797195435, 1.399288296699524, 1.413609266281128, 1.4279574155807495, 1.4423322677612305, 1.4567327499389648, 1.4711582660675049, 1.4856079816818237, 1.5000814199447632, 1.5145776271820068, 1.529096007347107, 1.5436360836029053, 1.558197259902954, 1.5727787017822266, 1.587380051612854, 1.6020007133483887, 1.6166402101516724, 1.6312979459762573, 1.6459734439849854, 1.6606662273406982, 1.675376057624817, 1.690102219581604, 1.704844355583191, 1.719602108001709, 1.734375, 1.7491627931594849, 1.7639648914337158, 1.7787811756134033, 1.7936111688613892, 1.8084545135498047, 1.8233109712600708, 1.8381801843643188, 1.8530617952346802, 1.8679555654525757, 1.8828611373901367, 1.8977782726287842, 1.912706732749939, 1.927646279335022, 1.942596673965454, 1.9575574398040771, 1.9725285768508911, 1.987509846687317, 2.0025007724761963, 2.0175015926361084, 2.0325117111206055, 2.0475308895111084, 2.062559127807617, 2.0775961875915527, 2.062559127807617, 2.0475308895111084, 2.0325117111206055, 2.0175015926361084, 2.0025007724761963, 1.987509846687317, 1.9725285768508911, 1.9575574398040771, 1.942596673965454, 1.927646279335022, 1.912706732749939, 1.8977782726287842, 1.8828611373901367, 1.8679555654525757, 1.8530617952346802, 1.8381801843643188, 1.8233109712600708, 1.8084545135498047, 1.7936111688613892, 1.7787811756134033, 1.7639648914337158, 1.7491627931594849, 1.734375, 1.719602108001709, 1.704844355583191, 1.690102219581604, 1.675376057624817, 1.6606662273406982, 1.6459734439849854, 1.6312979459762573, 1.6166402101516724, 1.6020007133483887, 1.587380051612854, 1.5727787017822266, 1.558197259902954, 1.5436360836029053, 1.529096007347107, 1.5145776271820068, 1.5000814199447632, 1.4856079816818237, 1.4711582660675049, 1.4567327499389648, 1.4423322677612305, 1.4279574155807495, 1.413609266281128, 1.399288296699524, 1.3849955797195435, 1.370732069015503, 1.35649836063385, 1.34229576587677, 1.328125, 1.3139872550964355, 1.2998836040496826, 1.2858150005340576, 1.2717828750610352, 1.2577881813049316, 1.2438324689865112, 1.2299168109893799, 1.2160426378250122, 1.2022114992141724, 1.188424825668335, 1.1746841669082642, 1.1609910726547241, 1.1473474502563477, 1.1337549686431885, 1.1202155351638794, 1.1067310571670532, 1.0933034420013428, 1.079935073852539, 1.0666279792785645, 1.0533846616744995, 1.0402072668075562, 1.0270986557006836, 1.0140613317489624, 1.0010980367660522, 0.9882117509841919, 0.9754055738449097, 0.9626826047897339, 0.9500462412834167, 0.9375, 0.9250475168228149, 0.9126926064491272, 0.9004393219947815, 0.8882918953895569, 0.876254677772522, 0.8643323183059692, 0.8525295257568359, 0.8408514857292175, 0.8293033838272095, 0.8178907632827759, 0.8066193461418152, 0.7954951524734497, 0.7845243811607361, 0.7737136483192444, 0.7630696892738342, 0.7525996565818787, 0.7423108220100403, 0.7322109341621399, 0.7223077416419983, 0.7126096487045288, 0.703125, 0.6938626170158386, 0.684831440448761, 0.6760408878326416, 0.6675003170967102, 0.6592194437980652, 0.6512083411216736, 0.6434769034385681, 0.6360353827476501, 0.6288940906524658, 0.622063398361206, 0.615553617477417, 0.609375, 0.6035377383232117, 0.5980518460273743, 0.5929270386695862, 0.5881727933883667, 0.5837981700897217, 0.5798117518424988, 0.5762215256690979, 0.5730350017547607, 0.5702589750289917, 0.5678994059562683, 0.5659615993499756, 0.5644497275352478, 0.5633673667907715, 0.5627169609069824, 0.578125, 0.5783361196517944, 0.5789690017700195, 0.5800222158432007, 0.5814935564994812, 0.5833798050880432, 0.5856770277023315, 0.5883803367614746, 0.5914841890335083, 0.5949822664260864, 0.5988677740097046, 0.6031330823898315, 0.6077703237533569, 0.6127709746360779, 0.6181262731552124, 0.6238270401954651, 0.6298638582229614, 0.6362273097038269, 0.6429075002670288, 0.6498948335647583, 0.6571794152259827, 0.6647514700889587, 0.6726013422012329, 0.6807193756103516, 0.6890961527824402, 0.697722315788269, 0.7065886855125427, 0.7156863808631897, 0.7250067591667175, 0.7345411777496338, 0.7442815899848938, 0.7542198896408081, 0.7643484473228455, 0.7746596932411194, 0.7851465344429016, 0.7958019971847534, 0.8066193461418152, 0.817592203617096, 0.8287144303321838, 0.8399800062179565, 0.8513832688331604, 0.8629188537597656, 0.8745813965797424, 0.8863658905029297, 0.8982676267623901, 0.9102819561958313, 0.9224045276641846, 0.9346310496330261, 0.946957528591156, 0.9593800902366638, 0.9718950986862183, 0.9844989776611328, 0.9971884489059448, 1.0099601745605469, 1.0228111743927002, 1.0357383489608765, 1.048738956451416, 1.0618104934692383, 1.0749499797821045, 1.0881553888320923, 1.101423978805542, 1.1147537231445312, 1.1281423568725586, 1.141587734222412, 1.1550880670547485, 1.1686413288116455, 1.1822457313537598, 1.1958996057510376, 1.2096010446548462, 1.2233487367630005, 1.2371408939361572, 1.2509762048721313, 1.2648531198501587, 1.2787704467773438, 1.292726755142212, 1.3067208528518677, 1.3207515478134155, 1.33481764793396, 1.348918080329895, 1.3630517721176147, 1.3772176504135132, 1.391414761543274, 1.4056422710418701, 1.4198989868164062, 1.4341843128204346, 1.4484972953796387, 1.4628372192382812, 1.4772030115127563, 1.4915943145751953, 1.5060100555419922, 1.5204497575759888, 1.5349127054214478, 1.5493981838226318, 1.5639055967330933, 1.5784343481063843, 1.5929838418960571, 1.6075536012649536, 1.6221429109573364, 1.636751413345337, 1.6513783931732178, 1.6660236120224, 1.6806864738464355, 1.6953665018081665, 1.7100632190704346, 1.7247763872146606, 1.739505410194397, 1.7542498111724854, 1.7690094709396362, 1.7837837934494019, 1.7985725402832031, 1.8133753538131714, 1.8281917572021484, 1.8430216312408447, 1.8578643798828125, 1.8727200031280518, 1.8875879049301147, 1.9024680852890015, 1.9173600673675537, 1.9322636127471924, 1.9471784830093384, 1.962104320526123, 1.9770411252975464, 1.9919883012771606, 2.006945848464966, 2.021913528442383, 2.036891222000122, 2.0518784523010254, 2.0668749809265137, 2.081881046295166, 2.0668749809265137, 2.0518784523010254, 2.036891222000122, 2.021913528442383, 2.006945848464966, 1.9919883012771606, 1.9770411252975464, 1.962104320526123, 1.9471784830093384, 1.9322636127471924, 1.9173600673675537, 1.9024680852890015, 1.8875879049301147, 1.8727200031280518, 1.8578643798828125, 1.8430216312408447, 1.8281917572021484, 1.8133753538131714, 1.7985725402832031, 1.7837837934494019, 1.7690094709396362, 1.7542498111724854, 1.739505410194397, 1.7247763872146606, 1.7100632190704346, 1.6953665018081665, 1.6806864738464355, 1.6660236120224, 1.6513783931732178, 1.636751413345337, 1.6221429109573364, 1.6075536012649536, 1.5929838418960571, 1.5784343481063843, 1.5639055967330933, 1.5493981838226318, 1.5349127054214478, 1.5204497575759888, 1.5060100555419922, 1.4915943145751953, 1.4772030115127563, 1.4628372192382812, 1.4484972953796387, 1.4341843128204346, 1.4198989868164062, 1.4056422710418701, 1.391414761543274, 1.3772176504135132, 1.3630517721176147, 1.348918080329895, 1.33481764793396, 1.3207515478134155, 1.3067208528518677, 1.292726755142212, 1.2787704467773438, 1.2648531198501587, 1.2509762048721313, 1.2371408939361572, 1.2233487367630005, 1.2096010446548462, 1.1958996057510376, 1.1822457313537598, 1.1686413288116455, 1.1550880670547485, 1.141587734222412, 1.1281423568725586, 1.1147537231445312, 1.101423978805542, 1.0881553888320923, 1.0749499797821045, 1.0618104934692383, 1.048738956451416, 1.0357383489608765, 1.0228111743927002, 1.0099601745605469, 0.9971884489059448, 0.9844989776611328, 0.9718950986862183, 0.9593800902366638, 0.946957528591156, 0.9346310496330261, 0.9224045276641846, 0.9102819561958313, 0.8982676267623901, 0.8863658905029297, 0.8745813965797424, 0.8629188537597656, 0.8513832688331604, 0.8399800062179565, 0.8287144303321838, 0.817592203617096, 0.8066193461418152, 0.7958019971847534, 0.7851465344429016, 0.7746596932411194, 0.7643484473228455, 0.7542198896408081, 0.7442815899848938, 0.7345411777496338, 0.7250067591667175, 0.7156863808631897, 0.7065886855125427, 0.697722315788269, 0.6890961527824402, 0.6807193756103516, 0.6726013422012329, 0.6647514700889587, 0.6571794152259827, 0.6498948335647583, 0.6429075002670288, 0.6362273097038269, 0.6298638582229614, 0.6238270401954651, 0.6181262731552124, 0.6127709746360779, 0.6077703237533569, 0.6031330823898315, 0.5988677740097046, 0.5949822664260864, 0.5914841890335083, 0.5883803367614746, 0.5856770277023315, 0.5833798050880432, 0.5814935564994812, 0.5800222158432007, 0.5789690017700195, 0.5783361196517944, 0.59375, 0.5939555764198303, 0.5945718288421631, 0.5955974459648132, 0.5970304012298584, 0.5988677740097046, 0.6011057496070862, 0.6037399768829346, 0.6067652702331543, 0.6101757287979126, 0.6139650940895081, 0.6181262731552124, 0.6226518154144287, 0.6275339126586914, 0.6327642798423767, 0.638334333896637, 0.6442352533340454, 0.6504580974578857, 0.6569936275482178, 0.6638326644897461, 0.6709659695625305, 0.6783841848373413, 0.6860780715942383, 0.6940385103225708, 0.7022563815116882, 0.7107228636741638, 0.7194290161132812, 0.7283663749694824, 0.7375264763832092, 0.7469011545181274, 0.7564824223518372, 0.7662624716758728, 0.7762339115142822, 0.7863893508911133, 0.7967218160629272, 0.807224452495575, 0.8178907632827759, 0.8287144303321838, 0.839689314365387, 0.8508095741271973, 0.8620696663856506, 0.873464047908783, 0.8849876523017883, 0.8966354131698608, 0.9084026217460632, 0.920284628868103, 0.9322771430015564, 0.9443758130073547, 0.9565767645835876, 0.9688760042190552, 0.981269896030426, 0.9937549233436584, 1.0063276290893555, 1.0189847946166992, 1.0317233800888062, 1.044540286064148, 1.057432770729065, 1.0703980922698975, 1.0834335088729858, 1.096536636352539, 1.1097050905227661, 1.122936487197876, 1.1362286806106567, 1.1495795249938965, 1.1629871129989624, 1.1764494180679321, 1.1899645328521729, 1.2035307884216309, 1.217146396636963, 1.2308096885681152, 1.2445192337036133, 1.2582733631134033, 1.2720707654953003, 1.2859100103378296, 1.2997896671295166, 1.3137085437774658, 1.3276653289794922, 1.3416589498519897, 1.355688214302063, 1.369752049446106, 1.3838493824005127, 1.3979791402816772, 1.4121404886245728, 1.4263323545455933, 1.4405537843704224, 1.4548041820526123, 1.4690823554992676, 1.48338782787323, 1.497719645500183, 1.5120769739151, 1.5264593362808228, 1.5408658981323242, 1.5552959442138672, 1.5697487592697144, 1.584223985671997, 1.5987207889556885, 1.6132386922836304, 1.627777099609375, 1.6423354148864746, 1.656913161277771, 1.671509861946106, 1.6861250400543213, 1.7007580995559692, 1.7154086828231812, 1.7300763130187988, 1.744760513305664, 1.7594610452651978, 1.7741773128509521, 1.7889089584350586, 1.803655743598938, 1.8184170722961426, 1.8331927061080933, 1.847982406616211, 1.8627856969833374, 1.8776023387908936, 1.8924319744110107, 1.9072743654251099, 1.9221290349960327, 1.9369958639144897, 1.9518746137619019, 1.9667649269104004, 1.9816664457321167, 1.9965790510177612, 2.011502504348755, 2.0264365673065186, 2.0413808822631836, 2.05633544921875, 2.0712997913360596, 2.0862739086151123, 2.0712997913360596, 2.05633544921875, 2.0413808822631836, 2.0264365673065186, 2.011502504348755, 1.9965790510177612, 1.9816664457321167, 1.9667649269104004, 1.9518746137619019, 1.9369958639144897, 1.9221290349960327, 1.9072743654251099, 1.8924319744110107, 1.8776023387908936, 1.8627856969833374, 1.847982406616211, 1.8331927061080933, 1.8184170722961426, 1.803655743598938, 1.7889089584350586, 1.7741773128509521, 1.7594610452651978, 1.744760513305664, 1.7300763130187988, 1.7154086828231812, 1.7007580995559692, 1.6861250400543213, 1.671509861946106, 1.656913161277771, 1.6423354148864746, 1.627777099609375, 1.6132386922836304, 1.5987207889556885, 1.584223985671997, 1.5697487592697144, 1.5552959442138672, 1.5408658981323242, 1.5264593362808228, 1.5120769739151, 1.497719645500183, 1.48338782787323, 1.4690823554992676, 1.4548041820526123, 1.4405537843704224, 1.4263323545455933, 1.4121404886245728, 1.3979791402816772, 1.3838493824005127, 1.369752049446106, 1.355688214302063, 1.3416589498519897, 1.3276653289794922, 1.3137085437774658, 1.2997896671295166, 1.2859100103378296, 1.2720707654953003, 1.2582733631134033, 1.2445192337036133, 1.2308096885681152, 1.217146396636963, 1.2035307884216309, 1.1899645328521729, 1.1764494180679321, 1.1629871129989624, 1.1495795249938965, 1.1362286806106567, 1.122936487197876, 1.1097050905227661, 1.096536636352539, 1.0834335088729858, 1.0703980922698975, 1.057432770729065, 1.044540286064148, 1.0317233800888062, 1.0189847946166992, 1.0063276290893555, 0.9937549233436584, 0.981269896030426, 0.9688760042190552, 0.9565767645835876, 0.9443758130073547, 0.9322771430015564, 0.920284628868103, 0.9084026217460632, 0.8966354131698608, 0.8849876523017883, 0.873464047908783, 0.8620696663856506, 0.8508095741271973, 0.839689314365387, 0.8287144303321838, 0.8178907632827759, 0.807224452495575, 0.7967218160629272, 0.7863893508911133, 0.7762339115142822, 0.7662624716758728, 0.7564824223518372, 0.7469011545181274, 0.7375264763832092, 0.7283663749694824, 0.7194290161132812, 0.7107228636741638, 0.7022563815116882, 0.6940385103225708, 0.6860780715942383, 0.6783841848373413, 0.6709659695625305, 0.6638326644897461, 0.6569936275482178, 0.6504580974578857, 0.6442352533340454, 0.638334333896637, 0.6327642798423767, 0.6275339126586914, 0.6226518154144287, 0.6181262731552124, 0.6139650940895081, 0.6101757287979126, 0.6067652702331543, 0.6037399768829346, 0.6011057496070862, 0.5988677740097046, 0.5970304012298584, 0.5955974459648132, 0.5945718288421631, 0.5939555764198303, 0.609375, 0.6095752716064453, 0.6101757287979126, 0.6111752390861511, 0.6125717163085938, 0.6143625974655151, 0.6165443658828735, 0.6191129088401794, 0.622063398361206, 0.6253905296325684, 0.6290881633758545, 0.6331499814987183, 0.6375689506530762, 0.6423376202583313, 0.6474484205245972, 0.6528931856155396, 0.6586636900901794, 0.6647514700889587, 0.671147882938385, 0.6778441071510315, 0.684831440448761, 0.6921010613441467, 0.699644148349762, 0.7074519395828247, 0.7155157923698425, 0.7238271832466125, 0.7323775887489319, 0.7411588430404663, 0.7501627206802368, 0.7593814134597778, 0.7688071727752686, 0.7784324288368225, 0.7882499098777771, 0.7982524633407593, 0.8084333539009094, 0.8187857866287231, 0.8293033838272095, 0.8399800062179565, 0.8508095741271973, 0.8617863655090332, 0.8729048371315002, 0.8841596245765686, 0.8955456018447876, 0.9070578217506409, 0.9186915159225464, 0.9304421544075012, 0.9423053860664368, 0.954276978969574, 0.9663528800010681, 0.9785292744636536, 0.9908024072647095, 1.0031688213348389, 1.015625, 1.028167724609375, 1.0407938957214355, 1.0535005331039429, 1.0662846565246582, 1.0791435241699219, 1.0920746326446533, 1.1050752401351929, 1.1181432008743286, 1.1312758922576904, 1.144471287727356, 1.1577271223068237, 1.1710413694381714, 1.1844121217727661, 1.1978373527526855, 1.2113155126571655, 1.2248445749282837, 1.2384229898452759, 1.2520490884780884, 1.2657214403152466, 1.2794384956359863, 1.293198823928833, 1.3070011138916016, 1.320844054222107, 1.3347262144088745, 1.348646640777588, 1.3626039028167725, 1.3765970468521118, 1.390625, 1.404686689376831, 1.4187809228897095, 1.4329071044921875, 1.44706392288208, 1.4612507820129395, 1.4754667282104492, 1.489710807800293, 1.5039823055267334, 1.5182805061340332, 1.5326045751571655, 1.5469539165496826, 1.5613276958465576, 1.5757253170013428, 1.5901460647583008, 1.6045893430709839, 1.6190546751022339, 1.633541226387024, 1.6480486392974854, 1.6625763177871704, 1.677123785018921, 1.691690444946289, 1.7062757015228271, 1.720879316329956, 1.7355008125305176, 1.7501394748687744, 1.764795184135437, 1.7794673442840576, 1.7941555976867676, 1.8088594675064087, 1.8235787153244019, 1.8383129835128784, 1.8530617952346802, 1.8678247928619385, 1.8826017379760742, 1.8973922729492188, 1.912196159362793, 1.9270129203796387, 1.9418424367904663, 1.9566842317581177, 1.9715381860733032, 1.9864039421081543, 2.001281261444092, 2.016170024871826, 2.031069755554199, 2.045980215072632, 2.060901403427124, 2.0758328437805176, 2.0907745361328125, 2.0758328437805176, 2.060901403427124, 2.045980215072632, 2.031069755554199, 2.016170024871826, 2.001281261444092, 1.9864039421081543, 1.9715381860733032, 1.9566842317581177, 1.9418424367904663, 1.9270129203796387, 1.912196159362793, 1.8973922729492188, 1.8826017379760742, 1.8678247928619385, 1.8530617952346802, 1.8383129835128784, 1.8235787153244019, 1.8088594675064087, 1.7941555976867676, 1.7794673442840576, 1.764795184135437, 1.7501394748687744, 1.7355008125305176, 1.720879316329956, 1.7062757015228271, 1.691690444946289, 1.677123785018921, 1.6625763177871704, 1.6480486392974854, 1.633541226387024, 1.6190546751022339, 1.6045893430709839, 1.5901460647583008, 1.5757253170013428, 1.5613276958465576, 1.5469539165496826, 1.5326045751571655, 1.5182805061340332, 1.5039823055267334, 1.489710807800293, 1.4754667282104492, 1.4612507820129395, 1.44706392288208, 1.4329071044921875, 1.4187809228897095, 1.404686689376831, 1.390625, 1.3765970468521118, 1.3626039028167725, 1.348646640777588, 1.3347262144088745, 1.320844054222107, 1.3070011138916016, 1.293198823928833, 1.2794384956359863, 1.2657214403152466, 1.2520490884780884, 1.2384229898452759, 1.2248445749282837, 1.2113155126571655, 1.1978373527526855, 1.1844121217727661, 1.1710413694381714, 1.1577271223068237, 1.144471287727356, 1.1312758922576904, 1.1181432008743286, 1.1050752401351929, 1.0920746326446533, 1.0791435241699219, 1.0662846565246582, 1.0535005331039429, 1.0407938957214355, 1.028167724609375, 1.015625, 1.0031688213348389, 0.9908024072647095, 0.9785292744636536, 0.9663528800010681, 0.954276978969574, 0.9423053860664368, 0.9304421544075012, 0.9186915159225464, 0.9070578217506409, 0.8955456018447876, 0.8841596245765686, 0.8729048371315002, 0.8617863655090332, 0.8508095741271973, 0.8399800062179565, 0.8293033838272095, 0.8187857866287231, 0.8084333539009094, 0.7982524633407593, 0.7882499098777771, 0.7784324288368225, 0.7688071727752686, 0.7593814134597778, 0.7501627206802368, 0.7411588430404663, 0.7323775887489319, 0.7238271832466125, 0.7155157923698425, 0.7074519395828247, 0.699644148349762, 0.6921010613441467, 0.684831440448761, 0.6778441071510315, 0.671147882938385, 0.6647514700889587, 0.6586636900901794, 0.6528931856155396, 0.6474484205245972, 0.6423376202583313, 0.6375689506530762, 0.6331499814987183, 0.6290881633758545, 0.6253905296325684, 0.622063398361206, 0.6191129088401794, 0.6165443658828735, 0.6143625974655151, 0.6125717163085938, 0.6111752390861511, 0.6101757287979126, 0.6095752716064453, 0.625, 0.6251952648162842, 0.6257807612419128, 0.6267553567886353, 0.6281172037124634, 0.6298638582229614, 0.6319921612739563, 0.634498119354248, 0.6373774409294128, 0.640625, 0.6442352533340454, 0.648202121257782, 0.652519166469574, 0.6571794152259827, 0.6621756553649902, 0.6675003170967102, 0.673145592212677, 0.6791035532951355, 0.6853660345077515, 0.6919246912002563, 0.6987712383270264, 0.705897331237793, 0.713294506072998, 0.7209544777870178, 0.7288689613342285, 0.7370297908782959, 0.7454288005828857, 0.7540580034255981, 0.7629097104072571, 0.7719762325286865, 0.78125, 0.7907238006591797, 0.8003905415534973, 0.8102432489395142, 0.8202753067016602, 0.83048015832901, 0.8408514857292175, 0.8513832688331604, 0.8620696663856506, 0.8729048371315002, 0.8838834762573242, 0.8950002193450928, 0.90625, 0.9176279306411743, 0.9291293025016785, 0.9407495856285095, 0.9524844288825989, 0.9643296599388123, 0.9762812256813049, 0.9883353114128113, 1.0004881620407104, 1.0127363204956055, 1.0250762701034546, 1.0375046730041504, 1.050018548965454, 1.062614917755127, 1.0752906799316406, 1.0880430936813354, 1.1008696556091309, 1.1137677431106567, 1.126734733581543, 1.1397684812545776, 1.1528667211532593, 1.1660270690917969, 1.1792476177215576, 1.1925263404846191, 1.2058613300323486, 1.2192506790161133, 1.2326927185058594, 1.246185541152954, 1.2597277164459229, 1.2733176946640015, 1.2869538068771362, 1.3006346225738525, 1.3143588304519653, 1.328125, 1.341931939125061, 1.3557783365249634, 1.369662880897522, 1.38358473777771, 1.3975424766540527, 1.4115352630615234, 1.425561785697937, 1.4396214485168457, 1.4537129402160645, 1.467835545539856, 1.4819881916046143, 1.4961702823638916, 1.510380744934082, 1.5246189832687378, 1.5388840436935425, 1.5531753301620483, 1.5674920082092285, 1.5818334817886353, 1.5961991548538208, 1.6105881929397583, 1.625, 1.6394340991973877, 1.653889775276184, 1.6683666706085205, 1.6828639507293701, 1.6973813772201538, 1.7119182348251343, 1.7264741659164429, 1.7410485744476318, 1.755640983581543, 1.7702511548995972, 1.7848783731460571, 1.7995225191116333, 1.814182996749878, 1.8288593292236328, 1.8435513973236084, 1.858258605003357, 1.8729807138442993, 1.8877172470092773, 1.9024680852890015, 1.9172327518463135, 1.9320108890533447, 1.9468022584915161, 1.9616066217422485, 1.9764235019683838, 1.9912528991699219, 2.006094217300415, 2.0209474563598633, 2.0358121395111084, 2.0506882667541504, 2.065575361251831, 2.0804731845855713, 2.095381736755371, 2.0804731845855713, 2.065575361251831, 2.0506882667541504, 2.0358121395111084, 2.0209474563598633, 2.006094217300415, 1.9912528991699219, 1.9764235019683838, 1.9616066217422485, 1.9468022584915161, 1.9320108890533447, 1.9172327518463135, 1.9024680852890015, 1.8877172470092773, 1.8729807138442993, 1.858258605003357, 1.8435513973236084, 1.8288593292236328, 1.814182996749878, 1.7995225191116333, 1.7848783731460571, 1.7702511548995972, 1.755640983581543, 1.7410485744476318, 1.7264741659164429, 1.7119182348251343, 1.6973813772201538, 1.6828639507293701, 1.6683666706085205, 1.653889775276184, 1.6394340991973877, 1.625, 1.6105881929397583, 1.5961991548538208, 1.5818334817886353, 1.5674920082092285, 1.5531753301620483, 1.5388840436935425, 1.5246189832687378, 1.510380744934082, 1.4961702823638916, 1.4819881916046143, 1.467835545539856, 1.4537129402160645, 1.4396214485168457, 1.425561785697937, 1.4115352630615234, 1.3975424766540527, 1.38358473777771, 1.369662880897522, 1.3557783365249634, 1.341931939125061, 1.328125, 1.3143588304519653, 1.3006346225738525, 1.2869538068771362, 1.2733176946640015, 1.2597277164459229, 1.246185541152954, 1.2326927185058594, 1.2192506790161133, 1.2058613300323486, 1.1925263404846191, 1.1792476177215576, 1.1660270690917969, 1.1528667211532593, 1.1397684812545776, 1.126734733581543, 1.1137677431106567, 1.1008696556091309, 1.0880430936813354, 1.0752906799316406, 1.062614917755127, 1.050018548965454, 1.0375046730041504, 1.0250762701034546, 1.0127363204956055, 1.0004881620407104, 0.9883353114128113, 0.9762812256813049, 0.9643296599388123, 0.9524844288825989, 0.9407495856285095, 0.9291293025016785, 0.9176279306411743, 0.90625, 0.8950002193450928, 0.8838834762573242, 0.8729048371315002, 0.8620696663856506, 0.8513832688331604, 0.8408514857292175, 0.83048015832901, 0.8202753067016602, 0.8102432489395142, 0.8003905415534973, 0.7907238006591797, 0.78125, 0.7719762325286865, 0.7629097104072571, 0.7540580034255981, 0.7454288005828857, 0.7370297908782959, 0.7288689613342285, 0.7209544777870178, 0.713294506072998, 0.705897331237793, 0.6987712383270264, 0.6919246912002563, 0.6853660345077515, 0.6791035532951355, 0.673145592212677, 0.6675003170967102, 0.6621756553649902, 0.6571794152259827, 0.652519166469574, 0.648202121257782, 0.6442352533340454, 0.640625, 0.6373774409294128, 0.634498119354248, 0.6319921612739563, 0.6298638582229614, 0.6281172037124634, 0.6267553567886353, 0.6257807612419128, 0.6251952648162842, 0.640625, 0.6408154964447021, 0.6413867473602295, 0.6423376202583313, 0.6436665654182434, 0.64537113904953, 0.6474484205245972, 0.6498948335647583, 0.6527062058448792, 0.6558778882026672, 0.6594046354293823, 0.6632807850837708, 0.6675003170967102, 0.6720566749572754, 0.6769431233406067, 0.682152509689331, 0.6876775622367859, 0.6935106515884399, 0.699644148349762, 0.7060702443122864, 0.7127808928489685, 0.7197682857513428, 0.7270243763923645, 0.7345411777496338, 0.7423108220100403, 0.7503254413604736, 0.7585772275924683, 0.7670586109161377, 0.7757619619369507, 0.7846799492835999, 0.7938053607940674, 0.803131103515625, 0.812650203704834, 0.822356104850769, 0.8322421312332153, 0.8423020243644714, 0.8525295257568359, 0.8629188537597656, 0.873464047908783, 0.8841596245765686, 0.8950002193450928, 0.9059805870056152, 0.9170956611633301, 0.9283406734466553, 0.9397109150886536, 0.9512019753456116, 0.9628093838691711, 0.9745291471481323, 0.9863571524620056, 0.9982895255088806, 1.0103226900100708, 1.0224529504776, 1.0346770286560059, 1.0469915866851807, 1.0593934059143066, 1.071879506111145, 1.0844470262527466, 1.097093105316162, 1.109815001487732, 1.122610330581665, 1.1354763507843018, 1.1484109163284302, 1.1614116430282593, 1.1744762659072876, 1.1876027584075928, 1.2007890939712524, 1.2140333652496338, 1.2273335456848145, 1.2406879663467407, 1.2540948390960693, 1.2675524950027466, 1.2810593843460083, 1.2946139574050903, 1.308214783668518, 1.3218601942062378, 1.3355491161346436, 1.3492799997329712, 1.3630517721176147, 1.3768631219863892, 1.3907127380371094, 1.404599666595459, 1.418522834777832, 1.432481050491333, 1.4464733600616455, 1.4604988098144531, 1.47455632686615, 1.4886451959609985, 1.502764344215393, 1.5169130563735962, 1.531090497970581, 1.5452959537506104, 1.5595284700393677, 1.5737873315811157, 1.5880719423294067, 1.602381706237793, 1.616715669631958, 1.6310733556747437, 1.6454541683197021, 1.6598575115203857, 1.6742826700210571, 1.6887292861938477, 1.70319664478302, 1.7176843881607056, 1.732191801071167, 1.746718406677246, 1.7612639665603638, 1.7758277654647827, 1.7904095649719238, 1.8050087690353394, 1.8196250200271606, 1.8342578411102295, 1.8489069938659668, 1.8635720014572144, 1.878252387046814, 1.8929479122161865, 1.907658338546753, 1.9223830699920654, 1.9371219873428345, 1.9518746137619019, 1.9666407108306885, 1.9814200401306152, 1.9962122440338135, 2.011017084121704, 2.025834083557129, 2.040663242340088, 2.055504322052002, 2.070356607437134, 2.0852205753326416, 2.100095272064209, 2.0852205753326416, 2.070356607437134, 2.055504322052002, 2.040663242340088, 2.025834083557129, 2.011017084121704, 1.9962122440338135, 1.9814200401306152, 1.9666407108306885, 1.9518746137619019, 1.9371219873428345, 1.9223830699920654, 1.907658338546753, 1.8929479122161865, 1.878252387046814, 1.8635720014572144, 1.8489069938659668, 1.8342578411102295, 1.8196250200271606, 1.8050087690353394, 1.7904095649719238, 1.7758277654647827, 1.7612639665603638, 1.746718406677246, 1.732191801071167, 1.7176843881607056, 1.70319664478302, 1.6887292861938477, 1.6742826700210571, 1.6598575115203857, 1.6454541683197021, 1.6310733556747437, 1.616715669631958, 1.602381706237793, 1.5880719423294067, 1.5737873315811157, 1.5595284700393677, 1.5452959537506104, 1.531090497970581, 1.5169130563735962, 1.502764344215393, 1.4886451959609985, 1.47455632686615, 1.4604988098144531, 1.4464733600616455, 1.432481050491333, 1.418522834777832, 1.404599666595459, 1.3907127380371094, 1.3768631219863892, 1.3630517721176147, 1.3492799997329712, 1.3355491161346436, 1.3218601942062378, 1.308214783668518, 1.2946139574050903, 1.2810593843460083, 1.2675524950027466, 1.2540948390960693, 1.2406879663467407, 1.2273335456848145, 1.2140333652496338, 1.2007890939712524, 1.1876027584075928, 1.1744762659072876, 1.1614116430282593, 1.1484109163284302, 1.1354763507843018, 1.122610330581665, 1.109815001487732, 1.097093105316162, 1.0844470262527466, 1.071879506111145, 1.0593934059143066, 1.0469915866851807, 1.0346770286560059, 1.0224529504776, 1.0103226900100708, 0.9982895255088806, 0.9863571524620056, 0.9745291471481323, 0.9628093838691711, 0.9512019753456116, 0.9397109150886536, 0.9283406734466553, 0.9170956611633301, 0.9059805870056152, 0.8950002193450928, 0.8841596245765686, 0.873464047908783, 0.8629188537597656, 0.8525295257568359, 0.8423020243644714, 0.8322421312332153, 0.822356104850769, 0.812650203704834, 0.803131103515625, 0.7938053607940674, 0.7846799492835999, 0.7757619619369507, 0.7670586109161377, 0.7585772275924683, 0.7503254413604736, 0.7423108220100403, 0.7345411777496338, 0.7270243763923645, 0.7197682857513428, 0.7127808928489685, 0.7060702443122864, 0.699644148349762, 0.6935106515884399, 0.6876775622367859, 0.682152509689331, 0.6769431233406067, 0.6720566749572754, 0.6675003170967102, 0.6632807850837708, 0.6594046354293823, 0.6558778882026672, 0.6527062058448792, 0.6498948335647583, 0.6474484205245972, 0.64537113904953, 0.6436665654182434, 0.6423376202583313, 0.6413867473602295, 0.6408154964447021, 0.65625, 0.6564359664916992, 0.6569936275482178, 0.6579219698905945, 0.6592194437980652, 0.6608839631080627, 0.6629126071929932, 0.6653021574020386, 0.6680486798286438, 0.671147882938385, 0.6745947599411011, 0.6783841848373413, 0.6825103163719177, 0.686967134475708, 0.6917482614517212, 0.6968469619750977, 0.7022563815116882, 0.7079694271087646, 0.7139787077903748, 0.7202768921852112, 0.7268564701080322, 0.7337098121643066, 0.740829348564148, 0.7482075095176697, 0.7558366656303406, 0.7637093663215637, 0.7718180418014526, 0.7801554799079895, 0.7887143492698669, 0.7974874973297119, 0.8064680099487305, 0.8156489729881287, 0.8250236511230469, 0.8345856666564941, 0.8443285226821899, 0.8542460799217224, 0.8643323183059692, 0.8745813965797424, 0.8849876523017883, 0.8955456018447876, 0.90625, 0.9170956611633301, 0.9280776381492615, 0.9391911625862122, 0.9504316449165344, 0.9617946147918701, 0.9732757210731506, 0.9848709106445312, 0.996576189994812, 1.0083876848220825, 1.0203016996383667, 1.0323147773742676, 1.0444234609603882, 1.056624412536621, 1.0689144134521484, 1.081290602684021, 1.09375, 1.1062897443771362, 1.11890709400177, 1.1315995454788208, 1.144364595413208, 1.157199740409851, 1.170102834701538, 1.183071494102478, 1.1961036920547485, 1.2091972827911377, 1.2223504781723022, 1.2355611324310303, 1.248827576637268, 1.2621480226516724, 1.2755206823349, 1.288944125175476, 1.3024166822433472, 1.3159366846084595, 1.3295029401779175, 1.343113899230957, 1.3567683696746826, 1.37046480178833, 1.3842021226882935, 1.3979791402816772, 1.411794662475586, 1.425647497177124, 1.4395365715026855, 1.453460931777954, 1.4674196243286133, 1.4814114570617676, 1.4954357147216797, 1.5094914436340332, 1.5235776901245117, 1.537693738937378, 1.5518386363983154, 1.566011667251587, 1.580212116241455, 1.594439148902893, 1.6086921691894531, 1.622970461845398, 1.6372733116149902, 1.6516002416610718, 1.6659504175186157, 1.6803232431411743, 1.694718360900879, 1.7091350555419922, 1.7235727310180664, 1.738031029701233, 1.752509355545044, 1.7670072317123413, 1.7815240621566772, 1.7960596084594727, 1.8106132745742798, 1.8251845836639404, 1.8397732973098755, 1.8543788194656372, 1.869000792503357, 1.8836389780044556, 1.8982927799224854, 1.9129620790481567, 1.927646279335022, 1.9423452615737915, 1.9570585489273071, 1.9717859029769897, 1.9865268468856812, 2.001281261444092, 2.0160489082336426, 2.0308291912078857, 2.0456223487854004, 2.06042742729187, 2.075244665145874, 2.090073823928833, 2.1049141883850098, 2.090073823928833, 2.075244665145874, 2.06042742729187, 2.0456223487854004, 2.0308291912078857, 2.0160489082336426, 2.001281261444092, 1.9865268468856812, 1.9717859029769897, 1.9570585489273071, 1.9423452615737915, 1.927646279335022, 1.9129620790481567, 1.8982927799224854, 1.8836389780044556, 1.869000792503357, 1.8543788194656372, 1.8397732973098755, 1.8251845836639404, 1.8106132745742798, 1.7960596084594727, 1.7815240621566772, 1.7670072317123413, 1.752509355545044, 1.738031029701233, 1.7235727310180664, 1.7091350555419922, 1.694718360900879, 1.6803232431411743, 1.6659504175186157, 1.6516002416610718, 1.6372733116149902, 1.622970461845398, 1.6086921691894531, 1.594439148902893, 1.580212116241455, 1.566011667251587, 1.5518386363983154, 1.537693738937378, 1.5235776901245117, 1.5094914436340332, 1.4954357147216797, 1.4814114570617676, 1.4674196243286133, 1.453460931777954, 1.4395365715026855, 1.425647497177124, 1.411794662475586, 1.3979791402816772, 1.3842021226882935, 1.37046480178833, 1.3567683696746826, 1.343113899230957, 1.3295029401779175, 1.3159366846084595, 1.3024166822433472, 1.288944125175476, 1.2755206823349, 1.2621480226516724, 1.248827576637268, 1.2355611324310303, 1.2223504781723022, 1.2091972827911377, 1.1961036920547485, 1.183071494102478, 1.170102834701538, 1.157199740409851, 1.144364595413208, 1.1315995454788208, 1.11890709400177, 1.1062897443771362, 1.09375, 1.081290602684021, 1.0689144134521484, 1.056624412536621, 1.0444234609603882, 1.0323147773742676, 1.0203016996383667, 1.0083876848220825, 0.996576189994812, 0.9848709106445312, 0.9732757210731506, 0.9617946147918701, 0.9504316449165344, 0.9391911625862122, 0.9280776381492615, 0.9170956611633301, 0.90625, 0.8955456018447876, 0.8849876523017883, 0.8745813965797424, 0.8643323183059692, 0.8542460799217224, 0.8443285226821899, 0.8345856666564941, 0.8250236511230469, 0.8156489729881287, 0.8064680099487305, 0.7974874973297119, 0.7887143492698669, 0.7801554799079895, 0.7718180418014526, 0.7637093663215637, 0.7558366656303406, 0.7482075095176697, 0.740829348564148, 0.7337098121643066, 0.7268564701080322, 0.7202768921852112, 0.7139787077903748, 0.7079694271087646, 0.7022563815116882, 0.6968469619750977, 0.6917482614517212, 0.686967134475708, 0.6825103163719177, 0.6783841848373413, 0.6745947599411011, 0.671147882938385, 0.6680486798286438, 0.6653021574020386, 0.6629126071929932, 0.6608839631080627, 0.6592194437980652, 0.6579219698905945, 0.6569936275482178, 0.6564359664916992, 0.671875, 0.6720566749572754, 0.6726013422012329, 0.6735081672668457, 0.6747757196426392, 0.6764019131660461, 0.6783841848373413, 0.6807193756103516, 0.6834039688110352, 0.6864338517189026, 0.6898043751716614, 0.6935106515884399, 0.6975473165512085, 0.7019086480140686, 0.7065886855125427, 0.7115811109542847, 0.7168793678283691, 0.7224767804145813, 0.7283663749694824, 0.7345411777496338, 0.7409940958023071, 0.7477178573608398, 0.7547053098678589, 0.7619490623474121, 0.7694420218467712, 0.7771768569946289, 0.7851465344429016, 0.7933439016342163, 0.8017619848251343, 0.8103939294815063, 0.8192329406738281, 0.8282724022865295, 0.8375058174133301, 0.8469268679618835, 0.8565293550491333, 0.866307258605957, 0.876254677772522, 0.8863658905029297, 0.8966354131698608, 0.9070578217506409, 0.9176279306411743, 0.9283406734466553, 0.9391911625862122, 0.9501747488975525, 0.9612867832183838, 0.9725229144096375, 0.9838788509368896, 0.9953505396842957, 1.0069339275360107, 1.0186253786087036, 1.0304210186004639, 1.042317509651184, 1.0543112754821777, 1.066399097442627, 1.0785777568817139, 1.0908443927764893, 1.1031957864761353, 1.1156294345855713, 1.1281423568725586, 1.1407320499420166, 1.1533960103988647, 1.1661317348480225, 1.1789370775222778, 1.1918096542358398, 1.2047473192214966, 1.2177479267120361, 1.2308096885681152, 1.2439305782318115, 1.2571086883544922, 1.270342230796814, 1.2836296558380127, 1.2969691753387451, 1.3103591203689575, 1.3237980604171753, 1.3372845649719238, 1.3508172035217285, 1.3643944263458252, 1.378015160560608, 1.391677975654602, 1.405381679534912, 1.4191250801086426, 1.4329071044921875, 1.4467265605926514, 1.4605823755264282, 1.4744735956192017, 1.4883991479873657, 1.5023581981658936, 1.5163496732711792, 1.5303728580474854, 1.544426679611206, 1.5585105419158936, 1.5726234912872314, 1.5867646932601929, 1.60093355178833, 1.6151292324066162, 1.6293511390686035, 1.6435984373092651, 1.6578706502914429, 1.6721670627593994, 1.6864869594573975, 1.7008298635482788, 1.7151951789855957, 1.7295823097229004, 1.7439907789230347, 1.7584199905395508, 1.77286958694458, 1.7873388528823853, 1.8018274307250977, 1.816334843635559, 1.8308606147766113, 1.8454045057296753, 1.8599658012390137, 1.8745442628860474, 1.8891394138336182, 1.9037508964538574, 1.918378472328186, 1.9330215454101562, 1.947679877281189, 1.962353229522705, 1.9770411252975464, 1.9917432069778442, 2.0064592361450195, 2.021188974380493, 2.0359320640563965, 2.0506882667541504, 2.0654571056365967, 2.0802385807037354, 2.095032215118408, 2.1098380088806152, 2.095032215118408, 2.0802385807037354, 2.0654571056365967, 2.0506882667541504, 2.0359320640563965, 2.021188974380493, 2.0064592361450195, 1.9917432069778442, 1.9770411252975464, 1.962353229522705, 1.947679877281189, 1.9330215454101562, 1.918378472328186, 1.9037508964538574, 1.8891394138336182, 1.8745442628860474, 1.8599658012390137, 1.8454045057296753, 1.8308606147766113, 1.816334843635559, 1.8018274307250977, 1.7873388528823853, 1.77286958694458, 1.7584199905395508, 1.7439907789230347, 1.7295823097229004, 1.7151951789855957, 1.7008298635482788, 1.6864869594573975, 1.6721670627593994, 1.6578706502914429, 1.6435984373092651, 1.6293511390686035, 1.6151292324066162, 1.60093355178833, 1.5867646932601929, 1.5726234912872314, 1.5585105419158936, 1.544426679611206, 1.5303728580474854, 1.5163496732711792, 1.5023581981658936, 1.4883991479873657, 1.4744735956192017, 1.4605823755264282, 1.4467265605926514, 1.4329071044921875, 1.4191250801086426, 1.405381679534912, 1.391677975654602, 1.378015160560608, 1.3643944263458252, 1.3508172035217285, 1.3372845649719238, 1.3237980604171753, 1.3103591203689575, 1.2969691753387451, 1.2836296558380127, 1.270342230796814, 1.2571086883544922, 1.2439305782318115, 1.2308096885681152, 1.2177479267120361, 1.2047473192214966, 1.1918096542358398, 1.1789370775222778, 1.1661317348480225, 1.1533960103988647, 1.1407320499420166, 1.1281423568725586, 1.1156294345855713, 1.1031957864761353, 1.0908443927764893, 1.0785777568817139, 1.066399097442627, 1.0543112754821777, 1.042317509651184, 1.0304210186004639, 1.0186253786087036, 1.0069339275360107, 0.9953505396842957, 0.9838788509368896, 0.9725229144096375, 0.9612867832183838, 0.9501747488975525, 0.9391911625862122, 0.9283406734466553, 0.9176279306411743, 0.9070578217506409, 0.8966354131698608, 0.8863658905029297, 0.876254677772522, 0.866307258605957, 0.8565293550491333, 0.8469268679618835, 0.8375058174133301, 0.8282724022865295, 0.8192329406738281, 0.8103939294815063, 0.8017619848251343, 0.7933439016342163, 0.7851465344429016, 0.7771768569946289, 0.7694420218467712, 0.7619490623474121, 0.7547053098678589, 0.7477178573608398, 0.7409940958023071, 0.7345411777496338, 0.7283663749694824, 0.7224767804145813, 0.7168793678283691, 0.7115811109542847, 0.7065886855125427, 0.7019086480140686, 0.6975473165512085, 0.6935106515884399, 0.6898043751716614, 0.6864338517189026, 0.6834039688110352, 0.6807193756103516, 0.6783841848373413, 0.6764019131660461, 0.6747757196426392, 0.6735081672668457, 0.6726013422012329, 0.6720566749572754, 0.6875, 0.6876775622367859, 0.6882098317146301, 0.6890961527824402, 0.6903350353240967, 0.6919246912002563, 0.6938626170158386, 0.6961458921432495, 0.6987712383270264, 0.701734721660614, 0.7050321102142334, 0.708658754825592, 0.7126096487045288, 0.7168793678283691, 0.7214622497558594, 0.7263524532318115, 0.7315437197685242, 0.7370297908782959, 0.7428039908409119, 0.7488598227500916, 0.755190372467041, 0.7617888450622559, 0.7686483860015869, 0.7757619619369507, 0.7831227779388428, 0.7907238006591797, 0.7985582947731018, 0.8066193461418152, 0.814900279045105, 0.8233945369720459, 0.8320954442024231, 0.8409966826438904, 0.8500919342041016, 0.859375, 0.8688399195671082, 0.8784807920455933, 0.8882918953895569, 0.8982676267623901, 0.9084026217460632, 0.9186915159225464, 0.9291293025016785, 0.9397109150886536, 0.9504316449165344, 0.9612867832183838, 0.9722718000411987, 0.9833824634552002, 0.9946144223213196, 1.005963683128357, 1.0174262523651123, 1.0289984941482544, 1.0406765937805176, 1.0524570941925049, 1.0643366575241089, 1.0763118267059326, 1.0883796215057373, 1.1005369424819946, 1.1127808094024658, 1.1251084804534912, 1.1375172138214111, 1.150004267692566, 1.1625672578811646, 1.175203561782837, 1.1879111528396606, 1.2006874084472656, 1.2135305404663086, 1.226438045501709, 1.239408254623413, 1.252439022064209, 1.2655285596847534, 1.2786749601364136, 1.2918766736984253, 1.3051317930221558, 1.3184388875961304, 1.331796407699585, 1.3452026844024658, 1.358656406402588, 1.3721561431884766, 1.3857005834579468, 1.399288296699524, 1.412918210029602, 1.426589012145996, 1.4402996301651, 1.454048752784729, 1.467835545539856, 1.481658697128296, 1.495517373085022, 1.5094106197357178, 1.5233373641967773, 1.5372967720031738, 1.5512878894805908, 1.565310001373291, 1.579362154006958, 1.5934436321258545, 1.6075536012649536, 1.621691346168518, 1.6358561515808105, 1.6500473022460938, 1.66426420211792, 1.6785061359405518, 1.692772388458252, 1.7070624828338623, 1.721375823020935, 1.7357118129730225, 1.7500697374343872, 1.7644492387771606, 1.7788498401641846, 1.7932708263397217, 1.8077118396759033, 1.8221725225448608, 1.836652159690857, 1.851150393486023, 1.8656668663024902, 1.8802011013031006, 1.8947527408599854, 1.9093213081359863, 1.9239064455032349, 1.9385077953338623, 1.953125, 1.9677577018737793, 1.9824055433273315, 1.997068166732788, 2.0117452144622803, 2.0264365673065186, 2.0411417484283447, 2.0558605194091797, 2.0705926418304443, 2.0853376388549805, 2.100095272064209, 2.11486554145813, 2.100095272064209, 2.0853376388549805, 2.0705926418304443, 2.0558605194091797, 2.0411417484283447, 2.0264365673065186, 2.0117452144622803, 1.997068166732788, 1.9824055433273315, 1.9677577018737793, 1.953125, 1.9385077953338623, 1.9239064455032349, 1.9093213081359863, 1.8947527408599854, 1.8802011013031006, 1.8656668663024902, 1.851150393486023, 1.836652159690857, 1.8221725225448608, 1.8077118396759033, 1.7932708263397217, 1.7788498401641846, 1.7644492387771606, 1.7500697374343872, 1.7357118129730225, 1.721375823020935, 1.7070624828338623, 1.692772388458252, 1.6785061359405518, 1.66426420211792, 1.6500473022460938, 1.6358561515808105, 1.621691346168518, 1.6075536012649536, 1.5934436321258545, 1.579362154006958, 1.565310001373291, 1.5512878894805908, 1.5372967720031738, 1.5233373641967773, 1.5094106197357178, 1.495517373085022, 1.481658697128296, 1.467835545539856, 1.454048752784729, 1.4402996301651, 1.426589012145996, 1.412918210029602, 1.399288296699524, 1.3857005834579468, 1.3721561431884766, 1.358656406402588, 1.3452026844024658, 1.331796407699585, 1.3184388875961304, 1.3051317930221558, 1.2918766736984253, 1.2786749601364136, 1.2655285596847534, 1.252439022064209, 1.239408254623413, 1.226438045501709, 1.2135305404663086, 1.2006874084472656, 1.1879111528396606, 1.175203561782837, 1.1625672578811646, 1.150004267692566, 1.1375172138214111, 1.1251084804534912, 1.1127808094024658, 1.1005369424819946, 1.0883796215057373, 1.0763118267059326, 1.0643366575241089, 1.0524570941925049, 1.0406765937805176, 1.0289984941482544, 1.0174262523651123, 1.005963683128357, 0.9946144223213196, 0.9833824634552002, 0.9722718000411987, 0.9612867832183838, 0.9504316449165344, 0.9397109150886536, 0.9291293025016785, 0.9186915159225464, 0.9084026217460632, 0.8982676267623901, 0.8882918953895569, 0.8784807920455933, 0.8688399195671082, 0.859375, 0.8500919342041016, 0.8409966826438904, 0.8320954442024231, 0.8233945369720459, 0.814900279045105, 0.8066193461418152, 0.7985582947731018, 0.7907238006591797, 0.7831227779388428, 0.7757619619369507, 0.7686483860015869, 0.7617888450622559, 0.755190372467041, 0.7488598227500916, 0.7428039908409119, 0.7370297908782959, 0.7315437197685242, 0.7263524532318115, 0.7214622497558594, 0.7168793678283691, 0.7126096487045288, 0.708658754825592, 0.7050321102142334, 0.701734721660614, 0.6987712383270264, 0.6961458921432495, 0.6938626170158386, 0.6919246912002563, 0.6903350353240967, 0.6890961527824402, 0.6882098317146301, 0.6876775622367859, 0.703125, 0.7032985687255859, 0.7038190960884094, 0.7046857476234436, 0.705897331237793, 0.7074519395828247, 0.7093474864959717, 0.7115811109542847, 0.7141496539115906, 0.7170495986938477, 0.7202768921852112, 0.7238271832466125, 0.7276957035064697, 0.7318773865699768, 0.7363669872283936, 0.7411588430404663, 0.7462471127510071, 0.7516258358955383, 0.7572888135910034, 0.7632296681404114, 0.7694420218467712, 0.7759193181991577, 0.7826550006866455, 0.7896423935890198, 0.796875, 0.8043460845947266, 0.812049150466919, 0.8199775815010071, 0.828125, 0.8364849090576172, 0.845051109790802, 0.8538172841072083, 0.8627773523330688, 0.871925413608551, 0.881255567073822, 0.8907620310783386, 0.9004393219947815, 0.9102819561958313, 0.920284628868103, 0.9304421544075012, 0.9407495856285095, 0.9512019753456116, 0.9617946147918701, 0.9725229144096375, 0.9833824634552002, 0.9943689107894897, 1.0054781436920166, 1.016706109046936, 1.0280489921569824, 1.0395029783248901, 1.051064372062683, 1.0627297163009644, 1.0744956731796265, 1.086358904838562, 1.0983163118362427, 1.1103649139404297, 1.1225016117095947, 1.1347235441207886, 1.1470282077789307, 1.1594128608703613, 1.171875, 1.1844121217727661, 1.1970218420028687, 1.2097020149230957, 1.2224502563476562, 1.2352646589279175, 1.248143196105957, 1.261083722114563, 1.2740843296051025, 1.2871434688568115, 1.3002591133117676, 1.3134297132492065, 1.3266535997390747, 1.3399291038513184, 1.3532549142837524, 1.3666293621063232, 1.3800511360168457, 1.3935188055038452, 1.4070310592651367, 1.4205865859985352, 1.4341843128204346, 1.4478230476379395, 1.4615013599395752, 1.475218415260315, 1.4889731407165527, 1.502764344215393, 1.516591191291809, 1.5304526090621948, 1.5443476438522339, 1.558275580406189, 1.572235345840454, 1.5862261056900024, 1.6002471446990967, 1.6142977476119995, 1.628376841545105, 1.6424840688705444, 1.6566184759140015, 1.6707794666290283, 1.6849663257598877, 1.6991783380508423, 1.7134150266647339, 1.7276756763458252, 1.741959810256958, 1.756266713142395, 1.770595908164978, 1.7849467992782593, 1.7993190288543701, 1.8137118816375732, 1.828125, 1.8425579071044922, 1.857010006904602, 1.8714810609817505, 1.8859704732894897, 1.9004778861999512, 1.9150029420852661, 1.9295451641082764, 1.9441041946411133, 1.9586795568466187, 1.973271131515503, 1.9878783226013184, 2.0025007724761963, 2.0171384811401367, 2.0317907333374023, 2.046457529067993, 2.061138391494751, 2.0758328437805176, 2.090540885925293, 2.105262279510498, 2.1199963092803955, 2.105262279510498, 2.090540885925293, 2.0758328437805176, 2.061138391494751, 2.046457529067993, 2.0317907333374023, 2.0171384811401367, 2.0025007724761963, 1.9878783226013184, 1.973271131515503, 1.9586795568466187, 1.9441041946411133, 1.9295451641082764, 1.9150029420852661, 1.9004778861999512, 1.8859704732894897, 1.8714810609817505, 1.857010006904602, 1.8425579071044922, 1.828125, 1.8137118816375732, 1.7993190288543701, 1.7849467992782593, 1.770595908164978, 1.756266713142395, 1.741959810256958, 1.7276756763458252, 1.7134150266647339, 1.6991783380508423, 1.6849663257598877, 1.6707794666290283, 1.6566184759140015, 1.6424840688705444, 1.628376841545105, 1.6142977476119995, 1.6002471446990967, 1.5862261056900024, 1.572235345840454, 1.558275580406189, 1.5443476438522339, 1.5304526090621948, 1.516591191291809, 1.502764344215393, 1.4889731407165527, 1.475218415260315, 1.4615013599395752, 1.4478230476379395, 1.4341843128204346, 1.4205865859985352, 1.4070310592651367, 1.3935188055038452, 1.3800511360168457, 1.3666293621063232, 1.3532549142837524, 1.3399291038513184, 1.3266535997390747, 1.3134297132492065, 1.3002591133117676, 1.2871434688568115, 1.2740843296051025, 1.261083722114563, 1.248143196105957, 1.2352646589279175, 1.2224502563476562, 1.2097020149230957, 1.1970218420028687, 1.1844121217727661, 1.171875, 1.1594128608703613, 1.1470282077789307, 1.1347235441207886, 1.1225016117095947, 1.1103649139404297, 1.0983163118362427, 1.086358904838562, 1.0744956731796265, 1.0627297163009644, 1.051064372062683, 1.0395029783248901, 1.0280489921569824, 1.016706109046936, 1.0054781436920166, 0.9943689107894897, 0.9833824634552002, 0.9725229144096375, 0.9617946147918701, 0.9512019753456116, 0.9407495856285095, 0.9304421544075012, 0.920284628868103, 0.9102819561958313, 0.9004393219947815, 0.8907620310783386, 0.881255567073822, 0.871925413608551, 0.8627773523330688, 0.8538172841072083, 0.845051109790802, 0.8364849090576172, 0.828125, 0.8199775815010071, 0.812049150466919, 0.8043460845947266, 0.796875, 0.7896423935890198, 0.7826550006866455, 0.7759193181991577, 0.7694420218467712, 0.7632296681404114, 0.7572888135910034, 0.7516258358955383, 0.7462471127510071, 0.7411588430404663, 0.7363669872283936, 0.7318773865699768, 0.7276957035064697, 0.7238271832466125, 0.7202768921852112, 0.7170495986938477, 0.7141496539115906, 0.7115811109542847, 0.7093474864959717, 0.7074519395828247, 0.705897331237793, 0.7046857476234436, 0.7038190960884094, 0.7032985687255859, 0.71875, 0.7189198136329651, 0.7194290161132812, 0.7202768921852112, 0.7214622497558594, 0.7229834794998169, 0.7248383164405823, 0.7270243763923645, 0.72953861951828, 0.7323775887489319, 0.7355376482009888, 0.7390146255493164, 0.7428039908409119, 0.7469011545181274, 0.7513009309768677, 0.7559981346130371, 0.7609872221946716, 0.7662624716758728, 0.7718180418014526, 0.7776479721069336, 0.7837460041046143, 0.7901060581207275, 0.7967218160629272, 0.8035869002342224, 0.8106951117515564, 0.8180400133132935, 0.8256152868270874, 0.8334147334098816, 0.8414319753646851, 0.8496609926223755, 0.858095645904541, 0.8667299151420593, 0.8755578398704529, 0.884573757648468, 0.8937718272209167, 0.9031466245651245, 0.9126926064491272, 0.9224045276641846, 0.9322771430015564, 0.9423053860664368, 0.9524844288825989, 0.9628093838691711, 0.9732757210731506, 0.9838788509368896, 0.9946144223213196, 1.0054781436920166, 1.0164660215377808, 1.0275739431381226, 1.0387980937957764, 1.0501348972320557, 1.0615805387496948, 1.0731315612792969, 1.0847846269607544, 1.096536636352539, 1.1083842515945435, 1.1203244924545288, 1.1323543787002563, 1.144471287727356, 1.1566722393035889, 1.1689547300338745, 1.1813161373138428, 1.1937540769577026, 1.206266164779663, 1.2188501358032227, 1.2315037250518799, 1.2442249059677124, 1.2570115327835083, 1.2698616981506348, 1.282773494720459, 1.2957450151443481, 1.308774471282959, 1.3218601942062378, 1.3350006341934204, 1.3481940031051636, 1.3614387512207031, 1.3747336864471436, 1.3880770206451416, 1.4014675617218018, 1.4149038791656494, 1.428384780883789, 1.4419089555740356, 1.4554752111434937, 1.4690823554992676, 1.4827293157577515, 1.4964150190353394, 1.5101382732391357, 1.5238981246948242, 1.537693738937378, 1.5515239238739014, 1.5653879642486572, 1.5792847871780396, 1.5932137966156006, 1.6071738004684448, 1.621164321899414, 1.635184407234192, 1.649233341217041, 1.6633104085922241, 1.677414894104004, 1.691546082496643, 1.7057033777236938, 1.7198859453201294, 1.734093427658081, 1.7483251094818115, 1.762580394744873, 1.7768585681915283, 1.7911593914031982, 1.8054821491241455, 1.8198262453079224, 1.8341913223266602, 1.8485767841339111, 1.8629822731018066, 1.8774073123931885, 1.8918513059616089, 1.9063140153884888, 1.92079496383667, 1.9352935552597046, 1.9498096704483032, 1.9643428325653076, 1.9788925647735596, 1.9934585094451904, 2.008040428161621, 2.0226380825042725, 2.0372507572174072, 2.0518784523010254, 2.0665206909179688, 2.081177234649658, 2.0958478450775146, 2.11053204536438, 2.125229835510254, 2.11053204536438, 2.0958478450775146, 2.081177234649658, 2.0665206909179688, 2.0518784523010254, 2.0372507572174072, 2.0226380825042725, 2.008040428161621, 1.9934585094451904, 1.9788925647735596, 1.9643428325653076, 1.9498096704483032, 1.9352935552597046, 1.92079496383667, 1.9063140153884888, 1.8918513059616089, 1.8774073123931885, 1.8629822731018066, 1.8485767841339111, 1.8341913223266602, 1.8198262453079224, 1.8054821491241455, 1.7911593914031982, 1.7768585681915283, 1.762580394744873, 1.7483251094818115, 1.734093427658081, 1.7198859453201294, 1.7057033777236938, 1.691546082496643, 1.677414894104004, 1.6633104085922241, 1.649233341217041, 1.635184407234192, 1.621164321899414, 1.6071738004684448, 1.5932137966156006, 1.5792847871780396, 1.5653879642486572, 1.5515239238739014, 1.537693738937378, 1.5238981246948242, 1.5101382732391357, 1.4964150190353394, 1.4827293157577515, 1.4690823554992676, 1.4554752111434937, 1.4419089555740356, 1.428384780883789, 1.4149038791656494, 1.4014675617218018, 1.3880770206451416, 1.3747336864471436, 1.3614387512207031, 1.3481940031051636, 1.3350006341934204, 1.3218601942062378, 1.308774471282959, 1.2957450151443481, 1.282773494720459, 1.2698616981506348, 1.2570115327835083, 1.2442249059677124, 1.2315037250518799, 1.2188501358032227, 1.206266164779663, 1.1937540769577026, 1.1813161373138428, 1.1689547300338745, 1.1566722393035889, 1.144471287727356, 1.1323543787002563, 1.1203244924545288, 1.1083842515945435, 1.096536636352539, 1.0847846269607544, 1.0731315612792969, 1.0615805387496948, 1.0501348972320557, 1.0387980937957764, 1.0275739431381226, 1.0164660215377808, 1.0054781436920166, 0.9946144223213196, 0.9838788509368896, 0.9732757210731506, 0.9628093838691711, 0.9524844288825989, 0.9423053860664368, 0.9322771430015564, 0.9224045276641846, 0.9126926064491272, 0.9031466245651245, 0.8937718272209167, 0.884573757648468, 0.8755578398704529, 0.8667299151420593, 0.858095645904541, 0.8496609926223755, 0.8414319753646851, 0.8334147334098816, 0.8256152868270874, 0.8180400133132935, 0.8106951117515564, 0.8035869002342224, 0.7967218160629272, 0.7901060581207275, 0.7837460041046143, 0.7776479721069336, 0.7718180418014526, 0.7662624716758728, 0.7609872221946716, 0.7559981346130371, 0.7513009309768677, 0.7469011545181274, 0.7428039908409119, 0.7390146255493164, 0.7355376482009888, 0.7323775887489319, 0.72953861951828, 0.7270243763923645, 0.7248383164405823, 0.7229834794998169, 0.7214622497558594, 0.7202768921852112, 0.7194290161132812, 0.7189198136329651, 0.734375, 0.7345411777496338, 0.7350395917892456, 0.7358694672584534, 0.7370297908782959, 0.7385188937187195, 0.7403348684310913, 0.7424752712249756, 0.7449373602867126, 0.7477178573608398, 0.750813364982605, 0.7542198896408081, 0.7579333186149597, 0.7619490623474121, 0.7662624716758728, 0.7708685398101807, 0.7757619619369507, 0.7809374332427979, 0.7863893508911133, 0.7921119928359985, 0.7980995774269104, 0.8043460845947266, 0.810845673084259, 0.817592203617096, 0.824579656124115, 0.8318019509315491, 0.8392530679702759, 0.8469268679618835, 0.8548174500465393, 0.8629188537597656, 0.871225118637085, 0.8797305226325989, 0.8884292840957642, 0.8973158597946167, 0.9063847064971924, 0.9156303405761719, 0.9250475168228149, 0.9346310496330261, 0.9443758130073547, 0.954276978969574, 0.9643296599388123, 0.9745291471481323, 0.9848709106445312, 0.9953505396842957, 1.005963683128357, 1.016706109046936, 1.0275739431381226, 1.0385631322860718, 1.0496697425842285, 1.0608903169631958, 1.0722211599349976, 1.0836588144302368, 1.0951999425888062, 1.1068413257598877, 1.1185797452926636, 1.1304123401641846, 1.1423360109329224, 1.1543481349945068, 1.1664457321166992, 1.1786264181137085, 1.190887451171875, 1.2032264471054077, 1.2156410217285156, 1.2281290292739868, 1.2406879663467407, 1.2533159255981445, 1.2660107612609863, 1.2787704467773438, 1.2915931940078735, 1.3044769763946533, 1.3174201250076294, 1.3304208517074585, 1.343477487564087, 1.356588363647461, 1.369752049446106, 1.3829669952392578, 1.3962316513061523, 1.4095447063446045, 1.4229048490524292, 1.4363106489181519, 1.449760913848877, 1.4632543325424194, 1.4767898321151733, 1.4903662204742432, 1.5039823055267334, 1.5176372528076172, 1.5313297510147095, 1.5450589656829834, 1.558823823928833, 1.5726234912872314, 1.5864570140838623, 1.6003234386444092, 1.6142220497131348, 1.6281520128250122, 1.642112374305725, 1.6561025381088257, 1.6701217889785767, 1.6841691732406616, 1.6982440948486328, 1.712346076965332, 1.7264741659164429, 1.7406277656555176, 1.754806399345398, 1.7690094709396362, 1.7832362651824951, 1.7974863052368164, 1.8117589950561523, 1.8260538578033447, 1.8403702974319458, 1.854707956314087, 1.8690661191940308, 1.8834445476531982, 1.8978426456451416, 1.9122599363327026, 1.9266961812973022, 1.9411507844924927, 1.9556233882904053, 1.9701136350631714, 1.9846210479736328, 1.999145269393921, 2.013686180114746, 2.028243064880371, 2.042815685272217, 2.057403802871704, 2.072006940841675, 2.086625099182129, 2.101257562637329, 2.1159043312072754, 2.1305649280548096, 2.1159043312072754, 2.101257562637329, 2.086625099182129, 2.072006940841675, 2.057403802871704, 2.042815685272217, 2.028243064880371, 2.013686180114746, 1.999145269393921, 1.9846210479736328, 1.9701136350631714, 1.9556233882904053, 1.9411507844924927, 1.9266961812973022, 1.9122599363327026, 1.8978426456451416, 1.8834445476531982, 1.8690661191940308, 1.854707956314087, 1.8403702974319458, 1.8260538578033447, 1.8117589950561523, 1.7974863052368164, 1.7832362651824951, 1.7690094709396362, 1.754806399345398, 1.7406277656555176, 1.7264741659164429, 1.712346076965332, 1.6982440948486328, 1.6841691732406616, 1.6701217889785767, 1.6561025381088257, 1.642112374305725, 1.6281520128250122, 1.6142220497131348, 1.6003234386444092, 1.5864570140838623, 1.5726234912872314, 1.558823823928833, 1.5450589656829834, 1.5313297510147095, 1.5176372528076172, 1.5039823055267334, 1.4903662204742432, 1.4767898321151733, 1.4632543325424194, 1.449760913848877, 1.4363106489181519, 1.4229048490524292, 1.4095447063446045, 1.3962316513061523, 1.3829669952392578, 1.369752049446106, 1.356588363647461, 1.343477487564087, 1.3304208517074585, 1.3174201250076294, 1.3044769763946533, 1.2915931940078735, 1.2787704467773438, 1.2660107612609863, 1.2533159255981445, 1.2406879663467407, 1.2281290292739868, 1.2156410217285156, 1.2032264471054077, 1.190887451171875, 1.1786264181137085, 1.1664457321166992, 1.1543481349945068, 1.1423360109329224, 1.1304123401641846, 1.1185797452926636, 1.1068413257598877, 1.0951999425888062, 1.0836588144302368, 1.0722211599349976, 1.0608903169631958, 1.0496697425842285, 1.0385631322860718, 1.0275739431381226, 1.016706109046936, 1.005963683128357, 0.9953505396842957, 0.9848709106445312, 0.9745291471481323, 0.9643296599388123, 0.954276978969574, 0.9443758130073547, 0.9346310496330261, 0.9250475168228149, 0.9156303405761719, 0.9063847064971924, 0.8973158597946167, 0.8884292840957642, 0.8797305226325989, 0.871225118637085, 0.8629188537597656, 0.8548174500465393, 0.8469268679618835, 0.8392530679702759, 0.8318019509315491, 0.824579656124115, 0.817592203617096, 0.810845673084259, 0.8043460845947266, 0.7980995774269104, 0.7921119928359985, 0.7863893508911133, 0.7809374332427979, 0.7757619619369507, 0.7708685398101807, 0.7662624716758728, 0.7619490623474121, 0.7579333186149597, 0.7542198896408081, 0.750813364982605, 0.7477178573608398, 0.7449373602867126, 0.7424752712249756, 0.7403348684310913, 0.7385188937187195, 0.7370297908782959, 0.7358694672584534, 0.7350395917892456, 0.7345411777496338, 0.75, 0.7501627206802368, 0.7506507635116577, 0.7514634132385254, 0.7525996565818787, 0.7540580034255981, 0.7558366656303406, 0.7579333186149597, 0.7603453397750854, 0.7630696892738342, 0.7661031484603882, 0.7694420218467712, 0.7730823159217834, 0.7770197987556458, 0.78125, 0.7857682108879089, 0.7905694246292114, 0.7956485748291016, 0.8010003566741943, 0.8066193461418152, 0.8125, 0.8186366558074951, 0.8250236511230469, 0.8316552042961121, 0.8385254740715027, 0.8456286787986755, 0.8529589772224426, 0.8605105876922607, 0.8682777285575867, 0.876254677772522, 0.8844357132911682, 0.8928152918815613, 0.9013878107070923, 0.9101478457450867, 0.9190900921821594, 0.9282091856002808, 0.9375, 0.946957528591156, 0.9565767645835876, 0.9663528800010681, 0.9762812256813049, 0.9863571524620056, 0.996576189994812, 1.0069339275360107, 1.0174262523651123, 1.0280489921569824, 1.0387980937957764, 1.0496697425842285, 1.0606601238250732, 1.071765661239624, 1.0829826593399048, 1.0943078994750977, 1.1057379245758057, 1.1172693967819214, 1.1288994550704956, 1.140625, 1.1524430513381958, 1.1643508672714233, 1.1763455867767334, 1.188424825668335, 1.2005858421325684, 1.212826132774353, 1.2251434326171875, 1.2375354766845703, 1.25, 1.2625348567962646, 1.2751379013061523, 1.2878071069717407, 1.300540804862976, 1.313336730003357, 1.3261934518814087, 1.339108943939209, 1.3520817756652832, 1.3651100397109985, 1.3781923055648804, 1.3913270235061646, 1.4045127630233765, 1.4177480936050415, 1.431031584739685, 1.4443620443344116, 1.457737922668457, 1.4711582660675049, 1.4846216440200806, 1.4981271028518677, 1.5116733312606812, 1.5252593755722046, 1.5388840436935425, 1.5525463819503784, 1.5662455558776855, 1.5799803733825684, 1.59375, 1.6075536012649536, 1.6213902235031128, 1.6352590322494507, 1.64915931224823, 1.6630902290344238, 1.6770509481430054, 1.6910408735275269, 1.7050590515136719, 1.7191051244735718, 1.7331780195236206, 1.7472774982452393, 1.7614026069641113, 1.7755528688430786, 1.7897276878356934, 1.8039263486862183, 1.8181484937667847, 1.8323935270309448, 1.846660852432251, 1.860949993133545, 1.875260353088379, 1.8895916938781738, 1.9039433002471924, 1.918314814567566, 1.9327057600021362, 1.9471157789230347, 1.961544394493103, 1.975991129875183, 1.9904557466506958, 2.0049376487731934, 2.019436836242676, 2.033952474594116, 2.0484845638275146, 2.063032627105713, 2.0775961875915527, 2.092175245285034, 2.106769323348999, 2.121377944946289, 2.136000871658325, 2.121377944946289, 2.106769323348999, 2.092175245285034, 2.0775961875915527, 2.063032627105713, 2.0484845638275146, 2.033952474594116, 2.019436836242676, 2.0049376487731934, 1.9904557466506958, 1.975991129875183, 1.961544394493103, 1.9471157789230347, 1.9327057600021362, 1.918314814567566, 1.9039433002471924, 1.8895916938781738, 1.875260353088379, 1.860949993133545, 1.846660852432251, 1.8323935270309448, 1.8181484937667847, 1.8039263486862183, 1.7897276878356934, 1.7755528688430786, 1.7614026069641113, 1.7472774982452393, 1.7331780195236206, 1.7191051244735718, 1.7050590515136719, 1.6910408735275269, 1.6770509481430054, 1.6630902290344238, 1.64915931224823, 1.6352590322494507, 1.6213902235031128, 1.6075536012649536, 1.59375, 1.5799803733825684, 1.5662455558776855, 1.5525463819503784, 1.5388840436935425, 1.5252593755722046, 1.5116733312606812, 1.4981271028518677, 1.4846216440200806, 1.4711582660675049, 1.457737922668457, 1.4443620443344116, 1.431031584739685, 1.4177480936050415, 1.4045127630233765, 1.3913270235061646, 1.3781923055648804, 1.3651100397109985, 1.3520817756652832, 1.339108943939209, 1.3261934518814087, 1.313336730003357, 1.300540804862976, 1.2878071069717407, 1.2751379013061523, 1.2625348567962646, 1.25, 1.2375354766845703, 1.2251434326171875, 1.212826132774353, 1.2005858421325684, 1.188424825668335, 1.1763455867767334, 1.1643508672714233, 1.1524430513381958, 1.140625, 1.1288994550704956, 1.1172693967819214, 1.1057379245758057, 1.0943078994750977, 1.0829826593399048, 1.071765661239624, 1.0606601238250732, 1.0496697425842285, 1.0387980937957764, 1.0280489921569824, 1.0174262523651123, 1.0069339275360107, 0.996576189994812, 0.9863571524620056, 0.9762812256813049, 0.9663528800010681, 0.9565767645835876, 0.946957528591156, 0.9375, 0.9282091856002808, 0.9190900921821594, 0.9101478457450867, 0.9013878107070923, 0.8928152918815613, 0.8844357132911682, 0.876254677772522, 0.8682777285575867, 0.8605105876922607, 0.8529589772224426, 0.8456286787986755, 0.8385254740715027, 0.8316552042961121, 0.8250236511230469, 0.8186366558074951, 0.8125, 0.8066193461418152, 0.8010003566741943, 0.7956485748291016, 0.7905694246292114, 0.7857682108879089, 0.78125, 0.7770197987556458, 0.7730823159217834, 0.7694420218467712, 0.7661031484603882, 0.7630696892738342, 0.7603453397750854, 0.7579333186149597, 0.7558366656303406, 0.7540580034255981, 0.7525996565818787, 0.7514634132385254, 0.7506507635116577, 0.7501627206802368, 0.765625, 0.7657844424247742, 0.7662624716758728, 0.7670586109161377, 0.7681717872619629, 0.7696006298065186, 0.771343469619751, 0.7733980417251587, 0.7757619619369507, 0.7784324288368225, 0.7814062237739563, 0.7846799492835999, 0.7882499098777771, 0.7921119928359985, 0.7962620258331299, 0.8006954789161682, 0.8054077625274658, 0.8103939294815063, 0.8156489729881287, 0.8211677074432373, 0.826944887638092, 0.8329752087593079, 0.8392530679702759, 0.8457730412483215, 0.8525295257568359, 0.8595170378684998, 0.8667299151420593, 0.8741625547409058, 0.881809413433075, 0.8896650671958923, 0.897723913192749, 0.9059805870056152, 0.9144296646118164, 0.9230659604072571, 0.931884229183197, 0.9408793449401855, 0.9500462412834167, 0.9593800902366638, 0.9688760042190552, 0.9785292744636536, 0.9883353114128113, 0.9982895255088806, 1.0083876848220825, 1.0186253786087036, 1.0289984941482544, 1.0395029783248901, 1.0501348972320557, 1.0608903169631958, 1.071765661239624, 1.0827572345733643, 1.0938615798950195, 1.1050752401351929, 1.1163949966430664, 1.1278176307678223, 1.1393400430679321, 1.1509591341018677, 1.1626721620559692, 1.1744762659072876, 1.186368703842163, 1.1983468532562256, 1.210408091545105, 1.2225501537322998, 1.2347705364227295, 1.247066855430603, 1.259437084197998, 1.2718788385391235, 1.2843902111053467, 1.2969691753387451, 1.309613585472107, 1.322321891784668, 1.3350920677185059, 1.3479223251342773, 1.3608109951019287, 1.3737565279006958, 1.386757254600525, 1.3998116254806519, 1.412918210029602, 1.4260755777359009, 1.4392821788787842, 1.4525368213653564, 1.4658381938934326, 1.4791849851608276, 1.492576003074646, 1.5060100555419922, 1.5194860696792603, 1.5330028533935547, 1.5465593338012695, 1.5601544380187988, 1.5737873315811157, 1.5874569416046143, 1.601162314414978, 1.6149024963378906, 1.6286767721176147, 1.6424840688705444, 1.6563236713409424, 1.6701948642730713, 1.6840966939926147, 1.6980284452438354, 1.7119895219802856, 1.7259790897369385, 1.7399965524673462, 1.754041075706482, 1.7681121826171875, 1.7822091579437256, 1.7963314056396484, 1.8104784488677979, 1.824649453163147, 1.8388440608978271, 1.8530617952346802, 1.8673019409179688, 1.8815640211105347, 1.8958476781845093, 1.9101521968841553, 1.924477458000183, 1.938822627067566, 1.9531874656677246, 1.9675716161727905, 1.981974482536316, 1.9963957071304321, 2.0108349323272705, 2.025291681289673, 2.0397658348083496, 2.0542566776275635, 2.0687642097473145, 2.0832877159118652, 2.097827196121216, 2.112382173538208, 2.1269521713256836, 2.1415371894836426, 2.1269521713256836, 2.112382173538208, 2.097827196121216, 2.0832877159118652, 2.0687642097473145, 2.0542566776275635, 2.0397658348083496, 2.025291681289673, 2.0108349323272705, 1.9963957071304321, 1.981974482536316, 1.9675716161727905, 1.9531874656677246, 1.938822627067566, 1.924477458000183, 1.9101521968841553, 1.8958476781845093, 1.8815640211105347, 1.8673019409179688, 1.8530617952346802, 1.8388440608978271, 1.824649453163147, 1.8104784488677979, 1.7963314056396484, 1.7822091579437256, 1.7681121826171875, 1.754041075706482, 1.7399965524673462, 1.7259790897369385, 1.7119895219802856, 1.6980284452438354, 1.6840966939926147, 1.6701948642730713, 1.6563236713409424, 1.6424840688705444, 1.6286767721176147, 1.6149024963378906, 1.601162314414978, 1.5874569416046143, 1.5737873315811157, 1.5601544380187988, 1.5465593338012695, 1.5330028533935547, 1.5194860696792603, 1.5060100555419922, 1.492576003074646, 1.4791849851608276, 1.4658381938934326, 1.4525368213653564, 1.4392821788787842, 1.4260755777359009, 1.412918210029602, 1.3998116254806519, 1.386757254600525, 1.3737565279006958, 1.3608109951019287, 1.3479223251342773, 1.3350920677185059, 1.322321891784668, 1.309613585472107, 1.2969691753387451, 1.2843902111053467, 1.2718788385391235, 1.259437084197998, 1.247066855430603, 1.2347705364227295, 1.2225501537322998, 1.210408091545105, 1.1983468532562256, 1.186368703842163, 1.1744762659072876, 1.1626721620559692, 1.1509591341018677, 1.1393400430679321, 1.1278176307678223, 1.1163949966430664, 1.1050752401351929, 1.0938615798950195, 1.0827572345733643, 1.071765661239624, 1.0608903169631958, 1.0501348972320557, 1.0395029783248901, 1.0289984941482544, 1.0186253786087036, 1.0083876848220825, 0.9982895255088806, 0.9883353114128113, 0.9785292744636536, 0.9688760042190552, 0.9593800902366638, 0.9500462412834167, 0.9408793449401855, 0.931884229183197, 0.9230659604072571, 0.9144296646118164, 0.9059805870056152, 0.897723913192749, 0.8896650671958923, 0.881809413433075, 0.8741625547409058, 0.8667299151420593, 0.8595170378684998, 0.8525295257568359, 0.8457730412483215, 0.8392530679702759, 0.8329752087593079, 0.826944887638092, 0.8211677074432373, 0.8156489729881287, 0.8103939294815063, 0.8054077625274658, 0.8006954789161682, 0.7962620258331299, 0.7921119928359985, 0.7882499098777771, 0.7846799492835999, 0.7814062237739563, 0.7784324288368225, 0.7757619619369507, 0.7733980417251587, 0.771343469619751, 0.7696006298065186, 0.7681717872619629, 0.7670586109161377, 0.7662624716758728, 0.7657844424247742, 0.78125, 0.7814062237739563, 0.7818747758865356, 0.7826550006866455, 0.7837460041046143, 0.7851465344429016, 0.7868549227714539, 0.7888690829277039, 0.7911868095397949, 0.7938053607940674, 0.7967218160629272, 0.7999328374862671, 0.8034350275993347, 0.807224452495575, 0.8112971782684326, 0.8156489729881287, 0.8202753067016602, 0.8251716494560242, 0.8303331136703491, 0.835754930973053, 0.8414319753646851, 0.8473591804504395, 0.8535312414169312, 0.8599429726600647, 0.8665890097618103, 0.873464047908783, 0.8805626630783081, 0.8878795504570007, 0.8954092860221863, 0.9031466245651245, 0.9110862612724304, 0.919222891330719, 0.9275513887405396, 0.9360666275024414, 0.9447635412216187, 0.9536371827125549, 0.9626826047897339, 0.9718950986862183, 0.981269896030426, 0.9908024072647095, 1.0004881620407104, 1.0103226900100708, 1.0203016996383667, 1.0304210186004639, 1.0406765937805176, 1.051064372062683, 1.0615805387496948, 1.0722211599349976, 1.0829826593399048, 1.0938615798950195, 1.1048543453216553, 1.1159576177597046, 1.12716805934906, 1.1384825706481934, 1.1498980522155762, 1.1614116430282593, 1.1730202436447144, 1.1847212314605713, 1.1965118646621704, 1.208389401435852, 1.2203514575958252, 1.2323955297470093, 1.2445192337036133, 1.2567201852798462, 1.268996238708496, 1.281345248222351, 1.2937650680541992, 1.3062537908554077, 1.3188092708587646, 1.3314297199249268, 1.3441133499145508, 1.356858253479004, 1.369662880897522, 1.3825255632400513, 1.395444631576538, 1.4084184169769287, 1.4214457273483276, 1.4345247745513916, 1.447654366493225, 1.4608330726623535, 1.4740595817565918, 1.4873325824737549, 1.5006508827209473, 1.5140132904052734, 1.5274187326431274, 1.5408658981323242, 1.5543537139892578, 1.5678813457489014, 1.5814476013183594, 1.5950515270233154, 1.6086921691894531, 1.6223686933517456, 1.636080026626587, 1.6498253345489502, 1.6636039018630981, 1.677414894104004, 1.691257357597351, 1.705130696296692, 1.7190340757369995, 1.7329667806625366, 1.746928095817566, 1.7609174251556396, 1.774933934211731, 1.7889772653579712, 1.803046464920044, 1.8171411752700806, 1.8312606811523438, 1.8454045057296753, 1.859571933746338, 1.873762607574463, 1.8879759311676025, 1.9022114276885986, 1.9164685010910034, 1.9307467937469482, 1.945045828819275, 1.9593650102615356, 1.9737040996551514, 1.9880625009536743, 2.0024399757385254, 2.016835927963257, 2.03125, 2.045681953430176, 2.060131311416626, 2.0745975971221924, 2.089080572128296, 2.1035799980163574, 2.1180953979492188, 2.132626533508301, 2.1471729278564453, 2.132626533508301, 2.1180953979492188, 2.1035799980163574, 2.089080572128296, 2.0745975971221924, 2.060131311416626, 2.045681953430176, 2.03125, 2.016835927963257, 2.0024399757385254, 1.9880625009536743, 1.9737040996551514, 1.9593650102615356, 1.945045828819275, 1.9307467937469482, 1.9164685010910034, 1.9022114276885986, 1.8879759311676025, 1.873762607574463, 1.859571933746338, 1.8454045057296753, 1.8312606811523438, 1.8171411752700806, 1.803046464920044, 1.7889772653579712, 1.774933934211731, 1.7609174251556396, 1.746928095817566, 1.7329667806625366, 1.7190340757369995, 1.705130696296692, 1.691257357597351, 1.677414894104004, 1.6636039018630981, 1.6498253345489502, 1.636080026626587, 1.6223686933517456, 1.6086921691894531, 1.5950515270233154, 1.5814476013183594, 1.5678813457489014, 1.5543537139892578, 1.5408658981323242, 1.5274187326431274, 1.5140132904052734, 1.5006508827209473, 1.4873325824737549, 1.4740595817565918, 1.4608330726623535, 1.447654366493225, 1.4345247745513916, 1.4214457273483276, 1.4084184169769287, 1.395444631576538, 1.3825255632400513, 1.369662880897522, 1.356858253479004, 1.3441133499145508, 1.3314297199249268, 1.3188092708587646, 1.3062537908554077, 1.2937650680541992, 1.281345248222351, 1.268996238708496, 1.2567201852798462, 1.2445192337036133, 1.2323955297470093, 1.2203514575958252, 1.208389401435852, 1.1965118646621704, 1.1847212314605713, 1.1730202436447144, 1.1614116430282593, 1.1498980522155762, 1.1384825706481934, 1.12716805934906, 1.1159576177597046, 1.1048543453216553, 1.0938615798950195, 1.0829826593399048, 1.0722211599349976, 1.0615805387496948, 1.051064372062683, 1.0406765937805176, 1.0304210186004639, 1.0203016996383667, 1.0103226900100708, 1.0004881620407104, 0.9908024072647095, 0.981269896030426, 0.9718950986862183, 0.9626826047897339, 0.9536371827125549, 0.9447635412216187, 0.9360666275024414, 0.9275513887405396, 0.919222891330719, 0.9110862612724304, 0.9031466245651245, 0.8954092860221863, 0.8878795504570007, 0.8805626630783081, 0.873464047908783, 0.8665890097618103, 0.8599429726600647, 0.8535312414169312, 0.8473591804504395, 0.8414319753646851, 0.835754930973053, 0.8303331136703491, 0.8251716494560242, 0.8202753067016602, 0.8156489729881287, 0.8112971782684326, 0.807224452495575, 0.8034350275993347, 0.7999328374862671, 0.7967218160629272, 0.7938053607940674, 0.7911868095397949, 0.7888690829277039, 0.7868549227714539, 0.7851465344429016, 0.7837460041046143, 0.7826550006866455, 0.7818747758865356, 0.7814062237739563, 0.796875, 0.7970281839370728, 0.7974874973297119, 0.7982524633407593, 0.799322247505188, 0.8006954789161682, 0.8023707270622253, 0.8043460845947266, 0.8066193461418152, 0.8091879487037659, 0.812049150466919, 0.8151998519897461, 0.8186366558074951, 0.822356104850769, 0.8263542652130127, 0.8306271433830261, 0.8351705074310303, 0.8399800062179565, 0.845051109790802, 0.8503790497779846, 0.8559591174125671, 0.8617863655090332, 0.8678559064865112, 0.8741625547409058, 0.8807013034820557, 0.8874669671058655, 0.8944544792175293, 0.9016586542129517, 0.9090742468833923, 0.9166962504386902, 0.9245195388793945, 0.9325389862060547, 0.9407495856285095, 0.9491463899612427, 0.9577245712280273, 0.9664791822433472, 0.9754055738449097, 0.9844989776611328, 0.9937549233436584, 1.0031688213348389, 1.0127363204956055, 1.0224529504776, 1.0323147773742676, 1.042317509651184, 1.0524570941925049, 1.0627297163009644, 1.0731315612792969, 1.0836588144302368, 1.0943078994750977, 1.1050752401351929, 1.1159576177597046, 1.1269514560699463, 1.1380536556243896, 1.1492609977722168, 1.160570502281189, 1.1719791889190674, 1.1834841966629028, 1.195082664489746, 1.2067720890045166, 1.2185496091842651, 1.2304129600524902, 1.2423595190048218, 1.2543867826461792, 1.2664927244186401, 1.2786749601364136, 1.2909314632415771, 1.3032598495483398, 1.315658450126648, 1.328125, 1.3406578302383423, 1.3532549142837524, 1.3659145832061768, 1.3786351680755615, 1.391414761543274, 1.404252052307129, 1.4171452522277832, 1.4300930500030518, 1.4430937767028809, 1.456146001815796, 1.4692485332489014, 1.4824000597000122, 1.4955990314483643, 1.5088443756103516, 1.5221349000930786, 1.5354692935943604, 1.5488466024398804, 1.5622656345367432, 1.5757253170013428, 1.5892245769500732, 1.6027624607086182, 1.6163381338119507, 1.6299504041671753, 1.6435984373092651, 1.657281517982483, 1.6709985733032227, 1.684748888015747, 1.6985316276550293, 1.712346076965332, 1.7261912822723389, 1.740066647529602, 1.7539714574813843, 1.7679049968719482, 1.7818666696548462, 1.7958556413650513, 1.8098714351654053, 1.8239134550094604, 1.83798086643219, 1.8520734310150146, 1.8661901950836182, 1.8803309202194214, 1.8944950103759766, 1.908681869506836, 1.9228910207748413, 1.9371219873428345, 1.9513741731643677, 1.9656473398208618, 1.9799408912658691, 1.994254469871521, 2.008587598800659, 2.022939682006836, 2.0373106002807617, 2.0516998767852783, 2.0661072731018066, 2.0805320739746094, 2.0949740409851074, 2.1094329357147217, 2.123908281326294, 2.138399839401245, 2.152907371520996, 2.138399839401245, 2.123908281326294, 2.1094329357147217, 2.0949740409851074, 2.0805320739746094, 2.0661072731018066, 2.0516998767852783, 2.0373106002807617, 2.022939682006836, 2.008587598800659, 1.994254469871521, 1.9799408912658691, 1.9656473398208618, 1.9513741731643677, 1.9371219873428345, 1.9228910207748413, 1.908681869506836, 1.8944950103759766, 1.8803309202194214, 1.8661901950836182, 1.8520734310150146, 1.83798086643219, 1.8239134550094604, 1.8098714351654053, 1.7958556413650513, 1.7818666696548462, 1.7679049968719482, 1.7539714574813843, 1.740066647529602, 1.7261912822723389, 1.712346076965332, 1.6985316276550293, 1.684748888015747, 1.6709985733032227, 1.657281517982483, 1.6435984373092651, 1.6299504041671753, 1.6163381338119507, 1.6027624607086182, 1.5892245769500732, 1.5757253170013428, 1.5622656345367432, 1.5488466024398804, 1.5354692935943604, 1.5221349000930786, 1.5088443756103516, 1.4955990314483643, 1.4824000597000122, 1.4692485332489014, 1.456146001815796, 1.4430937767028809, 1.4300930500030518, 1.4171452522277832, 1.404252052307129, 1.391414761543274, 1.3786351680755615, 1.3659145832061768, 1.3532549142837524, 1.3406578302383423, 1.328125, 1.315658450126648, 1.3032598495483398, 1.2909314632415771, 1.2786749601364136, 1.2664927244186401, 1.2543867826461792, 1.2423595190048218, 1.2304129600524902, 1.2185496091842651, 1.2067720890045166, 1.195082664489746, 1.1834841966629028, 1.1719791889190674, 1.160570502281189, 1.1492609977722168, 1.1380536556243896, 1.1269514560699463, 1.1159576177597046, 1.1050752401351929, 1.0943078994750977, 1.0836588144302368, 1.0731315612792969, 1.0627297163009644, 1.0524570941925049, 1.042317509651184, 1.0323147773742676, 1.0224529504776, 1.0127363204956055, 1.0031688213348389, 0.9937549233436584, 0.9844989776611328, 0.9754055738449097, 0.9664791822433472, 0.9577245712280273, 0.9491463899612427, 0.9407495856285095, 0.9325389862060547, 0.9245195388793945, 0.9166962504386902, 0.9090742468833923, 0.9016586542129517, 0.8944544792175293, 0.8874669671058655, 0.8807013034820557, 0.8741625547409058, 0.8678559064865112, 0.8617863655090332, 0.8559591174125671, 0.8503790497779846, 0.845051109790802, 0.8399800062179565, 0.8351705074310303, 0.8306271433830261, 0.8263542652130127, 0.822356104850769, 0.8186366558074951, 0.8151998519897461, 0.812049150466919, 0.8091879487037659, 0.8066193461418152, 0.8043460845947266, 0.8023707270622253, 0.8006954789161682, 0.799322247505188, 0.7982524633407593, 0.7974874973297119, 0.7970281839370728, 0.8125, 0.812650203704834, 0.8131007552146912, 0.8138510584831238, 0.814900279045105, 0.8162473440170288, 0.8178907632827759, 0.8198287487030029, 0.822059154510498, 0.824579656124115, 0.8273876309394836, 0.83048015832901, 0.8338540196418762, 0.8375058174133301, 0.8414319753646851, 0.8456286787986755, 0.8500919342041016, 0.8548174500465393, 0.8598010540008545, 0.8650381565093994, 0.8705242872238159, 0.876254677772522, 0.8822246193885803, 0.8884292840957642, 0.8948638439178467, 0.901523232460022, 0.9084026217460632, 0.9154970049858093, 0.9228014349937439, 0.9303109645843506, 0.9380207061767578, 0.9459256529808044, 0.9540210962295532, 0.9623021483421326, 0.9707640409469604, 0.9794021248817444, 0.9882117509841919, 0.9971884489059448, 1.0063276290893555, 1.015625, 1.0250762701034546, 1.0346770286560059, 1.0444234609603882, 1.0543112754821777, 1.0643366575241089, 1.0744956731796265, 1.0847846269607544, 1.0951999425888062, 1.1057379245758057, 1.1163949966430664, 1.12716805934906, 1.1380536556243896, 1.1490485668182373, 1.1601496934890747, 1.171354055404663, 1.1826586723327637, 1.1940608024597168, 1.2055575847625732, 1.217146396636963, 1.228824496269226, 1.2405896186828613, 1.252439022064209, 1.2643705606460571, 1.2763817310333252, 1.2884705066680908, 1.3006346225738525, 1.3128719329833984, 1.3251805305480957, 1.337558388710022, 1.3500036001205444, 1.3625143766403198, 1.3750888109207153, 1.3877252340316772, 1.4004219770431519, 1.4131773710250854, 1.4259898662567139, 1.4388580322265625, 1.4517803192138672, 1.4647551774978638, 1.4777814149856567, 1.4908576011657715, 1.5039823055267334, 1.5171544551849365, 1.5303728580474854, 1.5436360836029053, 1.5569432973861694, 1.5702930688858032, 1.5836845636367798, 1.5971165895462036, 1.6105881929397583, 1.624098300933838, 1.6376460790634155, 1.6512305736541748, 1.6648509502410889, 1.6785061359405518, 1.6921954154968262, 1.7059179544448853, 1.7196730375289917, 1.7334598302841187, 1.7472774982452393, 1.7611253261566162, 1.7750027179718018, 1.7889089584350586, 1.8028433322906494, 1.8168052434921265, 1.8307939767837524, 1.8448090553283691, 1.8588497638702393, 1.872915506362915, 1.8870058059692383, 1.9011201858520508, 1.9152579307556152, 1.929418683052063, 1.9436017274856567, 1.957806944847107, 1.9720335006713867, 1.9862810373306274, 2.00054931640625, 2.0148375034332275, 2.0291454792022705, 2.0434727668762207, 2.057819128036499, 2.072183609008789, 2.08656644821167, 2.1009669303894043, 2.115385055541992, 2.129819869995117, 2.1442716121673584, 2.1587395668029785, 2.1442716121673584, 2.129819869995117, 2.115385055541992, 2.1009669303894043, 2.08656644821167, 2.072183609008789, 2.057819128036499, 2.0434727668762207, 2.0291454792022705, 2.0148375034332275, 2.00054931640625, 1.9862810373306274, 1.9720335006713867, 1.957806944847107, 1.9436017274856567, 1.929418683052063, 1.9152579307556152, 1.9011201858520508, 1.8870058059692383, 1.872915506362915, 1.8588497638702393, 1.8448090553283691, 1.8307939767837524, 1.8168052434921265, 1.8028433322906494, 1.7889089584350586, 1.7750027179718018, 1.7611253261566162, 1.7472774982452393, 1.7334598302841187, 1.7196730375289917, 1.7059179544448853, 1.6921954154968262, 1.6785061359405518, 1.6648509502410889, 1.6512305736541748, 1.6376460790634155, 1.624098300933838, 1.6105881929397583, 1.5971165895462036, 1.5836845636367798, 1.5702930688858032, 1.5569432973861694, 1.5436360836029053, 1.5303728580474854, 1.5171544551849365, 1.5039823055267334, 1.4908576011657715, 1.4777814149856567, 1.4647551774978638, 1.4517803192138672, 1.4388580322265625, 1.4259898662567139, 1.4131773710250854, 1.4004219770431519, 1.3877252340316772, 1.3750888109207153, 1.3625143766403198, 1.3500036001205444, 1.337558388710022, 1.3251805305480957, 1.3128719329833984, 1.3006346225738525, 1.2884705066680908, 1.2763817310333252, 1.2643705606460571, 1.252439022064209, 1.2405896186828613, 1.228824496269226, 1.217146396636963, 1.2055575847625732, 1.1940608024597168, 1.1826586723327637, 1.171354055404663, 1.1601496934890747, 1.1490485668182373, 1.1380536556243896, 1.12716805934906, 1.1163949966430664, 1.1057379245758057, 1.0951999425888062, 1.0847846269607544, 1.0744956731796265, 1.0643366575241089, 1.0543112754821777, 1.0444234609603882, 1.0346770286560059, 1.0250762701034546, 1.015625, 1.0063276290893555, 0.9971884489059448, 0.9882117509841919, 0.9794021248817444, 0.9707640409469604, 0.9623021483421326, 0.9540210962295532, 0.9459256529808044, 0.9380207061767578, 0.9303109645843506, 0.9228014349937439, 0.9154970049858093, 0.9084026217460632, 0.901523232460022, 0.8948638439178467, 0.8884292840957642, 0.8822246193885803, 0.876254677772522, 0.8705242872238159, 0.8650381565093994, 0.8598010540008545, 0.8548174500465393, 0.8500919342041016, 0.8456286787986755, 0.8414319753646851, 0.8375058174133301, 0.8338540196418762, 0.83048015832901, 0.8273876309394836, 0.824579656124115, 0.822059154510498, 0.8198287487030029, 0.8178907632827759, 0.8162473440170288, 0.814900279045105, 0.8138510584831238, 0.8131007552146912, 0.812650203704834, 0.828125, 0.8282724022865295, 0.8287144303321838, 0.8294506072998047, 0.83048015832901, 0.8318019509315491, 0.8334147334098816, 0.8353166580200195, 0.8375058174133301, 0.8399800062179565, 0.8427366614341736, 0.8457730412483215, 0.8490861058235168, 0.8526727557182312, 0.8565293550491333, 0.8606524467468262, 0.8650381565093994, 0.8696824908256531, 0.8745813965797424, 0.8797305226325989, 0.8851255774497986, 0.8907620310783386, 0.8966354131698608, 0.9027410745620728, 0.9090742468833923, 0.9156303405761719, 0.9224045276641846, 0.9293920397758484, 0.9365881085395813, 0.9439879655838013, 0.951586902141571, 0.9593800902366638, 0.9673629403114319, 0.9755306839942932, 0.9838788509368896, 0.9924027919769287, 1.0010980367660522, 1.0099601745605469, 1.0189847946166992, 1.028167724609375, 1.0375046730041504, 1.0469915866851807, 1.056624412536621, 1.066399097442627, 1.0763118267059326, 1.086358904838562, 1.096536636352539, 1.1068413257598877, 1.1172693967819214, 1.1278176307678223, 1.1384825706481934, 1.1492609977722168, 1.1601496934890747, 1.1711455583572388, 1.1822457313537598, 1.193447232246399, 1.2047473192214966, 1.216143012046814, 1.22763192653656, 1.2392112016677856, 1.2508785724639893, 1.2626315355300903, 1.2744675874710083, 1.2863845825195312, 1.2983801364898682, 1.3104522228240967, 1.3225988149642944, 1.33481764793396, 1.3471070528030396, 1.3594647645950317, 1.3718892335891724, 1.3843785524368286, 1.3969309329986572, 1.4095447063446045, 1.4222183227539062, 1.4349502325057983, 1.4477386474609375, 1.4605823755264282, 1.4734797477722168, 1.4864294528961182, 1.4994301795959473, 1.512480616569519, 1.5255794525146484, 1.5387253761291504, 1.551917314529419, 1.565153956413269, 1.5784343481063843, 1.5917572975158691, 1.6051218509674072, 1.618526816368103, 1.6319712400436401, 1.6454541683197021, 1.6589747667312622, 1.6725319623947144, 1.6861250400543213, 1.699752926826477, 1.7134150266647339, 1.7271103858947754, 1.7408381700515747, 1.754597783088684, 1.768388271331787, 1.7822091579437256, 1.7960596084594727, 1.809938907623291, 1.823846459388733, 1.8377816677093506, 1.8517438173294067, 1.8657323122024536, 1.8797465562820435, 1.893786072731018, 1.9078502655029297, 1.9219385385513306, 1.9360504150390625, 1.9501852989196777, 1.9643428325653076, 1.9785224199295044, 1.9927235841751099, 2.006945848464966, 2.021188974380493, 2.035452365875244, 2.0497355461120605, 2.0640382766723633, 2.078359842300415, 2.092700242996216, 2.1070590019226074, 2.1214354038238525, 2.135829448699951, 2.150240659713745, 2.1646687984466553, 2.150240659713745, 2.135829448699951, 2.1214354038238525, 2.1070590019226074, 2.092700242996216, 2.078359842300415, 2.0640382766723633, 2.0497355461120605, 2.035452365875244, 2.021188974380493, 2.006945848464966, 1.9927235841751099, 1.9785224199295044, 1.9643428325653076, 1.9501852989196777, 1.9360504150390625, 1.9219385385513306, 1.9078502655029297, 1.893786072731018, 1.8797465562820435, 1.8657323122024536, 1.8517438173294067, 1.8377816677093506, 1.823846459388733, 1.809938907623291, 1.7960596084594727, 1.7822091579437256, 1.768388271331787, 1.754597783088684, 1.7408381700515747, 1.7271103858947754, 1.7134150266647339, 1.699752926826477, 1.6861250400543213, 1.6725319623947144, 1.6589747667312622, 1.6454541683197021, 1.6319712400436401, 1.618526816368103, 1.6051218509674072, 1.5917572975158691, 1.5784343481063843, 1.565153956413269, 1.551917314529419, 1.5387253761291504, 1.5255794525146484, 1.512480616569519, 1.4994301795959473, 1.4864294528961182, 1.4734797477722168, 1.4605823755264282, 1.4477386474609375, 1.4349502325057983, 1.4222183227539062, 1.4095447063446045, 1.3969309329986572, 1.3843785524368286, 1.3718892335891724, 1.3594647645950317, 1.3471070528030396, 1.33481764793396, 1.3225988149642944, 1.3104522228240967, 1.2983801364898682, 1.2863845825195312, 1.2744675874710083, 1.2626315355300903, 1.2508785724639893, 1.2392112016677856, 1.22763192653656, 1.216143012046814, 1.2047473192214966, 1.193447232246399, 1.1822457313537598, 1.1711455583572388, 1.1601496934890747, 1.1492609977722168, 1.1384825706481934, 1.1278176307678223, 1.1172693967819214, 1.1068413257598877, 1.096536636352539, 1.086358904838562, 1.0763118267059326, 1.066399097442627, 1.056624412536621, 1.0469915866851807, 1.0375046730041504, 1.028167724609375, 1.0189847946166992, 1.0099601745605469, 1.0010980367660522, 0.9924027919769287, 0.9838788509368896, 0.9755306839942932, 0.9673629403114319, 0.9593800902366638, 0.951586902141571, 0.9439879655838013, 0.9365881085395813, 0.9293920397758484, 0.9224045276641846, 0.9156303405761719, 0.9090742468833923, 0.9027410745620728, 0.8966354131698608, 0.8907620310783386, 0.8851255774497986, 0.8797305226325989, 0.8745813965797424, 0.8696824908256531, 0.8650381565093994, 0.8606524467468262, 0.8565293550491333, 0.8526727557182312, 0.8490861058235168, 0.8457730412483215, 0.8427366614341736, 0.8399800062179565, 0.8375058174133301, 0.8353166580200195, 0.8334147334098816, 0.8318019509315491, 0.83048015832901, 0.8294506072998047, 0.8287144303321838, 0.8282724022865295, 0.84375, 0.8438946604728699, 0.8443285226821899, 0.845051109790802, 0.846061646938324, 0.8473591804504395, 0.8489423394203186, 0.8508095741271973, 0.8529589772224426, 0.8553884625434875, 0.858095645904541, 0.8610778450965881, 0.8643323183059692, 0.8678559064865112, 0.8716453313827515, 0.8756972551345825, 0.8800079822540283, 0.884573757648468, 0.8893905878067017, 0.8944544792175293, 0.8997612595558167, 0.9053066372871399, 0.9110862612724304, 0.9170956611633301, 0.9233304262161255, 0.929785966873169, 0.9364577531814575, 0.9433411955833435, 0.9504316449165344, 0.9577245712280273, 0.9652153253555298, 0.9728993773460388, 0.9807721972465515, 0.9888291954994202, 0.9970660209655762, 1.0054781436920166, 1.0140613317489624, 1.0228111743927002, 1.0317233800888062, 1.0407938957214355, 1.050018548965454, 1.0593934059143066, 1.0689144134521484, 1.0785777568817139, 1.0883796215057373, 1.0983163118362427, 1.1083842515945435, 1.1185797452926636, 1.1288994550704956, 1.1393400430679321, 1.1498980522155762, 1.160570502281189, 1.171354055404663, 1.1822457313537598, 1.1932426691055298, 1.2043418884277344, 1.2155406475067139, 1.2268362045288086, 1.2382258176803589, 1.2497069835662842, 1.261277198791504, 1.2729341983795166, 1.2846752405166626, 1.296498417854309, 1.308401346206665, 1.3203818798065186, 1.3324378728866577, 1.3445672988891602, 1.3567683696746826, 1.3690389394760132, 1.3813772201538086, 1.3937815427780151, 1.40625, 1.4187809228897095, 1.4313727617263794, 1.4440239667892456, 1.4567327499389648, 1.469497799873352, 1.4823176860809326, 1.4951908588409424, 1.5081160068511963, 1.5210919380187988, 1.5341172218322754, 1.5471906661987305, 1.560310959815979, 1.573477029800415, 1.5866878032684326, 1.5999419689178467, 1.6132386922836304, 1.6265767812728882, 1.6399551630020142, 1.653373122215271, 1.6668294668197632, 1.6803232431411743, 1.693853735923767, 1.707419991493225, 1.7210211753845215, 1.7346564531326294, 1.7483251094818115, 1.7620261907577515, 1.7757591009140015, 1.7895230054855347, 1.8033173084259033, 1.8171411752700806, 1.8309940099716187, 1.8448752164840698, 1.8587840795516968, 1.8727200031280518, 1.886682391166687, 1.9006706476211548, 1.9146841764450073, 1.9287225008010864, 1.9427851438522339, 1.9568713903427124, 1.9709808826446533, 1.9851130247116089, 1.9992674589157104, 2.0134434700012207, 2.0276410579681396, 2.0418593883514404, 2.056097984313965, 2.070356607437134, 2.084635019302368, 2.0989325046539307, 2.113248825073242, 2.1275835037231445, 2.1419363021850586, 2.156306505203247, 2.170694351196289, 2.156306505203247, 2.1419363021850586, 2.1275835037231445, 2.113248825073242, 2.0989325046539307, 2.084635019302368, 2.070356607437134, 2.056097984313965, 2.0418593883514404, 2.0276410579681396, 2.0134434700012207, 1.9992674589157104, 1.9851130247116089, 1.9709808826446533, 1.9568713903427124, 1.9427851438522339, 1.9287225008010864, 1.9146841764450073, 1.9006706476211548, 1.886682391166687, 1.8727200031280518, 1.8587840795516968, 1.8448752164840698, 1.8309940099716187, 1.8171411752700806, 1.8033173084259033, 1.7895230054855347, 1.7757591009140015, 1.7620261907577515, 1.7483251094818115, 1.7346564531326294, 1.7210211753845215, 1.707419991493225, 1.693853735923767, 1.6803232431411743, 1.6668294668197632, 1.653373122215271, 1.6399551630020142, 1.6265767812728882, 1.6132386922836304, 1.5999419689178467, 1.5866878032684326, 1.573477029800415, 1.560310959815979, 1.5471906661987305, 1.5341172218322754, 1.5210919380187988, 1.5081160068511963, 1.4951908588409424, 1.4823176860809326, 1.469497799873352, 1.4567327499389648, 1.4440239667892456, 1.4313727617263794, 1.4187809228897095, 1.40625, 1.3937815427780151, 1.3813772201538086, 1.3690389394760132, 1.3567683696746826, 1.3445672988891602, 1.3324378728866577, 1.3203818798065186, 1.308401346206665, 1.296498417854309, 1.2846752405166626, 1.2729341983795166, 1.261277198791504, 1.2497069835662842, 1.2382258176803589, 1.2268362045288086, 1.2155406475067139, 1.2043418884277344, 1.1932426691055298, 1.1822457313537598, 1.171354055404663, 1.160570502281189, 1.1498980522155762, 1.1393400430679321, 1.1288994550704956, 1.1185797452926636, 1.1083842515945435, 1.0983163118362427, 1.0883796215057373, 1.0785777568817139, 1.0689144134521484, 1.0593934059143066, 1.050018548965454, 1.0407938957214355, 1.0317233800888062, 1.0228111743927002, 1.0140613317489624, 1.0054781436920166, 0.9970660209655762, 0.9888291954994202, 0.9807721972465515, 0.9728993773460388, 0.9652153253555298, 0.9577245712280273, 0.9504316449165344, 0.9433411955833435, 0.9364577531814575, 0.929785966873169, 0.9233304262161255, 0.9170956611633301, 0.9110862612724304, 0.9053066372871399, 0.8997612595558167, 0.8944544792175293, 0.8893905878067017, 0.884573757648468, 0.8800079822540283, 0.8756972551345825, 0.8716453313827515, 0.8678559064865112, 0.8643323183059692, 0.8610778450965881, 0.858095645904541, 0.8553884625434875, 0.8529589772224426, 0.8508095741271973, 0.8489423394203186, 0.8473591804504395, 0.846061646938324, 0.845051109790802, 0.8443285226821899, 0.8438946604728699, 0.859375, 0.8595170378684998, 0.8599429726600647, 0.8606524467468262, 0.8616447448730469, 0.8629188537597656, 0.8644735217094421, 0.866307258605957, 0.8684183359146118, 0.8708046674728394, 0.873464047908783, 0.8763939738273621, 0.8795917630195618, 0.8830544352531433, 0.8867789506912231, 0.8907620310783386, 0.8950002193450928, 0.8994898796081543, 0.9042272567749023, 0.9092085361480713, 0.9144296646118164, 0.9198866486549377, 0.9255751967430115, 0.9314911365509033, 0.9376301765441895, 0.9439879655838013, 0.9505600929260254, 0.9573420882225037, 0.9643296599388123, 0.9715182185173035, 0.9789034724235535, 0.9864808917045593, 0.9942461252212524, 1.002194881439209, 1.0103226900100708, 1.0186253786087036, 1.0270986557006836, 1.0357383489608765, 1.044540286064148, 1.0535005331039429, 1.062614917755127, 1.071879506111145, 1.081290602684021, 1.0908443927764893, 1.1005369424819946, 1.1103649139404297, 1.1203244924545288, 1.1304123401641846, 1.140625, 1.1509591341018677, 1.1614116430282593, 1.1719791889190674, 1.1826586723327637, 1.193447232246399, 1.2043418884277344, 1.2153397798538208, 1.226438045501709, 1.2376341819763184, 1.2489253282546997, 1.260309100151062, 1.2717828750610352, 1.2833442687988281, 1.294991135597229, 1.3067208528518677, 1.3185315132141113, 1.3304208517074585, 1.3423867225646973, 1.3544270992279053, 1.3665400743484497, 1.3787236213684082, 1.390976071357727, 1.4032955169677734, 1.415680170059204, 1.4281283617019653, 1.440638542175293, 1.4532090425491333, 1.4658381938934326, 1.4785246849060059, 1.4912668466567993, 1.5040634870529175, 1.5169130563735962, 1.52981436252594, 1.5427659749984741, 1.5557667016983032, 1.5688153505325317, 1.5819107294082642, 1.5950515270233154, 1.6082369089126587, 1.6214655637741089, 1.63473641872406, 1.6480486392974854, 1.6614011526107788, 1.674793004989624, 1.6882232427597046, 1.701690912246704, 1.7151951789855957, 1.7287352085113525, 1.7423101663589478, 1.755919098854065, 1.7695614099502563, 1.7832362651824951, 1.796942949295044, 1.810680627822876, 1.8244487047195435, 1.8382465839385986, 1.8520734310150146, 1.8659285306930542, 1.8798115253448486, 1.893721580505371, 1.907658338546753, 1.9216209650039673, 1.935608983039856, 1.9496219158172607, 1.9636590480804443, 1.9777201414108276, 1.9918044805526733, 2.0059115886688232, 2.0200412273406982, 2.0341925621032715, 2.048365354537964, 2.062559127807617, 2.0767736434936523, 2.091007947921753, 2.105262279510498, 2.1195356845855713, 2.1338281631469727, 2.148139238357544, 2.162468433380127, 2.1768155097961426, 2.162468433380127, 2.148139238357544, 2.1338281631469727, 2.1195356845855713, 2.105262279510498, 2.091007947921753, 2.0767736434936523, 2.062559127807617, 2.048365354537964, 2.0341925621032715, 2.0200412273406982, 2.0059115886688232, 1.9918044805526733, 1.9777201414108276, 1.9636590480804443, 1.9496219158172607, 1.935608983039856, 1.9216209650039673, 1.907658338546753, 1.893721580505371, 1.8798115253448486, 1.8659285306930542, 1.8520734310150146, 1.8382465839385986, 1.8244487047195435, 1.810680627822876, 1.796942949295044, 1.7832362651824951, 1.7695614099502563, 1.755919098854065, 1.7423101663589478, 1.7287352085113525, 1.7151951789855957, 1.701690912246704, 1.6882232427597046, 1.674793004989624, 1.6614011526107788, 1.6480486392974854, 1.63473641872406, 1.6214655637741089, 1.6082369089126587, 1.5950515270233154, 1.5819107294082642, 1.5688153505325317, 1.5557667016983032, 1.5427659749984741, 1.52981436252594, 1.5169130563735962, 1.5040634870529175, 1.4912668466567993, 1.4785246849060059, 1.4658381938934326, 1.4532090425491333, 1.440638542175293, 1.4281283617019653, 1.415680170059204, 1.4032955169677734, 1.390976071357727, 1.3787236213684082, 1.3665400743484497, 1.3544270992279053, 1.3423867225646973, 1.3304208517074585, 1.3185315132141113, 1.3067208528518677, 1.294991135597229, 1.2833442687988281, 1.2717828750610352, 1.260309100151062, 1.2489253282546997, 1.2376341819763184, 1.226438045501709, 1.2153397798538208, 1.2043418884277344, 1.193447232246399, 1.1826586723327637, 1.1719791889190674, 1.1614116430282593, 1.1509591341018677, 1.140625, 1.1304123401641846, 1.1203244924545288, 1.1103649139404297, 1.1005369424819946, 1.0908443927764893, 1.081290602684021, 1.071879506111145, 1.062614917755127, 1.0535005331039429, 1.044540286064148, 1.0357383489608765, 1.0270986557006836, 1.0186253786087036, 1.0103226900100708, 1.002194881439209, 0.9942461252212524, 0.9864808917045593, 0.9789034724235535, 0.9715182185173035, 0.9643296599388123, 0.9573420882225037, 0.9505600929260254, 0.9439879655838013, 0.9376301765441895, 0.9314911365509033, 0.9255751967430115, 0.9198866486549377, 0.9144296646118164, 0.9092085361480713, 0.9042272567749023, 0.8994898796081543, 0.8950002193450928, 0.8907620310783386, 0.8867789506912231, 0.8830544352531433, 0.8795917630195618, 0.8763939738273621, 0.873464047908783, 0.8708046674728394, 0.8684183359146118, 0.866307258605957, 0.8644735217094421, 0.8629188537597656, 0.8616447448730469, 0.8606524467468262, 0.8599429726600647, 0.8595170378684998, 0.875, 0.8751394748687744, 0.8755578398704529, 0.876254677772522, 0.8772292733192444, 0.8784807920455933, 0.8800079822540283, 0.881809413433075, 0.8838834762573242, 0.8862282037734985, 0.8888413906097412, 0.8917208313941956, 0.8948638439178467, 0.8982676267623901, 0.9019293785095215, 0.9058458209037781, 0.910013735294342, 0.9144296646118164, 0.9190900921821594, 0.9239912033081055, 0.9291293025016785, 0.9345003962516785, 0.9401005506515503, 0.9459256529808044, 0.9519716501235962, 0.9582342505455017, 0.9647093415260315, 0.9713925719261169, 0.9782797694206238, 0.9853665828704834, 0.9926487803459167, 1.0001220703125, 1.007782220840454, 1.015625, 1.0236462354660034, 1.0318416357040405, 1.0402072668075562, 1.048738956451416, 1.057432770729065, 1.0662846565246582, 1.0752906799316406, 1.0844470262527466, 1.09375, 1.1031957864761353, 1.1127808094024658, 1.1225016117095947, 1.1323543787002563, 1.1423360109329224, 1.1524430513381958, 1.1626721620559692, 1.1730202436447144, 1.1834841966629028, 1.1940608024597168, 1.2047473192214966, 1.2155406475067139, 1.226438045501709, 1.2374368906021118, 1.2485343217849731, 1.2597277164459229, 1.2710148096084595, 1.2823927402496338, 1.2938594818115234, 1.3054124116897583, 1.3170493841171265, 1.328768253326416, 1.3405667543411255, 1.3524428606033325, 1.3643944263458252, 1.3764196634292603, 1.3885166645050049, 1.4006834030151367, 1.412918210029602, 1.4252192974090576, 1.4375848770141602, 1.450013518333435, 1.4625033140182495, 1.4750529527664185, 1.4876608848571777, 1.5003254413604736, 1.5130454301834106, 1.5258194208145142, 1.5386459827423096, 1.5515239238739014, 1.5644519329071045, 1.5774286985397339, 1.590453028678894, 1.6035239696502686, 1.6166402101516724, 1.62980055809021, 1.6430041790008545, 1.65625, 1.6695369482040405, 1.6828639507293701, 1.6962302923202515, 1.7096349000930786, 1.7230769395828247, 1.7365554571151733, 1.7500697374343872, 1.76361882686615, 1.7772021293640137, 1.7908185720443726, 1.8044676780700684, 1.8181484937667847, 1.8318605422973633, 1.8456028699874878, 1.859375, 1.8731762170791626, 1.8870058059692383, 1.9008632898330688, 1.914747953414917, 1.9286593198776245, 1.942596673965454, 1.9565595388412476, 1.9705473184585571, 1.9845595359802246, 1.9985957145690918, 2.012655258178711, 2.026737689971924, 2.0408427715301514, 2.0549697875976562, 2.0691182613372803, 2.0832877159118652, 2.097477912902832, 2.1116886138916016, 2.1259188652038574, 2.1401686668395996, 2.15443754196167, 2.1687252521514893, 2.1830310821533203, 2.1687252521514893, 2.15443754196167, 2.1401686668395996, 2.1259188652038574, 2.1116886138916016, 2.097477912902832, 2.0832877159118652, 2.0691182613372803, 2.0549697875976562, 2.0408427715301514, 2.026737689971924, 2.012655258178711, 1.9985957145690918, 1.9845595359802246, 1.9705473184585571, 1.9565595388412476, 1.942596673965454, 1.9286593198776245, 1.914747953414917, 1.9008632898330688, 1.8870058059692383, 1.8731762170791626, 1.859375, 1.8456028699874878, 1.8318605422973633, 1.8181484937667847, 1.8044676780700684, 1.7908185720443726, 1.7772021293640137, 1.76361882686615, 1.7500697374343872, 1.7365554571151733, 1.7230769395828247, 1.7096349000930786, 1.6962302923202515, 1.6828639507293701, 1.6695369482040405, 1.65625, 1.6430041790008545, 1.62980055809021, 1.6166402101516724, 1.6035239696502686, 1.590453028678894, 1.5774286985397339, 1.5644519329071045, 1.5515239238739014, 1.5386459827423096, 1.5258194208145142, 1.5130454301834106, 1.5003254413604736, 1.4876608848571777, 1.4750529527664185, 1.4625033140182495, 1.450013518333435, 1.4375848770141602, 1.4252192974090576, 1.412918210029602, 1.4006834030151367, 1.3885166645050049, 1.3764196634292603, 1.3643944263458252, 1.3524428606033325, 1.3405667543411255, 1.328768253326416, 1.3170493841171265, 1.3054124116897583, 1.2938594818115234, 1.2823927402496338, 1.2710148096084595, 1.2597277164459229, 1.2485343217849731, 1.2374368906021118, 1.226438045501709, 1.2155406475067139, 1.2047473192214966, 1.1940608024597168, 1.1834841966629028, 1.1730202436447144, 1.1626721620559692, 1.1524430513381958, 1.1423360109329224, 1.1323543787002563, 1.1225016117095947, 1.1127808094024658, 1.1031957864761353, 1.09375, 1.0844470262527466, 1.0752906799316406, 1.0662846565246582, 1.057432770729065, 1.048738956451416, 1.0402072668075562, 1.0318416357040405, 1.0236462354660034, 1.015625, 1.007782220840454, 1.0001220703125, 0.9926487803459167, 0.9853665828704834, 0.9782797694206238, 0.9713925719261169, 0.9647093415260315, 0.9582342505455017, 0.9519716501235962, 0.9459256529808044, 0.9401005506515503, 0.9345003962516785, 0.9291293025016785, 0.9239912033081055, 0.9190900921821594, 0.9144296646118164, 0.910013735294342, 0.9058458209037781, 0.9019293785095215, 0.8982676267623901, 0.8948638439178467, 0.8917208313941956, 0.8888413906097412, 0.8862282037734985, 0.8838834762573242, 0.881809413433075, 0.8800079822540283, 0.8784807920455933, 0.8772292733192444, 0.876254677772522, 0.8755578398704529, 0.8751394748687744, 0.890625, 0.8907620310783386, 0.8911730647087097, 0.8918576836585999, 0.8928152918815613, 0.8940449953079224, 0.8955456018447876, 0.8973158597946167, 0.8993541598320007, 0.9016586542129517, 0.9042272567749023, 0.9070578217506409, 0.9101478457450867, 0.9134947657585144, 0.9170956611633301, 0.9209476113319397, 0.9250475168228149, 0.9293920397758484, 0.9339777827262878, 0.9388011693954468, 0.9438586235046387, 0.9491463899612427, 0.9546606540679932, 0.960397481918335, 0.9663528800010681, 0.9725229144096375, 0.9789034724235535, 0.9854904413223267, 0.9922797679901123, 0.9992672801017761, 1.0064489841461182, 1.0138205289840698, 1.0213779211044312, 1.0291171073913574, 1.0370339155197144, 1.0451244115829468, 1.0533846616744995, 1.0618104934692383, 1.0703980922698975, 1.0791435241699219, 1.0880430936813354, 1.097093105316162, 1.1062897443771362, 1.1156294345855713, 1.1251084804534912, 1.1347235441207886, 1.144471287727356, 1.1543481349945068, 1.1643508672714233, 1.1744762659072876, 1.1847212314605713, 1.195082664489746, 1.2055575847625732, 1.216143012046814, 1.2268362045288086, 1.2376341819763184, 1.2485343217849731, 1.2595340013504028, 1.2706304788589478, 1.2818214893341064, 1.2931044101715088, 1.3044769763946533, 1.3159366846084595, 1.3274815082550049, 1.339108943939209, 1.3508172035217285, 1.3626039028167725, 1.3744672536849976, 1.386405110359192, 1.3984156847000122, 1.4104970693588257, 1.422647476196289, 1.434865117073059, 1.447148323059082, 1.4594954252243042, 1.4719048738479614, 1.484375, 1.4969043731689453, 1.5094914436340332, 1.5221349000930786, 1.5348331928253174, 1.5475850105285645, 1.5603891611099243, 1.573244333267212, 1.5861490964889526, 1.59910249710083, 1.6121032238006592, 1.625150203704834, 1.6382423639297485, 1.6513783931732178, 1.6645575761795044, 1.677778720855713, 1.6910408735275269, 1.7043430805206299, 1.7176843881607056, 1.7310638427734375, 1.7444807291030884, 1.7579339742660522, 1.7714229822158813, 1.7849467992782593, 1.7985047101974487, 1.8120958805084229, 1.8257195949554443, 1.8393751382827759, 1.8530617952346802, 1.86677885055542, 1.8805257081985474, 1.8943016529083252, 1.9081062078475952, 1.9219385385513306, 1.935798168182373, 1.949684500694275, 1.9635969400405884, 1.9775350093841553, 1.9914979934692383, 2.0054855346679688, 2.0194971561431885, 2.0335323810577393, 2.047590494155884, 2.061671257019043, 2.0757739543914795, 2.0898985862731934, 2.104044198989868, 2.118210554122925, 2.132397413253784, 2.146604299545288, 2.1608307361602783, 2.1750762462615967, 2.189340829849243, 2.1750762462615967, 2.1608307361602783, 2.146604299545288, 2.132397413253784, 2.118210554122925, 2.104044198989868, 2.0898985862731934, 2.0757739543914795, 2.061671257019043, 2.047590494155884, 2.0335323810577393, 2.0194971561431885, 2.0054855346679688, 1.9914979934692383, 1.9775350093841553, 1.9635969400405884, 1.949684500694275, 1.935798168182373, 1.9219385385513306, 1.9081062078475952, 1.8943016529083252, 1.8805257081985474, 1.86677885055542, 1.8530617952346802, 1.8393751382827759, 1.8257195949554443, 1.8120958805084229, 1.7985047101974487, 1.7849467992782593, 1.7714229822158813, 1.7579339742660522, 1.7444807291030884, 1.7310638427734375, 1.7176843881607056, 1.7043430805206299, 1.6910408735275269, 1.677778720855713, 1.6645575761795044, 1.6513783931732178, 1.6382423639297485, 1.625150203704834, 1.6121032238006592, 1.59910249710083, 1.5861490964889526, 1.573244333267212, 1.5603891611099243, 1.5475850105285645, 1.5348331928253174, 1.5221349000930786, 1.5094914436340332, 1.4969043731689453, 1.484375, 1.4719048738479614, 1.4594954252243042, 1.447148323059082, 1.434865117073059, 1.422647476196289, 1.4104970693588257, 1.3984156847000122, 1.386405110359192, 1.3744672536849976, 1.3626039028167725, 1.3508172035217285, 1.339108943939209, 1.3274815082550049, 1.3159366846084595, 1.3044769763946533, 1.2931044101715088, 1.2818214893341064, 1.2706304788589478, 1.2595340013504028, 1.2485343217849731, 1.2376341819763184, 1.2268362045288086, 1.216143012046814, 1.2055575847625732, 1.195082664489746, 1.1847212314605713, 1.1744762659072876, 1.1643508672714233, 1.1543481349945068, 1.144471287727356, 1.1347235441207886, 1.1251084804534912, 1.1156294345855713, 1.1062897443771362, 1.097093105316162, 1.0880430936813354, 1.0791435241699219, 1.0703980922698975, 1.0618104934692383, 1.0533846616744995, 1.0451244115829468, 1.0370339155197144, 1.0291171073913574, 1.0213779211044312, 1.0138205289840698, 1.0064489841461182, 0.9992672801017761, 0.9922797679901123, 0.9854904413223267, 0.9789034724235535, 0.9725229144096375, 0.9663528800010681, 0.960397481918335, 0.9546606540679932, 0.9491463899612427, 0.9438586235046387, 0.9388011693954468, 0.9339777827262878, 0.9293920397758484, 0.9250475168228149, 0.9209476113319397, 0.9170956611633301, 0.9134947657585144, 0.9101478457450867, 0.9070578217506409, 0.9042272567749023, 0.9016586542129517, 0.8993541598320007, 0.8973158597946167, 0.8955456018447876, 0.8940449953079224, 0.8928152918815613, 0.8918576836585999, 0.8911730647087097, 0.8907620310783386, 0.90625, 0.9063847064971924, 0.9067886471748352, 0.9074614644050598, 0.9084026217460632, 0.9096112251281738, 0.9110862612724304, 0.9128263592720032, 0.9148300886154175, 0.9170956611633301, 0.9196211695671082, 0.9224045276641846, 0.9254432916641235, 0.928735077381134, 0.9322771430015564, 0.9360666275024414, 0.9401005506515503, 0.9443758130073547, 0.9488891363143921, 0.9536371827125549, 0.9586163759231567, 0.963823139667511, 0.9692538976669312, 0.9749048352241516, 0.9807721972465515, 0.9868520498275757, 0.9931405186653137, 0.9996337294578552, 1.0063276290893555, 1.0132182836532593, 1.0203016996383667, 1.0275739431381226, 1.0350309610366821, 1.0426688194274902, 1.0504834651947021, 1.0584712028503418, 1.0666279792785645, 1.0749499797821045, 1.0834335088729858, 1.0920746326446533, 1.1008696556091309, 1.109815001487732, 1.11890709400177, 1.1281423568725586, 1.1375172138214111, 1.1470282077789307, 1.1566722393035889, 1.1664457321166992, 1.1763455867767334, 1.186368703842163, 1.1965118646621704, 1.2067720890045166, 1.217146396636963, 1.22763192653656, 1.2382258176803589, 1.2489253282546997, 1.2597277164459229, 1.2706304788589478, 1.2816309928894043, 1.292726755142212, 1.3039153814315796, 1.3151943683624268, 1.3265615701675415, 1.3380146026611328, 1.3495514392852783, 1.3611698150634766, 1.3728677034378052, 1.3846430778503418, 1.396493911743164, 1.4084184169769287, 1.4204148054122925, 1.432481050491333, 1.4446154832839966, 1.456816554069519, 1.4690823554992676, 1.4814114570617676, 1.4938023090362549, 1.5062532424926758, 1.5187628269195557, 1.5313297510147095, 1.543952465057373, 1.5566295385360718, 1.5693598985671997, 1.5821421146392822, 1.5949749946594238, 1.607857346534729, 1.6207878589630127, 1.633765459060669, 1.6467890739440918, 1.6598575115203857, 1.6729698181152344, 1.6861250400543213, 1.699321985244751, 1.7125598192214966, 1.7258377075195312, 1.7391544580459595, 1.752509355545044, 1.7659015655517578, 1.7793301343917847, 1.7927942276000977, 1.806293249130249, 1.8198262453079224, 1.8333925008773804, 1.8469913005828857, 1.8606219291687012, 1.8742836713790894, 1.8879759311676025, 1.9016979932785034, 1.9154491424560547, 1.9292287826538086, 1.943036437034607, 1.9568713903427124, 1.9707331657409668, 1.9846210479736328, 1.9985345602035522, 2.0124733448028564, 2.0264365673065186, 2.040424108505249, 2.0544350147247314, 2.0684690475463867, 2.0825259685516357, 2.096604824066162, 2.110705614089966, 2.1248276233673096, 2.1389706134796143, 2.1531341075897217, 2.1673176288604736, 2.181520938873291, 2.1957433223724365, 2.181520938873291, 2.1673176288604736, 2.1531341075897217, 2.1389706134796143, 2.1248276233673096, 2.110705614089966, 2.096604824066162, 2.0825259685516357, 2.0684690475463867, 2.0544350147247314, 2.040424108505249, 2.0264365673065186, 2.0124733448028564, 1.9985345602035522, 1.9846210479736328, 1.9707331657409668, 1.9568713903427124, 1.943036437034607, 1.9292287826538086, 1.9154491424560547, 1.9016979932785034, 1.8879759311676025, 1.8742836713790894, 1.8606219291687012, 1.8469913005828857, 1.8333925008773804, 1.8198262453079224, 1.806293249130249, 1.7927942276000977, 1.7793301343917847, 1.7659015655517578, 1.752509355545044, 1.7391544580459595, 1.7258377075195312, 1.7125598192214966, 1.699321985244751, 1.6861250400543213, 1.6729698181152344, 1.6598575115203857, 1.6467890739440918, 1.633765459060669, 1.6207878589630127, 1.607857346534729, 1.5949749946594238, 1.5821421146392822, 1.5693598985671997, 1.5566295385360718, 1.543952465057373, 1.5313297510147095, 1.5187628269195557, 1.5062532424926758, 1.4938023090362549, 1.4814114570617676, 1.4690823554992676, 1.456816554069519, 1.4446154832839966, 1.432481050491333, 1.4204148054122925, 1.4084184169769287, 1.396493911743164, 1.3846430778503418, 1.3728677034378052, 1.3611698150634766, 1.3495514392852783, 1.3380146026611328, 1.3265615701675415, 1.3151943683624268, 1.3039153814315796, 1.292726755142212, 1.2816309928894043, 1.2706304788589478, 1.2597277164459229, 1.2489253282546997, 1.2382258176803589, 1.22763192653656, 1.217146396636963, 1.2067720890045166, 1.1965118646621704, 1.186368703842163, 1.1763455867767334, 1.1664457321166992, 1.1566722393035889, 1.1470282077789307, 1.1375172138214111, 1.1281423568725586, 1.11890709400177, 1.109815001487732, 1.1008696556091309, 1.0920746326446533, 1.0834335088729858, 1.0749499797821045, 1.0666279792785645, 1.0584712028503418, 1.0504834651947021, 1.0426688194274902, 1.0350309610366821, 1.0275739431381226, 1.0203016996383667, 1.0132182836532593, 1.0063276290893555, 0.9996337294578552, 0.9931405186653137, 0.9868520498275757, 0.9807721972465515, 0.9749048352241516, 0.9692538976669312, 0.963823139667511, 0.9586163759231567, 0.9536371827125549, 0.9488891363143921, 0.9443758130073547, 0.9401005506515503, 0.9360666275024414, 0.9322771430015564, 0.928735077381134, 0.9254432916641235, 0.9224045276641846, 0.9196211695671082, 0.9170956611633301, 0.9148300886154175, 0.9128263592720032, 0.9110862612724304, 0.9096112251281738, 0.9084026217460632, 0.9074614644050598, 0.9067886471748352, 0.9063847064971924, 0.921875, 0.9220073819160461, 0.9224045276641846, 0.9230659604072571, 0.9239912033081055, 0.9251794815063477, 0.9266296625137329, 0.9283406734466553, 0.9303109645843506, 0.9325389862060547, 0.93502277135849, 0.9377603530883789, 0.9407495856285095, 0.9439879655838013, 0.9474729895591736, 0.9512019753456116, 0.9551720023155212, 0.9593800902366638, 0.963823139667511, 0.9684979319572449, 0.9734011292457581, 0.9785292744636536, 0.9838788509368896, 0.9894462823867798, 0.9952278733253479, 1.0012199878692627, 1.0074187517166138, 1.0138205289840698, 1.0204213857650757, 1.0272175073623657, 1.0342050790786743, 1.0413801670074463, 1.048738956451416, 1.0562777519226074, 1.0639925003051758, 1.071879506111145, 1.079935073852539, 1.0881553888320923, 1.096536636352539, 1.1050752401351929, 1.1137677431106567, 1.122610330581665, 1.1315995454788208, 1.1407320499420166, 1.150004267692566, 1.1594128608703613, 1.1689547300338745, 1.1786264181137085, 1.188424825668335, 1.1983468532562256, 1.208389401435852, 1.2185496091842651, 1.228824496269226, 1.2392112016677856, 1.2497069835662842, 1.260309100151062, 1.2710148096084595, 1.2818214893341064, 1.292726755142212, 1.3037281036376953, 1.3148231506347656, 1.3260093927383423, 1.3372845649719238, 1.348646640777588, 1.3600932359695435, 1.3716223239898682, 1.38323175907135, 1.3949196338653564, 1.4066839218139648, 1.418522834777832, 1.4304343461990356, 1.4424169063568115, 1.4544684886932373, 1.4665875434875488, 1.4787722826004028, 1.4910212755203247, 1.5033328533172607, 1.5157055854797363, 1.5281378030776978, 1.54062819480896, 1.5531753301620483, 1.5657777786254883, 1.5784343481063843, 1.5911437273025513, 1.6039044857025146, 1.616715669631958, 1.6295758485794067, 1.6424840688705444, 1.655439019203186, 1.6684398651123047, 1.6814851760864258, 1.694574236869812, 1.7077059745788574, 1.720879316329956, 1.734093427658081, 1.747347354888916, 1.7606401443481445, 1.7739708423614502, 1.7873388528823853, 1.8007431030273438, 1.814182996749878, 1.8276575803756714, 1.8411661386489868, 1.854707956314087, 1.8682821989059448, 1.8818883895874023, 1.8955256938934326, 1.9091933965682983, 1.9228910207748413, 1.9366177320480347, 1.9503730535507202, 1.9641563892364502, 1.9779670238494873, 1.9918044805526733, 2.0056681632995605, 2.0195577144622803, 2.0334722995758057, 2.0474116802215576, 2.061375141143799, 2.07536244392395, 2.0893728733062744, 2.1034059524536133, 2.1174614429473877, 2.1315386295318604, 2.145637273788452, 2.159757137298584, 2.1738975048065186, 2.1880578994750977, 2.2022383213043213, 2.1880578994750977, 2.1738975048065186, 2.159757137298584, 2.145637273788452, 2.1315386295318604, 2.1174614429473877, 2.1034059524536133, 2.0893728733062744, 2.07536244392395, 2.061375141143799, 2.0474116802215576, 2.0334722995758057, 2.0195577144622803, 2.0056681632995605, 1.9918044805526733, 1.9779670238494873, 1.9641563892364502, 1.9503730535507202, 1.9366177320480347, 1.9228910207748413, 1.9091933965682983, 1.8955256938934326, 1.8818883895874023, 1.8682821989059448, 1.854707956314087, 1.8411661386489868, 1.8276575803756714, 1.814182996749878, 1.8007431030273438, 1.7873388528823853, 1.7739708423614502, 1.7606401443481445, 1.747347354888916, 1.734093427658081, 1.720879316329956, 1.7077059745788574, 1.694574236869812, 1.6814851760864258, 1.6684398651123047, 1.655439019203186, 1.6424840688705444, 1.6295758485794067, 1.616715669631958, 1.6039044857025146, 1.5911437273025513, 1.5784343481063843, 1.5657777786254883, 1.5531753301620483, 1.54062819480896, 1.5281378030776978, 1.5157055854797363, 1.5033328533172607, 1.4910212755203247, 1.4787722826004028, 1.4665875434875488, 1.4544684886932373, 1.4424169063568115, 1.4304343461990356, 1.418522834777832, 1.4066839218139648, 1.3949196338653564, 1.38323175907135, 1.3716223239898682, 1.3600932359695435, 1.348646640777588, 1.3372845649719238, 1.3260093927383423, 1.3148231506347656, 1.3037281036376953, 1.292726755142212, 1.2818214893341064, 1.2710148096084595, 1.260309100151062, 1.2497069835662842, 1.2392112016677856, 1.228824496269226, 1.2185496091842651, 1.208389401435852, 1.1983468532562256, 1.188424825668335, 1.1786264181137085, 1.1689547300338745, 1.1594128608703613, 1.150004267692566, 1.1407320499420166, 1.1315995454788208, 1.122610330581665, 1.1137677431106567, 1.1050752401351929, 1.096536636352539, 1.0881553888320923, 1.079935073852539, 1.071879506111145, 1.0639925003051758, 1.0562777519226074, 1.048738956451416, 1.0413801670074463, 1.0342050790786743, 1.0272175073623657, 1.0204213857650757, 1.0138205289840698, 1.0074187517166138, 1.0012199878692627, 0.9952278733253479, 0.9894462823867798, 0.9838788509368896, 0.9785292744636536, 0.9734011292457581, 0.9684979319572449, 0.963823139667511, 0.9593800902366638, 0.9551720023155212, 0.9512019753456116, 0.9474729895591736, 0.9439879655838013, 0.9407495856285095, 0.9377603530883789, 0.93502277135849, 0.9325389862060547, 0.9303109645843506, 0.9283406734466553, 0.9266296625137329, 0.9251794815063477, 0.9239912033081055, 0.9230659604072571, 0.9224045276641846, 0.9220073819160461, 0.9375, 0.9376301765441895, 0.9380207061767578, 0.9386711716651917, 0.939581036567688, 0.9407495856285095, 0.9421758651733398, 0.9438586235046387, 0.9457966089248657, 0.9479882121086121, 0.9504316449165344, 0.953125, 0.9560661315917969, 0.9592528343200684, 0.9626826047897339, 0.9663528800010681, 0.9702609181404114, 0.9744038581848145, 0.9787787199020386, 0.9833824634552002, 0.9882117509841919, 0.9932634234428406, 0.998534083366394, 1.0040202140808105, 1.009718418121338, 1.015625, 1.0217363834381104, 1.0280489921569824, 1.0345591306686401, 1.0412629842758179, 1.0481568574905396, 1.0552371740341187, 1.0625, 1.069941759109497, 1.0775587558746338, 1.0853471755981445, 1.0933034420013428, 1.101423978805542, 1.1097050905227661, 1.1181432008743286, 1.126734733581543, 1.1354763507843018, 1.144364595413208, 1.1533960103988647, 1.1625672578811646, 1.171875, 1.1813161373138428, 1.190887451171875, 1.2005858421325684, 1.210408091545105, 1.2203514575958252, 1.2304129600524902, 1.2405896186828613, 1.2508785724639893, 1.261277198791504, 1.2717828750610352, 1.2823927402496338, 1.2931044101715088, 1.3039153814315796, 1.3148231506347656, 1.3258252143859863, 1.3369194269180298, 1.348103404045105, 1.359375, 1.370732069015503, 1.3821723461151123, 1.3936939239501953, 1.4052947759628296, 1.4169729948043823, 1.4287266731262207, 1.4405537843704224, 1.4524527788162231, 1.4644218683242798, 1.4764591455459595, 1.4885631799697876, 1.5007323026657104, 1.5129648447036743, 1.5252593755722046, 1.537614345550537, 1.5500283241271973, 1.5625, 1.5750279426574707, 1.5876107215881348, 1.6002471446990967, 1.612936019897461, 1.625675916671753, 1.6384658813476562, 1.6513044834136963, 1.6641908884048462, 1.677123785018921, 1.690102219581604, 1.703125, 1.716191291809082, 1.7293000221252441, 1.74245023727417, 1.755640983581543, 1.7688714265823364, 1.7821407318115234, 1.795447826385498, 1.808791995048523, 1.8221725225448608, 1.8355884552001953, 1.849039077758789, 1.8625235557556152, 1.8760414123535156, 1.8895916938781738, 1.903173804283142, 1.9167869091033936, 1.9304306507110596, 1.9441041946411133, 1.957806944847107, 1.9715381860733032, 1.9852975606918335, 1.999084234237671, 2.0128979682922363, 2.026737689971924, 2.0406033992767334, 2.0544943809509277, 2.0684101581573486, 2.082350015640259, 2.096313714981079, 2.1103007793426514, 2.1243104934692383, 2.13834285736084, 2.1523969173431396, 2.1664726734161377, 2.1805694103240967, 2.1946868896484375, 2.208824634552002, 2.1946868896484375, 2.1805694103240967, 2.1664726734161377, 2.1523969173431396, 2.13834285736084, 2.1243104934692383, 2.1103007793426514, 2.096313714981079, 2.082350015640259, 2.0684101581573486, 2.0544943809509277, 2.0406033992767334, 2.026737689971924, 2.0128979682922363, 1.999084234237671, 1.9852975606918335, 1.9715381860733032, 1.957806944847107, 1.9441041946411133, 1.9304306507110596, 1.9167869091033936, 1.903173804283142, 1.8895916938781738, 1.8760414123535156, 1.8625235557556152, 1.849039077758789, 1.8355884552001953, 1.8221725225448608, 1.808791995048523, 1.795447826385498, 1.7821407318115234, 1.7688714265823364, 1.755640983581543, 1.74245023727417, 1.7293000221252441, 1.716191291809082, 1.703125, 1.690102219581604, 1.677123785018921, 1.6641908884048462, 1.6513044834136963, 1.6384658813476562, 1.625675916671753, 1.612936019897461, 1.6002471446990967, 1.5876107215881348, 1.5750279426574707, 1.5625, 1.5500283241271973, 1.537614345550537, 1.5252593755722046, 1.5129648447036743, 1.5007323026657104, 1.4885631799697876, 1.4764591455459595, 1.4644218683242798, 1.4524527788162231, 1.4405537843704224, 1.4287266731262207, 1.4169729948043823, 1.4052947759628296, 1.3936939239501953, 1.3821723461151123, 1.370732069015503, 1.359375, 1.348103404045105, 1.3369194269180298, 1.3258252143859863, 1.3148231506347656, 1.3039153814315796, 1.2931044101715088, 1.2823927402496338, 1.2717828750610352, 1.261277198791504, 1.2508785724639893, 1.2405896186828613, 1.2304129600524902, 1.2203514575958252, 1.210408091545105, 1.2005858421325684, 1.190887451171875, 1.1813161373138428, 1.171875, 1.1625672578811646, 1.1533960103988647, 1.144364595413208, 1.1354763507843018, 1.126734733581543, 1.1181432008743286, 1.1097050905227661, 1.101423978805542, 1.0933034420013428, 1.0853471755981445, 1.0775587558746338, 1.069941759109497, 1.0625, 1.0552371740341187, 1.0481568574905396, 1.0412629842758179, 1.0345591306686401, 1.0280489921569824, 1.0217363834381104, 1.015625, 1.009718418121338, 1.0040202140808105, 0.998534083366394, 0.9932634234428406, 0.9882117509841919, 0.9833824634552002, 0.9787787199020386, 0.9744038581848145, 0.9702609181404114, 0.9663528800010681, 0.9626826047897339, 0.9592528343200684, 0.9560661315917969, 0.953125, 0.9504316449165344, 0.9479882121086121, 0.9457966089248657, 0.9438586235046387, 0.9421758651733398, 0.9407495856285095, 0.939581036567688, 0.9386711716651917, 0.9380207061767578, 0.9376301765441895, 0.953125, 0.9532530903816223, 0.9536371827125549, 0.954276978969574, 0.9551720023155212, 0.9563214778900146, 0.9577245712280273, 0.9593800902366638, 0.9612867832183838, 0.9634431004524231, 0.9658474922180176, 0.9684979319572449, 0.9713925719261169, 0.9745291471481323, 0.9779053330421448, 0.9815186858177185, 0.9853665828704834, 0.9894462823867798, 0.9937549233436584, 0.9982895255088806, 1.0030471086502075, 1.0080244541168213, 1.0132182836532593, 1.0186253786087036, 1.0242422819137573, 1.030065655708313, 1.0360918045043945, 1.042317509651184, 1.048738956451416, 1.055352807044983, 1.0621552467346191, 1.0691428184509277, 1.0763118267059326, 1.0836588144302368, 1.0911799669265747, 1.0988719463348389, 1.1067310571670532, 1.1147537231445312, 1.122936487197876, 1.1312758922576904, 1.1397684812545776, 1.1484109163284302, 1.157199740409851, 1.1661317348480225, 1.175203561782837, 1.1844121217727661, 1.1937540769577026, 1.2032264471054077, 1.212826132774353, 1.2225501537322998, 1.2323955297470093, 1.2423595190048218, 1.252439022064209, 1.2626315355300903, 1.2729341983795166, 1.2833442687988281, 1.2938594818115234, 1.3044769763946533, 1.3151943683624268, 1.3260093927383423, 1.3369194269180298, 1.3479223251342773, 1.359015703201294, 1.3701975345611572, 1.3814656734466553, 1.392817735671997, 1.404252052307129, 1.4157663583755493, 1.4273589849472046, 1.4390276670455933, 1.4507709741592407, 1.462586760520935, 1.4744735956192017, 1.4864294528961182, 1.4984530210494995, 1.510542392730713, 1.5226961374282837, 1.5349127054214478, 1.5471906661987305, 1.5595284700393677, 1.5719246864318848, 1.5843781232833862, 1.596887230873108, 1.6094508171081543, 1.6220676898956299, 1.63473641872406, 1.6474560499191284, 1.6602251529693604, 1.6730427742004395, 1.6859078407287598, 1.6988190412521362, 1.7117756605148315, 1.7247763872146606, 1.7378203868865967, 1.7509065866470337, 1.7640341520309448, 1.7772021293640137, 1.7904095649719238, 1.803655743598938, 1.8169395923614502, 1.8302605152130127, 1.843617558479309, 1.857010006904602, 1.8704371452331543, 1.883898138999939, 1.8973922729492188, 1.910918951034546, 1.924477458000183, 1.9380669593811035, 1.951686978340149, 1.965336799621582, 1.9790159463882446, 1.9927235841751099, 2.0064592361450195, 2.0202224254608154, 2.03401255607605, 2.0478289127349854, 2.061671257019043, 2.0755388736724854, 2.0894312858581543, 2.1033477783203125, 2.11728835105896, 2.1312522888183594, 2.1452391147613525, 2.1592483520507812, 2.1732797622680664, 2.1873326301574707, 2.201406717300415, 2.215501546859741, 2.201406717300415, 2.1873326301574707, 2.1732797622680664, 2.1592483520507812, 2.1452391147613525, 2.1312522888183594, 2.11728835105896, 2.1033477783203125, 2.0894312858581543, 2.0755388736724854, 2.061671257019043, 2.0478289127349854, 2.03401255607605, 2.0202224254608154, 2.0064592361450195, 1.9927235841751099, 1.9790159463882446, 1.965336799621582, 1.951686978340149, 1.9380669593811035, 1.924477458000183, 1.910918951034546, 1.8973922729492188, 1.883898138999939, 1.8704371452331543, 1.857010006904602, 1.843617558479309, 1.8302605152130127, 1.8169395923614502, 1.803655743598938, 1.7904095649719238, 1.7772021293640137, 1.7640341520309448, 1.7509065866470337, 1.7378203868865967, 1.7247763872146606, 1.7117756605148315, 1.6988190412521362, 1.6859078407287598, 1.6730427742004395, 1.6602251529693604, 1.6474560499191284, 1.63473641872406, 1.6220676898956299, 1.6094508171081543, 1.596887230873108, 1.5843781232833862, 1.5719246864318848, 1.5595284700393677, 1.5471906661987305, 1.5349127054214478, 1.5226961374282837, 1.510542392730713, 1.4984530210494995, 1.4864294528961182, 1.4744735956192017, 1.462586760520935, 1.4507709741592407, 1.4390276670455933, 1.4273589849472046, 1.4157663583755493, 1.404252052307129, 1.392817735671997, 1.3814656734466553, 1.3701975345611572, 1.359015703201294, 1.3479223251342773, 1.3369194269180298, 1.3260093927383423, 1.3151943683624268, 1.3044769763946533, 1.2938594818115234, 1.2833442687988281, 1.2729341983795166, 1.2626315355300903, 1.252439022064209, 1.2423595190048218, 1.2323955297470093, 1.2225501537322998, 1.212826132774353, 1.2032264471054077, 1.1937540769577026, 1.1844121217727661, 1.175203561782837, 1.1661317348480225, 1.157199740409851, 1.1484109163284302, 1.1397684812545776, 1.1312758922576904, 1.122936487197876, 1.1147537231445312, 1.1067310571670532, 1.0988719463348389, 1.0911799669265747, 1.0836588144302368, 1.0763118267059326, 1.0691428184509277, 1.0621552467346191, 1.055352807044983, 1.048738956451416, 1.042317509651184, 1.0360918045043945, 1.030065655708313, 1.0242422819137573, 1.0186253786087036, 1.0132182836532593, 1.0080244541168213, 1.0030471086502075, 0.9982895255088806, 0.9937549233436584, 0.9894462823867798, 0.9853665828704834, 0.9815186858177185, 0.9779053330421448, 0.9745291471481323, 0.9713925719261169, 0.9684979319572449, 0.9658474922180176, 0.9634431004524231, 0.9612867832183838, 0.9593800902366638, 0.9577245712280273, 0.9563214778900146, 0.9551720023155212, 0.954276978969574, 0.9536371827125549, 0.9532530903816223, 0.96875, 0.9688760042190552, 0.9692538976669312, 0.969883382320404, 0.9707640409469604, 0.9718950986862183, 0.9732757210731506, 0.9749048352241516, 0.9767812490463257, 0.9789034724235535, 0.981269896030426, 0.9838788509368896, 0.986728310585022, 0.9898163080215454, 0.9931405186653137, 0.9966986775398254, 1.0004881620407104, 1.0045064687728882, 1.0087507963180542, 1.0132182836532593, 1.0179060697555542, 1.0228111743927002, 1.0279302597045898, 1.0332603454589844, 1.0387980937957764, 1.044540286064148, 1.0504834651947021, 1.056624412536621, 1.0629594326019287, 1.0694853067398071, 1.0761984586715698, 1.0830954313278198, 1.0901727676391602, 1.0974268913269043, 1.1048543453216553, 1.1124516725540161, 1.1202155351638794, 1.1281423568725586, 1.1362286806106567, 1.144471287727356, 1.1528667211532593, 1.1614116430282593, 1.170102834701538, 1.1789370775222778, 1.1879111528396606, 1.1970218420028687, 1.206266164779663, 1.2156410217285156, 1.2251434326171875, 1.2347705364227295, 1.2445192337036133, 1.2543867826461792, 1.2643705606460571, 1.2744675874710083, 1.2846752405166626, 1.294991135597229, 1.3054124116897583, 1.3159366846084595, 1.3265615701675415, 1.3372845649719238, 1.348103404045105, 1.359015703201294, 1.3700194358825684, 1.3811120986938477, 1.392291784286499, 1.4035564661026, 1.4149038791656494, 1.4263323545455933, 1.4378396272659302, 1.4494240283966064, 1.4610837697982788, 1.472816824913025, 1.4846216440200806, 1.496496558189392, 1.5084397792816162, 1.5204497575759888, 1.5325249433517456, 1.5446637868881226, 1.556864857673645, 1.5691266059875488, 1.5814476013183594, 1.5938265323638916, 1.60626220703125, 1.6187530755996704, 1.6312979459762573, 1.6438955068588257, 1.656544804573059, 1.669244408607483, 1.6819933652877808, 1.6947903633117676, 1.7076345682144165, 1.7205246686935425, 1.7334598302841187, 1.7464388608932495, 1.7594610452651978, 1.7725251913070679, 1.7856305837631226, 1.7987761497497559, 1.8119611740112305, 1.8251845836639404, 1.838445782661438, 1.8517438173294067, 1.8650779724121094, 1.8784472942352295, 1.8918513059616089, 1.9052891731262207, 1.9187601804733276, 1.9322636127471924, 1.9457987546920776, 1.9593650102615356, 1.9729617834091187, 1.9865883588790894, 2.000244140625, 2.0139286518096924, 2.0276410579681396, 2.0413808822631836, 2.055147886276245, 2.068941116333008, 2.0827603340148926, 2.096604824066162, 2.1104743480682373, 2.1243679523468018, 2.1382856369018555, 2.152226686477661, 2.1661908626556396, 2.1801774501800537, 2.194186210632324, 2.208216667175293, 2.2222683429718018, 2.208216667175293, 2.194186210632324, 2.1801774501800537, 2.1661908626556396, 2.152226686477661, 2.1382856369018555, 2.1243679523468018, 2.1104743480682373, 2.096604824066162, 2.0827603340148926, 2.068941116333008, 2.055147886276245, 2.0413808822631836, 2.0276410579681396, 2.0139286518096924, 2.000244140625, 1.9865883588790894, 1.9729617834091187, 1.9593650102615356, 1.9457987546920776, 1.9322636127471924, 1.9187601804733276, 1.9052891731262207, 1.8918513059616089, 1.8784472942352295, 1.8650779724121094, 1.8517438173294067, 1.838445782661438, 1.8251845836639404, 1.8119611740112305, 1.7987761497497559, 1.7856305837631226, 1.7725251913070679, 1.7594610452651978, 1.7464388608932495, 1.7334598302841187, 1.7205246686935425, 1.7076345682144165, 1.6947903633117676, 1.6819933652877808, 1.669244408607483, 1.656544804573059, 1.6438955068588257, 1.6312979459762573, 1.6187530755996704, 1.60626220703125, 1.5938265323638916, 1.5814476013183594, 1.5691266059875488, 1.556864857673645, 1.5446637868881226, 1.5325249433517456, 1.5204497575759888, 1.5084397792816162, 1.496496558189392, 1.4846216440200806, 1.472816824913025, 1.4610837697982788, 1.4494240283966064, 1.4378396272659302, 1.4263323545455933, 1.4149038791656494, 1.4035564661026, 1.392291784286499, 1.3811120986938477, 1.3700194358825684, 1.359015703201294, 1.348103404045105, 1.3372845649719238, 1.3265615701675415, 1.3159366846084595, 1.3054124116897583, 1.294991135597229, 1.2846752405166626, 1.2744675874710083, 1.2643705606460571, 1.2543867826461792, 1.2445192337036133, 1.2347705364227295, 1.2251434326171875, 1.2156410217285156, 1.206266164779663, 1.1970218420028687, 1.1879111528396606, 1.1789370775222778, 1.170102834701538, 1.1614116430282593, 1.1528667211532593, 1.144471287727356, 1.1362286806106567, 1.1281423568725586, 1.1202155351638794, 1.1124516725540161, 1.1048543453216553, 1.0974268913269043, 1.0901727676391602, 1.0830954313278198, 1.0761984586715698, 1.0694853067398071, 1.0629594326019287, 1.056624412536621, 1.0504834651947021, 1.044540286064148, 1.0387980937957764, 1.0332603454589844, 1.0279302597045898, 1.0228111743927002, 1.0179060697555542, 1.0132182836532593, 1.0087507963180542, 1.0045064687728882, 1.0004881620407104, 0.9966986775398254, 0.9931405186653137, 0.9898163080215454, 0.986728310585022, 0.9838788509368896, 0.981269896030426, 0.9789034724235535, 0.9767812490463257, 0.9749048352241516, 0.9732757210731506, 0.9718950986862183, 0.9707640409469604, 0.969883382320404, 0.9692538976669312, 0.9688760042190552, 0.984375, 0.9844989776611328, 0.9848709106445312, 0.9854904413223267, 0.9863571524620056, 0.9874703288078308, 0.9888291954994202, 0.9904327392578125, 0.9922797679901123, 0.9943689107894897, 0.9966986775398254, 0.9992672801017761, 1.002073049545288, 1.0051138401031494, 1.0083876848220825, 1.0118921995162964, 1.015625, 1.0195835828781128, 1.0237654447555542, 1.028167724609375, 1.0327876806259155, 1.037622332572937, 1.0426688194274902, 1.0479239225387573, 1.0533846616744995, 1.0590476989746094, 1.0649099349975586, 1.0709681510925293, 1.077218770980835, 1.0836588144302368, 1.0902847051620483, 1.097093105316162, 1.1040806770324707, 1.1112440824508667, 1.1185797452926636, 1.126084566116333, 1.1337549686431885, 1.141587734222412, 1.1495795249938965, 1.1577271223068237, 1.1660270690917969, 1.1744762659072876, 1.183071494102478, 1.1918096542358398, 1.2006874084472656, 1.2097020149230957, 1.2188501358032227, 1.2281290292739868, 1.2375354766845703, 1.247066855430603, 1.2567201852798462, 1.2664927244186401, 1.2763817310333252, 1.2863845825195312, 1.296498417854309, 1.3067208528518677, 1.3170493841171265, 1.3274815082550049, 1.3380146026611328, 1.348646640777588, 1.359375, 1.3701975345611572, 1.3811120986938477, 1.3921164274215698, 1.4032084941864014, 1.4143861532211304, 1.425647497177124, 1.4369903802871704, 1.4484130144119263, 1.4599136114120483, 1.4714901447296143, 1.4831409454345703, 1.4948642253875732, 1.5066584348678589, 1.5185216665267944, 1.5304526090621948, 1.5424494743347168, 1.5545108318328857, 1.5666351318359375, 1.578821063041687, 1.5910669565200806, 1.6033717393875122, 1.6157337427139282, 1.6281520128250122, 1.640625, 1.6531516313552856, 1.6657304763793945, 1.6783607006072998, 1.6910408735275269, 1.7037699222564697, 1.716546893119812, 1.7293705940246582, 1.742240071296692, 1.7551542520523071, 1.7681121826171875, 1.7811129093170166, 1.7941555976867676, 1.8072391748428345, 1.8203628063201904, 1.8335256576538086, 1.846726894378662, 1.8599658012390137, 1.8732413053512573, 1.8865529298782349, 1.8998997211456299, 1.9132810831069946, 1.9266961812973022, 1.940144419670105, 1.953624963760376, 1.9671372175216675, 1.9806805849075317, 1.994254469871521, 2.0078580379486084, 2.021491050720215, 2.0351524353027344, 2.048842191696167, 2.062559127807617, 2.076303243637085, 2.090073823928833, 2.103870153427124, 2.117691993713379, 2.1315386295318604, 2.1454098224639893, 2.1593048572540283, 2.1732234954833984, 2.1871652603149414, 2.20112943649292, 2.215115785598755, 2.229124069213867, 2.215115785598755, 2.20112943649292, 2.1871652603149414, 2.1732234954833984, 2.1593048572540283, 2.1454098224639893, 2.1315386295318604, 2.117691993713379, 2.103870153427124, 2.090073823928833, 2.076303243637085, 2.062559127807617, 2.048842191696167, 2.0351524353027344, 2.021491050720215, 2.0078580379486084, 1.994254469871521, 1.9806805849075317, 1.9671372175216675, 1.953624963760376, 1.940144419670105, 1.9266961812973022, 1.9132810831069946, 1.8998997211456299, 1.8865529298782349, 1.8732413053512573, 1.8599658012390137, 1.846726894378662, 1.8335256576538086, 1.8203628063201904, 1.8072391748428345, 1.7941555976867676, 1.7811129093170166, 1.7681121826171875, 1.7551542520523071, 1.742240071296692, 1.7293705940246582, 1.716546893119812, 1.7037699222564697, 1.6910408735275269, 1.6783607006072998, 1.6657304763793945, 1.6531516313552856, 1.640625, 1.6281520128250122, 1.6157337427139282, 1.6033717393875122, 1.5910669565200806, 1.578821063041687, 1.5666351318359375, 1.5545108318328857, 1.5424494743347168, 1.5304526090621948, 1.5185216665267944, 1.5066584348678589, 1.4948642253875732, 1.4831409454345703, 1.4714901447296143, 1.4599136114120483, 1.4484130144119263, 1.4369903802871704, 1.425647497177124, 1.4143861532211304, 1.4032084941864014, 1.3921164274215698, 1.3811120986938477, 1.3701975345611572, 1.359375, 1.348646640777588, 1.3380146026611328, 1.3274815082550049, 1.3170493841171265, 1.3067208528518677, 1.296498417854309, 1.2863845825195312, 1.2763817310333252, 1.2664927244186401, 1.2567201852798462, 1.247066855430603, 1.2375354766845703, 1.2281290292739868, 1.2188501358032227, 1.2097020149230957, 1.2006874084472656, 1.1918096542358398, 1.183071494102478, 1.1744762659072876, 1.1660270690917969, 1.1577271223068237, 1.1495795249938965, 1.141587734222412, 1.1337549686431885, 1.126084566116333, 1.1185797452926636, 1.1112440824508667, 1.1040806770324707, 1.097093105316162, 1.0902847051620483, 1.0836588144302368, 1.077218770980835, 1.0709681510925293, 1.0649099349975586, 1.0590476989746094, 1.0533846616744995, 1.0479239225387573, 1.0426688194274902, 1.037622332572937, 1.0327876806259155, 1.028167724609375, 1.0237654447555542, 1.0195835828781128, 1.015625, 1.0118921995162964, 1.0083876848220825, 1.0051138401031494, 1.002073049545288, 0.9992672801017761, 0.9966986775398254, 0.9943689107894897, 0.9922797679901123, 0.9904327392578125, 0.9888291954994202, 0.9874703288078308, 0.9863571524620056, 0.9854904413223267, 0.9848709106445312, 0.9844989776611328, 1.0, 1.0001220703125, 1.0004881620407104, 1.0010980367660522, 1.0019512176513672, 1.0030471086502075, 1.0043848752975464, 1.005963683128357, 1.007782220840454, 1.0098392963409424, 1.0121334791183472, 1.0146629810333252, 1.0174262523651123, 1.0204213857650757, 1.0236462354660034, 1.0270986557006836, 1.0307763814926147, 1.0346770286560059, 1.0387980937957764, 1.0431369543075562, 1.0476908683776855, 1.0524570941925049, 1.057432770729065, 1.062614917755127, 1.0680004358291626, 1.0735864639282227, 1.0793697834014893, 1.0853471755981445, 1.0915155410766602, 1.0978716611862183, 1.104412317276001, 1.1111341714859009, 1.1180340051651, 1.1251084804534912, 1.1323543787002563, 1.1397684812545776, 1.1473474502563477, 1.1550880670547485, 1.1629871129989624, 1.1710413694381714, 1.1792476177215576, 1.1876027584075928, 1.1961036920547485, 1.2047473192214966, 1.2135305404663086, 1.2224502563476562, 1.2315037250518799, 1.2406879663467407, 1.25, 1.259437084197998, 1.268996238708496, 1.2786749601364136, 1.2884705066680908, 1.2983801364898682, 1.308401346206665, 1.3185315132141113, 1.328768253326416, 1.339108943939209, 1.3495514392852783, 1.3600932359695435, 1.370732069015503, 1.3814656734466553, 1.392291784286499, 1.4032084941864014, 1.4142135381698608, 1.425304889678955, 1.4364806413650513, 1.4477386474609375, 1.45907723903656, 1.470494270324707, 1.4819881916046143, 1.493557095527649, 1.5051993131637573, 1.5169130563735962, 1.528696894645691, 1.5405489206314087, 1.5524678230285645, 1.5644519329071045, 1.5764998197555542, 1.5886099338531494, 1.6007810831069946, 1.6130117177963257, 1.625300407409668, 1.6376460790634155, 1.6500473022460938, 1.6625028848648071, 1.6750116348266602, 1.6875723600387573, 1.7001838684082031, 1.712844967842102, 1.7255547046661377, 1.738312005996704, 1.7511156797409058, 1.7639648914337158, 1.7768585681915283, 1.7897958755493164, 1.8027756214141846, 1.8157970905303955, 1.8288593292236328, 1.8419615030288696, 1.855102777481079, 1.8682821989059448, 1.881499171257019, 1.8947527408599854, 1.9080421924591064, 1.921366810798645, 1.9347258806228638, 1.9481185674667358, 1.961544394493103, 1.9750025272369385, 1.9884922504425049, 2.0020132064819336, 2.015564441680908, 2.0291454792022705, 2.0427558422088623, 2.0563948154449463, 2.0700619220733643, 2.083756446838379, 2.097477912902832, 2.1112260818481445, 2.125, 2.1387994289398193, 2.1526236534118652, 2.1664726734161377, 2.1803455352783203, 2.194241762161255, 2.2081613540649414, 2.2221035957336426, 2.2360680103302, 2.2221035957336426, 2.2081613540649414, 2.194241762161255, 2.1803455352783203, 2.1664726734161377, 2.1526236534118652, 2.1387994289398193, 2.125, 2.1112260818481445, 2.097477912902832, 2.083756446838379, 2.0700619220733643, 2.0563948154449463, 2.0427558422088623, 2.0291454792022705, 2.015564441680908, 2.0020132064819336, 1.9884922504425049, 1.9750025272369385, 1.961544394493103, 1.9481185674667358, 1.9347258806228638, 1.921366810798645, 1.9080421924591064, 1.8947527408599854, 1.881499171257019, 1.8682821989059448, 1.855102777481079, 1.8419615030288696, 1.8288593292236328, 1.8157970905303955, 1.8027756214141846, 1.7897958755493164, 1.7768585681915283, 1.7639648914337158, 1.7511156797409058, 1.738312005996704, 1.7255547046661377, 1.712844967842102, 1.7001838684082031, 1.6875723600387573, 1.6750116348266602, 1.6625028848648071, 1.6500473022460938, 1.6376460790634155, 1.625300407409668, 1.6130117177963257, 1.6007810831069946, 1.5886099338531494, 1.5764998197555542, 1.5644519329071045, 1.5524678230285645, 1.5405489206314087, 1.528696894645691, 1.5169130563735962, 1.5051993131637573, 1.493557095527649, 1.4819881916046143, 1.470494270324707, 1.45907723903656, 1.4477386474609375, 1.4364806413650513, 1.425304889678955, 1.4142135381698608, 1.4032084941864014, 1.392291784286499, 1.3814656734466553, 1.370732069015503, 1.3600932359695435, 1.3495514392852783, 1.339108943939209, 1.328768253326416, 1.3185315132141113, 1.308401346206665, 1.2983801364898682, 1.2884705066680908, 1.2786749601364136, 1.268996238708496, 1.259437084197998, 1.25, 1.2406879663467407, 1.2315037250518799, 1.2224502563476562, 1.2135305404663086, 1.2047473192214966, 1.1961036920547485, 1.1876027584075928, 1.1792476177215576, 1.1710413694381714, 1.1629871129989624, 1.1550880670547485, 1.1473474502563477, 1.1397684812545776, 1.1323543787002563, 1.1251084804534912, 1.1180340051651, 1.1111341714859009, 1.104412317276001, 1.0978716611862183, 1.0915155410766602, 1.0853471755981445, 1.0793697834014893, 1.0735864639282227, 1.0680004358291626, 1.062614917755127, 1.057432770729065, 1.0524570941925049, 1.0476908683776855, 1.0431369543075562, 1.0387980937957764, 1.0346770286560059, 1.0307763814926147, 1.0270986557006836, 1.0236462354660034, 1.0204213857650757, 1.0174262523651123, 1.0146629810333252, 1.0121334791183472, 1.0098392963409424, 1.007782220840454, 1.005963683128357, 1.0043848752975464, 1.0030471086502075, 1.0019512176513672, 1.0010980367660522, 1.0004881620407104, 1.0001220703125, 1.015625, 1.0157451629638672, 1.0161056518554688, 1.016706109046936, 1.01754629611969, 1.0186253786087036, 1.0199427604675293, 1.0214974880218506, 1.023288369178772, 1.0253143310546875, 1.0275739431381226, 1.030065655708313, 1.0327876806259155, 1.0357383489608765, 1.0389156341552734, 1.042317509651184, 1.045941710472107, 1.04978609085083, 1.0538480281829834, 1.0581251382827759, 1.062614917755127, 1.0673145055770874, 1.0722211599349976, 1.0773321390151978, 1.0826444625854492, 1.0881553888320923, 1.0938615798950195, 1.0997602939605713, 1.1058483123779297, 1.1121225357055664, 1.1185797452926636, 1.1252169609069824, 1.132030963897705, 1.1390185356140137, 1.1461765766143799, 1.1535017490386963, 1.1609910726547241, 1.1686413288116455, 1.1764494180679321, 1.1844121217727661, 1.1925263404846191, 1.2007890939712524, 1.2091972827911377, 1.2177479267120361, 1.226438045501709, 1.2352646589279175, 1.2442249059677124, 1.2533159255981445, 1.2625348567962646, 1.2718788385391235, 1.281345248222351, 1.2909314632415771, 1.3006346225738525, 1.3104522228240967, 1.3203818798065186, 1.3304208517074585, 1.3405667543411255, 1.3508172035217285, 1.3611698150634766, 1.3716223239898682, 1.3821723461151123, 1.392817735671997, 1.4035564661026, 1.4143861532211304, 1.425304889678955, 1.4363106489181519, 1.4474014043807983, 1.4585751295089722, 1.46983003616333, 1.4811643362045288, 1.492576003074646, 1.5040634870529175, 1.515625, 1.5272588729858398, 1.5389633178710938, 1.5507370233535767, 1.5625780820846558, 1.5744853019714355, 1.5864570140838623, 1.5984916687011719, 1.6105881929397583, 1.6227447986602783, 1.634960412979126, 1.6472337245941162, 1.6595633029937744, 1.671947956085205, 1.6843866109848022, 1.6968778371810913, 1.7094206809997559, 1.7220139503479004, 1.7346564531326294, 1.747347354888916, 1.7600853443145752, 1.77286958694458, 1.7856988906860352, 1.7985725402832031, 1.811489462852478, 1.8244487047195435, 1.837449550628662, 1.8504908084869385, 1.8635720014572144, 1.8766919374465942, 1.8898500204086304, 1.903045415878296, 1.9162774085998535, 1.9295451641082764, 1.9428479671478271, 1.9561851024627686, 1.9695558547973633, 1.9829596281051636, 1.9963957071304321, 2.0098633766174316, 2.023362159729004, 2.036891222000122, 2.050450086593628, 2.0640382766723633, 2.077655076980591, 2.0912997722625732, 2.1049723625183105, 2.1186716556549072, 2.132397413253784, 2.1461493968963623, 2.159926652908325, 2.1737289428710938, 2.1875557899475098, 2.201406717300415, 2.2152812480926514, 2.2291789054870605, 2.2430992126464844, 2.2291789054870605, 2.2152812480926514, 2.201406717300415, 2.1875557899475098, 2.1737289428710938, 2.159926652908325, 2.1461493968963623, 2.132397413253784, 2.1186716556549072, 2.1049723625183105, 2.0912997722625732, 2.077655076980591, 2.0640382766723633, 2.050450086593628, 2.036891222000122, 2.023362159729004, 2.0098633766174316, 1.9963957071304321, 1.9829596281051636, 1.9695558547973633, 1.9561851024627686, 1.9428479671478271, 1.9295451641082764, 1.9162774085998535, 1.903045415878296, 1.8898500204086304, 1.8766919374465942, 1.8635720014572144, 1.8504908084869385, 1.837449550628662, 1.8244487047195435, 1.811489462852478, 1.7985725402832031, 1.7856988906860352, 1.77286958694458, 1.7600853443145752, 1.747347354888916, 1.7346564531326294, 1.7220139503479004, 1.7094206809997559, 1.6968778371810913, 1.6843866109848022, 1.671947956085205, 1.6595633029937744, 1.6472337245941162, 1.634960412979126, 1.6227447986602783, 1.6105881929397583, 1.5984916687011719, 1.5864570140838623, 1.5744853019714355, 1.5625780820846558, 1.5507370233535767, 1.5389633178710938, 1.5272588729858398, 1.515625, 1.5040634870529175, 1.492576003074646, 1.4811643362045288, 1.46983003616333, 1.4585751295089722, 1.4474014043807983, 1.4363106489181519, 1.425304889678955, 1.4143861532211304, 1.4035564661026, 1.392817735671997, 1.3821723461151123, 1.3716223239898682, 1.3611698150634766, 1.3508172035217285, 1.3405667543411255, 1.3304208517074585, 1.3203818798065186, 1.3104522228240967, 1.3006346225738525, 1.2909314632415771, 1.281345248222351, 1.2718788385391235, 1.2625348567962646, 1.2533159255981445, 1.2442249059677124, 1.2352646589279175, 1.226438045501709, 1.2177479267120361, 1.2091972827911377, 1.2007890939712524, 1.1925263404846191, 1.1844121217727661, 1.1764494180679321, 1.1686413288116455, 1.1609910726547241, 1.1535017490386963, 1.1461765766143799, 1.1390185356140137, 1.132030963897705, 1.1252169609069824, 1.1185797452926636, 1.1121225357055664, 1.1058483123779297, 1.0997602939605713, 1.0938615798950195, 1.0881553888320923, 1.0826444625854492, 1.0773321390151978, 1.0722211599349976, 1.0673145055770874, 1.062614917755127, 1.0581251382827759, 1.0538480281829834, 1.04978609085083, 1.045941710472107, 1.042317509651184, 1.0389156341552734, 1.0357383489608765, 1.0327876806259155, 1.030065655708313, 1.0275739431381226, 1.0253143310546875, 1.023288369178772, 1.0214974880218506, 1.0199427604675293, 1.0186253786087036, 1.01754629611969, 1.016706109046936, 1.0161056518554688, 1.0157451629638672, 1.03125, 1.031368374824524, 1.0317233800888062, 1.0323147773742676, 1.0331422090530396, 1.0342050790786743, 1.035502552986145, 1.0370339155197144, 1.0387980937957764, 1.0407938957214355, 1.0430200099945068, 1.0454747676849365, 1.0481568574905396, 1.051064372062683, 1.054195523262024, 1.05754816532135, 1.0611203908920288, 1.0649099349975586, 1.0689144134521484, 1.0731315612792969, 1.0775587558746338, 1.082193374633789, 1.0870329141616821, 1.0920746326446533, 1.0973156690597534, 1.1027531623840332, 1.1083842515945435, 1.114206075668335, 1.1202155351638794, 1.126409649848938, 1.1327855587005615, 1.1393400430679321, 1.1460700035095215, 1.1529725790023804, 1.1600444316864014, 1.1672827005386353, 1.1746841669082642, 1.1822457313537598, 1.1899645328521729, 1.1978373527526855, 1.2058613300323486, 1.2140333652496338, 1.2223504781723022, 1.2308096885681152, 1.239408254623413, 1.248143196105957, 1.2570115327835083, 1.2660107612609863, 1.2751379013061523, 1.2843902111053467, 1.2937650680541992, 1.3032598495483398, 1.3128719329833984, 1.3225988149642944, 1.3324378728866577, 1.3423867225646973, 1.3524428606033325, 1.3626039028167725, 1.3728677034378052, 1.38323175907135, 1.3936939239501953, 1.404252052307129, 1.4149038791656494, 1.425647497177124, 1.4364806413650513, 1.4474014043807983, 1.4584077596664429, 1.469497799873352, 1.4806697368621826, 1.4919216632843018, 1.5032516717910767, 1.5146582126617432, 1.5261393785476685, 1.537693738937378, 1.5493193864822388, 1.5610148906707764, 1.5727787017822266, 1.5846091508865356, 1.5965049266815186, 1.6084645986557007, 1.6204864978790283, 1.6325695514678955, 1.644712209701538, 1.656913161277771, 1.6691713333129883, 1.6814851760864258, 1.693853735923767, 1.7062757015228271, 1.71875, 1.7312754392623901, 1.743850827217102, 1.7564752101898193, 1.769147515296936, 1.7818666696548462, 1.7946317195892334, 1.8074417114257812, 1.8202956914901733, 1.8331927061080933, 1.8461319208145142, 1.8591123819351196, 1.8721332550048828, 1.8851935863494873, 1.8982927799224854, 1.91143000125885, 1.9246042966842651, 1.9378149509429932, 1.9510613679885864, 1.9643428325653076, 1.9776583909988403, 1.9910075664520264, 2.004389762878418, 2.0178041458129883, 2.03125, 2.044726848602295, 2.058234214782715, 2.0717713832855225, 2.0853376388549805, 2.0989325046539307, 2.112555503845215, 2.1262059211730957, 2.139883518218994, 2.153587579727173, 2.1673176288604736, 2.1810731887817383, 2.1948537826538086, 2.2086589336395264, 2.2224881649017334, 2.2363409996032715, 2.2502169609069824, 2.2363409996032715, 2.2224881649017334, 2.2086589336395264, 2.1948537826538086, 2.1810731887817383, 2.1673176288604736, 2.153587579727173, 2.139883518218994, 2.1262059211730957, 2.112555503845215, 2.0989325046539307, 2.0853376388549805, 2.0717713832855225, 2.058234214782715, 2.044726848602295, 2.03125, 2.0178041458129883, 2.004389762878418, 1.9910075664520264, 1.9776583909988403, 1.9643428325653076, 1.9510613679885864, 1.9378149509429932, 1.9246042966842651, 1.91143000125885, 1.8982927799224854, 1.8851935863494873, 1.8721332550048828, 1.8591123819351196, 1.8461319208145142, 1.8331927061080933, 1.8202956914901733, 1.8074417114257812, 1.7946317195892334, 1.7818666696548462, 1.769147515296936, 1.7564752101898193, 1.743850827217102, 1.7312754392623901, 1.71875, 1.7062757015228271, 1.693853735923767, 1.6814851760864258, 1.6691713333129883, 1.656913161277771, 1.644712209701538, 1.6325695514678955, 1.6204864978790283, 1.6084645986557007, 1.5965049266815186, 1.5846091508865356, 1.5727787017822266, 1.5610148906707764, 1.5493193864822388, 1.537693738937378, 1.5261393785476685, 1.5146582126617432, 1.5032516717910767, 1.4919216632843018, 1.4806697368621826, 1.469497799873352, 1.4584077596664429, 1.4474014043807983, 1.4364806413650513, 1.425647497177124, 1.4149038791656494, 1.404252052307129, 1.3936939239501953, 1.38323175907135, 1.3728677034378052, 1.3626039028167725, 1.3524428606033325, 1.3423867225646973, 1.3324378728866577, 1.3225988149642944, 1.3128719329833984, 1.3032598495483398, 1.2937650680541992, 1.2843902111053467, 1.2751379013061523, 1.2660107612609863, 1.2570115327835083, 1.248143196105957, 1.239408254623413, 1.2308096885681152, 1.2223504781723022, 1.2140333652496338, 1.2058613300323486, 1.1978373527526855, 1.1899645328521729, 1.1822457313537598, 1.1746841669082642, 1.1672827005386353, 1.1600444316864014, 1.1529725790023804, 1.1460700035095215, 1.1393400430679321, 1.1327855587005615, 1.126409649848938, 1.1202155351638794, 1.114206075668335, 1.1083842515945435, 1.1027531623840332, 1.0973156690597534, 1.0920746326446533, 1.0870329141616821, 1.082193374633789, 1.0775587558746338, 1.0731315612792969, 1.0689144134521484, 1.0649099349975586, 1.0611203908920288, 1.05754816532135, 1.054195523262024, 1.051064372062683, 1.0481568574905396, 1.0454747676849365, 1.0430200099945068, 1.0407938957214355, 1.0387980937957764, 1.0370339155197144, 1.035502552986145, 1.0342050790786743, 1.0331422090530396, 1.0323147773742676, 1.0317233800888062, 1.031368374824524, 1.046875, 1.0469915866851807, 1.0473413467407227, 1.0479239225387573, 1.048738956451416, 1.04978609085083, 1.051064372062683, 1.0525730848312378, 1.0543112754821777, 1.0562777519226074, 1.0584712028503418, 1.0608903169631958, 1.0635335445404053, 1.066399097442627, 1.0694853067398071, 1.072790265083313, 1.0763118267059326, 1.0800480842590332, 1.0839966535568237, 1.0881553888320923, 1.0925216674804688, 1.097093105316162, 1.1018671989440918, 1.1068413257598877, 1.1120127439498901, 1.1173787117004395, 1.122936487197876, 1.1286832094192505, 1.1346160173416138, 1.1407320499420166, 1.1470282077789307, 1.1535017490386963, 1.1601496934890747, 1.1669689416885376, 1.1739565134048462, 1.1811094284057617, 1.188424825668335, 1.1958996057510376, 1.2035307884216309, 1.2113155126571655, 1.2192506790161133, 1.2273335456848145, 1.2355611324310303, 1.2439305782318115, 1.252439022064209, 1.261083722114563, 1.2698616981506348, 1.2787704467773438, 1.2878071069717407, 1.2969691753387451, 1.3062537908554077, 1.315658450126648, 1.3251805305480957, 1.33481764793396, 1.3445672988891602, 1.3544270992279053, 1.3643944263458252, 1.3744672536849976, 1.3846430778503418, 1.3949196338653564, 1.4052947759628296, 1.4157663583755493, 1.4263323545455933, 1.4369903802871704, 1.4477386474609375, 1.4585751295089722, 1.469497799873352, 1.4805048704147339, 1.4915943145751953, 1.502764344215393, 1.5140132904052734, 1.5253393650054932, 1.536740779876709, 1.5482159852981567, 1.5597631931304932, 1.5713809728622437, 1.583067774772644, 1.5948219299316406, 1.6066421270370483, 1.618526816368103, 1.63047456741333, 1.6424840688705444, 1.654554009437561, 1.6666829586029053, 1.6788697242736816, 1.691112995147705, 1.7034116983413696, 1.7157644033432007, 1.7281701564788818, 1.7406277656555176, 1.753136157989502, 1.7656941413879395, 1.7783007621765137, 1.7909549474716187, 1.803655743598938, 1.8164020776748657, 1.829193115234375, 1.8420277833938599, 1.854905366897583, 1.8678247928619385, 1.880785346031189, 1.893786072731018, 1.9068262577056885, 1.9199049472808838, 1.9330215454101562, 1.9461750984191895, 1.9593650102615356, 1.972590446472168, 1.9858508110046387, 1.999145269393921, 2.0124733448028564, 2.025834083557129, 2.03922700881958, 2.0526516437530518, 2.0661072731018066, 2.0795929431915283, 2.093108654022217, 2.1066534519195557, 2.1202266216278076, 2.1338281631469727, 2.1474571228027344, 2.1611132621765137, 2.174795627593994, 2.188504219055176, 2.2022383213043213, 2.2159974575042725, 2.229781150817871, 2.243588924407959, 2.257420539855957, 2.243588924407959, 2.229781150817871, 2.2159974575042725, 2.2022383213043213, 2.188504219055176, 2.174795627593994, 2.1611132621765137, 2.1474571228027344, 2.1338281631469727, 2.1202266216278076, 2.1066534519195557, 2.093108654022217, 2.0795929431915283, 2.0661072731018066, 2.0526516437530518, 2.03922700881958, 2.025834083557129, 2.0124733448028564, 1.999145269393921, 1.9858508110046387, 1.972590446472168, 1.9593650102615356, 1.9461750984191895, 1.9330215454101562, 1.9199049472808838, 1.9068262577056885, 1.893786072731018, 1.880785346031189, 1.8678247928619385, 1.854905366897583, 1.8420277833938599, 1.829193115234375, 1.8164020776748657, 1.803655743598938, 1.7909549474716187, 1.7783007621765137, 1.7656941413879395, 1.753136157989502, 1.7406277656555176, 1.7281701564788818, 1.7157644033432007, 1.7034116983413696, 1.691112995147705, 1.6788697242736816, 1.6666829586029053, 1.654554009437561, 1.6424840688705444, 1.63047456741333, 1.618526816368103, 1.6066421270370483, 1.5948219299316406, 1.583067774772644, 1.5713809728622437, 1.5597631931304932, 1.5482159852981567, 1.536740779876709, 1.5253393650054932, 1.5140132904052734, 1.502764344215393, 1.4915943145751953, 1.4805048704147339, 1.469497799873352, 1.4585751295089722, 1.4477386474609375, 1.4369903802871704, 1.4263323545455933, 1.4157663583755493, 1.4052947759628296, 1.3949196338653564, 1.3846430778503418, 1.3744672536849976, 1.3643944263458252, 1.3544270992279053, 1.3445672988891602, 1.33481764793396, 1.3251805305480957, 1.315658450126648, 1.3062537908554077, 1.2969691753387451, 1.2878071069717407, 1.2787704467773438, 1.2698616981506348, 1.261083722114563, 1.252439022064209, 1.2439305782318115, 1.2355611324310303, 1.2273335456848145, 1.2192506790161133, 1.2113155126571655, 1.2035307884216309, 1.1958996057510376, 1.188424825668335, 1.1811094284057617, 1.1739565134048462, 1.1669689416885376, 1.1601496934890747, 1.1535017490386963, 1.1470282077789307, 1.1407320499420166, 1.1346160173416138, 1.1286832094192505, 1.122936487197876, 1.1173787117004395, 1.1120127439498901, 1.1068413257598877, 1.1018671989440918, 1.097093105316162, 1.0925216674804688, 1.0881553888320923, 1.0839966535568237, 1.0800480842590332, 1.0763118267059326, 1.072790265083313, 1.0694853067398071, 1.066399097442627, 1.0635335445404053, 1.0608903169631958, 1.0584712028503418, 1.0562777519226074, 1.0543112754821777, 1.0525730848312378, 1.051064372062683, 1.04978609085083, 1.048738956451416, 1.0479239225387573, 1.0473413467407227, 1.0469915866851807, 1.0625, 1.062614917755127, 1.0629594326019287, 1.0635335445404053, 1.0643366575241089, 1.065368413925171, 1.0666279792785645, 1.0681147575378418, 1.069827675819397, 1.071765661239624, 1.0739275217056274, 1.0763118267059326, 1.0789172649383545, 1.0817421674728394, 1.0847846269607544, 1.0880430936813354, 1.0915155410766602, 1.0951999425888062, 1.099094033241272, 1.1031957864761353, 1.107502818107605, 1.1120127439498901, 1.1167230606079102, 1.1216312646865845, 1.126734733581543, 1.132030963897705, 1.1375172138214111, 1.143190622329712, 1.1490485668182373, 1.1550880670547485, 1.1613065004348755, 1.1677008867263794, 1.174268364906311, 1.1810060739517212, 1.1879111528396606, 1.194980502128601, 1.2022114992141724, 1.2096010446548462, 1.217146396636963, 1.2248445749282837, 1.2326927185058594, 1.2406879663467407, 1.248827576637268, 1.2571086883544922, 1.2655285596847534, 1.2740843296051025, 1.282773494720459, 1.2915931940078735, 1.300540804862976, 1.309613585472107, 1.3188092708587646, 1.328125, 1.337558388710022, 1.3471070528030396, 1.3567683696746826, 1.3665400743484497, 1.3764196634292603, 1.386405110359192, 1.396493911743164, 1.4066839218139648, 1.4169729948043823, 1.4273589849472046, 1.4378396272659302, 1.4484130144119263, 1.45907723903656, 1.46983003616333, 1.4806697368621826, 1.4915943145751953, 1.5026018619537354, 1.5136908292770386, 1.524859070777893, 1.5361051559448242, 1.5474272966384888, 1.558823823928833, 1.5702930688858032, 1.5818334817886353, 1.5934436321258545, 1.6051218509674072, 1.6168667078018188, 1.6286767721176147, 1.6405506134033203, 1.6524869203567505, 1.6644842624664307, 1.6765413284301758, 1.6886570453643799, 1.7008298635482788, 1.7130587100982666, 1.7253425121307373, 1.7376798391342163, 1.7500697374343872, 1.762511134147644, 1.7750027179718018, 1.7875436544418335, 1.8001328706741333, 1.8127694129943848, 1.8254520893096924, 1.8381801843643188, 1.8509525060653687, 1.863768458366394, 1.8766268491744995, 1.8895270824432373, 1.9024680852890015, 1.9154491424560547, 1.9284694194793701, 1.941528081893921, 1.9546244144439697, 1.9677577018737793, 1.9809271097183228, 1.9941320419311523, 2.007371664047241, 2.0206453800201416, 2.033952474594116, 2.047292470932007, 2.060664415359497, 2.0740678310394287, 2.0875022411346436, 2.1009669303894043, 2.1144614219665527, 2.1279850006103516, 2.1415371894836426, 2.1551175117492676, 2.1687252521514893, 2.1823599338531494, 2.196021318435669, 2.2097086906433105, 2.223421573638916, 2.237159490585327, 2.250922203063965, 2.2647087574005127, 2.250922203063965, 2.237159490585327, 2.223421573638916, 2.2097086906433105, 2.196021318435669, 2.1823599338531494, 2.1687252521514893, 2.1551175117492676, 2.1415371894836426, 2.1279850006103516, 2.1144614219665527, 2.1009669303894043, 2.0875022411346436, 2.0740678310394287, 2.060664415359497, 2.047292470932007, 2.033952474594116, 2.0206453800201416, 2.007371664047241, 1.9941320419311523, 1.9809271097183228, 1.9677577018737793, 1.9546244144439697, 1.941528081893921, 1.9284694194793701, 1.9154491424560547, 1.9024680852890015, 1.8895270824432373, 1.8766268491744995, 1.863768458366394, 1.8509525060653687, 1.8381801843643188, 1.8254520893096924, 1.8127694129943848, 1.8001328706741333, 1.7875436544418335, 1.7750027179718018, 1.762511134147644, 1.7500697374343872, 1.7376798391342163, 1.7253425121307373, 1.7130587100982666, 1.7008298635482788, 1.6886570453643799, 1.6765413284301758, 1.6644842624664307, 1.6524869203567505, 1.6405506134033203, 1.6286767721176147, 1.6168667078018188, 1.6051218509674072, 1.5934436321258545, 1.5818334817886353, 1.5702930688858032, 1.558823823928833, 1.5474272966384888, 1.5361051559448242, 1.524859070777893, 1.5136908292770386, 1.5026018619537354, 1.4915943145751953, 1.4806697368621826, 1.46983003616333, 1.45907723903656, 1.4484130144119263, 1.4378396272659302, 1.4273589849472046, 1.4169729948043823, 1.4066839218139648, 1.396493911743164, 1.386405110359192, 1.3764196634292603, 1.3665400743484497, 1.3567683696746826, 1.3471070528030396, 1.337558388710022, 1.328125, 1.3188092708587646, 1.309613585472107, 1.300540804862976, 1.2915931940078735, 1.282773494720459, 1.2740843296051025, 1.2655285596847534, 1.2571086883544922, 1.248827576637268, 1.2406879663467407, 1.2326927185058594, 1.2248445749282837, 1.217146396636963, 1.2096010446548462, 1.2022114992141724, 1.194980502128601, 1.1879111528396606, 1.1810060739517212, 1.174268364906311, 1.1677008867263794, 1.1613065004348755, 1.1550880670547485, 1.1490485668182373, 1.143190622329712, 1.1375172138214111, 1.132030963897705, 1.126734733581543, 1.1216312646865845, 1.1167230606079102, 1.1120127439498901, 1.107502818107605, 1.1031957864761353, 1.099094033241272, 1.0951999425888062, 1.0915155410766602, 1.0880430936813354, 1.0847846269607544, 1.0817421674728394, 1.0789172649383545, 1.0763118267059326, 1.0739275217056274, 1.071765661239624, 1.069827675819397, 1.0681147575378418, 1.0666279792785645, 1.065368413925171, 1.0643366575241089, 1.0635335445404053, 1.0629594326019287, 1.062614917755127, 1.078125, 1.0782382488250732, 1.0785777568817139, 1.0791435241699219, 1.079935073852539, 1.0809519290924072, 1.082193374633789, 1.0836588144302368, 1.0853471755981445, 1.0872575044631958, 1.0893886089324951, 1.0917391777038574, 1.0943078994750977, 1.097093105316162, 1.1000932455062866, 1.1033064126968384, 1.1067310571670532, 1.1103649139404297, 1.114206075668335, 1.1182522773742676, 1.1225016117095947, 1.1269514560699463, 1.1315995454788208, 1.1364434957504272, 1.141480803489685, 1.1467089653015137, 1.1521252393722534, 1.1577271223068237, 1.163511872291565, 1.1694767475128174, 1.1756190061569214, 1.1819360256195068, 1.188424825668335, 1.195082664489746, 1.2019068002700806, 1.2088944911956787, 1.2160426378250122, 1.2233487367630005, 1.2308096885681152, 1.2384229898452759, 1.246185541152954, 1.2540948390960693, 1.2621480226516724, 1.270342230796814, 1.2786749601364136, 1.2871434688568115, 1.2957450151443481, 1.3044769763946533, 1.313336730003357, 1.322321891784668, 1.3314297199249268, 1.3406578302383423, 1.3500036001205444, 1.3594647645950317, 1.3690389394760132, 1.3787236213684082, 1.3885166645050049, 1.3984156847000122, 1.4084184169769287, 1.418522834777832, 1.4287266731262207, 1.4390276670455933, 1.4494240283966064, 1.4599136114120483, 1.470494270324707, 1.4811643362045288, 1.4919216632843018, 1.502764344215393, 1.5136908292770386, 1.5246989727020264, 1.5357872247695923, 1.5469539165496826, 1.558197259902954, 1.5695154666900635, 1.5809072256088257, 1.5923707485198975, 1.6039044857025146, 1.6155071258544922, 1.6271770000457764, 1.6389127969741821, 1.6507130861282349, 1.6625763177871704, 1.6745014190673828, 1.6864869594573975, 1.6985316276550293, 1.7106342315673828, 1.7227935791015625, 1.7350083589553833, 1.7472774982452393, 1.7595998048782349, 1.7719742059707642, 1.7843996286392212, 1.796875, 1.8093992471694946, 1.8219715356826782, 1.8345905542373657, 1.8472557067871094, 1.8599658012390137, 1.8727200031280518, 1.8855173587799072, 1.8983571529388428, 1.9112383127212524, 1.9241602420806885, 1.9371219873428345, 1.9501227140426636, 1.9631617069244385, 1.9762382507324219, 1.989351511001587, 2.0025007724761963, 2.015685558319092, 2.028904914855957, 2.0421581268310547, 2.0554449558258057, 2.0687642097473145, 2.082115411758423, 2.0954983234405518, 2.1089119911193848, 2.1223559379577637, 2.135829448699951, 2.149332284927368, 2.1628634929656982, 2.1764228343963623, 2.190009832382202, 2.2036235332489014, 2.21726393699646, 2.2309305667877197, 2.2446224689483643, 2.2583396434783936, 2.2720813751220703, 2.2583396434783936, 2.2446224689483643, 2.2309305667877197, 2.21726393699646, 2.2036235332489014, 2.190009832382202, 2.1764228343963623, 2.1628634929656982, 2.149332284927368, 2.135829448699951, 2.1223559379577637, 2.1089119911193848, 2.0954983234405518, 2.082115411758423, 2.0687642097473145, 2.0554449558258057, 2.0421581268310547, 2.028904914855957, 2.015685558319092, 2.0025007724761963, 1.989351511001587, 1.9762382507324219, 1.9631617069244385, 1.9501227140426636, 1.9371219873428345, 1.9241602420806885, 1.9112383127212524, 1.8983571529388428, 1.8855173587799072, 1.8727200031280518, 1.8599658012390137, 1.8472557067871094, 1.8345905542373657, 1.8219715356826782, 1.8093992471694946, 1.796875, 1.7843996286392212, 1.7719742059707642, 1.7595998048782349, 1.7472774982452393, 1.7350083589553833, 1.7227935791015625, 1.7106342315673828, 1.6985316276550293, 1.6864869594573975, 1.6745014190673828, 1.6625763177871704, 1.6507130861282349, 1.6389127969741821, 1.6271770000457764, 1.6155071258544922, 1.6039044857025146, 1.5923707485198975, 1.5809072256088257, 1.5695154666900635, 1.558197259902954, 1.5469539165496826, 1.5357872247695923, 1.5246989727020264, 1.5136908292770386, 1.502764344215393, 1.4919216632843018, 1.4811643362045288, 1.470494270324707, 1.4599136114120483, 1.4494240283966064, 1.4390276670455933, 1.4287266731262207, 1.418522834777832, 1.4084184169769287, 1.3984156847000122, 1.3885166645050049, 1.3787236213684082, 1.3690389394760132, 1.3594647645950317, 1.3500036001205444, 1.3406578302383423, 1.3314297199249268, 1.322321891784668, 1.313336730003357, 1.3044769763946533, 1.2957450151443481, 1.2871434688568115, 1.2786749601364136, 1.270342230796814, 1.2621480226516724, 1.2540948390960693, 1.246185541152954, 1.2384229898452759, 1.2308096885681152, 1.2233487367630005, 1.2160426378250122, 1.2088944911956787, 1.2019068002700806, 1.195082664489746, 1.188424825668335, 1.1819360256195068, 1.1756190061569214, 1.1694767475128174, 1.163511872291565, 1.1577271223068237, 1.1521252393722534, 1.1467089653015137, 1.141480803489685, 1.1364434957504272, 1.1315995454788208, 1.1269514560699463, 1.1225016117095947, 1.1182522773742676, 1.114206075668335, 1.1103649139404297, 1.1067310571670532, 1.1033064126968384, 1.1000932455062866, 1.097093105316162, 1.0943078994750977, 1.0917391777038574, 1.0893886089324951, 1.0872575044631958, 1.0853471755981445, 1.0836588144302368, 1.082193374633789, 1.0809519290924072, 1.079935073852539, 1.0791435241699219, 1.0785777568817139, 1.0782382488250732, 1.09375, 1.0938615798950195, 1.0941963195800781, 1.0947539806365967, 1.0955342054367065, 1.096536636352539, 1.097760558128357, 1.0992051362991333, 1.1008696556091309, 1.1027531623840332, 1.1048543453216553, 1.1071721315383911, 1.1097050905227661, 1.1124516725540161, 1.115410566329956, 1.1185797452926636, 1.1219576597213745, 1.125542402267456, 1.1293319463729858, 1.1333242654800415, 1.1375172138214111, 1.1419085264205933, 1.146496057510376, 1.1512773036956787, 1.15625, 1.1614116430282593, 1.1667596101760864, 1.17229163646698, 1.1780048608779907, 1.1838966608047485, 1.1899645328521729, 1.196205735206604, 1.2026176452636719, 1.2091972827911377, 1.2159422636032104, 1.222849726676941, 1.2299168109893799, 1.2371408939361572, 1.2445192337036133, 1.2520490884780884, 1.2597277164459229, 1.2675524950027466, 1.2755206823349, 1.2836296558380127, 1.2918766736984253, 1.3002591133117676, 1.308774471282959, 1.3174201250076294, 1.3261934518814087, 1.3350920677185059, 1.3441133499145508, 1.3532549142837524, 1.3625143766403198, 1.3718892335891724, 1.3813772201538086, 1.390976071357727, 1.4006834030151367, 1.4104970693588257, 1.4204148054122925, 1.4304343461990356, 1.4405537843704224, 1.4507709741592407, 1.4610837697982788, 1.4714901447296143, 1.4819881916046143, 1.492576003074646, 1.5032516717910767, 1.5140132904052734, 1.524859070777893, 1.5357872247695923, 1.5467960834503174, 1.557883858680725, 1.5690487623214722, 1.580289363861084, 1.5916039943695068, 1.602990984916687, 1.61444890499115, 1.625976324081421, 1.6375715732574463, 1.649233341217041, 1.66096031665802, 1.6727509498596191, 1.6846040487289429, 1.6965181827545166, 1.7084921598434448, 1.7205246686935425, 1.732614517211914, 1.744760513305664, 1.7569615840911865, 1.769216537475586, 1.7815240621566772, 1.7938833236694336, 1.806293249130249, 1.818752646446228, 1.8312606811523438, 1.8438161611557007, 1.8564183712005615, 1.8690661191940308, 1.881758689880371, 1.8944950103759766, 1.9072743654251099, 1.920095682144165, 1.9329583644866943, 1.9458614587783813, 1.9588042497634888, 1.9717859029769897, 1.9848055839538574, 1.9978625774383545, 2.010956287384033, 2.0240859985351562, 2.0372507572174072, 2.050450086593628, 2.063683271408081, 2.0769498348236084, 2.0902488231658936, 2.1035799980163574, 2.1169424057006836, 2.130335569381714, 2.14375901222229, 2.157212257385254, 2.170694351196289, 2.1842050552368164, 2.1977438926696777, 2.2113101482391357, 2.2249033451080322, 2.238523244857788, 2.252169132232666, 2.265840530395508, 2.2795369625091553, 2.265840530395508, 2.252169132232666, 2.238523244857788, 2.2249033451080322, 2.2113101482391357, 2.1977438926696777, 2.1842050552368164, 2.170694351196289, 2.157212257385254, 2.14375901222229, 2.130335569381714, 2.1169424057006836, 2.1035799980163574, 2.0902488231658936, 2.0769498348236084, 2.063683271408081, 2.050450086593628, 2.0372507572174072, 2.0240859985351562, 2.010956287384033, 1.9978625774383545, 1.9848055839538574, 1.9717859029769897, 1.9588042497634888, 1.9458614587783813, 1.9329583644866943, 1.920095682144165, 1.9072743654251099, 1.8944950103759766, 1.881758689880371, 1.8690661191940308, 1.8564183712005615, 1.8438161611557007, 1.8312606811523438, 1.818752646446228, 1.806293249130249, 1.7938833236694336, 1.7815240621566772, 1.769216537475586, 1.7569615840911865, 1.744760513305664, 1.732614517211914, 1.7205246686935425, 1.7084921598434448, 1.6965181827545166, 1.6846040487289429, 1.6727509498596191, 1.66096031665802, 1.649233341217041, 1.6375715732574463, 1.625976324081421, 1.61444890499115, 1.602990984916687, 1.5916039943695068, 1.580289363861084, 1.5690487623214722, 1.557883858680725, 1.5467960834503174, 1.5357872247695923, 1.524859070777893, 1.5140132904052734, 1.5032516717910767, 1.492576003074646, 1.4819881916046143, 1.4714901447296143, 1.4610837697982788, 1.4507709741592407, 1.4405537843704224, 1.4304343461990356, 1.4204148054122925, 1.4104970693588257, 1.4006834030151367, 1.390976071357727, 1.3813772201538086, 1.3718892335891724, 1.3625143766403198, 1.3532549142837524, 1.3441133499145508, 1.3350920677185059, 1.3261934518814087, 1.3174201250076294, 1.308774471282959, 1.3002591133117676, 1.2918766736984253, 1.2836296558380127, 1.2755206823349, 1.2675524950027466, 1.2597277164459229, 1.2520490884780884, 1.2445192337036133, 1.2371408939361572, 1.2299168109893799, 1.222849726676941, 1.2159422636032104, 1.2091972827911377, 1.2026176452636719, 1.196205735206604, 1.1899645328521729, 1.1838966608047485, 1.1780048608779907, 1.17229163646698, 1.1667596101760864, 1.1614116430282593, 1.15625, 1.1512773036956787, 1.146496057510376, 1.1419085264205933, 1.1375172138214111, 1.1333242654800415, 1.1293319463729858, 1.125542402267456, 1.1219576597213745, 1.1185797452926636, 1.115410566329956, 1.1124516725540161, 1.1097050905227661, 1.1071721315383911, 1.1048543453216553, 1.1027531623840332, 1.1008696556091309, 1.0992051362991333, 1.097760558128357, 1.096536636352539, 1.0955342054367065, 1.0947539806365967, 1.0941963195800781, 1.0938615798950195, 1.109375, 1.1094850301742554, 1.109815001487732, 1.1103649139404297, 1.1111341714859009, 1.1121225357055664, 1.1133291721343994, 1.1147537231445312, 1.1163949966430664, 1.1182522773742676, 1.1203244924545288, 1.122610330581665, 1.1251084804534912, 1.1278176307678223, 1.130736231803894, 1.1338626146316528, 1.1371952295303345, 1.1407320499420166, 1.144471287727356, 1.1484109163284302, 1.1525490283966064, 1.1568832397460938, 1.1614116430282593, 1.1661317348480225, 1.1710413694381714, 1.1761380434036255, 1.1814194917678833, 1.1868830919265747, 1.1925263404846191, 1.1983468532562256, 1.2043418884277344, 1.210508942604065, 1.2168455123901367, 1.2233487367630005, 1.2300159931182861, 1.2368448972702026, 1.2438324689865112, 1.2509762048721313, 1.2582733631134033, 1.2657214403152466, 1.2733176946640015, 1.2810593843460083, 1.288944125175476, 1.2969691753387451, 1.3051317930221558, 1.3134297132492065, 1.3218601942062378, 1.3304208517074585, 1.339108943939209, 1.3479223251342773, 1.356858253479004, 1.3659145832061768, 1.3750888109207153, 1.3843785524368286, 1.3937815427780151, 1.4032955169677734, 1.412918210029602, 1.422647476196289, 1.432481050491333, 1.4424169063568115, 1.4524527788162231, 1.462586760520935, 1.472816824913025, 1.4831409454345703, 1.493557095527649, 1.5040634870529175, 1.5146582126617432, 1.5253393650054932, 1.5361051559448242, 1.5469539165496826, 1.557883858680725, 1.5688931941986084, 1.5799803733825684, 1.5911437273025513, 1.602381706237793, 1.6136926412582397, 1.625075101852417, 1.63652765750885, 1.6480486392974854, 1.6596368551254272, 1.6712907552719116, 1.6830090284347534, 1.6947903633117676, 1.706633448600769, 1.7185369729995728, 1.7304996252059937, 1.7425203323364258, 1.754597783088684, 1.7667309045791626, 1.7789183855056763, 1.7911593914031982, 1.8034526109695435, 1.8157970905303955, 1.8281917572021484, 1.8406356573104858, 1.8531275987625122, 1.8656668663024902, 1.878252387046814, 1.890883207321167, 1.9035584926605225, 1.9162774085998535, 1.9290390014648438, 1.9418424367904663, 1.9546868801116943, 1.9675716161727905, 1.9804956912994385, 1.9934585094451904, 2.0064592361450195, 2.0194971561431885, 2.032571792602539, 2.045681953430176, 2.0588271617889404, 2.072006940841675, 2.0852205753326416, 2.0984671115875244, 2.111746311187744, 2.1250574588775635, 2.138399839401245, 2.151772975921631, 2.1651761531829834, 2.1786091327667236, 2.1920711994171143, 2.205561637878418, 2.2190799713134766, 2.232625961303711, 2.246199131011963, 2.259798526763916, 2.2734241485595703, 2.2870752811431885, 2.2734241485595703, 2.259798526763916, 2.246199131011963, 2.232625961303711, 2.2190799713134766, 2.205561637878418, 2.1920711994171143, 2.1786091327667236, 2.1651761531829834, 2.151772975921631, 2.138399839401245, 2.1250574588775635, 2.111746311187744, 2.0984671115875244, 2.0852205753326416, 2.072006940841675, 2.0588271617889404, 2.045681953430176, 2.032571792602539, 2.0194971561431885, 2.0064592361450195, 1.9934585094451904, 1.9804956912994385, 1.9675716161727905, 1.9546868801116943, 1.9418424367904663, 1.9290390014648438, 1.9162774085998535, 1.9035584926605225, 1.890883207321167, 1.878252387046814, 1.8656668663024902, 1.8531275987625122, 1.8406356573104858, 1.8281917572021484, 1.8157970905303955, 1.8034526109695435, 1.7911593914031982, 1.7789183855056763, 1.7667309045791626, 1.754597783088684, 1.7425203323364258, 1.7304996252059937, 1.7185369729995728, 1.706633448600769, 1.6947903633117676, 1.6830090284347534, 1.6712907552719116, 1.6596368551254272, 1.6480486392974854, 1.63652765750885, 1.625075101852417, 1.6136926412582397, 1.602381706237793, 1.5911437273025513, 1.5799803733825684, 1.5688931941986084, 1.557883858680725, 1.5469539165496826, 1.5361051559448242, 1.5253393650054932, 1.5146582126617432, 1.5040634870529175, 1.493557095527649, 1.4831409454345703, 1.472816824913025, 1.462586760520935, 1.4524527788162231, 1.4424169063568115, 1.432481050491333, 1.422647476196289, 1.412918210029602, 1.4032955169677734, 1.3937815427780151, 1.3843785524368286, 1.3750888109207153, 1.3659145832061768, 1.356858253479004, 1.3479223251342773, 1.339108943939209, 1.3304208517074585, 1.3218601942062378, 1.3134297132492065, 1.3051317930221558, 1.2969691753387451, 1.288944125175476, 1.2810593843460083, 1.2733176946640015, 1.2657214403152466, 1.2582733631134033, 1.2509762048721313, 1.2438324689865112, 1.2368448972702026, 1.2300159931182861, 1.2233487367630005, 1.2168455123901367, 1.210508942604065, 1.2043418884277344, 1.1983468532562256, 1.1925263404846191, 1.1868830919265747, 1.1814194917678833, 1.1761380434036255, 1.1710413694381714, 1.1661317348480225, 1.1614116430282593, 1.1568832397460938, 1.1525490283966064, 1.1484109163284302, 1.144471287727356, 1.1407320499420166, 1.1371952295303345, 1.1338626146316528, 1.130736231803894, 1.1278176307678223, 1.1251084804534912, 1.122610330581665, 1.1203244924545288, 1.1182522773742676, 1.1163949966430664, 1.1147537231445312, 1.1133291721343994, 1.1121225357055664, 1.1111341714859009, 1.1103649139404297, 1.109815001487732, 1.1094850301742554, 1.125, 1.1251084804534912, 1.1254339218139648, 1.1259760856628418, 1.126734733581543, 1.1277093887329102, 1.1288994550704956, 1.1303043365478516, 1.1319231986999512, 1.1337549686431885, 1.1357988119125366, 1.1380536556243896, 1.1405179500579834, 1.143190622329712, 1.1460700035095215, 1.149154782295227, 1.1524430513381958, 1.1559332609176636, 1.1596235036849976, 1.163511872291565, 1.1675963401794434, 1.171875, 1.1763455867767334, 1.1810060739517212, 1.1858540773391724, 1.190887451171875, 1.1961036920547485, 1.2015005350112915, 1.2070754766464233, 1.212826132774353, 1.21875, 1.2248445749282837, 1.231107234954834, 1.2375354766845703, 1.244126796722412, 1.2508785724639893, 1.2577881813049316, 1.2648531198501587, 1.2720707654953003, 1.2794384956359863, 1.2869538068771362, 1.2946139574050903, 1.3024166822433472, 1.3103591203689575, 1.3184388875961304, 1.3266535997390747, 1.3350006341934204, 1.343477487564087, 1.3520817756652832, 1.3608109951019287, 1.369662880897522, 1.3786351680755615, 1.3877252340316772, 1.3969309329986572, 1.40625, 1.415680170059204, 1.4252192974090576, 1.434865117073059, 1.4446154832839966, 1.4544684886932373, 1.4644218683242798, 1.4744735956192017, 1.4846216440200806, 1.4948642253875732, 1.5051993131637573, 1.515625, 1.5261393785476685, 1.536740779876709, 1.5474272966384888, 1.558197259902954, 1.5690487623214722, 1.5799803733825684, 1.5909903049468994, 1.6020768880844116, 1.6132386922836304, 1.624474048614502, 1.6357815265655518, 1.6471595764160156, 1.658606767654419, 1.6701217889785767, 1.681702971458435, 1.6933492422103882, 1.7050590515136719, 1.7168313264846802, 1.7286646366119385, 1.7405576705932617, 1.752509355545044, 1.7645184993743896, 1.7765837907791138, 1.7887042760849, 1.800878643989563, 1.8131060600280762, 1.8253852128982544, 1.8377152681350708, 1.8500950336456299, 1.8625235557556152, 1.875, 1.8875232934951782, 1.9000924825668335, 1.912706732749939, 1.9253652095794678, 1.9380669593811035, 1.9508111476898193, 1.9635969400405884, 1.9764235019683838, 1.9892901182174683, 2.0021960735321045, 2.0151405334472656, 2.028122663497925, 2.0411417484283447, 2.054197311401367, 2.067288398742676, 2.0804145336151123, 2.0935750007629395, 2.106769323348999, 2.1199963092803955, 2.133255958557129, 2.146547555923462, 2.159870147705078, 2.1732234954833984, 2.1866068840026855, 2.2000200748443604, 2.2134621143341064, 2.2269325256347656, 2.240431070327759, 2.2539570331573486, 2.267509937286377, 2.2810895442962646, 2.2946949005126953, 2.2810895442962646, 2.267509937286377, 2.2539570331573486, 2.240431070327759, 2.2269325256347656, 2.2134621143341064, 2.2000200748443604, 2.1866068840026855, 2.1732234954833984, 2.159870147705078, 2.146547555923462, 2.133255958557129, 2.1199963092803955, 2.106769323348999, 2.0935750007629395, 2.0804145336151123, 2.067288398742676, 2.054197311401367, 2.0411417484283447, 2.028122663497925, 2.0151405334472656, 2.0021960735321045, 1.9892901182174683, 1.9764235019683838, 1.9635969400405884, 1.9508111476898193, 1.9380669593811035, 1.9253652095794678, 1.912706732749939, 1.9000924825668335, 1.8875232934951782, 1.875, 1.8625235557556152, 1.8500950336456299, 1.8377152681350708, 1.8253852128982544, 1.8131060600280762, 1.800878643989563, 1.7887042760849, 1.7765837907791138, 1.7645184993743896, 1.752509355545044, 1.7405576705932617, 1.7286646366119385, 1.7168313264846802, 1.7050590515136719, 1.6933492422103882, 1.681702971458435, 1.6701217889785767, 1.658606767654419, 1.6471595764160156, 1.6357815265655518, 1.624474048614502, 1.6132386922836304, 1.6020768880844116, 1.5909903049468994, 1.5799803733825684, 1.5690487623214722, 1.558197259902954, 1.5474272966384888, 1.536740779876709, 1.5261393785476685, 1.515625, 1.5051993131637573, 1.4948642253875732, 1.4846216440200806, 1.4744735956192017, 1.4644218683242798, 1.4544684886932373, 1.4446154832839966, 1.434865117073059, 1.4252192974090576, 1.415680170059204, 1.40625, 1.3969309329986572, 1.3877252340316772, 1.3786351680755615, 1.369662880897522, 1.3608109951019287, 1.3520817756652832, 1.343477487564087, 1.3350006341934204, 1.3266535997390747, 1.3184388875961304, 1.3103591203689575, 1.3024166822433472, 1.2946139574050903, 1.2869538068771362, 1.2794384956359863, 1.2720707654953003, 1.2648531198501587, 1.2577881813049316, 1.2508785724639893, 1.244126796722412, 1.2375354766845703, 1.231107234954834, 1.2248445749282837, 1.21875, 1.212826132774353, 1.2070754766464233, 1.2015005350112915, 1.1961036920547485, 1.190887451171875, 1.1858540773391724, 1.1810060739517212, 1.1763455867767334, 1.171875, 1.1675963401794434, 1.163511872291565, 1.1596235036849976, 1.1559332609176636, 1.1524430513381958, 1.149154782295227, 1.1460700035095215, 1.143190622329712, 1.1405179500579834, 1.1380536556243896, 1.1357988119125366, 1.1337549686431885, 1.1319231986999512, 1.1303043365478516, 1.1288994550704956, 1.1277093887329102, 1.126734733581543, 1.1259760856628418, 1.1254339218139648, 1.1251084804534912, 1.140625, 1.1407320499420166, 1.1410529613494873, 1.141587734222412, 1.1423360109329224, 1.1432974338531494, 1.144471287727356, 1.1458569765090942, 1.1474539041519165, 1.1492609977722168, 1.1512773036956787, 1.1535017490386963, 1.1559332609176636, 1.1585702896118164, 1.1614116430282593, 1.1644556522369385, 1.1677008867263794, 1.1711455583572388, 1.174787998199463, 1.1786264181137085, 1.1826586723327637, 1.1868830919265747, 1.1912974119186401, 1.1958996057510376, 1.2006874084472656, 1.2056589126586914, 1.2108114957809448, 1.216143012046814, 1.2216511964797974, 1.2273335456848145, 1.2331876754760742, 1.2392112016677856, 1.2454017400741577, 1.2517565488815308, 1.2582733631134033, 1.2649496793746948, 1.2717828750610352, 1.2787704467773438, 1.2859100103378296, 1.293198823928833, 1.3006346225738525, 1.308214783668518, 1.3159366846084595, 1.3237980604171753, 1.331796407699585, 1.3399291038513184, 1.3481940031051636, 1.356588363647461, 1.3651100397109985, 1.3737565279006958, 1.3825255632400513, 1.391414761543274, 1.4004219770431519, 1.4095447063446045, 1.4187809228897095, 1.4281283617019653, 1.4375848770141602, 1.447148323059082, 1.456816554069519, 1.4665875434875488, 1.4764591455459595, 1.4864294528961182, 1.496496558189392, 1.5066584348678589, 1.5169130563735962, 1.5272588729858398, 1.537693738937378, 1.5482159852981567, 1.558823823928833, 1.5695154666900635, 1.580289363861084, 1.5911437273025513, 1.6020768880844116, 1.6130872964859009, 1.6241735219955444, 1.635333776473999, 1.64656662940979, 1.6578706502914429, 1.669244408607483, 1.6806864738464355, 1.6921954154968262, 1.7037699222564697, 1.7154086828231812, 1.7271103858947754, 1.7388737201690674, 1.750697374343872, 1.762580394744873, 1.7745212316513062, 1.7865190505981445, 1.7985725402832031, 1.810680627822876, 1.8228422403335571, 1.8350563049316406, 1.8473217487335205, 1.8596376180648804, 1.8720028400421143, 1.8844164609909058, 1.8968775272369385, 1.9093852043151855, 1.9219385385513306, 1.9345365762710571, 1.9471784830093384, 1.9598634243011475, 1.972590446472168, 1.9853589534759521, 1.9981681108474731, 2.011017084121704, 2.023905038833618, 2.0368313789367676, 2.049795150756836, 2.062795877456665, 2.0758328437805176, 2.0889053344726562, 2.1020126342773438, 2.1151540279388428, 2.128329277038574, 2.1415371894836426, 2.1547775268554688, 2.1680495738983154, 2.1813528537750244, 2.1946868896484375, 2.2080507278442383, 2.2214441299438477, 2.2348666191101074, 2.2483174800872803, 2.261796236038208, 2.2753026485443115, 2.2888357639312744, 2.3023955821990967, 2.2888357639312744, 2.2753026485443115, 2.261796236038208, 2.2483174800872803, 2.2348666191101074, 2.2214441299438477, 2.2080507278442383, 2.1946868896484375, 2.1813528537750244, 2.1680495738983154, 2.1547775268554688, 2.1415371894836426, 2.128329277038574, 2.1151540279388428, 2.1020126342773438, 2.0889053344726562, 2.0758328437805176, 2.062795877456665, 2.049795150756836, 2.0368313789367676, 2.023905038833618, 2.011017084121704, 1.9981681108474731, 1.9853589534759521, 1.972590446472168, 1.9598634243011475, 1.9471784830093384, 1.9345365762710571, 1.9219385385513306, 1.9093852043151855, 1.8968775272369385, 1.8844164609909058, 1.8720028400421143, 1.8596376180648804, 1.8473217487335205, 1.8350563049316406, 1.8228422403335571, 1.810680627822876, 1.7985725402832031, 1.7865190505981445, 1.7745212316513062, 1.762580394744873, 1.750697374343872, 1.7388737201690674, 1.7271103858947754, 1.7154086828231812, 1.7037699222564697, 1.6921954154968262, 1.6806864738464355, 1.669244408607483, 1.6578706502914429, 1.64656662940979, 1.635333776473999, 1.6241735219955444, 1.6130872964859009, 1.6020768880844116, 1.5911437273025513, 1.580289363861084, 1.5695154666900635, 1.558823823928833, 1.5482159852981567, 1.537693738937378, 1.5272588729858398, 1.5169130563735962, 1.5066584348678589, 1.496496558189392, 1.4864294528961182, 1.4764591455459595, 1.4665875434875488, 1.456816554069519, 1.447148323059082, 1.4375848770141602, 1.4281283617019653, 1.4187809228897095, 1.4095447063446045, 1.4004219770431519, 1.391414761543274, 1.3825255632400513, 1.3737565279006958, 1.3651100397109985, 1.356588363647461, 1.3481940031051636, 1.3399291038513184, 1.331796407699585, 1.3237980604171753, 1.3159366846084595, 1.308214783668518, 1.3006346225738525, 1.293198823928833, 1.2859100103378296, 1.2787704467773438, 1.2717828750610352, 1.2649496793746948, 1.2582733631134033, 1.2517565488815308, 1.2454017400741577, 1.2392112016677856, 1.2331876754760742, 1.2273335456848145, 1.2216511964797974, 1.216143012046814, 1.2108114957809448, 1.2056589126586914, 1.2006874084472656, 1.1958996057510376, 1.1912974119186401, 1.1868830919265747, 1.1826586723327637, 1.1786264181137085, 1.174787998199463, 1.1711455583572388, 1.1677008867263794, 1.1644556522369385, 1.1614116430282593, 1.1585702896118164, 1.1559332609176636, 1.1535017490386963, 1.1512773036956787, 1.1492609977722168, 1.1474539041519165, 1.1458569765090942, 1.144471287727356, 1.1432974338531494, 1.1423360109329224, 1.141587734222412, 1.1410529613494873, 1.1407320499420166, 1.15625, 1.156355619430542, 1.1566722393035889, 1.157199740409851, 1.157938003540039, 1.1588863134384155, 1.1600444316864014, 1.1614116430282593, 1.1629871129989624, 1.1647701263427734, 1.1667596101760864, 1.1689547300338745, 1.171354055404663, 1.1739565134048462, 1.1767606735229492, 1.1797651052474976, 1.1829683780670166, 1.186368703842163, 1.1899645328521729, 1.1937540769577026, 1.1977355480194092, 1.2019068002700806, 1.206266164779663, 1.2108114957809448, 1.2155406475067139, 1.2204515933990479, 1.2255419492721558, 1.2308096885681152, 1.2362525463104248, 1.2418681383132935, 1.2476540803909302, 1.2536081075668335, 1.2597277164459229, 1.2660107612609863, 1.2724546194076538, 1.2790567874908447, 1.2858150005340576, 1.292726755142212, 1.2997896671295166, 1.3070011138916016, 1.3143588304519653, 1.3218601942062378, 1.3295029401779175, 1.3372845649719238, 1.3452026844024658, 1.3532549142837524, 1.3614387512207031, 1.369752049446106, 1.3781923055648804, 1.386757254600525, 1.395444631576538, 1.404252052307129, 1.4131773710250854, 1.4222183227539062, 1.4313727617263794, 1.440638542175293, 1.450013518333435, 1.4594954252243042, 1.4690823554992676, 1.4787722826004028, 1.4885631799697876, 1.4984530210494995, 1.5084397792816162, 1.5185216665267944, 1.528696894645691, 1.5389633178710938, 1.5493193864822388, 1.5597631931304932, 1.5702930688858032, 1.5809072256088257, 1.5916039943695068, 1.602381706237793, 1.6132386922836304, 1.6241735219955444, 1.635184407234192, 1.6462700366973877, 1.6574288606643677, 1.6686593294143677, 1.679960012435913, 1.6913295984268188, 1.7027665376663208, 1.714269757270813, 1.7258377075195312, 1.7374690771102905, 1.7491627931594849, 1.7609174251556396, 1.7727317810058594, 1.784604787826538, 1.7965352535247803, 1.8085219860076904, 1.8205639123916626, 1.8326599597930908, 1.8448090553283691, 1.857010006904602, 1.8692620992660522, 1.8815640211105347, 1.893915057182312, 1.9063140153884888, 1.9187601804733276, 1.9312524795532227, 1.9437901973724365, 1.9563722610473633, 1.9689979553222656, 1.9816664457321167, 1.9943768978118896, 2.0071284770965576, 2.0199203491210938, 2.0327517986297607, 2.0456223487854004, 2.058530807495117, 2.071476697921753, 2.0844593048095703, 2.097477912902832, 2.11053204536438, 2.1236209869384766, 2.1367437839508057, 2.149899959564209, 2.1630892753601074, 2.1763107776641846, 2.189563751220703, 2.202847957611084, 2.21616268157959, 2.2295074462890625, 2.2428815364837646, 2.256284713745117, 2.2697160243988037, 2.283175468444824, 2.2966623306274414, 2.310176134109497, 2.2966623306274414, 2.283175468444824, 2.2697160243988037, 2.256284713745117, 2.2428815364837646, 2.2295074462890625, 2.21616268157959, 2.202847957611084, 2.189563751220703, 2.1763107776641846, 2.1630892753601074, 2.149899959564209, 2.1367437839508057, 2.1236209869384766, 2.11053204536438, 2.097477912902832, 2.0844593048095703, 2.071476697921753, 2.058530807495117, 2.0456223487854004, 2.0327517986297607, 2.0199203491210938, 2.0071284770965576, 1.9943768978118896, 1.9816664457321167, 1.9689979553222656, 1.9563722610473633, 1.9437901973724365, 1.9312524795532227, 1.9187601804733276, 1.9063140153884888, 1.893915057182312, 1.8815640211105347, 1.8692620992660522, 1.857010006904602, 1.8448090553283691, 1.8326599597930908, 1.8205639123916626, 1.8085219860076904, 1.7965352535247803, 1.784604787826538, 1.7727317810058594, 1.7609174251556396, 1.7491627931594849, 1.7374690771102905, 1.7258377075195312, 1.714269757270813, 1.7027665376663208, 1.6913295984268188, 1.679960012435913, 1.6686593294143677, 1.6574288606643677, 1.6462700366973877, 1.635184407234192, 1.6241735219955444, 1.6132386922836304, 1.602381706237793, 1.5916039943695068, 1.5809072256088257, 1.5702930688858032, 1.5597631931304932, 1.5493193864822388, 1.5389633178710938, 1.528696894645691, 1.5185216665267944, 1.5084397792816162, 1.4984530210494995, 1.4885631799697876, 1.4787722826004028, 1.4690823554992676, 1.4594954252243042, 1.450013518333435, 1.440638542175293, 1.4313727617263794, 1.4222183227539062, 1.4131773710250854, 1.404252052307129, 1.395444631576538, 1.386757254600525, 1.3781923055648804, 1.369752049446106, 1.3614387512207031, 1.3532549142837524, 1.3452026844024658, 1.3372845649719238, 1.3295029401779175, 1.3218601942062378, 1.3143588304519653, 1.3070011138916016, 1.2997896671295166, 1.292726755142212, 1.2858150005340576, 1.2790567874908447, 1.2724546194076538, 1.2660107612609863, 1.2597277164459229, 1.2536081075668335, 1.2476540803909302, 1.2418681383132935, 1.2362525463104248, 1.2308096885681152, 1.2255419492721558, 1.2204515933990479, 1.2155406475067139, 1.2108114957809448, 1.206266164779663, 1.2019068002700806, 1.1977355480194092, 1.1937540769577026, 1.1899645328521729, 1.186368703842163, 1.1829683780670166, 1.1797651052474976, 1.1767606735229492, 1.1739565134048462, 1.171354055404663, 1.1689547300338745, 1.1667596101760864, 1.1647701263427734, 1.1629871129989624, 1.1614116430282593, 1.1600444316864014, 1.1588863134384155, 1.157938003540039, 1.157199740409851, 1.1566722393035889, 1.156355619430542, 1.171875, 1.1719791889190674, 1.17229163646698, 1.1728121042251587, 1.173540472984314, 1.1744762659072876, 1.1756190061569214, 1.1769680976867676, 1.1785228252410889, 1.1802823543548584, 1.1822457313537598, 1.1844121217727661, 1.1867802143096924, 1.1893489360809326, 1.1921168565750122, 1.195082664489746, 1.1982449293136597, 1.2016021013259888, 1.2051525115966797, 1.2088944911956787, 1.212826132774353, 1.216945767402649, 1.2212514877319336, 1.2257411479949951, 1.2304129600524902, 1.2352646589279175, 1.240294337272644, 1.2454997301101685, 1.2508785724639893, 1.256428837776184, 1.2621480226516724, 1.2680339813232422, 1.2740843296051025, 1.2802969217300415, 1.286669135093689, 1.293198823928833, 1.2998836040496826, 1.3067208528518677, 1.3137085437774658, 1.320844054222107, 1.328125, 1.3355491161346436, 1.343113899230957, 1.3508172035217285, 1.358656406402588, 1.3666293621063232, 1.3747336864471436, 1.3829669952392578, 1.3913270235061646, 1.3998116254806519, 1.4084184169769287, 1.4171452522277832, 1.4259898662567139, 1.4349502325057983, 1.4440239667892456, 1.4532090425491333, 1.4625033140182495, 1.4719048738479614, 1.4814114570617676, 1.4910212755203247, 1.5007323026657104, 1.510542392730713, 1.5204497575759888, 1.5304526090621948, 1.5405489206314087, 1.5507370233535767, 1.5610148906707764, 1.5713809728622437, 1.5818334817886353, 1.5923707485198975, 1.602990984916687, 1.6136926412582397, 1.624474048614502, 1.635333776473999, 1.6462700366973877, 1.657281517982483, 1.6683666706085205, 1.6795239448547363, 1.6907520294189453, 1.7020494937896729, 1.7134150266647339, 1.7248471975326538, 1.736344575881958, 1.7479060888290405, 1.7595304250717163, 1.7712162733078003, 1.782962441444397, 1.7947677373886108, 1.806631088256836, 1.8185513019561768, 1.8305273056030273, 1.8425579071044922, 1.8546420335769653, 1.86677885055542, 1.8789671659469604, 1.8912060260772705, 1.9034944772720337, 1.915831446647644, 1.9282162189483643, 1.9406476020812988, 1.953125, 1.9656473398208618, 1.978213906288147, 1.9908236265182495, 2.0034759044647217, 2.016170024871826, 2.028904914855957, 2.041679859161377, 2.0544943809509277, 2.067347526550293, 2.0802385807037354, 2.0931668281555176, 2.1061317920684814, 2.1191325187683105, 2.1321685314178467, 2.1452391147613525, 2.158343553543091, 2.1714816093444824, 2.184652090072632, 2.197854995727539, 2.2110893726348877, 2.2243547439575195, 2.2376506328582764, 2.250976324081421, 2.264331579208374, 2.2777156829833984, 2.291127920150757, 2.304568290710449, 2.3180360794067383, 2.304568290710449, 2.291127920150757, 2.2777156829833984, 2.264331579208374, 2.250976324081421, 2.2376506328582764, 2.2243547439575195, 2.2110893726348877, 2.197854995727539, 2.184652090072632, 2.1714816093444824, 2.158343553543091, 2.1452391147613525, 2.1321685314178467, 2.1191325187683105, 2.1061317920684814, 2.0931668281555176, 2.0802385807037354, 2.067347526550293, 2.0544943809509277, 2.041679859161377, 2.028904914855957, 2.016170024871826, 2.0034759044647217, 1.9908236265182495, 1.978213906288147, 1.9656473398208618, 1.953125, 1.9406476020812988, 1.9282162189483643, 1.915831446647644, 1.9034944772720337, 1.8912060260772705, 1.8789671659469604, 1.86677885055542, 1.8546420335769653, 1.8425579071044922, 1.8305273056030273, 1.8185513019561768, 1.806631088256836, 1.7947677373886108, 1.782962441444397, 1.7712162733078003, 1.7595304250717163, 1.7479060888290405, 1.736344575881958, 1.7248471975326538, 1.7134150266647339, 1.7020494937896729, 1.6907520294189453, 1.6795239448547363, 1.6683666706085205, 1.657281517982483, 1.6462700366973877, 1.635333776473999, 1.624474048614502, 1.6136926412582397, 1.602990984916687, 1.5923707485198975, 1.5818334817886353, 1.5713809728622437, 1.5610148906707764, 1.5507370233535767, 1.5405489206314087, 1.5304526090621948, 1.5204497575759888, 1.510542392730713, 1.5007323026657104, 1.4910212755203247, 1.4814114570617676, 1.4719048738479614, 1.4625033140182495, 1.4532090425491333, 1.4440239667892456, 1.4349502325057983, 1.4259898662567139, 1.4171452522277832, 1.4084184169769287, 1.3998116254806519, 1.3913270235061646, 1.3829669952392578, 1.3747336864471436, 1.3666293621063232, 1.358656406402588, 1.3508172035217285, 1.343113899230957, 1.3355491161346436, 1.328125, 1.320844054222107, 1.3137085437774658, 1.3067208528518677, 1.2998836040496826, 1.293198823928833, 1.286669135093689, 1.2802969217300415, 1.2740843296051025, 1.2680339813232422, 1.2621480226516724, 1.256428837776184, 1.2508785724639893, 1.2454997301101685, 1.240294337272644, 1.2352646589279175, 1.2304129600524902, 1.2257411479949951, 1.2212514877319336, 1.216945767402649, 1.212826132774353, 1.2088944911956787, 1.2051525115966797, 1.2016021013259888, 1.1982449293136597, 1.195082664489746, 1.1921168565750122, 1.1893489360809326, 1.1867802143096924, 1.1844121217727661, 1.1822457313537598, 1.1802823543548584, 1.1785228252410889, 1.1769680976867676, 1.1756190061569214, 1.1744762659072876, 1.173540472984314, 1.1728121042251587, 1.17229163646698, 1.1719791889190674, 1.1875, 1.1876027584075928, 1.1879111528396606, 1.188424825668335, 1.1891436576843262, 1.190067172050476, 1.1911948919296265, 1.1925263404846191, 1.1940608024597168, 1.1957974433898926, 1.1977355480194092, 1.1998738050460815, 1.2022114992141724, 1.2047473192214966, 1.2074799537658691, 1.210408091545105, 1.2135305404663086, 1.2168455123901367, 1.2203514575958252, 1.2240469455718994, 1.2279301881790161, 1.2319992780685425, 1.2362525463104248, 1.2406879663467407, 1.2453036308288574, 1.250097632408142, 1.2550678253173828, 1.2602121829986572, 1.2655285596847534, 1.2710148096084595, 1.276668667793274, 1.2824879884719849, 1.2884705066680908, 1.2946139574050903, 1.3009161949157715, 1.3073747158050537, 1.3139872550964355, 1.3207515478134155, 1.3276653289794922, 1.3347262144088745, 1.341931939125061, 1.3492799997329712, 1.3567683696746826, 1.3643944263458252, 1.3721561431884766, 1.3800511360168457, 1.3880770206451416, 1.3962316513061523, 1.4045127630233765, 1.412918210029602, 1.4214457273483276, 1.4300930500030518, 1.4388580322265625, 1.4477386474609375, 1.4567327499389648, 1.4658381938934326, 1.4750529527664185, 1.484375, 1.4938023090362549, 1.5033328533172607, 1.5129648447036743, 1.5226961374282837, 1.5325249433517456, 1.5424494743347168, 1.5524678230285645, 1.5625780820846558, 1.5727787017822266, 1.583067774772644, 1.5934436321258545, 1.6039044857025146, 1.61444890499115, 1.625075101852417, 1.6357815265655518, 1.64656662940979, 1.6574288606643677, 1.6683666706085205, 1.679378628730774, 1.6904633045196533, 1.7016191482543945, 1.712844967842102, 1.7241393327713013, 1.7355008125305176, 1.746928095817566, 1.7584199905395508, 1.7699753046035767, 1.781592607498169, 1.7932708263397217, 1.8050087690353394, 1.8168052434921265, 1.8286590576171875, 1.840569257736206, 1.8525346517562866, 1.8645542860031128, 1.8766268491744995, 1.8887516260147095, 1.9009275436401367, 1.9131535291671753, 1.9254286289215088, 1.9377520084381104, 1.9501227140426636, 1.962539792060852, 1.9750025272369385, 1.987509846687317, 2.00006103515625, 2.012655258178711, 2.025291681289673, 2.0379695892333984, 2.0506882667541504, 2.0634467601776123, 2.076244354248047, 2.089080572128296, 2.101954460144043, 2.11486554145813, 2.1278128623962402, 2.140796184539795, 2.1538143157958984, 2.1668670177459717, 2.1799535751342773, 2.193073272705078, 2.206225633621216, 2.2194101810455322, 2.232625961303711, 2.245872974395752, 2.259150266647339, 2.2724573612213135, 2.2857937812805176, 2.299159049987793, 2.3125526905059814, 2.325974225997925, 2.3125526905059814, 2.299159049987793, 2.2857937812805176, 2.2724573612213135, 2.259150266647339, 2.245872974395752, 2.232625961303711, 2.2194101810455322, 2.206225633621216, 2.193073272705078, 2.1799535751342773, 2.1668670177459717, 2.1538143157958984, 2.140796184539795, 2.1278128623962402, 2.11486554145813, 2.101954460144043, 2.089080572128296, 2.076244354248047, 2.0634467601776123, 2.0506882667541504, 2.0379695892333984, 2.025291681289673, 2.012655258178711, 2.00006103515625, 1.987509846687317, 1.9750025272369385, 1.962539792060852, 1.9501227140426636, 1.9377520084381104, 1.9254286289215088, 1.9131535291671753, 1.9009275436401367, 1.8887516260147095, 1.8766268491744995, 1.8645542860031128, 1.8525346517562866, 1.840569257736206, 1.8286590576171875, 1.8168052434921265, 1.8050087690353394, 1.7932708263397217, 1.781592607498169, 1.7699753046035767, 1.7584199905395508, 1.746928095817566, 1.7355008125305176, 1.7241393327713013, 1.712844967842102, 1.7016191482543945, 1.6904633045196533, 1.679378628730774, 1.6683666706085205, 1.6574288606643677, 1.64656662940979, 1.6357815265655518, 1.625075101852417, 1.61444890499115, 1.6039044857025146, 1.5934436321258545, 1.583067774772644, 1.5727787017822266, 1.5625780820846558, 1.5524678230285645, 1.5424494743347168, 1.5325249433517456, 1.5226961374282837, 1.5129648447036743, 1.5033328533172607, 1.4938023090362549, 1.484375, 1.4750529527664185, 1.4658381938934326, 1.4567327499389648, 1.4477386474609375, 1.4388580322265625, 1.4300930500030518, 1.4214457273483276, 1.412918210029602, 1.4045127630233765, 1.3962316513061523, 1.3880770206451416, 1.3800511360168457, 1.3721561431884766, 1.3643944263458252, 1.3567683696746826, 1.3492799997329712, 1.341931939125061, 1.3347262144088745, 1.3276653289794922, 1.3207515478134155, 1.3139872550964355, 1.3073747158050537, 1.3009161949157715, 1.2946139574050903, 1.2884705066680908, 1.2824879884719849, 1.276668667793274, 1.2710148096084595, 1.2655285596847534, 1.2602121829986572, 1.2550678253173828, 1.250097632408142, 1.2453036308288574, 1.2406879663467407, 1.2362525463104248, 1.2319992780685425, 1.2279301881790161, 1.2240469455718994, 1.2203514575958252, 1.2168455123901367, 1.2135305404663086, 1.210408091545105, 1.2074799537658691, 1.2047473192214966, 1.2022114992141724, 1.1998738050460815, 1.1977355480194092, 1.1957974433898926, 1.1940608024597168, 1.1925263404846191, 1.1911948919296265, 1.190067172050476, 1.1891436576843262, 1.188424825668335, 1.1879111528396606, 1.1876027584075928, 1.203125, 1.2032264471054077, 1.2035307884216309, 1.2040377855300903, 1.2047473192214966, 1.2056589126586914, 1.2067720890045166, 1.208086371421814, 1.2096010446548462, 1.2113155126571655, 1.213228702545166, 1.2153397798538208, 1.2176477909088135, 1.220151424407959, 1.222849726676941, 1.2257411479949951, 1.228824496269226, 1.2320983409881592, 1.2355611324310303, 1.2392112016677856, 1.2430471181869507, 1.247066855430603, 1.2512688636779785, 1.2556512355804443, 1.2602121829986572, 1.2649496793746948, 1.2698616981506348, 1.2749463319778442, 1.2802015542984009, 1.2856251001358032, 1.2912150621414185, 1.2969691753387451, 1.3028851747512817, 1.308961033821106, 1.3151943683624268, 1.3215831518173218, 1.328125, 1.33481764793396, 1.3416589498519897, 1.348646640777588, 1.3557783365249634, 1.3630517721176147, 1.37046480178833, 1.378015160560608, 1.3857005834579468, 1.3935188055038452, 1.4014675617218018, 1.4095447063446045, 1.4177480936050415, 1.4260755777359009, 1.4345247745513916, 1.4430937767028809, 1.4517803192138672, 1.4605823755264282, 1.469497799873352, 1.4785246849060059, 1.4876608848571777, 1.4969043731689453, 1.5062532424926758, 1.5157055854797363, 1.5252593755722046, 1.5349127054214478, 1.5446637868881226, 1.5545108318328857, 1.5644519329071045, 1.5744853019714355, 1.5846091508865356, 1.5948219299316406, 1.6051218509674072, 1.6155071258544922, 1.625976324081421, 1.63652765750885, 1.6471595764160156, 1.6578706502914429, 1.6686593294143677, 1.6795239448547363, 1.6904633045196533, 1.701475739479065, 1.7125598192214966, 1.7237144708633423, 1.7349380254745483, 1.7462291717529297, 1.7575868368148804, 1.7690094709396362, 1.7804960012435913, 1.7920451164245605, 1.803655743598938, 1.815326452255249, 1.8270562887191772, 1.8388440608978271, 1.8506886959075928, 1.8625891208648682, 1.8745442628860474, 1.8865529298782349, 1.8986142873764038, 1.9107273817062378, 1.9228910207748413, 1.9351043701171875, 1.94736647605896, 1.9596765041351318, 1.9720335006713867, 1.9844365119934082, 1.996884822845459, 2.0093774795532227, 2.021913528442383, 2.0344924926757812, 2.0471134185791016, 2.0597755908966064, 2.0724782943725586, 2.0852205753326416, 2.098001718521118, 2.11082124710083, 2.12367844581604, 2.1365723609924316, 2.1495025157928467, 2.162468433380127, 2.175469160079956, 2.188504219055176, 2.201573133468628, 2.214674949645996, 2.227809429168701, 2.240975856781006, 2.254173755645752, 2.267402410507202, 2.2806613445281982, 2.293950080871582, 2.3072681427001953, 2.32061505317688, 2.3339900970458984, 2.32061505317688, 2.3072681427001953, 2.293950080871582, 2.2806613445281982, 2.267402410507202, 2.254173755645752, 2.240975856781006, 2.227809429168701, 2.214674949645996, 2.201573133468628, 2.188504219055176, 2.175469160079956, 2.162468433380127, 2.1495025157928467, 2.1365723609924316, 2.12367844581604, 2.11082124710083, 2.098001718521118, 2.0852205753326416, 2.0724782943725586, 2.0597755908966064, 2.0471134185791016, 2.0344924926757812, 2.021913528442383, 2.0093774795532227, 1.996884822845459, 1.9844365119934082, 1.9720335006713867, 1.9596765041351318, 1.94736647605896, 1.9351043701171875, 1.9228910207748413, 1.9107273817062378, 1.8986142873764038, 1.8865529298782349, 1.8745442628860474, 1.8625891208648682, 1.8506886959075928, 1.8388440608978271, 1.8270562887191772, 1.815326452255249, 1.803655743598938, 1.7920451164245605, 1.7804960012435913, 1.7690094709396362, 1.7575868368148804, 1.7462291717529297, 1.7349380254745483, 1.7237144708633423, 1.7125598192214966, 1.701475739479065, 1.6904633045196533, 1.6795239448547363, 1.6686593294143677, 1.6578706502914429, 1.6471595764160156, 1.63652765750885, 1.625976324081421, 1.6155071258544922, 1.6051218509674072, 1.5948219299316406, 1.5846091508865356, 1.5744853019714355, 1.5644519329071045, 1.5545108318328857, 1.5446637868881226, 1.5349127054214478, 1.5252593755722046, 1.5157055854797363, 1.5062532424926758, 1.4969043731689453, 1.4876608848571777, 1.4785246849060059, 1.469497799873352, 1.4605823755264282, 1.4517803192138672, 1.4430937767028809, 1.4345247745513916, 1.4260755777359009, 1.4177480936050415, 1.4095447063446045, 1.4014675617218018, 1.3935188055038452, 1.3857005834579468, 1.378015160560608, 1.37046480178833, 1.3630517721176147, 1.3557783365249634, 1.348646640777588, 1.3416589498519897, 1.33481764793396, 1.328125, 1.3215831518173218, 1.3151943683624268, 1.308961033821106, 1.3028851747512817, 1.2969691753387451, 1.2912150621414185, 1.2856251001358032, 1.2802015542984009, 1.2749463319778442, 1.2698616981506348, 1.2649496793746948, 1.2602121829986572, 1.2556512355804443, 1.2512688636779785, 1.247066855430603, 1.2430471181869507, 1.2392112016677856, 1.2355611324310303, 1.2320983409881592, 1.228824496269226, 1.2257411479949951, 1.222849726676941, 1.220151424407959, 1.2176477909088135, 1.2153397798538208, 1.213228702545166, 1.2113155126571655, 1.2096010446548462, 1.208086371421814, 1.2067720890045166, 1.2056589126586914, 1.2047473192214966, 1.2040377855300903, 1.2035307884216309, 1.2032264471054077, 1.21875, 1.2188501358032227, 1.2191505432128906, 1.2196511030197144, 1.2203514575958252, 1.2212514877319336, 1.2223504781723022, 1.223647952079773, 1.2251434326171875, 1.2268362045288086, 1.2287251949310303, 1.2308096885681152, 1.233088731765747, 1.2355611324310303, 1.2382258176803589, 1.2410814762115479, 1.244126796722412, 1.2473604679107666, 1.2507810592651367, 1.2543867826461792, 1.258176326751709, 1.2621480226516724, 1.2662999629974365, 1.2706304788589478, 1.2751379013061523, 1.2798200845718384, 1.2846752405166626, 1.2897015810012817, 1.2948968410491943, 1.3002591133117676, 1.305786371231079, 1.3114765882492065, 1.3173273801803589, 1.3233369588851929, 1.3295029401779175, 1.3358232975006104, 1.34229576587677, 1.348918080329895, 1.355688214302063, 1.3626039028167725, 1.369662880897522, 1.3768631219863892, 1.3842021226882935, 1.391677975654602, 1.399288296699524, 1.4070310592651367, 1.4149038791656494, 1.4229048490524292, 1.431031584739685, 1.4392821788787842, 1.447654366493225, 1.456146001815796, 1.4647551774978638, 1.4734797477722168, 1.4823176860809326, 1.4912668466567993, 1.5003254413604736, 1.5094914436340332, 1.5187628269195557, 1.5281378030776978, 1.537614345550537, 1.5471906661987305, 1.556864857673645, 1.5666351318359375, 1.5764998197555542, 1.5864570140838623, 1.5965049266815186, 1.6066421270370483, 1.6168667078018188, 1.6271770000457764, 1.6375715732574463, 1.6480486392974854, 1.658606767654419, 1.669244408607483, 1.679960012435913, 1.6907520294189453, 1.7016191482543945, 1.7125598192214966, 1.7235727310180664, 1.7346564531326294, 1.7458096742630005, 1.7570310831069946, 1.7683192491531372, 1.7796730995178223, 1.7910912036895752, 1.80257248878479, 1.8141156435012817, 1.8257195949554443, 1.8373830318450928, 1.8491050004959106, 1.8608843088150024, 1.8727200031280518, 1.8846107721328735, 1.896555781364441, 1.908553957939148, 1.9206042289733887, 1.9327057600021362, 1.9448574781417847, 1.9570585489273071, 1.9693078994750977, 1.981604814529419, 1.9939483404159546, 2.0063376426696777, 2.0187718868255615, 2.03125, 2.043771505355835, 2.05633544921875, 2.068941116333008, 2.081587791442871, 2.0942747592926025, 2.1070010662078857, 2.1197659969329834, 2.1325693130493164, 2.1454098224639893, 2.1582870483398438, 2.1712005138397217, 2.1841492652893066, 2.1971328258514404, 2.2101504802703857, 2.2232019901275635, 2.2362864017486572, 2.249403238296509, 2.262551784515381, 2.2757318019866943, 2.288942575454712, 2.3021833896636963, 2.3154542446136475, 2.328754186630249, 2.3420827388763428, 2.328754186630249, 2.3154542446136475, 2.3021833896636963, 2.288942575454712, 2.2757318019866943, 2.262551784515381, 2.249403238296509, 2.2362864017486572, 2.2232019901275635, 2.2101504802703857, 2.1971328258514404, 2.1841492652893066, 2.1712005138397217, 2.1582870483398438, 2.1454098224639893, 2.1325693130493164, 2.1197659969329834, 2.1070010662078857, 2.0942747592926025, 2.081587791442871, 2.068941116333008, 2.05633544921875, 2.043771505355835, 2.03125, 2.0187718868255615, 2.0063376426696777, 1.9939483404159546, 1.981604814529419, 1.9693078994750977, 1.9570585489273071, 1.9448574781417847, 1.9327057600021362, 1.9206042289733887, 1.908553957939148, 1.896555781364441, 1.8846107721328735, 1.8727200031280518, 1.8608843088150024, 1.8491050004959106, 1.8373830318450928, 1.8257195949554443, 1.8141156435012817, 1.80257248878479, 1.7910912036895752, 1.7796730995178223, 1.7683192491531372, 1.7570310831069946, 1.7458096742630005, 1.7346564531326294, 1.7235727310180664, 1.7125598192214966, 1.7016191482543945, 1.6907520294189453, 1.679960012435913, 1.669244408607483, 1.658606767654419, 1.6480486392974854, 1.6375715732574463, 1.6271770000457764, 1.6168667078018188, 1.6066421270370483, 1.5965049266815186, 1.5864570140838623, 1.5764998197555542, 1.5666351318359375, 1.556864857673645, 1.5471906661987305, 1.537614345550537, 1.5281378030776978, 1.5187628269195557, 1.5094914436340332, 1.5003254413604736, 1.4912668466567993, 1.4823176860809326, 1.4734797477722168, 1.4647551774978638, 1.456146001815796, 1.447654366493225, 1.4392821788787842, 1.431031584739685, 1.4229048490524292, 1.4149038791656494, 1.4070310592651367, 1.399288296699524, 1.391677975654602, 1.3842021226882935, 1.3768631219863892, 1.369662880897522, 1.3626039028167725, 1.355688214302063, 1.348918080329895, 1.34229576587677, 1.3358232975006104, 1.3295029401779175, 1.3233369588851929, 1.3173273801803589, 1.3114765882492065, 1.305786371231079, 1.3002591133117676, 1.2948968410491943, 1.2897015810012817, 1.2846752405166626, 1.2798200845718384, 1.2751379013061523, 1.2706304788589478, 1.2662999629974365, 1.2621480226516724, 1.258176326751709, 1.2543867826461792, 1.2507810592651367, 1.2473604679107666, 1.244126796722412, 1.2410814762115479, 1.2382258176803589, 1.2355611324310303, 1.233088731765747, 1.2308096885681152, 1.2287251949310303, 1.2268362045288086, 1.2251434326171875, 1.223647952079773, 1.2223504781723022, 1.2212514877319336, 1.2203514575958252, 1.2196511030197144, 1.2191505432128906, 1.2188501358032227, 1.234375, 1.2344739437103271, 1.2347705364227295, 1.2352646589279175, 1.2359563112258911, 1.2368448972702026, 1.2379300594329834, 1.2392112016677856, 1.2406879663467407, 1.2423595190048218, 1.2442249059677124, 1.2462835311889648, 1.2485343217849731, 1.2509762048721313, 1.2536081075668335, 1.256428837776184, 1.259437084197998, 1.2626315355300903, 1.2660107612609863, 1.2695733308792114, 1.2733176946640015, 1.2772421836853027, 1.281345248222351, 1.2856251001358032, 1.2900800704956055, 1.294708251953125, 1.2995078563690186, 1.3044769763946533, 1.309613585472107, 1.3149158954620361, 1.3203818798065186, 1.3260093927383423, 1.331796407699585, 1.3377408981323242, 1.3438408374786377, 1.3500940799713135, 1.35649836063385, 1.3630517721176147, 1.369752049446106, 1.3765970468521118, 1.38358473777771, 1.3907127380371094, 1.3979791402816772, 1.405381679534912, 1.412918210029602, 1.4205865859985352, 1.428384780883789, 1.4363106489181519, 1.4443620443344116, 1.4525368213653564, 1.4608330726623535, 1.4692485332489014, 1.4777814149856567, 1.4864294528961182, 1.4951908588409424, 1.5040634870529175, 1.5130454301834106, 1.5221349000930786, 1.5313297510147095, 1.54062819480896, 1.5500283241271973, 1.5595284700393677, 1.5691266059875488, 1.578821063041687, 1.5886099338531494, 1.5984916687011719, 1.6084645986557007, 1.618526816368103, 1.6286767721176147, 1.6389127969741821, 1.649233341217041, 1.6596368551254272, 1.6701217889785767, 1.6806864738464355, 1.6913295984268188, 1.7020494937896729, 1.712844967842102, 1.7237144708633423, 1.7346564531326294, 1.7456698417663574, 1.7567532062530518, 1.7679049968719482, 1.7791242599487305, 1.7904095649719238, 1.8017597198486328, 1.8131734132766724, 1.824649453163147, 1.8361867666244507, 1.8477842807769775, 1.8594406843185425, 1.8711549043655396, 1.8829259872436523, 1.8947527408599854, 1.9066342115402222, 1.9185693264007568, 1.930557131767273, 1.942596673965454, 1.9546868801116943, 1.9668269157409668, 1.9790159463882446, 1.9912528991699219, 2.0035369396209717, 2.015867233276367, 2.028243064880371, 2.040663242340088, 2.0531272888183594, 2.0656344890594482, 2.078183650970459, 2.0907745361328125, 2.1034059524536133, 2.116077423095703, 2.1287879943847656, 2.1415371894836426, 2.1543242931365967, 2.1671485900878906, 2.180009603500366, 2.192906379699707, 2.205838203430176, 2.2188050746917725, 2.2318058013916016, 2.244839906692505, 2.2579071521759033, 2.2710065841674805, 2.284137725830078, 2.297300100326538, 2.310493230819702, 2.323716402053833, 2.3369693756103516, 2.3502514362335205, 2.3369693756103516, 2.323716402053833, 2.310493230819702, 2.297300100326538, 2.284137725830078, 2.2710065841674805, 2.2579071521759033, 2.244839906692505, 2.2318058013916016, 2.2188050746917725, 2.205838203430176, 2.192906379699707, 2.180009603500366, 2.1671485900878906, 2.1543242931365967, 2.1415371894836426, 2.1287879943847656, 2.116077423095703, 2.1034059524536133, 2.0907745361328125, 2.078183650970459, 2.0656344890594482, 2.0531272888183594, 2.040663242340088, 2.028243064880371, 2.015867233276367, 2.0035369396209717, 1.9912528991699219, 1.9790159463882446, 1.9668269157409668, 1.9546868801116943, 1.942596673965454, 1.930557131767273, 1.9185693264007568, 1.9066342115402222, 1.8947527408599854, 1.8829259872436523, 1.8711549043655396, 1.8594406843185425, 1.8477842807769775, 1.8361867666244507, 1.824649453163147, 1.8131734132766724, 1.8017597198486328, 1.7904095649719238, 1.7791242599487305, 1.7679049968719482, 1.7567532062530518, 1.7456698417663574, 1.7346564531326294, 1.7237144708633423, 1.712844967842102, 1.7020494937896729, 1.6913295984268188, 1.6806864738464355, 1.6701217889785767, 1.6596368551254272, 1.649233341217041, 1.6389127969741821, 1.6286767721176147, 1.618526816368103, 1.6084645986557007, 1.5984916687011719, 1.5886099338531494, 1.578821063041687, 1.5691266059875488, 1.5595284700393677, 1.5500283241271973, 1.54062819480896, 1.5313297510147095, 1.5221349000930786, 1.5130454301834106, 1.5040634870529175, 1.4951908588409424, 1.4864294528961182, 1.4777814149856567, 1.4692485332489014, 1.4608330726623535, 1.4525368213653564, 1.4443620443344116, 1.4363106489181519, 1.428384780883789, 1.4205865859985352, 1.412918210029602, 1.405381679534912, 1.3979791402816772, 1.3907127380371094, 1.38358473777771, 1.3765970468521118, 1.369752049446106, 1.3630517721176147, 1.35649836063385, 1.3500940799713135, 1.3438408374786377, 1.3377408981323242, 1.331796407699585, 1.3260093927383423, 1.3203818798065186, 1.3149158954620361, 1.309613585472107, 1.3044769763946533, 1.2995078563690186, 1.294708251953125, 1.2900800704956055, 1.2856251001358032, 1.281345248222351, 1.2772421836853027, 1.2733176946640015, 1.2695733308792114, 1.2660107612609863, 1.2626315355300903, 1.259437084197998, 1.256428837776184, 1.2536081075668335, 1.2509762048721313, 1.2485343217849731, 1.2462835311889648, 1.2442249059677124, 1.2423595190048218, 1.2406879663467407, 1.2392112016677856, 1.2379300594329834, 1.2368448972702026, 1.2359563112258911, 1.2352646589279175, 1.2347705364227295, 1.2344739437103271, 1.25, 1.250097632408142, 1.2503905296325684, 1.2508785724639893, 1.2515615224838257, 1.252439022064209, 1.2535107135772705, 1.2547760009765625, 1.2562344074249268, 1.2578853368759155, 1.2597277164459229, 1.2617610692977905, 1.2639843225479126, 1.266396403312683, 1.268996238708496, 1.2717828750610352, 1.2747548818588257, 1.2779110670089722, 1.28125, 1.2847703695297241, 1.2884705066680908, 1.2923489809036255, 1.296404242515564, 1.3006346225738525, 1.305038332939148, 1.309613585472107, 1.3143588304519653, 1.3192719221115112, 1.3243513107299805, 1.3295947313308716, 1.3350006341934204, 1.3405667543411255, 1.346291184425354, 1.3521720170974731, 1.358207106590271, 1.3643944263458252, 1.370732069015503, 1.3772176504135132, 1.3838493824005127, 1.390625, 1.3975424766540527, 1.404599666595459, 1.411794662475586, 1.4191250801086426, 1.426589012145996, 1.4341843128204346, 1.4419089555740356, 1.449760913848877, 1.457737922668457, 1.4658381938934326, 1.4740595817565918, 1.4824000597000122, 1.4908576011657715, 1.4994301795959473, 1.5081160068511963, 1.5169130563735962, 1.5258194208145142, 1.5348331928253174, 1.543952465057373, 1.5531753301620483, 1.5625, 1.5719246864318848, 1.5814476013183594, 1.5910669565200806, 1.6007810831069946, 1.6105881929397583, 1.6204864978790283, 1.63047456741333, 1.6405506134033203, 1.6507130861282349, 1.66096031665802, 1.6712907552719116, 1.681702971458435, 1.6921954154968262, 1.7027665376663208, 1.7134150266647339, 1.7241393327713013, 1.7349380254745483, 1.7458096742630005, 1.7567532062530518, 1.7677669525146484, 1.7788498401641846, 1.7900004386901855, 1.8012175559997559, 1.8125, 1.823846459388733, 1.8352558612823486, 1.846726894378662, 1.858258605003357, 1.869849681854248, 1.881499171257019, 1.8932058811187744, 1.9049688577651978, 1.9167869091033936, 1.9286593198776245, 1.9405847787857056, 1.9525624513626099, 1.964591383934021, 1.9766706228256226, 1.9887992143630981, 2.000976324081421, 2.0132009983062744, 2.025472640991211, 2.037790060043335, 2.050152540206909, 2.062559127807617, 2.075009346008301, 2.0875022411346436, 2.100037097930908, 2.1126132011413574, 2.125229835510254, 2.1378860473632812, 2.1505813598632812, 2.1633150577545166, 2.176086187362671, 2.188894748687744, 2.2017393112182617, 2.2146198749542236, 2.2275354862213135, 2.240485429763794, 2.253469467163086, 2.266486883163452, 2.2795369625091553, 2.292619466781616, 2.3057334423065186, 2.318878412246704, 2.3320541381835938, 2.34525990486145, 2.3584952354431152, 2.34525990486145, 2.3320541381835938, 2.318878412246704, 2.3057334423065186, 2.292619466781616, 2.2795369625091553, 2.266486883163452, 2.253469467163086, 2.240485429763794, 2.2275354862213135, 2.2146198749542236, 2.2017393112182617, 2.188894748687744, 2.176086187362671, 2.1633150577545166, 2.1505813598632812, 2.1378860473632812, 2.125229835510254, 2.1126132011413574, 2.100037097930908, 2.0875022411346436, 2.075009346008301, 2.062559127807617, 2.050152540206909, 2.037790060043335, 2.025472640991211, 2.0132009983062744, 2.000976324081421, 1.9887992143630981, 1.9766706228256226, 1.964591383934021, 1.9525624513626099, 1.9405847787857056, 1.9286593198776245, 1.9167869091033936, 1.9049688577651978, 1.8932058811187744, 1.881499171257019, 1.869849681854248, 1.858258605003357, 1.846726894378662, 1.8352558612823486, 1.823846459388733, 1.8125, 1.8012175559997559, 1.7900004386901855, 1.7788498401641846, 1.7677669525146484, 1.7567532062530518, 1.7458096742630005, 1.7349380254745483, 1.7241393327713013, 1.7134150266647339, 1.7027665376663208, 1.6921954154968262, 1.681702971458435, 1.6712907552719116, 1.66096031665802, 1.6507130861282349, 1.6405506134033203, 1.63047456741333, 1.6204864978790283, 1.6105881929397583, 1.6007810831069946, 1.5910669565200806, 1.5814476013183594, 1.5719246864318848, 1.5625, 1.5531753301620483, 1.543952465057373, 1.5348331928253174, 1.5258194208145142, 1.5169130563735962, 1.5081160068511963, 1.4994301795959473, 1.4908576011657715, 1.4824000597000122, 1.4740595817565918, 1.4658381938934326, 1.457737922668457, 1.449760913848877, 1.4419089555740356, 1.4341843128204346, 1.426589012145996, 1.4191250801086426, 1.411794662475586, 1.404599666595459, 1.3975424766540527, 1.390625, 1.3838493824005127, 1.3772176504135132, 1.370732069015503, 1.3643944263458252, 1.358207106590271, 1.3521720170974731, 1.346291184425354, 1.3405667543411255, 1.3350006341934204, 1.3295947313308716, 1.3243513107299805, 1.3192719221115112, 1.3143588304519653, 1.309613585472107, 1.305038332939148, 1.3006346225738525, 1.296404242515564, 1.2923489809036255, 1.2884705066680908, 1.2847703695297241, 1.28125, 1.2779110670089722, 1.2747548818588257, 1.2717828750610352, 1.268996238708496, 1.266396403312683, 1.2639843225479126, 1.2617610692977905, 1.2597277164459229, 1.2578853368759155, 1.2562344074249268, 1.2547760009765625, 1.2535107135772705, 1.252439022064209, 1.2515615224838257, 1.2508785724639893, 1.2503905296325684, 1.250097632408142, 1.265625, 1.2657214403152466, 1.2660107612609863, 1.2664927244186401, 1.267167329788208, 1.2680339813232422, 1.2690924406051636, 1.270342230796814, 1.2717828750610352, 1.2734135389328003, 1.2752336263656616, 1.2772421836853027, 1.2794384956359863, 1.2818214893341064, 1.2843902111053467, 1.2871434688568115, 1.2900800704956055, 1.293198823928833, 1.296498417854309, 1.299977421760559, 1.303634524345398, 1.307468056678772, 1.3114765882492065, 1.315658450126648, 1.3200119733810425, 1.324535608291626, 1.3292274475097656, 1.3340859413146973, 1.339108943939209, 1.3442949056625366, 1.3496419191360474, 1.3551478385925293, 1.3608109951019287, 1.3666293621063232, 1.3726009130477905, 1.3787236213684082, 1.3849955797195435, 1.391414761543274, 1.3979791402816772, 1.404686689376831, 1.4115352630615234, 1.418522834777832, 1.425647497177124, 1.4329071044921875, 1.4402996301651, 1.4478230476379395, 1.4554752111434937, 1.4632543325424194, 1.4711582660675049, 1.4791849851608276, 1.4873325824737549, 1.4955990314483643, 1.5039823055267334, 1.512480616569519, 1.5210919380187988, 1.52981436252594, 1.5386459827423096, 1.5475850105285645, 1.5566295385360718, 1.5657777786254883, 1.5750279426574707, 1.5843781232833862, 1.5938265323638916, 1.6033717393875122, 1.6130117177963257, 1.6227447986602783, 1.6325695514678955, 1.6424840688705444, 1.6524869203567505, 1.6625763177871704, 1.6727509498596191, 1.6830090284347534, 1.6933492422103882, 1.7037699222564697, 1.714269757270813, 1.7248471975326538, 1.7355008125305176, 1.7462291717529297, 1.7570310831069946, 1.7679049968719482, 1.7788498401641846, 1.7898640632629395, 1.8009464740753174, 1.8120958805084229, 1.8233109712600708, 1.8345905542373657, 1.8459335565567017, 1.8573386669158936, 1.8688048124313354, 1.8803309202194214, 1.8919159173965454, 1.9035584926605225, 1.9152579307556152, 1.9270129203796387, 1.938822627067566, 1.950685977935791, 1.9626020193099976, 1.9745697975158691, 1.9865883588790894, 1.9986567497253418, 2.0107741355895996, 2.022939682006836, 2.0351524353027344, 2.0474116802215576, 2.0597164630889893, 2.072065830230713, 2.0844593048095703, 2.096895933151245, 2.109375, 2.1218957901000977, 2.1344573497772217, 2.147059202194214, 2.159700632095337, 2.1723806858062744, 2.1850991249084473, 2.197854995727539, 2.2106475830078125, 2.2234764099121094, 2.2363409996032715, 2.2492403984069824, 2.262174129486084, 2.275141716003418, 2.288142442703247, 2.301175832748413, 2.314241409301758, 2.327338457107544, 2.3404664993286133, 2.3536250591278076, 2.3668136596679688, 2.3536250591278076, 2.3404664993286133, 2.327338457107544, 2.314241409301758, 2.301175832748413, 2.288142442703247, 2.275141716003418, 2.262174129486084, 2.2492403984069824, 2.2363409996032715, 2.2234764099121094, 2.2106475830078125, 2.197854995727539, 2.1850991249084473, 2.1723806858062744, 2.159700632095337, 2.147059202194214, 2.1344573497772217, 2.1218957901000977, 2.109375, 2.096895933151245, 2.0844593048095703, 2.072065830230713, 2.0597164630889893, 2.0474116802215576, 2.0351524353027344, 2.022939682006836, 2.0107741355895996, 1.9986567497253418, 1.9865883588790894, 1.9745697975158691, 1.9626020193099976, 1.950685977935791, 1.938822627067566, 1.9270129203796387, 1.9152579307556152, 1.9035584926605225, 1.8919159173965454, 1.8803309202194214, 1.8688048124313354, 1.8573386669158936, 1.8459335565567017, 1.8345905542373657, 1.8233109712600708, 1.8120958805084229, 1.8009464740753174, 1.7898640632629395, 1.7788498401641846, 1.7679049968719482, 1.7570310831069946, 1.7462291717529297, 1.7355008125305176, 1.7248471975326538, 1.714269757270813, 1.7037699222564697, 1.6933492422103882, 1.6830090284347534, 1.6727509498596191, 1.6625763177871704, 1.6524869203567505, 1.6424840688705444, 1.6325695514678955, 1.6227447986602783, 1.6130117177963257, 1.6033717393875122, 1.5938265323638916, 1.5843781232833862, 1.5750279426574707, 1.5657777786254883, 1.5566295385360718, 1.5475850105285645, 1.5386459827423096, 1.52981436252594, 1.5210919380187988, 1.512480616569519, 1.5039823055267334, 1.4955990314483643, 1.4873325824737549, 1.4791849851608276, 1.4711582660675049, 1.4632543325424194, 1.4554752111434937, 1.4478230476379395, 1.4402996301651, 1.4329071044921875, 1.425647497177124, 1.418522834777832, 1.4115352630615234, 1.404686689376831, 1.3979791402816772, 1.391414761543274, 1.3849955797195435, 1.3787236213684082, 1.3726009130477905, 1.3666293621063232, 1.3608109951019287, 1.3551478385925293, 1.3496419191360474, 1.3442949056625366, 1.339108943939209, 1.3340859413146973, 1.3292274475097656, 1.324535608291626, 1.3200119733810425, 1.315658450126648, 1.3114765882492065, 1.307468056678772, 1.303634524345398, 1.299977421760559, 1.296498417854309, 1.293198823928833, 1.2900800704956055, 1.2871434688568115, 1.2843902111053467, 1.2818214893341064, 1.2794384956359863, 1.2772421836853027, 1.2752336263656616, 1.2734135389328003, 1.2717828750610352, 1.270342230796814, 1.2690924406051636, 1.2680339813232422, 1.267167329788208, 1.2664927244186401, 1.2660107612609863, 1.2657214403152466, 1.28125, 1.281345248222351, 1.2816309928894043, 1.2821072340011597, 1.282773494720459, 1.2836296558380127, 1.2846752405166626, 1.2859100103378296, 1.2873331308364868, 1.288944125175476, 1.29074227809906, 1.292726755142212, 1.2948968410491943, 1.2972514629364014, 1.2997896671295166, 1.302510380744934, 1.3054124116897583, 1.3084946870803833, 1.3117557764053345, 1.3151943683624268, 1.3188092708587646, 1.3225988149642944, 1.3265615701675415, 1.3306959867477417, 1.3350006341934204, 1.3394736051559448, 1.3441133499145508, 1.348918080329895, 1.3538862466812134, 1.359015703201294, 1.364305019378662, 1.369752049446106, 1.3753551244735718, 1.3811120986938477, 1.3870213031768799, 1.393080711364746, 1.399288296699524, 1.4056422710418701, 1.4121404886245728, 1.4187809228897095, 1.425561785697937, 1.432481050491333, 1.4395365715026855, 1.4467265605926514, 1.454048752784729, 1.4615013599395752, 1.4690823554992676, 1.4767898321151733, 1.4846216440200806, 1.492576003074646, 1.5006508827209473, 1.5088443756103516, 1.5171544551849365, 1.5255794525146484, 1.5341172218322754, 1.5427659749984741, 1.5515239238739014, 1.5603891611099243, 1.5693598985671997, 1.5784343481063843, 1.5876107215881348, 1.596887230873108, 1.60626220703125, 1.6157337427139282, 1.625300407409668, 1.634960412979126, 1.644712209701538, 1.654554009437561, 1.6644842624664307, 1.6745014190673828, 1.6846040487289429, 1.6947903633117676, 1.7050590515136719, 1.7154086828231812, 1.7258377075195312, 1.736344575881958, 1.746928095817566, 1.7575868368148804, 1.7683192491531372, 1.7791242599487305, 1.7900004386901855, 1.8009464740753174, 1.8119611740112305, 1.8230431079864502, 1.8341913223266602, 1.8454045057296753, 1.8566813468933105, 1.8680208921432495, 1.8794218301773071, 1.890883207321167, 1.9024039506912231, 1.9139827489852905, 1.9256187677383423, 1.9373109340667725, 1.9490582942962646, 1.9608596563339233, 1.9727143049240112, 1.9846210479736328, 1.9965790510177612, 2.008587598800659, 2.0206453800201416, 2.0327517986297607, 2.0449059009552, 2.0571069717407227, 2.0693540573120117, 2.08164644241333, 2.0939831733703613, 2.106363534927368, 2.1187868118286133, 2.1312522888183594, 2.14375901222229, 2.156306505203247, 2.168894052505493, 2.181520938873291, 2.194186210632324, 2.2068896293640137, 2.219630002975464, 2.232407331466675, 2.24522066116333, 2.2580692768096924, 2.2709527015686035, 2.2838704586029053, 2.2968218326568604, 2.3098063468933105, 2.3228232860565186, 2.335872173309326, 2.348952531814575, 2.3620638847351074, 2.3752055168151855, 2.3620638847351074, 2.348952531814575, 2.335872173309326, 2.3228232860565186, 2.3098063468933105, 2.2968218326568604, 2.2838704586029053, 2.2709527015686035, 2.2580692768096924, 2.24522066116333, 2.232407331466675, 2.219630002975464, 2.2068896293640137, 2.194186210632324, 2.181520938873291, 2.168894052505493, 2.156306505203247, 2.14375901222229, 2.1312522888183594, 2.1187868118286133, 2.106363534927368, 2.0939831733703613, 2.08164644241333, 2.0693540573120117, 2.0571069717407227, 2.0449059009552, 2.0327517986297607, 2.0206453800201416, 2.008587598800659, 1.9965790510177612, 1.9846210479736328, 1.9727143049240112, 1.9608596563339233, 1.9490582942962646, 1.9373109340667725, 1.9256187677383423, 1.9139827489852905, 1.9024039506912231, 1.890883207321167, 1.8794218301773071, 1.8680208921432495, 1.8566813468933105, 1.8454045057296753, 1.8341913223266602, 1.8230431079864502, 1.8119611740112305, 1.8009464740753174, 1.7900004386901855, 1.7791242599487305, 1.7683192491531372, 1.7575868368148804, 1.746928095817566, 1.736344575881958, 1.7258377075195312, 1.7154086828231812, 1.7050590515136719, 1.6947903633117676, 1.6846040487289429, 1.6745014190673828, 1.6644842624664307, 1.654554009437561, 1.644712209701538, 1.634960412979126, 1.625300407409668, 1.6157337427139282, 1.60626220703125, 1.596887230873108, 1.5876107215881348, 1.5784343481063843, 1.5693598985671997, 1.5603891611099243, 1.5515239238739014, 1.5427659749984741, 1.5341172218322754, 1.5255794525146484, 1.5171544551849365, 1.5088443756103516, 1.5006508827209473, 1.492576003074646, 1.4846216440200806, 1.4767898321151733, 1.4690823554992676, 1.4615013599395752, 1.454048752784729, 1.4467265605926514, 1.4395365715026855, 1.432481050491333, 1.425561785697937, 1.4187809228897095, 1.4121404886245728, 1.4056422710418701, 1.399288296699524, 1.393080711364746, 1.3870213031768799, 1.3811120986938477, 1.3753551244735718, 1.369752049446106, 1.364305019378662, 1.359015703201294, 1.3538862466812134, 1.348918080329895, 1.3441133499145508, 1.3394736051559448, 1.3350006341934204, 1.3306959867477417, 1.3265615701675415, 1.3225988149642944, 1.3188092708587646, 1.3151943683624268, 1.3117557764053345, 1.3084946870803833, 1.3054124116897583, 1.302510380744934, 1.2997896671295166, 1.2972514629364014, 1.2948968410491943, 1.292726755142212, 1.29074227809906, 1.288944125175476, 1.2873331308364868, 1.2859100103378296, 1.2846752405166626, 1.2836296558380127, 1.282773494720459, 1.2821072340011597, 1.2816309928894043, 1.281345248222351, 1.296875, 1.2969691753387451, 1.2972514629364014, 1.2977218627929688, 1.2983801364898682, 1.2992260456085205, 1.3002591133117676, 1.3014789819717407, 1.3028851747512817, 1.3044769763946533, 1.3062537908554077, 1.308214783668518, 1.3103591203689575, 1.3126859664916992, 1.3151943683624268, 1.3178832530975342, 1.3207515478134155, 1.3237980604171753, 1.327021598815918, 1.3304208517074585, 1.3339943885803223, 1.3377408981323242, 1.3416589498519897, 1.3457471132278442, 1.3500036001205444, 1.3544270992279053, 1.359015703201294, 1.3637681007385254, 1.3686822652816772, 1.3737565279006958, 1.3789892196655273, 1.3843785524368286, 1.3899226188659668, 1.395619511604309, 1.4014675617218018, 1.4074647426605225, 1.413609266281128, 1.4198989868164062, 1.4263323545455933, 1.4329071044921875, 1.4396214485168457, 1.4464733600616455, 1.453460931777954, 1.4605823755264282, 1.467835545539856, 1.475218415260315, 1.4827293157577515, 1.4903662204742432, 1.4981271028518677, 1.5060100555419922, 1.5140132904052734, 1.5221349000930786, 1.5303728580474854, 1.5387253761291504, 1.5471906661987305, 1.5557667016983032, 1.5644519329071045, 1.573244333267212, 1.5821421146392822, 1.5911437273025513, 1.6002471446990967, 1.6094508171081543, 1.6187530755996704, 1.6281520128250122, 1.6376460790634155, 1.6472337245941162, 1.656913161277771, 1.6666829586029053, 1.6765413284301758, 1.6864869594573975, 1.6965181827545166, 1.706633448600769, 1.7168313264846802, 1.7271103858947754, 1.7374690771102905, 1.7479060888290405, 1.7584199905395508, 1.7690094709396362, 1.7796730995178223, 1.7904095649719238, 1.8012175559997559, 1.8120958805084229, 1.8230431079864502, 1.834058165550232, 1.8451398611068726, 1.856286883354187, 1.8674980401992798, 1.878772258758545, 1.890108346939087, 1.9015053510665894, 1.9129620790481567, 1.924477458000183, 1.9360504150390625, 1.947679877281189, 1.9593650102615356, 1.9711047410964966, 1.9828981161117554, 1.994744062423706, 2.0066418647766113, 2.0185904502868652, 2.0305888652801514, 2.0426363945007324, 2.054732084274292, 2.0668749809265137, 2.0790646076202393, 2.0912997722625732, 2.1035799980163574, 2.1159043312072754, 2.1282718181610107, 2.1406819820404053, 2.1531341075897217, 2.1656272411346436, 2.1781609058380127, 2.1907341480255127, 2.2033467292785645, 2.2159974575042725, 2.2286858558654785, 2.2414114475250244, 2.254173755645752, 2.2669715881347656, 2.2798047065734863, 2.292672634124756, 2.305574417114258, 2.318509817123413, 2.3314783573150635, 2.3444790840148926, 2.3575117588043213, 2.3705756664276123, 2.3836703300476074, 2.3705756664276123, 2.3575117588043213, 2.3444790840148926, 2.3314783573150635, 2.318509817123413, 2.305574417114258, 2.292672634124756, 2.2798047065734863, 2.2669715881347656, 2.254173755645752, 2.2414114475250244, 2.2286858558654785, 2.2159974575042725, 2.2033467292785645, 2.1907341480255127, 2.1781609058380127, 2.1656272411346436, 2.1531341075897217, 2.1406819820404053, 2.1282718181610107, 2.1159043312072754, 2.1035799980163574, 2.0912997722625732, 2.0790646076202393, 2.0668749809265137, 2.054732084274292, 2.0426363945007324, 2.0305888652801514, 2.0185904502868652, 2.0066418647766113, 1.994744062423706, 1.9828981161117554, 1.9711047410964966, 1.9593650102615356, 1.947679877281189, 1.9360504150390625, 1.924477458000183, 1.9129620790481567, 1.9015053510665894, 1.890108346939087, 1.878772258758545, 1.8674980401992798, 1.856286883354187, 1.8451398611068726, 1.834058165550232, 1.8230431079864502, 1.8120958805084229, 1.8012175559997559, 1.7904095649719238, 1.7796730995178223, 1.7690094709396362, 1.7584199905395508, 1.7479060888290405, 1.7374690771102905, 1.7271103858947754, 1.7168313264846802, 1.706633448600769, 1.6965181827545166, 1.6864869594573975, 1.6765413284301758, 1.6666829586029053, 1.656913161277771, 1.6472337245941162, 1.6376460790634155, 1.6281520128250122, 1.6187530755996704, 1.6094508171081543, 1.6002471446990967, 1.5911437273025513, 1.5821421146392822, 1.573244333267212, 1.5644519329071045, 1.5557667016983032, 1.5471906661987305, 1.5387253761291504, 1.5303728580474854, 1.5221349000930786, 1.5140132904052734, 1.5060100555419922, 1.4981271028518677, 1.4903662204742432, 1.4827293157577515, 1.475218415260315, 1.467835545539856, 1.4605823755264282, 1.453460931777954, 1.4464733600616455, 1.4396214485168457, 1.4329071044921875, 1.4263323545455933, 1.4198989868164062, 1.413609266281128, 1.4074647426605225, 1.4014675617218018, 1.395619511604309, 1.3899226188659668, 1.3843785524368286, 1.3789892196655273, 1.3737565279006958, 1.3686822652816772, 1.3637681007385254, 1.359015703201294, 1.3544270992279053, 1.3500036001205444, 1.3457471132278442, 1.3416589498519897, 1.3377408981323242, 1.3339943885803223, 1.3304208517074585, 1.327021598815918, 1.3237980604171753, 1.3207515478134155, 1.3178832530975342, 1.3151943683624268, 1.3126859664916992, 1.3103591203689575, 1.308214783668518, 1.3062537908554077, 1.3044769763946533, 1.3028851747512817, 1.3014789819717407, 1.3002591133117676, 1.2992260456085205, 1.2983801364898682, 1.2977218627929688, 1.2972514629364014, 1.2969691753387451, 1.3125, 1.3125929832458496, 1.3128719329833984, 1.313336730003357, 1.3139872550964355, 1.3148231506347656, 1.315843939781189, 1.3170493841171265, 1.3184388875961304, 1.3200119733810425, 1.3217679262161255, 1.3237059116363525, 1.3258252143859863, 1.328125, 1.3306043148040771, 1.3332620859146118, 1.3360973596572876, 1.339108943939209, 1.34229576587677, 1.345656394958496, 1.3491895198822021, 1.3528940677642822, 1.3567683696746826, 1.3608109951019287, 1.3650206327438354, 1.3693954944610596, 1.373934268951416, 1.3786351680755615, 1.3834965229034424, 1.3885166645050049, 1.3936939239501953, 1.39902663230896, 1.4045127630233765, 1.4101508855819702, 1.4159388542175293, 1.421875, 1.4279574155807495, 1.4341843128204346, 1.4405537843704224, 1.44706392288208, 1.4537129402160645, 1.4604988098144531, 1.4674196243286133, 1.4744735956192017, 1.481658697128296, 1.4889731407165527, 1.4964150190353394, 1.5039823055267334, 1.5116733312606812, 1.5194860696792603, 1.5274187326431274, 1.5354692935943604, 1.5436360836029053, 1.551917314529419, 1.560310959815979, 1.5688153505325317, 1.5774286985397339, 1.5861490964889526, 1.5949749946594238, 1.6039044857025146, 1.612936019897461, 1.6220676898956299, 1.6312979459762573, 1.640625, 1.6500473022460938, 1.6595633029937744, 1.6691713333129883, 1.6788697242736816, 1.6886570453643799, 1.6985316276550293, 1.7084921598434448, 1.7185369729995728, 1.7286646366119385, 1.7388737201690674, 1.7491627931594849, 1.7595304250717163, 1.7699753046035767, 1.7804960012435913, 1.7910912036895752, 1.8017597198486328, 1.8125, 1.8233109712600708, 1.8341913223266602, 1.8451398611068726, 1.856155276298523, 1.8672364950180054, 1.8783823251724243, 1.8895916938781738, 1.9008632898330688, 1.912196159362793, 1.9235892295837402, 1.9350413084030151, 1.9465514421463013, 1.9581185579299927, 1.9697418212890625, 1.9814200401306152, 1.993152379989624, 2.0049376487731934, 2.016775369644165, 2.0286641120910645, 2.0406033992767334, 2.0525922775268555, 2.064629554748535, 2.0767147541046143, 2.0888469219207764, 2.101025104522705, 2.113248825073242, 2.125516891479492, 2.137828826904297, 2.150183916091919, 2.162581205368042, 2.175020217895508, 2.1875, 2.2000200748443604, 2.2125794887542725, 2.225177764892578, 2.23781418800354, 2.25048828125, 2.2631990909576416, 2.2759463787078857, 2.288729190826416, 2.301547050476074, 2.314399480819702, 2.3272860050201416, 2.340205669403076, 2.3531582355499268, 2.366142988204956, 2.379159688949585, 2.392207384109497, 2.379159688949585, 2.366142988204956, 2.3531582355499268, 2.340205669403076, 2.3272860050201416, 2.314399480819702, 2.301547050476074, 2.288729190826416, 2.2759463787078857, 2.2631990909576416, 2.25048828125, 2.23781418800354, 2.225177764892578, 2.2125794887542725, 2.2000200748443604, 2.1875, 2.175020217895508, 2.162581205368042, 2.150183916091919, 2.137828826904297, 2.125516891479492, 2.113248825073242, 2.101025104522705, 2.0888469219207764, 2.0767147541046143, 2.064629554748535, 2.0525922775268555, 2.0406033992767334, 2.0286641120910645, 2.016775369644165, 2.0049376487731934, 1.993152379989624, 1.9814200401306152, 1.9697418212890625, 1.9581185579299927, 1.9465514421463013, 1.9350413084030151, 1.9235892295837402, 1.912196159362793, 1.9008632898330688, 1.8895916938781738, 1.8783823251724243, 1.8672364950180054, 1.856155276298523, 1.8451398611068726, 1.8341913223266602, 1.8233109712600708, 1.8125, 1.8017597198486328, 1.7910912036895752, 1.7804960012435913, 1.7699753046035767, 1.7595304250717163, 1.7491627931594849, 1.7388737201690674, 1.7286646366119385, 1.7185369729995728, 1.7084921598434448, 1.6985316276550293, 1.6886570453643799, 1.6788697242736816, 1.6691713333129883, 1.6595633029937744, 1.6500473022460938, 1.640625, 1.6312979459762573, 1.6220676898956299, 1.612936019897461, 1.6039044857025146, 1.5949749946594238, 1.5861490964889526, 1.5774286985397339, 1.5688153505325317, 1.560310959815979, 1.551917314529419, 1.5436360836029053, 1.5354692935943604, 1.5274187326431274, 1.5194860696792603, 1.5116733312606812, 1.5039823055267334, 1.4964150190353394, 1.4889731407165527, 1.481658697128296, 1.4744735956192017, 1.4674196243286133, 1.4604988098144531, 1.4537129402160645, 1.44706392288208, 1.4405537843704224, 1.4341843128204346, 1.4279574155807495, 1.421875, 1.4159388542175293, 1.4101508855819702, 1.4045127630233765, 1.39902663230896, 1.3936939239501953, 1.3885166645050049, 1.3834965229034424, 1.3786351680755615, 1.373934268951416, 1.3693954944610596, 1.3650206327438354, 1.3608109951019287, 1.3567683696746826, 1.3528940677642822, 1.3491895198822021, 1.345656394958496, 1.34229576587677, 1.339108943939209, 1.3360973596572876, 1.3332620859146118, 1.3306043148040771, 1.328125, 1.3258252143859863, 1.3237059116363525, 1.3217679262161255, 1.3200119733810425, 1.3184388875961304, 1.3170493841171265, 1.315843939781189, 1.3148231506347656, 1.3139872550964355, 1.313336730003357, 1.3128719329833984, 1.3125929832458496, 1.328125, 1.3282169103622437, 1.3284926414489746, 1.3289519548416138, 1.3295947313308716, 1.3304208517074585, 1.3314297199249268, 1.3326210975646973, 1.3339943885803223, 1.3355491161346436, 1.3372845649719238, 1.3392001390457153, 1.3412950038909912, 1.3435683250427246, 1.3460191488265991, 1.348646640777588, 1.3514496088027954, 1.3544270992279053, 1.3575778007507324, 1.3609007596969604, 1.3643944263458252, 1.3680577278137207, 1.3718892335891724, 1.3758875131607056, 1.3800511360168457, 1.3843785524368286, 1.3888683319091797, 1.3935188055038452, 1.398328423500061, 1.4032955169677734, 1.4084184169769287, 1.4136955738067627, 1.4191250801086426, 1.4247052669525146, 1.4304343461990356, 1.4363106489181519, 1.4423322677612305, 1.4484972953796387, 1.4548041820526123, 1.4612507820129395, 1.467835545539856, 1.47455632686615, 1.4814114570617676, 1.4883991479873657, 1.495517373085022, 1.502764344215393, 1.5101382732391357, 1.5176372528076172, 1.5252593755722046, 1.5330028533935547, 1.5408658981323242, 1.5488466024398804, 1.5569432973861694, 1.565153956413269, 1.573477029800415, 1.5819107294082642, 1.590453028678894, 1.59910249710083, 1.607857346534729, 1.616715669631958, 1.625675916671753, 1.63473641872406, 1.6438955068588257, 1.6531516313552856, 1.6625028848648071, 1.671947956085205, 1.6814851760864258, 1.691112995147705, 1.7008298635482788, 1.7106342315673828, 1.7205246686935425, 1.7304996252059937, 1.7405576705932617, 1.750697374343872, 1.7609174251556396, 1.7712162733078003, 1.781592607498169, 1.7920451164245605, 1.80257248878479, 1.8131734132766724, 1.823846459388733, 1.8345905542373657, 1.8454045057296753, 1.856286883354187, 1.8672364950180054, 1.878252387046814, 1.8893332481384277, 1.9004778861999512, 1.9116853475570679, 1.9229544401168823, 1.9342840909957886, 1.9456732273101807, 1.9571208953857422, 1.9686260223388672, 1.9801875352859497, 1.9918044805526733, 2.0034759044647217, 2.0152010917663574, 2.0269787311553955, 2.0388081073760986, 2.0506882667541504, 2.0626182556152344, 2.0745975971221924, 2.086625099182129, 2.0986998081207275, 2.11082124710083, 2.12298846244812, 2.1352007389068604, 2.1474571228027344, 2.159757137298584, 2.1720998287200928, 2.1844844818115234, 2.1969106197357178, 2.2093772888183594, 2.221883773803711, 2.2344295978546143, 2.247014045715332, 2.259636402130127, 2.272296190261841, 2.2849926948547363, 2.297725200653076, 2.310493230819702, 2.323296070098877, 2.3361334800720215, 2.3490045070648193, 2.3619089126586914, 2.3748457431793213, 2.387814998626709, 2.400815725326538, 2.387814998626709, 2.3748457431793213, 2.3619089126586914, 2.3490045070648193, 2.3361334800720215, 2.323296070098877, 2.310493230819702, 2.297725200653076, 2.2849926948547363, 2.272296190261841, 2.259636402130127, 2.247014045715332, 2.2344295978546143, 2.221883773803711, 2.2093772888183594, 2.1969106197357178, 2.1844844818115234, 2.1720998287200928, 2.159757137298584, 2.1474571228027344, 2.1352007389068604, 2.12298846244812, 2.11082124710083, 2.0986998081207275, 2.086625099182129, 2.0745975971221924, 2.0626182556152344, 2.0506882667541504, 2.0388081073760986, 2.0269787311553955, 2.0152010917663574, 2.0034759044647217, 1.9918044805526733, 1.9801875352859497, 1.9686260223388672, 1.9571208953857422, 1.9456732273101807, 1.9342840909957886, 1.9229544401168823, 1.9116853475570679, 1.9004778861999512, 1.8893332481384277, 1.878252387046814, 1.8672364950180054, 1.856286883354187, 1.8454045057296753, 1.8345905542373657, 1.823846459388733, 1.8131734132766724, 1.80257248878479, 1.7920451164245605, 1.781592607498169, 1.7712162733078003, 1.7609174251556396, 1.750697374343872, 1.7405576705932617, 1.7304996252059937, 1.7205246686935425, 1.7106342315673828, 1.7008298635482788, 1.691112995147705, 1.6814851760864258, 1.671947956085205, 1.6625028848648071, 1.6531516313552856, 1.6438955068588257, 1.63473641872406, 1.625675916671753, 1.616715669631958, 1.607857346534729, 1.59910249710083, 1.590453028678894, 1.5819107294082642, 1.573477029800415, 1.565153956413269, 1.5569432973861694, 1.5488466024398804, 1.5408658981323242, 1.5330028533935547, 1.5252593755722046, 1.5176372528076172, 1.5101382732391357, 1.502764344215393, 1.495517373085022, 1.4883991479873657, 1.4814114570617676, 1.47455632686615, 1.467835545539856, 1.4612507820129395, 1.4548041820526123, 1.4484972953796387, 1.4423322677612305, 1.4363106489181519, 1.4304343461990356, 1.4247052669525146, 1.4191250801086426, 1.4136955738067627, 1.4084184169769287, 1.4032955169677734, 1.398328423500061, 1.3935188055038452, 1.3888683319091797, 1.3843785524368286, 1.3800511360168457, 1.3758875131607056, 1.3718892335891724, 1.3680577278137207, 1.3643944263458252, 1.3609007596969604, 1.3575778007507324, 1.3544270992279053, 1.3514496088027954, 1.348646640777588, 1.3460191488265991, 1.3435683250427246, 1.3412950038909912, 1.3392001390457153, 1.3372845649719238, 1.3355491161346436, 1.3339943885803223, 1.3326210975646973, 1.3314297199249268, 1.3304208517074585, 1.3295947313308716, 1.3289519548416138, 1.3284926414489746, 1.3282169103622437, 1.34375, 1.3438408374786377, 1.3441133499145508, 1.3445672988891602, 1.3452026844024658, 1.3460191488265991, 1.3470163345336914, 1.3481940031051636, 1.3495514392852783, 1.351088285446167, 1.3528038263320923, 1.3546974658966064, 1.3567683696746826, 1.359015703201294, 1.3614387512207031, 1.3640365600585938, 1.3668079376220703, 1.369752049446106, 1.3728677034378052, 1.376153588294983, 1.3796087503433228, 1.38323175907135, 1.3870213031768799, 1.390976071357727, 1.395094633102417, 1.399375557899475, 1.4038172960281372, 1.4084184169769287, 1.4131773710250854, 1.4180924892425537, 1.4231622219085693, 1.428384780883789, 1.4337587356567383, 1.4392821788787842, 1.4449535608291626, 1.4507709741592407, 1.4567327499389648, 1.4628372192382812, 1.4690823554992676, 1.4754667282104492, 1.4819881916046143, 1.4886451959609985, 1.4954357147216797, 1.5023581981658936, 1.5094106197357178, 1.516591191291809, 1.5238981246948242, 1.5313297510147095, 1.5388840436935425, 1.5465593338012695, 1.5543537139892578, 1.5622656345367432, 1.5702930688858032, 1.5784343481063843, 1.5866878032684326, 1.5950515270233154, 1.6035239696502686, 1.6121032238006592, 1.6207878589630127, 1.6295758485794067, 1.6384658813476562, 1.6474560499191284, 1.656544804573059, 1.6657304763793945, 1.6750116348266602, 1.6843866109848022, 1.693853735923767, 1.7034116983413696, 1.7130587100982666, 1.7227935791015625, 1.732614517211914, 1.7425203323364258, 1.752509355545044, 1.762580394744873, 1.7727317810058594, 1.782962441444397, 1.7932708263397217, 1.803655743598938, 1.8141156435012817, 1.824649453163147, 1.8352558612823486, 1.8459335565567017, 1.8566813468933105, 1.8674980401992798, 1.8783823251724243, 1.8893332481384277, 1.900349497795105, 1.91143000125885, 1.9225735664367676, 1.933779239654541, 1.945045828819275, 1.9563722610473633, 1.9677577018737793, 1.9792009592056274, 1.9907010793685913, 2.0022571086883545, 2.0138678550720215, 2.0255327224731445, 2.0372507572174072, 2.049020767211914, 2.0608420372009277, 2.072713851928711, 2.084635019302368, 2.096604824066162, 2.1086225509643555, 2.120687246322632, 2.132798194885254, 2.1449546813964844, 2.1571555137634277, 2.169400453567505, 2.1816887855529785, 2.194019317626953, 2.2063915729522705, 2.2188050746917725, 2.2312588691711426, 2.2437522411346436, 2.256284713745117, 2.268855571746826, 2.281464099884033, 2.29410982131958, 2.3067920207977295, 2.319509983062744, 2.332263469696045, 2.3450517654418945, 2.3578741550445557, 2.37073016166687, 2.3836193084716797, 2.396540880203247, 2.409494638442993, 2.396540880203247, 2.3836193084716797, 2.37073016166687, 2.3578741550445557, 2.3450517654418945, 2.332263469696045, 2.319509983062744, 2.3067920207977295, 2.29410982131958, 2.281464099884033, 2.268855571746826, 2.256284713745117, 2.2437522411346436, 2.2312588691711426, 2.2188050746917725, 2.2063915729522705, 2.194019317626953, 2.1816887855529785, 2.169400453567505, 2.1571555137634277, 2.1449546813964844, 2.132798194885254, 2.120687246322632, 2.1086225509643555, 2.096604824066162, 2.084635019302368, 2.072713851928711, 2.0608420372009277, 2.049020767211914, 2.0372507572174072, 2.0255327224731445, 2.0138678550720215, 2.0022571086883545, 1.9907010793685913, 1.9792009592056274, 1.9677577018737793, 1.9563722610473633, 1.945045828819275, 1.933779239654541, 1.9225735664367676, 1.91143000125885, 1.900349497795105, 1.8893332481384277, 1.8783823251724243, 1.8674980401992798, 1.8566813468933105, 1.8459335565567017, 1.8352558612823486, 1.824649453163147, 1.8141156435012817, 1.803655743598938, 1.7932708263397217, 1.782962441444397, 1.7727317810058594, 1.762580394744873, 1.752509355545044, 1.7425203323364258, 1.732614517211914, 1.7227935791015625, 1.7130587100982666, 1.7034116983413696, 1.693853735923767, 1.6843866109848022, 1.6750116348266602, 1.6657304763793945, 1.656544804573059, 1.6474560499191284, 1.6384658813476562, 1.6295758485794067, 1.6207878589630127, 1.6121032238006592, 1.6035239696502686, 1.5950515270233154, 1.5866878032684326, 1.5784343481063843, 1.5702930688858032, 1.5622656345367432, 1.5543537139892578, 1.5465593338012695, 1.5388840436935425, 1.5313297510147095, 1.5238981246948242, 1.516591191291809, 1.5094106197357178, 1.5023581981658936, 1.4954357147216797, 1.4886451959609985, 1.4819881916046143, 1.4754667282104492, 1.4690823554992676, 1.4628372192382812, 1.4567327499389648, 1.4507709741592407, 1.4449535608291626, 1.4392821788787842, 1.4337587356567383, 1.428384780883789, 1.4231622219085693, 1.4180924892425537, 1.4131773710250854, 1.4084184169769287, 1.4038172960281372, 1.399375557899475, 1.395094633102417, 1.390976071357727, 1.3870213031768799, 1.38323175907135, 1.3796087503433228, 1.376153588294983, 1.3728677034378052, 1.369752049446106, 1.3668079376220703, 1.3640365600585938, 1.3614387512207031, 1.359015703201294, 1.3567683696746826, 1.3546974658966064, 1.3528038263320923, 1.351088285446167, 1.3495514392852783, 1.3481940031051636, 1.3470163345336914, 1.3460191488265991, 1.3452026844024658, 1.3445672988891602, 1.3441133499145508, 1.3438408374786377, 1.359375, 1.3594647645950317, 1.3597341775894165, 1.3601830005645752, 1.3608109951019287, 1.361618161201477, 1.3626039028167725, 1.3637681007385254, 1.3651100397109985, 1.3666293621063232, 1.3683254718780518, 1.3701975345611572, 1.3722450733184814, 1.3744672536849976, 1.3768631219863892, 1.3794317245483398, 1.3821723461151123, 1.385083794593811, 1.38816499710083, 1.391414761543274, 1.3948321342468262, 1.3984156847000122, 1.4021642208099365, 1.406076431274414, 1.4101508855819702, 1.4143861532211304, 1.4187809228897095, 1.423333764076233, 1.4280428886413574, 1.4329071044921875, 1.4379245042800903, 1.4430937767028809, 1.4484130144119263, 1.4538809061050415, 1.4594954252243042, 1.4652551412582397, 1.4711582660675049, 1.4772030115127563, 1.48338782787323, 1.489710807800293, 1.4961702823638916, 1.502764344215393, 1.5094914436340332, 1.5163496732711792, 1.5233373641967773, 1.5304526090621948, 1.537693738937378, 1.5450589656829834, 1.5525463819503784, 1.5601544380187988, 1.5678813457489014, 1.5757253170013428, 1.5836845636367798, 1.5917572975158691, 1.5999419689178467, 1.6082369089126587, 1.6166402101516724, 1.625150203704834, 1.633765459060669, 1.6424840688705444, 1.6513044834136963, 1.6602251529693604, 1.669244408607483, 1.6783607006072998, 1.6875723600387573, 1.6968778371810913, 1.7062757015228271, 1.7157644033432007, 1.7253425121307373, 1.7350083589553833, 1.744760513305664, 1.754597783088684, 1.7645184993743896, 1.7745212316513062, 1.784604787826538, 1.7947677373886108, 1.8050087690353394, 1.815326452255249, 1.8257195949554443, 1.8361867666244507, 1.846726894378662, 1.8573386669158936, 1.8680208921432495, 1.878772258758545, 1.8895916938781738, 1.9004778861999512, 1.91143000125885, 1.922446608543396, 1.933526635169983, 1.944669246673584, 1.9558730125427246, 1.9671372175216675, 1.978460669517517, 1.989842414855957, 2.001281261444092, 2.0127766132354736, 2.024327039718628, 2.0359320640563965, 2.047590494155884, 2.0593016147613525, 2.0710642337799072, 2.0828776359558105, 2.094740867614746, 2.1066534519195557, 2.1186139583587646, 2.130622148513794, 2.142676830291748, 2.1547775268554688, 2.1669232845306396, 2.1791133880615234, 2.191347122192383, 2.2036235332489014, 2.2159423828125, 2.228302478790283, 2.2407033443450928, 2.2531445026397705, 2.265625, 2.278144359588623, 2.2907016277313232, 2.3032968044281006, 2.3159286975860596, 2.328596830368042, 2.3413007259368896, 2.3540399074554443, 2.3668136596679688, 2.3796212673187256, 2.3924624919891357, 2.405336618423462, 2.418243169784546, 2.405336618423462, 2.3924624919891357, 2.3796212673187256, 2.3668136596679688, 2.3540399074554443, 2.3413007259368896, 2.328596830368042, 2.3159286975860596, 2.3032968044281006, 2.2907016277313232, 2.278144359588623, 2.265625, 2.2531445026397705, 2.2407033443450928, 2.228302478790283, 2.2159423828125, 2.2036235332489014, 2.191347122192383, 2.1791133880615234, 2.1669232845306396, 2.1547775268554688, 2.142676830291748, 2.130622148513794, 2.1186139583587646, 2.1066534519195557, 2.094740867614746, 2.0828776359558105, 2.0710642337799072, 2.0593016147613525, 2.047590494155884, 2.0359320640563965, 2.024327039718628, 2.0127766132354736, 2.001281261444092, 1.989842414855957, 1.978460669517517, 1.9671372175216675, 1.9558730125427246, 1.944669246673584, 1.933526635169983, 1.922446608543396, 1.91143000125885, 1.9004778861999512, 1.8895916938781738, 1.878772258758545, 1.8680208921432495, 1.8573386669158936, 1.846726894378662, 1.8361867666244507, 1.8257195949554443, 1.815326452255249, 1.8050087690353394, 1.7947677373886108, 1.784604787826538, 1.7745212316513062, 1.7645184993743896, 1.754597783088684, 1.744760513305664, 1.7350083589553833, 1.7253425121307373, 1.7157644033432007, 1.7062757015228271, 1.6968778371810913, 1.6875723600387573, 1.6783607006072998, 1.669244408607483, 1.6602251529693604, 1.6513044834136963, 1.6424840688705444, 1.633765459060669, 1.625150203704834, 1.6166402101516724, 1.6082369089126587, 1.5999419689178467, 1.5917572975158691, 1.5836845636367798, 1.5757253170013428, 1.5678813457489014, 1.5601544380187988, 1.5525463819503784, 1.5450589656829834, 1.537693738937378, 1.5304526090621948, 1.5233373641967773, 1.5163496732711792, 1.5094914436340332, 1.502764344215393, 1.4961702823638916, 1.489710807800293, 1.48338782787323, 1.4772030115127563, 1.4711582660675049, 1.4652551412582397, 1.4594954252243042, 1.4538809061050415, 1.4484130144119263, 1.4430937767028809, 1.4379245042800903, 1.4329071044921875, 1.4280428886413574, 1.423333764076233, 1.4187809228897095, 1.4143861532211304, 1.4101508855819702, 1.406076431274414, 1.4021642208099365, 1.3984156847000122, 1.3948321342468262, 1.391414761543274, 1.38816499710083, 1.385083794593811, 1.3821723461151123, 1.3794317245483398, 1.3768631219863892, 1.3744672536849976, 1.3722450733184814, 1.3701975345611572, 1.3683254718780518, 1.3666293621063232, 1.3651100397109985, 1.3637681007385254, 1.3626039028167725, 1.361618161201477, 1.3608109951019287, 1.3601830005645752, 1.3597341775894165, 1.3594647645950317, 1.375, 1.3750888109207153, 1.3753551244735718, 1.3757988214492798, 1.3764196634292603, 1.3772176504135132, 1.3781923055648804, 1.3793432712554932, 1.3806700706481934, 1.3821723461151123, 1.3838493824005127, 1.3857005834579468, 1.3877252340316772, 1.3899226188659668, 1.392291784286499, 1.3948321342468262, 1.3975424766540527, 1.4004219770431519, 1.403469443321228, 1.4066839218139648, 1.4100642204284668, 1.413609266281128, 1.417317509651184, 1.4211879968643188, 1.4252192974090576, 1.4294099807739258, 1.4337587356567383, 1.438264012336731, 1.4429244995117188, 1.4477386474609375, 1.452704906463623, 1.4578217267990112, 1.4630874395370483, 1.4685006141662598, 1.4740595817565918, 1.4797625541687012, 1.4856079816818237, 1.4915943145751953, 1.497719645500183, 1.5039823055267334, 1.510380744934082, 1.5169130563735962, 1.5235776901245117, 1.5303728580474854, 1.5372967720031738, 1.5443476438522339, 1.5515239238739014, 1.558823823928833, 1.5662455558776855, 1.5737873315811157, 1.5814476013183594, 1.5892245769500732, 1.5971165895462036, 1.6051218509674072, 1.6132386922836304, 1.6214655637741089, 1.62980055809021, 1.6382423639297485, 1.6467890739440918, 1.655439019203186, 1.6641908884048462, 1.6730427742004395, 1.6819933652877808, 1.6910408735275269, 1.7001838684082031, 1.7094206809997559, 1.71875, 1.7281701564788818, 1.7376798391342163, 1.7472774982452393, 1.7569615840911865, 1.7667309045791626, 1.7765837907791138, 1.7865190505981445, 1.7965352535247803, 1.806631088256836, 1.8168052434921265, 1.8270562887191772, 1.8373830318450928, 1.8477842807769775, 1.858258605003357, 1.8688048124313354, 1.8794218301773071, 1.890108346939087, 1.9008632898330688, 1.9116853475570679, 1.9225735664367676, 1.933526635169983, 1.9445436000823975, 1.9556233882904053, 1.9667649269104004, 1.9779670238494873, 1.9892288446426392, 2.00054931640625, 2.011927366256714, 2.023362159729004, 2.0348525047302246, 2.0463979244232178, 2.057996988296509, 2.0696489810943604, 2.081353187561035, 2.093108654022217, 2.1049141883850098, 2.116769552230835, 2.1286733150482178, 2.140625, 2.1526236534118652, 2.1646687984466553, 2.1767592430114746, 2.188894748687744, 2.2010738849639893, 2.21329665184021, 2.2255616188049316, 2.2378687858581543, 2.2502169609069824, 2.262605667114258, 2.2750344276428223, 2.2875020503997803, 2.300008535385132, 2.3125526905059814, 2.325134515762329, 2.3377528190612793, 2.350407123565674, 2.3630971908569336, 2.3758223056793213, 2.3885817527770996, 2.4013748168945312, 2.414201498031616, 2.427061080932617, 2.414201498031616, 2.4013748168945312, 2.3885817527770996, 2.3758223056793213, 2.3630971908569336, 2.350407123565674, 2.3377528190612793, 2.325134515762329, 2.3125526905059814, 2.300008535385132, 2.2875020503997803, 2.2750344276428223, 2.262605667114258, 2.2502169609069824, 2.2378687858581543, 2.2255616188049316, 2.21329665184021, 2.2010738849639893, 2.188894748687744, 2.1767592430114746, 2.1646687984466553, 2.1526236534118652, 2.140625, 2.1286733150482178, 2.116769552230835, 2.1049141883850098, 2.093108654022217, 2.081353187561035, 2.0696489810943604, 2.057996988296509, 2.0463979244232178, 2.0348525047302246, 2.023362159729004, 2.011927366256714, 2.00054931640625, 1.9892288446426392, 1.9779670238494873, 1.9667649269104004, 1.9556233882904053, 1.9445436000823975, 1.933526635169983, 1.9225735664367676, 1.9116853475570679, 1.9008632898330688, 1.890108346939087, 1.8794218301773071, 1.8688048124313354, 1.858258605003357, 1.8477842807769775, 1.8373830318450928, 1.8270562887191772, 1.8168052434921265, 1.806631088256836, 1.7965352535247803, 1.7865190505981445, 1.7765837907791138, 1.7667309045791626, 1.7569615840911865, 1.7472774982452393, 1.7376798391342163, 1.7281701564788818, 1.71875, 1.7094206809997559, 1.7001838684082031, 1.6910408735275269, 1.6819933652877808, 1.6730427742004395, 1.6641908884048462, 1.655439019203186, 1.6467890739440918, 1.6382423639297485, 1.62980055809021, 1.6214655637741089, 1.6132386922836304, 1.6051218509674072, 1.5971165895462036, 1.5892245769500732, 1.5814476013183594, 1.5737873315811157, 1.5662455558776855, 1.558823823928833, 1.5515239238739014, 1.5443476438522339, 1.5372967720031738, 1.5303728580474854, 1.5235776901245117, 1.5169130563735962, 1.510380744934082, 1.5039823055267334, 1.497719645500183, 1.4915943145751953, 1.4856079816818237, 1.4797625541687012, 1.4740595817565918, 1.4685006141662598, 1.4630874395370483, 1.4578217267990112, 1.452704906463623, 1.4477386474609375, 1.4429244995117188, 1.438264012336731, 1.4337587356567383, 1.4294099807739258, 1.4252192974090576, 1.4211879968643188, 1.417317509651184, 1.413609266281128, 1.4100642204284668, 1.4066839218139648, 1.403469443321228, 1.4004219770431519, 1.3975424766540527, 1.3948321342468262, 1.392291784286499, 1.3899226188659668, 1.3877252340316772, 1.3857005834579468, 1.3838493824005127, 1.3821723461151123, 1.3806700706481934, 1.3793432712554932, 1.3781923055648804, 1.3772176504135132, 1.3764196634292603, 1.3757988214492798, 1.3753551244735718, 1.3750888109207153, 1.390625, 1.3907127380371094, 1.390976071357727, 1.391414761543274, 1.39202880859375, 1.392817735671997, 1.3937815427780151, 1.3949196338653564, 1.3962316513061523, 1.3977171182632446, 1.399375557899475, 1.4012062549591064, 1.4032084941864014, 1.405381679534912, 1.4077249765396118, 1.410237431526184, 1.412918210029602, 1.4157663583755493, 1.4187809228897095, 1.4219608306884766, 1.425304889678955, 1.428812026977539, 1.432481050491333, 1.4363106489181519, 1.4402996301651, 1.4444465637207031, 1.4487501382827759, 1.4532090425491333, 1.4578217267990112, 1.462586760520935, 1.4675028324127197, 1.472568154335022, 1.4777814149856567, 1.4831409454345703, 1.4886451959609985, 1.4942924976348877, 1.5000814199447632, 1.5060100555419922, 1.5120769739151, 1.5182805061340332, 1.5246189832687378, 1.531090497970581, 1.537693738937378, 1.544426679611206, 1.5512878894805908, 1.558275580406189, 1.5653879642486572, 1.5726234912872314, 1.5799803733825684, 1.5874569416046143, 1.5950515270233154, 1.6027624607086182, 1.6105881929397583, 1.618526816368103, 1.6265767812728882, 1.63473641872406, 1.6430041790008545, 1.6513783931732178, 1.6598575115203857, 1.6684398651123047, 1.677123785018921, 1.6859078407287598, 1.6947903633117676, 1.7037699222564697, 1.712844967842102, 1.7220139503479004, 1.7312754392623901, 1.7406277656555176, 1.7500697374343872, 1.7595998048782349, 1.769216537475586, 1.7789183855056763, 1.7887042760849, 1.7985725402832031, 1.8085219860076904, 1.8185513019561768, 1.8286590576171875, 1.8388440608978271, 1.8491050004959106, 1.8594406843185425, 1.869849681854248, 1.8803309202194214, 1.890883207321167, 1.9015053510665894, 1.912196159362793, 1.9229544401168823, 1.933779239654541, 1.944669246673584, 1.9556233882904053, 1.9666407108306885, 1.9777201414108276, 1.9888606071472168, 2.00006103515625, 2.0113205909729004, 2.0226380825042725, 2.03401255607605, 2.045443296432495, 2.056929111480713, 2.0684690475463867, 2.0800626277923584, 2.0917084217071533, 2.1034059524536133, 2.1151540279388428, 2.1269521713256836, 2.1387994289398193, 2.1506948471069336, 2.162637710571289, 2.1746273040771484, 2.1866626739501953, 2.1987433433532715, 2.2108685970306396, 2.2230372428894043, 2.2352490425109863, 2.2475030422210693, 2.259798526763916, 2.272135019302368, 2.2845118045806885, 2.2969281673431396, 2.3093833923339844, 2.3218770027160645, 2.3344085216522217, 2.3469769954681396, 2.35958194732666, 2.372222900390625, 2.384899139404297, 2.3976101875305176, 2.410355567932129, 2.4231348037719727, 2.4359469413757324, 2.4231348037719727, 2.410355567932129, 2.3976101875305176, 2.384899139404297, 2.372222900390625, 2.35958194732666, 2.3469769954681396, 2.3344085216522217, 2.3218770027160645, 2.3093833923339844, 2.2969281673431396, 2.2845118045806885, 2.272135019302368, 2.259798526763916, 2.2475030422210693, 2.2352490425109863, 2.2230372428894043, 2.2108685970306396, 2.1987433433532715, 2.1866626739501953, 2.1746273040771484, 2.162637710571289, 2.1506948471069336, 2.1387994289398193, 2.1269521713256836, 2.1151540279388428, 2.1034059524536133, 2.0917084217071533, 2.0800626277923584, 2.0684690475463867, 2.056929111480713, 2.045443296432495, 2.03401255607605, 2.0226380825042725, 2.0113205909729004, 2.00006103515625, 1.9888606071472168, 1.9777201414108276, 1.9666407108306885, 1.9556233882904053, 1.944669246673584, 1.933779239654541, 1.9229544401168823, 1.912196159362793, 1.9015053510665894, 1.890883207321167, 1.8803309202194214, 1.869849681854248, 1.8594406843185425, 1.8491050004959106, 1.8388440608978271, 1.8286590576171875, 1.8185513019561768, 1.8085219860076904, 1.7985725402832031, 1.7887042760849, 1.7789183855056763, 1.769216537475586, 1.7595998048782349, 1.7500697374343872, 1.7406277656555176, 1.7312754392623901, 1.7220139503479004, 1.712844967842102, 1.7037699222564697, 1.6947903633117676, 1.6859078407287598, 1.677123785018921, 1.6684398651123047, 1.6598575115203857, 1.6513783931732178, 1.6430041790008545, 1.63473641872406, 1.6265767812728882, 1.618526816368103, 1.6105881929397583, 1.6027624607086182, 1.5950515270233154, 1.5874569416046143, 1.5799803733825684, 1.5726234912872314, 1.5653879642486572, 1.558275580406189, 1.5512878894805908, 1.544426679611206, 1.537693738937378, 1.531090497970581, 1.5246189832687378, 1.5182805061340332, 1.5120769739151, 1.5060100555419922, 1.5000814199447632, 1.4942924976348877, 1.4886451959609985, 1.4831409454345703, 1.4777814149856567, 1.472568154335022, 1.4675028324127197, 1.462586760520935, 1.4578217267990112, 1.4532090425491333, 1.4487501382827759, 1.4444465637207031, 1.4402996301651, 1.4363106489181519, 1.432481050491333, 1.428812026977539, 1.425304889678955, 1.4219608306884766, 1.4187809228897095, 1.4157663583755493, 1.412918210029602, 1.410237431526184, 1.4077249765396118, 1.405381679534912, 1.4032084941864014, 1.4012062549591064, 1.399375557899475, 1.3977171182632446, 1.3962316513061523, 1.3949196338653564, 1.3937815427780151, 1.392817735671997, 1.39202880859375, 1.391414761543274, 1.390976071357727, 1.3907127380371094, 1.40625, 1.406336784362793, 1.4065971374511719, 1.4070310592651367, 1.4076381921768188, 1.4084184169769287, 1.4093714952468872, 1.4104970693588257, 1.411794662475586, 1.4132637977600098, 1.4149038791656494, 1.4167145490646362, 1.4186949729919434, 1.4208444356918335, 1.4231622219085693, 1.425647497177124, 1.4282993078231812, 1.4311169385910034, 1.4340991973876953, 1.43724524974823, 1.4405537843704224, 1.4440239667892456, 1.447654366493225, 1.4514439105987549, 1.4553914070129395, 1.4594954252243042, 1.4637547731399536, 1.4681681394577026, 1.472733974456787, 1.477450966835022, 1.4823176860809326, 1.4873325824737549, 1.4924942255020142, 1.4978010654449463, 1.5032516717910767, 1.5088443756103516, 1.5145776271820068, 1.5204497575759888, 1.5264593362808228, 1.5326045751571655, 1.5388840436935425, 1.5452959537506104, 1.5518386363983154, 1.5585105419158936, 1.565310001373291, 1.572235345840454, 1.5792847871780396, 1.5864570140838623, 1.59375, 1.601162314414978, 1.6086921691894531, 1.6163381338119507, 1.624098300933838, 1.6319712400436401, 1.6399551630020142, 1.6480486392974854, 1.65625, 1.6645575761795044, 1.6729698181152344, 1.6814851760864258, 1.690102219581604, 1.6988190412521362, 1.7076345682144165, 1.716546893119812, 1.7255547046661377, 1.7346564531326294, 1.743850827217102, 1.753136157989502, 1.762511134147644, 1.7719742059707642, 1.7815240621566772, 1.7911593914031982, 1.800878643989563, 1.810680627822876, 1.8205639123916626, 1.8305273056030273, 1.840569257736206, 1.8506886959075928, 1.8608843088150024, 1.8711549043655396, 1.881499171257019, 1.8919159173965454, 1.9024039506912231, 1.9129620790481567, 1.9235892295837402, 1.9342840909957886, 1.945045828819275, 1.9558730125427246, 1.9667649269104004, 1.9777201414108276, 1.9887378215789795, 1.99981689453125, 2.010956287384033, 2.0221550464630127, 2.033412218093872, 2.044726848602295, 2.056097984313965, 2.0675246715545654, 2.0790059566497803, 2.090540885925293, 2.102128744125366, 2.1137685775756836, 2.1254594326019287, 2.1372008323669434, 2.148991346359253, 2.1608307361602783, 2.172717809677124, 2.184652090072632, 2.1966326236724854, 2.2086589336395264, 2.2207298278808594, 2.232844829559326, 2.2450032234191895, 2.257204294204712, 2.269447088241577, 2.281731605529785, 2.2940564155578613, 2.3064215183258057, 2.3188257217407227, 2.331268787384033, 2.34375, 2.3562686443328857, 2.3688242435455322, 2.381416082382202, 2.3940436840057373, 2.4067065715789795, 2.4194040298461914, 2.432135581970215, 2.4449005126953125, 2.432135581970215, 2.4194040298461914, 2.4067065715789795, 2.3940436840057373, 2.381416082382202, 2.3688242435455322, 2.3562686443328857, 2.34375, 2.331268787384033, 2.3188257217407227, 2.3064215183258057, 2.2940564155578613, 2.281731605529785, 2.269447088241577, 2.257204294204712, 2.2450032234191895, 2.232844829559326, 2.2207298278808594, 2.2086589336395264, 2.1966326236724854, 2.184652090072632, 2.172717809677124, 2.1608307361602783, 2.148991346359253, 2.1372008323669434, 2.1254594326019287, 2.1137685775756836, 2.102128744125366, 2.090540885925293, 2.0790059566497803, 2.0675246715545654, 2.056097984313965, 2.044726848602295, 2.033412218093872, 2.0221550464630127, 2.010956287384033, 1.99981689453125, 1.9887378215789795, 1.9777201414108276, 1.9667649269104004, 1.9558730125427246, 1.945045828819275, 1.9342840909957886, 1.9235892295837402, 1.9129620790481567, 1.9024039506912231, 1.8919159173965454, 1.881499171257019, 1.8711549043655396, 1.8608843088150024, 1.8506886959075928, 1.840569257736206, 1.8305273056030273, 1.8205639123916626, 1.810680627822876, 1.800878643989563, 1.7911593914031982, 1.7815240621566772, 1.7719742059707642, 1.762511134147644, 1.753136157989502, 1.743850827217102, 1.7346564531326294, 1.7255547046661377, 1.716546893119812, 1.7076345682144165, 1.6988190412521362, 1.690102219581604, 1.6814851760864258, 1.6729698181152344, 1.6645575761795044, 1.65625, 1.6480486392974854, 1.6399551630020142, 1.6319712400436401, 1.624098300933838, 1.6163381338119507, 1.6086921691894531, 1.601162314414978, 1.59375, 1.5864570140838623, 1.5792847871780396, 1.572235345840454, 1.565310001373291, 1.5585105419158936, 1.5518386363983154, 1.5452959537506104, 1.5388840436935425, 1.5326045751571655, 1.5264593362808228, 1.5204497575759888, 1.5145776271820068, 1.5088443756103516, 1.5032516717910767, 1.4978010654449463, 1.4924942255020142, 1.4873325824737549, 1.4823176860809326, 1.477450966835022, 1.472733974456787, 1.4681681394577026, 1.4637547731399536, 1.4594954252243042, 1.4553914070129395, 1.4514439105987549, 1.447654366493225, 1.4440239667892456, 1.4405537843704224, 1.43724524974823, 1.4340991973876953, 1.4311169385910034, 1.4282993078231812, 1.425647497177124, 1.4231622219085693, 1.4208444356918335, 1.4186949729919434, 1.4167145490646362, 1.4149038791656494, 1.4132637977600098, 1.411794662475586, 1.4104970693588257, 1.4093714952468872, 1.4084184169769287, 1.4076381921768188, 1.4070310592651367, 1.4065971374511719, 1.406336784362793, 1.421875, 1.4219608306884766, 1.4222183227539062, 1.422647476196289, 1.4232479333877563, 1.424019694328308, 1.4249622821807861, 1.4260755777359009, 1.4273589849472046, 1.428812026977539, 1.4304343461990356, 1.4322253465652466, 1.4341843128204346, 1.4363106489181519, 1.4386035203933716, 1.4410622119903564, 1.44368577003479, 1.4464733600616455, 1.4494240283966064, 1.4525368213653564, 1.4558106660842896, 1.4592444896697998, 1.4628372192382812, 1.4665875434875488, 1.470494270324707, 1.47455632686615, 1.4787722826004028, 1.4831409454345703, 1.4876608848571777, 1.4923306703567505, 1.4971489906311035, 1.5021144151687622, 1.5072253942489624, 1.512480616569519, 1.517878532409668, 1.5234174728393555, 1.529096007347107, 1.5349127054214478, 1.5408658981323242, 1.5469539165496826, 1.5531753301620483, 1.5595284700393677, 1.566011667251587, 1.5726234912872314, 1.579362154006958, 1.5862261056900024, 1.5932137966156006, 1.6003234386444092, 1.6075536012649536, 1.6149024963378906, 1.6223686933517456, 1.6299504041671753, 1.6376460790634155, 1.6454541683197021, 1.653373122215271, 1.6614011526107788, 1.6695369482040405, 1.677778720855713, 1.6861250400543213, 1.694574236869812, 1.703125, 1.7117756605148315, 1.7205246686935425, 1.7293705940246582, 1.738312005996704, 1.747347354888916, 1.7564752101898193, 1.7656941413879395, 1.7750027179718018, 1.7843996286392212, 1.7938833236694336, 1.8034526109695435, 1.8131060600280762, 1.8228422403335571, 1.8326599597930908, 1.8425579071044922, 1.8525346517562866, 1.8625891208648682, 1.8727200031280518, 1.8829259872436523, 1.8932058811187744, 1.9035584926605225, 1.9139827489852905, 1.924477458000183, 1.9350413084030151, 1.9456732273101807, 1.9563722610473633, 1.9671372175216675, 1.9779670238494873, 1.9888606071472168, 1.99981689453125, 2.0108349323272705, 2.021913528442383, 2.0330519676208496, 2.0442492961883545, 2.055504322052002, 2.0668160915374756, 2.078183650970459, 2.089606523513794, 2.101083278656006, 2.1126132011413574, 2.1241955757141113, 2.135829448699951, 2.1475141048431396, 2.1592483520507812, 2.1710317134857178, 2.182863473892212, 2.194742441177368, 2.2066681385040283, 2.218639850616455, 2.230656862258911, 2.24271821975708, 2.2548234462738037, 2.2669715881347656, 2.2791621685028076, 2.2913944721221924, 2.3036677837371826, 2.315981388092041, 2.3283348083496094, 2.3407273292541504, 2.3531582355499268, 2.3656270503997803, 2.3781332969665527, 2.3906760215759277, 2.403254985809326, 2.4158694744110107, 2.4285190105438232, 2.4412031173706055, 2.45392107963562, 2.4412031173706055, 2.4285190105438232, 2.4158694744110107, 2.403254985809326, 2.3906760215759277, 2.3781332969665527, 2.3656270503997803, 2.3531582355499268, 2.3407273292541504, 2.3283348083496094, 2.315981388092041, 2.3036677837371826, 2.2913944721221924, 2.2791621685028076, 2.2669715881347656, 2.2548234462738037, 2.24271821975708, 2.230656862258911, 2.218639850616455, 2.2066681385040283, 2.194742441177368, 2.182863473892212, 2.1710317134857178, 2.1592483520507812, 2.1475141048431396, 2.135829448699951, 2.1241955757141113, 2.1126132011413574, 2.101083278656006, 2.089606523513794, 2.078183650970459, 2.0668160915374756, 2.055504322052002, 2.0442492961883545, 2.0330519676208496, 2.021913528442383, 2.0108349323272705, 1.99981689453125, 1.9888606071472168, 1.9779670238494873, 1.9671372175216675, 1.9563722610473633, 1.9456732273101807, 1.9350413084030151, 1.924477458000183, 1.9139827489852905, 1.9035584926605225, 1.8932058811187744, 1.8829259872436523, 1.8727200031280518, 1.8625891208648682, 1.8525346517562866, 1.8425579071044922, 1.8326599597930908, 1.8228422403335571, 1.8131060600280762, 1.8034526109695435, 1.7938833236694336, 1.7843996286392212, 1.7750027179718018, 1.7656941413879395, 1.7564752101898193, 1.747347354888916, 1.738312005996704, 1.7293705940246582, 1.7205246686935425, 1.7117756605148315, 1.703125, 1.694574236869812, 1.6861250400543213, 1.677778720855713, 1.6695369482040405, 1.6614011526107788, 1.653373122215271, 1.6454541683197021, 1.6376460790634155, 1.6299504041671753, 1.6223686933517456, 1.6149024963378906, 1.6075536012649536, 1.6003234386444092, 1.5932137966156006, 1.5862261056900024, 1.579362154006958, 1.5726234912872314, 1.566011667251587, 1.5595284700393677, 1.5531753301620483, 1.5469539165496826, 1.5408658981323242, 1.5349127054214478, 1.529096007347107, 1.5234174728393555, 1.517878532409668, 1.512480616569519, 1.5072253942489624, 1.5021144151687622, 1.4971489906311035, 1.4923306703567505, 1.4876608848571777, 1.4831409454345703, 1.4787722826004028, 1.47455632686615, 1.470494270324707, 1.4665875434875488, 1.4628372192382812, 1.4592444896697998, 1.4558106660842896, 1.4525368213653564, 1.4494240283966064, 1.4464733600616455, 1.44368577003479, 1.4410622119903564, 1.4386035203933716, 1.4363106489181519, 1.4341843128204346, 1.4322253465652466, 1.4304343461990356, 1.428812026977539, 1.4273589849472046, 1.4260755777359009, 1.4249622821807861, 1.424019694328308, 1.4232479333877563, 1.422647476196289, 1.4222183227539062, 1.4219608306884766, 1.4375, 1.4375848770141602, 1.4378396272659302, 1.438264012336731, 1.4388580322265625, 1.4396214485168457, 1.4405537843704224, 1.4416550397872925, 1.4429244995117188, 1.4443620443344116, 1.4459669589996338, 1.4477386474609375, 1.4496766328811646, 1.4517803192138672, 1.454048752784729, 1.4564813375473022, 1.45907723903656, 1.461835503578186, 1.4647551774978638, 1.467835545539856, 1.4710752964019775, 1.4744735956192017, 1.4780292510986328, 1.4817410707473755, 1.4856079816818237, 1.4896289110183716, 1.4938023090362549, 1.4981271028518677, 1.5026018619537354, 1.5072253942489624, 1.5119962692260742, 1.5169130563735962, 1.5219744443893433, 1.5271788835525513, 1.5325249433517456, 1.5380111932754517, 1.5436360836029053, 1.5493981838226318, 1.5552959442138672, 1.5613276958465576, 1.5674920082092285, 1.5737873315811157, 1.580212116241455, 1.5867646932601929, 1.5934436321258545, 1.6002471446990967, 1.6071738004684448, 1.6142220497131348, 1.6213902235031128, 1.6286767721176147, 1.636080026626587, 1.6435984373092651, 1.6512305736541748, 1.6589747667312622, 1.6668294668197632, 1.674793004989624, 1.6828639507293701, 1.6910408735275269, 1.699321985244751, 1.7077059745788574, 1.716191291809082, 1.7247763872146606, 1.7334598302841187, 1.742240071296692, 1.7511156797409058, 1.7600853443145752, 1.769147515296936, 1.7783007621765137, 1.7875436544418335, 1.796875, 1.806293249130249, 1.8157970905303955, 1.8253852128982544, 1.8350563049316406, 1.8448090553283691, 1.8546420335769653, 1.8645542860031128, 1.8745442628860474, 1.8846107721328735, 1.8947527408599854, 1.9049688577651978, 1.9152579307556152, 1.9256187677383423, 1.9360504150390625, 1.9465514421463013, 1.9571208953857422, 1.9677577018737793, 1.978460669517517, 1.9892288446426392, 2.00006103515625, 2.010956287384033, 2.021913528442383, 2.0329320430755615, 2.0440104007720947, 2.055147886276245, 2.0663435459136963, 2.0775961875915527, 2.0889053344726562, 2.1002697944641113, 2.1116886138916016, 2.1231610774993896, 2.13468599319458, 2.1462631225585938, 2.157891035079956, 2.169569253921509, 2.1812970638275146, 2.193073272705078, 2.204897403717041, 2.216768503189087, 2.2286858558654785, 2.2406489849090576, 2.252656936645508, 2.2647087574005127, 2.276804208755493, 2.288942575454712, 2.3011226654052734, 2.3133444786071777, 2.3256068229675293, 2.337909460067749, 2.3502514362335205, 2.3626322746276855, 2.375051498413086, 2.3875081539154053, 2.4000020027160645, 2.412532329559326, 2.4250986576080322, 2.4377002716064453, 2.4503366947174072, 2.4630074501037598, 2.4503366947174072, 2.4377002716064453, 2.4250986576080322, 2.412532329559326, 2.4000020027160645, 2.3875081539154053, 2.375051498413086, 2.3626322746276855, 2.3502514362335205, 2.337909460067749, 2.3256068229675293, 2.3133444786071777, 2.3011226654052734, 2.288942575454712, 2.276804208755493, 2.2647087574005127, 2.252656936645508, 2.2406489849090576, 2.2286858558654785, 2.216768503189087, 2.204897403717041, 2.193073272705078, 2.1812970638275146, 2.169569253921509, 2.157891035079956, 2.1462631225585938, 2.13468599319458, 2.1231610774993896, 2.1116886138916016, 2.1002697944641113, 2.0889053344726562, 2.0775961875915527, 2.0663435459136963, 2.055147886276245, 2.0440104007720947, 2.0329320430755615, 2.021913528442383, 2.010956287384033, 2.00006103515625, 1.9892288446426392, 1.978460669517517, 1.9677577018737793, 1.9571208953857422, 1.9465514421463013, 1.9360504150390625, 1.9256187677383423, 1.9152579307556152, 1.9049688577651978, 1.8947527408599854, 1.8846107721328735, 1.8745442628860474, 1.8645542860031128, 1.8546420335769653, 1.8448090553283691, 1.8350563049316406, 1.8253852128982544, 1.8157970905303955, 1.806293249130249, 1.796875, 1.7875436544418335, 1.7783007621765137, 1.769147515296936, 1.7600853443145752, 1.7511156797409058, 1.742240071296692, 1.7334598302841187, 1.7247763872146606, 1.716191291809082, 1.7077059745788574, 1.699321985244751, 1.6910408735275269, 1.6828639507293701, 1.674793004989624, 1.6668294668197632, 1.6589747667312622, 1.6512305736541748, 1.6435984373092651, 1.636080026626587, 1.6286767721176147, 1.6213902235031128, 1.6142220497131348, 1.6071738004684448, 1.6002471446990967, 1.5934436321258545, 1.5867646932601929, 1.580212116241455, 1.5737873315811157, 1.5674920082092285, 1.5613276958465576, 1.5552959442138672, 1.5493981838226318, 1.5436360836029053, 1.5380111932754517, 1.5325249433517456, 1.5271788835525513, 1.5219744443893433, 1.5169130563735962, 1.5119962692260742, 1.5072253942489624, 1.5026018619537354, 1.4981271028518677, 1.4938023090362549, 1.4896289110183716, 1.4856079816818237, 1.4817410707473755, 1.4780292510986328, 1.4744735956192017, 1.4710752964019775, 1.467835545539856, 1.4647551774978638, 1.461835503578186, 1.45907723903656, 1.4564813375473022, 1.454048752784729, 1.4517803192138672, 1.4496766328811646, 1.4477386474609375, 1.4459669589996338, 1.4443620443344116, 1.4429244995117188, 1.4416550397872925, 1.4405537843704224, 1.4396214485168457, 1.4388580322265625, 1.438264012336731, 1.4378396272659302, 1.4375848770141602, 1.453125, 1.4532090425491333, 1.453460931777954, 1.4538809061050415, 1.4544684886932373, 1.455223560333252, 1.456146001815796, 1.4572354555130005, 1.4584914445877075, 1.4599136114120483, 1.4615013599395752, 1.4632543325424194, 1.4651718139648438, 1.4672532081604004, 1.469497799873352, 1.4719048738479614, 1.4744735956192017, 1.4772030115127563, 1.4800925254821777, 1.4831409454345703, 1.4863473176956177, 1.489710807800293, 1.4932302236557007, 1.4969043731689453, 1.5007323026657104, 1.504712700843811, 1.5088443756103516, 1.5131261348724365, 1.5175567865371704, 1.5221349000930786, 1.526859164237976, 1.5317282676696777, 1.536740779876709, 1.5418953895568848, 1.5471906661987305, 1.552625060081482, 1.558197259902954, 1.5639055967330933, 1.5697487592697144, 1.5757253170013428, 1.5818334817886353, 1.5880719423294067, 1.594439148902893, 1.60093355178833, 1.6075536012649536, 1.6142977476119995, 1.621164321899414, 1.6281520128250122, 1.6352590322494507, 1.6424840688705444, 1.6498253345489502, 1.657281517982483, 1.6648509502410889, 1.6725319623947144, 1.6803232431411743, 1.6882232427597046, 1.6962302923202515, 1.7043430805206299, 1.7125598192214966, 1.720879316329956, 1.7293000221252441, 1.7378203868865967, 1.7464388608932495, 1.7551542520523071, 1.7639648914337158, 1.77286958694458, 1.7818666696548462, 1.7909549474716187, 1.8001328706741333, 1.8093992471694946, 1.818752646446228, 1.8281917572021484, 1.8377152681350708, 1.8473217487335205, 1.857010006904602, 1.86677885055542, 1.8766268491744995, 1.8865529298782349, 1.896555781364441, 1.9066342115402222, 1.9167869091033936, 1.9270129203796387, 1.9373109340667725, 1.947679877281189, 1.9581185579299927, 1.9686260223388672, 1.9792009592056274, 1.989842414855957, 2.00054931640625, 2.0113205909729004, 2.0221550464630127, 2.0330519676208496, 2.0440104007720947, 2.0550291538238525, 2.0661072731018066, 2.0772438049316406, 2.088437795639038, 2.0996882915496826, 2.110994815826416, 2.1223559379577637, 2.1337709426879883, 2.1452391147613525, 2.15675950050354, 2.1683311462402344, 2.1799535751342773, 2.1916255950927734, 2.2033467292785645, 2.215115785598755, 2.2269325256347656, 2.2387959957122803, 2.2507052421569824, 2.262659788131714, 2.274658679962158, 2.2867014408111572, 2.2987873554229736, 2.310915946960449, 2.3230860233306885, 2.3352973461151123, 2.3475489616394043, 2.3598406314849854, 2.372171401977539, 2.3845407962799072, 2.3969483375549316, 2.409393310546875, 2.421875, 2.4343931674957275, 2.446946859359741, 2.459535837173462, 2.4721593856811523, 2.459535837173462, 2.446946859359741, 2.4343931674957275, 2.421875, 2.409393310546875, 2.3969483375549316, 2.3845407962799072, 2.372171401977539, 2.3598406314849854, 2.3475489616394043, 2.3352973461151123, 2.3230860233306885, 2.310915946960449, 2.2987873554229736, 2.2867014408111572, 2.274658679962158, 2.262659788131714, 2.2507052421569824, 2.2387959957122803, 2.2269325256347656, 2.215115785598755, 2.2033467292785645, 2.1916255950927734, 2.1799535751342773, 2.1683311462402344, 2.15675950050354, 2.1452391147613525, 2.1337709426879883, 2.1223559379577637, 2.110994815826416, 2.0996882915496826, 2.088437795639038, 2.0772438049316406, 2.0661072731018066, 2.0550291538238525, 2.0440104007720947, 2.0330519676208496, 2.0221550464630127, 2.0113205909729004, 2.00054931640625, 1.989842414855957, 1.9792009592056274, 1.9686260223388672, 1.9581185579299927, 1.947679877281189, 1.9373109340667725, 1.9270129203796387, 1.9167869091033936, 1.9066342115402222, 1.896555781364441, 1.8865529298782349, 1.8766268491744995, 1.86677885055542, 1.857010006904602, 1.8473217487335205, 1.8377152681350708, 1.8281917572021484, 1.818752646446228, 1.8093992471694946, 1.8001328706741333, 1.7909549474716187, 1.7818666696548462, 1.77286958694458, 1.7639648914337158, 1.7551542520523071, 1.7464388608932495, 1.7378203868865967, 1.7293000221252441, 1.720879316329956, 1.7125598192214966, 1.7043430805206299, 1.6962302923202515, 1.6882232427597046, 1.6803232431411743, 1.6725319623947144, 1.6648509502410889, 1.657281517982483, 1.6498253345489502, 1.6424840688705444, 1.6352590322494507, 1.6281520128250122, 1.621164321899414, 1.6142977476119995, 1.6075536012649536, 1.60093355178833, 1.594439148902893, 1.5880719423294067, 1.5818334817886353, 1.5757253170013428, 1.5697487592697144, 1.5639055967330933, 1.558197259902954, 1.552625060081482, 1.5471906661987305, 1.5418953895568848, 1.536740779876709, 1.5317282676696777, 1.526859164237976, 1.5221349000930786, 1.5175567865371704, 1.5131261348724365, 1.5088443756103516, 1.504712700843811, 1.5007323026657104, 1.4969043731689453, 1.4932302236557007, 1.489710807800293, 1.4863473176956177, 1.4831409454345703, 1.4800925254821777, 1.4772030115127563, 1.4744735956192017, 1.4719048738479614, 1.469497799873352, 1.4672532081604004, 1.4651718139648438, 1.4632543325424194, 1.4615013599395752, 1.4599136114120483, 1.4584914445877075, 1.4572354555130005, 1.456146001815796, 1.455223560333252, 1.4544684886932373, 1.4538809061050415, 1.453460931777954, 1.4532090425491333, 1.46875, 1.468833088874817, 1.4690823554992676, 1.469497799873352, 1.4700791835784912, 1.470826268196106, 1.4717389345169067, 1.472816824913025, 1.4740595817565918, 1.4754667282104492, 1.477037787437439, 1.4787722826004028, 1.4806697368621826, 1.4827293157577515, 1.4849505424499512, 1.4873325824737549, 1.4898747205734253, 1.492576003074646, 1.4954357147216797, 1.4984530210494995, 1.50162672996521, 1.5049560070037842, 1.5084397792816162, 1.5120769739151, 1.5158666372299194, 1.5198073387145996, 1.5238981246948242, 1.5281378030776978, 1.5325249433517456, 1.5370584726333618, 1.5417370796203613, 1.5465593338012695, 1.5515239238739014, 1.5566295385360718, 1.5618748664855957, 1.567258358001709, 1.5727787017822266, 1.5784343481063843, 1.584223985671997, 1.5901460647583008, 1.5961991548538208, 1.602381706237793, 1.6086921691894531, 1.6151292324066162, 1.621691346168518, 1.628376841545105, 1.635184407234192, 1.642112374305725, 1.64915931224823, 1.6563236713409424, 1.6636039018630981, 1.6709985733032227, 1.6785061359405518, 1.6861250400543213, 1.693853735923767, 1.701690912246704, 1.7096349000930786, 1.7176843881607056, 1.7258377075195312, 1.734093427658081, 1.74245023727417, 1.7509065866470337, 1.7594610452651978, 1.7681121826171875, 1.7768585681915283, 1.7856988906860352, 1.7946317195892334, 1.803655743598938, 1.8127694129943848, 1.8219715356826782, 1.8312606811523438, 1.8406356573104858, 1.8500950336456299, 1.8596376180648804, 1.8692620992660522, 1.8789671659469604, 1.8887516260147095, 1.8986142873764038, 1.908553957939148, 1.9185693264007568, 1.9286593198776245, 1.938822627067566, 1.9490582942962646, 1.9593650102615356, 1.9697418212890625, 1.9801875352859497, 1.9907010793685913, 2.001281261444092, 2.011927366256714, 2.0226380825042725, 2.033412218093872, 2.0442492961883545, 2.055147886276245, 2.0661072731018066, 2.0771262645721436, 2.0882039070129395, 2.099339485168457, 2.11053204536438, 2.1217806339263916, 2.133084297180176, 2.144442319869995, 2.155853748321533, 2.1673176288604736, 2.178833246231079, 2.1903998851776123, 2.202016592025757, 2.2136826515197754, 2.2253971099853516, 2.237159490585327, 2.2489688396453857, 2.260824680328369, 2.272726058959961, 2.2846720218658447, 2.2966623306274414, 2.3086962699890137, 2.320772886276245, 2.3328914642333984, 2.3450517654418945, 2.357252836227417, 2.3694939613342285, 2.38177490234375, 2.394094705581665, 2.4064528942108154, 2.418848991394043, 2.4312820434570312, 2.4437520503997803, 2.4562580585479736, 2.468799352645874, 2.4813759326934814, 2.468799352645874, 2.4562580585479736, 2.4437520503997803, 2.4312820434570312, 2.418848991394043, 2.4064528942108154, 2.394094705581665, 2.38177490234375, 2.3694939613342285, 2.357252836227417, 2.3450517654418945, 2.3328914642333984, 2.320772886276245, 2.3086962699890137, 2.2966623306274414, 2.2846720218658447, 2.272726058959961, 2.260824680328369, 2.2489688396453857, 2.237159490585327, 2.2253971099853516, 2.2136826515197754, 2.202016592025757, 2.1903998851776123, 2.178833246231079, 2.1673176288604736, 2.155853748321533, 2.144442319869995, 2.133084297180176, 2.1217806339263916, 2.11053204536438, 2.099339485168457, 2.0882039070129395, 2.0771262645721436, 2.0661072731018066, 2.055147886276245, 2.0442492961883545, 2.033412218093872, 2.0226380825042725, 2.011927366256714, 2.001281261444092, 1.9907010793685913, 1.9801875352859497, 1.9697418212890625, 1.9593650102615356, 1.9490582942962646, 1.938822627067566, 1.9286593198776245, 1.9185693264007568, 1.908553957939148, 1.8986142873764038, 1.8887516260147095, 1.8789671659469604, 1.8692620992660522, 1.8596376180648804, 1.8500950336456299, 1.8406356573104858, 1.8312606811523438, 1.8219715356826782, 1.8127694129943848, 1.803655743598938, 1.7946317195892334, 1.7856988906860352, 1.7768585681915283, 1.7681121826171875, 1.7594610452651978, 1.7509065866470337, 1.74245023727417, 1.734093427658081, 1.7258377075195312, 1.7176843881607056, 1.7096349000930786, 1.701690912246704, 1.693853735923767, 1.6861250400543213, 1.6785061359405518, 1.6709985733032227, 1.6636039018630981, 1.6563236713409424, 1.64915931224823, 1.642112374305725, 1.635184407234192, 1.628376841545105, 1.621691346168518, 1.6151292324066162, 1.6086921691894531, 1.602381706237793, 1.5961991548538208, 1.5901460647583008, 1.584223985671997, 1.5784343481063843, 1.5727787017822266, 1.567258358001709, 1.5618748664855957, 1.5566295385360718, 1.5515239238739014, 1.5465593338012695, 1.5417370796203613, 1.5370584726333618, 1.5325249433517456, 1.5281378030776978, 1.5238981246948242, 1.5198073387145996, 1.5158666372299194, 1.5120769739151, 1.5084397792816162, 1.5049560070037842, 1.50162672996521, 1.4984530210494995, 1.4954357147216797, 1.492576003074646, 1.4898747205734253, 1.4873325824737549, 1.4849505424499512, 1.4827293157577515, 1.4806697368621826, 1.4787722826004028, 1.477037787437439, 1.4754667282104492, 1.4740595817565918, 1.472816824913025, 1.4717389345169067, 1.470826268196106, 1.4700791835784912, 1.469497799873352, 1.4690823554992676, 1.468833088874817, 1.484375, 1.48445725440979, 1.4847038984298706, 1.4851149320602417, 1.4856902360916138, 1.4864294528961182, 1.4873325824737549, 1.4883991479873657, 1.4896289110183716, 1.4910212755203247, 1.492576003074646, 1.4942924976348877, 1.4961702823638916, 1.4982085227966309, 1.5004068613052368, 1.502764344215393, 1.5052803754806519, 1.5079541206359863, 1.5107847452163696, 1.513771414756775, 1.5169130563735962, 1.5202089548110962, 1.5236577987670898, 1.5272588729858398, 1.5310108661651611, 1.5349127054214478, 1.5389633178710938, 1.5431616306304932, 1.5475062131881714, 1.5519959926605225, 1.5566295385360718, 1.561405897140503, 1.5663233995437622, 1.5713809728622437, 1.5765771865844727, 1.5819107294082642, 1.587380051612854, 1.5929838418960571, 1.5987207889556885, 1.6045893430709839, 1.6105881929397583, 1.616715669631958, 1.622970461845398, 1.6293511390686035, 1.6358561515808105, 1.6424840688705444, 1.649233341217041, 1.6561025381088257, 1.6630902290344238, 1.6701948642730713, 1.677414894104004, 1.684748888015747, 1.6921954154968262, 1.699752926826477, 1.707419991493225, 1.7151951789855957, 1.7230769395828247, 1.7310638427734375, 1.7391544580459595, 1.747347354888916, 1.755640983581543, 1.7640341520309448, 1.7725251913070679, 1.7811129093170166, 1.7897958755493164, 1.7985725402832031, 1.8074417114257812, 1.8164020776748657, 1.8254520893096924, 1.8345905542373657, 1.8438161611557007, 1.8531275987625122, 1.8625235557556152, 1.8720028400421143, 1.8815640211105347, 1.8912060260772705, 1.9009275436401367, 1.9107273817062378, 1.9206042289733887, 1.930557131767273, 1.9405847787857056, 1.950685977935791, 1.9608596563339233, 1.9711047410964966, 1.9814200401306152, 1.9918044805526733, 2.0022571086883545, 2.0127766132354736, 2.023362159729004, 2.03401255607605, 2.044726848602295, 2.055504322052002, 2.0663435459136963, 2.0772438049316406, 2.0882039070129395, 2.0992233753204346, 2.1103007793426514, 2.1214354038238525, 2.132626533508301, 2.1438729763031006, 2.1551740169525146, 2.1665289402008057, 2.1779367923736572, 2.189396381378174, 2.2009074687957764, 2.2124691009521484, 2.2240803241729736, 2.2357404232025146, 2.247448682785034, 2.259204149246216, 2.2710065841674805, 2.2828547954559326, 2.294748067855835, 2.3066861629486084, 2.3186678886413574, 2.330692768096924, 2.3427603244781494, 2.3548693656921387, 2.3670198917388916, 2.379210948944092, 2.391441822052002, 2.403712034225464, 2.4160211086273193, 2.428368330001831, 2.4407529830932617, 2.4531748294830322, 2.465632915496826, 2.4781270027160645, 2.4906563758850098, 2.4781270027160645, 2.465632915496826, 2.4531748294830322, 2.4407529830932617, 2.428368330001831, 2.4160211086273193, 2.403712034225464, 2.391441822052002, 2.379210948944092, 2.3670198917388916, 2.3548693656921387, 2.3427603244781494, 2.330692768096924, 2.3186678886413574, 2.3066861629486084, 2.294748067855835, 2.2828547954559326, 2.2710065841674805, 2.259204149246216, 2.247448682785034, 2.2357404232025146, 2.2240803241729736, 2.2124691009521484, 2.2009074687957764, 2.189396381378174, 2.1779367923736572, 2.1665289402008057, 2.1551740169525146, 2.1438729763031006, 2.132626533508301, 2.1214354038238525, 2.1103007793426514, 2.0992233753204346, 2.0882039070129395, 2.0772438049316406, 2.0663435459136963, 2.055504322052002, 2.044726848602295, 2.03401255607605, 2.023362159729004, 2.0127766132354736, 2.0022571086883545, 1.9918044805526733, 1.9814200401306152, 1.9711047410964966, 1.9608596563339233, 1.950685977935791, 1.9405847787857056, 1.930557131767273, 1.9206042289733887, 1.9107273817062378, 1.9009275436401367, 1.8912060260772705, 1.8815640211105347, 1.8720028400421143, 1.8625235557556152, 1.8531275987625122, 1.8438161611557007, 1.8345905542373657, 1.8254520893096924, 1.8164020776748657, 1.8074417114257812, 1.7985725402832031, 1.7897958755493164, 1.7811129093170166, 1.7725251913070679, 1.7640341520309448, 1.755640983581543, 1.747347354888916, 1.7391544580459595, 1.7310638427734375, 1.7230769395828247, 1.7151951789855957, 1.707419991493225, 1.699752926826477, 1.6921954154968262, 1.684748888015747, 1.677414894104004, 1.6701948642730713, 1.6630902290344238, 1.6561025381088257, 1.649233341217041, 1.6424840688705444, 1.6358561515808105, 1.6293511390686035, 1.622970461845398, 1.616715669631958, 1.6105881929397583, 1.6045893430709839, 1.5987207889556885, 1.5929838418960571, 1.587380051612854, 1.5819107294082642, 1.5765771865844727, 1.5713809728622437, 1.5663233995437622, 1.561405897140503, 1.5566295385360718, 1.5519959926605225, 1.5475062131881714, 1.5431616306304932, 1.5389633178710938, 1.5349127054214478, 1.5310108661651611, 1.5272588729858398, 1.5236577987670898, 1.5202089548110962, 1.5169130563735962, 1.513771414756775, 1.5107847452163696, 1.5079541206359863, 1.5052803754806519, 1.502764344215393, 1.5004068613052368, 1.4982085227966309, 1.4961702823638916, 1.4942924976348877, 1.492576003074646, 1.4910212755203247, 1.4896289110183716, 1.4883991479873657, 1.4873325824737549, 1.4864294528961182, 1.4856902360916138, 1.4851149320602417, 1.4847038984298706, 1.48445725440979, 1.5, 1.5000814199447632, 1.5003254413604736, 1.5007323026657104, 1.5013015270233154, 1.5020331144332886, 1.5029268264770508, 1.5039823055267334, 1.5051993131637573, 1.5065773725509644, 1.5081160068511963, 1.5098148584365845, 1.5116733312606812, 1.5136908292770386, 1.5158666372299194, 1.518200159072876, 1.520690679550171, 1.5233373641967773, 1.5261393785476685, 1.529096007347107, 1.5322062969207764, 1.5354692935943604, 1.5388840436935425, 1.5424494743347168, 1.546164631843567, 1.5500283241271973, 1.5540395975112915, 1.558197259902954, 1.5625, 1.5669467449188232, 1.5715364217758179, 1.5762674808502197, 1.5811388492584229, 1.5861490964889526, 1.5912971496582031, 1.5965814590454102, 1.6020007133483887, 1.6075536012649536, 1.6132386922836304, 1.6190546751022339, 1.625, 1.6310733556747437, 1.6372733116149902, 1.6435984373092651, 1.6500473022460938, 1.6566184759140015, 1.6633104085922241, 1.6701217889785767, 1.6770509481430054, 1.6840966939926147, 1.691257357597351, 1.6985316276550293, 1.7059179544448853, 1.7134150266647339, 1.7210211753845215, 1.7287352085113525, 1.7365554571151733, 1.7444807291030884, 1.752509355545044, 1.7606401443481445, 1.7688714265823364, 1.7772021293640137, 1.7856305837631226, 1.7941555976867676, 1.8027756214141846, 1.811489462852478, 1.8202956914901733, 1.829193115234375, 1.8381801843643188, 1.8472557067871094, 1.8564183712005615, 1.8656668663024902, 1.875, 1.8844164609909058, 1.893915057182312, 1.9034944772720337, 1.9131535291671753, 1.9228910207748413, 1.9327057600021362, 1.942596673965454, 1.9525624513626099, 1.9626020193099976, 1.9727143049240112, 1.9828981161117554, 1.993152379989624, 2.0034759044647217, 2.0138678550720215, 2.024327039718628, 2.0348525047302246, 2.045443296432495, 2.056097984313965, 2.0668160915374756, 2.0775961875915527, 2.088437795639038, 2.099339485168457, 2.1103007793426514, 2.1213202476501465, 2.132397413253784, 2.143531322479248, 2.1547210216522217, 2.1659653186798096, 2.1772639751434326, 2.1886157989501953, 2.2000200748443604, 2.2114758491516113, 2.222982406616211, 2.2345387935638428, 2.2461447715759277, 2.257798910140991, 2.269500970840454, 2.28125, 2.2930452823638916, 2.3048861026763916, 2.3167717456817627, 2.3287017345428467, 2.340675115585327, 2.352691173553467, 2.3647496700286865, 2.37684965133667, 2.3889904022216797, 2.4011716842651367, 2.4133923053741455, 2.425652265548706, 2.437950611114502, 2.450286865234375, 2.462660551071167, 2.4750709533691406, 2.4875175952911377, 2.5, 2.4875175952911377, 2.4750709533691406, 2.462660551071167, 2.450286865234375, 2.437950611114502, 2.425652265548706, 2.4133923053741455, 2.4011716842651367, 2.3889904022216797, 2.37684965133667, 2.3647496700286865, 2.352691173553467, 2.340675115585327, 2.3287017345428467, 2.3167717456817627, 2.3048861026763916, 2.2930452823638916, 2.28125, 2.269500970840454, 2.257798910140991, 2.2461447715759277, 2.2345387935638428, 2.222982406616211, 2.2114758491516113, 2.2000200748443604, 2.1886157989501953, 2.1772639751434326, 2.1659653186798096, 2.1547210216522217, 2.143531322479248, 2.132397413253784, 2.1213202476501465, 2.1103007793426514, 2.099339485168457, 2.088437795639038, 2.0775961875915527, 2.0668160915374756, 2.056097984313965, 2.045443296432495, 2.0348525047302246, 2.024327039718628, 2.0138678550720215, 2.0034759044647217, 1.993152379989624, 1.9828981161117554, 1.9727143049240112, 1.9626020193099976, 1.9525624513626099, 1.942596673965454, 1.9327057600021362, 1.9228910207748413, 1.9131535291671753, 1.9034944772720337, 1.893915057182312, 1.8844164609909058, 1.875, 1.8656668663024902, 1.8564183712005615, 1.8472557067871094, 1.8381801843643188, 1.829193115234375, 1.8202956914901733, 1.811489462852478, 1.8027756214141846, 1.7941555976867676, 1.7856305837631226, 1.7772021293640137, 1.7688714265823364, 1.7606401443481445, 1.752509355545044, 1.7444807291030884, 1.7365554571151733, 1.7287352085113525, 1.7210211753845215, 1.7134150266647339, 1.7059179544448853, 1.6985316276550293, 1.691257357597351, 1.6840966939926147, 1.6770509481430054, 1.6701217889785767, 1.6633104085922241, 1.6566184759140015, 1.6500473022460938, 1.6435984373092651, 1.6372733116149902, 1.6310733556747437, 1.625, 1.6190546751022339, 1.6132386922836304, 1.6075536012649536, 1.6020007133483887, 1.5965814590454102, 1.5912971496582031, 1.5861490964889526, 1.5811388492584229, 1.5762674808502197, 1.5715364217758179, 1.5669467449188232, 1.5625, 1.558197259902954, 1.5540395975112915, 1.5500283241271973, 1.546164631843567, 1.5424494743347168, 1.5388840436935425, 1.5354692935943604, 1.5322062969207764, 1.529096007347107, 1.5261393785476685, 1.5233373641967773, 1.520690679550171, 1.518200159072876, 1.5158666372299194, 1.5136908292770386, 1.5116733312606812, 1.5098148584365845, 1.5081160068511963, 1.5065773725509644, 1.5051993131637573, 1.5039823055267334, 1.5029268264770508, 1.5020331144332886, 1.5013015270233154, 1.5007323026657104, 1.5003254413604736, 1.5000814199447632, 1.515625, 1.5157055854797363, 1.5159471035003662, 1.5163496732711792, 1.5169130563735962, 1.5176372528076172, 1.5185216665267944, 1.5195664167404175, 1.5207709074020386, 1.5221349000930786, 1.5236577987670898, 1.5253393650054932, 1.5271788835525513, 1.529175877571106, 1.5313297510147095, 1.533639669418335, 1.5361051559448242, 1.5387253761291504, 1.5414994955062866, 1.544426679611206, 1.5475062131881714, 1.5507370233535767, 1.5541181564331055, 1.557648777961731, 1.5613276958465576, 1.565153956413269, 1.5691266059875488, 1.573244333267212, 1.5775060653686523, 1.5819107294082642, 1.5864570140838623, 1.5911437273025513, 1.5959696769714355, 1.60093355178833, 1.6060341596603394, 1.6112700700759888, 1.6166402101516724, 1.6221429109573364, 1.627777099609375, 1.633541226387024, 1.6394340991973877, 1.6454541683197021, 1.6516002416610718, 1.6578706502914429, 1.66426420211792, 1.6707794666290283, 1.677414894104004, 1.6841691732406616, 1.6910408735275269, 1.6980284452438354, 1.705130696296692, 1.712346076965332, 1.7196730375289917, 1.7271103858947754, 1.7346564531326294, 1.7423101663589478, 1.7500697374343872, 1.7579339742660522, 1.7659015655517578, 1.7739708423614502, 1.7821407318115234, 1.7904095649719238, 1.7987761497497559, 1.8072391748428345, 1.8157970905303955, 1.8244487047195435, 1.8331927061080933, 1.8420277833938599, 1.8509525060653687, 1.8599658012390137, 1.8690661191940308, 1.878252387046814, 1.8875232934951782, 1.8968775272369385, 1.9063140153884888, 1.915831446647644, 1.9254286289215088, 1.9351043701171875, 1.9448574781417847, 1.9546868801116943, 1.964591383934021, 1.9745697975158691, 1.9846210479736328, 1.994744062423706, 2.0049376487731934, 2.0152010917663574, 2.0255327224731445, 2.0359320640563965, 2.0463979244232178, 2.056929111480713, 2.0675246715545654, 2.078183650970459, 2.0889053344726562, 2.0996882915496826, 2.11053204536438, 2.1214354038238525, 2.132397413253784, 2.1434173583984375, 2.154494285583496, 2.1656272411346436, 2.1768155097961426, 2.1880578994750977, 2.1993539333343506, 2.210702896118164, 2.2221035957336426, 2.233555316925049, 2.2450575828552246, 2.2566092014312744, 2.26820969581604, 2.279858350753784, 2.2915542125701904, 2.3032968044281006, 2.3150851726531982, 2.326918840408325, 2.338796854019165, 2.3507187366485596, 2.3626840114593506, 2.3746914863586426, 2.3867411613464355, 2.398831844329834, 2.410963296890259, 2.4231348037719727, 2.4353456497192383, 2.4475953578948975, 2.459883213043213, 2.4722087383270264, 2.4845714569091797, 2.4969708919525146, 2.509406089782715, 2.4969708919525146, 2.4845714569091797, 2.4722087383270264, 2.459883213043213, 2.4475953578948975, 2.4353456497192383, 2.4231348037719727, 2.410963296890259, 2.398831844329834, 2.3867411613464355, 2.3746914863586426, 2.3626840114593506, 2.3507187366485596, 2.338796854019165, 2.326918840408325, 2.3150851726531982, 2.3032968044281006, 2.2915542125701904, 2.279858350753784, 2.26820969581604, 2.2566092014312744, 2.2450575828552246, 2.233555316925049, 2.2221035957336426, 2.210702896118164, 2.1993539333343506, 2.1880578994750977, 2.1768155097961426, 2.1656272411346436, 2.154494285583496, 2.1434173583984375, 2.132397413253784, 2.1214354038238525, 2.11053204536438, 2.0996882915496826, 2.0889053344726562, 2.078183650970459, 2.0675246715545654, 2.056929111480713, 2.0463979244232178, 2.0359320640563965, 2.0255327224731445, 2.0152010917663574, 2.0049376487731934, 1.994744062423706, 1.9846210479736328, 1.9745697975158691, 1.964591383934021, 1.9546868801116943, 1.9448574781417847, 1.9351043701171875, 1.9254286289215088, 1.915831446647644, 1.9063140153884888, 1.8968775272369385, 1.8875232934951782, 1.878252387046814, 1.8690661191940308, 1.8599658012390137, 1.8509525060653687, 1.8420277833938599, 1.8331927061080933, 1.8244487047195435, 1.8157970905303955, 1.8072391748428345, 1.7987761497497559, 1.7904095649719238, 1.7821407318115234, 1.7739708423614502, 1.7659015655517578, 1.7579339742660522, 1.7500697374343872, 1.7423101663589478, 1.7346564531326294, 1.7271103858947754, 1.7196730375289917, 1.712346076965332, 1.705130696296692, 1.6980284452438354, 1.6910408735275269, 1.6841691732406616, 1.677414894104004, 1.6707794666290283, 1.66426420211792, 1.6578706502914429, 1.6516002416610718, 1.6454541683197021, 1.6394340991973877, 1.633541226387024, 1.627777099609375, 1.6221429109573364, 1.6166402101516724, 1.6112700700759888, 1.6060341596603394, 1.60093355178833, 1.5959696769714355, 1.5911437273025513, 1.5864570140838623, 1.5819107294082642, 1.5775060653686523, 1.573244333267212, 1.5691266059875488, 1.565153956413269, 1.5613276958465576, 1.557648777961731, 1.5541181564331055, 1.5507370233535767, 1.5475062131881714, 1.544426679611206, 1.5414994955062866, 1.5387253761291504, 1.5361051559448242, 1.533639669418335, 1.5313297510147095, 1.529175877571106, 1.5271788835525513, 1.5253393650054932, 1.5236577987670898, 1.5221349000930786, 1.5207709074020386, 1.5195664167404175, 1.5185216665267944, 1.5176372528076172, 1.5169130563735962, 1.5163496732711792, 1.5159471035003662, 1.5157055854797363, 1.53125, 1.5313297510147095, 1.5315688848495483, 1.531967282295227, 1.5325249433517456, 1.5332417488098145, 1.5341172218322754, 1.5351512432098389, 1.5363435745239258, 1.537693738937378, 1.539201259613037, 1.5408658981323242, 1.542686939239502, 1.5446637868881226, 1.5467960834503174, 1.5490829944610596, 1.5515239238739014, 1.5541181564331055, 1.556864857673645, 1.5597631931304932, 1.5628124475479126, 1.566011667251587, 1.5693598985671997, 1.5728563070297241, 1.5764998197555542, 1.580289363861084, 1.584223985671997, 1.5883026123046875, 1.5925240516662598, 1.596887230873108, 1.6013909578323364, 1.6060341596603394, 1.6108155250549316, 1.6157337427139282, 1.6207878589630127, 1.625976324081421, 1.6312979459762573, 1.636751413345337, 1.6423354148864746, 1.6480486392974854, 1.653889775276184, 1.6598575115203857, 1.6659504175186157, 1.6721670627593994, 1.6785061359405518, 1.6849663257598877, 1.691546082496643, 1.6982440948486328, 1.7050590515136719, 1.7119895219802856, 1.7190340757369995, 1.7261912822723389, 1.7334598302841187, 1.7408381700515747, 1.7483251094818115, 1.755919098854065, 1.76361882686615, 1.7714229822158813, 1.7793301343917847, 1.7873388528823853, 1.795447826385498, 1.803655743598938, 1.8119611740112305, 1.8203628063201904, 1.8288593292236328, 1.837449550628662, 1.8461319208145142, 1.854905366897583, 1.863768458366394, 1.8727200031280518, 1.881758689880371, 1.890883207321167, 1.9000924825668335, 1.9093852043151855, 1.9187601804733276, 1.9282162189483643, 1.9377520084381104, 1.94736647605896, 1.9570585489273071, 1.9668269157409668, 1.9766706228256226, 1.9865883588790894, 1.9965790510177612, 2.0066418647766113, 2.016775369644165, 2.0269787311553955, 2.0372507572174072, 2.047590494155884, 2.057996988296509, 2.0684690475463867, 2.0790059566497803, 2.089606523513794, 2.1002697944641113, 2.110994815826416, 2.1217806339263916, 2.132626533508301, 2.143531322479248, 2.154494285583496, 2.1655144691467285, 2.176591157913208, 2.187723159790039, 2.1989099979400635, 2.2101504802703857, 2.2214441299438477, 2.232789993286133, 2.244187355041504, 2.2556352615356445, 2.2671332359313965, 2.2786800861358643, 2.2902753353118896, 2.3019182682037354, 2.313608169555664, 2.3253443241119385, 2.3371260166168213, 2.348952531814575, 2.360823154449463, 2.372737407684326, 2.3846943378448486, 2.396693706512451, 2.4087345600128174, 2.42081618309021, 2.43293833732605, 2.4451003074645996, 2.457301378250122, 2.469541072845459, 2.481818675994873, 2.494133710861206, 2.5064857006073, 2.518874168395996, 2.5064857006073, 2.494133710861206, 2.481818675994873, 2.469541072845459, 2.457301378250122, 2.4451003074645996, 2.43293833732605, 2.42081618309021, 2.4087345600128174, 2.396693706512451, 2.3846943378448486, 2.372737407684326, 2.360823154449463, 2.348952531814575, 2.3371260166168213, 2.3253443241119385, 2.313608169555664, 2.3019182682037354, 2.2902753353118896, 2.2786800861358643, 2.2671332359313965, 2.2556352615356445, 2.244187355041504, 2.232789993286133, 2.2214441299438477, 2.2101504802703857, 2.1989099979400635, 2.187723159790039, 2.176591157913208, 2.1655144691467285, 2.154494285583496, 2.143531322479248, 2.132626533508301, 2.1217806339263916, 2.110994815826416, 2.1002697944641113, 2.089606523513794, 2.0790059566497803, 2.0684690475463867, 2.057996988296509, 2.047590494155884, 2.0372507572174072, 2.0269787311553955, 2.016775369644165, 2.0066418647766113, 1.9965790510177612, 1.9865883588790894, 1.9766706228256226, 1.9668269157409668, 1.9570585489273071, 1.94736647605896, 1.9377520084381104, 1.9282162189483643, 1.9187601804733276, 1.9093852043151855, 1.9000924825668335, 1.890883207321167, 1.881758689880371, 1.8727200031280518, 1.863768458366394, 1.854905366897583, 1.8461319208145142, 1.837449550628662, 1.8288593292236328, 1.8203628063201904, 1.8119611740112305, 1.803655743598938, 1.795447826385498, 1.7873388528823853, 1.7793301343917847, 1.7714229822158813, 1.76361882686615, 1.755919098854065, 1.7483251094818115, 1.7408381700515747, 1.7334598302841187, 1.7261912822723389, 1.7190340757369995, 1.7119895219802856, 1.7050590515136719, 1.6982440948486328, 1.691546082496643, 1.6849663257598877, 1.6785061359405518, 1.6721670627593994, 1.6659504175186157, 1.6598575115203857, 1.653889775276184, 1.6480486392974854, 1.6423354148864746, 1.636751413345337, 1.6312979459762573, 1.625976324081421, 1.6207878589630127, 1.6157337427139282, 1.6108155250549316, 1.6060341596603394, 1.6013909578323364, 1.596887230873108, 1.5925240516662598, 1.5883026123046875, 1.584223985671997, 1.580289363861084, 1.5764998197555542, 1.5728563070297241, 1.5693598985671997, 1.566011667251587, 1.5628124475479126, 1.5597631931304932, 1.556864857673645, 1.5541181564331055, 1.5515239238739014, 1.5490829944610596, 1.5467960834503174, 1.5446637868881226, 1.542686939239502, 1.5408658981323242, 1.539201259613037, 1.537693738937378, 1.5363435745239258, 1.5351512432098389, 1.5341172218322754, 1.5332417488098145, 1.5325249433517456, 1.531967282295227, 1.5315688848495483, 1.5313297510147095, 1.546875, 1.5469539165496826, 1.5471906661987305, 1.5475850105285645, 1.5481370687484741, 1.5488466024398804, 1.5497132539749146, 1.5507370233535767, 1.551917314529419, 1.5532538890838623, 1.554746389389038, 1.556394338607788, 1.558197259902954, 1.5601544380187988, 1.5622656345367432, 1.5645298957824707, 1.5669467449188232, 1.5695154666900635, 1.572235345840454, 1.5751054286956787, 1.578125, 1.5812932252883911, 1.5846091508865356, 1.5880719423294067, 1.591680645942688, 1.5954341888427734, 1.5993314981460571, 1.6033717393875122, 1.6075536012649536, 1.611876130104065, 1.6163381338119507, 1.6209384202957153, 1.625675916671753, 1.630549430847168, 1.6355576515197754, 1.6406993865966797, 1.6459734439849854, 1.6513783931732178, 1.656913161277771, 1.6625763177871704, 1.6683666706085205, 1.6742826700210571, 1.6803232431411743, 1.6864869594573975, 1.692772388458252, 1.6991783380508423, 1.7057033777236938, 1.712346076965332, 1.7191051244735718, 1.7259790897369385, 1.7329667806625366, 1.740066647529602, 1.7472774982452393, 1.754597783088684, 1.7620261907577515, 1.7695614099502563, 1.7772021293640137, 1.7849467992782593, 1.7927942276000977, 1.8007431030273438, 1.808791995048523, 1.8169395923614502, 1.8251845836639404, 1.8335256576538086, 1.8419615030288696, 1.8504908084869385, 1.8591123819351196, 1.8678247928619385, 1.8766268491744995, 1.8855173587799072, 1.8944950103759766, 1.9035584926605225, 1.912706732749939, 1.9219385385513306, 1.9312524795532227, 1.9406476020812988, 1.9501227140426636, 1.9596765041351318, 1.9693078994750977, 1.9790159463882446, 1.9887992143630981, 1.9986567497253418, 2.008587598800659, 2.0185904502868652, 2.0286641120910645, 2.0388081073760986, 2.049020767211914, 2.0593016147613525, 2.0696489810943604, 2.0800626277923584, 2.090540885925293, 2.101083278656006, 2.1116886138916016, 2.1223559379577637, 2.133084297180176, 2.1438729763031006, 2.1547210216522217, 2.1656272411346436, 2.176591157913208, 2.1876115798950195, 2.198687791824341, 2.2098190784454346, 2.2210044860839844, 2.232243299484253, 2.243534564971924, 2.2548775672912598, 2.2662713527679443, 2.2777156829833984, 2.2892091274261475, 2.3007514476776123, 2.3123416900634766, 2.323979139328003, 2.335663080215454, 2.347393035888672, 2.35916805267334, 2.3709876537323, 2.3828508853912354, 2.3947575092315674, 2.4067065715789795, 2.4186975955963135, 2.430729866027832, 2.442802667617798, 2.454915761947632, 2.4670681953430176, 2.479259729385376, 2.4914894104003906, 2.5037569999694824, 2.516061782836914, 2.5284030437469482, 2.516061782836914, 2.5037569999694824, 2.4914894104003906, 2.479259729385376, 2.4670681953430176, 2.454915761947632, 2.442802667617798, 2.430729866027832, 2.4186975955963135, 2.4067065715789795, 2.3947575092315674, 2.3828508853912354, 2.3709876537323, 2.35916805267334, 2.347393035888672, 2.335663080215454, 2.323979139328003, 2.3123416900634766, 2.3007514476776123, 2.2892091274261475, 2.2777156829833984, 2.2662713527679443, 2.2548775672912598, 2.243534564971924, 2.232243299484253, 2.2210044860839844, 2.2098190784454346, 2.198687791824341, 2.1876115798950195, 2.176591157913208, 2.1656272411346436, 2.1547210216522217, 2.1438729763031006, 2.133084297180176, 2.1223559379577637, 2.1116886138916016, 2.101083278656006, 2.090540885925293, 2.0800626277923584, 2.0696489810943604, 2.0593016147613525, 2.049020767211914, 2.0388081073760986, 2.0286641120910645, 2.0185904502868652, 2.008587598800659, 1.9986567497253418, 1.9887992143630981, 1.9790159463882446, 1.9693078994750977, 1.9596765041351318, 1.9501227140426636, 1.9406476020812988, 1.9312524795532227, 1.9219385385513306, 1.912706732749939, 1.9035584926605225, 1.8944950103759766, 1.8855173587799072, 1.8766268491744995, 1.8678247928619385, 1.8591123819351196, 1.8504908084869385, 1.8419615030288696, 1.8335256576538086, 1.8251845836639404, 1.8169395923614502, 1.808791995048523, 1.8007431030273438, 1.7927942276000977, 1.7849467992782593, 1.7772021293640137, 1.7695614099502563, 1.7620261907577515, 1.754597783088684, 1.7472774982452393, 1.740066647529602, 1.7329667806625366, 1.7259790897369385, 1.7191051244735718, 1.712346076965332, 1.7057033777236938, 1.6991783380508423, 1.692772388458252, 1.6864869594573975, 1.6803232431411743, 1.6742826700210571, 1.6683666706085205, 1.6625763177871704, 1.656913161277771, 1.6513783931732178, 1.6459734439849854, 1.6406993865966797, 1.6355576515197754, 1.630549430847168, 1.625675916671753, 1.6209384202957153, 1.6163381338119507, 1.611876130104065, 1.6075536012649536, 1.6033717393875122, 1.5993314981460571, 1.5954341888427734, 1.591680645942688, 1.5880719423294067, 1.5846091508865356, 1.5812932252883911, 1.578125, 1.5751054286956787, 1.572235345840454, 1.5695154666900635, 1.5669467449188232, 1.5645298957824707, 1.5622656345367432, 1.5601544380187988, 1.558197259902954, 1.556394338607788, 1.554746389389038, 1.5532538890838623, 1.551917314529419, 1.5507370233535767, 1.5497132539749146, 1.5488466024398804, 1.5481370687484741, 1.5475850105285645, 1.5471906661987305, 1.5469539165496826, 1.5625, 1.5625780820846558, 1.5628124475479126, 1.563202977180481, 1.5637495517730713, 1.5644519329071045, 1.565310001373291, 1.5663233995437622, 1.5674920082092285, 1.5688153505325317, 1.5702930688858032, 1.5719246864318848, 1.5737098455429077, 1.5756478309631348, 1.5777381658554077, 1.5799803733825684, 1.5823736190795898, 1.5849173069000244, 1.5876107215881348, 1.590453028678894, 1.5934436321258545, 1.5965814590454102, 1.5998656749725342, 1.6032955646514893, 1.6068700551986694, 1.6105881929397583, 1.61444890499115, 1.6184513568878174, 1.6225943565368652, 1.626876950263977, 1.6312979459762573, 1.6358561515808105, 1.6405506134033203, 1.6453800201416016, 1.6503432989120483, 1.655439019203186, 1.6606662273406982, 1.6660236120224, 1.671509861946106, 1.677123785018921, 1.6828639507293701, 1.6887292861938477, 1.694718360900879, 1.7008298635482788, 1.7070624828338623, 1.7134150266647339, 1.7198859453201294, 1.7264741659164429, 1.7331780195236206, 1.7399965524673462, 1.746928095817566, 1.7539714574813843, 1.7611253261566162, 1.768388271331787, 1.7757591009140015, 1.7832362651824951, 1.7908185720443726, 1.7985047101974487, 1.806293249130249, 1.814182996749878, 1.8221725225448608, 1.8302605152130127, 1.838445782661438, 1.846726894378662, 1.855102777481079, 1.8635720014572144, 1.8721332550048828, 1.880785346031189, 1.8895270824432373, 1.8983571529388428, 1.9072743654251099, 1.9162774085998535, 1.9253652095794678, 1.9345365762710571, 1.9437901973724365, 1.953125, 1.962539792060852, 1.9720335006713867, 1.981604814529419, 1.9912528991699219, 2.000976324081421, 2.0107741355895996, 2.0206453800201416, 2.0305888652801514, 2.0406033992767334, 2.0506882667541504, 2.0608420372009277, 2.0710642337799072, 2.081353187561035, 2.0917084217071533, 2.102128744125366, 2.1126132011413574, 2.1231610774993896, 2.1337709426879883, 2.144442319869995, 2.1551740169525146, 2.1659653186798096, 2.1768155097961426, 2.187723159790039, 2.198687791824341, 2.2097086906433105, 2.2207846641540527, 2.231915235519409, 2.2430992126464844, 2.25433611869812, 2.265625, 2.2769651412963867, 2.288355827331543, 2.2997961044311523, 2.3112854957580566, 2.3228232860565186, 2.3344085216522217, 2.3460404872894287, 2.3577187061309814, 2.3694424629211426, 2.381211042404175, 2.393023729324341, 2.4048798084259033, 2.416778802871704, 2.428720235824585, 2.4407029151916504, 2.4527268409729004, 2.4647910594940186, 2.4768950939178467, 2.4890384674072266, 2.501220464706421, 2.5134403705596924, 2.525697946548462, 2.537992477416992, 2.525697946548462, 2.5134403705596924, 2.501220464706421, 2.4890384674072266, 2.4768950939178467, 2.4647910594940186, 2.4527268409729004, 2.4407029151916504, 2.428720235824585, 2.416778802871704, 2.4048798084259033, 2.393023729324341, 2.381211042404175, 2.3694424629211426, 2.3577187061309814, 2.3460404872894287, 2.3344085216522217, 2.3228232860565186, 2.3112854957580566, 2.2997961044311523, 2.288355827331543, 2.2769651412963867, 2.265625, 2.25433611869812, 2.2430992126464844, 2.231915235519409, 2.2207846641540527, 2.2097086906433105, 2.198687791824341, 2.187723159790039, 2.1768155097961426, 2.1659653186798096, 2.1551740169525146, 2.144442319869995, 2.1337709426879883, 2.1231610774993896, 2.1126132011413574, 2.102128744125366, 2.0917084217071533, 2.081353187561035, 2.0710642337799072, 2.0608420372009277, 2.0506882667541504, 2.0406033992767334, 2.0305888652801514, 2.0206453800201416, 2.0107741355895996, 2.000976324081421, 1.9912528991699219, 1.981604814529419, 1.9720335006713867, 1.962539792060852, 1.953125, 1.9437901973724365, 1.9345365762710571, 1.9253652095794678, 1.9162774085998535, 1.9072743654251099, 1.8983571529388428, 1.8895270824432373, 1.880785346031189, 1.8721332550048828, 1.8635720014572144, 1.855102777481079, 1.846726894378662, 1.838445782661438, 1.8302605152130127, 1.8221725225448608, 1.814182996749878, 1.806293249130249, 1.7985047101974487, 1.7908185720443726, 1.7832362651824951, 1.7757591009140015, 1.768388271331787, 1.7611253261566162, 1.7539714574813843, 1.746928095817566, 1.7399965524673462, 1.7331780195236206, 1.7264741659164429, 1.7198859453201294, 1.7134150266647339, 1.7070624828338623, 1.7008298635482788, 1.694718360900879, 1.6887292861938477, 1.6828639507293701, 1.677123785018921, 1.671509861946106, 1.6660236120224, 1.6606662273406982, 1.655439019203186, 1.6503432989120483, 1.6453800201416016, 1.6405506134033203, 1.6358561515808105, 1.6312979459762573, 1.626876950263977, 1.6225943565368652, 1.6184513568878174, 1.61444890499115, 1.6105881929397583, 1.6068700551986694, 1.6032955646514893, 1.5998656749725342, 1.5965814590454102, 1.5934436321258545, 1.590453028678894, 1.5876107215881348, 1.5849173069000244, 1.5823736190795898, 1.5799803733825684, 1.5777381658554077, 1.5756478309631348, 1.5737098455429077, 1.5719246864318848, 1.5702930688858032, 1.5688153505325317, 1.5674920082092285, 1.5663233995437622, 1.565310001373291, 1.5644519329071045, 1.5637495517730713, 1.563202977180481, 1.5628124475479126, 1.5625780820846558, 1.578125, 1.5782023668289185, 1.5784343481063843, 1.578821063041687, 1.579362154006958, 1.5800576210021973, 1.5809072256088257, 1.5819107294082642, 1.583067774772644, 1.5843781232833862, 1.5858412981033325, 1.5874569416046143, 1.5892245769500732, 1.5911437273025513, 1.5932137966156006, 1.5954341888427734, 1.597804307937622, 1.6003234386444092, 1.602990984916687, 1.6058061122894287, 1.608768105506897, 1.611876130104065, 1.6151292324066162, 1.618526816368103, 1.6220676898956299, 1.62575101852417, 1.6295758485794067, 1.633541226387024, 1.6376460790634155, 1.6418894529342651, 1.6462700366973877, 1.6507869958877563, 1.655439019203186, 1.6602251529693604, 1.6651442050933838, 1.6701948642730713, 1.675376057624817, 1.6806864738464355, 1.6861250400543213, 1.691690444946289, 1.6973813772201538, 1.70319664478302, 1.7091350555419922, 1.7151951789855957, 1.721375823020935, 1.7276756763458252, 1.734093427658081, 1.7406277656555176, 1.7472774982452393, 1.754041075706482, 1.7609174251556396, 1.7679049968719482, 1.7750027179718018, 1.7822091579437256, 1.7895230054855347, 1.796942949295044, 1.8044676780700684, 1.8120958805084229, 1.8198262453079224, 1.8276575803756714, 1.8355884552001953, 1.843617558479309, 1.8517438173294067, 1.8599658012390137, 1.8682821989059448, 1.8766919374465942, 1.8851935863494873, 1.893786072731018, 1.9024680852890015, 1.9112383127212524, 1.920095682144165, 1.9290390014648438, 1.9380669593811035, 1.9471784830093384, 1.9563722610473633, 1.9656473398208618, 1.9750025272369385, 1.9844365119934082, 1.9939483404159546, 2.0035369396209717, 2.0132009983062744, 2.022939682006836, 2.0327517986297607, 2.0426363945007324, 2.0525922775268555, 2.0626182556152344, 2.072713851928711, 2.0828776359558105, 2.093108654022217, 2.1034059524536133, 2.1137685775756836, 2.1241955757141113, 2.13468599319458, 2.1452391147613525, 2.155853748321533, 2.1665289402008057, 2.1772639751434326, 2.1880578994750977, 2.1989099979400635, 2.2098190784454346, 2.2207846641540527, 2.2318058013916016, 2.2428815364837646, 2.2540111541748047, 2.2651939392089844, 2.2764289379119873, 2.2877156734466553, 2.2990529537200928, 2.3104403018951416, 2.3218770027160645, 2.333362340927124, 2.344895601272583, 2.356475830078125, 2.368102550506592, 2.379775285720825, 2.3914928436279297, 2.403254985809326, 2.4150609970092773, 2.426910161972046, 2.4388017654418945, 2.450735330581665, 2.46271014213562, 2.4747257232666016, 2.486781358718872, 2.4988768100738525, 2.5110108852386475, 2.523183584213257, 2.5353939533233643, 2.5476417541503906, 2.5353939533233643, 2.523183584213257, 2.5110108852386475, 2.4988768100738525, 2.486781358718872, 2.4747257232666016, 2.46271014213562, 2.450735330581665, 2.4388017654418945, 2.426910161972046, 2.4150609970092773, 2.403254985809326, 2.3914928436279297, 2.379775285720825, 2.368102550506592, 2.356475830078125, 2.344895601272583, 2.333362340927124, 2.3218770027160645, 2.3104403018951416, 2.2990529537200928, 2.2877156734466553, 2.2764289379119873, 2.2651939392089844, 2.2540111541748047, 2.2428815364837646, 2.2318058013916016, 2.2207846641540527, 2.2098190784454346, 2.1989099979400635, 2.1880578994750977, 2.1772639751434326, 2.1665289402008057, 2.155853748321533, 2.1452391147613525, 2.13468599319458, 2.1241955757141113, 2.1137685775756836, 2.1034059524536133, 2.093108654022217, 2.0828776359558105, 2.072713851928711, 2.0626182556152344, 2.0525922775268555, 2.0426363945007324, 2.0327517986297607, 2.022939682006836, 2.0132009983062744, 2.0035369396209717, 1.9939483404159546, 1.9844365119934082, 1.9750025272369385, 1.9656473398208618, 1.9563722610473633, 1.9471784830093384, 1.9380669593811035, 1.9290390014648438, 1.920095682144165, 1.9112383127212524, 1.9024680852890015, 1.893786072731018, 1.8851935863494873, 1.8766919374465942, 1.8682821989059448, 1.8599658012390137, 1.8517438173294067, 1.843617558479309, 1.8355884552001953, 1.8276575803756714, 1.8198262453079224, 1.8120958805084229, 1.8044676780700684, 1.796942949295044, 1.7895230054855347, 1.7822091579437256, 1.7750027179718018, 1.7679049968719482, 1.7609174251556396, 1.754041075706482, 1.7472774982452393, 1.7406277656555176, 1.734093427658081, 1.7276756763458252, 1.721375823020935, 1.7151951789855957, 1.7091350555419922, 1.70319664478302, 1.6973813772201538, 1.691690444946289, 1.6861250400543213, 1.6806864738464355, 1.675376057624817, 1.6701948642730713, 1.6651442050933838, 1.6602251529693604, 1.655439019203186, 1.6507869958877563, 1.6462700366973877, 1.6418894529342651, 1.6376460790634155, 1.633541226387024, 1.6295758485794067, 1.62575101852417, 1.6220676898956299, 1.618526816368103, 1.6151292324066162, 1.611876130104065, 1.608768105506897, 1.6058061122894287, 1.602990984916687, 1.6003234386444092, 1.597804307937622, 1.5954341888427734, 1.5932137966156006, 1.5911437273025513, 1.5892245769500732, 1.5874569416046143, 1.5858412981033325, 1.5843781232833862, 1.583067774772644, 1.5819107294082642, 1.5809072256088257, 1.5800576210021973, 1.579362154006958, 1.578821063041687, 1.5784343481063843, 1.5782023668289185, 1.59375, 1.5938265323638916, 1.5940563678741455, 1.594439148902893, 1.5949749946594238, 1.5956636667251587, 1.5965049266815186, 1.5974986553192139, 1.598644495010376, 1.5999419689178467, 1.6013909578323364, 1.602990984916687, 1.6047414541244507, 1.6066421270370483, 1.6086921691894531, 1.6108912229537964, 1.6132386922836304, 1.6157337427139282, 1.6183758974075317, 1.621164321899414, 1.624098300933838, 1.6271770000457764, 1.6303997039794922, 1.633765459060669, 1.6372733116149902, 1.6409225463867188, 1.644712209701538, 1.6486411094665527, 1.6527085304260254, 1.656913161277771, 1.6612542867660522, 1.6657304763793945, 1.6703410148620605, 1.6750845909118652, 1.679960012435913, 1.6849663257598877, 1.690102219581604, 1.6953665018081665, 1.7007580995559692, 1.7062757015228271, 1.7119182348251343, 1.7176843881607056, 1.7235727310180664, 1.7295823097229004, 1.7357118129730225, 1.741959810256958, 1.7483251094818115, 1.754806399345398, 1.7614026069641113, 1.7681121826171875, 1.774933934211731, 1.7818666696548462, 1.7889089584350586, 1.7960596084594727, 1.8033173084259033, 1.810680627822876, 1.8181484937667847, 1.8257195949554443, 1.8333925008773804, 1.8411661386489868, 1.849039077758789, 1.857010006904602, 1.8650779724121094, 1.8732413053512573, 1.881499171257019, 1.8898500204086304, 1.8982927799224854, 1.9068262577056885, 1.9154491424560547, 1.9241602420806885, 1.9329583644866943, 1.9418424367904663, 1.9508111476898193, 1.9598634243011475, 1.9689979553222656, 1.978213906288147, 1.987509846687317, 1.996884822845459, 2.0063376426696777, 2.015867233276367, 2.025472640991211, 2.0351524353027344, 2.0449059009552, 2.054732084274292, 2.064629554748535, 2.0745975971221924, 2.084635019302368, 2.094740867614746, 2.1049141883850098, 2.1151540279388428, 2.1254594326019287, 2.135829448699951, 2.1462631225585938, 2.15675950050354, 2.1673176288604736, 2.1779367923736572, 2.1886157989501953, 2.1993539333343506, 2.2101504802703857, 2.2210044860839844, 2.231915235519409, 2.2428815364837646, 2.2539029121398926, 2.2649784088134766, 2.2761073112487793, 2.2872886657714844, 2.2985219955444336, 2.3098063468933105, 2.321141004562378, 2.3325252532958984, 2.3439583778381348, 2.3554396629333496, 2.3669683933258057, 2.3785438537597656, 2.390165328979492, 2.401832342147827, 2.413544178009033, 2.425299882888794, 2.4370992183685303, 2.448941469192505, 2.4608259201049805, 2.4727518558502197, 2.4847190380096436, 2.4967262744903564, 2.5087735652923584, 2.520860195159912, 2.5329854488372803, 2.5451488494873047, 2.557349920272827, 2.5451488494873047, 2.5329854488372803, 2.520860195159912, 2.5087735652923584, 2.4967262744903564, 2.4847190380096436, 2.4727518558502197, 2.4608259201049805, 2.448941469192505, 2.4370992183685303, 2.425299882888794, 2.413544178009033, 2.401832342147827, 2.390165328979492, 2.3785438537597656, 2.3669683933258057, 2.3554396629333496, 2.3439583778381348, 2.3325252532958984, 2.321141004562378, 2.3098063468933105, 2.2985219955444336, 2.2872886657714844, 2.2761073112487793, 2.2649784088134766, 2.2539029121398926, 2.2428815364837646, 2.231915235519409, 2.2210044860839844, 2.2101504802703857, 2.1993539333343506, 2.1886157989501953, 2.1779367923736572, 2.1673176288604736, 2.15675950050354, 2.1462631225585938, 2.135829448699951, 2.1254594326019287, 2.1151540279388428, 2.1049141883850098, 2.094740867614746, 2.084635019302368, 2.0745975971221924, 2.064629554748535, 2.054732084274292, 2.0449059009552, 2.0351524353027344, 2.025472640991211, 2.015867233276367, 2.0063376426696777, 1.996884822845459, 1.987509846687317, 1.978213906288147, 1.9689979553222656, 1.9598634243011475, 1.9508111476898193, 1.9418424367904663, 1.9329583644866943, 1.9241602420806885, 1.9154491424560547, 1.9068262577056885, 1.8982927799224854, 1.8898500204086304, 1.881499171257019, 1.8732413053512573, 1.8650779724121094, 1.857010006904602, 1.849039077758789, 1.8411661386489868, 1.8333925008773804, 1.8257195949554443, 1.8181484937667847, 1.810680627822876, 1.8033173084259033, 1.7960596084594727, 1.7889089584350586, 1.7818666696548462, 1.774933934211731, 1.7681121826171875, 1.7614026069641113, 1.754806399345398, 1.7483251094818115, 1.741959810256958, 1.7357118129730225, 1.7295823097229004, 1.7235727310180664, 1.7176843881607056, 1.7119182348251343, 1.7062757015228271, 1.7007580995559692, 1.6953665018081665, 1.690102219581604, 1.6849663257598877, 1.679960012435913, 1.6750845909118652, 1.6703410148620605, 1.6657304763793945, 1.6612542867660522, 1.656913161277771, 1.6527085304260254, 1.6486411094665527, 1.644712209701538, 1.6409225463867188, 1.6372733116149902, 1.633765459060669, 1.6303997039794922, 1.6271770000457764, 1.624098300933838, 1.621164321899414, 1.6183758974075317, 1.6157337427139282, 1.6132386922836304, 1.6108912229537964, 1.6086921691894531, 1.6066421270370483, 1.6047414541244507, 1.602990984916687, 1.6013909578323364, 1.5999419689178467, 1.598644495010376, 1.5974986553192139, 1.5965049266815186, 1.5956636667251587, 1.5949749946594238, 1.594439148902893, 1.5940563678741455, 1.5938265323638916, 1.609375, 1.6094508171081543, 1.6096783876419067, 1.6100574731826782, 1.6105881929397583, 1.6112700700759888, 1.6121032238006592, 1.6130872964859009, 1.6142220497131348, 1.6155071258544922, 1.6169421672821045, 1.618526816368103, 1.62026047706604, 1.6221429109573364, 1.6241735219955444, 1.6263515949249268, 1.6286767721176147, 1.6311482191085815, 1.633765459060669, 1.63652765750885, 1.6394340991973877, 1.6424840688705444, 1.6456767320632935, 1.649011254310608, 1.6524869203567505, 1.6561025381088257, 1.6598575115203857, 1.6637506484985352, 1.6677812337875366, 1.671947956085205, 1.6762501001358032, 1.6806864738464355, 1.685256004333496, 1.6899577379226685, 1.6947903633117676, 1.699752926826477, 1.704844355583191, 1.7100632190704346, 1.7154086828231812, 1.720879316329956, 1.7264741659164429, 1.732191801071167, 1.738031029701233, 1.7439907789230347, 1.7500697374343872, 1.756266713142395, 1.762580394744873, 1.7690094709396362, 1.7755528688430786, 1.7822091579437256, 1.7889772653579712, 1.7958556413650513, 1.8028433322906494, 1.809938907623291, 1.8171411752700806, 1.8244487047195435, 1.8318605422973633, 1.8393751382827759, 1.8469913005828857, 1.854707956314087, 1.8625235557556152, 1.8704371452331543, 1.8784472942352295, 1.8865529298782349, 1.8947527408599854, 1.903045415878296, 1.91143000125885, 1.9199049472808838, 1.9284694194793701, 1.9371219873428345, 1.9458614587783813, 1.9546868801116943, 1.9635969400405884, 1.972590446472168, 1.9816664457321167, 1.9908236265182495, 2.00006103515625, 2.0093774795532227, 2.0187718868255615, 2.028243064880371, 2.037790060043335, 2.0474116802215576, 2.0571069717407227, 2.0668749809265137, 2.0767147541046143, 2.086625099182129, 2.096604824066162, 2.1066534519195557, 2.116769552230835, 2.1269521713256836, 2.1372008323669434, 2.1475141048431396, 2.157891035079956, 2.1683311462402344, 2.178833246231079, 2.189396381378174, 2.2000200748443604, 2.210702896118164, 2.2214441299438477, 2.232243299484253, 2.2430992126464844, 2.2540111541748047, 2.2649784088134766, 2.2760000228881836, 2.2870752811431885, 2.298203229904175, 2.3093833923339844, 2.32061505317688, 2.331897020339966, 2.343229055404663, 2.3546102046966553, 2.366039752960205, 2.3775172233581543, 2.3890416622161865, 2.4006123542785645, 2.41222882270813, 2.4238903522491455, 2.435596227645874, 2.4473459720611572, 2.4591386318206787, 2.4709739685058594, 2.482851266860962, 2.494769811630249, 2.5067291259765625, 2.518728733062744, 2.5307676792144775, 2.5428457260131836, 2.554962158203125, 2.5671167373657227, 2.554962158203125, 2.5428457260131836, 2.5307676792144775, 2.518728733062744, 2.5067291259765625, 2.494769811630249, 2.482851266860962, 2.4709739685058594, 2.4591386318206787, 2.4473459720611572, 2.435596227645874, 2.4238903522491455, 2.41222882270813, 2.4006123542785645, 2.3890416622161865, 2.3775172233581543, 2.366039752960205, 2.3546102046966553, 2.343229055404663, 2.331897020339966, 2.32061505317688, 2.3093833923339844, 2.298203229904175, 2.2870752811431885, 2.2760000228881836, 2.2649784088134766, 2.2540111541748047, 2.2430992126464844, 2.232243299484253, 2.2214441299438477, 2.210702896118164, 2.2000200748443604, 2.189396381378174, 2.178833246231079, 2.1683311462402344, 2.157891035079956, 2.1475141048431396, 2.1372008323669434, 2.1269521713256836, 2.116769552230835, 2.1066534519195557, 2.096604824066162, 2.086625099182129, 2.0767147541046143, 2.0668749809265137, 2.0571069717407227, 2.0474116802215576, 2.037790060043335, 2.028243064880371, 2.0187718868255615, 2.0093774795532227, 2.00006103515625, 1.9908236265182495, 1.9816664457321167, 1.972590446472168, 1.9635969400405884, 1.9546868801116943, 1.9458614587783813, 1.9371219873428345, 1.9284694194793701, 1.9199049472808838, 1.91143000125885, 1.903045415878296, 1.8947527408599854, 1.8865529298782349, 1.8784472942352295, 1.8704371452331543, 1.8625235557556152, 1.854707956314087, 1.8469913005828857, 1.8393751382827759, 1.8318605422973633, 1.8244487047195435, 1.8171411752700806, 1.809938907623291, 1.8028433322906494, 1.7958556413650513, 1.7889772653579712, 1.7822091579437256, 1.7755528688430786, 1.7690094709396362, 1.762580394744873, 1.756266713142395, 1.7500697374343872, 1.7439907789230347, 1.738031029701233, 1.732191801071167, 1.7264741659164429, 1.720879316329956, 1.7154086828231812, 1.7100632190704346, 1.704844355583191, 1.699752926826477, 1.6947903633117676, 1.6899577379226685, 1.685256004333496, 1.6806864738464355, 1.6762501001358032, 1.671947956085205, 1.6677812337875366, 1.6637506484985352, 1.6598575115203857, 1.6561025381088257, 1.6524869203567505, 1.649011254310608, 1.6456767320632935, 1.6424840688705444, 1.6394340991973877, 1.63652765750885, 1.633765459060669, 1.6311482191085815, 1.6286767721176147, 1.6263515949249268, 1.6241735219955444, 1.6221429109573364, 1.62026047706604, 1.618526816368103, 1.6169421672821045, 1.6155071258544922, 1.6142220497131348, 1.6130872964859009, 1.6121032238006592, 1.6112700700759888, 1.6105881929397583, 1.6100574731826782, 1.6096783876419067, 1.6094508171081543, 1.625, 1.625075101852417, 1.625300407409668, 1.625675916671753, 1.6262015104293823, 1.626876950263977, 1.6277021169662476, 1.6286767721176147, 1.62980055809021, 1.6310733556747437, 1.6324946880340576, 1.6340643167495728, 1.6357815265655518, 1.6376460790634155, 1.6396574974060059, 1.6418150663375854, 1.644118309020996, 1.64656662940979, 1.64915931224823, 1.6518957614898682, 1.6547752618789673, 1.6577969789505005, 1.66096031665802, 1.66426420211792, 1.6677080392837524, 1.6712907552719116, 1.6750116348266602, 1.6788697242736816, 1.6828639507293701, 1.6869935989379883, 1.691257357597351, 1.6956545114517212, 1.7001838684082031, 1.704844355583191, 1.7096349000930786, 1.7145545482635498, 1.719602108001709, 1.7247763872146606, 1.7300763130187988, 1.7355008125305176, 1.7410485744476318, 1.746718406677246, 1.752509355545044, 1.7584199905395508, 1.7644492387771606, 1.770595908164978, 1.7768585681915283, 1.7832362651824951, 1.7897276878356934, 1.7963314056396484, 1.803046464920044, 1.8098714351654053, 1.8168052434921265, 1.823846459388733, 1.8309940099716187, 1.8382465839385986, 1.8456028699874878, 1.8530617952346802, 1.8606219291687012, 1.8682821989059448, 1.8760414123535156, 1.883898138999939, 1.8918513059616089, 1.8998997211456299, 1.9080421924591064, 1.9162774085998535, 1.9246042966842651, 1.9330215454101562, 1.941528081893921, 1.9501227140426636, 1.9588042497634888, 1.9675716161727905, 1.9764235019683838, 1.9853589534759521, 1.9943768978118896, 2.0034759044647217, 2.012655258178711, 2.021913528442383, 2.03125, 2.040663242340088, 2.050152540206909, 2.0597164630889893, 2.0693540573120117, 2.0790646076202393, 2.0888469219207764, 2.0986998081207275, 2.1086225509643555, 2.1186139583587646, 2.1286733150482178, 2.1387994289398193, 2.148991346359253, 2.1592483520507812, 2.169569253921509, 2.1799535751342773, 2.1903998851776123, 2.2009074687957764, 2.2114758491516113, 2.2221035957336426, 2.232789993286133, 2.243534564971924, 2.25433611869812, 2.2651939392089844, 2.2761073112487793, 2.2870752811431885, 2.2980971336364746, 2.3091719150543213, 2.3202993869781494, 2.3314783573150635, 2.342708110809326, 2.3539881706237793, 2.3653173446655273, 2.3766956329345703, 2.3881216049194336, 2.399595022201538, 2.4111151695251465, 2.4226813316345215, 2.434292793273926, 2.445948839187622, 2.457648992538452, 2.469392776489258, 2.4811792373657227, 2.4930078983306885, 2.504878044128418, 2.516789436340332, 2.5287411212921143, 2.5407326221466064, 2.5527634620666504, 2.564833164215088, 2.5769410133361816, 2.564833164215088, 2.5527634620666504, 2.5407326221466064, 2.5287411212921143, 2.516789436340332, 2.504878044128418, 2.4930078983306885, 2.4811792373657227, 2.469392776489258, 2.457648992538452, 2.445948839187622, 2.434292793273926, 2.4226813316345215, 2.4111151695251465, 2.399595022201538, 2.3881216049194336, 2.3766956329345703, 2.3653173446655273, 2.3539881706237793, 2.342708110809326, 2.3314783573150635, 2.3202993869781494, 2.3091719150543213, 2.2980971336364746, 2.2870752811431885, 2.2761073112487793, 2.2651939392089844, 2.25433611869812, 2.243534564971924, 2.232789993286133, 2.2221035957336426, 2.2114758491516113, 2.2009074687957764, 2.1903998851776123, 2.1799535751342773, 2.169569253921509, 2.1592483520507812, 2.148991346359253, 2.1387994289398193, 2.1286733150482178, 2.1186139583587646, 2.1086225509643555, 2.0986998081207275, 2.0888469219207764, 2.0790646076202393, 2.0693540573120117, 2.0597164630889893, 2.050152540206909, 2.040663242340088, 2.03125, 2.021913528442383, 2.012655258178711, 2.0034759044647217, 1.9943768978118896, 1.9853589534759521, 1.9764235019683838, 1.9675716161727905, 1.9588042497634888, 1.9501227140426636, 1.941528081893921, 1.9330215454101562, 1.9246042966842651, 1.9162774085998535, 1.9080421924591064, 1.8998997211456299, 1.8918513059616089, 1.883898138999939, 1.8760414123535156, 1.8682821989059448, 1.8606219291687012, 1.8530617952346802, 1.8456028699874878, 1.8382465839385986, 1.8309940099716187, 1.823846459388733, 1.8168052434921265, 1.8098714351654053, 1.803046464920044, 1.7963314056396484, 1.7897276878356934, 1.7832362651824951, 1.7768585681915283, 1.770595908164978, 1.7644492387771606, 1.7584199905395508, 1.752509355545044, 1.746718406677246, 1.7410485744476318, 1.7355008125305176, 1.7300763130187988, 1.7247763872146606, 1.719602108001709, 1.7145545482635498, 1.7096349000930786, 1.704844355583191, 1.7001838684082031, 1.6956545114517212, 1.691257357597351, 1.6869935989379883, 1.6828639507293701, 1.6788697242736816, 1.6750116348266602, 1.6712907552719116, 1.6677080392837524, 1.66426420211792, 1.66096031665802, 1.6577969789505005, 1.6547752618789673, 1.6518957614898682, 1.64915931224823, 1.64656662940979, 1.644118309020996, 1.6418150663375854, 1.6396574974060059, 1.6376460790634155, 1.6357815265655518, 1.6340643167495728, 1.6324946880340576, 1.6310733556747437, 1.62980055809021, 1.6286767721176147, 1.6277021169662476, 1.626876950263977, 1.6262015104293823, 1.625675916671753, 1.625300407409668, 1.625075101852417, 1.640625, 1.6406993865966797, 1.6409225463867188, 1.6412944793701172, 1.6418150663375854, 1.6424840688705444, 1.6433013677597046, 1.6442668437957764, 1.6453800201416016, 1.6466407775878906, 1.6480486392974854, 1.6496033668518066, 1.6513044834136963, 1.6531516313552856, 1.6551440954208374, 1.657281517982483, 1.6595633029937744, 1.6619888544082642, 1.6645575761795044, 1.6672687530517578, 1.6701217889785767, 1.6731157302856445, 1.6762501001358032, 1.6795239448547363, 1.6829365491867065, 1.6864869594573975, 1.6901743412017822, 1.693997859954834, 1.6979565620422363, 1.7020494937896729, 1.7062757015228271, 1.7106342315673828, 1.7151240110397339, 1.719744086265564, 1.7244932651519775, 1.7293705940246582, 1.734375, 1.739505410194397, 1.744760513305664, 1.7501394748687744, 1.755640983581543, 1.7612639665603638, 1.7670072317123413, 1.77286958694458, 1.7788498401641846, 1.7849467992782593, 1.7911593914031982, 1.7974863052368164, 1.8039263486862183, 1.8104784488677979, 1.8171411752700806, 1.8239134550094604, 1.8307939767837524, 1.8377816677093506, 1.8448752164840698, 1.8520734310150146, 1.859375, 1.86677885055542, 1.8742836713790894, 1.8818883895874023, 1.8895916938781738, 1.8973922729492188, 1.9052891731262207, 1.9132810831069946, 1.921366810798645, 1.9295451641082764, 1.9378149509429932, 1.9461750984191895, 1.9546244144439697, 1.9631617069244385, 1.9717859029769897, 1.9804956912994385, 1.9892901182174683, 1.9981681108474731, 2.0071284770965576, 2.016170024871826, 2.025291681289673, 2.0344924926757812, 2.043771505355835, 2.0531272888183594, 2.062559127807617, 2.072065830230713, 2.08164644241333, 2.0912997722625732, 2.101025104522705, 2.11082124710083, 2.120687246322632, 2.130622148513794, 2.140625, 2.1506948471069336, 2.1608307361602783, 2.1710317134857178, 2.1812970638275146, 2.1916255950927734, 2.202016592025757, 2.2124691009521484, 2.222982406616211, 2.233555316925049, 2.244187355041504, 2.2548775672912598, 2.265625, 2.2764289379119873, 2.2872886657714844, 2.298203229904175, 2.3091719150543213, 2.3201942443847656, 2.331268787384033, 2.342395544052124, 2.3535730838775635, 2.3648014068603516, 2.3760790824890137, 2.3874058723449707, 2.3987810611724854, 2.410203695297241, 2.42167329788208, 2.4331893920898438, 2.4447507858276367, 2.45635724067688, 2.468008279800415, 2.4797027111053467, 2.491440534591675, 2.503220558166504, 2.515042543411255, 2.5269060134887695, 2.5388100147247314, 2.5507543087005615, 2.5627381801605225, 2.574761152267456, 2.586822509765625, 2.574761152267456, 2.5627381801605225, 2.5507543087005615, 2.5388100147247314, 2.5269060134887695, 2.515042543411255, 2.503220558166504, 2.491440534591675, 2.4797027111053467, 2.468008279800415, 2.45635724067688, 2.4447507858276367, 2.4331893920898438, 2.42167329788208, 2.410203695297241, 2.3987810611724854, 2.3874058723449707, 2.3760790824890137, 2.3648014068603516, 2.3535730838775635, 2.342395544052124, 2.331268787384033, 2.3201942443847656, 2.3091719150543213, 2.298203229904175, 2.2872886657714844, 2.2764289379119873, 2.265625, 2.2548775672912598, 2.244187355041504, 2.233555316925049, 2.222982406616211, 2.2124691009521484, 2.202016592025757, 2.1916255950927734, 2.1812970638275146, 2.1710317134857178, 2.1608307361602783, 2.1506948471069336, 2.140625, 2.130622148513794, 2.120687246322632, 2.11082124710083, 2.101025104522705, 2.0912997722625732, 2.08164644241333, 2.072065830230713, 2.062559127807617, 2.0531272888183594, 2.043771505355835, 2.0344924926757812, 2.025291681289673, 2.016170024871826, 2.0071284770965576, 1.9981681108474731, 1.9892901182174683, 1.9804956912994385, 1.9717859029769897, 1.9631617069244385, 1.9546244144439697, 1.9461750984191895, 1.9378149509429932, 1.9295451641082764, 1.921366810798645, 1.9132810831069946, 1.9052891731262207, 1.8973922729492188, 1.8895916938781738, 1.8818883895874023, 1.8742836713790894, 1.86677885055542, 1.859375, 1.8520734310150146, 1.8448752164840698, 1.8377816677093506, 1.8307939767837524, 1.8239134550094604, 1.8171411752700806, 1.8104784488677979, 1.8039263486862183, 1.7974863052368164, 1.7911593914031982, 1.7849467992782593, 1.7788498401641846, 1.77286958694458, 1.7670072317123413, 1.7612639665603638, 1.755640983581543, 1.7501394748687744, 1.744760513305664, 1.739505410194397, 1.734375, 1.7293705940246582, 1.7244932651519775, 1.719744086265564, 1.7151240110397339, 1.7106342315673828, 1.7062757015228271, 1.7020494937896729, 1.6979565620422363, 1.693997859954834, 1.6901743412017822, 1.6864869594573975, 1.6829365491867065, 1.6795239448547363, 1.6762501001358032, 1.6731157302856445, 1.6701217889785767, 1.6672687530517578, 1.6645575761795044, 1.6619888544082642, 1.6595633029937744, 1.657281517982483, 1.6551440954208374, 1.6531516313552856, 1.6513044834136963, 1.6496033668518066, 1.6480486392974854, 1.6466407775878906, 1.6453800201416016, 1.6442668437957764, 1.6433013677597046, 1.6424840688705444, 1.6418150663375854, 1.6412944793701172, 1.6409225463867188, 1.6406993865966797, 1.65625, 1.6563236713409424, 1.656544804573059, 1.656913161277771, 1.6574288606643677, 1.6580915451049805, 1.6589012145996094, 1.6598575115203857, 1.66096031665802, 1.662209153175354, 1.6636039018630981, 1.6651442050933838, 1.6668294668197632, 1.6686593294143677, 1.670633316040039, 1.6727509498596191, 1.6750116348266602, 1.677414894104004, 1.679960012435913, 1.68264639377594, 1.6854733228683472, 1.6884400844573975, 1.691546082496643, 1.6947903633117676, 1.6981722116470337, 1.701690912246704, 1.7053455114364624, 1.7091350555419922, 1.7130587100982666, 1.7171157598495483, 1.7213048934936523, 1.7256253957748413, 1.7300763130187988, 1.7346564531326294, 1.7393649816513062, 1.7442008256912231, 1.7491627931594849, 1.7542498111724854, 1.7594610452651978, 1.764795184135437, 1.7702511548995972, 1.7758277654647827, 1.7815240621566772, 1.7873388528823853, 1.7932708263397217, 1.7993190288543701, 1.8054821491241455, 1.8117589950561523, 1.8181484937667847, 1.824649453163147, 1.8312606811523438, 1.83798086643219, 1.8448090553283691, 1.8517438173294067, 1.8587840795516968, 1.8659285306930542, 1.8731762170791626, 1.8805257081985474, 1.8879759311676025, 1.8955256938934326, 1.903173804283142, 1.910918951034546, 1.9187601804733276, 1.9266961812973022, 1.9347258806228638, 1.9428479671478271, 1.9510613679885864, 1.9593650102615356, 1.9677577018737793, 1.9762382507324219, 1.9848055839538574, 1.9934585094451904, 2.0021960735321045, 2.011017084121704, 2.0199203491210938, 2.028904914855957, 2.0379695892333984, 2.0471134185791016, 2.05633544921875, 2.0656344890594482, 2.075009346008301, 2.0844593048095703, 2.0939831733703613, 2.1035799980163574, 2.113248825073242, 2.12298846244812, 2.132798194885254, 2.142676830291748, 2.1526236534118652, 2.162637710571289, 2.172717809677124, 2.182863473892212, 2.193073272705078, 2.2033467292785645, 2.2136826515197754, 2.2240803241729736, 2.2345387935638428, 2.2450575828552246, 2.2556352615356445, 2.2662713527679443, 2.2769651412963867, 2.2877156734466553, 2.2985219955444336, 2.3093833923339844, 2.3202993869781494, 2.331268787384033, 2.3422911167144775, 2.353365659713745, 2.3644914627075195, 2.3756680488586426, 2.386894464492798, 2.398170232772827, 2.409494638442993, 2.4208667278289795, 2.432286024093628, 2.4437520503997803, 2.45526385307312, 2.4668209552764893, 2.4784224033355713, 2.490068197250366, 2.5017571449279785, 2.513489007949829, 2.5252630710601807, 2.537078619003296, 2.5489351749420166, 2.5608322620391846, 2.5727691650390625, 2.584745168685913, 2.5967602729797363, 2.584745168685913, 2.5727691650390625, 2.5608322620391846, 2.5489351749420166, 2.537078619003296, 2.5252630710601807, 2.513489007949829, 2.5017571449279785, 2.490068197250366, 2.4784224033355713, 2.4668209552764893, 2.45526385307312, 2.4437520503997803, 2.432286024093628, 2.4208667278289795, 2.409494638442993, 2.398170232772827, 2.386894464492798, 2.3756680488586426, 2.3644914627075195, 2.353365659713745, 2.3422911167144775, 2.331268787384033, 2.3202993869781494, 2.3093833923339844, 2.2985219955444336, 2.2877156734466553, 2.2769651412963867, 2.2662713527679443, 2.2556352615356445, 2.2450575828552246, 2.2345387935638428, 2.2240803241729736, 2.2136826515197754, 2.2033467292785645, 2.193073272705078, 2.182863473892212, 2.172717809677124, 2.162637710571289, 2.1526236534118652, 2.142676830291748, 2.132798194885254, 2.12298846244812, 2.113248825073242, 2.1035799980163574, 2.0939831733703613, 2.0844593048095703, 2.075009346008301, 2.0656344890594482, 2.05633544921875, 2.0471134185791016, 2.0379695892333984, 2.028904914855957, 2.0199203491210938, 2.011017084121704, 2.0021960735321045, 1.9934585094451904, 1.9848055839538574, 1.9762382507324219, 1.9677577018737793, 1.9593650102615356, 1.9510613679885864, 1.9428479671478271, 1.9347258806228638, 1.9266961812973022, 1.9187601804733276, 1.910918951034546, 1.903173804283142, 1.8955256938934326, 1.8879759311676025, 1.8805257081985474, 1.8731762170791626, 1.8659285306930542, 1.8587840795516968, 1.8517438173294067, 1.8448090553283691, 1.83798086643219, 1.8312606811523438, 1.824649453163147, 1.8181484937667847, 1.8117589950561523, 1.8054821491241455, 1.7993190288543701, 1.7932708263397217, 1.7873388528823853, 1.7815240621566772, 1.7758277654647827, 1.7702511548995972, 1.764795184135437, 1.7594610452651978, 1.7542498111724854, 1.7491627931594849, 1.7442008256912231, 1.7393649816513062, 1.7346564531326294, 1.7300763130187988, 1.7256253957748413, 1.7213048934936523, 1.7171157598495483, 1.7130587100982666, 1.7091350555419922, 1.7053455114364624, 1.701690912246704, 1.6981722116470337, 1.6947903633117676, 1.691546082496643, 1.6884400844573975, 1.6854733228683472, 1.68264639377594, 1.679960012435913, 1.677414894104004, 1.6750116348266602, 1.6727509498596191, 1.670633316040039, 1.6686593294143677, 1.6668294668197632, 1.6651442050933838, 1.6636039018630981, 1.662209153175354, 1.66096031665802, 1.6598575115203857, 1.6589012145996094, 1.6580915451049805, 1.6574288606643677, 1.656913161277771, 1.656544804573059, 1.6563236713409424, 1.671875, 1.671947956085205, 1.6721670627593994, 1.6725319623947144, 1.6730427742004395, 1.6736993789672852, 1.6745014190673828, 1.6754488945007324, 1.6765413284301758, 1.677778720855713, 1.679160475730896, 1.6806864738464355, 1.6823561191558838, 1.6841691732406616, 1.6861250400543213, 1.6882232427597046, 1.6904633045196533, 1.6928445100784302, 1.6953665018081665, 1.6980284452438354, 1.7008298635482788, 1.7037699222564697, 1.7068480253219604, 1.7100632190704346, 1.7134150266647339, 1.7169023752212524, 1.7205246686935425, 1.724280834197998, 1.7281701564788818, 1.732191801071167, 1.736344575881958, 1.7406277656555176, 1.7450404167175293, 1.7495814561843872, 1.7542498111724854, 1.7590447664260864, 1.7639648914337158, 1.7690094709396362, 1.7741773128509521, 1.7794673442840576, 1.7848783731460571, 1.7904095649719238, 1.7960596084594727, 1.8018274307250977, 1.8077118396759033, 1.8137118816375732, 1.8198262453079224, 1.8260538578033447, 1.8323935270309448, 1.8388440608978271, 1.8454045057296753, 1.8520734310150146, 1.8588497638702393, 1.8657323122024536, 1.8727200031280518, 1.8798115253448486, 1.8870058059692383, 1.8943016529083252, 1.9016979932785034, 1.9091933965682983, 1.9167869091033936, 1.924477458000183, 1.9322636127471924, 1.940144419670105, 1.9481185674667358, 1.9561851024627686, 1.9643428325653076, 1.972590446472168, 1.9809271097183228, 1.989351511001587, 1.9978625774383545, 2.0064592361450195, 2.0151405334472656, 2.023905038833618, 2.0327517986297607, 2.041679859161377, 2.0506882667541504, 2.0597755908966064, 2.068941116333008, 2.078183650970459, 2.0875022411346436, 2.096895933151245, 2.106363534927368, 2.1159043312072754, 2.125516891479492, 2.1352007389068604, 2.1449546813964844, 2.1547775268554688, 2.1646687984466553, 2.1746273040771484, 2.184652090072632, 2.194742441177368, 2.204897403717041, 2.215115785598755, 2.2253971099853516, 2.2357404232025146, 2.2461447715759277, 2.2566092014312744, 2.2671332359313965, 2.2777156829833984, 2.288355827331543, 2.2990529537200928, 2.3098063468933105, 2.32061505317688, 2.3314783573150635, 2.342395544052124, 2.353365659713745, 2.3643882274627686, 2.375462532043457, 2.386587619781494, 2.3977630138397217, 2.4089879989624023, 2.4202616214752197, 2.4315834045410156, 2.4429526329040527, 2.454368829727173, 2.4658310413360596, 2.4773387908935547, 2.488891363143921, 2.50048828125, 2.5121288299560547, 2.5238122940063477, 2.5355384349823, 2.5473062992095947, 2.559115409851074, 2.570965528488159, 2.582855463027954, 2.594785213470459, 2.6067538261413574, 2.594785213470459, 2.582855463027954, 2.570965528488159, 2.559115409851074, 2.5473062992095947, 2.5355384349823, 2.5238122940063477, 2.5121288299560547, 2.50048828125, 2.488891363143921, 2.4773387908935547, 2.4658310413360596, 2.454368829727173, 2.4429526329040527, 2.4315834045410156, 2.4202616214752197, 2.4089879989624023, 2.3977630138397217, 2.386587619781494, 2.375462532043457, 2.3643882274627686, 2.353365659713745, 2.342395544052124, 2.3314783573150635, 2.32061505317688, 2.3098063468933105, 2.2990529537200928, 2.288355827331543, 2.2777156829833984, 2.2671332359313965, 2.2566092014312744, 2.2461447715759277, 2.2357404232025146, 2.2253971099853516, 2.215115785598755, 2.204897403717041, 2.194742441177368, 2.184652090072632, 2.1746273040771484, 2.1646687984466553, 2.1547775268554688, 2.1449546813964844, 2.1352007389068604, 2.125516891479492, 2.1159043312072754, 2.106363534927368, 2.096895933151245, 2.0875022411346436, 2.078183650970459, 2.068941116333008, 2.0597755908966064, 2.0506882667541504, 2.041679859161377, 2.0327517986297607, 2.023905038833618, 2.0151405334472656, 2.0064592361450195, 1.9978625774383545, 1.989351511001587, 1.9809271097183228, 1.972590446472168, 1.9643428325653076, 1.9561851024627686, 1.9481185674667358, 1.940144419670105, 1.9322636127471924, 1.924477458000183, 1.9167869091033936, 1.9091933965682983, 1.9016979932785034, 1.8943016529083252, 1.8870058059692383, 1.8798115253448486, 1.8727200031280518, 1.8657323122024536, 1.8588497638702393, 1.8520734310150146, 1.8454045057296753, 1.8388440608978271, 1.8323935270309448, 1.8260538578033447, 1.8198262453079224, 1.8137118816375732, 1.8077118396759033, 1.8018274307250977, 1.7960596084594727, 1.7904095649719238, 1.7848783731460571, 1.7794673442840576, 1.7741773128509521, 1.7690094709396362, 1.7639648914337158, 1.7590447664260864, 1.7542498111724854, 1.7495814561843872, 1.7450404167175293, 1.7406277656555176, 1.736344575881958, 1.732191801071167, 1.7281701564788818, 1.724280834197998, 1.7205246686935425, 1.7169023752212524, 1.7134150266647339, 1.7100632190704346, 1.7068480253219604, 1.7037699222564697, 1.7008298635482788, 1.6980284452438354, 1.6953665018081665, 1.6928445100784302, 1.6904633045196533, 1.6882232427597046, 1.6861250400543213, 1.6841691732406616, 1.6823561191558838, 1.6806864738464355, 1.679160475730896, 1.677778720855713, 1.6765413284301758, 1.6754488945007324, 1.6745014190673828, 1.6736993789672852, 1.6730427742004395, 1.6725319623947144, 1.6721670627593994, 1.671947956085205, 1.6875, 1.6875723600387573, 1.6877893209457397, 1.6881508827209473, 1.6886570453643799, 1.689307451248169, 1.690102219581604, 1.6910408735275269, 1.692123293876648, 1.6933492422103882, 1.694718360900879, 1.6962302923202515, 1.6978846788406372, 1.6996811628341675, 1.7016191482543945, 1.7036982774734497, 1.7059179544448853, 1.708277702331543, 1.710776925086975, 1.7134150266647339, 1.716191291809082, 1.7191051244735718, 1.7221556901931763, 1.7253425121307373, 1.7286646366119385, 1.732121229171753, 1.7357118129730225, 1.7394351959228516, 1.743290662765503, 1.7472774982452393, 1.751394510269165, 1.755640983581543, 1.7600159645080566, 1.7645184993743896, 1.769147515296936, 1.7739020586013794, 1.7787811756134033, 1.7837837934494019, 1.7889089584350586, 1.7941555976867676, 1.7995225191116333, 1.8050087690353394, 1.8106132745742798, 1.816334843635559, 1.8221725225448608, 1.828125, 1.8341913223266602, 1.8403702974319458, 1.846660852432251, 1.8530617952346802, 1.859571933746338, 1.8661901950836182, 1.872915506362915, 1.8797465562820435, 1.886682391166687, 1.893721580505371, 1.9008632898330688, 1.9081062078475952, 1.9154491424560547, 1.9228910207748413, 1.9304306507110596, 1.9380669593811035, 1.9457987546920776, 1.953624963760376, 1.961544394493103, 1.9695558547973633, 1.9776583909988403, 1.9858508110046387, 1.9941320419311523, 2.0025007724761963, 2.010956287384033, 2.0194971561431885, 2.028122663497925, 2.0368313789367676, 2.0456223487854004, 2.0544943809509277, 2.0634467601776123, 2.0724782943725586, 2.081587791442871, 2.0907745361328125, 2.100037097930908, 2.109375, 2.1187868118286133, 2.1282718181610107, 2.137828826904297, 2.1474571228027344, 2.1571555137634277, 2.1669232845306396, 2.1767592430114746, 2.1866626739501953, 2.1966326236724854, 2.2066681385040283, 2.216768503189087, 2.2269325256347656, 2.237159490585327, 2.247448682785034, 2.257798910140991, 2.26820969581604, 2.2786800861358643, 2.2892091274261475, 2.2997961044311523, 2.3104403018951416, 2.321141004562378, 2.331897020339966, 2.342708110809326, 2.3535730838775635, 2.3644914627075195, 2.375462532043457, 2.3864853382110596, 2.397559404373169, 2.4086837768554688, 2.419857978820801, 2.4310812950134277, 2.4423530101776123, 2.453672409057617, 2.465038776397705, 2.4764516353607178, 2.487910270690918, 2.4994139671325684, 2.5109622478485107, 2.522554397583008, 2.5341899394989014, 2.545868396759033, 2.557588577270508, 2.569350481033325, 2.581153631210327, 2.592996835708618, 2.6048800945281982, 2.61680269241333, 2.6048800945281982, 2.592996835708618, 2.581153631210327, 2.569350481033325, 2.557588577270508, 2.545868396759033, 2.5341899394989014, 2.522554397583008, 2.5109622478485107, 2.4994139671325684, 2.487910270690918, 2.4764516353607178, 2.465038776397705, 2.453672409057617, 2.4423530101776123, 2.4310812950134277, 2.419857978820801, 2.4086837768554688, 2.397559404373169, 2.3864853382110596, 2.375462532043457, 2.3644914627075195, 2.3535730838775635, 2.342708110809326, 2.331897020339966, 2.321141004562378, 2.3104403018951416, 2.2997961044311523, 2.2892091274261475, 2.2786800861358643, 2.26820969581604, 2.257798910140991, 2.247448682785034, 2.237159490585327, 2.2269325256347656, 2.216768503189087, 2.2066681385040283, 2.1966326236724854, 2.1866626739501953, 2.1767592430114746, 2.1669232845306396, 2.1571555137634277, 2.1474571228027344, 2.137828826904297, 2.1282718181610107, 2.1187868118286133, 2.109375, 2.100037097930908, 2.0907745361328125, 2.081587791442871, 2.0724782943725586, 2.0634467601776123, 2.0544943809509277, 2.0456223487854004, 2.0368313789367676, 2.028122663497925, 2.0194971561431885, 2.010956287384033, 2.0025007724761963, 1.9941320419311523, 1.9858508110046387, 1.9776583909988403, 1.9695558547973633, 1.961544394493103, 1.953624963760376, 1.9457987546920776, 1.9380669593811035, 1.9304306507110596, 1.9228910207748413, 1.9154491424560547, 1.9081062078475952, 1.9008632898330688, 1.893721580505371, 1.886682391166687, 1.8797465562820435, 1.872915506362915, 1.8661901950836182, 1.859571933746338, 1.8530617952346802, 1.846660852432251, 1.8403702974319458, 1.8341913223266602, 1.828125, 1.8221725225448608, 1.816334843635559, 1.8106132745742798, 1.8050087690353394, 1.7995225191116333, 1.7941555976867676, 1.7889089584350586, 1.7837837934494019, 1.7787811756134033, 1.7739020586013794, 1.769147515296936, 1.7645184993743896, 1.7600159645080566, 1.755640983581543, 1.751394510269165, 1.7472774982452393, 1.743290662765503, 1.7394351959228516, 1.7357118129730225, 1.732121229171753, 1.7286646366119385, 1.7253425121307373, 1.7221556901931763, 1.7191051244735718, 1.716191291809082, 1.7134150266647339, 1.710776925086975, 1.708277702331543, 1.7059179544448853, 1.7036982774734497, 1.7016191482543945, 1.6996811628341675, 1.6978846788406372, 1.6962302923202515, 1.694718360900879, 1.6933492422103882, 1.692123293876648, 1.6910408735275269, 1.690102219581604, 1.689307451248169, 1.6886570453643799, 1.6881508827209473, 1.6877893209457397, 1.6875723600387573, 1.703125, 1.70319664478302, 1.7034116983413696, 1.7037699222564697, 1.7042714357376099, 1.7049158811569214, 1.7057033777236938, 1.706633448600769, 1.7077059745788574, 1.7089207172393799, 1.7102774381637573, 1.7117756605148315, 1.7134150266647339, 1.7151951789855957, 1.7171157598495483, 1.7191760540008545, 1.721375823020935, 1.7237144708633423, 1.7261912822723389, 1.7288057804107666, 1.7315573692321777, 1.734445333480835, 1.7374690771102905, 1.7406277656555176, 1.7439208030700684, 1.747347354888916, 1.7509065866470337, 1.754597783088684, 1.7584199905395508, 1.762372612953186, 1.7664544582366943, 1.7706648111343384, 1.7750027179718018, 1.7794673442840576, 1.7840574979782104, 1.788772463798523, 1.7936111688613892, 1.7985725402832031, 1.803655743598938, 1.8088594675064087, 1.814182996749878, 1.8196250200271606, 1.8251845836639404, 1.8308606147766113, 1.836652159690857, 1.8425579071044922, 1.8485767841339111, 1.854707956314087, 1.860949993133545, 1.8673019409179688, 1.873762607574463, 1.8803309202194214, 1.8870058059692383, 1.893786072731018, 1.9006706476211548, 1.907658338546753, 1.914747953414917, 1.9219385385513306, 1.9292287826538086, 1.9366177320480347, 1.9441041946411133, 1.951686978340149, 1.9593650102615356, 1.9671372175216675, 1.9750025272369385, 1.9829596281051636, 1.9910075664520264, 1.999145269393921, 2.007371664047241, 2.015685558319092, 2.0240859985351562, 2.032571792602539, 2.0411417484283447, 2.049795150756836, 2.058530807495117, 2.067347526550293, 2.076244354248047, 2.0852205753326416, 2.0942747592926025, 2.1034059524536133, 2.1126132011413574, 2.1218957901000977, 2.1312522888183594, 2.1406819820404053, 2.150183916091919, 2.159757137298584, 2.169400453567505, 2.1791133880615234, 2.188894748687744, 2.1987433433532715, 2.2086589336395264, 2.218639850616455, 2.2286858558654785, 2.2387959957122803, 2.2489688396453857, 2.259204149246216, 2.269500970840454, 2.279858350753784, 2.2902753353118896, 2.3007514476776123, 2.3112854957580566, 2.3218770027160645, 2.3325252532958984, 2.343229055404663, 2.3539881706237793, 2.3648014068603516, 2.3756680488586426, 2.386587619781494, 2.397559404373169, 2.4085824489593506, 2.419656276702881, 2.4307799339294434, 2.441953182220459, 2.4531748294830322, 2.464444398880005, 2.4757614135742188, 2.4871251583099365, 2.498534679412842, 2.5099897384643555, 2.5214896202087402, 2.533033609390259, 2.544621229171753, 2.5562520027160645, 2.567924976348877, 2.5796396732330322, 2.591395854949951, 2.6031925678253174, 2.6150293350219727, 2.626905918121338, 2.6150293350219727, 2.6031925678253174, 2.591395854949951, 2.5796396732330322, 2.567924976348877, 2.5562520027160645, 2.544621229171753, 2.533033609390259, 2.5214896202087402, 2.5099897384643555, 2.498534679412842, 2.4871251583099365, 2.4757614135742188, 2.464444398880005, 2.4531748294830322, 2.441953182220459, 2.4307799339294434, 2.419656276702881, 2.4085824489593506, 2.397559404373169, 2.386587619781494, 2.3756680488586426, 2.3648014068603516, 2.3539881706237793, 2.343229055404663, 2.3325252532958984, 2.3218770027160645, 2.3112854957580566, 2.3007514476776123, 2.2902753353118896, 2.279858350753784, 2.269500970840454, 2.259204149246216, 2.2489688396453857, 2.2387959957122803, 2.2286858558654785, 2.218639850616455, 2.2086589336395264, 2.1987433433532715, 2.188894748687744, 2.1791133880615234, 2.169400453567505, 2.159757137298584, 2.150183916091919, 2.1406819820404053, 2.1312522888183594, 2.1218957901000977, 2.1126132011413574, 2.1034059524536133, 2.0942747592926025, 2.0852205753326416, 2.076244354248047, 2.067347526550293, 2.058530807495117, 2.049795150756836, 2.0411417484283447, 2.032571792602539, 2.0240859985351562, 2.015685558319092, 2.007371664047241, 1.999145269393921, 1.9910075664520264, 1.9829596281051636, 1.9750025272369385, 1.9671372175216675, 1.9593650102615356, 1.951686978340149, 1.9441041946411133, 1.9366177320480347, 1.9292287826538086, 1.9219385385513306, 1.914747953414917, 1.907658338546753, 1.9006706476211548, 1.893786072731018, 1.8870058059692383, 1.8803309202194214, 1.873762607574463, 1.8673019409179688, 1.860949993133545, 1.854707956314087, 1.8485767841339111, 1.8425579071044922, 1.836652159690857, 1.8308606147766113, 1.8251845836639404, 1.8196250200271606, 1.814182996749878, 1.8088594675064087, 1.803655743598938, 1.7985725402832031, 1.7936111688613892, 1.788772463798523, 1.7840574979782104, 1.7794673442840576, 1.7750027179718018, 1.7706648111343384, 1.7664544582366943, 1.762372612953186, 1.7584199905395508, 1.754597783088684, 1.7509065866470337, 1.747347354888916, 1.7439208030700684, 1.7406277656555176, 1.7374690771102905, 1.734445333480835, 1.7315573692321777, 1.7288057804107666, 1.7261912822723389, 1.7237144708633423, 1.721375823020935, 1.7191760540008545, 1.7171157598495483, 1.7151951789855957, 1.7134150266647339, 1.7117756605148315, 1.7102774381637573, 1.7089207172393799, 1.7077059745788574, 1.706633448600769, 1.7057033777236938, 1.7049158811569214, 1.7042714357376099, 1.7037699222564697, 1.7034116983413696, 1.70319664478302, 1.71875, 1.7188210487365723, 1.7190340757369995, 1.7193890810012817, 1.7198859453201294, 1.7205246686935425, 1.7213048934936523, 1.722226619720459, 1.7232894897460938, 1.7244932651519775, 1.7258377075195312, 1.7273223400115967, 1.7289470434188843, 1.7307112216949463, 1.732614517211914, 1.7346564531326294, 1.7368366718292236, 1.7391544580459595, 1.7416093349456787, 1.7442008256912231, 1.746928095817566, 1.7497906684875488, 1.7527879476547241, 1.755919098854065, 1.7591835260391235, 1.762580394744873, 1.7661088705062866, 1.7697683572769165, 1.7735579013824463, 1.7774767875671387, 1.7815240621566772, 1.7856988906860352, 1.7900004386901855, 1.7944276332855225, 1.7989797592163086, 1.803655743598938, 1.8084545135498047, 1.8133753538131714, 1.8184170722961426, 1.8235787153244019, 1.8288593292236328, 1.8342578411102295, 1.8397732973098755, 1.8454045057296753, 1.851150393486023, 1.857010006904602, 1.8629822731018066, 1.8690661191940308, 1.875260353088379, 1.8815640211105347, 1.8879759311676025, 1.8944950103759766, 1.9011201858520508, 1.9078502655029297, 1.9146841764450073, 1.9216209650039673, 1.9286593198776245, 1.935798168182373, 1.943036437034607, 1.9503730535507202, 1.957806944847107, 1.965336799621582, 1.9729617834091187, 1.9806805849075317, 1.9884922504425049, 1.9963957071304321, 2.004389762878418, 2.0124733448028564, 2.0206453800201416, 2.028904914855957, 2.0372507572174072, 2.045681953430176, 2.054197311401367, 2.062795877456665, 2.071476697921753, 2.0802385807037354, 2.089080572128296, 2.098001718521118, 2.1070010662078857, 2.116077423095703, 2.125229835510254, 2.1344573497772217, 2.14375901222229, 2.1531341075897217, 2.162581205368042, 2.1720998287200928, 2.1816887855529785, 2.191347122192383, 2.2010738849639893, 2.2108685970306396, 2.2207298278808594, 2.230656862258911, 2.2406489849090576, 2.2507052421569824, 2.260824680328369, 2.2710065841674805, 2.28125, 2.2915542125701904, 2.3019182682037354, 2.3123416900634766, 2.3228232860565186, 2.333362340927124, 2.3439583778381348, 2.3546102046966553, 2.3653173446655273, 2.3760790824890137, 2.386894464492798, 2.3977630138397217, 2.4086837768554688, 2.419656276702881, 2.4306795597076416, 2.4417531490325928, 2.452876091003418, 2.464048147201538, 2.4752683639526367, 2.4865360260009766, 2.4978506565093994, 2.509211540222168, 2.520618200302124, 2.532069683074951, 2.5435657501220703, 2.555105447769165, 2.5666885375976562, 2.5783143043518066, 2.589982271194458, 2.601691484451294, 2.6134417057037354, 2.625232458114624, 2.6370630264282227, 2.625232458114624, 2.6134417057037354, 2.601691484451294, 2.589982271194458, 2.5783143043518066, 2.5666885375976562, 2.555105447769165, 2.5435657501220703, 2.532069683074951, 2.520618200302124, 2.509211540222168, 2.4978506565093994, 2.4865360260009766, 2.4752683639526367, 2.464048147201538, 2.452876091003418, 2.4417531490325928, 2.4306795597076416, 2.419656276702881, 2.4086837768554688, 2.3977630138397217, 2.386894464492798, 2.3760790824890137, 2.3653173446655273, 2.3546102046966553, 2.3439583778381348, 2.333362340927124, 2.3228232860565186, 2.3123416900634766, 2.3019182682037354, 2.2915542125701904, 2.28125, 2.2710065841674805, 2.260824680328369, 2.2507052421569824, 2.2406489849090576, 2.230656862258911, 2.2207298278808594, 2.2108685970306396, 2.2010738849639893, 2.191347122192383, 2.1816887855529785, 2.1720998287200928, 2.162581205368042, 2.1531341075897217, 2.14375901222229, 2.1344573497772217, 2.125229835510254, 2.116077423095703, 2.1070010662078857, 2.098001718521118, 2.089080572128296, 2.0802385807037354, 2.071476697921753, 2.062795877456665, 2.054197311401367, 2.045681953430176, 2.0372507572174072, 2.028904914855957, 2.0206453800201416, 2.0124733448028564, 2.004389762878418, 1.9963957071304321, 1.9884922504425049, 1.9806805849075317, 1.9729617834091187, 1.965336799621582, 1.957806944847107, 1.9503730535507202, 1.943036437034607, 1.935798168182373, 1.9286593198776245, 1.9216209650039673, 1.9146841764450073, 1.9078502655029297, 1.9011201858520508, 1.8944950103759766, 1.8879759311676025, 1.8815640211105347, 1.875260353088379, 1.8690661191940308, 1.8629822731018066, 1.857010006904602, 1.851150393486023, 1.8454045057296753, 1.8397732973098755, 1.8342578411102295, 1.8288593292236328, 1.8235787153244019, 1.8184170722961426, 1.8133753538131714, 1.8084545135498047, 1.803655743598938, 1.7989797592163086, 1.7944276332855225, 1.7900004386901855, 1.7856988906860352, 1.7815240621566772, 1.7774767875671387, 1.7735579013824463, 1.7697683572769165, 1.7661088705062866, 1.762580394744873, 1.7591835260391235, 1.755919098854065, 1.7527879476547241, 1.7497906684875488, 1.746928095817566, 1.7442008256912231, 1.7416093349456787, 1.7391544580459595, 1.7368366718292236, 1.7346564531326294, 1.732614517211914, 1.7307112216949463, 1.7289470434188843, 1.7273223400115967, 1.7258377075195312, 1.7244932651519775, 1.7232894897460938, 1.722226619720459, 1.7213048934936523, 1.7205246686935425, 1.7198859453201294, 1.7193890810012817, 1.7190340757369995, 1.7188210487365723, 1.734375, 1.734445333480835, 1.7346564531326294, 1.7350083589553833, 1.7355008125305176, 1.7361336946487427, 1.736906886100769, 1.7378203868865967, 1.7388737201690674, 1.740066647529602, 1.7413990497589111, 1.742870569229126, 1.7444807291030884, 1.7462291717529297, 1.7481156587600708, 1.7501394748687744, 1.7523003816604614, 1.754597783088684, 1.7570310831069946, 1.7595998048782349, 1.7623032331466675, 1.7651410102844238, 1.7681121826171875, 1.7712162733078003, 1.7744524478912354, 1.777820110321045, 1.7813185453414917, 1.7849467992782593, 1.7887042760849, 1.7925900220870972, 1.7966032028198242, 1.8007431030273438, 1.8050087690353394, 1.8093992471694946, 1.8139138221740723, 1.8185513019561768, 1.8233109712600708, 1.8281917572021484, 1.8331927061080933, 1.8383129835128784, 1.8435513973236084, 1.8489069938659668, 1.8543788194656372, 1.8599658012390137, 1.8656668663024902, 1.8714810609817505, 1.8774073123931885, 1.8834445476531982, 1.8895916938781738, 1.8958476781845093, 1.9022114276885986, 1.908681869506836, 1.9152579307556152, 1.9219385385513306, 1.9287225008010864, 1.935608983039856, 1.942596673965454, 1.949684500694275, 1.9568713903427124, 1.9641563892364502, 1.9715381860733032, 1.9790159463882446, 1.9865883588790894, 1.994254469871521, 2.0020132064819336, 2.0098633766174316, 2.0178041458129883, 2.025834083557129, 2.033952474594116, 2.0421581268310547, 2.050450086593628, 2.0588271617889404, 2.067288398742676, 2.0758328437805176, 2.0844593048095703, 2.0931668281555176, 2.101954460144043, 2.11082124710083, 2.1197659969329834, 2.1287879943847656, 2.1378860473632812, 2.147059202194214, 2.156306505203247, 2.1656272411346436, 2.175020217895508, 2.1844844818115234, 2.194019317626953, 2.2036235332489014, 2.21329665184021, 2.2230372428894043, 2.232844829559326, 2.24271821975708, 2.252656936645508, 2.262659788131714, 2.272726058959961, 2.2828547954559326, 2.2930452823638916, 2.3032968044281006, 2.313608169555664, 2.323979139328003, 2.3344085216522217, 2.344895601272583, 2.3554396629333496, 2.366039752960205, 2.3766956329345703, 2.3874058723449707, 2.398170232772827, 2.4089879989624023, 2.419857978820801, 2.4307799339294434, 2.4417531490325928, 2.4527766704559326, 2.4638500213623047, 2.4749724864959717, 2.4861433506011963, 2.497361898422241, 2.5086276531219482, 2.51993989944458, 2.5312981605529785, 2.5427017211914062, 2.554149866104126, 2.5656421184539795, 2.5771777629852295, 2.588756561279297, 2.6003775596618652, 2.6120402812957764, 2.623744010925293, 2.635488748550415, 2.647273540496826, 2.635488748550415, 2.623744010925293, 2.6120402812957764, 2.6003775596618652, 2.588756561279297, 2.5771777629852295, 2.5656421184539795, 2.554149866104126, 2.5427017211914062, 2.5312981605529785, 2.51993989944458, 2.5086276531219482, 2.497361898422241, 2.4861433506011963, 2.4749724864959717, 2.4638500213623047, 2.4527766704559326, 2.4417531490325928, 2.4307799339294434, 2.419857978820801, 2.4089879989624023, 2.398170232772827, 2.3874058723449707, 2.3766956329345703, 2.366039752960205, 2.3554396629333496, 2.344895601272583, 2.3344085216522217, 2.323979139328003, 2.313608169555664, 2.3032968044281006, 2.2930452823638916, 2.2828547954559326, 2.272726058959961, 2.262659788131714, 2.252656936645508, 2.24271821975708, 2.232844829559326, 2.2230372428894043, 2.21329665184021, 2.2036235332489014, 2.194019317626953, 2.1844844818115234, 2.175020217895508, 2.1656272411346436, 2.156306505203247, 2.147059202194214, 2.1378860473632812, 2.1287879943847656, 2.1197659969329834, 2.11082124710083, 2.101954460144043, 2.0931668281555176, 2.0844593048095703, 2.0758328437805176, 2.067288398742676, 2.0588271617889404, 2.050450086593628, 2.0421581268310547, 2.033952474594116, 2.025834083557129, 2.0178041458129883, 2.0098633766174316, 2.0020132064819336, 1.994254469871521, 1.9865883588790894, 1.9790159463882446, 1.9715381860733032, 1.9641563892364502, 1.9568713903427124, 1.949684500694275, 1.942596673965454, 1.935608983039856, 1.9287225008010864, 1.9219385385513306, 1.9152579307556152, 1.908681869506836, 1.9022114276885986, 1.8958476781845093, 1.8895916938781738, 1.8834445476531982, 1.8774073123931885, 1.8714810609817505, 1.8656668663024902, 1.8599658012390137, 1.8543788194656372, 1.8489069938659668, 1.8435513973236084, 1.8383129835128784, 1.8331927061080933, 1.8281917572021484, 1.8233109712600708, 1.8185513019561768, 1.8139138221740723, 1.8093992471694946, 1.8050087690353394, 1.8007431030273438, 1.7966032028198242, 1.7925900220870972, 1.7887042760849, 1.7849467992782593, 1.7813185453414917, 1.777820110321045, 1.7744524478912354, 1.7712162733078003, 1.7681121826171875, 1.7651410102844238, 1.7623032331466675, 1.7595998048782349, 1.7570310831069946, 1.754597783088684, 1.7523003816604614, 1.7501394748687744, 1.7481156587600708, 1.7462291717529297, 1.7444807291030884, 1.742870569229126, 1.7413990497589111, 1.740066647529602, 1.7388737201690674, 1.7378203868865967, 1.736906886100769, 1.7361336946487427, 1.7355008125305176, 1.7350083589553833, 1.7346564531326294, 1.734445333480835, 1.75, 1.7500697374343872, 1.7502789497375488, 1.7506276369094849, 1.7511156797409058, 1.751742959022522, 1.752509355545044, 1.7534146308898926, 1.7544585466384888, 1.755640983581543, 1.7569615840911865, 1.7584199905395508, 1.7600159645080566, 1.761749029159546, 1.76361882686615, 1.765625, 1.7677669525146484, 1.770044207572937, 1.772456407546997, 1.7750027179718018, 1.7776827812194824, 1.7804960012435913, 1.7834416627883911, 1.7865190505981445, 1.7897276878356934, 1.7930666208267212, 1.7965352535247803, 1.8001328706741333, 1.803858757019043, 1.8077118396759033, 1.8116916418075562, 1.8157970905303955, 1.820027470588684, 1.8243818283081055, 1.8288593292236328, 1.8334591388702393, 1.8381801843643188, 1.8430216312408447, 1.847982406616211, 1.8530617952346802, 1.858258605003357, 1.8635720014572144, 1.869000792503357, 1.8745442628860474, 1.8802011013031006, 1.8859704732894897, 1.8918513059616089, 1.8978426456451416, 1.9039433002471924, 1.9101521968841553, 1.9164685010910034, 1.9228910207748413, 1.929418683052063, 1.9360504150390625, 1.9427851438522339, 1.9496219158172607, 1.9565595388412476, 1.9635969400405884, 1.9707331657409668, 1.9779670238494873, 1.9852975606918335, 1.9927235841751099, 2.000244140625, 2.0078580379486084, 2.015564441680908, 2.023362159729004, 2.03125, 2.03922700881958, 2.047292470932007, 2.0554449558258057, 2.063683271408081, 2.072006940841675, 2.0804145336151123, 2.0889053344726562, 2.097477912902832, 2.1061317920684814, 2.11486554145813, 2.12367844581604, 2.1325693130493164, 2.1415371894836426, 2.1505813598632812, 2.159700632095337, 2.168894052505493, 2.1781609058380127, 2.1875, 2.1969106197357178, 2.2063915729522705, 2.2159423828125, 2.2255616188049316, 2.2352490425109863, 2.2450032234191895, 2.2548234462738037, 2.2647087574005127, 2.274658679962158, 2.2846720218658447, 2.294748067855835, 2.3048861026763916, 2.3150851726531982, 2.3253443241119385, 2.335663080215454, 2.3460404872894287, 2.356475830078125, 2.3669683933258057, 2.3775172233581543, 2.3881216049194336, 2.3987810611724854, 2.409494638442993, 2.4202616214752197, 2.4310812950134277, 2.441953182220459, 2.452876091003418, 2.4638500213623047, 2.4748737812042236, 2.4859468936920166, 2.4970686435699463, 2.5082383155822754, 2.5194554328918457, 2.530719518661499, 2.542029619216919, 2.553385019302368, 2.5647854804992676, 2.57623028755188, 2.587718963623047, 2.599250555038452, 2.6108248233795166, 2.622441053390503, 2.634098768234253, 2.6457974910736084, 2.657536506652832, 2.6457974910736084, 2.634098768234253, 2.622441053390503, 2.6108248233795166, 2.599250555038452, 2.587718963623047, 2.57623028755188, 2.5647854804992676, 2.553385019302368, 2.542029619216919, 2.530719518661499, 2.5194554328918457, 2.5082383155822754, 2.4970686435699463, 2.4859468936920166, 2.4748737812042236, 2.4638500213623047, 2.452876091003418, 2.441953182220459, 2.4310812950134277, 2.4202616214752197, 2.409494638442993, 2.3987810611724854, 2.3881216049194336, 2.3775172233581543, 2.3669683933258057, 2.356475830078125, 2.3460404872894287, 2.335663080215454, 2.3253443241119385, 2.3150851726531982, 2.3048861026763916, 2.294748067855835, 2.2846720218658447, 2.274658679962158, 2.2647087574005127, 2.2548234462738037, 2.2450032234191895, 2.2352490425109863, 2.2255616188049316, 2.2159423828125, 2.2063915729522705, 2.1969106197357178, 2.1875, 2.1781609058380127, 2.168894052505493, 2.159700632095337, 2.1505813598632812, 2.1415371894836426, 2.1325693130493164, 2.12367844581604, 2.11486554145813, 2.1061317920684814, 2.097477912902832, 2.0889053344726562, 2.0804145336151123, 2.072006940841675, 2.063683271408081, 2.0554449558258057, 2.047292470932007, 2.03922700881958, 2.03125, 2.023362159729004, 2.015564441680908, 2.0078580379486084, 2.000244140625, 1.9927235841751099, 1.9852975606918335, 1.9779670238494873, 1.9707331657409668, 1.9635969400405884, 1.9565595388412476, 1.9496219158172607, 1.9427851438522339, 1.9360504150390625, 1.929418683052063, 1.9228910207748413, 1.9164685010910034, 1.9101521968841553, 1.9039433002471924, 1.8978426456451416, 1.8918513059616089, 1.8859704732894897, 1.8802011013031006, 1.8745442628860474, 1.869000792503357, 1.8635720014572144, 1.858258605003357, 1.8530617952346802, 1.847982406616211, 1.8430216312408447, 1.8381801843643188, 1.8334591388702393, 1.8288593292236328, 1.8243818283081055, 1.820027470588684, 1.8157970905303955, 1.8116916418075562, 1.8077118396759033, 1.803858757019043, 1.8001328706741333, 1.7965352535247803, 1.7930666208267212, 1.7897276878356934, 1.7865190505981445, 1.7834416627883911, 1.7804960012435913, 1.7776827812194824, 1.7750027179718018, 1.772456407546997, 1.770044207572937, 1.7677669525146484, 1.765625, 1.76361882686615, 1.761749029159546, 1.7600159645080566, 1.7584199905395508, 1.7569615840911865, 1.755640983581543, 1.7544585466384888, 1.7534146308898926, 1.752509355545044, 1.751742959022522, 1.7511156797409058, 1.7506276369094849, 1.7502789497375488, 1.7500697374343872, 1.765625, 1.7656941413879395, 1.7659015655517578, 1.7662471532821655, 1.7667309045791626, 1.76735258102417, 1.7681121826171875, 1.7690094709396362, 1.770044207572937, 1.7712162733078003, 1.7725251913070679, 1.7739708423614502, 1.7755528688430786, 1.777270793914795, 1.7791242599487305, 1.7811129093170166, 1.7832362651824951, 1.7854938507080078, 1.787885069847107, 1.7904095649719238, 1.7930666208267212, 1.7958556413650513, 1.7987761497497559, 1.8018274307250977, 1.8050087690353394, 1.8083195686340332, 1.8117589950561523, 1.815326452255249, 1.8190211057662964, 1.8228422403335571, 1.8267890214920044, 1.8308606147766113, 1.8350563049316406, 1.8393751382827759, 1.8438161611557007, 1.8483787775039673, 1.8530617952346802, 1.8578643798828125, 1.8627856969833374, 1.8678247928619385, 1.8729807138442993, 1.878252387046814, 1.8836389780044556, 1.8891394138336182, 1.8947527408599854, 1.9004778861999512, 1.9063140153884888, 1.9122599363327026, 1.918314814567566, 1.924477458000183, 1.9307467937469482, 1.9371219873428345, 1.9436017274856567, 1.9501852989196777, 1.9568713903427124, 1.9636590480804443, 1.9705473184585571, 1.9775350093841553, 1.9846210479736328, 1.9918044805526733, 1.999084234237671, 2.0064592361450195, 2.0139286518096924, 2.021491050720215, 2.0291454792022705, 2.036891222000122, 2.044726848602295, 2.0526516437530518, 2.060664415359497, 2.0687642097473145, 2.0769498348236084, 2.0852205753326416, 2.0935750007629395, 2.1020126342773438, 2.11053204536438, 2.1191325187683105, 2.1278128623962402, 2.1365723609924316, 2.1454098224639893, 2.1543242931365967, 2.1633150577545166, 2.1723806858062744, 2.181520938873291, 2.1907341480255127, 2.2000200748443604, 2.2093772888183594, 2.2188050746917725, 2.228302478790283, 2.2378687858581543, 2.2475030422210693, 2.257204294204712, 2.2669715881347656, 2.276804208755493, 2.2867014408111572, 2.2966623306274414, 2.3066861629486084, 2.3167717456817627, 2.326918840408325, 2.3371260166168213, 2.347393035888672, 2.3577187061309814, 2.368102550506592, 2.3785438537597656, 2.3890416622161865, 2.399595022201538, 2.410203695297241, 2.4208667278289795, 2.4315834045410156, 2.4423530101776123, 2.4531748294830322, 2.464048147201538, 2.4749724864959717, 2.4859468936920166, 2.4969708919525146, 2.5080437660217285, 2.519164800643921, 2.5303335189819336, 2.5415492057800293, 2.55281138420105, 2.5641191005706787, 2.575472116470337, 2.586869716644287, 2.598311185836792, 2.6097960472106934, 2.621323585510254, 2.6328935623168945, 2.644505262374878, 2.656157970428467, 2.667851448059082, 2.656157970428467, 2.644505262374878, 2.6328935623168945, 2.621323585510254, 2.6097960472106934, 2.598311185836792, 2.586869716644287, 2.575472116470337, 2.5641191005706787, 2.55281138420105, 2.5415492057800293, 2.5303335189819336, 2.519164800643921, 2.5080437660217285, 2.4969708919525146, 2.4859468936920166, 2.4749724864959717, 2.464048147201538, 2.4531748294830322, 2.4423530101776123, 2.4315834045410156, 2.4208667278289795, 2.410203695297241, 2.399595022201538, 2.3890416622161865, 2.3785438537597656, 2.368102550506592, 2.3577187061309814, 2.347393035888672, 2.3371260166168213, 2.326918840408325, 2.3167717456817627, 2.3066861629486084, 2.2966623306274414, 2.2867014408111572, 2.276804208755493, 2.2669715881347656, 2.257204294204712, 2.2475030422210693, 2.2378687858581543, 2.228302478790283, 2.2188050746917725, 2.2093772888183594, 2.2000200748443604, 2.1907341480255127, 2.181520938873291, 2.1723806858062744, 2.1633150577545166, 2.1543242931365967, 2.1454098224639893, 2.1365723609924316, 2.1278128623962402, 2.1191325187683105, 2.11053204536438, 2.1020126342773438, 2.0935750007629395, 2.0852205753326416, 2.0769498348236084, 2.0687642097473145, 2.060664415359497, 2.0526516437530518, 2.044726848602295, 2.036891222000122, 2.0291454792022705, 2.021491050720215, 2.0139286518096924, 2.0064592361450195, 1.999084234237671, 1.9918044805526733, 1.9846210479736328, 1.9775350093841553, 1.9705473184585571, 1.9636590480804443, 1.9568713903427124, 1.9501852989196777, 1.9436017274856567, 1.9371219873428345, 1.9307467937469482, 1.924477458000183, 1.918314814567566, 1.9122599363327026, 1.9063140153884888, 1.9004778861999512, 1.8947527408599854, 1.8891394138336182, 1.8836389780044556, 1.878252387046814, 1.8729807138442993, 1.8678247928619385, 1.8627856969833374, 1.8578643798828125, 1.8530617952346802, 1.8483787775039673, 1.8438161611557007, 1.8393751382827759, 1.8350563049316406, 1.8308606147766113, 1.8267890214920044, 1.8228422403335571, 1.8190211057662964, 1.815326452255249, 1.8117589950561523, 1.8083195686340332, 1.8050087690353394, 1.8018274307250977, 1.7987761497497559, 1.7958556413650513, 1.7930666208267212, 1.7904095649719238, 1.787885069847107, 1.7854938507080078, 1.7832362651824951, 1.7811129093170166, 1.7791242599487305, 1.777270793914795, 1.7755528688430786, 1.7739708423614502, 1.7725251913070679, 1.7712162733078003, 1.770044207572937, 1.7690094709396362, 1.7681121826171875, 1.76735258102417, 1.7667309045791626, 1.7662471532821655, 1.7659015655517578, 1.7656941413879395, 1.78125, 1.7813185453414917, 1.7815240621566772, 1.7818666696548462, 1.7823461294174194, 1.782962441444397, 1.7837153673171997, 1.784604787826538, 1.7856305837631226, 1.7867923974990845, 1.7880899906158447, 1.7895230054855347, 1.7910912036895752, 1.7927942276000977, 1.7946317195892334, 1.7966032028198242, 1.7987083196640015, 1.8009464740753174, 1.8033173084259033, 1.805820107460022, 1.8084545135498047, 1.8112199306488037, 1.8141156435012817, 1.8171411752700806, 1.8202956914901733, 1.8235787153244019, 1.8269895315170288, 1.8305273056030273, 1.8341913223266602, 1.83798086643219, 1.8418952226638794, 1.8459335565567017, 1.8500950336456299, 1.8543788194656372, 1.8587840795516968, 1.8633098602294922, 1.8679555654525757, 1.8727200031280518, 1.8776023387908936, 1.8826017379760742, 1.8877172470092773, 1.8929479122161865, 1.8982927799224854, 1.9037508964538574, 1.9093213081359863, 1.9150029420852661, 1.92079496383667, 1.9266961812973022, 1.9327057600021362, 1.938822627067566, 1.945045828819275, 1.9513741731643677, 1.957806944847107, 1.9643428325653076, 1.9709808826446533, 1.9777201414108276, 1.9845595359802246, 1.9914979934692383, 1.9985345602035522, 2.0056681632995605, 2.0128979682922363, 2.0202224254608154, 2.0276410579681396, 2.0351524353027344, 2.0427558422088623, 2.050450086593628, 2.058234214782715, 2.0661072731018066, 2.0740678310394287, 2.082115411758423, 2.0902488231658936, 2.0984671115875244, 2.106769323348999, 2.1151540279388428, 2.1236209869384766, 2.1321685314178467, 2.140796184539795, 2.1495025157928467, 2.1582870483398438, 2.1671485900878906, 2.176086187362671, 2.1850991249084473, 2.194186210632324, 2.2033467292785645, 2.2125794887542725, 2.221883773803711, 2.2312588691711426, 2.2407033443450928, 2.2502169609069824, 2.259798526763916, 2.269447088241577, 2.2791621685028076, 2.288942575454712, 2.2987873554229736, 2.3086962699890137, 2.3186678886413574, 2.3287017345428467, 2.338796854019165, 2.348952531814575, 2.35916805267334, 2.3694424629211426, 2.379775285720825, 2.390165328979492, 2.4006123542785645, 2.4111151695251465, 2.42167329788208, 2.432286024093628, 2.4429526329040527, 2.453672409057617, 2.464444398880005, 2.4752683639526367, 2.4861433506011963, 2.4970686435699463, 2.5080437660217285, 2.5190680027008057, 2.5301406383514404, 2.5412609577178955, 2.552428722381592, 2.563642978668213, 2.5749032497406006, 2.5862088203430176, 2.5975592136383057, 2.6089539527893066, 2.620392084121704, 2.631873369216919, 2.643397331237793, 2.6549630165100098, 2.666569948196411, 2.678217887878418, 2.666569948196411, 2.6549630165100098, 2.643397331237793, 2.631873369216919, 2.620392084121704, 2.6089539527893066, 2.5975592136383057, 2.5862088203430176, 2.5749032497406006, 2.563642978668213, 2.552428722381592, 2.5412609577178955, 2.5301406383514404, 2.5190680027008057, 2.5080437660217285, 2.4970686435699463, 2.4861433506011963, 2.4752683639526367, 2.464444398880005, 2.453672409057617, 2.4429526329040527, 2.432286024093628, 2.42167329788208, 2.4111151695251465, 2.4006123542785645, 2.390165328979492, 2.379775285720825, 2.3694424629211426, 2.35916805267334, 2.348952531814575, 2.338796854019165, 2.3287017345428467, 2.3186678886413574, 2.3086962699890137, 2.2987873554229736, 2.288942575454712, 2.2791621685028076, 2.269447088241577, 2.259798526763916, 2.2502169609069824, 2.2407033443450928, 2.2312588691711426, 2.221883773803711, 2.2125794887542725, 2.2033467292785645, 2.194186210632324, 2.1850991249084473, 2.176086187362671, 2.1671485900878906, 2.1582870483398438, 2.1495025157928467, 2.140796184539795, 2.1321685314178467, 2.1236209869384766, 2.1151540279388428, 2.106769323348999, 2.0984671115875244, 2.0902488231658936, 2.082115411758423, 2.0740678310394287, 2.0661072731018066, 2.058234214782715, 2.050450086593628, 2.0427558422088623, 2.0351524353027344, 2.0276410579681396, 2.0202224254608154, 2.0128979682922363, 2.0056681632995605, 1.9985345602035522, 1.9914979934692383, 1.9845595359802246, 1.9777201414108276, 1.9709808826446533, 1.9643428325653076, 1.957806944847107, 1.9513741731643677, 1.945045828819275, 1.938822627067566, 1.9327057600021362, 1.9266961812973022, 1.92079496383667, 1.9150029420852661, 1.9093213081359863, 1.9037508964538574, 1.8982927799224854, 1.8929479122161865, 1.8877172470092773, 1.8826017379760742, 1.8776023387908936, 1.8727200031280518, 1.8679555654525757, 1.8633098602294922, 1.8587840795516968, 1.8543788194656372, 1.8500950336456299, 1.8459335565567017, 1.8418952226638794, 1.83798086643219, 1.8341913223266602, 1.8305273056030273, 1.8269895315170288, 1.8235787153244019, 1.8202956914901733, 1.8171411752700806, 1.8141156435012817, 1.8112199306488037, 1.8084545135498047, 1.805820107460022, 1.8033173084259033, 1.8009464740753174, 1.7987083196640015, 1.7966032028198242, 1.7946317195892334, 1.7927942276000977, 1.7910912036895752, 1.7895230054855347, 1.7880899906158447, 1.7867923974990845, 1.7856305837631226, 1.784604787826538, 1.7837153673171997, 1.782962441444397, 1.7823461294174194, 1.7818666696548462, 1.7815240621566772, 1.7813185453414917, 1.796875, 1.796942949295044, 1.7971466779708862, 1.7974863052368164, 1.7979615926742554, 1.7985725402832031, 1.7993190288543701, 1.8002007007598877, 1.8012175559997559, 1.8023693561553955, 1.803655743598938, 1.8050763607025146, 1.806631088256836, 1.8083195686340332, 1.8101412057876587, 1.8120958805084229, 1.814182996749878, 1.8164020776748657, 1.818752646446228, 1.8212343454360962, 1.823846459388733, 1.82658851146698, 1.8294600248336792, 1.8324601650238037, 1.8355884552001953, 1.8388440608978271, 1.8422266244888306, 1.8457351922988892, 1.8493690490722656, 1.8531275987625122, 1.857010006904602, 1.8610155582427979, 1.8651434183120728, 1.8693926334381104, 1.873762607574463, 1.878252387046814, 1.8828611373901367, 1.8875879049301147, 1.8924319744110107, 1.8973922729492188, 1.9024680852890015, 1.907658338546753, 1.9129620790481567, 1.918378472328186, 1.9239064455032349, 1.9295451641082764, 1.9352935552597046, 1.9411507844924927, 1.9471157789230347, 1.9531874656677246, 1.9593650102615356, 1.9656473398208618, 1.9720335006713867, 1.9785224199295044, 1.9851130247116089, 1.9918044805526733, 1.9985957145690918, 2.0054855346679688, 2.0124733448028564, 2.0195577144622803, 2.026737689971924, 2.03401255607605, 2.0413808822631836, 2.048842191696167, 2.0563948154449463, 2.0640382766723633, 2.0717713832855225, 2.0795929431915283, 2.0875022411346436, 2.0954983234405518, 2.1035799980163574, 2.111746311187744, 2.1199963092803955, 2.128329277038574, 2.1367437839508057, 2.1452391147613525, 2.1538143157958984, 2.162468433380127, 2.1712005138397217, 2.180009603500366, 2.188894748687744, 2.197854995727539, 2.2068896293640137, 2.2159974575042725, 2.225177764892578, 2.2344295978546143, 2.2437522411346436, 2.2531445026397705, 2.262605667114258, 2.272135019302368, 2.281731605529785, 2.2913944721221924, 2.3011226654052734, 2.310915946960449, 2.320772886276245, 2.330692768096924, 2.340675115585327, 2.3507187366485596, 2.360823154449463, 2.3709876537323, 2.381211042404175, 2.3914928436279297, 2.401832342147827, 2.41222882270813, 2.4226813316345215, 2.4331893920898438, 2.4437520503997803, 2.454368829727173, 2.465038776397705, 2.4757614135742188, 2.4865360260009766, 2.497361898422241, 2.5082383155822754, 2.519164800643921, 2.5301406383514404, 2.5411651134490967, 2.5522375106811523, 2.563357353210449, 2.57452392578125, 2.5857367515563965, 2.5969953536987305, 2.6082987785339355, 2.6196467876434326, 2.6310384273529053, 2.6424734592437744, 2.6539511680603027, 2.665471076965332, 2.677032709121704, 2.6886353492736816, 2.677032709121704, 2.665471076965332, 2.6539511680603027, 2.6424734592437744, 2.6310384273529053, 2.6196467876434326, 2.6082987785339355, 2.5969953536987305, 2.5857367515563965, 2.57452392578125, 2.563357353210449, 2.5522375106811523, 2.5411651134490967, 2.5301406383514404, 2.519164800643921, 2.5082383155822754, 2.497361898422241, 2.4865360260009766, 2.4757614135742188, 2.465038776397705, 2.454368829727173, 2.4437520503997803, 2.4331893920898438, 2.4226813316345215, 2.41222882270813, 2.401832342147827, 2.3914928436279297, 2.381211042404175, 2.3709876537323, 2.360823154449463, 2.3507187366485596, 2.340675115585327, 2.330692768096924, 2.320772886276245, 2.310915946960449, 2.3011226654052734, 2.2913944721221924, 2.281731605529785, 2.272135019302368, 2.262605667114258, 2.2531445026397705, 2.2437522411346436, 2.2344295978546143, 2.225177764892578, 2.2159974575042725, 2.2068896293640137, 2.197854995727539, 2.188894748687744, 2.180009603500366, 2.1712005138397217, 2.162468433380127, 2.1538143157958984, 2.1452391147613525, 2.1367437839508057, 2.128329277038574, 2.1199963092803955, 2.111746311187744, 2.1035799980163574, 2.0954983234405518, 2.0875022411346436, 2.0795929431915283, 2.0717713832855225, 2.0640382766723633, 2.0563948154449463, 2.048842191696167, 2.0413808822631836, 2.03401255607605, 2.026737689971924, 2.0195577144622803, 2.0124733448028564, 2.0054855346679688, 1.9985957145690918, 1.9918044805526733, 1.9851130247116089, 1.9785224199295044, 1.9720335006713867, 1.9656473398208618, 1.9593650102615356, 1.9531874656677246, 1.9471157789230347, 1.9411507844924927, 1.9352935552597046, 1.9295451641082764, 1.9239064455032349, 1.918378472328186, 1.9129620790481567, 1.907658338546753, 1.9024680852890015, 1.8973922729492188, 1.8924319744110107, 1.8875879049301147, 1.8828611373901367, 1.878252387046814, 1.873762607574463, 1.8693926334381104, 1.8651434183120728, 1.8610155582427979, 1.857010006904602, 1.8531275987625122, 1.8493690490722656, 1.8457351922988892, 1.8422266244888306, 1.8388440608978271, 1.8355884552001953, 1.8324601650238037, 1.8294600248336792, 1.82658851146698, 1.823846459388733, 1.8212343454360962, 1.818752646446228, 1.8164020776748657, 1.814182996749878, 1.8120958805084229, 1.8101412057876587, 1.8083195686340332, 1.806631088256836, 1.8050763607025146, 1.803655743598938, 1.8023693561553955, 1.8012175559997559, 1.8002007007598877, 1.7993190288543701, 1.7985725402832031, 1.7979615926742554, 1.7974863052368164, 1.7971466779708862, 1.796942949295044, 1.8125, 1.8125673532485962, 1.8127694129943848, 1.8131060600280762, 1.8135772943496704, 1.814182996749878, 1.8149229288101196, 1.8157970905303955, 1.8168052434921265, 1.8179471492767334, 1.8192224502563477, 1.8206310272216797, 1.8221725225448608, 1.823846459388733, 1.8256527185440063, 1.8275907039642334, 1.829660177230835, 1.8318605422973633, 1.8341913223266602, 1.836652159690857, 1.8392423391342163, 1.8419615030288696, 1.8448090553283691, 1.8477842807769775, 1.850886583328247, 1.8541154861450195, 1.857470154762268, 1.860949993133545, 1.8645542860031128, 1.8682821989059448, 1.8721332550048828, 1.8761065006256104, 1.8802011013031006, 1.8844164609909058, 1.8887516260147095, 1.8932058811187744, 1.8977782726287842, 1.9024680852890015, 1.9072743654251099, 1.912196159362793, 1.9172327518463135, 1.9223830699920654, 1.927646279335022, 1.9330215454101562, 1.9385077953338623, 1.9441041946411133, 1.9498096704483032, 1.9556233882904053, 1.961544394493103, 1.9675716161727905, 1.9737040996551514, 1.9799408912658691, 1.9862810373306274, 1.9927235841751099, 1.9992674589157104, 2.0059115886688232, 2.012655258178711, 2.0194971561431885, 2.0264365673065186, 2.0334722995758057, 2.0406033992767334, 2.0478289127349854, 2.055147886276245, 2.062559127807617, 2.0700619220733643, 2.077655076980591, 2.0853376388549805, 2.093108654022217, 2.1009669303894043, 2.1089119911193848, 2.1169424057006836, 2.1250574588775635, 2.133255958557129, 2.1415371894836426, 2.149899959564209, 2.158343553543091, 2.1668670177459717, 2.175469160079956, 2.1841492652893066, 2.192906379699707, 2.2017393112182617, 2.2106475830078125, 2.219630002975464, 2.2286858558654785, 2.23781418800354, 2.247014045715332, 2.256284713745117, 2.265625, 2.2750344276428223, 2.2845118045806885, 2.2940564155578613, 2.3036677837371826, 2.3133444786071777, 2.3230860233306885, 2.3328914642333984, 2.3427603244781494, 2.352691173553467, 2.3626840114593506, 2.372737407684326, 2.3828508853912354, 2.393023729324341, 2.403254985809326, 2.413544178009033, 2.4238903522491455, 2.434292793273926, 2.4447507858276367, 2.45526385307312, 2.4658310413360596, 2.4764516353607178, 2.4871251583099365, 2.4978506565093994, 2.5086276531219482, 2.5194554328918457, 2.5303335189819336, 2.5412609577178955, 2.5522375106811523, 2.5632619857788086, 2.5743343830108643, 2.585453510284424, 2.5966193675994873, 2.607830762863159, 2.6190874576568604, 2.6303887367248535, 2.6417341232299805, 2.653123140335083, 2.664555072784424, 2.6760292053222656, 2.6875455379486084, 2.6991028785705566, 2.6875455379486084, 2.6760292053222656, 2.664555072784424, 2.653123140335083, 2.6417341232299805, 2.6303887367248535, 2.6190874576568604, 2.607830762863159, 2.5966193675994873, 2.585453510284424, 2.5743343830108643, 2.5632619857788086, 2.5522375106811523, 2.5412609577178955, 2.5303335189819336, 2.5194554328918457, 2.5086276531219482, 2.4978506565093994, 2.4871251583099365, 2.4764516353607178, 2.4658310413360596, 2.45526385307312, 2.4447507858276367, 2.434292793273926, 2.4238903522491455, 2.413544178009033, 2.403254985809326, 2.393023729324341, 2.3828508853912354, 2.372737407684326, 2.3626840114593506, 2.352691173553467, 2.3427603244781494, 2.3328914642333984, 2.3230860233306885, 2.3133444786071777, 2.3036677837371826, 2.2940564155578613, 2.2845118045806885, 2.2750344276428223, 2.265625, 2.256284713745117, 2.247014045715332, 2.23781418800354, 2.2286858558654785, 2.219630002975464, 2.2106475830078125, 2.2017393112182617, 2.192906379699707, 2.1841492652893066, 2.175469160079956, 2.1668670177459717, 2.158343553543091, 2.149899959564209, 2.1415371894836426, 2.133255958557129, 2.1250574588775635, 2.1169424057006836, 2.1089119911193848, 2.1009669303894043, 2.093108654022217, 2.0853376388549805, 2.077655076980591, 2.0700619220733643, 2.062559127807617, 2.055147886276245, 2.0478289127349854, 2.0406033992767334, 2.0334722995758057, 2.0264365673065186, 2.0194971561431885, 2.012655258178711, 2.0059115886688232, 1.9992674589157104, 1.9927235841751099, 1.9862810373306274, 1.9799408912658691, 1.9737040996551514, 1.9675716161727905, 1.961544394493103, 1.9556233882904053, 1.9498096704483032, 1.9441041946411133, 1.9385077953338623, 1.9330215454101562, 1.927646279335022, 1.9223830699920654, 1.9172327518463135, 1.912196159362793, 1.9072743654251099, 1.9024680852890015, 1.8977782726287842, 1.8932058811187744, 1.8887516260147095, 1.8844164609909058, 1.8802011013031006, 1.8761065006256104, 1.8721332550048828, 1.8682821989059448, 1.8645542860031128, 1.860949993133545, 1.857470154762268, 1.8541154861450195, 1.850886583328247, 1.8477842807769775, 1.8448090553283691, 1.8419615030288696, 1.8392423391342163, 1.836652159690857, 1.8341913223266602, 1.8318605422973633, 1.829660177230835, 1.8275907039642334, 1.8256527185440063, 1.823846459388733, 1.8221725225448608, 1.8206310272216797, 1.8192224502563477, 1.8179471492767334, 1.8168052434921265, 1.8157970905303955, 1.8149229288101196, 1.814182996749878, 1.8135772943496704, 1.8131060600280762, 1.8127694129943848, 1.8125673532485962, 1.828125, 1.8281917572021484, 1.8283920288085938, 1.828725814819336, 1.829193115234375, 1.8297935724258423, 1.8305273056030273, 1.8313939571380615, 1.8323935270309448, 1.8335256576538086, 1.8347902297973633, 1.8361867666244507, 1.8377152681350708, 1.8393751382827759, 1.8411661386489868, 1.8430877923965454, 1.8451398611068726, 1.8473217487335205, 1.8496330976486206, 1.8520734310150146, 1.8546420335769653, 1.8573386669158936, 1.860162615776062, 1.8631134033203125, 1.8661901950836182, 1.8693926334381104, 1.8727200031280518, 1.8761714696884155, 1.8797465562820435, 1.8834445476531982, 1.887264609336853, 1.8912060260772705, 1.8952680826187134, 1.8994499444961548, 1.9037508964538574, 1.9081701040267944, 1.912706732749939, 1.9173600673675537, 1.9221290349960327, 1.9270129203796387, 1.9320108890533447, 1.9371219873428345, 1.9423452615737915, 1.947679877281189, 1.953125, 1.9586795568466187, 1.9643428325653076, 1.9701136350631714, 1.975991129875183, 1.981974482536316, 1.9880625009536743, 1.994254469871521, 2.00054931640625, 2.006945848464966, 2.0134434700012207, 2.0200412273406982, 2.026737689971924, 2.0335323810577393, 2.040424108505249, 2.0474116802215576, 2.0544943809509277, 2.061671257019043, 2.068941116333008, 2.076303243637085, 2.083756446838379, 2.0912997722625732, 2.0989325046539307, 2.1066534519195557, 2.1144614219665527, 2.1223559379577637, 2.130335569381714, 2.138399839401245, 2.146547555923462, 2.1547775268554688, 2.1630892753601074, 2.1714816093444824, 2.1799535751342773, 2.188504219055176, 2.1971328258514404, 2.205838203430176, 2.2146198749542236, 2.2234764099121094, 2.232407331466675, 2.2414114475250244, 2.25048828125, 2.259636402130127, 2.268855571746826, 2.278144359588623, 2.2875020503997803, 2.2969281673431396, 2.3064215183258057, 2.315981388092041, 2.3256068229675293, 2.3352973461151123, 2.3450517654418945, 2.3548693656921387, 2.3647496700286865, 2.3746914863586426, 2.3846943378448486, 2.3947575092315674, 2.4048798084259033, 2.4150609970092773, 2.425299882888794, 2.435596227645874, 2.445948839187622, 2.45635724067688, 2.4668209552764893, 2.4773387908935547, 2.487910270690918, 2.498534679412842, 2.509211540222168, 2.51993989944458, 2.530719518661499, 2.5415492057800293, 2.552428722381592, 2.563357353210449, 2.5743343830108643, 2.5853590965270996, 2.596431255340576, 2.6075499057769775, 2.6187145709991455, 2.629924774169922, 2.6411795616149902, 2.6524789333343506, 2.6638219356536865, 2.67520809173584, 2.6866369247436523, 2.6981077194213867, 2.7096199989318848, 2.6981077194213867, 2.6866369247436523, 2.67520809173584, 2.6638219356536865, 2.6524789333343506, 2.6411795616149902, 2.629924774169922, 2.6187145709991455, 2.6075499057769775, 2.596431255340576, 2.5853590965270996, 2.5743343830108643, 2.563357353210449, 2.552428722381592, 2.5415492057800293, 2.530719518661499, 2.51993989944458, 2.509211540222168, 2.498534679412842, 2.487910270690918, 2.4773387908935547, 2.4668209552764893, 2.45635724067688, 2.445948839187622, 2.435596227645874, 2.425299882888794, 2.4150609970092773, 2.4048798084259033, 2.3947575092315674, 2.3846943378448486, 2.3746914863586426, 2.3647496700286865, 2.3548693656921387, 2.3450517654418945, 2.3352973461151123, 2.3256068229675293, 2.315981388092041, 2.3064215183258057, 2.2969281673431396, 2.2875020503997803, 2.278144359588623, 2.268855571746826, 2.259636402130127, 2.25048828125, 2.2414114475250244, 2.232407331466675, 2.2234764099121094, 2.2146198749542236, 2.205838203430176, 2.1971328258514404, 2.188504219055176, 2.1799535751342773, 2.1714816093444824, 2.1630892753601074, 2.1547775268554688, 2.146547555923462, 2.138399839401245, 2.130335569381714, 2.1223559379577637, 2.1144614219665527, 2.1066534519195557, 2.0989325046539307, 2.0912997722625732, 2.083756446838379, 2.076303243637085, 2.068941116333008, 2.061671257019043, 2.0544943809509277, 2.0474116802215576, 2.040424108505249, 2.0335323810577393, 2.026737689971924, 2.0200412273406982, 2.0134434700012207, 2.006945848464966, 2.00054931640625, 1.994254469871521, 1.9880625009536743, 1.981974482536316, 1.975991129875183, 1.9701136350631714, 1.9643428325653076, 1.9586795568466187, 1.953125, 1.947679877281189, 1.9423452615737915, 1.9371219873428345, 1.9320108890533447, 1.9270129203796387, 1.9221290349960327, 1.9173600673675537, 1.912706732749939, 1.9081701040267944, 1.9037508964538574, 1.8994499444961548, 1.8952680826187134, 1.8912060260772705, 1.887264609336853, 1.8834445476531982, 1.8797465562820435, 1.8761714696884155, 1.8727200031280518, 1.8693926334381104, 1.8661901950836182, 1.8631134033203125, 1.860162615776062, 1.8573386669158936, 1.8546420335769653, 1.8520734310150146, 1.8496330976486206, 1.8473217487335205, 1.8451398611068726, 1.8430877923965454, 1.8411661386489868, 1.8393751382827759, 1.8377152681350708, 1.8361867666244507, 1.8347902297973633, 1.8335256576538086, 1.8323935270309448, 1.8313939571380615, 1.8305273056030273, 1.8297935724258423, 1.829193115234375, 1.828725814819336, 1.8283920288085938, 1.8281917572021484, 1.84375, 1.8438161611557007, 1.8440147638320923, 1.8443458080291748, 1.8448090553283691, 1.8454045057296753, 1.8461319208145142, 1.8469913005828857, 1.847982406616211, 1.8491050004959106, 1.8503589630126953, 1.8517438173294067, 1.8532593250274658, 1.854905366897583, 1.8566813468933105, 1.8585870265960693, 1.8606219291687012, 1.8627856969833374, 1.8650779724121094, 1.8674980401992798, 1.87004554271698, 1.8727200031280518, 1.8755207061767578, 1.8784472942352295, 1.881499171257019, 1.8846755027770996, 1.8879759311676025, 1.891399621963501, 1.8949459791183472, 1.8986142873764038, 1.9024039506912231, 1.9063140153884888, 1.9103440046310425, 1.9144929647445679, 1.9187601804733276, 1.9231449365615845, 1.927646279335022, 1.9322636127471924, 1.9369958639144897, 1.9418424367904663, 1.9468022584915161, 1.9518746137619019, 1.9570585489273071, 1.962353229522705, 1.9677577018737793, 1.973271131515503, 1.9788925647735596, 1.9846210479736328, 1.9904557466506958, 1.9963957071304321, 2.0024399757385254, 2.008587598800659, 2.0148375034332275, 2.021188974380493, 2.0276410579681396, 2.0341925621032715, 2.0408427715301514, 2.047590494155884, 2.0544350147247314, 2.061375141143799, 2.0684101581573486, 2.0755388736724854, 2.0827603340148926, 2.090073823928833, 2.097477912902832, 2.1049723625183105, 2.112555503845215, 2.1202266216278076, 2.1279850006103516, 2.135829448699951, 2.14375901222229, 2.151772975921631, 2.159870147705078, 2.1680495738983154, 2.1763107776641846, 2.184652090072632, 2.193073272705078, 2.201573133468628, 2.2101504802703857, 2.2188050746917725, 2.2275354862213135, 2.2363409996032715, 2.24522066116333, 2.254173755645752, 2.2631990909576416, 2.272296190261841, 2.281464099884033, 2.2907016277313232, 2.300008535385132, 2.3093833923339844, 2.3188257217407227, 2.3283348083496094, 2.337909460067749, 2.3475489616394043, 2.357252836227417, 2.3670198917388916, 2.37684965133667, 2.3867411613464355, 2.396693706512451, 2.4067065715789795, 2.416778802871704, 2.426910161972046, 2.4370992183685303, 2.4473459720611572, 2.457648992538452, 2.468008279800415, 2.4784224033355713, 2.488891363143921, 2.4994139671325684, 2.5099897384643555, 2.520618200302124, 2.5312981605529785, 2.542029619216919, 2.55281138420105, 2.563642978668213, 2.57452392578125, 2.585453510284424, 2.596431255340576, 2.6074562072753906, 2.618528127670288, 2.6296463012695312, 2.640810012817383, 2.6520187854766846, 2.663271903991699, 2.6745691299438477, 2.6859097480773926, 2.697293281555176, 2.70871901512146, 2.720186471939087, 2.70871901512146, 2.697293281555176, 2.6859097480773926, 2.6745691299438477, 2.663271903991699, 2.6520187854766846, 2.640810012817383, 2.6296463012695312, 2.618528127670288, 2.6074562072753906, 2.596431255340576, 2.585453510284424, 2.57452392578125, 2.563642978668213, 2.55281138420105, 2.542029619216919, 2.5312981605529785, 2.520618200302124, 2.5099897384643555, 2.4994139671325684, 2.488891363143921, 2.4784224033355713, 2.468008279800415, 2.457648992538452, 2.4473459720611572, 2.4370992183685303, 2.426910161972046, 2.416778802871704, 2.4067065715789795, 2.396693706512451, 2.3867411613464355, 2.37684965133667, 2.3670198917388916, 2.357252836227417, 2.3475489616394043, 2.337909460067749, 2.3283348083496094, 2.3188257217407227, 2.3093833923339844, 2.300008535385132, 2.2907016277313232, 2.281464099884033, 2.272296190261841, 2.2631990909576416, 2.254173755645752, 2.24522066116333, 2.2363409996032715, 2.2275354862213135, 2.2188050746917725, 2.2101504802703857, 2.201573133468628, 2.193073272705078, 2.184652090072632, 2.1763107776641846, 2.1680495738983154, 2.159870147705078, 2.151772975921631, 2.14375901222229, 2.135829448699951, 2.1279850006103516, 2.1202266216278076, 2.112555503845215, 2.1049723625183105, 2.097477912902832, 2.090073823928833, 2.0827603340148926, 2.0755388736724854, 2.0684101581573486, 2.061375141143799, 2.0544350147247314, 2.047590494155884, 2.0408427715301514, 2.0341925621032715, 2.0276410579681396, 2.021188974380493, 2.0148375034332275, 2.008587598800659, 2.0024399757385254, 1.9963957071304321, 1.9904557466506958, 1.9846210479736328, 1.9788925647735596, 1.973271131515503, 1.9677577018737793, 1.962353229522705, 1.9570585489273071, 1.9518746137619019, 1.9468022584915161, 1.9418424367904663, 1.9369958639144897, 1.9322636127471924, 1.927646279335022, 1.9231449365615845, 1.9187601804733276, 1.9144929647445679, 1.9103440046310425, 1.9063140153884888, 1.9024039506912231, 1.8986142873764038, 1.8949459791183472, 1.891399621963501, 1.8879759311676025, 1.8846755027770996, 1.881499171257019, 1.8784472942352295, 1.8755207061767578, 1.8727200031280518, 1.87004554271698, 1.8674980401992798, 1.8650779724121094, 1.8627856969833374, 1.8606219291687012, 1.8585870265960693, 1.8566813468933105, 1.854905366897583, 1.8532593250274658, 1.8517438173294067, 1.8503589630126953, 1.8491050004959106, 1.847982406616211, 1.8469913005828857, 1.8461319208145142, 1.8454045057296753, 1.8448090553283691, 1.8443458080291748, 1.8440147638320923, 1.8438161611557007, 1.859375, 1.8594406843185425, 1.8596376180648804, 1.8599658012390137, 1.8604251146316528, 1.8610155582427979, 1.8617368936538696, 1.8625891208648682, 1.8635720014572144, 1.8646851778030396, 1.8659285306930542, 1.8673019409179688, 1.8688048124313354, 1.8704371452331543, 1.872198462486267, 1.8740882873535156, 1.8761065006256104, 1.878252387046814, 1.8805257081985474, 1.8829259872436523, 1.8854526281356812, 1.8881052732467651, 1.890883207321167, 1.893786072731018, 1.8968132734298706, 1.8999639749526978, 1.9032379388809204, 1.9066342115402222, 1.9101521968841553, 1.9137914180755615, 1.917551040649414, 1.9214303493499756, 1.9254286289215088, 1.9295451641082764, 1.933779239654541, 1.9381299018859863, 1.942596673965454, 1.9471784830093384, 1.9518746137619019, 1.9566842317581177, 1.9616066217422485, 1.9666407108306885, 1.9717859029769897, 1.9770411252975464, 1.9824055433273315, 1.9878783226013184, 1.9934585094451904, 1.999145269393921, 2.0049376487731934, 2.0108349323272705, 2.016835927963257, 2.022939682006836, 2.0291454792022705, 2.035452365875244, 2.0418593883514404, 2.048365354537964, 2.0549697875976562, 2.061671257019043, 2.0684690475463867, 2.07536244392395, 2.082350015640259, 2.0894312858581543, 2.096604824066162, 2.103870153427124, 2.1112260818481445, 2.1186716556549072, 2.1262059211730957, 2.1338281631469727, 2.1415371894836426, 2.149332284927368, 2.157212257385254, 2.1651761531829834, 2.1732234954833984, 2.1813528537750244, 2.189563751220703, 2.197854995727539, 2.206225633621216, 2.214674949645996, 2.2232019901275635, 2.2318058013916016, 2.240485429763794, 2.2492403984069824, 2.2580692768096924, 2.2669715881347656, 2.2759463787078857, 2.2849926948547363, 2.29410982131958, 2.3032968044281006, 2.3125526905059814, 2.3218770027160645, 2.331268787384033, 2.3407273292541504, 2.3502514362335205, 2.3598406314849854, 2.3694939613342285, 2.379210948944092, 2.3889904022216797, 2.398831844329834, 2.4087345600128174, 2.4186975955963135, 2.428720235824585, 2.4388017654418945, 2.448941469192505, 2.4591386318206787, 2.469392776489258, 2.4797027111053467, 2.490068197250366, 2.50048828125, 2.5109622478485107, 2.5214896202087402, 2.532069683074951, 2.5427017211914062, 2.553385019302368, 2.5641191005706787, 2.5749032497406006, 2.5857367515563965, 2.5966193675994873, 2.6075499057769775, 2.618528127670288, 2.6295533180236816, 2.640625, 2.651742458343506, 2.662905216217041, 2.6741127967834473, 2.685364246368408, 2.696659564971924, 2.7079977989196777, 2.7193784713745117, 2.7308013439178467, 2.7193784713745117, 2.7079977989196777, 2.696659564971924, 2.685364246368408, 2.6741127967834473, 2.662905216217041, 2.651742458343506, 2.640625, 2.6295533180236816, 2.618528127670288, 2.6075499057769775, 2.5966193675994873, 2.5857367515563965, 2.5749032497406006, 2.5641191005706787, 2.553385019302368, 2.5427017211914062, 2.532069683074951, 2.5214896202087402, 2.5109622478485107, 2.50048828125, 2.490068197250366, 2.4797027111053467, 2.469392776489258, 2.4591386318206787, 2.448941469192505, 2.4388017654418945, 2.428720235824585, 2.4186975955963135, 2.4087345600128174, 2.398831844329834, 2.3889904022216797, 2.379210948944092, 2.3694939613342285, 2.3598406314849854, 2.3502514362335205, 2.3407273292541504, 2.331268787384033, 2.3218770027160645, 2.3125526905059814, 2.3032968044281006, 2.29410982131958, 2.2849926948547363, 2.2759463787078857, 2.2669715881347656, 2.2580692768096924, 2.2492403984069824, 2.240485429763794, 2.2318058013916016, 2.2232019901275635, 2.214674949645996, 2.206225633621216, 2.197854995727539, 2.189563751220703, 2.1813528537750244, 2.1732234954833984, 2.1651761531829834, 2.157212257385254, 2.149332284927368, 2.1415371894836426, 2.1338281631469727, 2.1262059211730957, 2.1186716556549072, 2.1112260818481445, 2.103870153427124, 2.096604824066162, 2.0894312858581543, 2.082350015640259, 2.07536244392395, 2.0684690475463867, 2.061671257019043, 2.0549697875976562, 2.048365354537964, 2.0418593883514404, 2.035452365875244, 2.0291454792022705, 2.022939682006836, 2.016835927963257, 2.0108349323272705, 2.0049376487731934, 1.999145269393921, 1.9934585094451904, 1.9878783226013184, 1.9824055433273315, 1.9770411252975464, 1.9717859029769897, 1.9666407108306885, 1.9616066217422485, 1.9566842317581177, 1.9518746137619019, 1.9471784830093384, 1.942596673965454, 1.9381299018859863, 1.933779239654541, 1.9295451641082764, 1.9254286289215088, 1.9214303493499756, 1.917551040649414, 1.9137914180755615, 1.9101521968841553, 1.9066342115402222, 1.9032379388809204, 1.8999639749526978, 1.8968132734298706, 1.893786072731018, 1.890883207321167, 1.8881052732467651, 1.8854526281356812, 1.8829259872436523, 1.8805257081985474, 1.878252387046814, 1.8761065006256104, 1.8740882873535156, 1.872198462486267, 1.8704371452331543, 1.8688048124313354, 1.8673019409179688, 1.8659285306930542, 1.8646851778030396, 1.8635720014572144, 1.8625891208648682, 1.8617368936538696, 1.8610155582427979, 1.8604251146316528, 1.8599658012390137, 1.8596376180648804, 1.8594406843185425, 1.875, 1.8750650882720947, 1.875260353088379, 1.8755857944488525, 1.8760414123535156, 1.8766268491744995, 1.8773423433303833, 1.8781874179840088, 1.879162073135376, 1.8802660703659058, 1.881499171257019, 1.8828611373901367, 1.8843517303466797, 1.8859704732894897, 1.8877172470092773, 1.8895916938781738, 1.8915932178497314, 1.893721580505371, 1.8959764242172241, 1.8983571529388428, 1.9008632898330688, 1.9034944772720337, 1.90625, 1.9091295003890991, 1.9121322631835938, 1.9152579307556152, 1.9185056686401367, 1.921875, 1.9253652095794678, 1.9289757013320923, 1.9327057600021362, 1.9365546703338623, 1.9405218362808228, 1.9446064233779907, 1.948807716369629, 1.953125, 1.9575574398040771, 1.962104320526123, 1.9667649269104004, 1.9715381860733032, 1.9764235019683838, 1.9814200401306152, 1.9865268468856812, 1.9917432069778442, 1.997068166732788, 2.0025007724761963, 2.008040428161621, 2.013686180114746, 2.019436836242676, 2.025291681289673, 2.03125, 2.0373106002807617, 2.0434727668762207, 2.0497355461120605, 2.056097984313965, 2.062559127807617, 2.0691182613372803, 2.0757739543914795, 2.0825259685516357, 2.0893728733062744, 2.096313714981079, 2.1033477783203125, 2.1104743480682373, 2.117691993713379, 2.125, 2.132397413253784, 2.139883518218994, 2.1474571228027344, 2.1551175117492676, 2.1628634929656982, 2.170694351196289, 2.1786091327667236, 2.1866068840026855, 2.1946868896484375, 2.202847957611084, 2.2110893726348877, 2.2194101810455322, 2.227809429168701, 2.2362864017486572, 2.244839906692505, 2.253469467163086, 2.262174129486084, 2.2709527015686035, 2.2798047065734863, 2.288729190826416, 2.297725200653076, 2.3067920207977295, 2.3159286975860596, 2.325134515762329, 2.3344085216522217, 2.34375, 2.3531582355499268, 2.3626322746276855, 2.372171401977539, 2.38177490234375, 2.391441822052002, 2.4011716842651367, 2.410963296890259, 2.42081618309021, 2.430729866027832, 2.4407029151916504, 2.450735330581665, 2.4608259201049805, 2.4709739685058594, 2.4811792373657227, 2.491440534591675, 2.5017571449279785, 2.5121288299560547, 2.522554397583008, 2.533033609390259, 2.5435657501220703, 2.554149866104126, 2.5647854804992676, 2.575472116470337, 2.5862088203430176, 2.5969953536987305, 2.607830762863159, 2.6187145709991455, 2.6296463012695312, 2.640625, 2.6516504287719727, 2.662721872329712, 2.6738388538360596, 2.6850006580352783, 2.69620680809021, 2.7074568271636963, 2.71875, 2.730085849761963, 2.741464138031006, 2.730085849761963, 2.71875, 2.7074568271636963, 2.69620680809021, 2.6850006580352783, 2.6738388538360596, 2.662721872329712, 2.6516504287719727, 2.640625, 2.6296463012695312, 2.6187145709991455, 2.607830762863159, 2.5969953536987305, 2.5862088203430176, 2.575472116470337, 2.5647854804992676, 2.554149866104126, 2.5435657501220703, 2.533033609390259, 2.522554397583008, 2.5121288299560547, 2.5017571449279785, 2.491440534591675, 2.4811792373657227, 2.4709739685058594, 2.4608259201049805, 2.450735330581665, 2.4407029151916504, 2.430729866027832, 2.42081618309021, 2.410963296890259, 2.4011716842651367, 2.391441822052002, 2.38177490234375, 2.372171401977539, 2.3626322746276855, 2.3531582355499268, 2.34375, 2.3344085216522217, 2.325134515762329, 2.3159286975860596, 2.3067920207977295, 2.297725200653076, 2.288729190826416, 2.2798047065734863, 2.2709527015686035, 2.262174129486084, 2.253469467163086, 2.244839906692505, 2.2362864017486572, 2.227809429168701, 2.2194101810455322, 2.2110893726348877, 2.202847957611084, 2.1946868896484375, 2.1866068840026855, 2.1786091327667236, 2.170694351196289, 2.1628634929656982, 2.1551175117492676, 2.1474571228027344, 2.139883518218994, 2.132397413253784, 2.125, 2.117691993713379, 2.1104743480682373, 2.1033477783203125, 2.096313714981079, 2.0893728733062744, 2.0825259685516357, 2.0757739543914795, 2.0691182613372803, 2.062559127807617, 2.056097984313965, 2.0497355461120605, 2.0434727668762207, 2.0373106002807617, 2.03125, 2.025291681289673, 2.019436836242676, 2.013686180114746, 2.008040428161621, 2.0025007724761963, 1.997068166732788, 1.9917432069778442, 1.9865268468856812, 1.9814200401306152, 1.9764235019683838, 1.9715381860733032, 1.9667649269104004, 1.962104320526123, 1.9575574398040771, 1.953125, 1.948807716369629, 1.9446064233779907, 1.9405218362808228, 1.9365546703338623, 1.9327057600021362, 1.9289757013320923, 1.9253652095794678, 1.921875, 1.9185056686401367, 1.9152579307556152, 1.9121322631835938, 1.9091295003890991, 1.90625, 1.9034944772720337, 1.9008632898330688, 1.8983571529388428, 1.8959764242172241, 1.893721580505371, 1.8915932178497314, 1.8895916938781738, 1.8877172470092773, 1.8859704732894897, 1.8843517303466797, 1.8828611373901367, 1.881499171257019, 1.8802660703659058, 1.879162073135376, 1.8781874179840088, 1.8773423433303833, 1.8766268491744995, 1.8760414123535156, 1.8755857944488525, 1.875260353088379, 1.8750650882720947, 1.890625, 1.8906896114349365, 1.890883207321167, 1.8912060260772705, 1.891657829284668, 1.8922384977340698, 1.8929479122161865, 1.893786072731018, 1.8947527408599854, 1.8958476781845093, 1.8970706462860107, 1.8984214067459106, 1.8998997211456299, 1.9015053510665894, 1.9032379388809204, 1.9050970077514648, 1.9070823192596436, 1.9091933965682983, 1.91143000125885, 1.9137914180755615, 1.9162774085998535, 1.9188873767852783, 1.9216209650039673, 1.924477458000183, 1.9274563789367676, 1.930557131767273, 1.933779239654541, 1.9371219873428345, 1.9405847787857056, 1.944166898727417, 1.9478678703308105, 1.951686978340149, 1.9556233882904053, 1.9596765041351318, 1.9638456106185913, 1.9681298732757568, 1.9725285768508911, 1.9770411252975464, 1.9816664457321167, 1.9864039421081543, 1.9912528991699219, 1.9962122440338135, 2.001281261444092, 2.0064592361450195, 2.0117452144622803, 2.0171384811401367, 2.0226380825042725, 2.028243064880371, 2.033952474594116, 2.0397658348083496, 2.045681953430176, 2.0516998767852783, 2.057819128036499, 2.0640382766723633, 2.070356607437134, 2.0767736434936523, 2.0832877159118652, 2.0898985862731934, 2.096604824066162, 2.1034059524536133, 2.1103007793426514, 2.11728835105896, 2.1243679523468018, 2.1315386295318604, 2.1387994289398193, 2.1461493968963623, 2.153587579727173, 2.1611132621765137, 2.1687252521514893, 2.1764228343963623, 2.1842050552368164, 2.1920711994171143, 2.2000200748443604, 2.2080507278442383, 2.21616268157959, 2.2243547439575195, 2.232625961303711, 2.240975856781006, 2.249403238296509, 2.2579071521759033, 2.266486883163452, 2.275141716003418, 2.2838704586029053, 2.292672634124756, 2.301547050476074, 2.310493230819702, 2.319509983062744, 2.328596830368042, 2.3377528190612793, 2.3469769954681396, 2.3562686443328857, 2.3656270503997803, 2.375051498413086, 2.3845407962799072, 2.394094705581665, 2.403712034225464, 2.4133923053741455, 2.4231348037719727, 2.43293833732605, 2.442802667617798, 2.4527268409729004, 2.46271014213562, 2.4727518558502197, 2.482851266860962, 2.4930078983306885, 2.503220558166504, 2.513489007949829, 2.5238122940063477, 2.5341899394989014, 2.544621229171753, 2.555105447769165, 2.5656421184539795, 2.57623028755188, 2.586869716644287, 2.5975592136383057, 2.6082987785339355, 2.6190874576568604, 2.629924774169922, 2.640810012817383, 2.651742458343506, 2.662721872329712, 2.6737475395202637, 2.684818744659424, 2.6959352493286133, 2.7070960998535156, 2.7183010578155518, 2.7295494079589844, 2.7408406734466553, 2.752174139022827, 2.7408406734466553, 2.7295494079589844, 2.7183010578155518, 2.7070960998535156, 2.6959352493286133, 2.684818744659424, 2.6737475395202637, 2.662721872329712, 2.651742458343506, 2.640810012817383, 2.629924774169922, 2.6190874576568604, 2.6082987785339355, 2.5975592136383057, 2.586869716644287, 2.57623028755188, 2.5656421184539795, 2.555105447769165, 2.544621229171753, 2.5341899394989014, 2.5238122940063477, 2.513489007949829, 2.503220558166504, 2.4930078983306885, 2.482851266860962, 2.4727518558502197, 2.46271014213562, 2.4527268409729004, 2.442802667617798, 2.43293833732605, 2.4231348037719727, 2.4133923053741455, 2.403712034225464, 2.394094705581665, 2.3845407962799072, 2.375051498413086, 2.3656270503997803, 2.3562686443328857, 2.3469769954681396, 2.3377528190612793, 2.328596830368042, 2.319509983062744, 2.310493230819702, 2.301547050476074, 2.292672634124756, 2.2838704586029053, 2.275141716003418, 2.266486883163452, 2.2579071521759033, 2.249403238296509, 2.240975856781006, 2.232625961303711, 2.2243547439575195, 2.21616268157959, 2.2080507278442383, 2.2000200748443604, 2.1920711994171143, 2.1842050552368164, 2.1764228343963623, 2.1687252521514893, 2.1611132621765137, 2.153587579727173, 2.1461493968963623, 2.1387994289398193, 2.1315386295318604, 2.1243679523468018, 2.11728835105896, 2.1103007793426514, 2.1034059524536133, 2.096604824066162, 2.0898985862731934, 2.0832877159118652, 2.0767736434936523, 2.070356607437134, 2.0640382766723633, 2.057819128036499, 2.0516998767852783, 2.045681953430176, 2.0397658348083496, 2.033952474594116, 2.028243064880371, 2.0226380825042725, 2.0171384811401367, 2.0117452144622803, 2.0064592361450195, 2.001281261444092, 1.9962122440338135, 1.9912528991699219, 1.9864039421081543, 1.9816664457321167, 1.9770411252975464, 1.9725285768508911, 1.9681298732757568, 1.9638456106185913, 1.9596765041351318, 1.9556233882904053, 1.951686978340149, 1.9478678703308105, 1.944166898727417, 1.9405847787857056, 1.9371219873428345, 1.933779239654541, 1.930557131767273, 1.9274563789367676, 1.924477458000183, 1.9216209650039673, 1.9188873767852783, 1.9162774085998535, 1.9137914180755615, 1.91143000125885, 1.9091933965682983, 1.9070823192596436, 1.9050970077514648, 1.9032379388809204, 1.9015053510665894, 1.8998997211456299, 1.8984214067459106, 1.8970706462860107, 1.8958476781845093, 1.8947527408599854, 1.893786072731018, 1.8929479122161865, 1.8922384977340698, 1.891657829284668, 1.8912060260772705, 1.890883207321167, 1.8906896114349365, 1.90625, 1.9063140153884888, 1.9065061807632446, 1.9068262577056885, 1.9072743654251099, 1.9078502655029297, 1.908553957939148, 1.9093852043151855, 1.9103440046310425, 1.91143000125885, 1.9126429557800293, 1.9139827489852905, 1.9154491424560547, 1.9170416593551636, 1.9187601804733276, 1.9206042289733887, 1.9225735664367676, 1.9246677160263062, 1.9268862009048462, 1.9292287826538086, 1.9316949844360352, 1.9342840909957886, 1.9369958639144897, 1.939829707145691, 1.9427851438522339, 1.9458614587783813, 1.9490582942962646, 1.952374815940857, 1.9558106660842896, 1.9593650102615356, 1.963037371635437, 1.9668269157409668, 1.9707331657409668, 1.9747551679611206, 1.9788925647735596, 1.9831442832946777, 1.987509846687317, 1.9919883012771606, 1.9965790510177612, 2.001281261444092, 2.006094217300415, 2.011017084121704, 2.0160489082336426, 2.021188974380493, 2.0264365673065186, 2.0317907333374023, 2.0372507572174072, 2.042815685272217, 2.0484845638275146, 2.0542566776275635, 2.060131311416626, 2.0661072731018066, 2.072183609008789, 2.078359842300415, 2.084635019302368, 2.091007947921753, 2.097477912902832, 2.104044198989868, 2.110705614089966, 2.1174614429473877, 2.1243104934692383, 2.1312522888183594, 2.1382856369018555, 2.1454098224639893, 2.1526236534118652, 2.159926652908325, 2.1673176288604736, 2.174795627593994, 2.1823599338531494, 2.190009832382202, 2.1977438926696777, 2.205561637878418, 2.2134621143341064, 2.2214441299438477, 2.2295074462890625, 2.2376506328582764, 2.245872974395752, 2.254173755645752, 2.262551784515381, 2.2710065841674805, 2.2795369625091553, 2.288142442703247, 2.2968218326568604, 2.305574417114258, 2.314399480819702, 2.323296070098877, 2.332263469696045, 2.3413007259368896, 2.350407123565674, 2.35958194732666, 2.3688242435455322, 2.3781332969665527, 2.3875081539154053, 2.3969483375549316, 2.4064528942108154, 2.4160211086273193, 2.425652265548706, 2.4353456497192383, 2.4451003074645996, 2.454915761947632, 2.4647910594940186, 2.4747257232666016, 2.4847190380096436, 2.494769811630249, 2.504878044128418, 2.515042543411255, 2.5252630710601807, 2.5355384349823, 2.545868396759033, 2.5562520027160645, 2.5666885375976562, 2.5771777629852295, 2.587718963623047, 2.598311185836792, 2.6089539527893066, 2.6196467876434326, 2.6303887367248535, 2.6411795616149902, 2.6520187854766846, 2.662905216217041, 2.6738388538360596, 2.684818744659424, 2.6958446502685547, 2.7069156169891357, 2.718031406402588, 2.729191541671753, 2.7403950691223145, 2.7516419887542725, 2.7629313468933105, 2.7516419887542725, 2.7403950691223145, 2.729191541671753, 2.718031406402588, 2.7069156169891357, 2.6958446502685547, 2.684818744659424, 2.6738388538360596, 2.662905216217041, 2.6520187854766846, 2.6411795616149902, 2.6303887367248535, 2.6196467876434326, 2.6089539527893066, 2.598311185836792, 2.587718963623047, 2.5771777629852295, 2.5666885375976562, 2.5562520027160645, 2.545868396759033, 2.5355384349823, 2.5252630710601807, 2.515042543411255, 2.504878044128418, 2.494769811630249, 2.4847190380096436, 2.4747257232666016, 2.4647910594940186, 2.454915761947632, 2.4451003074645996, 2.4353456497192383, 2.425652265548706, 2.4160211086273193, 2.4064528942108154, 2.3969483375549316, 2.3875081539154053, 2.3781332969665527, 2.3688242435455322, 2.35958194732666, 2.350407123565674, 2.3413007259368896, 2.332263469696045, 2.323296070098877, 2.314399480819702, 2.305574417114258, 2.2968218326568604, 2.288142442703247, 2.2795369625091553, 2.2710065841674805, 2.262551784515381, 2.254173755645752, 2.245872974395752, 2.2376506328582764, 2.2295074462890625, 2.2214441299438477, 2.2134621143341064, 2.205561637878418, 2.1977438926696777, 2.190009832382202, 2.1823599338531494, 2.174795627593994, 2.1673176288604736, 2.159926652908325, 2.1526236534118652, 2.1454098224639893, 2.1382856369018555, 2.1312522888183594, 2.1243104934692383, 2.1174614429473877, 2.110705614089966, 2.104044198989868, 2.097477912902832, 2.091007947921753, 2.084635019302368, 2.078359842300415, 2.072183609008789, 2.0661072731018066, 2.060131311416626, 2.0542566776275635, 2.0484845638275146, 2.042815685272217, 2.0372507572174072, 2.0317907333374023, 2.0264365673065186, 2.021188974380493, 2.0160489082336426, 2.011017084121704, 2.006094217300415, 2.001281261444092, 1.9965790510177612, 1.9919883012771606, 1.987509846687317, 1.9831442832946777, 1.9788925647735596, 1.9747551679611206, 1.9707331657409668, 1.9668269157409668, 1.963037371635437, 1.9593650102615356, 1.9558106660842896, 1.952374815940857, 1.9490582942962646, 1.9458614587783813, 1.9427851438522339, 1.939829707145691, 1.9369958639144897, 1.9342840909957886, 1.9316949844360352, 1.9292287826538086, 1.9268862009048462, 1.9246677160263062, 1.9225735664367676, 1.9206042289733887, 1.9187601804733276, 1.9170416593551636, 1.9154491424560547, 1.9139827489852905, 1.9126429557800293, 1.91143000125885, 1.9103440046310425, 1.9093852043151855, 1.908553957939148, 1.9078502655029297, 1.9072743654251099, 1.9068262577056885, 1.9065061807632446, 1.9063140153884888, 1.921875, 1.9219385385513306, 1.9221290349960327, 1.922446608543396, 1.9228910207748413, 1.9234622716903687, 1.9241602420806885, 1.9249848127365112, 1.9259357452392578, 1.9270129203796387, 1.9282162189483643, 1.9295451641082764, 1.9309996366500854, 1.9325793981552124, 1.9342840909957886, 1.9361133575439453, 1.9380669593811035, 1.940144419670105, 1.9423452615737915, 1.944669246673584, 1.9471157789230347, 1.949684500694275, 1.952374815940857, 1.955186367034912, 1.9581185579299927, 1.9611709117889404, 1.9643428325653076, 1.967633605003357, 1.9710427522659302, 1.9745697975158691, 1.978213906288147, 1.981974482536316, 1.9858508110046387, 1.989842414855957, 1.9939483404159546, 1.9981681108474731, 2.0025007724761963, 2.006945848464966, 2.011502504348755, 2.016170024871826, 2.0209474563598633, 2.025834083557129, 2.0308291912078857, 2.0359320640563965, 2.0411417484283447, 2.046457529067993, 2.0518784523010254, 2.057403802871704, 2.063032627105713, 2.0687642097473145, 2.0745975971221924, 2.0805320739746094, 2.08656644821167, 2.092700242996216, 2.0989325046539307, 2.105262279510498, 2.1116886138916016, 2.118210554122925, 2.1248276233673096, 2.1315386295318604, 2.13834285736084, 2.1452391147613525, 2.152226686477661, 2.1593048572540283, 2.1664726734161377, 2.1737289428710938, 2.1810731887817383, 2.188504219055176, 2.196021318435669, 2.2036235332489014, 2.2113101482391357, 2.2190799713134766, 2.2269325256347656, 2.2348666191101074, 2.2428815364837646, 2.250976324081421, 2.259150266647339, 2.267402410507202, 2.2757318019866943, 2.284137725830078, 2.292619466781616, 2.301175832748413, 2.3098063468933105, 2.318509817123413, 2.3272860050201416, 2.3361334800720215, 2.3450517654418945, 2.3540399074554443, 2.3630971908569336, 2.372222900390625, 2.381416082382202, 2.3906760215759277, 2.4000020027160645, 2.409393310546875, 2.418848991394043, 2.428368330001831, 2.437950611114502, 2.4475953578948975, 2.457301378250122, 2.4670681953430176, 2.4768950939178467, 2.486781358718872, 2.4967262744903564, 2.5067291259765625, 2.516789436340332, 2.5269060134887695, 2.537078619003296, 2.5473062992095947, 2.557588577270508, 2.567924976348877, 2.5783143043518066, 2.588756561279297, 2.599250555038452, 2.6097960472106934, 2.620392084121704, 2.6310384273529053, 2.6417341232299805, 2.6524789333343506, 2.663271903991699, 2.6741127967834473, 2.6850006580352783, 2.6959352493286133, 2.7069156169891357, 2.7179417610168457, 2.7290124893188477, 2.7401278018951416, 2.7512869834899902, 2.7624893188476562, 2.7737345695495605, 2.7624893188476562, 2.7512869834899902, 2.7401278018951416, 2.7290124893188477, 2.7179417610168457, 2.7069156169891357, 2.6959352493286133, 2.6850006580352783, 2.6741127967834473, 2.663271903991699, 2.6524789333343506, 2.6417341232299805, 2.6310384273529053, 2.620392084121704, 2.6097960472106934, 2.599250555038452, 2.588756561279297, 2.5783143043518066, 2.567924976348877, 2.557588577270508, 2.5473062992095947, 2.537078619003296, 2.5269060134887695, 2.516789436340332, 2.5067291259765625, 2.4967262744903564, 2.486781358718872, 2.4768950939178467, 2.4670681953430176, 2.457301378250122, 2.4475953578948975, 2.437950611114502, 2.428368330001831, 2.418848991394043, 2.409393310546875, 2.4000020027160645, 2.3906760215759277, 2.381416082382202, 2.372222900390625, 2.3630971908569336, 2.3540399074554443, 2.3450517654418945, 2.3361334800720215, 2.3272860050201416, 2.318509817123413, 2.3098063468933105, 2.301175832748413, 2.292619466781616, 2.284137725830078, 2.2757318019866943, 2.267402410507202, 2.259150266647339, 2.250976324081421, 2.2428815364837646, 2.2348666191101074, 2.2269325256347656, 2.2190799713134766, 2.2113101482391357, 2.2036235332489014, 2.196021318435669, 2.188504219055176, 2.1810731887817383, 2.1737289428710938, 2.1664726734161377, 2.1593048572540283, 2.152226686477661, 2.1452391147613525, 2.13834285736084, 2.1315386295318604, 2.1248276233673096, 2.118210554122925, 2.1116886138916016, 2.105262279510498, 2.0989325046539307, 2.092700242996216, 2.08656644821167, 2.0805320739746094, 2.0745975971221924, 2.0687642097473145, 2.063032627105713, 2.057403802871704, 2.0518784523010254, 2.046457529067993, 2.0411417484283447, 2.0359320640563965, 2.0308291912078857, 2.025834083557129, 2.0209474563598633, 2.016170024871826, 2.011502504348755, 2.006945848464966, 2.0025007724761963, 1.9981681108474731, 1.9939483404159546, 1.989842414855957, 1.9858508110046387, 1.981974482536316, 1.978213906288147, 1.9745697975158691, 1.9710427522659302, 1.967633605003357, 1.9643428325653076, 1.9611709117889404, 1.9581185579299927, 1.955186367034912, 1.952374815940857, 1.949684500694275, 1.9471157789230347, 1.944669246673584, 1.9423452615737915, 1.940144419670105, 1.9380669593811035, 1.9361133575439453, 1.9342840909957886, 1.9325793981552124, 1.9309996366500854, 1.9295451641082764, 1.9282162189483643, 1.9270129203796387, 1.9259357452392578, 1.9249848127365112, 1.9241602420806885, 1.9234622716903687, 1.9228910207748413, 1.922446608543396, 1.9221290349960327, 1.9219385385513306, 1.9375, 1.9375630617141724, 1.9377520084381104, 1.9380669593811035, 1.9385077953338623, 1.9390745162963867, 1.939766764640808, 1.9405847787857056, 1.941528081893921, 1.942596673965454, 1.9437901973724365, 1.9451085329055786, 1.9465514421463013, 1.9481185674667358, 1.9498096704483032, 1.9516243934631348, 1.9535624980926514, 1.9556233882904053, 1.957806944847107, 1.960112452507019, 1.962539792060852, 1.9650883674621582, 1.9677577018737793, 1.9705473184585571, 1.973456621170044, 1.976485252380371, 1.9796326160430908, 1.9828981161117554, 1.9862810373306274, 1.9897810220718384, 1.9933973550796509, 1.9971293210983276, 2.000976324081421, 2.0049376487731934, 2.0090129375457764, 2.0132009983062744, 2.0175015926361084, 2.021913528442383, 2.0264365673065186, 2.031069755554199, 2.0358121395111084, 2.040663242340088, 2.0456223487854004, 2.0506882667541504, 2.0558605194091797, 2.061138391494751, 2.0665206909179688, 2.072006940841675, 2.0775961875915527, 2.0832877159118652, 2.089080572128296, 2.0949740409851074, 2.1009669303894043, 2.1070590019226074, 2.113248825073242, 2.1195356845855713, 2.1259188652038574, 2.132397413253784, 2.1389706134796143, 2.145637273788452, 2.1523969173431396, 2.1592483520507812, 2.1661908626556396, 2.1732234954833984, 2.1803455352783203, 2.1875557899475098, 2.1948537826538086, 2.2022383213043213, 2.2097086906433105, 2.21726393699646, 2.2249033451080322, 2.232625961303711, 2.240431070327759, 2.2483174800872803, 2.256284713745117, 2.264331579208374, 2.2724573612213135, 2.2806613445281982, 2.288942575454712, 2.297300100326538, 2.3057334423065186, 2.314241409301758, 2.3228232860565186, 2.3314783573150635, 2.340205669403076, 2.3490045070648193, 2.3578741550445557, 2.3668136596679688, 2.3758223056793213, 2.384899139404297, 2.3940436840057373, 2.403254985809326, 2.412532329559326, 2.421875, 2.4312820434570312, 2.4407529830932617, 2.450286865234375, 2.459883213043213, 2.469541072845459, 2.479259729385376, 2.4890384674072266, 2.4988768100738525, 2.5087735652923584, 2.518728733062744, 2.5287411212921143, 2.5388100147247314, 2.5489351749420166, 2.559115409851074, 2.569350481033325, 2.5796396732330322, 2.589982271194458, 2.6003775596618652, 2.6108248233795166, 2.621323585510254, 2.631873369216919, 2.6424734592437744, 2.653123140335083, 2.6638219356536865, 2.6745691299438477, 2.685364246368408, 2.69620680809021, 2.7070960998535156, 2.718031406402588, 2.7290124893188477, 2.7400388717651367, 2.7511096000671387, 2.7622241973876953, 2.7733824253082275, 2.784583568572998, 2.7733824253082275, 2.7622241973876953, 2.7511096000671387, 2.7400388717651367, 2.7290124893188477, 2.718031406402588, 2.7070960998535156, 2.69620680809021, 2.685364246368408, 2.6745691299438477, 2.6638219356536865, 2.653123140335083, 2.6424734592437744, 2.631873369216919, 2.621323585510254, 2.6108248233795166, 2.6003775596618652, 2.589982271194458, 2.5796396732330322, 2.569350481033325, 2.559115409851074, 2.5489351749420166, 2.5388100147247314, 2.5287411212921143, 2.518728733062744, 2.5087735652923584, 2.4988768100738525, 2.4890384674072266, 2.479259729385376, 2.469541072845459, 2.459883213043213, 2.450286865234375, 2.4407529830932617, 2.4312820434570312, 2.421875, 2.412532329559326, 2.403254985809326, 2.3940436840057373, 2.384899139404297, 2.3758223056793213, 2.3668136596679688, 2.3578741550445557, 2.3490045070648193, 2.340205669403076, 2.3314783573150635, 2.3228232860565186, 2.314241409301758, 2.3057334423065186, 2.297300100326538, 2.288942575454712, 2.2806613445281982, 2.2724573612213135, 2.264331579208374, 2.256284713745117, 2.2483174800872803, 2.240431070327759, 2.232625961303711, 2.2249033451080322, 2.21726393699646, 2.2097086906433105, 2.2022383213043213, 2.1948537826538086, 2.1875557899475098, 2.1803455352783203, 2.1732234954833984, 2.1661908626556396, 2.1592483520507812, 2.1523969173431396, 2.145637273788452, 2.1389706134796143, 2.132397413253784, 2.1259188652038574, 2.1195356845855713, 2.113248825073242, 2.1070590019226074, 2.1009669303894043, 2.0949740409851074, 2.089080572128296, 2.0832877159118652, 2.0775961875915527, 2.072006940841675, 2.0665206909179688, 2.061138391494751, 2.0558605194091797, 2.0506882667541504, 2.0456223487854004, 2.040663242340088, 2.0358121395111084, 2.031069755554199, 2.0264365673065186, 2.021913528442383, 2.0175015926361084, 2.0132009983062744, 2.0090129375457764, 2.0049376487731934, 2.000976324081421, 1.9971293210983276, 1.9933973550796509, 1.9897810220718384, 1.9862810373306274, 1.9828981161117554, 1.9796326160430908, 1.976485252380371, 1.973456621170044, 1.9705473184585571, 1.9677577018737793, 1.9650883674621582, 1.962539792060852, 1.960112452507019, 1.957806944847107, 1.9556233882904053, 1.9535624980926514, 1.9516243934631348, 1.9498096704483032, 1.9481185674667358, 1.9465514421463013, 1.9451085329055786, 1.9437901973724365, 1.942596673965454, 1.941528081893921, 1.9405847787857056, 1.939766764640808, 1.9390745162963867, 1.9385077953338623, 1.9380669593811035, 1.9377520084381104, 1.9375630617141724, 1.953125, 1.9531874656677246, 1.953374981880188, 1.9536874294281006, 1.9541246891021729, 1.9546868801116943, 1.955373764038086, 1.9561851024627686, 1.9571208953857422, 1.9581809043884277, 1.9593650102615356, 1.9606729745864868, 1.962104320526123, 1.9636590480804443, 1.965336799621582, 1.9671372175216675, 1.969059944152832, 1.9711047410964966, 1.973271131515503, 1.9755586385726929, 1.9779670238494873, 1.9804956912994385, 1.9831442832946777, 1.9859123229980469, 1.9887992143630981, 1.9918044805526733, 1.9949276447296143, 1.9981681108474731, 2.001525402069092, 2.0049986839294434, 2.008587598800659, 2.012291431427002, 2.0161094665527344, 2.0200412273406982, 2.0240859985351562, 2.028243064880371, 2.0325117111206055, 2.036891222000122, 2.0413808822631836, 2.045980215072632, 2.0506882667541504, 2.055504322052002, 2.06042742729187, 2.0654571056365967, 2.0705926418304443, 2.0758328437805176, 2.081177234649658, 2.086625099182129, 2.092175245285034, 2.097827196121216, 2.1035799980163574, 2.1094329357147217, 2.115385055541992, 2.1214354038238525, 2.1275835037231445, 2.1338281631469727, 2.1401686668395996, 2.146604299545288, 2.1531341075897217, 2.159757137298584, 2.1664726734161377, 2.1732797622680664, 2.1801774501800537, 2.1871652603149414, 2.194241762161255, 2.201406717300415, 2.2086589336395264, 2.2159974575042725, 2.223421573638916, 2.2309305667877197, 2.238523244857788, 2.246199131011963, 2.2539570331573486, 2.261796236038208, 2.2697160243988037, 2.2777156829833984, 2.2857937812805176, 2.293950080871582, 2.3021833896636963, 2.310493230819702, 2.318878412246704, 2.327338457107544, 2.335872173309326, 2.3444790840148926, 2.3531582355499268, 2.3619089126586914, 2.37073016166687, 2.3796212673187256, 2.3885817527770996, 2.3976101875305176, 2.4067065715789795, 2.4158694744110107, 2.4250986576080322, 2.4343931674957275, 2.4437520503997803, 2.4531748294830322, 2.462660551071167, 2.4722087383270264, 2.481818675994873, 2.4914894104003906, 2.501220464706421, 2.5110108852386475, 2.520860195159912, 2.5307676792144775, 2.5407326221466064, 2.5507543087005615, 2.5608322620391846, 2.570965528488159, 2.581153631210327, 2.591395854949951, 2.601691484451294, 2.6120402812957764, 2.622441053390503, 2.6328935623168945, 2.643397331237793, 2.6539511680603027, 2.664555072784424, 2.67520809173584, 2.6859097480773926, 2.696659564971924, 2.7074568271636963, 2.7183010578155518, 2.729191541671753, 2.7401278018951416, 2.7511096000671387, 2.7621359825134277, 2.7732064723968506, 2.784320592880249, 2.795478105545044, 2.784320592880249, 2.7732064723968506, 2.7621359825134277, 2.7511096000671387, 2.7401278018951416, 2.729191541671753, 2.7183010578155518, 2.7074568271636963, 2.696659564971924, 2.6859097480773926, 2.67520809173584, 2.664555072784424, 2.6539511680603027, 2.643397331237793, 2.6328935623168945, 2.622441053390503, 2.6120402812957764, 2.601691484451294, 2.591395854949951, 2.581153631210327, 2.570965528488159, 2.5608322620391846, 2.5507543087005615, 2.5407326221466064, 2.5307676792144775, 2.520860195159912, 2.5110108852386475, 2.501220464706421, 2.4914894104003906, 2.481818675994873, 2.4722087383270264, 2.462660551071167, 2.4531748294830322, 2.4437520503997803, 2.4343931674957275, 2.4250986576080322, 2.4158694744110107, 2.4067065715789795, 2.3976101875305176, 2.3885817527770996, 2.3796212673187256, 2.37073016166687, 2.3619089126586914, 2.3531582355499268, 2.3444790840148926, 2.335872173309326, 2.327338457107544, 2.318878412246704, 2.310493230819702, 2.3021833896636963, 2.293950080871582, 2.2857937812805176, 2.2777156829833984, 2.2697160243988037, 2.261796236038208, 2.2539570331573486, 2.246199131011963, 2.238523244857788, 2.2309305667877197, 2.223421573638916, 2.2159974575042725, 2.2086589336395264, 2.201406717300415, 2.194241762161255, 2.1871652603149414, 2.1801774501800537, 2.1732797622680664, 2.1664726734161377, 2.159757137298584, 2.1531341075897217, 2.146604299545288, 2.1401686668395996, 2.1338281631469727, 2.1275835037231445, 2.1214354038238525, 2.115385055541992, 2.1094329357147217, 2.1035799980163574, 2.097827196121216, 2.092175245285034, 2.086625099182129, 2.081177234649658, 2.0758328437805176, 2.0705926418304443, 2.0654571056365967, 2.06042742729187, 2.055504322052002, 2.0506882667541504, 2.045980215072632, 2.0413808822631836, 2.036891222000122, 2.0325117111206055, 2.028243064880371, 2.0240859985351562, 2.0200412273406982, 2.0161094665527344, 2.012291431427002, 2.008587598800659, 2.0049986839294434, 2.001525402069092, 1.9981681108474731, 1.9949276447296143, 1.9918044805526733, 1.9887992143630981, 1.9859123229980469, 1.9831442832946777, 1.9804956912994385, 1.9779670238494873, 1.9755586385726929, 1.973271131515503, 1.9711047410964966, 1.969059944152832, 1.9671372175216675, 1.965336799621582, 1.9636590480804443, 1.962104320526123, 1.9606729745864868, 1.9593650102615356, 1.9581809043884277, 1.9571208953857422, 1.9561851024627686, 1.955373764038086, 1.9546868801116943, 1.9541246891021729, 1.9536874294281006, 1.953374981880188, 1.9531874656677246, 1.96875, 1.9688119888305664, 1.9689979553222656, 1.9693078994750977, 1.9697418212890625, 1.970299482345581, 1.9709808826446533, 1.9717859029769897, 1.9727143049240112, 1.9737659692764282, 1.9749406576156616, 1.9762382507324219, 1.9776583909988403, 1.9792009592056274, 1.980865478515625, 1.9826518297195435, 1.9845595359802246, 1.9865883588790894, 1.9887378215789795, 1.9910075664520264, 1.9933973550796509, 1.9959064722061157, 1.9985345602035522, 2.001281261444092, 2.004146099090576, 2.0071284770965576, 2.010227680206299, 2.0134434700012207, 2.016775369644165, 2.0202224254608154, 2.0237843990325928, 2.0274603366851807, 2.03125, 2.0351524353027344, 2.0391671657562256, 2.0432937145233154, 2.0475308895111084, 2.0518784523010254, 2.05633544921875, 2.060901403427124, 2.065575361251831, 2.070356607437134, 2.075244665145874, 2.0802385807037354, 2.0853376388549805, 2.090540885925293, 2.0958478450775146, 2.101257562637329, 2.106769323348999, 2.112382173538208, 2.1180953979492188, 2.123908281326294, 2.129819869995117, 2.135829448699951, 2.1419363021850586, 2.148139238357544, 2.15443754196167, 2.1608307361602783, 2.1673176288604736, 2.1738975048065186, 2.1805694103240967, 2.1873326301574707, 2.194186210632324, 2.20112943649292, 2.2081613540649414, 2.2152812480926514, 2.2224881649017334, 2.229781150817871, 2.237159490585327, 2.2446224689483643, 2.252169132232666, 2.259798526763916, 2.267509937286377, 2.2753026485443115, 2.283175468444824, 2.291127920150757, 2.299159049987793, 2.3072681427001953, 2.3154542446136475, 2.323716402053833, 2.3320541381835938, 2.3404664993286133, 2.348952531814575, 2.3575117588043213, 2.366142988204956, 2.3748457431793213, 2.3836193084716797, 2.3924624919891357, 2.4013748168945312, 2.410355567932129, 2.4194040298461914, 2.4285190105438232, 2.4377002716064453, 2.446946859359741, 2.4562580585479736, 2.465632915496826, 2.4750709533691406, 2.4845714569091797, 2.494133710861206, 2.5037569999694824, 2.5134403705596924, 2.523183584213257, 2.5329854488372803, 2.5428457260131836, 2.5527634620666504, 2.5627381801605225, 2.5727691650390625, 2.582855463027954, 2.592996835708618, 2.6031925678253174, 2.6134417057037354, 2.623744010925293, 2.634098768234253, 2.644505262374878, 2.6549630165100098, 2.665471076965332, 2.6760292053222656, 2.6866369247436523, 2.697293281555176, 2.7079977989196777, 2.71875, 2.7295494079589844, 2.7403950691223145, 2.7512869834899902, 2.7622241973876953, 2.7732064723968506, 2.7842328548431396, 2.7953033447265625, 2.8064169883728027, 2.7953033447265625, 2.7842328548431396, 2.7732064723968506, 2.7622241973876953, 2.7512869834899902, 2.7403950691223145, 2.7295494079589844, 2.71875, 2.7079977989196777, 2.697293281555176, 2.6866369247436523, 2.6760292053222656, 2.665471076965332, 2.6549630165100098, 2.644505262374878, 2.634098768234253, 2.623744010925293, 2.6134417057037354, 2.6031925678253174, 2.592996835708618, 2.582855463027954, 2.5727691650390625, 2.5627381801605225, 2.5527634620666504, 2.5428457260131836, 2.5329854488372803, 2.523183584213257, 2.5134403705596924, 2.5037569999694824, 2.494133710861206, 2.4845714569091797, 2.4750709533691406, 2.465632915496826, 2.4562580585479736, 2.446946859359741, 2.4377002716064453, 2.4285190105438232, 2.4194040298461914, 2.410355567932129, 2.4013748168945312, 2.3924624919891357, 2.3836193084716797, 2.3748457431793213, 2.366142988204956, 2.3575117588043213, 2.348952531814575, 2.3404664993286133, 2.3320541381835938, 2.323716402053833, 2.3154542446136475, 2.3072681427001953, 2.299159049987793, 2.291127920150757, 2.283175468444824, 2.2753026485443115, 2.267509937286377, 2.259798526763916, 2.252169132232666, 2.2446224689483643, 2.237159490585327, 2.229781150817871, 2.2224881649017334, 2.2152812480926514, 2.2081613540649414, 2.20112943649292, 2.194186210632324, 2.1873326301574707, 2.1805694103240967, 2.1738975048065186, 2.1673176288604736, 2.1608307361602783, 2.15443754196167, 2.148139238357544, 2.1419363021850586, 2.135829448699951, 2.129819869995117, 2.123908281326294, 2.1180953979492188, 2.112382173538208, 2.106769323348999, 2.101257562637329, 2.0958478450775146, 2.090540885925293, 2.0853376388549805, 2.0802385807037354, 2.075244665145874, 2.070356607437134, 2.065575361251831, 2.060901403427124, 2.05633544921875, 2.0518784523010254, 2.0475308895111084, 2.0432937145233154, 2.0391671657562256, 2.0351524353027344, 2.03125, 2.0274603366851807, 2.0237843990325928, 2.0202224254608154, 2.016775369644165, 2.0134434700012207, 2.010227680206299, 2.0071284770965576, 2.004146099090576, 2.001281261444092, 1.9985345602035522, 1.9959064722061157, 1.9933973550796509, 1.9910075664520264, 1.9887378215789795, 1.9865883588790894, 1.9845595359802246, 1.9826518297195435, 1.980865478515625, 1.9792009592056274, 1.9776583909988403, 1.9762382507324219, 1.9749406576156616, 1.9737659692764282, 1.9727143049240112, 1.9717859029769897, 1.9709808826446533, 1.970299482345581, 1.9697418212890625, 1.9693078994750977, 1.9689979553222656, 1.9688119888305664, 1.984375, 1.9844365119934082, 1.9846210479736328, 1.9849286079406738, 1.9853589534759521, 1.9859123229980469, 1.9865883588790894, 1.98738694190979, 1.988308072090149, 1.989351511001587, 1.990517020225525, 1.9918044805526733, 1.9932135343551636, 1.994744062423706, 1.9963957071304321, 1.9981681108474731, 2.00006103515625, 2.0020740032196045, 2.004206895828247, 2.0064592361450195, 2.0088305473327637, 2.0113205909729004, 2.0139286518096924, 2.0166542530059814, 2.0194971561431885, 2.0224568843841553, 2.0255327224731445, 2.028724431991577, 2.0320310592651367, 2.035452365875244, 2.038987636566162, 2.0426363945007324, 2.0463979244232178, 2.050271511077881, 2.0542566776275635, 2.0583529472351074, 2.062559127807617, 2.0668749809265137, 2.0712997913360596, 2.0758328437805176, 2.0804731845855713, 2.0852205753326416, 2.090073823928833, 2.095032215118408, 2.100095272064209, 2.105262279510498, 2.11053204536438, 2.1159043312072754, 2.121377944946289, 2.1269521713256836, 2.132626533508301, 2.138399839401245, 2.1442716121673584, 2.150240659713745, 2.156306505203247, 2.162468433380127, 2.1687252521514893, 2.1750762462615967, 2.181520938873291, 2.1880578994750977, 2.1946868896484375, 2.201406717300415, 2.208216667175293, 2.215115785598755, 2.2221035957336426, 2.2291789054870605, 2.2363409996032715, 2.243588924407959, 2.250922203063965, 2.2583396434783936, 2.265840530395508, 2.2734241485595703, 2.2810895442962646, 2.2888357639312744, 2.2966623306274414, 2.304568290710449, 2.3125526905059814, 2.32061505317688, 2.328754186630249, 2.3369693756103516, 2.34525990486145, 2.3536250591278076, 2.3620638847351074, 2.3705756664276123, 2.379159688949585, 2.387814998626709, 2.396540880203247, 2.405336618423462, 2.414201498031616, 2.4231348037719727, 2.432135581970215, 2.4412031173706055, 2.4503366947174072, 2.459535837173462, 2.468799352645874, 2.4781270027160645, 2.4875175952911377, 2.4969708919525146, 2.5064857006073, 2.516061782836914, 2.525697946548462, 2.5353939533233643, 2.5451488494873047, 2.554962158203125, 2.564833164215088, 2.574761152267456, 2.584745168685913, 2.594785213470459, 2.6048800945281982, 2.6150293350219727, 2.625232458114624, 2.635488748550415, 2.6457974910736084, 2.656157970428467, 2.666569948196411, 2.677032709121704, 2.6875455379486084, 2.6981077194213867, 2.70871901512146, 2.7193784713745117, 2.730085849761963, 2.7408406734466553, 2.7516419887542725, 2.7624893188476562, 2.7733824253082275, 2.784320592880249, 2.7953033447265625, 2.8063299655914307, 2.8174002170562744, 2.8063299655914307, 2.7953033447265625, 2.784320592880249, 2.7733824253082275, 2.7624893188476562, 2.7516419887542725, 2.7408406734466553, 2.730085849761963, 2.7193784713745117, 2.70871901512146, 2.6981077194213867, 2.6875455379486084, 2.677032709121704, 2.666569948196411, 2.656157970428467, 2.6457974910736084, 2.635488748550415, 2.625232458114624, 2.6150293350219727, 2.6048800945281982, 2.594785213470459, 2.584745168685913, 2.574761152267456, 2.564833164215088, 2.554962158203125, 2.5451488494873047, 2.5353939533233643, 2.525697946548462, 2.516061782836914, 2.5064857006073, 2.4969708919525146, 2.4875175952911377, 2.4781270027160645, 2.468799352645874, 2.459535837173462, 2.4503366947174072, 2.4412031173706055, 2.432135581970215, 2.4231348037719727, 2.414201498031616, 2.405336618423462, 2.396540880203247, 2.387814998626709, 2.379159688949585, 2.3705756664276123, 2.3620638847351074, 2.3536250591278076, 2.34525990486145, 2.3369693756103516, 2.328754186630249, 2.32061505317688, 2.3125526905059814, 2.304568290710449, 2.2966623306274414, 2.2888357639312744, 2.2810895442962646, 2.2734241485595703, 2.265840530395508, 2.2583396434783936, 2.250922203063965, 2.243588924407959, 2.2363409996032715, 2.2291789054870605, 2.2221035957336426, 2.215115785598755, 2.208216667175293, 2.201406717300415, 2.1946868896484375, 2.1880578994750977, 2.181520938873291, 2.1750762462615967, 2.1687252521514893, 2.162468433380127, 2.156306505203247, 2.150240659713745, 2.1442716121673584, 2.138399839401245, 2.132626533508301, 2.1269521713256836, 2.121377944946289, 2.1159043312072754, 2.11053204536438, 2.105262279510498, 2.100095272064209, 2.095032215118408, 2.090073823928833, 2.0852205753326416, 2.0804731845855713, 2.0758328437805176, 2.0712997913360596, 2.0668749809265137, 2.062559127807617, 2.0583529472351074, 2.0542566776275635, 2.050271511077881, 2.0463979244232178, 2.0426363945007324, 2.038987636566162, 2.035452365875244, 2.0320310592651367, 2.028724431991577, 2.0255327224731445, 2.0224568843841553, 2.0194971561431885, 2.0166542530059814, 2.0139286518096924, 2.0113205909729004, 2.0088305473327637, 2.0064592361450195, 2.004206895828247, 2.0020740032196045, 2.00006103515625, 1.9981681108474731, 1.9963957071304321, 1.994744062423706, 1.9932135343551636, 1.9918044805526733, 1.990517020225525, 1.989351511001587, 1.988308072090149, 1.98738694190979, 1.9865883588790894, 1.9859123229980469, 1.9853589534759521, 1.9849286079406738, 1.9846210479736328, 1.9844365119934082, 2.0, 2.00006103515625, 2.000244140625, 2.00054931640625, 2.000976324081421, 2.001525402069092, 2.0021960735321045, 2.002988576889038, 2.0039024353027344, 2.0049376487731934, 2.006094217300415, 2.007371664047241, 2.0087697505950928, 2.0102884769439697, 2.011927366256714, 2.013686180114746, 2.015564441680908, 2.0175621509552, 2.0196785926818848, 2.021913528442383, 2.0242669582366943, 2.026737689971924, 2.0293259620666504, 2.0320310592651367, 2.0348525047302246, 2.037790060043335, 2.0408427715301514, 2.0440104007720947, 2.047292470932007, 2.0506882667541504, 2.054197311401367, 2.057819128036499, 2.0615527629852295, 2.0653979778289795, 2.0693540573120117, 2.073420524597168, 2.0775961875915527, 2.081881046295166, 2.0862739086151123, 2.0907745361328125, 2.095381736755371, 2.100095272064209, 2.1049141883850098, 2.1098380088806152, 2.11486554145813, 2.1199963092803955, 2.125229835510254, 2.1305649280548096, 2.136000871658325, 2.1415371894836426, 2.1471729278564453, 2.152907371520996, 2.1587395668029785, 2.1646687984466553, 2.170694351196289, 2.1768155097961426, 2.1830310821533203, 2.189340829849243, 2.1957433223724365, 2.2022383213043213, 2.208824634552002, 2.215501546859741, 2.2222683429718018, 2.229124069213867, 2.2360680103302, 2.2430992126464844, 2.2502169609069824, 2.257420539855957, 2.2647087574005127, 2.2720813751220703, 2.2795369625091553, 2.2870752811431885, 2.2946949005126953, 2.3023955821990967, 2.310176134109497, 2.3180360794067383, 2.325974225997925, 2.3339900970458984, 2.3420827388763428, 2.3502514362335205, 2.3584952354431152, 2.3668136596679688, 2.3752055168151855, 2.3836703300476074, 2.392207384109497, 2.400815725326538, 2.409494638442993, 2.418243169784546, 2.427061080932617, 2.4359469413757324, 2.4449005126953125, 2.45392107963562, 2.4630074501037598, 2.4721593856811523, 2.4813759326934814, 2.4906563758850098, 2.5, 2.509406089782715, 2.518874168395996, 2.5284030437469482, 2.537992477416992, 2.5476417541503906, 2.557349920272827, 2.5671167373657227, 2.5769410133361816, 2.586822509765625, 2.5967602729797363, 2.6067538261413574, 2.61680269241333, 2.626905918121338, 2.6370630264282227, 2.647273540496826, 2.657536506652832, 2.667851448059082, 2.678217887878418, 2.6886353492736816, 2.6991028785705566, 2.7096199989318848, 2.720186471939087, 2.7308013439178467, 2.741464138031006, 2.752174139022827, 2.7629313468933105, 2.7737345695495605, 2.784583568572998, 2.795478105545044, 2.8064169883728027, 2.8174002170562744, 2.8284270763397217, 2.8174002170562744, 2.8064169883728027, 2.795478105545044, 2.784583568572998, 2.7737345695495605, 2.7629313468933105, 2.752174139022827, 2.741464138031006, 2.7308013439178467, 2.720186471939087, 2.7096199989318848, 2.6991028785705566, 2.6886353492736816, 2.678217887878418, 2.667851448059082, 2.657536506652832, 2.647273540496826, 2.6370630264282227, 2.626905918121338, 2.61680269241333, 2.6067538261413574, 2.5967602729797363, 2.586822509765625, 2.5769410133361816, 2.5671167373657227, 2.557349920272827, 2.5476417541503906, 2.537992477416992, 2.5284030437469482, 2.518874168395996, 2.509406089782715, 2.5, 2.4906563758850098, 2.4813759326934814, 2.4721593856811523, 2.4630074501037598, 2.45392107963562, 2.4449005126953125, 2.4359469413757324, 2.427061080932617, 2.418243169784546, 2.409494638442993, 2.400815725326538, 2.392207384109497, 2.3836703300476074, 2.3752055168151855, 2.3668136596679688, 2.3584952354431152, 2.3502514362335205, 2.3420827388763428, 2.3339900970458984, 2.325974225997925, 2.3180360794067383, 2.310176134109497, 2.3023955821990967, 2.2946949005126953, 2.2870752811431885, 2.2795369625091553, 2.2720813751220703, 2.2647087574005127, 2.257420539855957, 2.2502169609069824, 2.2430992126464844, 2.2360680103302, 2.229124069213867, 2.2222683429718018, 2.215501546859741, 2.208824634552002, 2.2022383213043213, 2.1957433223724365, 2.189340829849243, 2.1830310821533203, 2.1768155097961426, 2.170694351196289, 2.1646687984466553, 2.1587395668029785, 2.152907371520996, 2.1471729278564453, 2.1415371894836426, 2.136000871658325, 2.1305649280548096, 2.125229835510254, 2.1199963092803955, 2.11486554145813, 2.1098380088806152, 2.1049141883850098, 2.100095272064209, 2.095381736755371, 2.0907745361328125, 2.0862739086151123, 2.081881046295166, 2.0775961875915527, 2.073420524597168, 2.0693540573120117, 2.0653979778289795, 2.0615527629852295, 2.057819128036499, 2.054197311401367, 2.0506882667541504, 2.047292470932007, 2.0440104007720947, 2.0408427715301514, 2.037790060043335, 2.0348525047302246, 2.0320310592651367, 2.0293259620666504, 2.026737689971924, 2.0242669582366943, 2.021913528442383, 2.0196785926818848, 2.0175621509552, 2.015564441680908, 2.013686180114746, 2.011927366256714, 2.0102884769439697, 2.0087697505950928, 2.007371664047241, 2.006094217300415, 2.0049376487731934, 2.0039024353027344, 2.002988576889038, 2.0021960735321045, 2.001525402069092, 2.000976324081421, 2.00054931640625, 2.000244140625, 2.00006103515625, 1.984375, 1.9844365119934082, 1.9846210479736328, 1.9849286079406738, 1.9853589534759521, 1.9859123229980469, 1.9865883588790894, 1.98738694190979, 1.988308072090149, 1.989351511001587, 1.990517020225525, 1.9918044805526733, 1.9932135343551636, 1.994744062423706, 1.9963957071304321, 1.9981681108474731, 2.00006103515625, 2.0020740032196045, 2.004206895828247, 2.0064592361450195, 2.0088305473327637, 2.0113205909729004, 2.0139286518096924, 2.0166542530059814, 2.0194971561431885, 2.0224568843841553, 2.0255327224731445, 2.028724431991577, 2.0320310592651367, 2.035452365875244, 2.038987636566162, 2.0426363945007324, 2.0463979244232178, 2.050271511077881, 2.0542566776275635, 2.0583529472351074, 2.062559127807617, 2.0668749809265137, 2.0712997913360596, 2.0758328437805176, 2.0804731845855713, 2.0852205753326416, 2.090073823928833, 2.095032215118408, 2.100095272064209, 2.105262279510498, 2.11053204536438, 2.1159043312072754, 2.121377944946289, 2.1269521713256836, 2.132626533508301, 2.138399839401245, 2.1442716121673584, 2.150240659713745, 2.156306505203247, 2.162468433380127, 2.1687252521514893, 2.1750762462615967, 2.181520938873291, 2.1880578994750977, 2.1946868896484375, 2.201406717300415, 2.208216667175293, 2.215115785598755, 2.2221035957336426, 2.2291789054870605, 2.2363409996032715, 2.243588924407959, 2.250922203063965, 2.2583396434783936, 2.265840530395508, 2.2734241485595703, 2.2810895442962646, 2.2888357639312744, 2.2966623306274414, 2.304568290710449, 2.3125526905059814, 2.32061505317688, 2.328754186630249, 2.3369693756103516, 2.34525990486145, 2.3536250591278076, 2.3620638847351074, 2.3705756664276123, 2.379159688949585, 2.387814998626709, 2.396540880203247, 2.405336618423462, 2.414201498031616, 2.4231348037719727, 2.432135581970215, 2.4412031173706055, 2.4503366947174072, 2.459535837173462, 2.468799352645874, 2.4781270027160645, 2.4875175952911377, 2.4969708919525146, 2.5064857006073, 2.516061782836914, 2.525697946548462, 2.5353939533233643, 2.5451488494873047, 2.554962158203125, 2.564833164215088, 2.574761152267456, 2.584745168685913, 2.594785213470459, 2.6048800945281982, 2.6150293350219727, 2.625232458114624, 2.635488748550415, 2.6457974910736084, 2.656157970428467, 2.666569948196411, 2.677032709121704, 2.6875455379486084, 2.6981077194213867, 2.70871901512146, 2.7193784713745117, 2.730085849761963, 2.7408406734466553, 2.7516419887542725, 2.7624893188476562, 2.7733824253082275, 2.784320592880249, 2.7953033447265625, 2.8063299655914307, 2.8174002170562744, 2.8063299655914307, 2.7953033447265625, 2.784320592880249, 2.7733824253082275, 2.7624893188476562, 2.7516419887542725, 2.7408406734466553, 2.730085849761963, 2.7193784713745117, 2.70871901512146, 2.6981077194213867, 2.6875455379486084, 2.677032709121704, 2.666569948196411, 2.656157970428467, 2.6457974910736084, 2.635488748550415, 2.625232458114624, 2.6150293350219727, 2.6048800945281982, 2.594785213470459, 2.584745168685913, 2.574761152267456, 2.564833164215088, 2.554962158203125, 2.5451488494873047, 2.5353939533233643, 2.525697946548462, 2.516061782836914, 2.5064857006073, 2.4969708919525146, 2.4875175952911377, 2.4781270027160645, 2.468799352645874, 2.459535837173462, 2.4503366947174072, 2.4412031173706055, 2.432135581970215, 2.4231348037719727, 2.414201498031616, 2.405336618423462, 2.396540880203247, 2.387814998626709, 2.379159688949585, 2.3705756664276123, 2.3620638847351074, 2.3536250591278076, 2.34525990486145, 2.3369693756103516, 2.328754186630249, 2.32061505317688, 2.3125526905059814, 2.304568290710449, 2.2966623306274414, 2.2888357639312744, 2.2810895442962646, 2.2734241485595703, 2.265840530395508, 2.2583396434783936, 2.250922203063965, 2.243588924407959, 2.2363409996032715, 2.2291789054870605, 2.2221035957336426, 2.215115785598755, 2.208216667175293, 2.201406717300415, 2.1946868896484375, 2.1880578994750977, 2.181520938873291, 2.1750762462615967, 2.1687252521514893, 2.162468433380127, 2.156306505203247, 2.150240659713745, 2.1442716121673584, 2.138399839401245, 2.132626533508301, 2.1269521713256836, 2.121377944946289, 2.1159043312072754, 2.11053204536438, 2.105262279510498, 2.100095272064209, 2.095032215118408, 2.090073823928833, 2.0852205753326416, 2.0804731845855713, 2.0758328437805176, 2.0712997913360596, 2.0668749809265137, 2.062559127807617, 2.0583529472351074, 2.0542566776275635, 2.050271511077881, 2.0463979244232178, 2.0426363945007324, 2.038987636566162, 2.035452365875244, 2.0320310592651367, 2.028724431991577, 2.0255327224731445, 2.0224568843841553, 2.0194971561431885, 2.0166542530059814, 2.0139286518096924, 2.0113205909729004, 2.0088305473327637, 2.0064592361450195, 2.004206895828247, 2.0020740032196045, 2.00006103515625, 1.9981681108474731, 1.9963957071304321, 1.994744062423706, 1.9932135343551636, 1.9918044805526733, 1.990517020225525, 1.989351511001587, 1.988308072090149, 1.98738694190979, 1.9865883588790894, 1.9859123229980469, 1.9853589534759521, 1.9849286079406738, 1.9846210479736328, 1.9844365119934082, 1.96875, 1.9688119888305664, 1.9689979553222656, 1.9693078994750977, 1.9697418212890625, 1.970299482345581, 1.9709808826446533, 1.9717859029769897, 1.9727143049240112, 1.9737659692764282, 1.9749406576156616, 1.9762382507324219, 1.9776583909988403, 1.9792009592056274, 1.980865478515625, 1.9826518297195435, 1.9845595359802246, 1.9865883588790894, 1.9887378215789795, 1.9910075664520264, 1.9933973550796509, 1.9959064722061157, 1.9985345602035522, 2.001281261444092, 2.004146099090576, 2.0071284770965576, 2.010227680206299, 2.0134434700012207, 2.016775369644165, 2.0202224254608154, 2.0237843990325928, 2.0274603366851807, 2.03125, 2.0351524353027344, 2.0391671657562256, 2.0432937145233154, 2.0475308895111084, 2.0518784523010254, 2.05633544921875, 2.060901403427124, 2.065575361251831, 2.070356607437134, 2.075244665145874, 2.0802385807037354, 2.0853376388549805, 2.090540885925293, 2.0958478450775146, 2.101257562637329, 2.106769323348999, 2.112382173538208, 2.1180953979492188, 2.123908281326294, 2.129819869995117, 2.135829448699951, 2.1419363021850586, 2.148139238357544, 2.15443754196167, 2.1608307361602783, 2.1673176288604736, 2.1738975048065186, 2.1805694103240967, 2.1873326301574707, 2.194186210632324, 2.20112943649292, 2.2081613540649414, 2.2152812480926514, 2.2224881649017334, 2.229781150817871, 2.237159490585327, 2.2446224689483643, 2.252169132232666, 2.259798526763916, 2.267509937286377, 2.2753026485443115, 2.283175468444824, 2.291127920150757, 2.299159049987793, 2.3072681427001953, 2.3154542446136475, 2.323716402053833, 2.3320541381835938, 2.3404664993286133, 2.348952531814575, 2.3575117588043213, 2.366142988204956, 2.3748457431793213, 2.3836193084716797, 2.3924624919891357, 2.4013748168945312, 2.410355567932129, 2.4194040298461914, 2.4285190105438232, 2.4377002716064453, 2.446946859359741, 2.4562580585479736, 2.465632915496826, 2.4750709533691406, 2.4845714569091797, 2.494133710861206, 2.5037569999694824, 2.5134403705596924, 2.523183584213257, 2.5329854488372803, 2.5428457260131836, 2.5527634620666504, 2.5627381801605225, 2.5727691650390625, 2.582855463027954, 2.592996835708618, 2.6031925678253174, 2.6134417057037354, 2.623744010925293, 2.634098768234253, 2.644505262374878, 2.6549630165100098, 2.665471076965332, 2.6760292053222656, 2.6866369247436523, 2.697293281555176, 2.7079977989196777, 2.71875, 2.7295494079589844, 2.7403950691223145, 2.7512869834899902, 2.7622241973876953, 2.7732064723968506, 2.7842328548431396, 2.7953033447265625, 2.8064169883728027, 2.7953033447265625, 2.7842328548431396, 2.7732064723968506, 2.7622241973876953, 2.7512869834899902, 2.7403950691223145, 2.7295494079589844, 2.71875, 2.7079977989196777, 2.697293281555176, 2.6866369247436523, 2.6760292053222656, 2.665471076965332, 2.6549630165100098, 2.644505262374878, 2.634098768234253, 2.623744010925293, 2.6134417057037354, 2.6031925678253174, 2.592996835708618, 2.582855463027954, 2.5727691650390625, 2.5627381801605225, 2.5527634620666504, 2.5428457260131836, 2.5329854488372803, 2.523183584213257, 2.5134403705596924, 2.5037569999694824, 2.494133710861206, 2.4845714569091797, 2.4750709533691406, 2.465632915496826, 2.4562580585479736, 2.446946859359741, 2.4377002716064453, 2.4285190105438232, 2.4194040298461914, 2.410355567932129, 2.4013748168945312, 2.3924624919891357, 2.3836193084716797, 2.3748457431793213, 2.366142988204956, 2.3575117588043213, 2.348952531814575, 2.3404664993286133, 2.3320541381835938, 2.323716402053833, 2.3154542446136475, 2.3072681427001953, 2.299159049987793, 2.291127920150757, 2.283175468444824, 2.2753026485443115, 2.267509937286377, 2.259798526763916, 2.252169132232666, 2.2446224689483643, 2.237159490585327, 2.229781150817871, 2.2224881649017334, 2.2152812480926514, 2.2081613540649414, 2.20112943649292, 2.194186210632324, 2.1873326301574707, 2.1805694103240967, 2.1738975048065186, 2.1673176288604736, 2.1608307361602783, 2.15443754196167, 2.148139238357544, 2.1419363021850586, 2.135829448699951, 2.129819869995117, 2.123908281326294, 2.1180953979492188, 2.112382173538208, 2.106769323348999, 2.101257562637329, 2.0958478450775146, 2.090540885925293, 2.0853376388549805, 2.0802385807037354, 2.075244665145874, 2.070356607437134, 2.065575361251831, 2.060901403427124, 2.05633544921875, 2.0518784523010254, 2.0475308895111084, 2.0432937145233154, 2.0391671657562256, 2.0351524353027344, 2.03125, 2.0274603366851807, 2.0237843990325928, 2.0202224254608154, 2.016775369644165, 2.0134434700012207, 2.010227680206299, 2.0071284770965576, 2.004146099090576, 2.001281261444092, 1.9985345602035522, 1.9959064722061157, 1.9933973550796509, 1.9910075664520264, 1.9887378215789795, 1.9865883588790894, 1.9845595359802246, 1.9826518297195435, 1.980865478515625, 1.9792009592056274, 1.9776583909988403, 1.9762382507324219, 1.9749406576156616, 1.9737659692764282, 1.9727143049240112, 1.9717859029769897, 1.9709808826446533, 1.970299482345581, 1.9697418212890625, 1.9693078994750977, 1.9689979553222656, 1.9688119888305664, 1.953125, 1.9531874656677246, 1.953374981880188, 1.9536874294281006, 1.9541246891021729, 1.9546868801116943, 1.955373764038086, 1.9561851024627686, 1.9571208953857422, 1.9581809043884277, 1.9593650102615356, 1.9606729745864868, 1.962104320526123, 1.9636590480804443, 1.965336799621582, 1.9671372175216675, 1.969059944152832, 1.9711047410964966, 1.973271131515503, 1.9755586385726929, 1.9779670238494873, 1.9804956912994385, 1.9831442832946777, 1.9859123229980469, 1.9887992143630981, 1.9918044805526733, 1.9949276447296143, 1.9981681108474731, 2.001525402069092, 2.0049986839294434, 2.008587598800659, 2.012291431427002, 2.0161094665527344, 2.0200412273406982, 2.0240859985351562, 2.028243064880371, 2.0325117111206055, 2.036891222000122, 2.0413808822631836, 2.045980215072632, 2.0506882667541504, 2.055504322052002, 2.06042742729187, 2.0654571056365967, 2.0705926418304443, 2.0758328437805176, 2.081177234649658, 2.086625099182129, 2.092175245285034, 2.097827196121216, 2.1035799980163574, 2.1094329357147217, 2.115385055541992, 2.1214354038238525, 2.1275835037231445, 2.1338281631469727, 2.1401686668395996, 2.146604299545288, 2.1531341075897217, 2.159757137298584, 2.1664726734161377, 2.1732797622680664, 2.1801774501800537, 2.1871652603149414, 2.194241762161255, 2.201406717300415, 2.2086589336395264, 2.2159974575042725, 2.223421573638916, 2.2309305667877197, 2.238523244857788, 2.246199131011963, 2.2539570331573486, 2.261796236038208, 2.2697160243988037, 2.2777156829833984, 2.2857937812805176, 2.293950080871582, 2.3021833896636963, 2.310493230819702, 2.318878412246704, 2.327338457107544, 2.335872173309326, 2.3444790840148926, 2.3531582355499268, 2.3619089126586914, 2.37073016166687, 2.3796212673187256, 2.3885817527770996, 2.3976101875305176, 2.4067065715789795, 2.4158694744110107, 2.4250986576080322, 2.4343931674957275, 2.4437520503997803, 2.4531748294830322, 2.462660551071167, 2.4722087383270264, 2.481818675994873, 2.4914894104003906, 2.501220464706421, 2.5110108852386475, 2.520860195159912, 2.5307676792144775, 2.5407326221466064, 2.5507543087005615, 2.5608322620391846, 2.570965528488159, 2.581153631210327, 2.591395854949951, 2.601691484451294, 2.6120402812957764, 2.622441053390503, 2.6328935623168945, 2.643397331237793, 2.6539511680603027, 2.664555072784424, 2.67520809173584, 2.6859097480773926, 2.696659564971924, 2.7074568271636963, 2.7183010578155518, 2.729191541671753, 2.7401278018951416, 2.7511096000671387, 2.7621359825134277, 2.7732064723968506, 2.784320592880249, 2.795478105545044, 2.784320592880249, 2.7732064723968506, 2.7621359825134277, 2.7511096000671387, 2.7401278018951416, 2.729191541671753, 2.7183010578155518, 2.7074568271636963, 2.696659564971924, 2.6859097480773926, 2.67520809173584, 2.664555072784424, 2.6539511680603027, 2.643397331237793, 2.6328935623168945, 2.622441053390503, 2.6120402812957764, 2.601691484451294, 2.591395854949951, 2.581153631210327, 2.570965528488159, 2.5608322620391846, 2.5507543087005615, 2.5407326221466064, 2.5307676792144775, 2.520860195159912, 2.5110108852386475, 2.501220464706421, 2.4914894104003906, 2.481818675994873, 2.4722087383270264, 2.462660551071167, 2.4531748294830322, 2.4437520503997803, 2.4343931674957275, 2.4250986576080322, 2.4158694744110107, 2.4067065715789795, 2.3976101875305176, 2.3885817527770996, 2.3796212673187256, 2.37073016166687, 2.3619089126586914, 2.3531582355499268, 2.3444790840148926, 2.335872173309326, 2.327338457107544, 2.318878412246704, 2.310493230819702, 2.3021833896636963, 2.293950080871582, 2.2857937812805176, 2.2777156829833984, 2.2697160243988037, 2.261796236038208, 2.2539570331573486, 2.246199131011963, 2.238523244857788, 2.2309305667877197, 2.223421573638916, 2.2159974575042725, 2.2086589336395264, 2.201406717300415, 2.194241762161255, 2.1871652603149414, 2.1801774501800537, 2.1732797622680664, 2.1664726734161377, 2.159757137298584, 2.1531341075897217, 2.146604299545288, 2.1401686668395996, 2.1338281631469727, 2.1275835037231445, 2.1214354038238525, 2.115385055541992, 2.1094329357147217, 2.1035799980163574, 2.097827196121216, 2.092175245285034, 2.086625099182129, 2.081177234649658, 2.0758328437805176, 2.0705926418304443, 2.0654571056365967, 2.06042742729187, 2.055504322052002, 2.0506882667541504, 2.045980215072632, 2.0413808822631836, 2.036891222000122, 2.0325117111206055, 2.028243064880371, 2.0240859985351562, 2.0200412273406982, 2.0161094665527344, 2.012291431427002, 2.008587598800659, 2.0049986839294434, 2.001525402069092, 1.9981681108474731, 1.9949276447296143, 1.9918044805526733, 1.9887992143630981, 1.9859123229980469, 1.9831442832946777, 1.9804956912994385, 1.9779670238494873, 1.9755586385726929, 1.973271131515503, 1.9711047410964966, 1.969059944152832, 1.9671372175216675, 1.965336799621582, 1.9636590480804443, 1.962104320526123, 1.9606729745864868, 1.9593650102615356, 1.9581809043884277, 1.9571208953857422, 1.9561851024627686, 1.955373764038086, 1.9546868801116943, 1.9541246891021729, 1.9536874294281006, 1.953374981880188, 1.9531874656677246, 1.9375, 1.9375630617141724, 1.9377520084381104, 1.9380669593811035, 1.9385077953338623, 1.9390745162963867, 1.939766764640808, 1.9405847787857056, 1.941528081893921, 1.942596673965454, 1.9437901973724365, 1.9451085329055786, 1.9465514421463013, 1.9481185674667358, 1.9498096704483032, 1.9516243934631348, 1.9535624980926514, 1.9556233882904053, 1.957806944847107, 1.960112452507019, 1.962539792060852, 1.9650883674621582, 1.9677577018737793, 1.9705473184585571, 1.973456621170044, 1.976485252380371, 1.9796326160430908, 1.9828981161117554, 1.9862810373306274, 1.9897810220718384, 1.9933973550796509, 1.9971293210983276, 2.000976324081421, 2.0049376487731934, 2.0090129375457764, 2.0132009983062744, 2.0175015926361084, 2.021913528442383, 2.0264365673065186, 2.031069755554199, 2.0358121395111084, 2.040663242340088, 2.0456223487854004, 2.0506882667541504, 2.0558605194091797, 2.061138391494751, 2.0665206909179688, 2.072006940841675, 2.0775961875915527, 2.0832877159118652, 2.089080572128296, 2.0949740409851074, 2.1009669303894043, 2.1070590019226074, 2.113248825073242, 2.1195356845855713, 2.1259188652038574, 2.132397413253784, 2.1389706134796143, 2.145637273788452, 2.1523969173431396, 2.1592483520507812, 2.1661908626556396, 2.1732234954833984, 2.1803455352783203, 2.1875557899475098, 2.1948537826538086, 2.2022383213043213, 2.2097086906433105, 2.21726393699646, 2.2249033451080322, 2.232625961303711, 2.240431070327759, 2.2483174800872803, 2.256284713745117, 2.264331579208374, 2.2724573612213135, 2.2806613445281982, 2.288942575454712, 2.297300100326538, 2.3057334423065186, 2.314241409301758, 2.3228232860565186, 2.3314783573150635, 2.340205669403076, 2.3490045070648193, 2.3578741550445557, 2.3668136596679688, 2.3758223056793213, 2.384899139404297, 2.3940436840057373, 2.403254985809326, 2.412532329559326, 2.421875, 2.4312820434570312, 2.4407529830932617, 2.450286865234375, 2.459883213043213, 2.469541072845459, 2.479259729385376, 2.4890384674072266, 2.4988768100738525, 2.5087735652923584, 2.518728733062744, 2.5287411212921143, 2.5388100147247314, 2.5489351749420166, 2.559115409851074, 2.569350481033325, 2.5796396732330322, 2.589982271194458, 2.6003775596618652, 2.6108248233795166, 2.621323585510254, 2.631873369216919, 2.6424734592437744, 2.653123140335083, 2.6638219356536865, 2.6745691299438477, 2.685364246368408, 2.69620680809021, 2.7070960998535156, 2.718031406402588, 2.7290124893188477, 2.7400388717651367, 2.7511096000671387, 2.7622241973876953, 2.7733824253082275, 2.784583568572998, 2.7733824253082275, 2.7622241973876953, 2.7511096000671387, 2.7400388717651367, 2.7290124893188477, 2.718031406402588, 2.7070960998535156, 2.69620680809021, 2.685364246368408, 2.6745691299438477, 2.6638219356536865, 2.653123140335083, 2.6424734592437744, 2.631873369216919, 2.621323585510254, 2.6108248233795166, 2.6003775596618652, 2.589982271194458, 2.5796396732330322, 2.569350481033325, 2.559115409851074, 2.5489351749420166, 2.5388100147247314, 2.5287411212921143, 2.518728733062744, 2.5087735652923584, 2.4988768100738525, 2.4890384674072266, 2.479259729385376, 2.469541072845459, 2.459883213043213, 2.450286865234375, 2.4407529830932617, 2.4312820434570312, 2.421875, 2.412532329559326, 2.403254985809326, 2.3940436840057373, 2.384899139404297, 2.3758223056793213, 2.3668136596679688, 2.3578741550445557, 2.3490045070648193, 2.340205669403076, 2.3314783573150635, 2.3228232860565186, 2.314241409301758, 2.3057334423065186, 2.297300100326538, 2.288942575454712, 2.2806613445281982, 2.2724573612213135, 2.264331579208374, 2.256284713745117, 2.2483174800872803, 2.240431070327759, 2.232625961303711, 2.2249033451080322, 2.21726393699646, 2.2097086906433105, 2.2022383213043213, 2.1948537826538086, 2.1875557899475098, 2.1803455352783203, 2.1732234954833984, 2.1661908626556396, 2.1592483520507812, 2.1523969173431396, 2.145637273788452, 2.1389706134796143, 2.132397413253784, 2.1259188652038574, 2.1195356845855713, 2.113248825073242, 2.1070590019226074, 2.1009669303894043, 2.0949740409851074, 2.089080572128296, 2.0832877159118652, 2.0775961875915527, 2.072006940841675, 2.0665206909179688, 2.061138391494751, 2.0558605194091797, 2.0506882667541504, 2.0456223487854004, 2.040663242340088, 2.0358121395111084, 2.031069755554199, 2.0264365673065186, 2.021913528442383, 2.0175015926361084, 2.0132009983062744, 2.0090129375457764, 2.0049376487731934, 2.000976324081421, 1.9971293210983276, 1.9933973550796509, 1.9897810220718384, 1.9862810373306274, 1.9828981161117554, 1.9796326160430908, 1.976485252380371, 1.973456621170044, 1.9705473184585571, 1.9677577018737793, 1.9650883674621582, 1.962539792060852, 1.960112452507019, 1.957806944847107, 1.9556233882904053, 1.9535624980926514, 1.9516243934631348, 1.9498096704483032, 1.9481185674667358, 1.9465514421463013, 1.9451085329055786, 1.9437901973724365, 1.942596673965454, 1.941528081893921, 1.9405847787857056, 1.939766764640808, 1.9390745162963867, 1.9385077953338623, 1.9380669593811035, 1.9377520084381104, 1.9375630617141724, 1.921875, 1.9219385385513306, 1.9221290349960327, 1.922446608543396, 1.9228910207748413, 1.9234622716903687, 1.9241602420806885, 1.9249848127365112, 1.9259357452392578, 1.9270129203796387, 1.9282162189483643, 1.9295451641082764, 1.9309996366500854, 1.9325793981552124, 1.9342840909957886, 1.9361133575439453, 1.9380669593811035, 1.940144419670105, 1.9423452615737915, 1.944669246673584, 1.9471157789230347, 1.949684500694275, 1.952374815940857, 1.955186367034912, 1.9581185579299927, 1.9611709117889404, 1.9643428325653076, 1.967633605003357, 1.9710427522659302, 1.9745697975158691, 1.978213906288147, 1.981974482536316, 1.9858508110046387, 1.989842414855957, 1.9939483404159546, 1.9981681108474731, 2.0025007724761963, 2.006945848464966, 2.011502504348755, 2.016170024871826, 2.0209474563598633, 2.025834083557129, 2.0308291912078857, 2.0359320640563965, 2.0411417484283447, 2.046457529067993, 2.0518784523010254, 2.057403802871704, 2.063032627105713, 2.0687642097473145, 2.0745975971221924, 2.0805320739746094, 2.08656644821167, 2.092700242996216, 2.0989325046539307, 2.105262279510498, 2.1116886138916016, 2.118210554122925, 2.1248276233673096, 2.1315386295318604, 2.13834285736084, 2.1452391147613525, 2.152226686477661, 2.1593048572540283, 2.1664726734161377, 2.1737289428710938, 2.1810731887817383, 2.188504219055176, 2.196021318435669, 2.2036235332489014, 2.2113101482391357, 2.2190799713134766, 2.2269325256347656, 2.2348666191101074, 2.2428815364837646, 2.250976324081421, 2.259150266647339, 2.267402410507202, 2.2757318019866943, 2.284137725830078, 2.292619466781616, 2.301175832748413, 2.3098063468933105, 2.318509817123413, 2.3272860050201416, 2.3361334800720215, 2.3450517654418945, 2.3540399074554443, 2.3630971908569336, 2.372222900390625, 2.381416082382202, 2.3906760215759277, 2.4000020027160645, 2.409393310546875, 2.418848991394043, 2.428368330001831, 2.437950611114502, 2.4475953578948975, 2.457301378250122, 2.4670681953430176, 2.4768950939178467, 2.486781358718872, 2.4967262744903564, 2.5067291259765625, 2.516789436340332, 2.5269060134887695, 2.537078619003296, 2.5473062992095947, 2.557588577270508, 2.567924976348877, 2.5783143043518066, 2.588756561279297, 2.599250555038452, 2.6097960472106934, 2.620392084121704, 2.6310384273529053, 2.6417341232299805, 2.6524789333343506, 2.663271903991699, 2.6741127967834473, 2.6850006580352783, 2.6959352493286133, 2.7069156169891357, 2.7179417610168457, 2.7290124893188477, 2.7401278018951416, 2.7512869834899902, 2.7624893188476562, 2.7737345695495605, 2.7624893188476562, 2.7512869834899902, 2.7401278018951416, 2.7290124893188477, 2.7179417610168457, 2.7069156169891357, 2.6959352493286133, 2.6850006580352783, 2.6741127967834473, 2.663271903991699, 2.6524789333343506, 2.6417341232299805, 2.6310384273529053, 2.620392084121704, 2.6097960472106934, 2.599250555038452, 2.588756561279297, 2.5783143043518066, 2.567924976348877, 2.557588577270508, 2.5473062992095947, 2.537078619003296, 2.5269060134887695, 2.516789436340332, 2.5067291259765625, 2.4967262744903564, 2.486781358718872, 2.4768950939178467, 2.4670681953430176, 2.457301378250122, 2.4475953578948975, 2.437950611114502, 2.428368330001831, 2.418848991394043, 2.409393310546875, 2.4000020027160645, 2.3906760215759277, 2.381416082382202, 2.372222900390625, 2.3630971908569336, 2.3540399074554443, 2.3450517654418945, 2.3361334800720215, 2.3272860050201416, 2.318509817123413, 2.3098063468933105, 2.301175832748413, 2.292619466781616, 2.284137725830078, 2.2757318019866943, 2.267402410507202, 2.259150266647339, 2.250976324081421, 2.2428815364837646, 2.2348666191101074, 2.2269325256347656, 2.2190799713134766, 2.2113101482391357, 2.2036235332489014, 2.196021318435669, 2.188504219055176, 2.1810731887817383, 2.1737289428710938, 2.1664726734161377, 2.1593048572540283, 2.152226686477661, 2.1452391147613525, 2.13834285736084, 2.1315386295318604, 2.1248276233673096, 2.118210554122925, 2.1116886138916016, 2.105262279510498, 2.0989325046539307, 2.092700242996216, 2.08656644821167, 2.0805320739746094, 2.0745975971221924, 2.0687642097473145, 2.063032627105713, 2.057403802871704, 2.0518784523010254, 2.046457529067993, 2.0411417484283447, 2.0359320640563965, 2.0308291912078857, 2.025834083557129, 2.0209474563598633, 2.016170024871826, 2.011502504348755, 2.006945848464966, 2.0025007724761963, 1.9981681108474731, 1.9939483404159546, 1.989842414855957, 1.9858508110046387, 1.981974482536316, 1.978213906288147, 1.9745697975158691, 1.9710427522659302, 1.967633605003357, 1.9643428325653076, 1.9611709117889404, 1.9581185579299927, 1.955186367034912, 1.952374815940857, 1.949684500694275, 1.9471157789230347, 1.944669246673584, 1.9423452615737915, 1.940144419670105, 1.9380669593811035, 1.9361133575439453, 1.9342840909957886, 1.9325793981552124, 1.9309996366500854, 1.9295451641082764, 1.9282162189483643, 1.9270129203796387, 1.9259357452392578, 1.9249848127365112, 1.9241602420806885, 1.9234622716903687, 1.9228910207748413, 1.922446608543396, 1.9221290349960327, 1.9219385385513306, 1.90625, 1.9063140153884888, 1.9065061807632446, 1.9068262577056885, 1.9072743654251099, 1.9078502655029297, 1.908553957939148, 1.9093852043151855, 1.9103440046310425, 1.91143000125885, 1.9126429557800293, 1.9139827489852905, 1.9154491424560547, 1.9170416593551636, 1.9187601804733276, 1.9206042289733887, 1.9225735664367676, 1.9246677160263062, 1.9268862009048462, 1.9292287826538086, 1.9316949844360352, 1.9342840909957886, 1.9369958639144897, 1.939829707145691, 1.9427851438522339, 1.9458614587783813, 1.9490582942962646, 1.952374815940857, 1.9558106660842896, 1.9593650102615356, 1.963037371635437, 1.9668269157409668, 1.9707331657409668, 1.9747551679611206, 1.9788925647735596, 1.9831442832946777, 1.987509846687317, 1.9919883012771606, 1.9965790510177612, 2.001281261444092, 2.006094217300415, 2.011017084121704, 2.0160489082336426, 2.021188974380493, 2.0264365673065186, 2.0317907333374023, 2.0372507572174072, 2.042815685272217, 2.0484845638275146, 2.0542566776275635, 2.060131311416626, 2.0661072731018066, 2.072183609008789, 2.078359842300415, 2.084635019302368, 2.091007947921753, 2.097477912902832, 2.104044198989868, 2.110705614089966, 2.1174614429473877, 2.1243104934692383, 2.1312522888183594, 2.1382856369018555, 2.1454098224639893, 2.1526236534118652, 2.159926652908325, 2.1673176288604736, 2.174795627593994, 2.1823599338531494, 2.190009832382202, 2.1977438926696777, 2.205561637878418, 2.2134621143341064, 2.2214441299438477, 2.2295074462890625, 2.2376506328582764, 2.245872974395752, 2.254173755645752, 2.262551784515381, 2.2710065841674805, 2.2795369625091553, 2.288142442703247, 2.2968218326568604, 2.305574417114258, 2.314399480819702, 2.323296070098877, 2.332263469696045, 2.3413007259368896, 2.350407123565674, 2.35958194732666, 2.3688242435455322, 2.3781332969665527, 2.3875081539154053, 2.3969483375549316, 2.4064528942108154, 2.4160211086273193, 2.425652265548706, 2.4353456497192383, 2.4451003074645996, 2.454915761947632, 2.4647910594940186, 2.4747257232666016, 2.4847190380096436, 2.494769811630249, 2.504878044128418, 2.515042543411255, 2.5252630710601807, 2.5355384349823, 2.545868396759033, 2.5562520027160645, 2.5666885375976562, 2.5771777629852295, 2.587718963623047, 2.598311185836792, 2.6089539527893066, 2.6196467876434326, 2.6303887367248535, 2.6411795616149902, 2.6520187854766846, 2.662905216217041, 2.6738388538360596, 2.684818744659424, 2.6958446502685547, 2.7069156169891357, 2.718031406402588, 2.729191541671753, 2.7403950691223145, 2.7516419887542725, 2.7629313468933105, 2.7516419887542725, 2.7403950691223145, 2.729191541671753, 2.718031406402588, 2.7069156169891357, 2.6958446502685547, 2.684818744659424, 2.6738388538360596, 2.662905216217041, 2.6520187854766846, 2.6411795616149902, 2.6303887367248535, 2.6196467876434326, 2.6089539527893066, 2.598311185836792, 2.587718963623047, 2.5771777629852295, 2.5666885375976562, 2.5562520027160645, 2.545868396759033, 2.5355384349823, 2.5252630710601807, 2.515042543411255, 2.504878044128418, 2.494769811630249, 2.4847190380096436, 2.4747257232666016, 2.4647910594940186, 2.454915761947632, 2.4451003074645996, 2.4353456497192383, 2.425652265548706, 2.4160211086273193, 2.4064528942108154, 2.3969483375549316, 2.3875081539154053, 2.3781332969665527, 2.3688242435455322, 2.35958194732666, 2.350407123565674, 2.3413007259368896, 2.332263469696045, 2.323296070098877, 2.314399480819702, 2.305574417114258, 2.2968218326568604, 2.288142442703247, 2.2795369625091553, 2.2710065841674805, 2.262551784515381, 2.254173755645752, 2.245872974395752, 2.2376506328582764, 2.2295074462890625, 2.2214441299438477, 2.2134621143341064, 2.205561637878418, 2.1977438926696777, 2.190009832382202, 2.1823599338531494, 2.174795627593994, 2.1673176288604736, 2.159926652908325, 2.1526236534118652, 2.1454098224639893, 2.1382856369018555, 2.1312522888183594, 2.1243104934692383, 2.1174614429473877, 2.110705614089966, 2.104044198989868, 2.097477912902832, 2.091007947921753, 2.084635019302368, 2.078359842300415, 2.072183609008789, 2.0661072731018066, 2.060131311416626, 2.0542566776275635, 2.0484845638275146, 2.042815685272217, 2.0372507572174072, 2.0317907333374023, 2.0264365673065186, 2.021188974380493, 2.0160489082336426, 2.011017084121704, 2.006094217300415, 2.001281261444092, 1.9965790510177612, 1.9919883012771606, 1.987509846687317, 1.9831442832946777, 1.9788925647735596, 1.9747551679611206, 1.9707331657409668, 1.9668269157409668, 1.963037371635437, 1.9593650102615356, 1.9558106660842896, 1.952374815940857, 1.9490582942962646, 1.9458614587783813, 1.9427851438522339, 1.939829707145691, 1.9369958639144897, 1.9342840909957886, 1.9316949844360352, 1.9292287826538086, 1.9268862009048462, 1.9246677160263062, 1.9225735664367676, 1.9206042289733887, 1.9187601804733276, 1.9170416593551636, 1.9154491424560547, 1.9139827489852905, 1.9126429557800293, 1.91143000125885, 1.9103440046310425, 1.9093852043151855, 1.908553957939148, 1.9078502655029297, 1.9072743654251099, 1.9068262577056885, 1.9065061807632446, 1.9063140153884888, 1.890625, 1.8906896114349365, 1.890883207321167, 1.8912060260772705, 1.891657829284668, 1.8922384977340698, 1.8929479122161865, 1.893786072731018, 1.8947527408599854, 1.8958476781845093, 1.8970706462860107, 1.8984214067459106, 1.8998997211456299, 1.9015053510665894, 1.9032379388809204, 1.9050970077514648, 1.9070823192596436, 1.9091933965682983, 1.91143000125885, 1.9137914180755615, 1.9162774085998535, 1.9188873767852783, 1.9216209650039673, 1.924477458000183, 1.9274563789367676, 1.930557131767273, 1.933779239654541, 1.9371219873428345, 1.9405847787857056, 1.944166898727417, 1.9478678703308105, 1.951686978340149, 1.9556233882904053, 1.9596765041351318, 1.9638456106185913, 1.9681298732757568, 1.9725285768508911, 1.9770411252975464, 1.9816664457321167, 1.9864039421081543, 1.9912528991699219, 1.9962122440338135, 2.001281261444092, 2.0064592361450195, 2.0117452144622803, 2.0171384811401367, 2.0226380825042725, 2.028243064880371, 2.033952474594116, 2.0397658348083496, 2.045681953430176, 2.0516998767852783, 2.057819128036499, 2.0640382766723633, 2.070356607437134, 2.0767736434936523, 2.0832877159118652, 2.0898985862731934, 2.096604824066162, 2.1034059524536133, 2.1103007793426514, 2.11728835105896, 2.1243679523468018, 2.1315386295318604, 2.1387994289398193, 2.1461493968963623, 2.153587579727173, 2.1611132621765137, 2.1687252521514893, 2.1764228343963623, 2.1842050552368164, 2.1920711994171143, 2.2000200748443604, 2.2080507278442383, 2.21616268157959, 2.2243547439575195, 2.232625961303711, 2.240975856781006, 2.249403238296509, 2.2579071521759033, 2.266486883163452, 2.275141716003418, 2.2838704586029053, 2.292672634124756, 2.301547050476074, 2.310493230819702, 2.319509983062744, 2.328596830368042, 2.3377528190612793, 2.3469769954681396, 2.3562686443328857, 2.3656270503997803, 2.375051498413086, 2.3845407962799072, 2.394094705581665, 2.403712034225464, 2.4133923053741455, 2.4231348037719727, 2.43293833732605, 2.442802667617798, 2.4527268409729004, 2.46271014213562, 2.4727518558502197, 2.482851266860962, 2.4930078983306885, 2.503220558166504, 2.513489007949829, 2.5238122940063477, 2.5341899394989014, 2.544621229171753, 2.555105447769165, 2.5656421184539795, 2.57623028755188, 2.586869716644287, 2.5975592136383057, 2.6082987785339355, 2.6190874576568604, 2.629924774169922, 2.640810012817383, 2.651742458343506, 2.662721872329712, 2.6737475395202637, 2.684818744659424, 2.6959352493286133, 2.7070960998535156, 2.7183010578155518, 2.7295494079589844, 2.7408406734466553, 2.752174139022827, 2.7408406734466553, 2.7295494079589844, 2.7183010578155518, 2.7070960998535156, 2.6959352493286133, 2.684818744659424, 2.6737475395202637, 2.662721872329712, 2.651742458343506, 2.640810012817383, 2.629924774169922, 2.6190874576568604, 2.6082987785339355, 2.5975592136383057, 2.586869716644287, 2.57623028755188, 2.5656421184539795, 2.555105447769165, 2.544621229171753, 2.5341899394989014, 2.5238122940063477, 2.513489007949829, 2.503220558166504, 2.4930078983306885, 2.482851266860962, 2.4727518558502197, 2.46271014213562, 2.4527268409729004, 2.442802667617798, 2.43293833732605, 2.4231348037719727, 2.4133923053741455, 2.403712034225464, 2.394094705581665, 2.3845407962799072, 2.375051498413086, 2.3656270503997803, 2.3562686443328857, 2.3469769954681396, 2.3377528190612793, 2.328596830368042, 2.319509983062744, 2.310493230819702, 2.301547050476074, 2.292672634124756, 2.2838704586029053, 2.275141716003418, 2.266486883163452, 2.2579071521759033, 2.249403238296509, 2.240975856781006, 2.232625961303711, 2.2243547439575195, 2.21616268157959, 2.2080507278442383, 2.2000200748443604, 2.1920711994171143, 2.1842050552368164, 2.1764228343963623, 2.1687252521514893, 2.1611132621765137, 2.153587579727173, 2.1461493968963623, 2.1387994289398193, 2.1315386295318604, 2.1243679523468018, 2.11728835105896, 2.1103007793426514, 2.1034059524536133, 2.096604824066162, 2.0898985862731934, 2.0832877159118652, 2.0767736434936523, 2.070356607437134, 2.0640382766723633, 2.057819128036499, 2.0516998767852783, 2.045681953430176, 2.0397658348083496, 2.033952474594116, 2.028243064880371, 2.0226380825042725, 2.0171384811401367, 2.0117452144622803, 2.0064592361450195, 2.001281261444092, 1.9962122440338135, 1.9912528991699219, 1.9864039421081543, 1.9816664457321167, 1.9770411252975464, 1.9725285768508911, 1.9681298732757568, 1.9638456106185913, 1.9596765041351318, 1.9556233882904053, 1.951686978340149, 1.9478678703308105, 1.944166898727417, 1.9405847787857056, 1.9371219873428345, 1.933779239654541, 1.930557131767273, 1.9274563789367676, 1.924477458000183, 1.9216209650039673, 1.9188873767852783, 1.9162774085998535, 1.9137914180755615, 1.91143000125885, 1.9091933965682983, 1.9070823192596436, 1.9050970077514648, 1.9032379388809204, 1.9015053510665894, 1.8998997211456299, 1.8984214067459106, 1.8970706462860107, 1.8958476781845093, 1.8947527408599854, 1.893786072731018, 1.8929479122161865, 1.8922384977340698, 1.891657829284668, 1.8912060260772705, 1.890883207321167, 1.8906896114349365, 1.875, 1.8750650882720947, 1.875260353088379, 1.8755857944488525, 1.8760414123535156, 1.8766268491744995, 1.8773423433303833, 1.8781874179840088, 1.879162073135376, 1.8802660703659058, 1.881499171257019, 1.8828611373901367, 1.8843517303466797, 1.8859704732894897, 1.8877172470092773, 1.8895916938781738, 1.8915932178497314, 1.893721580505371, 1.8959764242172241, 1.8983571529388428, 1.9008632898330688, 1.9034944772720337, 1.90625, 1.9091295003890991, 1.9121322631835938, 1.9152579307556152, 1.9185056686401367, 1.921875, 1.9253652095794678, 1.9289757013320923, 1.9327057600021362, 1.9365546703338623, 1.9405218362808228, 1.9446064233779907, 1.948807716369629, 1.953125, 1.9575574398040771, 1.962104320526123, 1.9667649269104004, 1.9715381860733032, 1.9764235019683838, 1.9814200401306152, 1.9865268468856812, 1.9917432069778442, 1.997068166732788, 2.0025007724761963, 2.008040428161621, 2.013686180114746, 2.019436836242676, 2.025291681289673, 2.03125, 2.0373106002807617, 2.0434727668762207, 2.0497355461120605, 2.056097984313965, 2.062559127807617, 2.0691182613372803, 2.0757739543914795, 2.0825259685516357, 2.0893728733062744, 2.096313714981079, 2.1033477783203125, 2.1104743480682373, 2.117691993713379, 2.125, 2.132397413253784, 2.139883518218994, 2.1474571228027344, 2.1551175117492676, 2.1628634929656982, 2.170694351196289, 2.1786091327667236, 2.1866068840026855, 2.1946868896484375, 2.202847957611084, 2.2110893726348877, 2.2194101810455322, 2.227809429168701, 2.2362864017486572, 2.244839906692505, 2.253469467163086, 2.262174129486084, 2.2709527015686035, 2.2798047065734863, 2.288729190826416, 2.297725200653076, 2.3067920207977295, 2.3159286975860596, 2.325134515762329, 2.3344085216522217, 2.34375, 2.3531582355499268, 2.3626322746276855, 2.372171401977539, 2.38177490234375, 2.391441822052002, 2.4011716842651367, 2.410963296890259, 2.42081618309021, 2.430729866027832, 2.4407029151916504, 2.450735330581665, 2.4608259201049805, 2.4709739685058594, 2.4811792373657227, 2.491440534591675, 2.5017571449279785, 2.5121288299560547, 2.522554397583008, 2.533033609390259, 2.5435657501220703, 2.554149866104126, 2.5647854804992676, 2.575472116470337, 2.5862088203430176, 2.5969953536987305, 2.607830762863159, 2.6187145709991455, 2.6296463012695312, 2.640625, 2.6516504287719727, 2.662721872329712, 2.6738388538360596, 2.6850006580352783, 2.69620680809021, 2.7074568271636963, 2.71875, 2.730085849761963, 2.741464138031006, 2.730085849761963, 2.71875, 2.7074568271636963, 2.69620680809021, 2.6850006580352783, 2.6738388538360596, 2.662721872329712, 2.6516504287719727, 2.640625, 2.6296463012695312, 2.6187145709991455, 2.607830762863159, 2.5969953536987305, 2.5862088203430176, 2.575472116470337, 2.5647854804992676, 2.554149866104126, 2.5435657501220703, 2.533033609390259, 2.522554397583008, 2.5121288299560547, 2.5017571449279785, 2.491440534591675, 2.4811792373657227, 2.4709739685058594, 2.4608259201049805, 2.450735330581665, 2.4407029151916504, 2.430729866027832, 2.42081618309021, 2.410963296890259, 2.4011716842651367, 2.391441822052002, 2.38177490234375, 2.372171401977539, 2.3626322746276855, 2.3531582355499268, 2.34375, 2.3344085216522217, 2.325134515762329, 2.3159286975860596, 2.3067920207977295, 2.297725200653076, 2.288729190826416, 2.2798047065734863, 2.2709527015686035, 2.262174129486084, 2.253469467163086, 2.244839906692505, 2.2362864017486572, 2.227809429168701, 2.2194101810455322, 2.2110893726348877, 2.202847957611084, 2.1946868896484375, 2.1866068840026855, 2.1786091327667236, 2.170694351196289, 2.1628634929656982, 2.1551175117492676, 2.1474571228027344, 2.139883518218994, 2.132397413253784, 2.125, 2.117691993713379, 2.1104743480682373, 2.1033477783203125, 2.096313714981079, 2.0893728733062744, 2.0825259685516357, 2.0757739543914795, 2.0691182613372803, 2.062559127807617, 2.056097984313965, 2.0497355461120605, 2.0434727668762207, 2.0373106002807617, 2.03125, 2.025291681289673, 2.019436836242676, 2.013686180114746, 2.008040428161621, 2.0025007724761963, 1.997068166732788, 1.9917432069778442, 1.9865268468856812, 1.9814200401306152, 1.9764235019683838, 1.9715381860733032, 1.9667649269104004, 1.962104320526123, 1.9575574398040771, 1.953125, 1.948807716369629, 1.9446064233779907, 1.9405218362808228, 1.9365546703338623, 1.9327057600021362, 1.9289757013320923, 1.9253652095794678, 1.921875, 1.9185056686401367, 1.9152579307556152, 1.9121322631835938, 1.9091295003890991, 1.90625, 1.9034944772720337, 1.9008632898330688, 1.8983571529388428, 1.8959764242172241, 1.893721580505371, 1.8915932178497314, 1.8895916938781738, 1.8877172470092773, 1.8859704732894897, 1.8843517303466797, 1.8828611373901367, 1.881499171257019, 1.8802660703659058, 1.879162073135376, 1.8781874179840088, 1.8773423433303833, 1.8766268491744995, 1.8760414123535156, 1.8755857944488525, 1.875260353088379, 1.8750650882720947, 1.859375, 1.8594406843185425, 1.8596376180648804, 1.8599658012390137, 1.8604251146316528, 1.8610155582427979, 1.8617368936538696, 1.8625891208648682, 1.8635720014572144, 1.8646851778030396, 1.8659285306930542, 1.8673019409179688, 1.8688048124313354, 1.8704371452331543, 1.872198462486267, 1.8740882873535156, 1.8761065006256104, 1.878252387046814, 1.8805257081985474, 1.8829259872436523, 1.8854526281356812, 1.8881052732467651, 1.890883207321167, 1.893786072731018, 1.8968132734298706, 1.8999639749526978, 1.9032379388809204, 1.9066342115402222, 1.9101521968841553, 1.9137914180755615, 1.917551040649414, 1.9214303493499756, 1.9254286289215088, 1.9295451641082764, 1.933779239654541, 1.9381299018859863, 1.942596673965454, 1.9471784830093384, 1.9518746137619019, 1.9566842317581177, 1.9616066217422485, 1.9666407108306885, 1.9717859029769897, 1.9770411252975464, 1.9824055433273315, 1.9878783226013184, 1.9934585094451904, 1.999145269393921, 2.0049376487731934, 2.0108349323272705, 2.016835927963257, 2.022939682006836, 2.0291454792022705, 2.035452365875244, 2.0418593883514404, 2.048365354537964, 2.0549697875976562, 2.061671257019043, 2.0684690475463867, 2.07536244392395, 2.082350015640259, 2.0894312858581543, 2.096604824066162, 2.103870153427124, 2.1112260818481445, 2.1186716556549072, 2.1262059211730957, 2.1338281631469727, 2.1415371894836426, 2.149332284927368, 2.157212257385254, 2.1651761531829834, 2.1732234954833984, 2.1813528537750244, 2.189563751220703, 2.197854995727539, 2.206225633621216, 2.214674949645996, 2.2232019901275635, 2.2318058013916016, 2.240485429763794, 2.2492403984069824, 2.2580692768096924, 2.2669715881347656, 2.2759463787078857, 2.2849926948547363, 2.29410982131958, 2.3032968044281006, 2.3125526905059814, 2.3218770027160645, 2.331268787384033, 2.3407273292541504, 2.3502514362335205, 2.3598406314849854, 2.3694939613342285, 2.379210948944092, 2.3889904022216797, 2.398831844329834, 2.4087345600128174, 2.4186975955963135, 2.428720235824585, 2.4388017654418945, 2.448941469192505, 2.4591386318206787, 2.469392776489258, 2.4797027111053467, 2.490068197250366, 2.50048828125, 2.5109622478485107, 2.5214896202087402, 2.532069683074951, 2.5427017211914062, 2.553385019302368, 2.5641191005706787, 2.5749032497406006, 2.5857367515563965, 2.5966193675994873, 2.6075499057769775, 2.618528127670288, 2.6295533180236816, 2.640625, 2.651742458343506, 2.662905216217041, 2.6741127967834473, 2.685364246368408, 2.696659564971924, 2.7079977989196777, 2.7193784713745117, 2.7308013439178467, 2.7193784713745117, 2.7079977989196777, 2.696659564971924, 2.685364246368408, 2.6741127967834473, 2.662905216217041, 2.651742458343506, 2.640625, 2.6295533180236816, 2.618528127670288, 2.6075499057769775, 2.5966193675994873, 2.5857367515563965, 2.5749032497406006, 2.5641191005706787, 2.553385019302368, 2.5427017211914062, 2.532069683074951, 2.5214896202087402, 2.5109622478485107, 2.50048828125, 2.490068197250366, 2.4797027111053467, 2.469392776489258, 2.4591386318206787, 2.448941469192505, 2.4388017654418945, 2.428720235824585, 2.4186975955963135, 2.4087345600128174, 2.398831844329834, 2.3889904022216797, 2.379210948944092, 2.3694939613342285, 2.3598406314849854, 2.3502514362335205, 2.3407273292541504, 2.331268787384033, 2.3218770027160645, 2.3125526905059814, 2.3032968044281006, 2.29410982131958, 2.2849926948547363, 2.2759463787078857, 2.2669715881347656, 2.2580692768096924, 2.2492403984069824, 2.240485429763794, 2.2318058013916016, 2.2232019901275635, 2.214674949645996, 2.206225633621216, 2.197854995727539, 2.189563751220703, 2.1813528537750244, 2.1732234954833984, 2.1651761531829834, 2.157212257385254, 2.149332284927368, 2.1415371894836426, 2.1338281631469727, 2.1262059211730957, 2.1186716556549072, 2.1112260818481445, 2.103870153427124, 2.096604824066162, 2.0894312858581543, 2.082350015640259, 2.07536244392395, 2.0684690475463867, 2.061671257019043, 2.0549697875976562, 2.048365354537964, 2.0418593883514404, 2.035452365875244, 2.0291454792022705, 2.022939682006836, 2.016835927963257, 2.0108349323272705, 2.0049376487731934, 1.999145269393921, 1.9934585094451904, 1.9878783226013184, 1.9824055433273315, 1.9770411252975464, 1.9717859029769897, 1.9666407108306885, 1.9616066217422485, 1.9566842317581177, 1.9518746137619019, 1.9471784830093384, 1.942596673965454, 1.9381299018859863, 1.933779239654541, 1.9295451641082764, 1.9254286289215088, 1.9214303493499756, 1.917551040649414, 1.9137914180755615, 1.9101521968841553, 1.9066342115402222, 1.9032379388809204, 1.8999639749526978, 1.8968132734298706, 1.893786072731018, 1.890883207321167, 1.8881052732467651, 1.8854526281356812, 1.8829259872436523, 1.8805257081985474, 1.878252387046814, 1.8761065006256104, 1.8740882873535156, 1.872198462486267, 1.8704371452331543, 1.8688048124313354, 1.8673019409179688, 1.8659285306930542, 1.8646851778030396, 1.8635720014572144, 1.8625891208648682, 1.8617368936538696, 1.8610155582427979, 1.8604251146316528, 1.8599658012390137, 1.8596376180648804, 1.8594406843185425, 1.84375, 1.8438161611557007, 1.8440147638320923, 1.8443458080291748, 1.8448090553283691, 1.8454045057296753, 1.8461319208145142, 1.8469913005828857, 1.847982406616211, 1.8491050004959106, 1.8503589630126953, 1.8517438173294067, 1.8532593250274658, 1.854905366897583, 1.8566813468933105, 1.8585870265960693, 1.8606219291687012, 1.8627856969833374, 1.8650779724121094, 1.8674980401992798, 1.87004554271698, 1.8727200031280518, 1.8755207061767578, 1.8784472942352295, 1.881499171257019, 1.8846755027770996, 1.8879759311676025, 1.891399621963501, 1.8949459791183472, 1.8986142873764038, 1.9024039506912231, 1.9063140153884888, 1.9103440046310425, 1.9144929647445679, 1.9187601804733276, 1.9231449365615845, 1.927646279335022, 1.9322636127471924, 1.9369958639144897, 1.9418424367904663, 1.9468022584915161, 1.9518746137619019, 1.9570585489273071, 1.962353229522705, 1.9677577018737793, 1.973271131515503, 1.9788925647735596, 1.9846210479736328, 1.9904557466506958, 1.9963957071304321, 2.0024399757385254, 2.008587598800659, 2.0148375034332275, 2.021188974380493, 2.0276410579681396, 2.0341925621032715, 2.0408427715301514, 2.047590494155884, 2.0544350147247314, 2.061375141143799, 2.0684101581573486, 2.0755388736724854, 2.0827603340148926, 2.090073823928833, 2.097477912902832, 2.1049723625183105, 2.112555503845215, 2.1202266216278076, 2.1279850006103516, 2.135829448699951, 2.14375901222229, 2.151772975921631, 2.159870147705078, 2.1680495738983154, 2.1763107776641846, 2.184652090072632, 2.193073272705078, 2.201573133468628, 2.2101504802703857, 2.2188050746917725, 2.2275354862213135, 2.2363409996032715, 2.24522066116333, 2.254173755645752, 2.2631990909576416, 2.272296190261841, 2.281464099884033, 2.2907016277313232, 2.300008535385132, 2.3093833923339844, 2.3188257217407227, 2.3283348083496094, 2.337909460067749, 2.3475489616394043, 2.357252836227417, 2.3670198917388916, 2.37684965133667, 2.3867411613464355, 2.396693706512451, 2.4067065715789795, 2.416778802871704, 2.426910161972046, 2.4370992183685303, 2.4473459720611572, 2.457648992538452, 2.468008279800415, 2.4784224033355713, 2.488891363143921, 2.4994139671325684, 2.5099897384643555, 2.520618200302124, 2.5312981605529785, 2.542029619216919, 2.55281138420105, 2.563642978668213, 2.57452392578125, 2.585453510284424, 2.596431255340576, 2.6074562072753906, 2.618528127670288, 2.6296463012695312, 2.640810012817383, 2.6520187854766846, 2.663271903991699, 2.6745691299438477, 2.6859097480773926, 2.697293281555176, 2.70871901512146, 2.720186471939087, 2.70871901512146, 2.697293281555176, 2.6859097480773926, 2.6745691299438477, 2.663271903991699, 2.6520187854766846, 2.640810012817383, 2.6296463012695312, 2.618528127670288, 2.6074562072753906, 2.596431255340576, 2.585453510284424, 2.57452392578125, 2.563642978668213, 2.55281138420105, 2.542029619216919, 2.5312981605529785, 2.520618200302124, 2.5099897384643555, 2.4994139671325684, 2.488891363143921, 2.4784224033355713, 2.468008279800415, 2.457648992538452, 2.4473459720611572, 2.4370992183685303, 2.426910161972046, 2.416778802871704, 2.4067065715789795, 2.396693706512451, 2.3867411613464355, 2.37684965133667, 2.3670198917388916, 2.357252836227417, 2.3475489616394043, 2.337909460067749, 2.3283348083496094, 2.3188257217407227, 2.3093833923339844, 2.300008535385132, 2.2907016277313232, 2.281464099884033, 2.272296190261841, 2.2631990909576416, 2.254173755645752, 2.24522066116333, 2.2363409996032715, 2.2275354862213135, 2.2188050746917725, 2.2101504802703857, 2.201573133468628, 2.193073272705078, 2.184652090072632, 2.1763107776641846, 2.1680495738983154, 2.159870147705078, 2.151772975921631, 2.14375901222229, 2.135829448699951, 2.1279850006103516, 2.1202266216278076, 2.112555503845215, 2.1049723625183105, 2.097477912902832, 2.090073823928833, 2.0827603340148926, 2.0755388736724854, 2.0684101581573486, 2.061375141143799, 2.0544350147247314, 2.047590494155884, 2.0408427715301514, 2.0341925621032715, 2.0276410579681396, 2.021188974380493, 2.0148375034332275, 2.008587598800659, 2.0024399757385254, 1.9963957071304321, 1.9904557466506958, 1.9846210479736328, 1.9788925647735596, 1.973271131515503, 1.9677577018737793, 1.962353229522705, 1.9570585489273071, 1.9518746137619019, 1.9468022584915161, 1.9418424367904663, 1.9369958639144897, 1.9322636127471924, 1.927646279335022, 1.9231449365615845, 1.9187601804733276, 1.9144929647445679, 1.9103440046310425, 1.9063140153884888, 1.9024039506912231, 1.8986142873764038, 1.8949459791183472, 1.891399621963501, 1.8879759311676025, 1.8846755027770996, 1.881499171257019, 1.8784472942352295, 1.8755207061767578, 1.8727200031280518, 1.87004554271698, 1.8674980401992798, 1.8650779724121094, 1.8627856969833374, 1.8606219291687012, 1.8585870265960693, 1.8566813468933105, 1.854905366897583, 1.8532593250274658, 1.8517438173294067, 1.8503589630126953, 1.8491050004959106, 1.847982406616211, 1.8469913005828857, 1.8461319208145142, 1.8454045057296753, 1.8448090553283691, 1.8443458080291748, 1.8440147638320923, 1.8438161611557007, 1.828125, 1.8281917572021484, 1.8283920288085938, 1.828725814819336, 1.829193115234375, 1.8297935724258423, 1.8305273056030273, 1.8313939571380615, 1.8323935270309448, 1.8335256576538086, 1.8347902297973633, 1.8361867666244507, 1.8377152681350708, 1.8393751382827759, 1.8411661386489868, 1.8430877923965454, 1.8451398611068726, 1.8473217487335205, 1.8496330976486206, 1.8520734310150146, 1.8546420335769653, 1.8573386669158936, 1.860162615776062, 1.8631134033203125, 1.8661901950836182, 1.8693926334381104, 1.8727200031280518, 1.8761714696884155, 1.8797465562820435, 1.8834445476531982, 1.887264609336853, 1.8912060260772705, 1.8952680826187134, 1.8994499444961548, 1.9037508964538574, 1.9081701040267944, 1.912706732749939, 1.9173600673675537, 1.9221290349960327, 1.9270129203796387, 1.9320108890533447, 1.9371219873428345, 1.9423452615737915, 1.947679877281189, 1.953125, 1.9586795568466187, 1.9643428325653076, 1.9701136350631714, 1.975991129875183, 1.981974482536316, 1.9880625009536743, 1.994254469871521, 2.00054931640625, 2.006945848464966, 2.0134434700012207, 2.0200412273406982, 2.026737689971924, 2.0335323810577393, 2.040424108505249, 2.0474116802215576, 2.0544943809509277, 2.061671257019043, 2.068941116333008, 2.076303243637085, 2.083756446838379, 2.0912997722625732, 2.0989325046539307, 2.1066534519195557, 2.1144614219665527, 2.1223559379577637, 2.130335569381714, 2.138399839401245, 2.146547555923462, 2.1547775268554688, 2.1630892753601074, 2.1714816093444824, 2.1799535751342773, 2.188504219055176, 2.1971328258514404, 2.205838203430176, 2.2146198749542236, 2.2234764099121094, 2.232407331466675, 2.2414114475250244, 2.25048828125, 2.259636402130127, 2.268855571746826, 2.278144359588623, 2.2875020503997803, 2.2969281673431396, 2.3064215183258057, 2.315981388092041, 2.3256068229675293, 2.3352973461151123, 2.3450517654418945, 2.3548693656921387, 2.3647496700286865, 2.3746914863586426, 2.3846943378448486, 2.3947575092315674, 2.4048798084259033, 2.4150609970092773, 2.425299882888794, 2.435596227645874, 2.445948839187622, 2.45635724067688, 2.4668209552764893, 2.4773387908935547, 2.487910270690918, 2.498534679412842, 2.509211540222168, 2.51993989944458, 2.530719518661499, 2.5415492057800293, 2.552428722381592, 2.563357353210449, 2.5743343830108643, 2.5853590965270996, 2.596431255340576, 2.6075499057769775, 2.6187145709991455, 2.629924774169922, 2.6411795616149902, 2.6524789333343506, 2.6638219356536865, 2.67520809173584, 2.6866369247436523, 2.6981077194213867, 2.7096199989318848, 2.6981077194213867, 2.6866369247436523, 2.67520809173584, 2.6638219356536865, 2.6524789333343506, 2.6411795616149902, 2.629924774169922, 2.6187145709991455, 2.6075499057769775, 2.596431255340576, 2.5853590965270996, 2.5743343830108643, 2.563357353210449, 2.552428722381592, 2.5415492057800293, 2.530719518661499, 2.51993989944458, 2.509211540222168, 2.498534679412842, 2.487910270690918, 2.4773387908935547, 2.4668209552764893, 2.45635724067688, 2.445948839187622, 2.435596227645874, 2.425299882888794, 2.4150609970092773, 2.4048798084259033, 2.3947575092315674, 2.3846943378448486, 2.3746914863586426, 2.3647496700286865, 2.3548693656921387, 2.3450517654418945, 2.3352973461151123, 2.3256068229675293, 2.315981388092041, 2.3064215183258057, 2.2969281673431396, 2.2875020503997803, 2.278144359588623, 2.268855571746826, 2.259636402130127, 2.25048828125, 2.2414114475250244, 2.232407331466675, 2.2234764099121094, 2.2146198749542236, 2.205838203430176, 2.1971328258514404, 2.188504219055176, 2.1799535751342773, 2.1714816093444824, 2.1630892753601074, 2.1547775268554688, 2.146547555923462, 2.138399839401245, 2.130335569381714, 2.1223559379577637, 2.1144614219665527, 2.1066534519195557, 2.0989325046539307, 2.0912997722625732, 2.083756446838379, 2.076303243637085, 2.068941116333008, 2.061671257019043, 2.0544943809509277, 2.0474116802215576, 2.040424108505249, 2.0335323810577393, 2.026737689971924, 2.0200412273406982, 2.0134434700012207, 2.006945848464966, 2.00054931640625, 1.994254469871521, 1.9880625009536743, 1.981974482536316, 1.975991129875183, 1.9701136350631714, 1.9643428325653076, 1.9586795568466187, 1.953125, 1.947679877281189, 1.9423452615737915, 1.9371219873428345, 1.9320108890533447, 1.9270129203796387, 1.9221290349960327, 1.9173600673675537, 1.912706732749939, 1.9081701040267944, 1.9037508964538574, 1.8994499444961548, 1.8952680826187134, 1.8912060260772705, 1.887264609336853, 1.8834445476531982, 1.8797465562820435, 1.8761714696884155, 1.8727200031280518, 1.8693926334381104, 1.8661901950836182, 1.8631134033203125, 1.860162615776062, 1.8573386669158936, 1.8546420335769653, 1.8520734310150146, 1.8496330976486206, 1.8473217487335205, 1.8451398611068726, 1.8430877923965454, 1.8411661386489868, 1.8393751382827759, 1.8377152681350708, 1.8361867666244507, 1.8347902297973633, 1.8335256576538086, 1.8323935270309448, 1.8313939571380615, 1.8305273056030273, 1.8297935724258423, 1.829193115234375, 1.828725814819336, 1.8283920288085938, 1.8281917572021484, 1.8125, 1.8125673532485962, 1.8127694129943848, 1.8131060600280762, 1.8135772943496704, 1.814182996749878, 1.8149229288101196, 1.8157970905303955, 1.8168052434921265, 1.8179471492767334, 1.8192224502563477, 1.8206310272216797, 1.8221725225448608, 1.823846459388733, 1.8256527185440063, 1.8275907039642334, 1.829660177230835, 1.8318605422973633, 1.8341913223266602, 1.836652159690857, 1.8392423391342163, 1.8419615030288696, 1.8448090553283691, 1.8477842807769775, 1.850886583328247, 1.8541154861450195, 1.857470154762268, 1.860949993133545, 1.8645542860031128, 1.8682821989059448, 1.8721332550048828, 1.8761065006256104, 1.8802011013031006, 1.8844164609909058, 1.8887516260147095, 1.8932058811187744, 1.8977782726287842, 1.9024680852890015, 1.9072743654251099, 1.912196159362793, 1.9172327518463135, 1.9223830699920654, 1.927646279335022, 1.9330215454101562, 1.9385077953338623, 1.9441041946411133, 1.9498096704483032, 1.9556233882904053, 1.961544394493103, 1.9675716161727905, 1.9737040996551514, 1.9799408912658691, 1.9862810373306274, 1.9927235841751099, 1.9992674589157104, 2.0059115886688232, 2.012655258178711, 2.0194971561431885, 2.0264365673065186, 2.0334722995758057, 2.0406033992767334, 2.0478289127349854, 2.055147886276245, 2.062559127807617, 2.0700619220733643, 2.077655076980591, 2.0853376388549805, 2.093108654022217, 2.1009669303894043, 2.1089119911193848, 2.1169424057006836, 2.1250574588775635, 2.133255958557129, 2.1415371894836426, 2.149899959564209, 2.158343553543091, 2.1668670177459717, 2.175469160079956, 2.1841492652893066, 2.192906379699707, 2.2017393112182617, 2.2106475830078125, 2.219630002975464, 2.2286858558654785, 2.23781418800354, 2.247014045715332, 2.256284713745117, 2.265625, 2.2750344276428223, 2.2845118045806885, 2.2940564155578613, 2.3036677837371826, 2.3133444786071777, 2.3230860233306885, 2.3328914642333984, 2.3427603244781494, 2.352691173553467, 2.3626840114593506, 2.372737407684326, 2.3828508853912354, 2.393023729324341, 2.403254985809326, 2.413544178009033, 2.4238903522491455, 2.434292793273926, 2.4447507858276367, 2.45526385307312, 2.4658310413360596, 2.4764516353607178, 2.4871251583099365, 2.4978506565093994, 2.5086276531219482, 2.5194554328918457, 2.5303335189819336, 2.5412609577178955, 2.5522375106811523, 2.5632619857788086, 2.5743343830108643, 2.585453510284424, 2.5966193675994873, 2.607830762863159, 2.6190874576568604, 2.6303887367248535, 2.6417341232299805, 2.653123140335083, 2.664555072784424, 2.6760292053222656, 2.6875455379486084, 2.6991028785705566, 2.6875455379486084, 2.6760292053222656, 2.664555072784424, 2.653123140335083, 2.6417341232299805, 2.6303887367248535, 2.6190874576568604, 2.607830762863159, 2.5966193675994873, 2.585453510284424, 2.5743343830108643, 2.5632619857788086, 2.5522375106811523, 2.5412609577178955, 2.5303335189819336, 2.5194554328918457, 2.5086276531219482, 2.4978506565093994, 2.4871251583099365, 2.4764516353607178, 2.4658310413360596, 2.45526385307312, 2.4447507858276367, 2.434292793273926, 2.4238903522491455, 2.413544178009033, 2.403254985809326, 2.393023729324341, 2.3828508853912354, 2.372737407684326, 2.3626840114593506, 2.352691173553467, 2.3427603244781494, 2.3328914642333984, 2.3230860233306885, 2.3133444786071777, 2.3036677837371826, 2.2940564155578613, 2.2845118045806885, 2.2750344276428223, 2.265625, 2.256284713745117, 2.247014045715332, 2.23781418800354, 2.2286858558654785, 2.219630002975464, 2.2106475830078125, 2.2017393112182617, 2.192906379699707, 2.1841492652893066, 2.175469160079956, 2.1668670177459717, 2.158343553543091, 2.149899959564209, 2.1415371894836426, 2.133255958557129, 2.1250574588775635, 2.1169424057006836, 2.1089119911193848, 2.1009669303894043, 2.093108654022217, 2.0853376388549805, 2.077655076980591, 2.0700619220733643, 2.062559127807617, 2.055147886276245, 2.0478289127349854, 2.0406033992767334, 2.0334722995758057, 2.0264365673065186, 2.0194971561431885, 2.012655258178711, 2.0059115886688232, 1.9992674589157104, 1.9927235841751099, 1.9862810373306274, 1.9799408912658691, 1.9737040996551514, 1.9675716161727905, 1.961544394493103, 1.9556233882904053, 1.9498096704483032, 1.9441041946411133, 1.9385077953338623, 1.9330215454101562, 1.927646279335022, 1.9223830699920654, 1.9172327518463135, 1.912196159362793, 1.9072743654251099, 1.9024680852890015, 1.8977782726287842, 1.8932058811187744, 1.8887516260147095, 1.8844164609909058, 1.8802011013031006, 1.8761065006256104, 1.8721332550048828, 1.8682821989059448, 1.8645542860031128, 1.860949993133545, 1.857470154762268, 1.8541154861450195, 1.850886583328247, 1.8477842807769775, 1.8448090553283691, 1.8419615030288696, 1.8392423391342163, 1.836652159690857, 1.8341913223266602, 1.8318605422973633, 1.829660177230835, 1.8275907039642334, 1.8256527185440063, 1.823846459388733, 1.8221725225448608, 1.8206310272216797, 1.8192224502563477, 1.8179471492767334, 1.8168052434921265, 1.8157970905303955, 1.8149229288101196, 1.814182996749878, 1.8135772943496704, 1.8131060600280762, 1.8127694129943848, 1.8125673532485962, 1.796875, 1.796942949295044, 1.7971466779708862, 1.7974863052368164, 1.7979615926742554, 1.7985725402832031, 1.7993190288543701, 1.8002007007598877, 1.8012175559997559, 1.8023693561553955, 1.803655743598938, 1.8050763607025146, 1.806631088256836, 1.8083195686340332, 1.8101412057876587, 1.8120958805084229, 1.814182996749878, 1.8164020776748657, 1.818752646446228, 1.8212343454360962, 1.823846459388733, 1.82658851146698, 1.8294600248336792, 1.8324601650238037, 1.8355884552001953, 1.8388440608978271, 1.8422266244888306, 1.8457351922988892, 1.8493690490722656, 1.8531275987625122, 1.857010006904602, 1.8610155582427979, 1.8651434183120728, 1.8693926334381104, 1.873762607574463, 1.878252387046814, 1.8828611373901367, 1.8875879049301147, 1.8924319744110107, 1.8973922729492188, 1.9024680852890015, 1.907658338546753, 1.9129620790481567, 1.918378472328186, 1.9239064455032349, 1.9295451641082764, 1.9352935552597046, 1.9411507844924927, 1.9471157789230347, 1.9531874656677246, 1.9593650102615356, 1.9656473398208618, 1.9720335006713867, 1.9785224199295044, 1.9851130247116089, 1.9918044805526733, 1.9985957145690918, 2.0054855346679688, 2.0124733448028564, 2.0195577144622803, 2.026737689971924, 2.03401255607605, 2.0413808822631836, 2.048842191696167, 2.0563948154449463, 2.0640382766723633, 2.0717713832855225, 2.0795929431915283, 2.0875022411346436, 2.0954983234405518, 2.1035799980163574, 2.111746311187744, 2.1199963092803955, 2.128329277038574, 2.1367437839508057, 2.1452391147613525, 2.1538143157958984, 2.162468433380127, 2.1712005138397217, 2.180009603500366, 2.188894748687744, 2.197854995727539, 2.2068896293640137, 2.2159974575042725, 2.225177764892578, 2.2344295978546143, 2.2437522411346436, 2.2531445026397705, 2.262605667114258, 2.272135019302368, 2.281731605529785, 2.2913944721221924, 2.3011226654052734, 2.310915946960449, 2.320772886276245, 2.330692768096924, 2.340675115585327, 2.3507187366485596, 2.360823154449463, 2.3709876537323, 2.381211042404175, 2.3914928436279297, 2.401832342147827, 2.41222882270813, 2.4226813316345215, 2.4331893920898438, 2.4437520503997803, 2.454368829727173, 2.465038776397705, 2.4757614135742188, 2.4865360260009766, 2.497361898422241, 2.5082383155822754, 2.519164800643921, 2.5301406383514404, 2.5411651134490967, 2.5522375106811523, 2.563357353210449, 2.57452392578125, 2.5857367515563965, 2.5969953536987305, 2.6082987785339355, 2.6196467876434326, 2.6310384273529053, 2.6424734592437744, 2.6539511680603027, 2.665471076965332, 2.677032709121704, 2.6886353492736816, 2.677032709121704, 2.665471076965332, 2.6539511680603027, 2.6424734592437744, 2.6310384273529053, 2.6196467876434326, 2.6082987785339355, 2.5969953536987305, 2.5857367515563965, 2.57452392578125, 2.563357353210449, 2.5522375106811523, 2.5411651134490967, 2.5301406383514404, 2.519164800643921, 2.5082383155822754, 2.497361898422241, 2.4865360260009766, 2.4757614135742188, 2.465038776397705, 2.454368829727173, 2.4437520503997803, 2.4331893920898438, 2.4226813316345215, 2.41222882270813, 2.401832342147827, 2.3914928436279297, 2.381211042404175, 2.3709876537323, 2.360823154449463, 2.3507187366485596, 2.340675115585327, 2.330692768096924, 2.320772886276245, 2.310915946960449, 2.3011226654052734, 2.2913944721221924, 2.281731605529785, 2.272135019302368, 2.262605667114258, 2.2531445026397705, 2.2437522411346436, 2.2344295978546143, 2.225177764892578, 2.2159974575042725, 2.2068896293640137, 2.197854995727539, 2.188894748687744, 2.180009603500366, 2.1712005138397217, 2.162468433380127, 2.1538143157958984, 2.1452391147613525, 2.1367437839508057, 2.128329277038574, 2.1199963092803955, 2.111746311187744, 2.1035799980163574, 2.0954983234405518, 2.0875022411346436, 2.0795929431915283, 2.0717713832855225, 2.0640382766723633, 2.0563948154449463, 2.048842191696167, 2.0413808822631836, 2.03401255607605, 2.026737689971924, 2.0195577144622803, 2.0124733448028564, 2.0054855346679688, 1.9985957145690918, 1.9918044805526733, 1.9851130247116089, 1.9785224199295044, 1.9720335006713867, 1.9656473398208618, 1.9593650102615356, 1.9531874656677246, 1.9471157789230347, 1.9411507844924927, 1.9352935552597046, 1.9295451641082764, 1.9239064455032349, 1.918378472328186, 1.9129620790481567, 1.907658338546753, 1.9024680852890015, 1.8973922729492188, 1.8924319744110107, 1.8875879049301147, 1.8828611373901367, 1.878252387046814, 1.873762607574463, 1.8693926334381104, 1.8651434183120728, 1.8610155582427979, 1.857010006904602, 1.8531275987625122, 1.8493690490722656, 1.8457351922988892, 1.8422266244888306, 1.8388440608978271, 1.8355884552001953, 1.8324601650238037, 1.8294600248336792, 1.82658851146698, 1.823846459388733, 1.8212343454360962, 1.818752646446228, 1.8164020776748657, 1.814182996749878, 1.8120958805084229, 1.8101412057876587, 1.8083195686340332, 1.806631088256836, 1.8050763607025146, 1.803655743598938, 1.8023693561553955, 1.8012175559997559, 1.8002007007598877, 1.7993190288543701, 1.7985725402832031, 1.7979615926742554, 1.7974863052368164, 1.7971466779708862, 1.796942949295044, 1.78125, 1.7813185453414917, 1.7815240621566772, 1.7818666696548462, 1.7823461294174194, 1.782962441444397, 1.7837153673171997, 1.784604787826538, 1.7856305837631226, 1.7867923974990845, 1.7880899906158447, 1.7895230054855347, 1.7910912036895752, 1.7927942276000977, 1.7946317195892334, 1.7966032028198242, 1.7987083196640015, 1.8009464740753174, 1.8033173084259033, 1.805820107460022, 1.8084545135498047, 1.8112199306488037, 1.8141156435012817, 1.8171411752700806, 1.8202956914901733, 1.8235787153244019, 1.8269895315170288, 1.8305273056030273, 1.8341913223266602, 1.83798086643219, 1.8418952226638794, 1.8459335565567017, 1.8500950336456299, 1.8543788194656372, 1.8587840795516968, 1.8633098602294922, 1.8679555654525757, 1.8727200031280518, 1.8776023387908936, 1.8826017379760742, 1.8877172470092773, 1.8929479122161865, 1.8982927799224854, 1.9037508964538574, 1.9093213081359863, 1.9150029420852661, 1.92079496383667, 1.9266961812973022, 1.9327057600021362, 1.938822627067566, 1.945045828819275, 1.9513741731643677, 1.957806944847107, 1.9643428325653076, 1.9709808826446533, 1.9777201414108276, 1.9845595359802246, 1.9914979934692383, 1.9985345602035522, 2.0056681632995605, 2.0128979682922363, 2.0202224254608154, 2.0276410579681396, 2.0351524353027344, 2.0427558422088623, 2.050450086593628, 2.058234214782715, 2.0661072731018066, 2.0740678310394287, 2.082115411758423, 2.0902488231658936, 2.0984671115875244, 2.106769323348999, 2.1151540279388428, 2.1236209869384766, 2.1321685314178467, 2.140796184539795, 2.1495025157928467, 2.1582870483398438, 2.1671485900878906, 2.176086187362671, 2.1850991249084473, 2.194186210632324, 2.2033467292785645, 2.2125794887542725, 2.221883773803711, 2.2312588691711426, 2.2407033443450928, 2.2502169609069824, 2.259798526763916, 2.269447088241577, 2.2791621685028076, 2.288942575454712, 2.2987873554229736, 2.3086962699890137, 2.3186678886413574, 2.3287017345428467, 2.338796854019165, 2.348952531814575, 2.35916805267334, 2.3694424629211426, 2.379775285720825, 2.390165328979492, 2.4006123542785645, 2.4111151695251465, 2.42167329788208, 2.432286024093628, 2.4429526329040527, 2.453672409057617, 2.464444398880005, 2.4752683639526367, 2.4861433506011963, 2.4970686435699463, 2.5080437660217285, 2.5190680027008057, 2.5301406383514404, 2.5412609577178955, 2.552428722381592, 2.563642978668213, 2.5749032497406006, 2.5862088203430176, 2.5975592136383057, 2.6089539527893066, 2.620392084121704, 2.631873369216919, 2.643397331237793, 2.6549630165100098, 2.666569948196411, 2.678217887878418, 2.666569948196411, 2.6549630165100098, 2.643397331237793, 2.631873369216919, 2.620392084121704, 2.6089539527893066, 2.5975592136383057, 2.5862088203430176, 2.5749032497406006, 2.563642978668213, 2.552428722381592, 2.5412609577178955, 2.5301406383514404, 2.5190680027008057, 2.5080437660217285, 2.4970686435699463, 2.4861433506011963, 2.4752683639526367, 2.464444398880005, 2.453672409057617, 2.4429526329040527, 2.432286024093628, 2.42167329788208, 2.4111151695251465, 2.4006123542785645, 2.390165328979492, 2.379775285720825, 2.3694424629211426, 2.35916805267334, 2.348952531814575, 2.338796854019165, 2.3287017345428467, 2.3186678886413574, 2.3086962699890137, 2.2987873554229736, 2.288942575454712, 2.2791621685028076, 2.269447088241577, 2.259798526763916, 2.2502169609069824, 2.2407033443450928, 2.2312588691711426, 2.221883773803711, 2.2125794887542725, 2.2033467292785645, 2.194186210632324, 2.1850991249084473, 2.176086187362671, 2.1671485900878906, 2.1582870483398438, 2.1495025157928467, 2.140796184539795, 2.1321685314178467, 2.1236209869384766, 2.1151540279388428, 2.106769323348999, 2.0984671115875244, 2.0902488231658936, 2.082115411758423, 2.0740678310394287, 2.0661072731018066, 2.058234214782715, 2.050450086593628, 2.0427558422088623, 2.0351524353027344, 2.0276410579681396, 2.0202224254608154, 2.0128979682922363, 2.0056681632995605, 1.9985345602035522, 1.9914979934692383, 1.9845595359802246, 1.9777201414108276, 1.9709808826446533, 1.9643428325653076, 1.957806944847107, 1.9513741731643677, 1.945045828819275, 1.938822627067566, 1.9327057600021362, 1.9266961812973022, 1.92079496383667, 1.9150029420852661, 1.9093213081359863, 1.9037508964538574, 1.8982927799224854, 1.8929479122161865, 1.8877172470092773, 1.8826017379760742, 1.8776023387908936, 1.8727200031280518, 1.8679555654525757, 1.8633098602294922, 1.8587840795516968, 1.8543788194656372, 1.8500950336456299, 1.8459335565567017, 1.8418952226638794, 1.83798086643219, 1.8341913223266602, 1.8305273056030273, 1.8269895315170288, 1.8235787153244019, 1.8202956914901733, 1.8171411752700806, 1.8141156435012817, 1.8112199306488037, 1.8084545135498047, 1.805820107460022, 1.8033173084259033, 1.8009464740753174, 1.7987083196640015, 1.7966032028198242, 1.7946317195892334, 1.7927942276000977, 1.7910912036895752, 1.7895230054855347, 1.7880899906158447, 1.7867923974990845, 1.7856305837631226, 1.784604787826538, 1.7837153673171997, 1.782962441444397, 1.7823461294174194, 1.7818666696548462, 1.7815240621566772, 1.7813185453414917, 1.765625, 1.7656941413879395, 1.7659015655517578, 1.7662471532821655, 1.7667309045791626, 1.76735258102417, 1.7681121826171875, 1.7690094709396362, 1.770044207572937, 1.7712162733078003, 1.7725251913070679, 1.7739708423614502, 1.7755528688430786, 1.777270793914795, 1.7791242599487305, 1.7811129093170166, 1.7832362651824951, 1.7854938507080078, 1.787885069847107, 1.7904095649719238, 1.7930666208267212, 1.7958556413650513, 1.7987761497497559, 1.8018274307250977, 1.8050087690353394, 1.8083195686340332, 1.8117589950561523, 1.815326452255249, 1.8190211057662964, 1.8228422403335571, 1.8267890214920044, 1.8308606147766113, 1.8350563049316406, 1.8393751382827759, 1.8438161611557007, 1.8483787775039673, 1.8530617952346802, 1.8578643798828125, 1.8627856969833374, 1.8678247928619385, 1.8729807138442993, 1.878252387046814, 1.8836389780044556, 1.8891394138336182, 1.8947527408599854, 1.9004778861999512, 1.9063140153884888, 1.9122599363327026, 1.918314814567566, 1.924477458000183, 1.9307467937469482, 1.9371219873428345, 1.9436017274856567, 1.9501852989196777, 1.9568713903427124, 1.9636590480804443, 1.9705473184585571, 1.9775350093841553, 1.9846210479736328, 1.9918044805526733, 1.999084234237671, 2.0064592361450195, 2.0139286518096924, 2.021491050720215, 2.0291454792022705, 2.036891222000122, 2.044726848602295, 2.0526516437530518, 2.060664415359497, 2.0687642097473145, 2.0769498348236084, 2.0852205753326416, 2.0935750007629395, 2.1020126342773438, 2.11053204536438, 2.1191325187683105, 2.1278128623962402, 2.1365723609924316, 2.1454098224639893, 2.1543242931365967, 2.1633150577545166, 2.1723806858062744, 2.181520938873291, 2.1907341480255127, 2.2000200748443604, 2.2093772888183594, 2.2188050746917725, 2.228302478790283, 2.2378687858581543, 2.2475030422210693, 2.257204294204712, 2.2669715881347656, 2.276804208755493, 2.2867014408111572, 2.2966623306274414, 2.3066861629486084, 2.3167717456817627, 2.326918840408325, 2.3371260166168213, 2.347393035888672, 2.3577187061309814, 2.368102550506592, 2.3785438537597656, 2.3890416622161865, 2.399595022201538, 2.410203695297241, 2.4208667278289795, 2.4315834045410156, 2.4423530101776123, 2.4531748294830322, 2.464048147201538, 2.4749724864959717, 2.4859468936920166, 2.4969708919525146, 2.5080437660217285, 2.519164800643921, 2.5303335189819336, 2.5415492057800293, 2.55281138420105, 2.5641191005706787, 2.575472116470337, 2.586869716644287, 2.598311185836792, 2.6097960472106934, 2.621323585510254, 2.6328935623168945, 2.644505262374878, 2.656157970428467, 2.667851448059082, 2.656157970428467, 2.644505262374878, 2.6328935623168945, 2.621323585510254, 2.6097960472106934, 2.598311185836792, 2.586869716644287, 2.575472116470337, 2.5641191005706787, 2.55281138420105, 2.5415492057800293, 2.5303335189819336, 2.519164800643921, 2.5080437660217285, 2.4969708919525146, 2.4859468936920166, 2.4749724864959717, 2.464048147201538, 2.4531748294830322, 2.4423530101776123, 2.4315834045410156, 2.4208667278289795, 2.410203695297241, 2.399595022201538, 2.3890416622161865, 2.3785438537597656, 2.368102550506592, 2.3577187061309814, 2.347393035888672, 2.3371260166168213, 2.326918840408325, 2.3167717456817627, 2.3066861629486084, 2.2966623306274414, 2.2867014408111572, 2.276804208755493, 2.2669715881347656, 2.257204294204712, 2.2475030422210693, 2.2378687858581543, 2.228302478790283, 2.2188050746917725, 2.2093772888183594, 2.2000200748443604, 2.1907341480255127, 2.181520938873291, 2.1723806858062744, 2.1633150577545166, 2.1543242931365967, 2.1454098224639893, 2.1365723609924316, 2.1278128623962402, 2.1191325187683105, 2.11053204536438, 2.1020126342773438, 2.0935750007629395, 2.0852205753326416, 2.0769498348236084, 2.0687642097473145, 2.060664415359497, 2.0526516437530518, 2.044726848602295, 2.036891222000122, 2.0291454792022705, 2.021491050720215, 2.0139286518096924, 2.0064592361450195, 1.999084234237671, 1.9918044805526733, 1.9846210479736328, 1.9775350093841553, 1.9705473184585571, 1.9636590480804443, 1.9568713903427124, 1.9501852989196777, 1.9436017274856567, 1.9371219873428345, 1.9307467937469482, 1.924477458000183, 1.918314814567566, 1.9122599363327026, 1.9063140153884888, 1.9004778861999512, 1.8947527408599854, 1.8891394138336182, 1.8836389780044556, 1.878252387046814, 1.8729807138442993, 1.8678247928619385, 1.8627856969833374, 1.8578643798828125, 1.8530617952346802, 1.8483787775039673, 1.8438161611557007, 1.8393751382827759, 1.8350563049316406, 1.8308606147766113, 1.8267890214920044, 1.8228422403335571, 1.8190211057662964, 1.815326452255249, 1.8117589950561523, 1.8083195686340332, 1.8050087690353394, 1.8018274307250977, 1.7987761497497559, 1.7958556413650513, 1.7930666208267212, 1.7904095649719238, 1.787885069847107, 1.7854938507080078, 1.7832362651824951, 1.7811129093170166, 1.7791242599487305, 1.777270793914795, 1.7755528688430786, 1.7739708423614502, 1.7725251913070679, 1.7712162733078003, 1.770044207572937, 1.7690094709396362, 1.7681121826171875, 1.76735258102417, 1.7667309045791626, 1.7662471532821655, 1.7659015655517578, 1.7656941413879395, 1.75, 1.7500697374343872, 1.7502789497375488, 1.7506276369094849, 1.7511156797409058, 1.751742959022522, 1.752509355545044, 1.7534146308898926, 1.7544585466384888, 1.755640983581543, 1.7569615840911865, 1.7584199905395508, 1.7600159645080566, 1.761749029159546, 1.76361882686615, 1.765625, 1.7677669525146484, 1.770044207572937, 1.772456407546997, 1.7750027179718018, 1.7776827812194824, 1.7804960012435913, 1.7834416627883911, 1.7865190505981445, 1.7897276878356934, 1.7930666208267212, 1.7965352535247803, 1.8001328706741333, 1.803858757019043, 1.8077118396759033, 1.8116916418075562, 1.8157970905303955, 1.820027470588684, 1.8243818283081055, 1.8288593292236328, 1.8334591388702393, 1.8381801843643188, 1.8430216312408447, 1.847982406616211, 1.8530617952346802, 1.858258605003357, 1.8635720014572144, 1.869000792503357, 1.8745442628860474, 1.8802011013031006, 1.8859704732894897, 1.8918513059616089, 1.8978426456451416, 1.9039433002471924, 1.9101521968841553, 1.9164685010910034, 1.9228910207748413, 1.929418683052063, 1.9360504150390625, 1.9427851438522339, 1.9496219158172607, 1.9565595388412476, 1.9635969400405884, 1.9707331657409668, 1.9779670238494873, 1.9852975606918335, 1.9927235841751099, 2.000244140625, 2.0078580379486084, 2.015564441680908, 2.023362159729004, 2.03125, 2.03922700881958, 2.047292470932007, 2.0554449558258057, 2.063683271408081, 2.072006940841675, 2.0804145336151123, 2.0889053344726562, 2.097477912902832, 2.1061317920684814, 2.11486554145813, 2.12367844581604, 2.1325693130493164, 2.1415371894836426, 2.1505813598632812, 2.159700632095337, 2.168894052505493, 2.1781609058380127, 2.1875, 2.1969106197357178, 2.2063915729522705, 2.2159423828125, 2.2255616188049316, 2.2352490425109863, 2.2450032234191895, 2.2548234462738037, 2.2647087574005127, 2.274658679962158, 2.2846720218658447, 2.294748067855835, 2.3048861026763916, 2.3150851726531982, 2.3253443241119385, 2.335663080215454, 2.3460404872894287, 2.356475830078125, 2.3669683933258057, 2.3775172233581543, 2.3881216049194336, 2.3987810611724854, 2.409494638442993, 2.4202616214752197, 2.4310812950134277, 2.441953182220459, 2.452876091003418, 2.4638500213623047, 2.4748737812042236, 2.4859468936920166, 2.4970686435699463, 2.5082383155822754, 2.5194554328918457, 2.530719518661499, 2.542029619216919, 2.553385019302368, 2.5647854804992676, 2.57623028755188, 2.587718963623047, 2.599250555038452, 2.6108248233795166, 2.622441053390503, 2.634098768234253, 2.6457974910736084, 2.657536506652832, 2.6457974910736084, 2.634098768234253, 2.622441053390503, 2.6108248233795166, 2.599250555038452, 2.587718963623047, 2.57623028755188, 2.5647854804992676, 2.553385019302368, 2.542029619216919, 2.530719518661499, 2.5194554328918457, 2.5082383155822754, 2.4970686435699463, 2.4859468936920166, 2.4748737812042236, 2.4638500213623047, 2.452876091003418, 2.441953182220459, 2.4310812950134277, 2.4202616214752197, 2.409494638442993, 2.3987810611724854, 2.3881216049194336, 2.3775172233581543, 2.3669683933258057, 2.356475830078125, 2.3460404872894287, 2.335663080215454, 2.3253443241119385, 2.3150851726531982, 2.3048861026763916, 2.294748067855835, 2.2846720218658447, 2.274658679962158, 2.2647087574005127, 2.2548234462738037, 2.2450032234191895, 2.2352490425109863, 2.2255616188049316, 2.2159423828125, 2.2063915729522705, 2.1969106197357178, 2.1875, 2.1781609058380127, 2.168894052505493, 2.159700632095337, 2.1505813598632812, 2.1415371894836426, 2.1325693130493164, 2.12367844581604, 2.11486554145813, 2.1061317920684814, 2.097477912902832, 2.0889053344726562, 2.0804145336151123, 2.072006940841675, 2.063683271408081, 2.0554449558258057, 2.047292470932007, 2.03922700881958, 2.03125, 2.023362159729004, 2.015564441680908, 2.0078580379486084, 2.000244140625, 1.9927235841751099, 1.9852975606918335, 1.9779670238494873, 1.9707331657409668, 1.9635969400405884, 1.9565595388412476, 1.9496219158172607, 1.9427851438522339, 1.9360504150390625, 1.929418683052063, 1.9228910207748413, 1.9164685010910034, 1.9101521968841553, 1.9039433002471924, 1.8978426456451416, 1.8918513059616089, 1.8859704732894897, 1.8802011013031006, 1.8745442628860474, 1.869000792503357, 1.8635720014572144, 1.858258605003357, 1.8530617952346802, 1.847982406616211, 1.8430216312408447, 1.8381801843643188, 1.8334591388702393, 1.8288593292236328, 1.8243818283081055, 1.820027470588684, 1.8157970905303955, 1.8116916418075562, 1.8077118396759033, 1.803858757019043, 1.8001328706741333, 1.7965352535247803, 1.7930666208267212, 1.7897276878356934, 1.7865190505981445, 1.7834416627883911, 1.7804960012435913, 1.7776827812194824, 1.7750027179718018, 1.772456407546997, 1.770044207572937, 1.7677669525146484, 1.765625, 1.76361882686615, 1.761749029159546, 1.7600159645080566, 1.7584199905395508, 1.7569615840911865, 1.755640983581543, 1.7544585466384888, 1.7534146308898926, 1.752509355545044, 1.751742959022522, 1.7511156797409058, 1.7506276369094849, 1.7502789497375488, 1.7500697374343872, 1.734375, 1.734445333480835, 1.7346564531326294, 1.7350083589553833, 1.7355008125305176, 1.7361336946487427, 1.736906886100769, 1.7378203868865967, 1.7388737201690674, 1.740066647529602, 1.7413990497589111, 1.742870569229126, 1.7444807291030884, 1.7462291717529297, 1.7481156587600708, 1.7501394748687744, 1.7523003816604614, 1.754597783088684, 1.7570310831069946, 1.7595998048782349, 1.7623032331466675, 1.7651410102844238, 1.7681121826171875, 1.7712162733078003, 1.7744524478912354, 1.777820110321045, 1.7813185453414917, 1.7849467992782593, 1.7887042760849, 1.7925900220870972, 1.7966032028198242, 1.8007431030273438, 1.8050087690353394, 1.8093992471694946, 1.8139138221740723, 1.8185513019561768, 1.8233109712600708, 1.8281917572021484, 1.8331927061080933, 1.8383129835128784, 1.8435513973236084, 1.8489069938659668, 1.8543788194656372, 1.8599658012390137, 1.8656668663024902, 1.8714810609817505, 1.8774073123931885, 1.8834445476531982, 1.8895916938781738, 1.8958476781845093, 1.9022114276885986, 1.908681869506836, 1.9152579307556152, 1.9219385385513306, 1.9287225008010864, 1.935608983039856, 1.942596673965454, 1.949684500694275, 1.9568713903427124, 1.9641563892364502, 1.9715381860733032, 1.9790159463882446, 1.9865883588790894, 1.994254469871521, 2.0020132064819336, 2.0098633766174316, 2.0178041458129883, 2.025834083557129, 2.033952474594116, 2.0421581268310547, 2.050450086593628, 2.0588271617889404, 2.067288398742676, 2.0758328437805176, 2.0844593048095703, 2.0931668281555176, 2.101954460144043, 2.11082124710083, 2.1197659969329834, 2.1287879943847656, 2.1378860473632812, 2.147059202194214, 2.156306505203247, 2.1656272411346436, 2.175020217895508, 2.1844844818115234, 2.194019317626953, 2.2036235332489014, 2.21329665184021, 2.2230372428894043, 2.232844829559326, 2.24271821975708, 2.252656936645508, 2.262659788131714, 2.272726058959961, 2.2828547954559326, 2.2930452823638916, 2.3032968044281006, 2.313608169555664, 2.323979139328003, 2.3344085216522217, 2.344895601272583, 2.3554396629333496, 2.366039752960205, 2.3766956329345703, 2.3874058723449707, 2.398170232772827, 2.4089879989624023, 2.419857978820801, 2.4307799339294434, 2.4417531490325928, 2.4527766704559326, 2.4638500213623047, 2.4749724864959717, 2.4861433506011963, 2.497361898422241, 2.5086276531219482, 2.51993989944458, 2.5312981605529785, 2.5427017211914062, 2.554149866104126, 2.5656421184539795, 2.5771777629852295, 2.588756561279297, 2.6003775596618652, 2.6120402812957764, 2.623744010925293, 2.635488748550415, 2.647273540496826, 2.635488748550415, 2.623744010925293, 2.6120402812957764, 2.6003775596618652, 2.588756561279297, 2.5771777629852295, 2.5656421184539795, 2.554149866104126, 2.5427017211914062, 2.5312981605529785, 2.51993989944458, 2.5086276531219482, 2.497361898422241, 2.4861433506011963, 2.4749724864959717, 2.4638500213623047, 2.4527766704559326, 2.4417531490325928, 2.4307799339294434, 2.419857978820801, 2.4089879989624023, 2.398170232772827, 2.3874058723449707, 2.3766956329345703, 2.366039752960205, 2.3554396629333496, 2.344895601272583, 2.3344085216522217, 2.323979139328003, 2.313608169555664, 2.3032968044281006, 2.2930452823638916, 2.2828547954559326, 2.272726058959961, 2.262659788131714, 2.252656936645508, 2.24271821975708, 2.232844829559326, 2.2230372428894043, 2.21329665184021, 2.2036235332489014, 2.194019317626953, 2.1844844818115234, 2.175020217895508, 2.1656272411346436, 2.156306505203247, 2.147059202194214, 2.1378860473632812, 2.1287879943847656, 2.1197659969329834, 2.11082124710083, 2.101954460144043, 2.0931668281555176, 2.0844593048095703, 2.0758328437805176, 2.067288398742676, 2.0588271617889404, 2.050450086593628, 2.0421581268310547, 2.033952474594116, 2.025834083557129, 2.0178041458129883, 2.0098633766174316, 2.0020132064819336, 1.994254469871521, 1.9865883588790894, 1.9790159463882446, 1.9715381860733032, 1.9641563892364502, 1.9568713903427124, 1.949684500694275, 1.942596673965454, 1.935608983039856, 1.9287225008010864, 1.9219385385513306, 1.9152579307556152, 1.908681869506836, 1.9022114276885986, 1.8958476781845093, 1.8895916938781738, 1.8834445476531982, 1.8774073123931885, 1.8714810609817505, 1.8656668663024902, 1.8599658012390137, 1.8543788194656372, 1.8489069938659668, 1.8435513973236084, 1.8383129835128784, 1.8331927061080933, 1.8281917572021484, 1.8233109712600708, 1.8185513019561768, 1.8139138221740723, 1.8093992471694946, 1.8050087690353394, 1.8007431030273438, 1.7966032028198242, 1.7925900220870972, 1.7887042760849, 1.7849467992782593, 1.7813185453414917, 1.777820110321045, 1.7744524478912354, 1.7712162733078003, 1.7681121826171875, 1.7651410102844238, 1.7623032331466675, 1.7595998048782349, 1.7570310831069946, 1.754597783088684, 1.7523003816604614, 1.7501394748687744, 1.7481156587600708, 1.7462291717529297, 1.7444807291030884, 1.742870569229126, 1.7413990497589111, 1.740066647529602, 1.7388737201690674, 1.7378203868865967, 1.736906886100769, 1.7361336946487427, 1.7355008125305176, 1.7350083589553833, 1.7346564531326294, 1.734445333480835, 1.71875, 1.7188210487365723, 1.7190340757369995, 1.7193890810012817, 1.7198859453201294, 1.7205246686935425, 1.7213048934936523, 1.722226619720459, 1.7232894897460938, 1.7244932651519775, 1.7258377075195312, 1.7273223400115967, 1.7289470434188843, 1.7307112216949463, 1.732614517211914, 1.7346564531326294, 1.7368366718292236, 1.7391544580459595, 1.7416093349456787, 1.7442008256912231, 1.746928095817566, 1.7497906684875488, 1.7527879476547241, 1.755919098854065, 1.7591835260391235, 1.762580394744873, 1.7661088705062866, 1.7697683572769165, 1.7735579013824463, 1.7774767875671387, 1.7815240621566772, 1.7856988906860352, 1.7900004386901855, 1.7944276332855225, 1.7989797592163086, 1.803655743598938, 1.8084545135498047, 1.8133753538131714, 1.8184170722961426, 1.8235787153244019, 1.8288593292236328, 1.8342578411102295, 1.8397732973098755, 1.8454045057296753, 1.851150393486023, 1.857010006904602, 1.8629822731018066, 1.8690661191940308, 1.875260353088379, 1.8815640211105347, 1.8879759311676025, 1.8944950103759766, 1.9011201858520508, 1.9078502655029297, 1.9146841764450073, 1.9216209650039673, 1.9286593198776245, 1.935798168182373, 1.943036437034607, 1.9503730535507202, 1.957806944847107, 1.965336799621582, 1.9729617834091187, 1.9806805849075317, 1.9884922504425049, 1.9963957071304321, 2.004389762878418, 2.0124733448028564, 2.0206453800201416, 2.028904914855957, 2.0372507572174072, 2.045681953430176, 2.054197311401367, 2.062795877456665, 2.071476697921753, 2.0802385807037354, 2.089080572128296, 2.098001718521118, 2.1070010662078857, 2.116077423095703, 2.125229835510254, 2.1344573497772217, 2.14375901222229, 2.1531341075897217, 2.162581205368042, 2.1720998287200928, 2.1816887855529785, 2.191347122192383, 2.2010738849639893, 2.2108685970306396, 2.2207298278808594, 2.230656862258911, 2.2406489849090576, 2.2507052421569824, 2.260824680328369, 2.2710065841674805, 2.28125, 2.2915542125701904, 2.3019182682037354, 2.3123416900634766, 2.3228232860565186, 2.333362340927124, 2.3439583778381348, 2.3546102046966553, 2.3653173446655273, 2.3760790824890137, 2.386894464492798, 2.3977630138397217, 2.4086837768554688, 2.419656276702881, 2.4306795597076416, 2.4417531490325928, 2.452876091003418, 2.464048147201538, 2.4752683639526367, 2.4865360260009766, 2.4978506565093994, 2.509211540222168, 2.520618200302124, 2.532069683074951, 2.5435657501220703, 2.555105447769165, 2.5666885375976562, 2.5783143043518066, 2.589982271194458, 2.601691484451294, 2.6134417057037354, 2.625232458114624, 2.6370630264282227, 2.625232458114624, 2.6134417057037354, 2.601691484451294, 2.589982271194458, 2.5783143043518066, 2.5666885375976562, 2.555105447769165, 2.5435657501220703, 2.532069683074951, 2.520618200302124, 2.509211540222168, 2.4978506565093994, 2.4865360260009766, 2.4752683639526367, 2.464048147201538, 2.452876091003418, 2.4417531490325928, 2.4306795597076416, 2.419656276702881, 2.4086837768554688, 2.3977630138397217, 2.386894464492798, 2.3760790824890137, 2.3653173446655273, 2.3546102046966553, 2.3439583778381348, 2.333362340927124, 2.3228232860565186, 2.3123416900634766, 2.3019182682037354, 2.2915542125701904, 2.28125, 2.2710065841674805, 2.260824680328369, 2.2507052421569824, 2.2406489849090576, 2.230656862258911, 2.2207298278808594, 2.2108685970306396, 2.2010738849639893, 2.191347122192383, 2.1816887855529785, 2.1720998287200928, 2.162581205368042, 2.1531341075897217, 2.14375901222229, 2.1344573497772217, 2.125229835510254, 2.116077423095703, 2.1070010662078857, 2.098001718521118, 2.089080572128296, 2.0802385807037354, 2.071476697921753, 2.062795877456665, 2.054197311401367, 2.045681953430176, 2.0372507572174072, 2.028904914855957, 2.0206453800201416, 2.0124733448028564, 2.004389762878418, 1.9963957071304321, 1.9884922504425049, 1.9806805849075317, 1.9729617834091187, 1.965336799621582, 1.957806944847107, 1.9503730535507202, 1.943036437034607, 1.935798168182373, 1.9286593198776245, 1.9216209650039673, 1.9146841764450073, 1.9078502655029297, 1.9011201858520508, 1.8944950103759766, 1.8879759311676025, 1.8815640211105347, 1.875260353088379, 1.8690661191940308, 1.8629822731018066, 1.857010006904602, 1.851150393486023, 1.8454045057296753, 1.8397732973098755, 1.8342578411102295, 1.8288593292236328, 1.8235787153244019, 1.8184170722961426, 1.8133753538131714, 1.8084545135498047, 1.803655743598938, 1.7989797592163086, 1.7944276332855225, 1.7900004386901855, 1.7856988906860352, 1.7815240621566772, 1.7774767875671387, 1.7735579013824463, 1.7697683572769165, 1.7661088705062866, 1.762580394744873, 1.7591835260391235, 1.755919098854065, 1.7527879476547241, 1.7497906684875488, 1.746928095817566, 1.7442008256912231, 1.7416093349456787, 1.7391544580459595, 1.7368366718292236, 1.7346564531326294, 1.732614517211914, 1.7307112216949463, 1.7289470434188843, 1.7273223400115967, 1.7258377075195312, 1.7244932651519775, 1.7232894897460938, 1.722226619720459, 1.7213048934936523, 1.7205246686935425, 1.7198859453201294, 1.7193890810012817, 1.7190340757369995, 1.7188210487365723, 1.703125, 1.70319664478302, 1.7034116983413696, 1.7037699222564697, 1.7042714357376099, 1.7049158811569214, 1.7057033777236938, 1.706633448600769, 1.7077059745788574, 1.7089207172393799, 1.7102774381637573, 1.7117756605148315, 1.7134150266647339, 1.7151951789855957, 1.7171157598495483, 1.7191760540008545, 1.721375823020935, 1.7237144708633423, 1.7261912822723389, 1.7288057804107666, 1.7315573692321777, 1.734445333480835, 1.7374690771102905, 1.7406277656555176, 1.7439208030700684, 1.747347354888916, 1.7509065866470337, 1.754597783088684, 1.7584199905395508, 1.762372612953186, 1.7664544582366943, 1.7706648111343384, 1.7750027179718018, 1.7794673442840576, 1.7840574979782104, 1.788772463798523, 1.7936111688613892, 1.7985725402832031, 1.803655743598938, 1.8088594675064087, 1.814182996749878, 1.8196250200271606, 1.8251845836639404, 1.8308606147766113, 1.836652159690857, 1.8425579071044922, 1.8485767841339111, 1.854707956314087, 1.860949993133545, 1.8673019409179688, 1.873762607574463, 1.8803309202194214, 1.8870058059692383, 1.893786072731018, 1.9006706476211548, 1.907658338546753, 1.914747953414917, 1.9219385385513306, 1.9292287826538086, 1.9366177320480347, 1.9441041946411133, 1.951686978340149, 1.9593650102615356, 1.9671372175216675, 1.9750025272369385, 1.9829596281051636, 1.9910075664520264, 1.999145269393921, 2.007371664047241, 2.015685558319092, 2.0240859985351562, 2.032571792602539, 2.0411417484283447, 2.049795150756836, 2.058530807495117, 2.067347526550293, 2.076244354248047, 2.0852205753326416, 2.0942747592926025, 2.1034059524536133, 2.1126132011413574, 2.1218957901000977, 2.1312522888183594, 2.1406819820404053, 2.150183916091919, 2.159757137298584, 2.169400453567505, 2.1791133880615234, 2.188894748687744, 2.1987433433532715, 2.2086589336395264, 2.218639850616455, 2.2286858558654785, 2.2387959957122803, 2.2489688396453857, 2.259204149246216, 2.269500970840454, 2.279858350753784, 2.2902753353118896, 2.3007514476776123, 2.3112854957580566, 2.3218770027160645, 2.3325252532958984, 2.343229055404663, 2.3539881706237793, 2.3648014068603516, 2.3756680488586426, 2.386587619781494, 2.397559404373169, 2.4085824489593506, 2.419656276702881, 2.4307799339294434, 2.441953182220459, 2.4531748294830322, 2.464444398880005, 2.4757614135742188, 2.4871251583099365, 2.498534679412842, 2.5099897384643555, 2.5214896202087402, 2.533033609390259, 2.544621229171753, 2.5562520027160645, 2.567924976348877, 2.5796396732330322, 2.591395854949951, 2.6031925678253174, 2.6150293350219727, 2.626905918121338, 2.6150293350219727, 2.6031925678253174, 2.591395854949951, 2.5796396732330322, 2.567924976348877, 2.5562520027160645, 2.544621229171753, 2.533033609390259, 2.5214896202087402, 2.5099897384643555, 2.498534679412842, 2.4871251583099365, 2.4757614135742188, 2.464444398880005, 2.4531748294830322, 2.441953182220459, 2.4307799339294434, 2.419656276702881, 2.4085824489593506, 2.397559404373169, 2.386587619781494, 2.3756680488586426, 2.3648014068603516, 2.3539881706237793, 2.343229055404663, 2.3325252532958984, 2.3218770027160645, 2.3112854957580566, 2.3007514476776123, 2.2902753353118896, 2.279858350753784, 2.269500970840454, 2.259204149246216, 2.2489688396453857, 2.2387959957122803, 2.2286858558654785, 2.218639850616455, 2.2086589336395264, 2.1987433433532715, 2.188894748687744, 2.1791133880615234, 2.169400453567505, 2.159757137298584, 2.150183916091919, 2.1406819820404053, 2.1312522888183594, 2.1218957901000977, 2.1126132011413574, 2.1034059524536133, 2.0942747592926025, 2.0852205753326416, 2.076244354248047, 2.067347526550293, 2.058530807495117, 2.049795150756836, 2.0411417484283447, 2.032571792602539, 2.0240859985351562, 2.015685558319092, 2.007371664047241, 1.999145269393921, 1.9910075664520264, 1.9829596281051636, 1.9750025272369385, 1.9671372175216675, 1.9593650102615356, 1.951686978340149, 1.9441041946411133, 1.9366177320480347, 1.9292287826538086, 1.9219385385513306, 1.914747953414917, 1.907658338546753, 1.9006706476211548, 1.893786072731018, 1.8870058059692383, 1.8803309202194214, 1.873762607574463, 1.8673019409179688, 1.860949993133545, 1.854707956314087, 1.8485767841339111, 1.8425579071044922, 1.836652159690857, 1.8308606147766113, 1.8251845836639404, 1.8196250200271606, 1.814182996749878, 1.8088594675064087, 1.803655743598938, 1.7985725402832031, 1.7936111688613892, 1.788772463798523, 1.7840574979782104, 1.7794673442840576, 1.7750027179718018, 1.7706648111343384, 1.7664544582366943, 1.762372612953186, 1.7584199905395508, 1.754597783088684, 1.7509065866470337, 1.747347354888916, 1.7439208030700684, 1.7406277656555176, 1.7374690771102905, 1.734445333480835, 1.7315573692321777, 1.7288057804107666, 1.7261912822723389, 1.7237144708633423, 1.721375823020935, 1.7191760540008545, 1.7171157598495483, 1.7151951789855957, 1.7134150266647339, 1.7117756605148315, 1.7102774381637573, 1.7089207172393799, 1.7077059745788574, 1.706633448600769, 1.7057033777236938, 1.7049158811569214, 1.7042714357376099, 1.7037699222564697, 1.7034116983413696, 1.70319664478302, 1.6875, 1.6875723600387573, 1.6877893209457397, 1.6881508827209473, 1.6886570453643799, 1.689307451248169, 1.690102219581604, 1.6910408735275269, 1.692123293876648, 1.6933492422103882, 1.694718360900879, 1.6962302923202515, 1.6978846788406372, 1.6996811628341675, 1.7016191482543945, 1.7036982774734497, 1.7059179544448853, 1.708277702331543, 1.710776925086975, 1.7134150266647339, 1.716191291809082, 1.7191051244735718, 1.7221556901931763, 1.7253425121307373, 1.7286646366119385, 1.732121229171753, 1.7357118129730225, 1.7394351959228516, 1.743290662765503, 1.7472774982452393, 1.751394510269165, 1.755640983581543, 1.7600159645080566, 1.7645184993743896, 1.769147515296936, 1.7739020586013794, 1.7787811756134033, 1.7837837934494019, 1.7889089584350586, 1.7941555976867676, 1.7995225191116333, 1.8050087690353394, 1.8106132745742798, 1.816334843635559, 1.8221725225448608, 1.828125, 1.8341913223266602, 1.8403702974319458, 1.846660852432251, 1.8530617952346802, 1.859571933746338, 1.8661901950836182, 1.872915506362915, 1.8797465562820435, 1.886682391166687, 1.893721580505371, 1.9008632898330688, 1.9081062078475952, 1.9154491424560547, 1.9228910207748413, 1.9304306507110596, 1.9380669593811035, 1.9457987546920776, 1.953624963760376, 1.961544394493103, 1.9695558547973633, 1.9776583909988403, 1.9858508110046387, 1.9941320419311523, 2.0025007724761963, 2.010956287384033, 2.0194971561431885, 2.028122663497925, 2.0368313789367676, 2.0456223487854004, 2.0544943809509277, 2.0634467601776123, 2.0724782943725586, 2.081587791442871, 2.0907745361328125, 2.100037097930908, 2.109375, 2.1187868118286133, 2.1282718181610107, 2.137828826904297, 2.1474571228027344, 2.1571555137634277, 2.1669232845306396, 2.1767592430114746, 2.1866626739501953, 2.1966326236724854, 2.2066681385040283, 2.216768503189087, 2.2269325256347656, 2.237159490585327, 2.247448682785034, 2.257798910140991, 2.26820969581604, 2.2786800861358643, 2.2892091274261475, 2.2997961044311523, 2.3104403018951416, 2.321141004562378, 2.331897020339966, 2.342708110809326, 2.3535730838775635, 2.3644914627075195, 2.375462532043457, 2.3864853382110596, 2.397559404373169, 2.4086837768554688, 2.419857978820801, 2.4310812950134277, 2.4423530101776123, 2.453672409057617, 2.465038776397705, 2.4764516353607178, 2.487910270690918, 2.4994139671325684, 2.5109622478485107, 2.522554397583008, 2.5341899394989014, 2.545868396759033, 2.557588577270508, 2.569350481033325, 2.581153631210327, 2.592996835708618, 2.6048800945281982, 2.61680269241333, 2.6048800945281982, 2.592996835708618, 2.581153631210327, 2.569350481033325, 2.557588577270508, 2.545868396759033, 2.5341899394989014, 2.522554397583008, 2.5109622478485107, 2.4994139671325684, 2.487910270690918, 2.4764516353607178, 2.465038776397705, 2.453672409057617, 2.4423530101776123, 2.4310812950134277, 2.419857978820801, 2.4086837768554688, 2.397559404373169, 2.3864853382110596, 2.375462532043457, 2.3644914627075195, 2.3535730838775635, 2.342708110809326, 2.331897020339966, 2.321141004562378, 2.3104403018951416, 2.2997961044311523, 2.2892091274261475, 2.2786800861358643, 2.26820969581604, 2.257798910140991, 2.247448682785034, 2.237159490585327, 2.2269325256347656, 2.216768503189087, 2.2066681385040283, 2.1966326236724854, 2.1866626739501953, 2.1767592430114746, 2.1669232845306396, 2.1571555137634277, 2.1474571228027344, 2.137828826904297, 2.1282718181610107, 2.1187868118286133, 2.109375, 2.100037097930908, 2.0907745361328125, 2.081587791442871, 2.0724782943725586, 2.0634467601776123, 2.0544943809509277, 2.0456223487854004, 2.0368313789367676, 2.028122663497925, 2.0194971561431885, 2.010956287384033, 2.0025007724761963, 1.9941320419311523, 1.9858508110046387, 1.9776583909988403, 1.9695558547973633, 1.961544394493103, 1.953624963760376, 1.9457987546920776, 1.9380669593811035, 1.9304306507110596, 1.9228910207748413, 1.9154491424560547, 1.9081062078475952, 1.9008632898330688, 1.893721580505371, 1.886682391166687, 1.8797465562820435, 1.872915506362915, 1.8661901950836182, 1.859571933746338, 1.8530617952346802, 1.846660852432251, 1.8403702974319458, 1.8341913223266602, 1.828125, 1.8221725225448608, 1.816334843635559, 1.8106132745742798, 1.8050087690353394, 1.7995225191116333, 1.7941555976867676, 1.7889089584350586, 1.7837837934494019, 1.7787811756134033, 1.7739020586013794, 1.769147515296936, 1.7645184993743896, 1.7600159645080566, 1.755640983581543, 1.751394510269165, 1.7472774982452393, 1.743290662765503, 1.7394351959228516, 1.7357118129730225, 1.732121229171753, 1.7286646366119385, 1.7253425121307373, 1.7221556901931763, 1.7191051244735718, 1.716191291809082, 1.7134150266647339, 1.710776925086975, 1.708277702331543, 1.7059179544448853, 1.7036982774734497, 1.7016191482543945, 1.6996811628341675, 1.6978846788406372, 1.6962302923202515, 1.694718360900879, 1.6933492422103882, 1.692123293876648, 1.6910408735275269, 1.690102219581604, 1.689307451248169, 1.6886570453643799, 1.6881508827209473, 1.6877893209457397, 1.6875723600387573, 1.671875, 1.671947956085205, 1.6721670627593994, 1.6725319623947144, 1.6730427742004395, 1.6736993789672852, 1.6745014190673828, 1.6754488945007324, 1.6765413284301758, 1.677778720855713, 1.679160475730896, 1.6806864738464355, 1.6823561191558838, 1.6841691732406616, 1.6861250400543213, 1.6882232427597046, 1.6904633045196533, 1.6928445100784302, 1.6953665018081665, 1.6980284452438354, 1.7008298635482788, 1.7037699222564697, 1.7068480253219604, 1.7100632190704346, 1.7134150266647339, 1.7169023752212524, 1.7205246686935425, 1.724280834197998, 1.7281701564788818, 1.732191801071167, 1.736344575881958, 1.7406277656555176, 1.7450404167175293, 1.7495814561843872, 1.7542498111724854, 1.7590447664260864, 1.7639648914337158, 1.7690094709396362, 1.7741773128509521, 1.7794673442840576, 1.7848783731460571, 1.7904095649719238, 1.7960596084594727, 1.8018274307250977, 1.8077118396759033, 1.8137118816375732, 1.8198262453079224, 1.8260538578033447, 1.8323935270309448, 1.8388440608978271, 1.8454045057296753, 1.8520734310150146, 1.8588497638702393, 1.8657323122024536, 1.8727200031280518, 1.8798115253448486, 1.8870058059692383, 1.8943016529083252, 1.9016979932785034, 1.9091933965682983, 1.9167869091033936, 1.924477458000183, 1.9322636127471924, 1.940144419670105, 1.9481185674667358, 1.9561851024627686, 1.9643428325653076, 1.972590446472168, 1.9809271097183228, 1.989351511001587, 1.9978625774383545, 2.0064592361450195, 2.0151405334472656, 2.023905038833618, 2.0327517986297607, 2.041679859161377, 2.0506882667541504, 2.0597755908966064, 2.068941116333008, 2.078183650970459, 2.0875022411346436, 2.096895933151245, 2.106363534927368, 2.1159043312072754, 2.125516891479492, 2.1352007389068604, 2.1449546813964844, 2.1547775268554688, 2.1646687984466553, 2.1746273040771484, 2.184652090072632, 2.194742441177368, 2.204897403717041, 2.215115785598755, 2.2253971099853516, 2.2357404232025146, 2.2461447715759277, 2.2566092014312744, 2.2671332359313965, 2.2777156829833984, 2.288355827331543, 2.2990529537200928, 2.3098063468933105, 2.32061505317688, 2.3314783573150635, 2.342395544052124, 2.353365659713745, 2.3643882274627686, 2.375462532043457, 2.386587619781494, 2.3977630138397217, 2.4089879989624023, 2.4202616214752197, 2.4315834045410156, 2.4429526329040527, 2.454368829727173, 2.4658310413360596, 2.4773387908935547, 2.488891363143921, 2.50048828125, 2.5121288299560547, 2.5238122940063477, 2.5355384349823, 2.5473062992095947, 2.559115409851074, 2.570965528488159, 2.582855463027954, 2.594785213470459, 2.6067538261413574, 2.594785213470459, 2.582855463027954, 2.570965528488159, 2.559115409851074, 2.5473062992095947, 2.5355384349823, 2.5238122940063477, 2.5121288299560547, 2.50048828125, 2.488891363143921, 2.4773387908935547, 2.4658310413360596, 2.454368829727173, 2.4429526329040527, 2.4315834045410156, 2.4202616214752197, 2.4089879989624023, 2.3977630138397217, 2.386587619781494, 2.375462532043457, 2.3643882274627686, 2.353365659713745, 2.342395544052124, 2.3314783573150635, 2.32061505317688, 2.3098063468933105, 2.2990529537200928, 2.288355827331543, 2.2777156829833984, 2.2671332359313965, 2.2566092014312744, 2.2461447715759277, 2.2357404232025146, 2.2253971099853516, 2.215115785598755, 2.204897403717041, 2.194742441177368, 2.184652090072632, 2.1746273040771484, 2.1646687984466553, 2.1547775268554688, 2.1449546813964844, 2.1352007389068604, 2.125516891479492, 2.1159043312072754, 2.106363534927368, 2.096895933151245, 2.0875022411346436, 2.078183650970459, 2.068941116333008, 2.0597755908966064, 2.0506882667541504, 2.041679859161377, 2.0327517986297607, 2.023905038833618, 2.0151405334472656, 2.0064592361450195, 1.9978625774383545, 1.989351511001587, 1.9809271097183228, 1.972590446472168, 1.9643428325653076, 1.9561851024627686, 1.9481185674667358, 1.940144419670105, 1.9322636127471924, 1.924477458000183, 1.9167869091033936, 1.9091933965682983, 1.9016979932785034, 1.8943016529083252, 1.8870058059692383, 1.8798115253448486, 1.8727200031280518, 1.8657323122024536, 1.8588497638702393, 1.8520734310150146, 1.8454045057296753, 1.8388440608978271, 1.8323935270309448, 1.8260538578033447, 1.8198262453079224, 1.8137118816375732, 1.8077118396759033, 1.8018274307250977, 1.7960596084594727, 1.7904095649719238, 1.7848783731460571, 1.7794673442840576, 1.7741773128509521, 1.7690094709396362, 1.7639648914337158, 1.7590447664260864, 1.7542498111724854, 1.7495814561843872, 1.7450404167175293, 1.7406277656555176, 1.736344575881958, 1.732191801071167, 1.7281701564788818, 1.724280834197998, 1.7205246686935425, 1.7169023752212524, 1.7134150266647339, 1.7100632190704346, 1.7068480253219604, 1.7037699222564697, 1.7008298635482788, 1.6980284452438354, 1.6953665018081665, 1.6928445100784302, 1.6904633045196533, 1.6882232427597046, 1.6861250400543213, 1.6841691732406616, 1.6823561191558838, 1.6806864738464355, 1.679160475730896, 1.677778720855713, 1.6765413284301758, 1.6754488945007324, 1.6745014190673828, 1.6736993789672852, 1.6730427742004395, 1.6725319623947144, 1.6721670627593994, 1.671947956085205, 1.65625, 1.6563236713409424, 1.656544804573059, 1.656913161277771, 1.6574288606643677, 1.6580915451049805, 1.6589012145996094, 1.6598575115203857, 1.66096031665802, 1.662209153175354, 1.6636039018630981, 1.6651442050933838, 1.6668294668197632, 1.6686593294143677, 1.670633316040039, 1.6727509498596191, 1.6750116348266602, 1.677414894104004, 1.679960012435913, 1.68264639377594, 1.6854733228683472, 1.6884400844573975, 1.691546082496643, 1.6947903633117676, 1.6981722116470337, 1.701690912246704, 1.7053455114364624, 1.7091350555419922, 1.7130587100982666, 1.7171157598495483, 1.7213048934936523, 1.7256253957748413, 1.7300763130187988, 1.7346564531326294, 1.7393649816513062, 1.7442008256912231, 1.7491627931594849, 1.7542498111724854, 1.7594610452651978, 1.764795184135437, 1.7702511548995972, 1.7758277654647827, 1.7815240621566772, 1.7873388528823853, 1.7932708263397217, 1.7993190288543701, 1.8054821491241455, 1.8117589950561523, 1.8181484937667847, 1.824649453163147, 1.8312606811523438, 1.83798086643219, 1.8448090553283691, 1.8517438173294067, 1.8587840795516968, 1.8659285306930542, 1.8731762170791626, 1.8805257081985474, 1.8879759311676025, 1.8955256938934326, 1.903173804283142, 1.910918951034546, 1.9187601804733276, 1.9266961812973022, 1.9347258806228638, 1.9428479671478271, 1.9510613679885864, 1.9593650102615356, 1.9677577018737793, 1.9762382507324219, 1.9848055839538574, 1.9934585094451904, 2.0021960735321045, 2.011017084121704, 2.0199203491210938, 2.028904914855957, 2.0379695892333984, 2.0471134185791016, 2.05633544921875, 2.0656344890594482, 2.075009346008301, 2.0844593048095703, 2.0939831733703613, 2.1035799980163574, 2.113248825073242, 2.12298846244812, 2.132798194885254, 2.142676830291748, 2.1526236534118652, 2.162637710571289, 2.172717809677124, 2.182863473892212, 2.193073272705078, 2.2033467292785645, 2.2136826515197754, 2.2240803241729736, 2.2345387935638428, 2.2450575828552246, 2.2556352615356445, 2.2662713527679443, 2.2769651412963867, 2.2877156734466553, 2.2985219955444336, 2.3093833923339844, 2.3202993869781494, 2.331268787384033, 2.3422911167144775, 2.353365659713745, 2.3644914627075195, 2.3756680488586426, 2.386894464492798, 2.398170232772827, 2.409494638442993, 2.4208667278289795, 2.432286024093628, 2.4437520503997803, 2.45526385307312, 2.4668209552764893, 2.4784224033355713, 2.490068197250366, 2.5017571449279785, 2.513489007949829, 2.5252630710601807, 2.537078619003296, 2.5489351749420166, 2.5608322620391846, 2.5727691650390625, 2.584745168685913, 2.5967602729797363, 2.584745168685913, 2.5727691650390625, 2.5608322620391846, 2.5489351749420166, 2.537078619003296, 2.5252630710601807, 2.513489007949829, 2.5017571449279785, 2.490068197250366, 2.4784224033355713, 2.4668209552764893, 2.45526385307312, 2.4437520503997803, 2.432286024093628, 2.4208667278289795, 2.409494638442993, 2.398170232772827, 2.386894464492798, 2.3756680488586426, 2.3644914627075195, 2.353365659713745, 2.3422911167144775, 2.331268787384033, 2.3202993869781494, 2.3093833923339844, 2.2985219955444336, 2.2877156734466553, 2.2769651412963867, 2.2662713527679443, 2.2556352615356445, 2.2450575828552246, 2.2345387935638428, 2.2240803241729736, 2.2136826515197754, 2.2033467292785645, 2.193073272705078, 2.182863473892212, 2.172717809677124, 2.162637710571289, 2.1526236534118652, 2.142676830291748, 2.132798194885254, 2.12298846244812, 2.113248825073242, 2.1035799980163574, 2.0939831733703613, 2.0844593048095703, 2.075009346008301, 2.0656344890594482, 2.05633544921875, 2.0471134185791016, 2.0379695892333984, 2.028904914855957, 2.0199203491210938, 2.011017084121704, 2.0021960735321045, 1.9934585094451904, 1.9848055839538574, 1.9762382507324219, 1.9677577018737793, 1.9593650102615356, 1.9510613679885864, 1.9428479671478271, 1.9347258806228638, 1.9266961812973022, 1.9187601804733276, 1.910918951034546, 1.903173804283142, 1.8955256938934326, 1.8879759311676025, 1.8805257081985474, 1.8731762170791626, 1.8659285306930542, 1.8587840795516968, 1.8517438173294067, 1.8448090553283691, 1.83798086643219, 1.8312606811523438, 1.824649453163147, 1.8181484937667847, 1.8117589950561523, 1.8054821491241455, 1.7993190288543701, 1.7932708263397217, 1.7873388528823853, 1.7815240621566772, 1.7758277654647827, 1.7702511548995972, 1.764795184135437, 1.7594610452651978, 1.7542498111724854, 1.7491627931594849, 1.7442008256912231, 1.7393649816513062, 1.7346564531326294, 1.7300763130187988, 1.7256253957748413, 1.7213048934936523, 1.7171157598495483, 1.7130587100982666, 1.7091350555419922, 1.7053455114364624, 1.701690912246704, 1.6981722116470337, 1.6947903633117676, 1.691546082496643, 1.6884400844573975, 1.6854733228683472, 1.68264639377594, 1.679960012435913, 1.677414894104004, 1.6750116348266602, 1.6727509498596191, 1.670633316040039, 1.6686593294143677, 1.6668294668197632, 1.6651442050933838, 1.6636039018630981, 1.662209153175354, 1.66096031665802, 1.6598575115203857, 1.6589012145996094, 1.6580915451049805, 1.6574288606643677, 1.656913161277771, 1.656544804573059, 1.6563236713409424, 1.640625, 1.6406993865966797, 1.6409225463867188, 1.6412944793701172, 1.6418150663375854, 1.6424840688705444, 1.6433013677597046, 1.6442668437957764, 1.6453800201416016, 1.6466407775878906, 1.6480486392974854, 1.6496033668518066, 1.6513044834136963, 1.6531516313552856, 1.6551440954208374, 1.657281517982483, 1.6595633029937744, 1.6619888544082642, 1.6645575761795044, 1.6672687530517578, 1.6701217889785767, 1.6731157302856445, 1.6762501001358032, 1.6795239448547363, 1.6829365491867065, 1.6864869594573975, 1.6901743412017822, 1.693997859954834, 1.6979565620422363, 1.7020494937896729, 1.7062757015228271, 1.7106342315673828, 1.7151240110397339, 1.719744086265564, 1.7244932651519775, 1.7293705940246582, 1.734375, 1.739505410194397, 1.744760513305664, 1.7501394748687744, 1.755640983581543, 1.7612639665603638, 1.7670072317123413, 1.77286958694458, 1.7788498401641846, 1.7849467992782593, 1.7911593914031982, 1.7974863052368164, 1.8039263486862183, 1.8104784488677979, 1.8171411752700806, 1.8239134550094604, 1.8307939767837524, 1.8377816677093506, 1.8448752164840698, 1.8520734310150146, 1.859375, 1.86677885055542, 1.8742836713790894, 1.8818883895874023, 1.8895916938781738, 1.8973922729492188, 1.9052891731262207, 1.9132810831069946, 1.921366810798645, 1.9295451641082764, 1.9378149509429932, 1.9461750984191895, 1.9546244144439697, 1.9631617069244385, 1.9717859029769897, 1.9804956912994385, 1.9892901182174683, 1.9981681108474731, 2.0071284770965576, 2.016170024871826, 2.025291681289673, 2.0344924926757812, 2.043771505355835, 2.0531272888183594, 2.062559127807617, 2.072065830230713, 2.08164644241333, 2.0912997722625732, 2.101025104522705, 2.11082124710083, 2.120687246322632, 2.130622148513794, 2.140625, 2.1506948471069336, 2.1608307361602783, 2.1710317134857178, 2.1812970638275146, 2.1916255950927734, 2.202016592025757, 2.2124691009521484, 2.222982406616211, 2.233555316925049, 2.244187355041504, 2.2548775672912598, 2.265625, 2.2764289379119873, 2.2872886657714844, 2.298203229904175, 2.3091719150543213, 2.3201942443847656, 2.331268787384033, 2.342395544052124, 2.3535730838775635, 2.3648014068603516, 2.3760790824890137, 2.3874058723449707, 2.3987810611724854, 2.410203695297241, 2.42167329788208, 2.4331893920898438, 2.4447507858276367, 2.45635724067688, 2.468008279800415, 2.4797027111053467, 2.491440534591675, 2.503220558166504, 2.515042543411255, 2.5269060134887695, 2.5388100147247314, 2.5507543087005615, 2.5627381801605225, 2.574761152267456, 2.586822509765625, 2.574761152267456, 2.5627381801605225, 2.5507543087005615, 2.5388100147247314, 2.5269060134887695, 2.515042543411255, 2.503220558166504, 2.491440534591675, 2.4797027111053467, 2.468008279800415, 2.45635724067688, 2.4447507858276367, 2.4331893920898438, 2.42167329788208, 2.410203695297241, 2.3987810611724854, 2.3874058723449707, 2.3760790824890137, 2.3648014068603516, 2.3535730838775635, 2.342395544052124, 2.331268787384033, 2.3201942443847656, 2.3091719150543213, 2.298203229904175, 2.2872886657714844, 2.2764289379119873, 2.265625, 2.2548775672912598, 2.244187355041504, 2.233555316925049, 2.222982406616211, 2.2124691009521484, 2.202016592025757, 2.1916255950927734, 2.1812970638275146, 2.1710317134857178, 2.1608307361602783, 2.1506948471069336, 2.140625, 2.130622148513794, 2.120687246322632, 2.11082124710083, 2.101025104522705, 2.0912997722625732, 2.08164644241333, 2.072065830230713, 2.062559127807617, 2.0531272888183594, 2.043771505355835, 2.0344924926757812, 2.025291681289673, 2.016170024871826, 2.0071284770965576, 1.9981681108474731, 1.9892901182174683, 1.9804956912994385, 1.9717859029769897, 1.9631617069244385, 1.9546244144439697, 1.9461750984191895, 1.9378149509429932, 1.9295451641082764, 1.921366810798645, 1.9132810831069946, 1.9052891731262207, 1.8973922729492188, 1.8895916938781738, 1.8818883895874023, 1.8742836713790894, 1.86677885055542, 1.859375, 1.8520734310150146, 1.8448752164840698, 1.8377816677093506, 1.8307939767837524, 1.8239134550094604, 1.8171411752700806, 1.8104784488677979, 1.8039263486862183, 1.7974863052368164, 1.7911593914031982, 1.7849467992782593, 1.7788498401641846, 1.77286958694458, 1.7670072317123413, 1.7612639665603638, 1.755640983581543, 1.7501394748687744, 1.744760513305664, 1.739505410194397, 1.734375, 1.7293705940246582, 1.7244932651519775, 1.719744086265564, 1.7151240110397339, 1.7106342315673828, 1.7062757015228271, 1.7020494937896729, 1.6979565620422363, 1.693997859954834, 1.6901743412017822, 1.6864869594573975, 1.6829365491867065, 1.6795239448547363, 1.6762501001358032, 1.6731157302856445, 1.6701217889785767, 1.6672687530517578, 1.6645575761795044, 1.6619888544082642, 1.6595633029937744, 1.657281517982483, 1.6551440954208374, 1.6531516313552856, 1.6513044834136963, 1.6496033668518066, 1.6480486392974854, 1.6466407775878906, 1.6453800201416016, 1.6442668437957764, 1.6433013677597046, 1.6424840688705444, 1.6418150663375854, 1.6412944793701172, 1.6409225463867188, 1.6406993865966797, 1.625, 1.625075101852417, 1.625300407409668, 1.625675916671753, 1.6262015104293823, 1.626876950263977, 1.6277021169662476, 1.6286767721176147, 1.62980055809021, 1.6310733556747437, 1.6324946880340576, 1.6340643167495728, 1.6357815265655518, 1.6376460790634155, 1.6396574974060059, 1.6418150663375854, 1.644118309020996, 1.64656662940979, 1.64915931224823, 1.6518957614898682, 1.6547752618789673, 1.6577969789505005, 1.66096031665802, 1.66426420211792, 1.6677080392837524, 1.6712907552719116, 1.6750116348266602, 1.6788697242736816, 1.6828639507293701, 1.6869935989379883, 1.691257357597351, 1.6956545114517212, 1.7001838684082031, 1.704844355583191, 1.7096349000930786, 1.7145545482635498, 1.719602108001709, 1.7247763872146606, 1.7300763130187988, 1.7355008125305176, 1.7410485744476318, 1.746718406677246, 1.752509355545044, 1.7584199905395508, 1.7644492387771606, 1.770595908164978, 1.7768585681915283, 1.7832362651824951, 1.7897276878356934, 1.7963314056396484, 1.803046464920044, 1.8098714351654053, 1.8168052434921265, 1.823846459388733, 1.8309940099716187, 1.8382465839385986, 1.8456028699874878, 1.8530617952346802, 1.8606219291687012, 1.8682821989059448, 1.8760414123535156, 1.883898138999939, 1.8918513059616089, 1.8998997211456299, 1.9080421924591064, 1.9162774085998535, 1.9246042966842651, 1.9330215454101562, 1.941528081893921, 1.9501227140426636, 1.9588042497634888, 1.9675716161727905, 1.9764235019683838, 1.9853589534759521, 1.9943768978118896, 2.0034759044647217, 2.012655258178711, 2.021913528442383, 2.03125, 2.040663242340088, 2.050152540206909, 2.0597164630889893, 2.0693540573120117, 2.0790646076202393, 2.0888469219207764, 2.0986998081207275, 2.1086225509643555, 2.1186139583587646, 2.1286733150482178, 2.1387994289398193, 2.148991346359253, 2.1592483520507812, 2.169569253921509, 2.1799535751342773, 2.1903998851776123, 2.2009074687957764, 2.2114758491516113, 2.2221035957336426, 2.232789993286133, 2.243534564971924, 2.25433611869812, 2.2651939392089844, 2.2761073112487793, 2.2870752811431885, 2.2980971336364746, 2.3091719150543213, 2.3202993869781494, 2.3314783573150635, 2.342708110809326, 2.3539881706237793, 2.3653173446655273, 2.3766956329345703, 2.3881216049194336, 2.399595022201538, 2.4111151695251465, 2.4226813316345215, 2.434292793273926, 2.445948839187622, 2.457648992538452, 2.469392776489258, 2.4811792373657227, 2.4930078983306885, 2.504878044128418, 2.516789436340332, 2.5287411212921143, 2.5407326221466064, 2.5527634620666504, 2.564833164215088, 2.5769410133361816, 2.564833164215088, 2.5527634620666504, 2.5407326221466064, 2.5287411212921143, 2.516789436340332, 2.504878044128418, 2.4930078983306885, 2.4811792373657227, 2.469392776489258, 2.457648992538452, 2.445948839187622, 2.434292793273926, 2.4226813316345215, 2.4111151695251465, 2.399595022201538, 2.3881216049194336, 2.3766956329345703, 2.3653173446655273, 2.3539881706237793, 2.342708110809326, 2.3314783573150635, 2.3202993869781494, 2.3091719150543213, 2.2980971336364746, 2.2870752811431885, 2.2761073112487793, 2.2651939392089844, 2.25433611869812, 2.243534564971924, 2.232789993286133, 2.2221035957336426, 2.2114758491516113, 2.2009074687957764, 2.1903998851776123, 2.1799535751342773, 2.169569253921509, 2.1592483520507812, 2.148991346359253, 2.1387994289398193, 2.1286733150482178, 2.1186139583587646, 2.1086225509643555, 2.0986998081207275, 2.0888469219207764, 2.0790646076202393, 2.0693540573120117, 2.0597164630889893, 2.050152540206909, 2.040663242340088, 2.03125, 2.021913528442383, 2.012655258178711, 2.0034759044647217, 1.9943768978118896, 1.9853589534759521, 1.9764235019683838, 1.9675716161727905, 1.9588042497634888, 1.9501227140426636, 1.941528081893921, 1.9330215454101562, 1.9246042966842651, 1.9162774085998535, 1.9080421924591064, 1.8998997211456299, 1.8918513059616089, 1.883898138999939, 1.8760414123535156, 1.8682821989059448, 1.8606219291687012, 1.8530617952346802, 1.8456028699874878, 1.8382465839385986, 1.8309940099716187, 1.823846459388733, 1.8168052434921265, 1.8098714351654053, 1.803046464920044, 1.7963314056396484, 1.7897276878356934, 1.7832362651824951, 1.7768585681915283, 1.770595908164978, 1.7644492387771606, 1.7584199905395508, 1.752509355545044, 1.746718406677246, 1.7410485744476318, 1.7355008125305176, 1.7300763130187988, 1.7247763872146606, 1.719602108001709, 1.7145545482635498, 1.7096349000930786, 1.704844355583191, 1.7001838684082031, 1.6956545114517212, 1.691257357597351, 1.6869935989379883, 1.6828639507293701, 1.6788697242736816, 1.6750116348266602, 1.6712907552719116, 1.6677080392837524, 1.66426420211792, 1.66096031665802, 1.6577969789505005, 1.6547752618789673, 1.6518957614898682, 1.64915931224823, 1.64656662940979, 1.644118309020996, 1.6418150663375854, 1.6396574974060059, 1.6376460790634155, 1.6357815265655518, 1.6340643167495728, 1.6324946880340576, 1.6310733556747437, 1.62980055809021, 1.6286767721176147, 1.6277021169662476, 1.626876950263977, 1.6262015104293823, 1.625675916671753, 1.625300407409668, 1.625075101852417, 1.609375, 1.6094508171081543, 1.6096783876419067, 1.6100574731826782, 1.6105881929397583, 1.6112700700759888, 1.6121032238006592, 1.6130872964859009, 1.6142220497131348, 1.6155071258544922, 1.6169421672821045, 1.618526816368103, 1.62026047706604, 1.6221429109573364, 1.6241735219955444, 1.6263515949249268, 1.6286767721176147, 1.6311482191085815, 1.633765459060669, 1.63652765750885, 1.6394340991973877, 1.6424840688705444, 1.6456767320632935, 1.649011254310608, 1.6524869203567505, 1.6561025381088257, 1.6598575115203857, 1.6637506484985352, 1.6677812337875366, 1.671947956085205, 1.6762501001358032, 1.6806864738464355, 1.685256004333496, 1.6899577379226685, 1.6947903633117676, 1.699752926826477, 1.704844355583191, 1.7100632190704346, 1.7154086828231812, 1.720879316329956, 1.7264741659164429, 1.732191801071167, 1.738031029701233, 1.7439907789230347, 1.7500697374343872, 1.756266713142395, 1.762580394744873, 1.7690094709396362, 1.7755528688430786, 1.7822091579437256, 1.7889772653579712, 1.7958556413650513, 1.8028433322906494, 1.809938907623291, 1.8171411752700806, 1.8244487047195435, 1.8318605422973633, 1.8393751382827759, 1.8469913005828857, 1.854707956314087, 1.8625235557556152, 1.8704371452331543, 1.8784472942352295, 1.8865529298782349, 1.8947527408599854, 1.903045415878296, 1.91143000125885, 1.9199049472808838, 1.9284694194793701, 1.9371219873428345, 1.9458614587783813, 1.9546868801116943, 1.9635969400405884, 1.972590446472168, 1.9816664457321167, 1.9908236265182495, 2.00006103515625, 2.0093774795532227, 2.0187718868255615, 2.028243064880371, 2.037790060043335, 2.0474116802215576, 2.0571069717407227, 2.0668749809265137, 2.0767147541046143, 2.086625099182129, 2.096604824066162, 2.1066534519195557, 2.116769552230835, 2.1269521713256836, 2.1372008323669434, 2.1475141048431396, 2.157891035079956, 2.1683311462402344, 2.178833246231079, 2.189396381378174, 2.2000200748443604, 2.210702896118164, 2.2214441299438477, 2.232243299484253, 2.2430992126464844, 2.2540111541748047, 2.2649784088134766, 2.2760000228881836, 2.2870752811431885, 2.298203229904175, 2.3093833923339844, 2.32061505317688, 2.331897020339966, 2.343229055404663, 2.3546102046966553, 2.366039752960205, 2.3775172233581543, 2.3890416622161865, 2.4006123542785645, 2.41222882270813, 2.4238903522491455, 2.435596227645874, 2.4473459720611572, 2.4591386318206787, 2.4709739685058594, 2.482851266860962, 2.494769811630249, 2.5067291259765625, 2.518728733062744, 2.5307676792144775, 2.5428457260131836, 2.554962158203125, 2.5671167373657227, 2.554962158203125, 2.5428457260131836, 2.5307676792144775, 2.518728733062744, 2.5067291259765625, 2.494769811630249, 2.482851266860962, 2.4709739685058594, 2.4591386318206787, 2.4473459720611572, 2.435596227645874, 2.4238903522491455, 2.41222882270813, 2.4006123542785645, 2.3890416622161865, 2.3775172233581543, 2.366039752960205, 2.3546102046966553, 2.343229055404663, 2.331897020339966, 2.32061505317688, 2.3093833923339844, 2.298203229904175, 2.2870752811431885, 2.2760000228881836, 2.2649784088134766, 2.2540111541748047, 2.2430992126464844, 2.232243299484253, 2.2214441299438477, 2.210702896118164, 2.2000200748443604, 2.189396381378174, 2.178833246231079, 2.1683311462402344, 2.157891035079956, 2.1475141048431396, 2.1372008323669434, 2.1269521713256836, 2.116769552230835, 2.1066534519195557, 2.096604824066162, 2.086625099182129, 2.0767147541046143, 2.0668749809265137, 2.0571069717407227, 2.0474116802215576, 2.037790060043335, 2.028243064880371, 2.0187718868255615, 2.0093774795532227, 2.00006103515625, 1.9908236265182495, 1.9816664457321167, 1.972590446472168, 1.9635969400405884, 1.9546868801116943, 1.9458614587783813, 1.9371219873428345, 1.9284694194793701, 1.9199049472808838, 1.91143000125885, 1.903045415878296, 1.8947527408599854, 1.8865529298782349, 1.8784472942352295, 1.8704371452331543, 1.8625235557556152, 1.854707956314087, 1.8469913005828857, 1.8393751382827759, 1.8318605422973633, 1.8244487047195435, 1.8171411752700806, 1.809938907623291, 1.8028433322906494, 1.7958556413650513, 1.7889772653579712, 1.7822091579437256, 1.7755528688430786, 1.7690094709396362, 1.762580394744873, 1.756266713142395, 1.7500697374343872, 1.7439907789230347, 1.738031029701233, 1.732191801071167, 1.7264741659164429, 1.720879316329956, 1.7154086828231812, 1.7100632190704346, 1.704844355583191, 1.699752926826477, 1.6947903633117676, 1.6899577379226685, 1.685256004333496, 1.6806864738464355, 1.6762501001358032, 1.671947956085205, 1.6677812337875366, 1.6637506484985352, 1.6598575115203857, 1.6561025381088257, 1.6524869203567505, 1.649011254310608, 1.6456767320632935, 1.6424840688705444, 1.6394340991973877, 1.63652765750885, 1.633765459060669, 1.6311482191085815, 1.6286767721176147, 1.6263515949249268, 1.6241735219955444, 1.6221429109573364, 1.62026047706604, 1.618526816368103, 1.6169421672821045, 1.6155071258544922, 1.6142220497131348, 1.6130872964859009, 1.6121032238006592, 1.6112700700759888, 1.6105881929397583, 1.6100574731826782, 1.6096783876419067, 1.6094508171081543, 1.59375, 1.5938265323638916, 1.5940563678741455, 1.594439148902893, 1.5949749946594238, 1.5956636667251587, 1.5965049266815186, 1.5974986553192139, 1.598644495010376, 1.5999419689178467, 1.6013909578323364, 1.602990984916687, 1.6047414541244507, 1.6066421270370483, 1.6086921691894531, 1.6108912229537964, 1.6132386922836304, 1.6157337427139282, 1.6183758974075317, 1.621164321899414, 1.624098300933838, 1.6271770000457764, 1.6303997039794922, 1.633765459060669, 1.6372733116149902, 1.6409225463867188, 1.644712209701538, 1.6486411094665527, 1.6527085304260254, 1.656913161277771, 1.6612542867660522, 1.6657304763793945, 1.6703410148620605, 1.6750845909118652, 1.679960012435913, 1.6849663257598877, 1.690102219581604, 1.6953665018081665, 1.7007580995559692, 1.7062757015228271, 1.7119182348251343, 1.7176843881607056, 1.7235727310180664, 1.7295823097229004, 1.7357118129730225, 1.741959810256958, 1.7483251094818115, 1.754806399345398, 1.7614026069641113, 1.7681121826171875, 1.774933934211731, 1.7818666696548462, 1.7889089584350586, 1.7960596084594727, 1.8033173084259033, 1.810680627822876, 1.8181484937667847, 1.8257195949554443, 1.8333925008773804, 1.8411661386489868, 1.849039077758789, 1.857010006904602, 1.8650779724121094, 1.8732413053512573, 1.881499171257019, 1.8898500204086304, 1.8982927799224854, 1.9068262577056885, 1.9154491424560547, 1.9241602420806885, 1.9329583644866943, 1.9418424367904663, 1.9508111476898193, 1.9598634243011475, 1.9689979553222656, 1.978213906288147, 1.987509846687317, 1.996884822845459, 2.0063376426696777, 2.015867233276367, 2.025472640991211, 2.0351524353027344, 2.0449059009552, 2.054732084274292, 2.064629554748535, 2.0745975971221924, 2.084635019302368, 2.094740867614746, 2.1049141883850098, 2.1151540279388428, 2.1254594326019287, 2.135829448699951, 2.1462631225585938, 2.15675950050354, 2.1673176288604736, 2.1779367923736572, 2.1886157989501953, 2.1993539333343506, 2.2101504802703857, 2.2210044860839844, 2.231915235519409, 2.2428815364837646, 2.2539029121398926, 2.2649784088134766, 2.2761073112487793, 2.2872886657714844, 2.2985219955444336, 2.3098063468933105, 2.321141004562378, 2.3325252532958984, 2.3439583778381348, 2.3554396629333496, 2.3669683933258057, 2.3785438537597656, 2.390165328979492, 2.401832342147827, 2.413544178009033, 2.425299882888794, 2.4370992183685303, 2.448941469192505, 2.4608259201049805, 2.4727518558502197, 2.4847190380096436, 2.4967262744903564, 2.5087735652923584, 2.520860195159912, 2.5329854488372803, 2.5451488494873047, 2.557349920272827, 2.5451488494873047, 2.5329854488372803, 2.520860195159912, 2.5087735652923584, 2.4967262744903564, 2.4847190380096436, 2.4727518558502197, 2.4608259201049805, 2.448941469192505, 2.4370992183685303, 2.425299882888794, 2.413544178009033, 2.401832342147827, 2.390165328979492, 2.3785438537597656, 2.3669683933258057, 2.3554396629333496, 2.3439583778381348, 2.3325252532958984, 2.321141004562378, 2.3098063468933105, 2.2985219955444336, 2.2872886657714844, 2.2761073112487793, 2.2649784088134766, 2.2539029121398926, 2.2428815364837646, 2.231915235519409, 2.2210044860839844, 2.2101504802703857, 2.1993539333343506, 2.1886157989501953, 2.1779367923736572, 2.1673176288604736, 2.15675950050354, 2.1462631225585938, 2.135829448699951, 2.1254594326019287, 2.1151540279388428, 2.1049141883850098, 2.094740867614746, 2.084635019302368, 2.0745975971221924, 2.064629554748535, 2.054732084274292, 2.0449059009552, 2.0351524353027344, 2.025472640991211, 2.015867233276367, 2.0063376426696777, 1.996884822845459, 1.987509846687317, 1.978213906288147, 1.9689979553222656, 1.9598634243011475, 1.9508111476898193, 1.9418424367904663, 1.9329583644866943, 1.9241602420806885, 1.9154491424560547, 1.9068262577056885, 1.8982927799224854, 1.8898500204086304, 1.881499171257019, 1.8732413053512573, 1.8650779724121094, 1.857010006904602, 1.849039077758789, 1.8411661386489868, 1.8333925008773804, 1.8257195949554443, 1.8181484937667847, 1.810680627822876, 1.8033173084259033, 1.7960596084594727, 1.7889089584350586, 1.7818666696548462, 1.774933934211731, 1.7681121826171875, 1.7614026069641113, 1.754806399345398, 1.7483251094818115, 1.741959810256958, 1.7357118129730225, 1.7295823097229004, 1.7235727310180664, 1.7176843881607056, 1.7119182348251343, 1.7062757015228271, 1.7007580995559692, 1.6953665018081665, 1.690102219581604, 1.6849663257598877, 1.679960012435913, 1.6750845909118652, 1.6703410148620605, 1.6657304763793945, 1.6612542867660522, 1.656913161277771, 1.6527085304260254, 1.6486411094665527, 1.644712209701538, 1.6409225463867188, 1.6372733116149902, 1.633765459060669, 1.6303997039794922, 1.6271770000457764, 1.624098300933838, 1.621164321899414, 1.6183758974075317, 1.6157337427139282, 1.6132386922836304, 1.6108912229537964, 1.6086921691894531, 1.6066421270370483, 1.6047414541244507, 1.602990984916687, 1.6013909578323364, 1.5999419689178467, 1.598644495010376, 1.5974986553192139, 1.5965049266815186, 1.5956636667251587, 1.5949749946594238, 1.594439148902893, 1.5940563678741455, 1.5938265323638916, 1.578125, 1.5782023668289185, 1.5784343481063843, 1.578821063041687, 1.579362154006958, 1.5800576210021973, 1.5809072256088257, 1.5819107294082642, 1.583067774772644, 1.5843781232833862, 1.5858412981033325, 1.5874569416046143, 1.5892245769500732, 1.5911437273025513, 1.5932137966156006, 1.5954341888427734, 1.597804307937622, 1.6003234386444092, 1.602990984916687, 1.6058061122894287, 1.608768105506897, 1.611876130104065, 1.6151292324066162, 1.618526816368103, 1.6220676898956299, 1.62575101852417, 1.6295758485794067, 1.633541226387024, 1.6376460790634155, 1.6418894529342651, 1.6462700366973877, 1.6507869958877563, 1.655439019203186, 1.6602251529693604, 1.6651442050933838, 1.6701948642730713, 1.675376057624817, 1.6806864738464355, 1.6861250400543213, 1.691690444946289, 1.6973813772201538, 1.70319664478302, 1.7091350555419922, 1.7151951789855957, 1.721375823020935, 1.7276756763458252, 1.734093427658081, 1.7406277656555176, 1.7472774982452393, 1.754041075706482, 1.7609174251556396, 1.7679049968719482, 1.7750027179718018, 1.7822091579437256, 1.7895230054855347, 1.796942949295044, 1.8044676780700684, 1.8120958805084229, 1.8198262453079224, 1.8276575803756714, 1.8355884552001953, 1.843617558479309, 1.8517438173294067, 1.8599658012390137, 1.8682821989059448, 1.8766919374465942, 1.8851935863494873, 1.893786072731018, 1.9024680852890015, 1.9112383127212524, 1.920095682144165, 1.9290390014648438, 1.9380669593811035, 1.9471784830093384, 1.9563722610473633, 1.9656473398208618, 1.9750025272369385, 1.9844365119934082, 1.9939483404159546, 2.0035369396209717, 2.0132009983062744, 2.022939682006836, 2.0327517986297607, 2.0426363945007324, 2.0525922775268555, 2.0626182556152344, 2.072713851928711, 2.0828776359558105, 2.093108654022217, 2.1034059524536133, 2.1137685775756836, 2.1241955757141113, 2.13468599319458, 2.1452391147613525, 2.155853748321533, 2.1665289402008057, 2.1772639751434326, 2.1880578994750977, 2.1989099979400635, 2.2098190784454346, 2.2207846641540527, 2.2318058013916016, 2.2428815364837646, 2.2540111541748047, 2.2651939392089844, 2.2764289379119873, 2.2877156734466553, 2.2990529537200928, 2.3104403018951416, 2.3218770027160645, 2.333362340927124, 2.344895601272583, 2.356475830078125, 2.368102550506592, 2.379775285720825, 2.3914928436279297, 2.403254985809326, 2.4150609970092773, 2.426910161972046, 2.4388017654418945, 2.450735330581665, 2.46271014213562, 2.4747257232666016, 2.486781358718872, 2.4988768100738525, 2.5110108852386475, 2.523183584213257, 2.5353939533233643, 2.5476417541503906, 2.5353939533233643, 2.523183584213257, 2.5110108852386475, 2.4988768100738525, 2.486781358718872, 2.4747257232666016, 2.46271014213562, 2.450735330581665, 2.4388017654418945, 2.426910161972046, 2.4150609970092773, 2.403254985809326, 2.3914928436279297, 2.379775285720825, 2.368102550506592, 2.356475830078125, 2.344895601272583, 2.333362340927124, 2.3218770027160645, 2.3104403018951416, 2.2990529537200928, 2.2877156734466553, 2.2764289379119873, 2.2651939392089844, 2.2540111541748047, 2.2428815364837646, 2.2318058013916016, 2.2207846641540527, 2.2098190784454346, 2.1989099979400635, 2.1880578994750977, 2.1772639751434326, 2.1665289402008057, 2.155853748321533, 2.1452391147613525, 2.13468599319458, 2.1241955757141113, 2.1137685775756836, 2.1034059524536133, 2.093108654022217, 2.0828776359558105, 2.072713851928711, 2.0626182556152344, 2.0525922775268555, 2.0426363945007324, 2.0327517986297607, 2.022939682006836, 2.0132009983062744, 2.0035369396209717, 1.9939483404159546, 1.9844365119934082, 1.9750025272369385, 1.9656473398208618, 1.9563722610473633, 1.9471784830093384, 1.9380669593811035, 1.9290390014648438, 1.920095682144165, 1.9112383127212524, 1.9024680852890015, 1.893786072731018, 1.8851935863494873, 1.8766919374465942, 1.8682821989059448, 1.8599658012390137, 1.8517438173294067, 1.843617558479309, 1.8355884552001953, 1.8276575803756714, 1.8198262453079224, 1.8120958805084229, 1.8044676780700684, 1.796942949295044, 1.7895230054855347, 1.7822091579437256, 1.7750027179718018, 1.7679049968719482, 1.7609174251556396, 1.754041075706482, 1.7472774982452393, 1.7406277656555176, 1.734093427658081, 1.7276756763458252, 1.721375823020935, 1.7151951789855957, 1.7091350555419922, 1.70319664478302, 1.6973813772201538, 1.691690444946289, 1.6861250400543213, 1.6806864738464355, 1.675376057624817, 1.6701948642730713, 1.6651442050933838, 1.6602251529693604, 1.655439019203186, 1.6507869958877563, 1.6462700366973877, 1.6418894529342651, 1.6376460790634155, 1.633541226387024, 1.6295758485794067, 1.62575101852417, 1.6220676898956299, 1.618526816368103, 1.6151292324066162, 1.611876130104065, 1.608768105506897, 1.6058061122894287, 1.602990984916687, 1.6003234386444092, 1.597804307937622, 1.5954341888427734, 1.5932137966156006, 1.5911437273025513, 1.5892245769500732, 1.5874569416046143, 1.5858412981033325, 1.5843781232833862, 1.583067774772644, 1.5819107294082642, 1.5809072256088257, 1.5800576210021973, 1.579362154006958, 1.578821063041687, 1.5784343481063843, 1.5782023668289185, 1.5625, 1.5625780820846558, 1.5628124475479126, 1.563202977180481, 1.5637495517730713, 1.5644519329071045, 1.565310001373291, 1.5663233995437622, 1.5674920082092285, 1.5688153505325317, 1.5702930688858032, 1.5719246864318848, 1.5737098455429077, 1.5756478309631348, 1.5777381658554077, 1.5799803733825684, 1.5823736190795898, 1.5849173069000244, 1.5876107215881348, 1.590453028678894, 1.5934436321258545, 1.5965814590454102, 1.5998656749725342, 1.6032955646514893, 1.6068700551986694, 1.6105881929397583, 1.61444890499115, 1.6184513568878174, 1.6225943565368652, 1.626876950263977, 1.6312979459762573, 1.6358561515808105, 1.6405506134033203, 1.6453800201416016, 1.6503432989120483, 1.655439019203186, 1.6606662273406982, 1.6660236120224, 1.671509861946106, 1.677123785018921, 1.6828639507293701, 1.6887292861938477, 1.694718360900879, 1.7008298635482788, 1.7070624828338623, 1.7134150266647339, 1.7198859453201294, 1.7264741659164429, 1.7331780195236206, 1.7399965524673462, 1.746928095817566, 1.7539714574813843, 1.7611253261566162, 1.768388271331787, 1.7757591009140015, 1.7832362651824951, 1.7908185720443726, 1.7985047101974487, 1.806293249130249, 1.814182996749878, 1.8221725225448608, 1.8302605152130127, 1.838445782661438, 1.846726894378662, 1.855102777481079, 1.8635720014572144, 1.8721332550048828, 1.880785346031189, 1.8895270824432373, 1.8983571529388428, 1.9072743654251099, 1.9162774085998535, 1.9253652095794678, 1.9345365762710571, 1.9437901973724365, 1.953125, 1.962539792060852, 1.9720335006713867, 1.981604814529419, 1.9912528991699219, 2.000976324081421, 2.0107741355895996, 2.0206453800201416, 2.0305888652801514, 2.0406033992767334, 2.0506882667541504, 2.0608420372009277, 2.0710642337799072, 2.081353187561035, 2.0917084217071533, 2.102128744125366, 2.1126132011413574, 2.1231610774993896, 2.1337709426879883, 2.144442319869995, 2.1551740169525146, 2.1659653186798096, 2.1768155097961426, 2.187723159790039, 2.198687791824341, 2.2097086906433105, 2.2207846641540527, 2.231915235519409, 2.2430992126464844, 2.25433611869812, 2.265625, 2.2769651412963867, 2.288355827331543, 2.2997961044311523, 2.3112854957580566, 2.3228232860565186, 2.3344085216522217, 2.3460404872894287, 2.3577187061309814, 2.3694424629211426, 2.381211042404175, 2.393023729324341, 2.4048798084259033, 2.416778802871704, 2.428720235824585, 2.4407029151916504, 2.4527268409729004, 2.4647910594940186, 2.4768950939178467, 2.4890384674072266, 2.501220464706421, 2.5134403705596924, 2.525697946548462, 2.537992477416992, 2.525697946548462, 2.5134403705596924, 2.501220464706421, 2.4890384674072266, 2.4768950939178467, 2.4647910594940186, 2.4527268409729004, 2.4407029151916504, 2.428720235824585, 2.416778802871704, 2.4048798084259033, 2.393023729324341, 2.381211042404175, 2.3694424629211426, 2.3577187061309814, 2.3460404872894287, 2.3344085216522217, 2.3228232860565186, 2.3112854957580566, 2.2997961044311523, 2.288355827331543, 2.2769651412963867, 2.265625, 2.25433611869812, 2.2430992126464844, 2.231915235519409, 2.2207846641540527, 2.2097086906433105, 2.198687791824341, 2.187723159790039, 2.1768155097961426, 2.1659653186798096, 2.1551740169525146, 2.144442319869995, 2.1337709426879883, 2.1231610774993896, 2.1126132011413574, 2.102128744125366, 2.0917084217071533, 2.081353187561035, 2.0710642337799072, 2.0608420372009277, 2.0506882667541504, 2.0406033992767334, 2.0305888652801514, 2.0206453800201416, 2.0107741355895996, 2.000976324081421, 1.9912528991699219, 1.981604814529419, 1.9720335006713867, 1.962539792060852, 1.953125, 1.9437901973724365, 1.9345365762710571, 1.9253652095794678, 1.9162774085998535, 1.9072743654251099, 1.8983571529388428, 1.8895270824432373, 1.880785346031189, 1.8721332550048828, 1.8635720014572144, 1.855102777481079, 1.846726894378662, 1.838445782661438, 1.8302605152130127, 1.8221725225448608, 1.814182996749878, 1.806293249130249, 1.7985047101974487, 1.7908185720443726, 1.7832362651824951, 1.7757591009140015, 1.768388271331787, 1.7611253261566162, 1.7539714574813843, 1.746928095817566, 1.7399965524673462, 1.7331780195236206, 1.7264741659164429, 1.7198859453201294, 1.7134150266647339, 1.7070624828338623, 1.7008298635482788, 1.694718360900879, 1.6887292861938477, 1.6828639507293701, 1.677123785018921, 1.671509861946106, 1.6660236120224, 1.6606662273406982, 1.655439019203186, 1.6503432989120483, 1.6453800201416016, 1.6405506134033203, 1.6358561515808105, 1.6312979459762573, 1.626876950263977, 1.6225943565368652, 1.6184513568878174, 1.61444890499115, 1.6105881929397583, 1.6068700551986694, 1.6032955646514893, 1.5998656749725342, 1.5965814590454102, 1.5934436321258545, 1.590453028678894, 1.5876107215881348, 1.5849173069000244, 1.5823736190795898, 1.5799803733825684, 1.5777381658554077, 1.5756478309631348, 1.5737098455429077, 1.5719246864318848, 1.5702930688858032, 1.5688153505325317, 1.5674920082092285, 1.5663233995437622, 1.565310001373291, 1.5644519329071045, 1.5637495517730713, 1.563202977180481, 1.5628124475479126, 1.5625780820846558, 1.546875, 1.5469539165496826, 1.5471906661987305, 1.5475850105285645, 1.5481370687484741, 1.5488466024398804, 1.5497132539749146, 1.5507370233535767, 1.551917314529419, 1.5532538890838623, 1.554746389389038, 1.556394338607788, 1.558197259902954, 1.5601544380187988, 1.5622656345367432, 1.5645298957824707, 1.5669467449188232, 1.5695154666900635, 1.572235345840454, 1.5751054286956787, 1.578125, 1.5812932252883911, 1.5846091508865356, 1.5880719423294067, 1.591680645942688, 1.5954341888427734, 1.5993314981460571, 1.6033717393875122, 1.6075536012649536, 1.611876130104065, 1.6163381338119507, 1.6209384202957153, 1.625675916671753, 1.630549430847168, 1.6355576515197754, 1.6406993865966797, 1.6459734439849854, 1.6513783931732178, 1.656913161277771, 1.6625763177871704, 1.6683666706085205, 1.6742826700210571, 1.6803232431411743, 1.6864869594573975, 1.692772388458252, 1.6991783380508423, 1.7057033777236938, 1.712346076965332, 1.7191051244735718, 1.7259790897369385, 1.7329667806625366, 1.740066647529602, 1.7472774982452393, 1.754597783088684, 1.7620261907577515, 1.7695614099502563, 1.7772021293640137, 1.7849467992782593, 1.7927942276000977, 1.8007431030273438, 1.808791995048523, 1.8169395923614502, 1.8251845836639404, 1.8335256576538086, 1.8419615030288696, 1.8504908084869385, 1.8591123819351196, 1.8678247928619385, 1.8766268491744995, 1.8855173587799072, 1.8944950103759766, 1.9035584926605225, 1.912706732749939, 1.9219385385513306, 1.9312524795532227, 1.9406476020812988, 1.9501227140426636, 1.9596765041351318, 1.9693078994750977, 1.9790159463882446, 1.9887992143630981, 1.9986567497253418, 2.008587598800659, 2.0185904502868652, 2.0286641120910645, 2.0388081073760986, 2.049020767211914, 2.0593016147613525, 2.0696489810943604, 2.0800626277923584, 2.090540885925293, 2.101083278656006, 2.1116886138916016, 2.1223559379577637, 2.133084297180176, 2.1438729763031006, 2.1547210216522217, 2.1656272411346436, 2.176591157913208, 2.1876115798950195, 2.198687791824341, 2.2098190784454346, 2.2210044860839844, 2.232243299484253, 2.243534564971924, 2.2548775672912598, 2.2662713527679443, 2.2777156829833984, 2.2892091274261475, 2.3007514476776123, 2.3123416900634766, 2.323979139328003, 2.335663080215454, 2.347393035888672, 2.35916805267334, 2.3709876537323, 2.3828508853912354, 2.3947575092315674, 2.4067065715789795, 2.4186975955963135, 2.430729866027832, 2.442802667617798, 2.454915761947632, 2.4670681953430176, 2.479259729385376, 2.4914894104003906, 2.5037569999694824, 2.516061782836914, 2.5284030437469482, 2.516061782836914, 2.5037569999694824, 2.4914894104003906, 2.479259729385376, 2.4670681953430176, 2.454915761947632, 2.442802667617798, 2.430729866027832, 2.4186975955963135, 2.4067065715789795, 2.3947575092315674, 2.3828508853912354, 2.3709876537323, 2.35916805267334, 2.347393035888672, 2.335663080215454, 2.323979139328003, 2.3123416900634766, 2.3007514476776123, 2.2892091274261475, 2.2777156829833984, 2.2662713527679443, 2.2548775672912598, 2.243534564971924, 2.232243299484253, 2.2210044860839844, 2.2098190784454346, 2.198687791824341, 2.1876115798950195, 2.176591157913208, 2.1656272411346436, 2.1547210216522217, 2.1438729763031006, 2.133084297180176, 2.1223559379577637, 2.1116886138916016, 2.101083278656006, 2.090540885925293, 2.0800626277923584, 2.0696489810943604, 2.0593016147613525, 2.049020767211914, 2.0388081073760986, 2.0286641120910645, 2.0185904502868652, 2.008587598800659, 1.9986567497253418, 1.9887992143630981, 1.9790159463882446, 1.9693078994750977, 1.9596765041351318, 1.9501227140426636, 1.9406476020812988, 1.9312524795532227, 1.9219385385513306, 1.912706732749939, 1.9035584926605225, 1.8944950103759766, 1.8855173587799072, 1.8766268491744995, 1.8678247928619385, 1.8591123819351196, 1.8504908084869385, 1.8419615030288696, 1.8335256576538086, 1.8251845836639404, 1.8169395923614502, 1.808791995048523, 1.8007431030273438, 1.7927942276000977, 1.7849467992782593, 1.7772021293640137, 1.7695614099502563, 1.7620261907577515, 1.754597783088684, 1.7472774982452393, 1.740066647529602, 1.7329667806625366, 1.7259790897369385, 1.7191051244735718, 1.712346076965332, 1.7057033777236938, 1.6991783380508423, 1.692772388458252, 1.6864869594573975, 1.6803232431411743, 1.6742826700210571, 1.6683666706085205, 1.6625763177871704, 1.656913161277771, 1.6513783931732178, 1.6459734439849854, 1.6406993865966797, 1.6355576515197754, 1.630549430847168, 1.625675916671753, 1.6209384202957153, 1.6163381338119507, 1.611876130104065, 1.6075536012649536, 1.6033717393875122, 1.5993314981460571, 1.5954341888427734, 1.591680645942688, 1.5880719423294067, 1.5846091508865356, 1.5812932252883911, 1.578125, 1.5751054286956787, 1.572235345840454, 1.5695154666900635, 1.5669467449188232, 1.5645298957824707, 1.5622656345367432, 1.5601544380187988, 1.558197259902954, 1.556394338607788, 1.554746389389038, 1.5532538890838623, 1.551917314529419, 1.5507370233535767, 1.5497132539749146, 1.5488466024398804, 1.5481370687484741, 1.5475850105285645, 1.5471906661987305, 1.5469539165496826, 1.53125, 1.5313297510147095, 1.5315688848495483, 1.531967282295227, 1.5325249433517456, 1.5332417488098145, 1.5341172218322754, 1.5351512432098389, 1.5363435745239258, 1.537693738937378, 1.539201259613037, 1.5408658981323242, 1.542686939239502, 1.5446637868881226, 1.5467960834503174, 1.5490829944610596, 1.5515239238739014, 1.5541181564331055, 1.556864857673645, 1.5597631931304932, 1.5628124475479126, 1.566011667251587, 1.5693598985671997, 1.5728563070297241, 1.5764998197555542, 1.580289363861084, 1.584223985671997, 1.5883026123046875, 1.5925240516662598, 1.596887230873108, 1.6013909578323364, 1.6060341596603394, 1.6108155250549316, 1.6157337427139282, 1.6207878589630127, 1.625976324081421, 1.6312979459762573, 1.636751413345337, 1.6423354148864746, 1.6480486392974854, 1.653889775276184, 1.6598575115203857, 1.6659504175186157, 1.6721670627593994, 1.6785061359405518, 1.6849663257598877, 1.691546082496643, 1.6982440948486328, 1.7050590515136719, 1.7119895219802856, 1.7190340757369995, 1.7261912822723389, 1.7334598302841187, 1.7408381700515747, 1.7483251094818115, 1.755919098854065, 1.76361882686615, 1.7714229822158813, 1.7793301343917847, 1.7873388528823853, 1.795447826385498, 1.803655743598938, 1.8119611740112305, 1.8203628063201904, 1.8288593292236328, 1.837449550628662, 1.8461319208145142, 1.854905366897583, 1.863768458366394, 1.8727200031280518, 1.881758689880371, 1.890883207321167, 1.9000924825668335, 1.9093852043151855, 1.9187601804733276, 1.9282162189483643, 1.9377520084381104, 1.94736647605896, 1.9570585489273071, 1.9668269157409668, 1.9766706228256226, 1.9865883588790894, 1.9965790510177612, 2.0066418647766113, 2.016775369644165, 2.0269787311553955, 2.0372507572174072, 2.047590494155884, 2.057996988296509, 2.0684690475463867, 2.0790059566497803, 2.089606523513794, 2.1002697944641113, 2.110994815826416, 2.1217806339263916, 2.132626533508301, 2.143531322479248, 2.154494285583496, 2.1655144691467285, 2.176591157913208, 2.187723159790039, 2.1989099979400635, 2.2101504802703857, 2.2214441299438477, 2.232789993286133, 2.244187355041504, 2.2556352615356445, 2.2671332359313965, 2.2786800861358643, 2.2902753353118896, 2.3019182682037354, 2.313608169555664, 2.3253443241119385, 2.3371260166168213, 2.348952531814575, 2.360823154449463, 2.372737407684326, 2.3846943378448486, 2.396693706512451, 2.4087345600128174, 2.42081618309021, 2.43293833732605, 2.4451003074645996, 2.457301378250122, 2.469541072845459, 2.481818675994873, 2.494133710861206, 2.5064857006073, 2.518874168395996, 2.5064857006073, 2.494133710861206, 2.481818675994873, 2.469541072845459, 2.457301378250122, 2.4451003074645996, 2.43293833732605, 2.42081618309021, 2.4087345600128174, 2.396693706512451, 2.3846943378448486, 2.372737407684326, 2.360823154449463, 2.348952531814575, 2.3371260166168213, 2.3253443241119385, 2.313608169555664, 2.3019182682037354, 2.2902753353118896, 2.2786800861358643, 2.2671332359313965, 2.2556352615356445, 2.244187355041504, 2.232789993286133, 2.2214441299438477, 2.2101504802703857, 2.1989099979400635, 2.187723159790039, 2.176591157913208, 2.1655144691467285, 2.154494285583496, 2.143531322479248, 2.132626533508301, 2.1217806339263916, 2.110994815826416, 2.1002697944641113, 2.089606523513794, 2.0790059566497803, 2.0684690475463867, 2.057996988296509, 2.047590494155884, 2.0372507572174072, 2.0269787311553955, 2.016775369644165, 2.0066418647766113, 1.9965790510177612, 1.9865883588790894, 1.9766706228256226, 1.9668269157409668, 1.9570585489273071, 1.94736647605896, 1.9377520084381104, 1.9282162189483643, 1.9187601804733276, 1.9093852043151855, 1.9000924825668335, 1.890883207321167, 1.881758689880371, 1.8727200031280518, 1.863768458366394, 1.854905366897583, 1.8461319208145142, 1.837449550628662, 1.8288593292236328, 1.8203628063201904, 1.8119611740112305, 1.803655743598938, 1.795447826385498, 1.7873388528823853, 1.7793301343917847, 1.7714229822158813, 1.76361882686615, 1.755919098854065, 1.7483251094818115, 1.7408381700515747, 1.7334598302841187, 1.7261912822723389, 1.7190340757369995, 1.7119895219802856, 1.7050590515136719, 1.6982440948486328, 1.691546082496643, 1.6849663257598877, 1.6785061359405518, 1.6721670627593994, 1.6659504175186157, 1.6598575115203857, 1.653889775276184, 1.6480486392974854, 1.6423354148864746, 1.636751413345337, 1.6312979459762573, 1.625976324081421, 1.6207878589630127, 1.6157337427139282, 1.6108155250549316, 1.6060341596603394, 1.6013909578323364, 1.596887230873108, 1.5925240516662598, 1.5883026123046875, 1.584223985671997, 1.580289363861084, 1.5764998197555542, 1.5728563070297241, 1.5693598985671997, 1.566011667251587, 1.5628124475479126, 1.5597631931304932, 1.556864857673645, 1.5541181564331055, 1.5515239238739014, 1.5490829944610596, 1.5467960834503174, 1.5446637868881226, 1.542686939239502, 1.5408658981323242, 1.539201259613037, 1.537693738937378, 1.5363435745239258, 1.5351512432098389, 1.5341172218322754, 1.5332417488098145, 1.5325249433517456, 1.531967282295227, 1.5315688848495483, 1.5313297510147095, 1.515625, 1.5157055854797363, 1.5159471035003662, 1.5163496732711792, 1.5169130563735962, 1.5176372528076172, 1.5185216665267944, 1.5195664167404175, 1.5207709074020386, 1.5221349000930786, 1.5236577987670898, 1.5253393650054932, 1.5271788835525513, 1.529175877571106, 1.5313297510147095, 1.533639669418335, 1.5361051559448242, 1.5387253761291504, 1.5414994955062866, 1.544426679611206, 1.5475062131881714, 1.5507370233535767, 1.5541181564331055, 1.557648777961731, 1.5613276958465576, 1.565153956413269, 1.5691266059875488, 1.573244333267212, 1.5775060653686523, 1.5819107294082642, 1.5864570140838623, 1.5911437273025513, 1.5959696769714355, 1.60093355178833, 1.6060341596603394, 1.6112700700759888, 1.6166402101516724, 1.6221429109573364, 1.627777099609375, 1.633541226387024, 1.6394340991973877, 1.6454541683197021, 1.6516002416610718, 1.6578706502914429, 1.66426420211792, 1.6707794666290283, 1.677414894104004, 1.6841691732406616, 1.6910408735275269, 1.6980284452438354, 1.705130696296692, 1.712346076965332, 1.7196730375289917, 1.7271103858947754, 1.7346564531326294, 1.7423101663589478, 1.7500697374343872, 1.7579339742660522, 1.7659015655517578, 1.7739708423614502, 1.7821407318115234, 1.7904095649719238, 1.7987761497497559, 1.8072391748428345, 1.8157970905303955, 1.8244487047195435, 1.8331927061080933, 1.8420277833938599, 1.8509525060653687, 1.8599658012390137, 1.8690661191940308, 1.878252387046814, 1.8875232934951782, 1.8968775272369385, 1.9063140153884888, 1.915831446647644, 1.9254286289215088, 1.9351043701171875, 1.9448574781417847, 1.9546868801116943, 1.964591383934021, 1.9745697975158691, 1.9846210479736328, 1.994744062423706, 2.0049376487731934, 2.0152010917663574, 2.0255327224731445, 2.0359320640563965, 2.0463979244232178, 2.056929111480713, 2.0675246715545654, 2.078183650970459, 2.0889053344726562, 2.0996882915496826, 2.11053204536438, 2.1214354038238525, 2.132397413253784, 2.1434173583984375, 2.154494285583496, 2.1656272411346436, 2.1768155097961426, 2.1880578994750977, 2.1993539333343506, 2.210702896118164, 2.2221035957336426, 2.233555316925049, 2.2450575828552246, 2.2566092014312744, 2.26820969581604, 2.279858350753784, 2.2915542125701904, 2.3032968044281006, 2.3150851726531982, 2.326918840408325, 2.338796854019165, 2.3507187366485596, 2.3626840114593506, 2.3746914863586426, 2.3867411613464355, 2.398831844329834, 2.410963296890259, 2.4231348037719727, 2.4353456497192383, 2.4475953578948975, 2.459883213043213, 2.4722087383270264, 2.4845714569091797, 2.4969708919525146, 2.509406089782715, 2.4969708919525146, 2.4845714569091797, 2.4722087383270264, 2.459883213043213, 2.4475953578948975, 2.4353456497192383, 2.4231348037719727, 2.410963296890259, 2.398831844329834, 2.3867411613464355, 2.3746914863586426, 2.3626840114593506, 2.3507187366485596, 2.338796854019165, 2.326918840408325, 2.3150851726531982, 2.3032968044281006, 2.2915542125701904, 2.279858350753784, 2.26820969581604, 2.2566092014312744, 2.2450575828552246, 2.233555316925049, 2.2221035957336426, 2.210702896118164, 2.1993539333343506, 2.1880578994750977, 2.1768155097961426, 2.1656272411346436, 2.154494285583496, 2.1434173583984375, 2.132397413253784, 2.1214354038238525, 2.11053204536438, 2.0996882915496826, 2.0889053344726562, 2.078183650970459, 2.0675246715545654, 2.056929111480713, 2.0463979244232178, 2.0359320640563965, 2.0255327224731445, 2.0152010917663574, 2.0049376487731934, 1.994744062423706, 1.9846210479736328, 1.9745697975158691, 1.964591383934021, 1.9546868801116943, 1.9448574781417847, 1.9351043701171875, 1.9254286289215088, 1.915831446647644, 1.9063140153884888, 1.8968775272369385, 1.8875232934951782, 1.878252387046814, 1.8690661191940308, 1.8599658012390137, 1.8509525060653687, 1.8420277833938599, 1.8331927061080933, 1.8244487047195435, 1.8157970905303955, 1.8072391748428345, 1.7987761497497559, 1.7904095649719238, 1.7821407318115234, 1.7739708423614502, 1.7659015655517578, 1.7579339742660522, 1.7500697374343872, 1.7423101663589478, 1.7346564531326294, 1.7271103858947754, 1.7196730375289917, 1.712346076965332, 1.705130696296692, 1.6980284452438354, 1.6910408735275269, 1.6841691732406616, 1.677414894104004, 1.6707794666290283, 1.66426420211792, 1.6578706502914429, 1.6516002416610718, 1.6454541683197021, 1.6394340991973877, 1.633541226387024, 1.627777099609375, 1.6221429109573364, 1.6166402101516724, 1.6112700700759888, 1.6060341596603394, 1.60093355178833, 1.5959696769714355, 1.5911437273025513, 1.5864570140838623, 1.5819107294082642, 1.5775060653686523, 1.573244333267212, 1.5691266059875488, 1.565153956413269, 1.5613276958465576, 1.557648777961731, 1.5541181564331055, 1.5507370233535767, 1.5475062131881714, 1.544426679611206, 1.5414994955062866, 1.5387253761291504, 1.5361051559448242, 1.533639669418335, 1.5313297510147095, 1.529175877571106, 1.5271788835525513, 1.5253393650054932, 1.5236577987670898, 1.5221349000930786, 1.5207709074020386, 1.5195664167404175, 1.5185216665267944, 1.5176372528076172, 1.5169130563735962, 1.5163496732711792, 1.5159471035003662, 1.5157055854797363, 1.5, 1.5000814199447632, 1.5003254413604736, 1.5007323026657104, 1.5013015270233154, 1.5020331144332886, 1.5029268264770508, 1.5039823055267334, 1.5051993131637573, 1.5065773725509644, 1.5081160068511963, 1.5098148584365845, 1.5116733312606812, 1.5136908292770386, 1.5158666372299194, 1.518200159072876, 1.520690679550171, 1.5233373641967773, 1.5261393785476685, 1.529096007347107, 1.5322062969207764, 1.5354692935943604, 1.5388840436935425, 1.5424494743347168, 1.546164631843567, 1.5500283241271973, 1.5540395975112915, 1.558197259902954, 1.5625, 1.5669467449188232, 1.5715364217758179, 1.5762674808502197, 1.5811388492584229, 1.5861490964889526, 1.5912971496582031, 1.5965814590454102, 1.6020007133483887, 1.6075536012649536, 1.6132386922836304, 1.6190546751022339, 1.625, 1.6310733556747437, 1.6372733116149902, 1.6435984373092651, 1.6500473022460938, 1.6566184759140015, 1.6633104085922241, 1.6701217889785767, 1.6770509481430054, 1.6840966939926147, 1.691257357597351, 1.6985316276550293, 1.7059179544448853, 1.7134150266647339, 1.7210211753845215, 1.7287352085113525, 1.7365554571151733, 1.7444807291030884, 1.752509355545044, 1.7606401443481445, 1.7688714265823364, 1.7772021293640137, 1.7856305837631226, 1.7941555976867676, 1.8027756214141846, 1.811489462852478, 1.8202956914901733, 1.829193115234375, 1.8381801843643188, 1.8472557067871094, 1.8564183712005615, 1.8656668663024902, 1.875, 1.8844164609909058, 1.893915057182312, 1.9034944772720337, 1.9131535291671753, 1.9228910207748413, 1.9327057600021362, 1.942596673965454, 1.9525624513626099, 1.9626020193099976, 1.9727143049240112, 1.9828981161117554, 1.993152379989624, 2.0034759044647217, 2.0138678550720215, 2.024327039718628, 2.0348525047302246, 2.045443296432495, 2.056097984313965, 2.0668160915374756, 2.0775961875915527, 2.088437795639038, 2.099339485168457, 2.1103007793426514, 2.1213202476501465, 2.132397413253784, 2.143531322479248, 2.1547210216522217, 2.1659653186798096, 2.1772639751434326, 2.1886157989501953, 2.2000200748443604, 2.2114758491516113, 2.222982406616211, 2.2345387935638428, 2.2461447715759277, 2.257798910140991, 2.269500970840454, 2.28125, 2.2930452823638916, 2.3048861026763916, 2.3167717456817627, 2.3287017345428467, 2.340675115585327, 2.352691173553467, 2.3647496700286865, 2.37684965133667, 2.3889904022216797, 2.4011716842651367, 2.4133923053741455, 2.425652265548706, 2.437950611114502, 2.450286865234375, 2.462660551071167, 2.4750709533691406, 2.4875175952911377, 2.5, 2.4875175952911377, 2.4750709533691406, 2.462660551071167, 2.450286865234375, 2.437950611114502, 2.425652265548706, 2.4133923053741455, 2.4011716842651367, 2.3889904022216797, 2.37684965133667, 2.3647496700286865, 2.352691173553467, 2.340675115585327, 2.3287017345428467, 2.3167717456817627, 2.3048861026763916, 2.2930452823638916, 2.28125, 2.269500970840454, 2.257798910140991, 2.2461447715759277, 2.2345387935638428, 2.222982406616211, 2.2114758491516113, 2.2000200748443604, 2.1886157989501953, 2.1772639751434326, 2.1659653186798096, 2.1547210216522217, 2.143531322479248, 2.132397413253784, 2.1213202476501465, 2.1103007793426514, 2.099339485168457, 2.088437795639038, 2.0775961875915527, 2.0668160915374756, 2.056097984313965, 2.045443296432495, 2.0348525047302246, 2.024327039718628, 2.0138678550720215, 2.0034759044647217, 1.993152379989624, 1.9828981161117554, 1.9727143049240112, 1.9626020193099976, 1.9525624513626099, 1.942596673965454, 1.9327057600021362, 1.9228910207748413, 1.9131535291671753, 1.9034944772720337, 1.893915057182312, 1.8844164609909058, 1.875, 1.8656668663024902, 1.8564183712005615, 1.8472557067871094, 1.8381801843643188, 1.829193115234375, 1.8202956914901733, 1.811489462852478, 1.8027756214141846, 1.7941555976867676, 1.7856305837631226, 1.7772021293640137, 1.7688714265823364, 1.7606401443481445, 1.752509355545044, 1.7444807291030884, 1.7365554571151733, 1.7287352085113525, 1.7210211753845215, 1.7134150266647339, 1.7059179544448853, 1.6985316276550293, 1.691257357597351, 1.6840966939926147, 1.6770509481430054, 1.6701217889785767, 1.6633104085922241, 1.6566184759140015, 1.6500473022460938, 1.6435984373092651, 1.6372733116149902, 1.6310733556747437, 1.625, 1.6190546751022339, 1.6132386922836304, 1.6075536012649536, 1.6020007133483887, 1.5965814590454102, 1.5912971496582031, 1.5861490964889526, 1.5811388492584229, 1.5762674808502197, 1.5715364217758179, 1.5669467449188232, 1.5625, 1.558197259902954, 1.5540395975112915, 1.5500283241271973, 1.546164631843567, 1.5424494743347168, 1.5388840436935425, 1.5354692935943604, 1.5322062969207764, 1.529096007347107, 1.5261393785476685, 1.5233373641967773, 1.520690679550171, 1.518200159072876, 1.5158666372299194, 1.5136908292770386, 1.5116733312606812, 1.5098148584365845, 1.5081160068511963, 1.5065773725509644, 1.5051993131637573, 1.5039823055267334, 1.5029268264770508, 1.5020331144332886, 1.5013015270233154, 1.5007323026657104, 1.5003254413604736, 1.5000814199447632, 1.484375, 1.48445725440979, 1.4847038984298706, 1.4851149320602417, 1.4856902360916138, 1.4864294528961182, 1.4873325824737549, 1.4883991479873657, 1.4896289110183716, 1.4910212755203247, 1.492576003074646, 1.4942924976348877, 1.4961702823638916, 1.4982085227966309, 1.5004068613052368, 1.502764344215393, 1.5052803754806519, 1.5079541206359863, 1.5107847452163696, 1.513771414756775, 1.5169130563735962, 1.5202089548110962, 1.5236577987670898, 1.5272588729858398, 1.5310108661651611, 1.5349127054214478, 1.5389633178710938, 1.5431616306304932, 1.5475062131881714, 1.5519959926605225, 1.5566295385360718, 1.561405897140503, 1.5663233995437622, 1.5713809728622437, 1.5765771865844727, 1.5819107294082642, 1.587380051612854, 1.5929838418960571, 1.5987207889556885, 1.6045893430709839, 1.6105881929397583, 1.616715669631958, 1.622970461845398, 1.6293511390686035, 1.6358561515808105, 1.6424840688705444, 1.649233341217041, 1.6561025381088257, 1.6630902290344238, 1.6701948642730713, 1.677414894104004, 1.684748888015747, 1.6921954154968262, 1.699752926826477, 1.707419991493225, 1.7151951789855957, 1.7230769395828247, 1.7310638427734375, 1.7391544580459595, 1.747347354888916, 1.755640983581543, 1.7640341520309448, 1.7725251913070679, 1.7811129093170166, 1.7897958755493164, 1.7985725402832031, 1.8074417114257812, 1.8164020776748657, 1.8254520893096924, 1.8345905542373657, 1.8438161611557007, 1.8531275987625122, 1.8625235557556152, 1.8720028400421143, 1.8815640211105347, 1.8912060260772705, 1.9009275436401367, 1.9107273817062378, 1.9206042289733887, 1.930557131767273, 1.9405847787857056, 1.950685977935791, 1.9608596563339233, 1.9711047410964966, 1.9814200401306152, 1.9918044805526733, 2.0022571086883545, 2.0127766132354736, 2.023362159729004, 2.03401255607605, 2.044726848602295, 2.055504322052002, 2.0663435459136963, 2.0772438049316406, 2.0882039070129395, 2.0992233753204346, 2.1103007793426514, 2.1214354038238525, 2.132626533508301, 2.1438729763031006, 2.1551740169525146, 2.1665289402008057, 2.1779367923736572, 2.189396381378174, 2.2009074687957764, 2.2124691009521484, 2.2240803241729736, 2.2357404232025146, 2.247448682785034, 2.259204149246216, 2.2710065841674805, 2.2828547954559326, 2.294748067855835, 2.3066861629486084, 2.3186678886413574, 2.330692768096924, 2.3427603244781494, 2.3548693656921387, 2.3670198917388916, 2.379210948944092, 2.391441822052002, 2.403712034225464, 2.4160211086273193, 2.428368330001831, 2.4407529830932617, 2.4531748294830322, 2.465632915496826, 2.4781270027160645, 2.4906563758850098, 2.4781270027160645, 2.465632915496826, 2.4531748294830322, 2.4407529830932617, 2.428368330001831, 2.4160211086273193, 2.403712034225464, 2.391441822052002, 2.379210948944092, 2.3670198917388916, 2.3548693656921387, 2.3427603244781494, 2.330692768096924, 2.3186678886413574, 2.3066861629486084, 2.294748067855835, 2.2828547954559326, 2.2710065841674805, 2.259204149246216, 2.247448682785034, 2.2357404232025146, 2.2240803241729736, 2.2124691009521484, 2.2009074687957764, 2.189396381378174, 2.1779367923736572, 2.1665289402008057, 2.1551740169525146, 2.1438729763031006, 2.132626533508301, 2.1214354038238525, 2.1103007793426514, 2.0992233753204346, 2.0882039070129395, 2.0772438049316406, 2.0663435459136963, 2.055504322052002, 2.044726848602295, 2.03401255607605, 2.023362159729004, 2.0127766132354736, 2.0022571086883545, 1.9918044805526733, 1.9814200401306152, 1.9711047410964966, 1.9608596563339233, 1.950685977935791, 1.9405847787857056, 1.930557131767273, 1.9206042289733887, 1.9107273817062378, 1.9009275436401367, 1.8912060260772705, 1.8815640211105347, 1.8720028400421143, 1.8625235557556152, 1.8531275987625122, 1.8438161611557007, 1.8345905542373657, 1.8254520893096924, 1.8164020776748657, 1.8074417114257812, 1.7985725402832031, 1.7897958755493164, 1.7811129093170166, 1.7725251913070679, 1.7640341520309448, 1.755640983581543, 1.747347354888916, 1.7391544580459595, 1.7310638427734375, 1.7230769395828247, 1.7151951789855957, 1.707419991493225, 1.699752926826477, 1.6921954154968262, 1.684748888015747, 1.677414894104004, 1.6701948642730713, 1.6630902290344238, 1.6561025381088257, 1.649233341217041, 1.6424840688705444, 1.6358561515808105, 1.6293511390686035, 1.622970461845398, 1.616715669631958, 1.6105881929397583, 1.6045893430709839, 1.5987207889556885, 1.5929838418960571, 1.587380051612854, 1.5819107294082642, 1.5765771865844727, 1.5713809728622437, 1.5663233995437622, 1.561405897140503, 1.5566295385360718, 1.5519959926605225, 1.5475062131881714, 1.5431616306304932, 1.5389633178710938, 1.5349127054214478, 1.5310108661651611, 1.5272588729858398, 1.5236577987670898, 1.5202089548110962, 1.5169130563735962, 1.513771414756775, 1.5107847452163696, 1.5079541206359863, 1.5052803754806519, 1.502764344215393, 1.5004068613052368, 1.4982085227966309, 1.4961702823638916, 1.4942924976348877, 1.492576003074646, 1.4910212755203247, 1.4896289110183716, 1.4883991479873657, 1.4873325824737549, 1.4864294528961182, 1.4856902360916138, 1.4851149320602417, 1.4847038984298706, 1.48445725440979, 1.46875, 1.468833088874817, 1.4690823554992676, 1.469497799873352, 1.4700791835784912, 1.470826268196106, 1.4717389345169067, 1.472816824913025, 1.4740595817565918, 1.4754667282104492, 1.477037787437439, 1.4787722826004028, 1.4806697368621826, 1.4827293157577515, 1.4849505424499512, 1.4873325824737549, 1.4898747205734253, 1.492576003074646, 1.4954357147216797, 1.4984530210494995, 1.50162672996521, 1.5049560070037842, 1.5084397792816162, 1.5120769739151, 1.5158666372299194, 1.5198073387145996, 1.5238981246948242, 1.5281378030776978, 1.5325249433517456, 1.5370584726333618, 1.5417370796203613, 1.5465593338012695, 1.5515239238739014, 1.5566295385360718, 1.5618748664855957, 1.567258358001709, 1.5727787017822266, 1.5784343481063843, 1.584223985671997, 1.5901460647583008, 1.5961991548538208, 1.602381706237793, 1.6086921691894531, 1.6151292324066162, 1.621691346168518, 1.628376841545105, 1.635184407234192, 1.642112374305725, 1.64915931224823, 1.6563236713409424, 1.6636039018630981, 1.6709985733032227, 1.6785061359405518, 1.6861250400543213, 1.693853735923767, 1.701690912246704, 1.7096349000930786, 1.7176843881607056, 1.7258377075195312, 1.734093427658081, 1.74245023727417, 1.7509065866470337, 1.7594610452651978, 1.7681121826171875, 1.7768585681915283, 1.7856988906860352, 1.7946317195892334, 1.803655743598938, 1.8127694129943848, 1.8219715356826782, 1.8312606811523438, 1.8406356573104858, 1.8500950336456299, 1.8596376180648804, 1.8692620992660522, 1.8789671659469604, 1.8887516260147095, 1.8986142873764038, 1.908553957939148, 1.9185693264007568, 1.9286593198776245, 1.938822627067566, 1.9490582942962646, 1.9593650102615356, 1.9697418212890625, 1.9801875352859497, 1.9907010793685913, 2.001281261444092, 2.011927366256714, 2.0226380825042725, 2.033412218093872, 2.0442492961883545, 2.055147886276245, 2.0661072731018066, 2.0771262645721436, 2.0882039070129395, 2.099339485168457, 2.11053204536438, 2.1217806339263916, 2.133084297180176, 2.144442319869995, 2.155853748321533, 2.1673176288604736, 2.178833246231079, 2.1903998851776123, 2.202016592025757, 2.2136826515197754, 2.2253971099853516, 2.237159490585327, 2.2489688396453857, 2.260824680328369, 2.272726058959961, 2.2846720218658447, 2.2966623306274414, 2.3086962699890137, 2.320772886276245, 2.3328914642333984, 2.3450517654418945, 2.357252836227417, 2.3694939613342285, 2.38177490234375, 2.394094705581665, 2.4064528942108154, 2.418848991394043, 2.4312820434570312, 2.4437520503997803, 2.4562580585479736, 2.468799352645874, 2.4813759326934814, 2.468799352645874, 2.4562580585479736, 2.4437520503997803, 2.4312820434570312, 2.418848991394043, 2.4064528942108154, 2.394094705581665, 2.38177490234375, 2.3694939613342285, 2.357252836227417, 2.3450517654418945, 2.3328914642333984, 2.320772886276245, 2.3086962699890137, 2.2966623306274414, 2.2846720218658447, 2.272726058959961, 2.260824680328369, 2.2489688396453857, 2.237159490585327, 2.2253971099853516, 2.2136826515197754, 2.202016592025757, 2.1903998851776123, 2.178833246231079, 2.1673176288604736, 2.155853748321533, 2.144442319869995, 2.133084297180176, 2.1217806339263916, 2.11053204536438, 2.099339485168457, 2.0882039070129395, 2.0771262645721436, 2.0661072731018066, 2.055147886276245, 2.0442492961883545, 2.033412218093872, 2.0226380825042725, 2.011927366256714, 2.001281261444092, 1.9907010793685913, 1.9801875352859497, 1.9697418212890625, 1.9593650102615356, 1.9490582942962646, 1.938822627067566, 1.9286593198776245, 1.9185693264007568, 1.908553957939148, 1.8986142873764038, 1.8887516260147095, 1.8789671659469604, 1.8692620992660522, 1.8596376180648804, 1.8500950336456299, 1.8406356573104858, 1.8312606811523438, 1.8219715356826782, 1.8127694129943848, 1.803655743598938, 1.7946317195892334, 1.7856988906860352, 1.7768585681915283, 1.7681121826171875, 1.7594610452651978, 1.7509065866470337, 1.74245023727417, 1.734093427658081, 1.7258377075195312, 1.7176843881607056, 1.7096349000930786, 1.701690912246704, 1.693853735923767, 1.6861250400543213, 1.6785061359405518, 1.6709985733032227, 1.6636039018630981, 1.6563236713409424, 1.64915931224823, 1.642112374305725, 1.635184407234192, 1.628376841545105, 1.621691346168518, 1.6151292324066162, 1.6086921691894531, 1.602381706237793, 1.5961991548538208, 1.5901460647583008, 1.584223985671997, 1.5784343481063843, 1.5727787017822266, 1.567258358001709, 1.5618748664855957, 1.5566295385360718, 1.5515239238739014, 1.5465593338012695, 1.5417370796203613, 1.5370584726333618, 1.5325249433517456, 1.5281378030776978, 1.5238981246948242, 1.5198073387145996, 1.5158666372299194, 1.5120769739151, 1.5084397792816162, 1.5049560070037842, 1.50162672996521, 1.4984530210494995, 1.4954357147216797, 1.492576003074646, 1.4898747205734253, 1.4873325824737549, 1.4849505424499512, 1.4827293157577515, 1.4806697368621826, 1.4787722826004028, 1.477037787437439, 1.4754667282104492, 1.4740595817565918, 1.472816824913025, 1.4717389345169067, 1.470826268196106, 1.4700791835784912, 1.469497799873352, 1.4690823554992676, 1.468833088874817, 1.453125, 1.4532090425491333, 1.453460931777954, 1.4538809061050415, 1.4544684886932373, 1.455223560333252, 1.456146001815796, 1.4572354555130005, 1.4584914445877075, 1.4599136114120483, 1.4615013599395752, 1.4632543325424194, 1.4651718139648438, 1.4672532081604004, 1.469497799873352, 1.4719048738479614, 1.4744735956192017, 1.4772030115127563, 1.4800925254821777, 1.4831409454345703, 1.4863473176956177, 1.489710807800293, 1.4932302236557007, 1.4969043731689453, 1.5007323026657104, 1.504712700843811, 1.5088443756103516, 1.5131261348724365, 1.5175567865371704, 1.5221349000930786, 1.526859164237976, 1.5317282676696777, 1.536740779876709, 1.5418953895568848, 1.5471906661987305, 1.552625060081482, 1.558197259902954, 1.5639055967330933, 1.5697487592697144, 1.5757253170013428, 1.5818334817886353, 1.5880719423294067, 1.594439148902893, 1.60093355178833, 1.6075536012649536, 1.6142977476119995, 1.621164321899414, 1.6281520128250122, 1.6352590322494507, 1.6424840688705444, 1.6498253345489502, 1.657281517982483, 1.6648509502410889, 1.6725319623947144, 1.6803232431411743, 1.6882232427597046, 1.6962302923202515, 1.7043430805206299, 1.7125598192214966, 1.720879316329956, 1.7293000221252441, 1.7378203868865967, 1.7464388608932495, 1.7551542520523071, 1.7639648914337158, 1.77286958694458, 1.7818666696548462, 1.7909549474716187, 1.8001328706741333, 1.8093992471694946, 1.818752646446228, 1.8281917572021484, 1.8377152681350708, 1.8473217487335205, 1.857010006904602, 1.86677885055542, 1.8766268491744995, 1.8865529298782349, 1.896555781364441, 1.9066342115402222, 1.9167869091033936, 1.9270129203796387, 1.9373109340667725, 1.947679877281189, 1.9581185579299927, 1.9686260223388672, 1.9792009592056274, 1.989842414855957, 2.00054931640625, 2.0113205909729004, 2.0221550464630127, 2.0330519676208496, 2.0440104007720947, 2.0550291538238525, 2.0661072731018066, 2.0772438049316406, 2.088437795639038, 2.0996882915496826, 2.110994815826416, 2.1223559379577637, 2.1337709426879883, 2.1452391147613525, 2.15675950050354, 2.1683311462402344, 2.1799535751342773, 2.1916255950927734, 2.2033467292785645, 2.215115785598755, 2.2269325256347656, 2.2387959957122803, 2.2507052421569824, 2.262659788131714, 2.274658679962158, 2.2867014408111572, 2.2987873554229736, 2.310915946960449, 2.3230860233306885, 2.3352973461151123, 2.3475489616394043, 2.3598406314849854, 2.372171401977539, 2.3845407962799072, 2.3969483375549316, 2.409393310546875, 2.421875, 2.4343931674957275, 2.446946859359741, 2.459535837173462, 2.4721593856811523, 2.459535837173462, 2.446946859359741, 2.4343931674957275, 2.421875, 2.409393310546875, 2.3969483375549316, 2.3845407962799072, 2.372171401977539, 2.3598406314849854, 2.3475489616394043, 2.3352973461151123, 2.3230860233306885, 2.310915946960449, 2.2987873554229736, 2.2867014408111572, 2.274658679962158, 2.262659788131714, 2.2507052421569824, 2.2387959957122803, 2.2269325256347656, 2.215115785598755, 2.2033467292785645, 2.1916255950927734, 2.1799535751342773, 2.1683311462402344, 2.15675950050354, 2.1452391147613525, 2.1337709426879883, 2.1223559379577637, 2.110994815826416, 2.0996882915496826, 2.088437795639038, 2.0772438049316406, 2.0661072731018066, 2.0550291538238525, 2.0440104007720947, 2.0330519676208496, 2.0221550464630127, 2.0113205909729004, 2.00054931640625, 1.989842414855957, 1.9792009592056274, 1.9686260223388672, 1.9581185579299927, 1.947679877281189, 1.9373109340667725, 1.9270129203796387, 1.9167869091033936, 1.9066342115402222, 1.896555781364441, 1.8865529298782349, 1.8766268491744995, 1.86677885055542, 1.857010006904602, 1.8473217487335205, 1.8377152681350708, 1.8281917572021484, 1.818752646446228, 1.8093992471694946, 1.8001328706741333, 1.7909549474716187, 1.7818666696548462, 1.77286958694458, 1.7639648914337158, 1.7551542520523071, 1.7464388608932495, 1.7378203868865967, 1.7293000221252441, 1.720879316329956, 1.7125598192214966, 1.7043430805206299, 1.6962302923202515, 1.6882232427597046, 1.6803232431411743, 1.6725319623947144, 1.6648509502410889, 1.657281517982483, 1.6498253345489502, 1.6424840688705444, 1.6352590322494507, 1.6281520128250122, 1.621164321899414, 1.6142977476119995, 1.6075536012649536, 1.60093355178833, 1.594439148902893, 1.5880719423294067, 1.5818334817886353, 1.5757253170013428, 1.5697487592697144, 1.5639055967330933, 1.558197259902954, 1.552625060081482, 1.5471906661987305, 1.5418953895568848, 1.536740779876709, 1.5317282676696777, 1.526859164237976, 1.5221349000930786, 1.5175567865371704, 1.5131261348724365, 1.5088443756103516, 1.504712700843811, 1.5007323026657104, 1.4969043731689453, 1.4932302236557007, 1.489710807800293, 1.4863473176956177, 1.4831409454345703, 1.4800925254821777, 1.4772030115127563, 1.4744735956192017, 1.4719048738479614, 1.469497799873352, 1.4672532081604004, 1.4651718139648438, 1.4632543325424194, 1.4615013599395752, 1.4599136114120483, 1.4584914445877075, 1.4572354555130005, 1.456146001815796, 1.455223560333252, 1.4544684886932373, 1.4538809061050415, 1.453460931777954, 1.4532090425491333, 1.4375, 1.4375848770141602, 1.4378396272659302, 1.438264012336731, 1.4388580322265625, 1.4396214485168457, 1.4405537843704224, 1.4416550397872925, 1.4429244995117188, 1.4443620443344116, 1.4459669589996338, 1.4477386474609375, 1.4496766328811646, 1.4517803192138672, 1.454048752784729, 1.4564813375473022, 1.45907723903656, 1.461835503578186, 1.4647551774978638, 1.467835545539856, 1.4710752964019775, 1.4744735956192017, 1.4780292510986328, 1.4817410707473755, 1.4856079816818237, 1.4896289110183716, 1.4938023090362549, 1.4981271028518677, 1.5026018619537354, 1.5072253942489624, 1.5119962692260742, 1.5169130563735962, 1.5219744443893433, 1.5271788835525513, 1.5325249433517456, 1.5380111932754517, 1.5436360836029053, 1.5493981838226318, 1.5552959442138672, 1.5613276958465576, 1.5674920082092285, 1.5737873315811157, 1.580212116241455, 1.5867646932601929, 1.5934436321258545, 1.6002471446990967, 1.6071738004684448, 1.6142220497131348, 1.6213902235031128, 1.6286767721176147, 1.636080026626587, 1.6435984373092651, 1.6512305736541748, 1.6589747667312622, 1.6668294668197632, 1.674793004989624, 1.6828639507293701, 1.6910408735275269, 1.699321985244751, 1.7077059745788574, 1.716191291809082, 1.7247763872146606, 1.7334598302841187, 1.742240071296692, 1.7511156797409058, 1.7600853443145752, 1.769147515296936, 1.7783007621765137, 1.7875436544418335, 1.796875, 1.806293249130249, 1.8157970905303955, 1.8253852128982544, 1.8350563049316406, 1.8448090553283691, 1.8546420335769653, 1.8645542860031128, 1.8745442628860474, 1.8846107721328735, 1.8947527408599854, 1.9049688577651978, 1.9152579307556152, 1.9256187677383423, 1.9360504150390625, 1.9465514421463013, 1.9571208953857422, 1.9677577018737793, 1.978460669517517, 1.9892288446426392, 2.00006103515625, 2.010956287384033, 2.021913528442383, 2.0329320430755615, 2.0440104007720947, 2.055147886276245, 2.0663435459136963, 2.0775961875915527, 2.0889053344726562, 2.1002697944641113, 2.1116886138916016, 2.1231610774993896, 2.13468599319458, 2.1462631225585938, 2.157891035079956, 2.169569253921509, 2.1812970638275146, 2.193073272705078, 2.204897403717041, 2.216768503189087, 2.2286858558654785, 2.2406489849090576, 2.252656936645508, 2.2647087574005127, 2.276804208755493, 2.288942575454712, 2.3011226654052734, 2.3133444786071777, 2.3256068229675293, 2.337909460067749, 2.3502514362335205, 2.3626322746276855, 2.375051498413086, 2.3875081539154053, 2.4000020027160645, 2.412532329559326, 2.4250986576080322, 2.4377002716064453, 2.4503366947174072, 2.4630074501037598, 2.4503366947174072, 2.4377002716064453, 2.4250986576080322, 2.412532329559326, 2.4000020027160645, 2.3875081539154053, 2.375051498413086, 2.3626322746276855, 2.3502514362335205, 2.337909460067749, 2.3256068229675293, 2.3133444786071777, 2.3011226654052734, 2.288942575454712, 2.276804208755493, 2.2647087574005127, 2.252656936645508, 2.2406489849090576, 2.2286858558654785, 2.216768503189087, 2.204897403717041, 2.193073272705078, 2.1812970638275146, 2.169569253921509, 2.157891035079956, 2.1462631225585938, 2.13468599319458, 2.1231610774993896, 2.1116886138916016, 2.1002697944641113, 2.0889053344726562, 2.0775961875915527, 2.0663435459136963, 2.055147886276245, 2.0440104007720947, 2.0329320430755615, 2.021913528442383, 2.010956287384033, 2.00006103515625, 1.9892288446426392, 1.978460669517517, 1.9677577018737793, 1.9571208953857422, 1.9465514421463013, 1.9360504150390625, 1.9256187677383423, 1.9152579307556152, 1.9049688577651978, 1.8947527408599854, 1.8846107721328735, 1.8745442628860474, 1.8645542860031128, 1.8546420335769653, 1.8448090553283691, 1.8350563049316406, 1.8253852128982544, 1.8157970905303955, 1.806293249130249, 1.796875, 1.7875436544418335, 1.7783007621765137, 1.769147515296936, 1.7600853443145752, 1.7511156797409058, 1.742240071296692, 1.7334598302841187, 1.7247763872146606, 1.716191291809082, 1.7077059745788574, 1.699321985244751, 1.6910408735275269, 1.6828639507293701, 1.674793004989624, 1.6668294668197632, 1.6589747667312622, 1.6512305736541748, 1.6435984373092651, 1.636080026626587, 1.6286767721176147, 1.6213902235031128, 1.6142220497131348, 1.6071738004684448, 1.6002471446990967, 1.5934436321258545, 1.5867646932601929, 1.580212116241455, 1.5737873315811157, 1.5674920082092285, 1.5613276958465576, 1.5552959442138672, 1.5493981838226318, 1.5436360836029053, 1.5380111932754517, 1.5325249433517456, 1.5271788835525513, 1.5219744443893433, 1.5169130563735962, 1.5119962692260742, 1.5072253942489624, 1.5026018619537354, 1.4981271028518677, 1.4938023090362549, 1.4896289110183716, 1.4856079816818237, 1.4817410707473755, 1.4780292510986328, 1.4744735956192017, 1.4710752964019775, 1.467835545539856, 1.4647551774978638, 1.461835503578186, 1.45907723903656, 1.4564813375473022, 1.454048752784729, 1.4517803192138672, 1.4496766328811646, 1.4477386474609375, 1.4459669589996338, 1.4443620443344116, 1.4429244995117188, 1.4416550397872925, 1.4405537843704224, 1.4396214485168457, 1.4388580322265625, 1.438264012336731, 1.4378396272659302, 1.4375848770141602, 1.421875, 1.4219608306884766, 1.4222183227539062, 1.422647476196289, 1.4232479333877563, 1.424019694328308, 1.4249622821807861, 1.4260755777359009, 1.4273589849472046, 1.428812026977539, 1.4304343461990356, 1.4322253465652466, 1.4341843128204346, 1.4363106489181519, 1.4386035203933716, 1.4410622119903564, 1.44368577003479, 1.4464733600616455, 1.4494240283966064, 1.4525368213653564, 1.4558106660842896, 1.4592444896697998, 1.4628372192382812, 1.4665875434875488, 1.470494270324707, 1.47455632686615, 1.4787722826004028, 1.4831409454345703, 1.4876608848571777, 1.4923306703567505, 1.4971489906311035, 1.5021144151687622, 1.5072253942489624, 1.512480616569519, 1.517878532409668, 1.5234174728393555, 1.529096007347107, 1.5349127054214478, 1.5408658981323242, 1.5469539165496826, 1.5531753301620483, 1.5595284700393677, 1.566011667251587, 1.5726234912872314, 1.579362154006958, 1.5862261056900024, 1.5932137966156006, 1.6003234386444092, 1.6075536012649536, 1.6149024963378906, 1.6223686933517456, 1.6299504041671753, 1.6376460790634155, 1.6454541683197021, 1.653373122215271, 1.6614011526107788, 1.6695369482040405, 1.677778720855713, 1.6861250400543213, 1.694574236869812, 1.703125, 1.7117756605148315, 1.7205246686935425, 1.7293705940246582, 1.738312005996704, 1.747347354888916, 1.7564752101898193, 1.7656941413879395, 1.7750027179718018, 1.7843996286392212, 1.7938833236694336, 1.8034526109695435, 1.8131060600280762, 1.8228422403335571, 1.8326599597930908, 1.8425579071044922, 1.8525346517562866, 1.8625891208648682, 1.8727200031280518, 1.8829259872436523, 1.8932058811187744, 1.9035584926605225, 1.9139827489852905, 1.924477458000183, 1.9350413084030151, 1.9456732273101807, 1.9563722610473633, 1.9671372175216675, 1.9779670238494873, 1.9888606071472168, 1.99981689453125, 2.0108349323272705, 2.021913528442383, 2.0330519676208496, 2.0442492961883545, 2.055504322052002, 2.0668160915374756, 2.078183650970459, 2.089606523513794, 2.101083278656006, 2.1126132011413574, 2.1241955757141113, 2.135829448699951, 2.1475141048431396, 2.1592483520507812, 2.1710317134857178, 2.182863473892212, 2.194742441177368, 2.2066681385040283, 2.218639850616455, 2.230656862258911, 2.24271821975708, 2.2548234462738037, 2.2669715881347656, 2.2791621685028076, 2.2913944721221924, 2.3036677837371826, 2.315981388092041, 2.3283348083496094, 2.3407273292541504, 2.3531582355499268, 2.3656270503997803, 2.3781332969665527, 2.3906760215759277, 2.403254985809326, 2.4158694744110107, 2.4285190105438232, 2.4412031173706055, 2.45392107963562, 2.4412031173706055, 2.4285190105438232, 2.4158694744110107, 2.403254985809326, 2.3906760215759277, 2.3781332969665527, 2.3656270503997803, 2.3531582355499268, 2.3407273292541504, 2.3283348083496094, 2.315981388092041, 2.3036677837371826, 2.2913944721221924, 2.2791621685028076, 2.2669715881347656, 2.2548234462738037, 2.24271821975708, 2.230656862258911, 2.218639850616455, 2.2066681385040283, 2.194742441177368, 2.182863473892212, 2.1710317134857178, 2.1592483520507812, 2.1475141048431396, 2.135829448699951, 2.1241955757141113, 2.1126132011413574, 2.101083278656006, 2.089606523513794, 2.078183650970459, 2.0668160915374756, 2.055504322052002, 2.0442492961883545, 2.0330519676208496, 2.021913528442383, 2.0108349323272705, 1.99981689453125, 1.9888606071472168, 1.9779670238494873, 1.9671372175216675, 1.9563722610473633, 1.9456732273101807, 1.9350413084030151, 1.924477458000183, 1.9139827489852905, 1.9035584926605225, 1.8932058811187744, 1.8829259872436523, 1.8727200031280518, 1.8625891208648682, 1.8525346517562866, 1.8425579071044922, 1.8326599597930908, 1.8228422403335571, 1.8131060600280762, 1.8034526109695435, 1.7938833236694336, 1.7843996286392212, 1.7750027179718018, 1.7656941413879395, 1.7564752101898193, 1.747347354888916, 1.738312005996704, 1.7293705940246582, 1.7205246686935425, 1.7117756605148315, 1.703125, 1.694574236869812, 1.6861250400543213, 1.677778720855713, 1.6695369482040405, 1.6614011526107788, 1.653373122215271, 1.6454541683197021, 1.6376460790634155, 1.6299504041671753, 1.6223686933517456, 1.6149024963378906, 1.6075536012649536, 1.6003234386444092, 1.5932137966156006, 1.5862261056900024, 1.579362154006958, 1.5726234912872314, 1.566011667251587, 1.5595284700393677, 1.5531753301620483, 1.5469539165496826, 1.5408658981323242, 1.5349127054214478, 1.529096007347107, 1.5234174728393555, 1.517878532409668, 1.512480616569519, 1.5072253942489624, 1.5021144151687622, 1.4971489906311035, 1.4923306703567505, 1.4876608848571777, 1.4831409454345703, 1.4787722826004028, 1.47455632686615, 1.470494270324707, 1.4665875434875488, 1.4628372192382812, 1.4592444896697998, 1.4558106660842896, 1.4525368213653564, 1.4494240283966064, 1.4464733600616455, 1.44368577003479, 1.4410622119903564, 1.4386035203933716, 1.4363106489181519, 1.4341843128204346, 1.4322253465652466, 1.4304343461990356, 1.428812026977539, 1.4273589849472046, 1.4260755777359009, 1.4249622821807861, 1.424019694328308, 1.4232479333877563, 1.422647476196289, 1.4222183227539062, 1.4219608306884766, 1.40625, 1.406336784362793, 1.4065971374511719, 1.4070310592651367, 1.4076381921768188, 1.4084184169769287, 1.4093714952468872, 1.4104970693588257, 1.411794662475586, 1.4132637977600098, 1.4149038791656494, 1.4167145490646362, 1.4186949729919434, 1.4208444356918335, 1.4231622219085693, 1.425647497177124, 1.4282993078231812, 1.4311169385910034, 1.4340991973876953, 1.43724524974823, 1.4405537843704224, 1.4440239667892456, 1.447654366493225, 1.4514439105987549, 1.4553914070129395, 1.4594954252243042, 1.4637547731399536, 1.4681681394577026, 1.472733974456787, 1.477450966835022, 1.4823176860809326, 1.4873325824737549, 1.4924942255020142, 1.4978010654449463, 1.5032516717910767, 1.5088443756103516, 1.5145776271820068, 1.5204497575759888, 1.5264593362808228, 1.5326045751571655, 1.5388840436935425, 1.5452959537506104, 1.5518386363983154, 1.5585105419158936, 1.565310001373291, 1.572235345840454, 1.5792847871780396, 1.5864570140838623, 1.59375, 1.601162314414978, 1.6086921691894531, 1.6163381338119507, 1.624098300933838, 1.6319712400436401, 1.6399551630020142, 1.6480486392974854, 1.65625, 1.6645575761795044, 1.6729698181152344, 1.6814851760864258, 1.690102219581604, 1.6988190412521362, 1.7076345682144165, 1.716546893119812, 1.7255547046661377, 1.7346564531326294, 1.743850827217102, 1.753136157989502, 1.762511134147644, 1.7719742059707642, 1.7815240621566772, 1.7911593914031982, 1.800878643989563, 1.810680627822876, 1.8205639123916626, 1.8305273056030273, 1.840569257736206, 1.8506886959075928, 1.8608843088150024, 1.8711549043655396, 1.881499171257019, 1.8919159173965454, 1.9024039506912231, 1.9129620790481567, 1.9235892295837402, 1.9342840909957886, 1.945045828819275, 1.9558730125427246, 1.9667649269104004, 1.9777201414108276, 1.9887378215789795, 1.99981689453125, 2.010956287384033, 2.0221550464630127, 2.033412218093872, 2.044726848602295, 2.056097984313965, 2.0675246715545654, 2.0790059566497803, 2.090540885925293, 2.102128744125366, 2.1137685775756836, 2.1254594326019287, 2.1372008323669434, 2.148991346359253, 2.1608307361602783, 2.172717809677124, 2.184652090072632, 2.1966326236724854, 2.2086589336395264, 2.2207298278808594, 2.232844829559326, 2.2450032234191895, 2.257204294204712, 2.269447088241577, 2.281731605529785, 2.2940564155578613, 2.3064215183258057, 2.3188257217407227, 2.331268787384033, 2.34375, 2.3562686443328857, 2.3688242435455322, 2.381416082382202, 2.3940436840057373, 2.4067065715789795, 2.4194040298461914, 2.432135581970215, 2.4449005126953125, 2.432135581970215, 2.4194040298461914, 2.4067065715789795, 2.3940436840057373, 2.381416082382202, 2.3688242435455322, 2.3562686443328857, 2.34375, 2.331268787384033, 2.3188257217407227, 2.3064215183258057, 2.2940564155578613, 2.281731605529785, 2.269447088241577, 2.257204294204712, 2.2450032234191895, 2.232844829559326, 2.2207298278808594, 2.2086589336395264, 2.1966326236724854, 2.184652090072632, 2.172717809677124, 2.1608307361602783, 2.148991346359253, 2.1372008323669434, 2.1254594326019287, 2.1137685775756836, 2.102128744125366, 2.090540885925293, 2.0790059566497803, 2.0675246715545654, 2.056097984313965, 2.044726848602295, 2.033412218093872, 2.0221550464630127, 2.010956287384033, 1.99981689453125, 1.9887378215789795, 1.9777201414108276, 1.9667649269104004, 1.9558730125427246, 1.945045828819275, 1.9342840909957886, 1.9235892295837402, 1.9129620790481567, 1.9024039506912231, 1.8919159173965454, 1.881499171257019, 1.8711549043655396, 1.8608843088150024, 1.8506886959075928, 1.840569257736206, 1.8305273056030273, 1.8205639123916626, 1.810680627822876, 1.800878643989563, 1.7911593914031982, 1.7815240621566772, 1.7719742059707642, 1.762511134147644, 1.753136157989502, 1.743850827217102, 1.7346564531326294, 1.7255547046661377, 1.716546893119812, 1.7076345682144165, 1.6988190412521362, 1.690102219581604, 1.6814851760864258, 1.6729698181152344, 1.6645575761795044, 1.65625, 1.6480486392974854, 1.6399551630020142, 1.6319712400436401, 1.624098300933838, 1.6163381338119507, 1.6086921691894531, 1.601162314414978, 1.59375, 1.5864570140838623, 1.5792847871780396, 1.572235345840454, 1.565310001373291, 1.5585105419158936, 1.5518386363983154, 1.5452959537506104, 1.5388840436935425, 1.5326045751571655, 1.5264593362808228, 1.5204497575759888, 1.5145776271820068, 1.5088443756103516, 1.5032516717910767, 1.4978010654449463, 1.4924942255020142, 1.4873325824737549, 1.4823176860809326, 1.477450966835022, 1.472733974456787, 1.4681681394577026, 1.4637547731399536, 1.4594954252243042, 1.4553914070129395, 1.4514439105987549, 1.447654366493225, 1.4440239667892456, 1.4405537843704224, 1.43724524974823, 1.4340991973876953, 1.4311169385910034, 1.4282993078231812, 1.425647497177124, 1.4231622219085693, 1.4208444356918335, 1.4186949729919434, 1.4167145490646362, 1.4149038791656494, 1.4132637977600098, 1.411794662475586, 1.4104970693588257, 1.4093714952468872, 1.4084184169769287, 1.4076381921768188, 1.4070310592651367, 1.4065971374511719, 1.406336784362793, 1.390625, 1.3907127380371094, 1.390976071357727, 1.391414761543274, 1.39202880859375, 1.392817735671997, 1.3937815427780151, 1.3949196338653564, 1.3962316513061523, 1.3977171182632446, 1.399375557899475, 1.4012062549591064, 1.4032084941864014, 1.405381679534912, 1.4077249765396118, 1.410237431526184, 1.412918210029602, 1.4157663583755493, 1.4187809228897095, 1.4219608306884766, 1.425304889678955, 1.428812026977539, 1.432481050491333, 1.4363106489181519, 1.4402996301651, 1.4444465637207031, 1.4487501382827759, 1.4532090425491333, 1.4578217267990112, 1.462586760520935, 1.4675028324127197, 1.472568154335022, 1.4777814149856567, 1.4831409454345703, 1.4886451959609985, 1.4942924976348877, 1.5000814199447632, 1.5060100555419922, 1.5120769739151, 1.5182805061340332, 1.5246189832687378, 1.531090497970581, 1.537693738937378, 1.544426679611206, 1.5512878894805908, 1.558275580406189, 1.5653879642486572, 1.5726234912872314, 1.5799803733825684, 1.5874569416046143, 1.5950515270233154, 1.6027624607086182, 1.6105881929397583, 1.618526816368103, 1.6265767812728882, 1.63473641872406, 1.6430041790008545, 1.6513783931732178, 1.6598575115203857, 1.6684398651123047, 1.677123785018921, 1.6859078407287598, 1.6947903633117676, 1.7037699222564697, 1.712844967842102, 1.7220139503479004, 1.7312754392623901, 1.7406277656555176, 1.7500697374343872, 1.7595998048782349, 1.769216537475586, 1.7789183855056763, 1.7887042760849, 1.7985725402832031, 1.8085219860076904, 1.8185513019561768, 1.8286590576171875, 1.8388440608978271, 1.8491050004959106, 1.8594406843185425, 1.869849681854248, 1.8803309202194214, 1.890883207321167, 1.9015053510665894, 1.912196159362793, 1.9229544401168823, 1.933779239654541, 1.944669246673584, 1.9556233882904053, 1.9666407108306885, 1.9777201414108276, 1.9888606071472168, 2.00006103515625, 2.0113205909729004, 2.0226380825042725, 2.03401255607605, 2.045443296432495, 2.056929111480713, 2.0684690475463867, 2.0800626277923584, 2.0917084217071533, 2.1034059524536133, 2.1151540279388428, 2.1269521713256836, 2.1387994289398193, 2.1506948471069336, 2.162637710571289, 2.1746273040771484, 2.1866626739501953, 2.1987433433532715, 2.2108685970306396, 2.2230372428894043, 2.2352490425109863, 2.2475030422210693, 2.259798526763916, 2.272135019302368, 2.2845118045806885, 2.2969281673431396, 2.3093833923339844, 2.3218770027160645, 2.3344085216522217, 2.3469769954681396, 2.35958194732666, 2.372222900390625, 2.384899139404297, 2.3976101875305176, 2.410355567932129, 2.4231348037719727, 2.4359469413757324, 2.4231348037719727, 2.410355567932129, 2.3976101875305176, 2.384899139404297, 2.372222900390625, 2.35958194732666, 2.3469769954681396, 2.3344085216522217, 2.3218770027160645, 2.3093833923339844, 2.2969281673431396, 2.2845118045806885, 2.272135019302368, 2.259798526763916, 2.2475030422210693, 2.2352490425109863, 2.2230372428894043, 2.2108685970306396, 2.1987433433532715, 2.1866626739501953, 2.1746273040771484, 2.162637710571289, 2.1506948471069336, 2.1387994289398193, 2.1269521713256836, 2.1151540279388428, 2.1034059524536133, 2.0917084217071533, 2.0800626277923584, 2.0684690475463867, 2.056929111480713, 2.045443296432495, 2.03401255607605, 2.0226380825042725, 2.0113205909729004, 2.00006103515625, 1.9888606071472168, 1.9777201414108276, 1.9666407108306885, 1.9556233882904053, 1.944669246673584, 1.933779239654541, 1.9229544401168823, 1.912196159362793, 1.9015053510665894, 1.890883207321167, 1.8803309202194214, 1.869849681854248, 1.8594406843185425, 1.8491050004959106, 1.8388440608978271, 1.8286590576171875, 1.8185513019561768, 1.8085219860076904, 1.7985725402832031, 1.7887042760849, 1.7789183855056763, 1.769216537475586, 1.7595998048782349, 1.7500697374343872, 1.7406277656555176, 1.7312754392623901, 1.7220139503479004, 1.712844967842102, 1.7037699222564697, 1.6947903633117676, 1.6859078407287598, 1.677123785018921, 1.6684398651123047, 1.6598575115203857, 1.6513783931732178, 1.6430041790008545, 1.63473641872406, 1.6265767812728882, 1.618526816368103, 1.6105881929397583, 1.6027624607086182, 1.5950515270233154, 1.5874569416046143, 1.5799803733825684, 1.5726234912872314, 1.5653879642486572, 1.558275580406189, 1.5512878894805908, 1.544426679611206, 1.537693738937378, 1.531090497970581, 1.5246189832687378, 1.5182805061340332, 1.5120769739151, 1.5060100555419922, 1.5000814199447632, 1.4942924976348877, 1.4886451959609985, 1.4831409454345703, 1.4777814149856567, 1.472568154335022, 1.4675028324127197, 1.462586760520935, 1.4578217267990112, 1.4532090425491333, 1.4487501382827759, 1.4444465637207031, 1.4402996301651, 1.4363106489181519, 1.432481050491333, 1.428812026977539, 1.425304889678955, 1.4219608306884766, 1.4187809228897095, 1.4157663583755493, 1.412918210029602, 1.410237431526184, 1.4077249765396118, 1.405381679534912, 1.4032084941864014, 1.4012062549591064, 1.399375557899475, 1.3977171182632446, 1.3962316513061523, 1.3949196338653564, 1.3937815427780151, 1.392817735671997, 1.39202880859375, 1.391414761543274, 1.390976071357727, 1.3907127380371094, 1.375, 1.3750888109207153, 1.3753551244735718, 1.3757988214492798, 1.3764196634292603, 1.3772176504135132, 1.3781923055648804, 1.3793432712554932, 1.3806700706481934, 1.3821723461151123, 1.3838493824005127, 1.3857005834579468, 1.3877252340316772, 1.3899226188659668, 1.392291784286499, 1.3948321342468262, 1.3975424766540527, 1.4004219770431519, 1.403469443321228, 1.4066839218139648, 1.4100642204284668, 1.413609266281128, 1.417317509651184, 1.4211879968643188, 1.4252192974090576, 1.4294099807739258, 1.4337587356567383, 1.438264012336731, 1.4429244995117188, 1.4477386474609375, 1.452704906463623, 1.4578217267990112, 1.4630874395370483, 1.4685006141662598, 1.4740595817565918, 1.4797625541687012, 1.4856079816818237, 1.4915943145751953, 1.497719645500183, 1.5039823055267334, 1.510380744934082, 1.5169130563735962, 1.5235776901245117, 1.5303728580474854, 1.5372967720031738, 1.5443476438522339, 1.5515239238739014, 1.558823823928833, 1.5662455558776855, 1.5737873315811157, 1.5814476013183594, 1.5892245769500732, 1.5971165895462036, 1.6051218509674072, 1.6132386922836304, 1.6214655637741089, 1.62980055809021, 1.6382423639297485, 1.6467890739440918, 1.655439019203186, 1.6641908884048462, 1.6730427742004395, 1.6819933652877808, 1.6910408735275269, 1.7001838684082031, 1.7094206809997559, 1.71875, 1.7281701564788818, 1.7376798391342163, 1.7472774982452393, 1.7569615840911865, 1.7667309045791626, 1.7765837907791138, 1.7865190505981445, 1.7965352535247803, 1.806631088256836, 1.8168052434921265, 1.8270562887191772, 1.8373830318450928, 1.8477842807769775, 1.858258605003357, 1.8688048124313354, 1.8794218301773071, 1.890108346939087, 1.9008632898330688, 1.9116853475570679, 1.9225735664367676, 1.933526635169983, 1.9445436000823975, 1.9556233882904053, 1.9667649269104004, 1.9779670238494873, 1.9892288446426392, 2.00054931640625, 2.011927366256714, 2.023362159729004, 2.0348525047302246, 2.0463979244232178, 2.057996988296509, 2.0696489810943604, 2.081353187561035, 2.093108654022217, 2.1049141883850098, 2.116769552230835, 2.1286733150482178, 2.140625, 2.1526236534118652, 2.1646687984466553, 2.1767592430114746, 2.188894748687744, 2.2010738849639893, 2.21329665184021, 2.2255616188049316, 2.2378687858581543, 2.2502169609069824, 2.262605667114258, 2.2750344276428223, 2.2875020503997803, 2.300008535385132, 2.3125526905059814, 2.325134515762329, 2.3377528190612793, 2.350407123565674, 2.3630971908569336, 2.3758223056793213, 2.3885817527770996, 2.4013748168945312, 2.414201498031616, 2.427061080932617, 2.414201498031616, 2.4013748168945312, 2.3885817527770996, 2.3758223056793213, 2.3630971908569336, 2.350407123565674, 2.3377528190612793, 2.325134515762329, 2.3125526905059814, 2.300008535385132, 2.2875020503997803, 2.2750344276428223, 2.262605667114258, 2.2502169609069824, 2.2378687858581543, 2.2255616188049316, 2.21329665184021, 2.2010738849639893, 2.188894748687744, 2.1767592430114746, 2.1646687984466553, 2.1526236534118652, 2.140625, 2.1286733150482178, 2.116769552230835, 2.1049141883850098, 2.093108654022217, 2.081353187561035, 2.0696489810943604, 2.057996988296509, 2.0463979244232178, 2.0348525047302246, 2.023362159729004, 2.011927366256714, 2.00054931640625, 1.9892288446426392, 1.9779670238494873, 1.9667649269104004, 1.9556233882904053, 1.9445436000823975, 1.933526635169983, 1.9225735664367676, 1.9116853475570679, 1.9008632898330688, 1.890108346939087, 1.8794218301773071, 1.8688048124313354, 1.858258605003357, 1.8477842807769775, 1.8373830318450928, 1.8270562887191772, 1.8168052434921265, 1.806631088256836, 1.7965352535247803, 1.7865190505981445, 1.7765837907791138, 1.7667309045791626, 1.7569615840911865, 1.7472774982452393, 1.7376798391342163, 1.7281701564788818, 1.71875, 1.7094206809997559, 1.7001838684082031, 1.6910408735275269, 1.6819933652877808, 1.6730427742004395, 1.6641908884048462, 1.655439019203186, 1.6467890739440918, 1.6382423639297485, 1.62980055809021, 1.6214655637741089, 1.6132386922836304, 1.6051218509674072, 1.5971165895462036, 1.5892245769500732, 1.5814476013183594, 1.5737873315811157, 1.5662455558776855, 1.558823823928833, 1.5515239238739014, 1.5443476438522339, 1.5372967720031738, 1.5303728580474854, 1.5235776901245117, 1.5169130563735962, 1.510380744934082, 1.5039823055267334, 1.497719645500183, 1.4915943145751953, 1.4856079816818237, 1.4797625541687012, 1.4740595817565918, 1.4685006141662598, 1.4630874395370483, 1.4578217267990112, 1.452704906463623, 1.4477386474609375, 1.4429244995117188, 1.438264012336731, 1.4337587356567383, 1.4294099807739258, 1.4252192974090576, 1.4211879968643188, 1.417317509651184, 1.413609266281128, 1.4100642204284668, 1.4066839218139648, 1.403469443321228, 1.4004219770431519, 1.3975424766540527, 1.3948321342468262, 1.392291784286499, 1.3899226188659668, 1.3877252340316772, 1.3857005834579468, 1.3838493824005127, 1.3821723461151123, 1.3806700706481934, 1.3793432712554932, 1.3781923055648804, 1.3772176504135132, 1.3764196634292603, 1.3757988214492798, 1.3753551244735718, 1.3750888109207153, 1.359375, 1.3594647645950317, 1.3597341775894165, 1.3601830005645752, 1.3608109951019287, 1.361618161201477, 1.3626039028167725, 1.3637681007385254, 1.3651100397109985, 1.3666293621063232, 1.3683254718780518, 1.3701975345611572, 1.3722450733184814, 1.3744672536849976, 1.3768631219863892, 1.3794317245483398, 1.3821723461151123, 1.385083794593811, 1.38816499710083, 1.391414761543274, 1.3948321342468262, 1.3984156847000122, 1.4021642208099365, 1.406076431274414, 1.4101508855819702, 1.4143861532211304, 1.4187809228897095, 1.423333764076233, 1.4280428886413574, 1.4329071044921875, 1.4379245042800903, 1.4430937767028809, 1.4484130144119263, 1.4538809061050415, 1.4594954252243042, 1.4652551412582397, 1.4711582660675049, 1.4772030115127563, 1.48338782787323, 1.489710807800293, 1.4961702823638916, 1.502764344215393, 1.5094914436340332, 1.5163496732711792, 1.5233373641967773, 1.5304526090621948, 1.537693738937378, 1.5450589656829834, 1.5525463819503784, 1.5601544380187988, 1.5678813457489014, 1.5757253170013428, 1.5836845636367798, 1.5917572975158691, 1.5999419689178467, 1.6082369089126587, 1.6166402101516724, 1.625150203704834, 1.633765459060669, 1.6424840688705444, 1.6513044834136963, 1.6602251529693604, 1.669244408607483, 1.6783607006072998, 1.6875723600387573, 1.6968778371810913, 1.7062757015228271, 1.7157644033432007, 1.7253425121307373, 1.7350083589553833, 1.744760513305664, 1.754597783088684, 1.7645184993743896, 1.7745212316513062, 1.784604787826538, 1.7947677373886108, 1.8050087690353394, 1.815326452255249, 1.8257195949554443, 1.8361867666244507, 1.846726894378662, 1.8573386669158936, 1.8680208921432495, 1.878772258758545, 1.8895916938781738, 1.9004778861999512, 1.91143000125885, 1.922446608543396, 1.933526635169983, 1.944669246673584, 1.9558730125427246, 1.9671372175216675, 1.978460669517517, 1.989842414855957, 2.001281261444092, 2.0127766132354736, 2.024327039718628, 2.0359320640563965, 2.047590494155884, 2.0593016147613525, 2.0710642337799072, 2.0828776359558105, 2.094740867614746, 2.1066534519195557, 2.1186139583587646, 2.130622148513794, 2.142676830291748, 2.1547775268554688, 2.1669232845306396, 2.1791133880615234, 2.191347122192383, 2.2036235332489014, 2.2159423828125, 2.228302478790283, 2.2407033443450928, 2.2531445026397705, 2.265625, 2.278144359588623, 2.2907016277313232, 2.3032968044281006, 2.3159286975860596, 2.328596830368042, 2.3413007259368896, 2.3540399074554443, 2.3668136596679688, 2.3796212673187256, 2.3924624919891357, 2.405336618423462, 2.418243169784546, 2.405336618423462, 2.3924624919891357, 2.3796212673187256, 2.3668136596679688, 2.3540399074554443, 2.3413007259368896, 2.328596830368042, 2.3159286975860596, 2.3032968044281006, 2.2907016277313232, 2.278144359588623, 2.265625, 2.2531445026397705, 2.2407033443450928, 2.228302478790283, 2.2159423828125, 2.2036235332489014, 2.191347122192383, 2.1791133880615234, 2.1669232845306396, 2.1547775268554688, 2.142676830291748, 2.130622148513794, 2.1186139583587646, 2.1066534519195557, 2.094740867614746, 2.0828776359558105, 2.0710642337799072, 2.0593016147613525, 2.047590494155884, 2.0359320640563965, 2.024327039718628, 2.0127766132354736, 2.001281261444092, 1.989842414855957, 1.978460669517517, 1.9671372175216675, 1.9558730125427246, 1.944669246673584, 1.933526635169983, 1.922446608543396, 1.91143000125885, 1.9004778861999512, 1.8895916938781738, 1.878772258758545, 1.8680208921432495, 1.8573386669158936, 1.846726894378662, 1.8361867666244507, 1.8257195949554443, 1.815326452255249, 1.8050087690353394, 1.7947677373886108, 1.784604787826538, 1.7745212316513062, 1.7645184993743896, 1.754597783088684, 1.744760513305664, 1.7350083589553833, 1.7253425121307373, 1.7157644033432007, 1.7062757015228271, 1.6968778371810913, 1.6875723600387573, 1.6783607006072998, 1.669244408607483, 1.6602251529693604, 1.6513044834136963, 1.6424840688705444, 1.633765459060669, 1.625150203704834, 1.6166402101516724, 1.6082369089126587, 1.5999419689178467, 1.5917572975158691, 1.5836845636367798, 1.5757253170013428, 1.5678813457489014, 1.5601544380187988, 1.5525463819503784, 1.5450589656829834, 1.537693738937378, 1.5304526090621948, 1.5233373641967773, 1.5163496732711792, 1.5094914436340332, 1.502764344215393, 1.4961702823638916, 1.489710807800293, 1.48338782787323, 1.4772030115127563, 1.4711582660675049, 1.4652551412582397, 1.4594954252243042, 1.4538809061050415, 1.4484130144119263, 1.4430937767028809, 1.4379245042800903, 1.4329071044921875, 1.4280428886413574, 1.423333764076233, 1.4187809228897095, 1.4143861532211304, 1.4101508855819702, 1.406076431274414, 1.4021642208099365, 1.3984156847000122, 1.3948321342468262, 1.391414761543274, 1.38816499710083, 1.385083794593811, 1.3821723461151123, 1.3794317245483398, 1.3768631219863892, 1.3744672536849976, 1.3722450733184814, 1.3701975345611572, 1.3683254718780518, 1.3666293621063232, 1.3651100397109985, 1.3637681007385254, 1.3626039028167725, 1.361618161201477, 1.3608109951019287, 1.3601830005645752, 1.3597341775894165, 1.3594647645950317, 1.34375, 1.3438408374786377, 1.3441133499145508, 1.3445672988891602, 1.3452026844024658, 1.3460191488265991, 1.3470163345336914, 1.3481940031051636, 1.3495514392852783, 1.351088285446167, 1.3528038263320923, 1.3546974658966064, 1.3567683696746826, 1.359015703201294, 1.3614387512207031, 1.3640365600585938, 1.3668079376220703, 1.369752049446106, 1.3728677034378052, 1.376153588294983, 1.3796087503433228, 1.38323175907135, 1.3870213031768799, 1.390976071357727, 1.395094633102417, 1.399375557899475, 1.4038172960281372, 1.4084184169769287, 1.4131773710250854, 1.4180924892425537, 1.4231622219085693, 1.428384780883789, 1.4337587356567383, 1.4392821788787842, 1.4449535608291626, 1.4507709741592407, 1.4567327499389648, 1.4628372192382812, 1.4690823554992676, 1.4754667282104492, 1.4819881916046143, 1.4886451959609985, 1.4954357147216797, 1.5023581981658936, 1.5094106197357178, 1.516591191291809, 1.5238981246948242, 1.5313297510147095, 1.5388840436935425, 1.5465593338012695, 1.5543537139892578, 1.5622656345367432, 1.5702930688858032, 1.5784343481063843, 1.5866878032684326, 1.5950515270233154, 1.6035239696502686, 1.6121032238006592, 1.6207878589630127, 1.6295758485794067, 1.6384658813476562, 1.6474560499191284, 1.656544804573059, 1.6657304763793945, 1.6750116348266602, 1.6843866109848022, 1.693853735923767, 1.7034116983413696, 1.7130587100982666, 1.7227935791015625, 1.732614517211914, 1.7425203323364258, 1.752509355545044, 1.762580394744873, 1.7727317810058594, 1.782962441444397, 1.7932708263397217, 1.803655743598938, 1.8141156435012817, 1.824649453163147, 1.8352558612823486, 1.8459335565567017, 1.8566813468933105, 1.8674980401992798, 1.8783823251724243, 1.8893332481384277, 1.900349497795105, 1.91143000125885, 1.9225735664367676, 1.933779239654541, 1.945045828819275, 1.9563722610473633, 1.9677577018737793, 1.9792009592056274, 1.9907010793685913, 2.0022571086883545, 2.0138678550720215, 2.0255327224731445, 2.0372507572174072, 2.049020767211914, 2.0608420372009277, 2.072713851928711, 2.084635019302368, 2.096604824066162, 2.1086225509643555, 2.120687246322632, 2.132798194885254, 2.1449546813964844, 2.1571555137634277, 2.169400453567505, 2.1816887855529785, 2.194019317626953, 2.2063915729522705, 2.2188050746917725, 2.2312588691711426, 2.2437522411346436, 2.256284713745117, 2.268855571746826, 2.281464099884033, 2.29410982131958, 2.3067920207977295, 2.319509983062744, 2.332263469696045, 2.3450517654418945, 2.3578741550445557, 2.37073016166687, 2.3836193084716797, 2.396540880203247, 2.409494638442993, 2.396540880203247, 2.3836193084716797, 2.37073016166687, 2.3578741550445557, 2.3450517654418945, 2.332263469696045, 2.319509983062744, 2.3067920207977295, 2.29410982131958, 2.281464099884033, 2.268855571746826, 2.256284713745117, 2.2437522411346436, 2.2312588691711426, 2.2188050746917725, 2.2063915729522705, 2.194019317626953, 2.1816887855529785, 2.169400453567505, 2.1571555137634277, 2.1449546813964844, 2.132798194885254, 2.120687246322632, 2.1086225509643555, 2.096604824066162, 2.084635019302368, 2.072713851928711, 2.0608420372009277, 2.049020767211914, 2.0372507572174072, 2.0255327224731445, 2.0138678550720215, 2.0022571086883545, 1.9907010793685913, 1.9792009592056274, 1.9677577018737793, 1.9563722610473633, 1.945045828819275, 1.933779239654541, 1.9225735664367676, 1.91143000125885, 1.900349497795105, 1.8893332481384277, 1.8783823251724243, 1.8674980401992798, 1.8566813468933105, 1.8459335565567017, 1.8352558612823486, 1.824649453163147, 1.8141156435012817, 1.803655743598938, 1.7932708263397217, 1.782962441444397, 1.7727317810058594, 1.762580394744873, 1.752509355545044, 1.7425203323364258, 1.732614517211914, 1.7227935791015625, 1.7130587100982666, 1.7034116983413696, 1.693853735923767, 1.6843866109848022, 1.6750116348266602, 1.6657304763793945, 1.656544804573059, 1.6474560499191284, 1.6384658813476562, 1.6295758485794067, 1.6207878589630127, 1.6121032238006592, 1.6035239696502686, 1.5950515270233154, 1.5866878032684326, 1.5784343481063843, 1.5702930688858032, 1.5622656345367432, 1.5543537139892578, 1.5465593338012695, 1.5388840436935425, 1.5313297510147095, 1.5238981246948242, 1.516591191291809, 1.5094106197357178, 1.5023581981658936, 1.4954357147216797, 1.4886451959609985, 1.4819881916046143, 1.4754667282104492, 1.4690823554992676, 1.4628372192382812, 1.4567327499389648, 1.4507709741592407, 1.4449535608291626, 1.4392821788787842, 1.4337587356567383, 1.428384780883789, 1.4231622219085693, 1.4180924892425537, 1.4131773710250854, 1.4084184169769287, 1.4038172960281372, 1.399375557899475, 1.395094633102417, 1.390976071357727, 1.3870213031768799, 1.38323175907135, 1.3796087503433228, 1.376153588294983, 1.3728677034378052, 1.369752049446106, 1.3668079376220703, 1.3640365600585938, 1.3614387512207031, 1.359015703201294, 1.3567683696746826, 1.3546974658966064, 1.3528038263320923, 1.351088285446167, 1.3495514392852783, 1.3481940031051636, 1.3470163345336914, 1.3460191488265991, 1.3452026844024658, 1.3445672988891602, 1.3441133499145508, 1.3438408374786377, 1.328125, 1.3282169103622437, 1.3284926414489746, 1.3289519548416138, 1.3295947313308716, 1.3304208517074585, 1.3314297199249268, 1.3326210975646973, 1.3339943885803223, 1.3355491161346436, 1.3372845649719238, 1.3392001390457153, 1.3412950038909912, 1.3435683250427246, 1.3460191488265991, 1.348646640777588, 1.3514496088027954, 1.3544270992279053, 1.3575778007507324, 1.3609007596969604, 1.3643944263458252, 1.3680577278137207, 1.3718892335891724, 1.3758875131607056, 1.3800511360168457, 1.3843785524368286, 1.3888683319091797, 1.3935188055038452, 1.398328423500061, 1.4032955169677734, 1.4084184169769287, 1.4136955738067627, 1.4191250801086426, 1.4247052669525146, 1.4304343461990356, 1.4363106489181519, 1.4423322677612305, 1.4484972953796387, 1.4548041820526123, 1.4612507820129395, 1.467835545539856, 1.47455632686615, 1.4814114570617676, 1.4883991479873657, 1.495517373085022, 1.502764344215393, 1.5101382732391357, 1.5176372528076172, 1.5252593755722046, 1.5330028533935547, 1.5408658981323242, 1.5488466024398804, 1.5569432973861694, 1.565153956413269, 1.573477029800415, 1.5819107294082642, 1.590453028678894, 1.59910249710083, 1.607857346534729, 1.616715669631958, 1.625675916671753, 1.63473641872406, 1.6438955068588257, 1.6531516313552856, 1.6625028848648071, 1.671947956085205, 1.6814851760864258, 1.691112995147705, 1.7008298635482788, 1.7106342315673828, 1.7205246686935425, 1.7304996252059937, 1.7405576705932617, 1.750697374343872, 1.7609174251556396, 1.7712162733078003, 1.781592607498169, 1.7920451164245605, 1.80257248878479, 1.8131734132766724, 1.823846459388733, 1.8345905542373657, 1.8454045057296753, 1.856286883354187, 1.8672364950180054, 1.878252387046814, 1.8893332481384277, 1.9004778861999512, 1.9116853475570679, 1.9229544401168823, 1.9342840909957886, 1.9456732273101807, 1.9571208953857422, 1.9686260223388672, 1.9801875352859497, 1.9918044805526733, 2.0034759044647217, 2.0152010917663574, 2.0269787311553955, 2.0388081073760986, 2.0506882667541504, 2.0626182556152344, 2.0745975971221924, 2.086625099182129, 2.0986998081207275, 2.11082124710083, 2.12298846244812, 2.1352007389068604, 2.1474571228027344, 2.159757137298584, 2.1720998287200928, 2.1844844818115234, 2.1969106197357178, 2.2093772888183594, 2.221883773803711, 2.2344295978546143, 2.247014045715332, 2.259636402130127, 2.272296190261841, 2.2849926948547363, 2.297725200653076, 2.310493230819702, 2.323296070098877, 2.3361334800720215, 2.3490045070648193, 2.3619089126586914, 2.3748457431793213, 2.387814998626709, 2.400815725326538, 2.387814998626709, 2.3748457431793213, 2.3619089126586914, 2.3490045070648193, 2.3361334800720215, 2.323296070098877, 2.310493230819702, 2.297725200653076, 2.2849926948547363, 2.272296190261841, 2.259636402130127, 2.247014045715332, 2.2344295978546143, 2.221883773803711, 2.2093772888183594, 2.1969106197357178, 2.1844844818115234, 2.1720998287200928, 2.159757137298584, 2.1474571228027344, 2.1352007389068604, 2.12298846244812, 2.11082124710083, 2.0986998081207275, 2.086625099182129, 2.0745975971221924, 2.0626182556152344, 2.0506882667541504, 2.0388081073760986, 2.0269787311553955, 2.0152010917663574, 2.0034759044647217, 1.9918044805526733, 1.9801875352859497, 1.9686260223388672, 1.9571208953857422, 1.9456732273101807, 1.9342840909957886, 1.9229544401168823, 1.9116853475570679, 1.9004778861999512, 1.8893332481384277, 1.878252387046814, 1.8672364950180054, 1.856286883354187, 1.8454045057296753, 1.8345905542373657, 1.823846459388733, 1.8131734132766724, 1.80257248878479, 1.7920451164245605, 1.781592607498169, 1.7712162733078003, 1.7609174251556396, 1.750697374343872, 1.7405576705932617, 1.7304996252059937, 1.7205246686935425, 1.7106342315673828, 1.7008298635482788, 1.691112995147705, 1.6814851760864258, 1.671947956085205, 1.6625028848648071, 1.6531516313552856, 1.6438955068588257, 1.63473641872406, 1.625675916671753, 1.616715669631958, 1.607857346534729, 1.59910249710083, 1.590453028678894, 1.5819107294082642, 1.573477029800415, 1.565153956413269, 1.5569432973861694, 1.5488466024398804, 1.5408658981323242, 1.5330028533935547, 1.5252593755722046, 1.5176372528076172, 1.5101382732391357, 1.502764344215393, 1.495517373085022, 1.4883991479873657, 1.4814114570617676, 1.47455632686615, 1.467835545539856, 1.4612507820129395, 1.4548041820526123, 1.4484972953796387, 1.4423322677612305, 1.4363106489181519, 1.4304343461990356, 1.4247052669525146, 1.4191250801086426, 1.4136955738067627, 1.4084184169769287, 1.4032955169677734, 1.398328423500061, 1.3935188055038452, 1.3888683319091797, 1.3843785524368286, 1.3800511360168457, 1.3758875131607056, 1.3718892335891724, 1.3680577278137207, 1.3643944263458252, 1.3609007596969604, 1.3575778007507324, 1.3544270992279053, 1.3514496088027954, 1.348646640777588, 1.3460191488265991, 1.3435683250427246, 1.3412950038909912, 1.3392001390457153, 1.3372845649719238, 1.3355491161346436, 1.3339943885803223, 1.3326210975646973, 1.3314297199249268, 1.3304208517074585, 1.3295947313308716, 1.3289519548416138, 1.3284926414489746, 1.3282169103622437, 1.3125, 1.3125929832458496, 1.3128719329833984, 1.313336730003357, 1.3139872550964355, 1.3148231506347656, 1.315843939781189, 1.3170493841171265, 1.3184388875961304, 1.3200119733810425, 1.3217679262161255, 1.3237059116363525, 1.3258252143859863, 1.328125, 1.3306043148040771, 1.3332620859146118, 1.3360973596572876, 1.339108943939209, 1.34229576587677, 1.345656394958496, 1.3491895198822021, 1.3528940677642822, 1.3567683696746826, 1.3608109951019287, 1.3650206327438354, 1.3693954944610596, 1.373934268951416, 1.3786351680755615, 1.3834965229034424, 1.3885166645050049, 1.3936939239501953, 1.39902663230896, 1.4045127630233765, 1.4101508855819702, 1.4159388542175293, 1.421875, 1.4279574155807495, 1.4341843128204346, 1.4405537843704224, 1.44706392288208, 1.4537129402160645, 1.4604988098144531, 1.4674196243286133, 1.4744735956192017, 1.481658697128296, 1.4889731407165527, 1.4964150190353394, 1.5039823055267334, 1.5116733312606812, 1.5194860696792603, 1.5274187326431274, 1.5354692935943604, 1.5436360836029053, 1.551917314529419, 1.560310959815979, 1.5688153505325317, 1.5774286985397339, 1.5861490964889526, 1.5949749946594238, 1.6039044857025146, 1.612936019897461, 1.6220676898956299, 1.6312979459762573, 1.640625, 1.6500473022460938, 1.6595633029937744, 1.6691713333129883, 1.6788697242736816, 1.6886570453643799, 1.6985316276550293, 1.7084921598434448, 1.7185369729995728, 1.7286646366119385, 1.7388737201690674, 1.7491627931594849, 1.7595304250717163, 1.7699753046035767, 1.7804960012435913, 1.7910912036895752, 1.8017597198486328, 1.8125, 1.8233109712600708, 1.8341913223266602, 1.8451398611068726, 1.856155276298523, 1.8672364950180054, 1.8783823251724243, 1.8895916938781738, 1.9008632898330688, 1.912196159362793, 1.9235892295837402, 1.9350413084030151, 1.9465514421463013, 1.9581185579299927, 1.9697418212890625, 1.9814200401306152, 1.993152379989624, 2.0049376487731934, 2.016775369644165, 2.0286641120910645, 2.0406033992767334, 2.0525922775268555, 2.064629554748535, 2.0767147541046143, 2.0888469219207764, 2.101025104522705, 2.113248825073242, 2.125516891479492, 2.137828826904297, 2.150183916091919, 2.162581205368042, 2.175020217895508, 2.1875, 2.2000200748443604, 2.2125794887542725, 2.225177764892578, 2.23781418800354, 2.25048828125, 2.2631990909576416, 2.2759463787078857, 2.288729190826416, 2.301547050476074, 2.314399480819702, 2.3272860050201416, 2.340205669403076, 2.3531582355499268, 2.366142988204956, 2.379159688949585, 2.392207384109497, 2.379159688949585, 2.366142988204956, 2.3531582355499268, 2.340205669403076, 2.3272860050201416, 2.314399480819702, 2.301547050476074, 2.288729190826416, 2.2759463787078857, 2.2631990909576416, 2.25048828125, 2.23781418800354, 2.225177764892578, 2.2125794887542725, 2.2000200748443604, 2.1875, 2.175020217895508, 2.162581205368042, 2.150183916091919, 2.137828826904297, 2.125516891479492, 2.113248825073242, 2.101025104522705, 2.0888469219207764, 2.0767147541046143, 2.064629554748535, 2.0525922775268555, 2.0406033992767334, 2.0286641120910645, 2.016775369644165, 2.0049376487731934, 1.993152379989624, 1.9814200401306152, 1.9697418212890625, 1.9581185579299927, 1.9465514421463013, 1.9350413084030151, 1.9235892295837402, 1.912196159362793, 1.9008632898330688, 1.8895916938781738, 1.8783823251724243, 1.8672364950180054, 1.856155276298523, 1.8451398611068726, 1.8341913223266602, 1.8233109712600708, 1.8125, 1.8017597198486328, 1.7910912036895752, 1.7804960012435913, 1.7699753046035767, 1.7595304250717163, 1.7491627931594849, 1.7388737201690674, 1.7286646366119385, 1.7185369729995728, 1.7084921598434448, 1.6985316276550293, 1.6886570453643799, 1.6788697242736816, 1.6691713333129883, 1.6595633029937744, 1.6500473022460938, 1.640625, 1.6312979459762573, 1.6220676898956299, 1.612936019897461, 1.6039044857025146, 1.5949749946594238, 1.5861490964889526, 1.5774286985397339, 1.5688153505325317, 1.560310959815979, 1.551917314529419, 1.5436360836029053, 1.5354692935943604, 1.5274187326431274, 1.5194860696792603, 1.5116733312606812, 1.5039823055267334, 1.4964150190353394, 1.4889731407165527, 1.481658697128296, 1.4744735956192017, 1.4674196243286133, 1.4604988098144531, 1.4537129402160645, 1.44706392288208, 1.4405537843704224, 1.4341843128204346, 1.4279574155807495, 1.421875, 1.4159388542175293, 1.4101508855819702, 1.4045127630233765, 1.39902663230896, 1.3936939239501953, 1.3885166645050049, 1.3834965229034424, 1.3786351680755615, 1.373934268951416, 1.3693954944610596, 1.3650206327438354, 1.3608109951019287, 1.3567683696746826, 1.3528940677642822, 1.3491895198822021, 1.345656394958496, 1.34229576587677, 1.339108943939209, 1.3360973596572876, 1.3332620859146118, 1.3306043148040771, 1.328125, 1.3258252143859863, 1.3237059116363525, 1.3217679262161255, 1.3200119733810425, 1.3184388875961304, 1.3170493841171265, 1.315843939781189, 1.3148231506347656, 1.3139872550964355, 1.313336730003357, 1.3128719329833984, 1.3125929832458496, 1.296875, 1.2969691753387451, 1.2972514629364014, 1.2977218627929688, 1.2983801364898682, 1.2992260456085205, 1.3002591133117676, 1.3014789819717407, 1.3028851747512817, 1.3044769763946533, 1.3062537908554077, 1.308214783668518, 1.3103591203689575, 1.3126859664916992, 1.3151943683624268, 1.3178832530975342, 1.3207515478134155, 1.3237980604171753, 1.327021598815918, 1.3304208517074585, 1.3339943885803223, 1.3377408981323242, 1.3416589498519897, 1.3457471132278442, 1.3500036001205444, 1.3544270992279053, 1.359015703201294, 1.3637681007385254, 1.3686822652816772, 1.3737565279006958, 1.3789892196655273, 1.3843785524368286, 1.3899226188659668, 1.395619511604309, 1.4014675617218018, 1.4074647426605225, 1.413609266281128, 1.4198989868164062, 1.4263323545455933, 1.4329071044921875, 1.4396214485168457, 1.4464733600616455, 1.453460931777954, 1.4605823755264282, 1.467835545539856, 1.475218415260315, 1.4827293157577515, 1.4903662204742432, 1.4981271028518677, 1.5060100555419922, 1.5140132904052734, 1.5221349000930786, 1.5303728580474854, 1.5387253761291504, 1.5471906661987305, 1.5557667016983032, 1.5644519329071045, 1.573244333267212, 1.5821421146392822, 1.5911437273025513, 1.6002471446990967, 1.6094508171081543, 1.6187530755996704, 1.6281520128250122, 1.6376460790634155, 1.6472337245941162, 1.656913161277771, 1.6666829586029053, 1.6765413284301758, 1.6864869594573975, 1.6965181827545166, 1.706633448600769, 1.7168313264846802, 1.7271103858947754, 1.7374690771102905, 1.7479060888290405, 1.7584199905395508, 1.7690094709396362, 1.7796730995178223, 1.7904095649719238, 1.8012175559997559, 1.8120958805084229, 1.8230431079864502, 1.834058165550232, 1.8451398611068726, 1.856286883354187, 1.8674980401992798, 1.878772258758545, 1.890108346939087, 1.9015053510665894, 1.9129620790481567, 1.924477458000183, 1.9360504150390625, 1.947679877281189, 1.9593650102615356, 1.9711047410964966, 1.9828981161117554, 1.994744062423706, 2.0066418647766113, 2.0185904502868652, 2.0305888652801514, 2.0426363945007324, 2.054732084274292, 2.0668749809265137, 2.0790646076202393, 2.0912997722625732, 2.1035799980163574, 2.1159043312072754, 2.1282718181610107, 2.1406819820404053, 2.1531341075897217, 2.1656272411346436, 2.1781609058380127, 2.1907341480255127, 2.2033467292785645, 2.2159974575042725, 2.2286858558654785, 2.2414114475250244, 2.254173755645752, 2.2669715881347656, 2.2798047065734863, 2.292672634124756, 2.305574417114258, 2.318509817123413, 2.3314783573150635, 2.3444790840148926, 2.3575117588043213, 2.3705756664276123, 2.3836703300476074, 2.3705756664276123, 2.3575117588043213, 2.3444790840148926, 2.3314783573150635, 2.318509817123413, 2.305574417114258, 2.292672634124756, 2.2798047065734863, 2.2669715881347656, 2.254173755645752, 2.2414114475250244, 2.2286858558654785, 2.2159974575042725, 2.2033467292785645, 2.1907341480255127, 2.1781609058380127, 2.1656272411346436, 2.1531341075897217, 2.1406819820404053, 2.1282718181610107, 2.1159043312072754, 2.1035799980163574, 2.0912997722625732, 2.0790646076202393, 2.0668749809265137, 2.054732084274292, 2.0426363945007324, 2.0305888652801514, 2.0185904502868652, 2.0066418647766113, 1.994744062423706, 1.9828981161117554, 1.9711047410964966, 1.9593650102615356, 1.947679877281189, 1.9360504150390625, 1.924477458000183, 1.9129620790481567, 1.9015053510665894, 1.890108346939087, 1.878772258758545, 1.8674980401992798, 1.856286883354187, 1.8451398611068726, 1.834058165550232, 1.8230431079864502, 1.8120958805084229, 1.8012175559997559, 1.7904095649719238, 1.7796730995178223, 1.7690094709396362, 1.7584199905395508, 1.7479060888290405, 1.7374690771102905, 1.7271103858947754, 1.7168313264846802, 1.706633448600769, 1.6965181827545166, 1.6864869594573975, 1.6765413284301758, 1.6666829586029053, 1.656913161277771, 1.6472337245941162, 1.6376460790634155, 1.6281520128250122, 1.6187530755996704, 1.6094508171081543, 1.6002471446990967, 1.5911437273025513, 1.5821421146392822, 1.573244333267212, 1.5644519329071045, 1.5557667016983032, 1.5471906661987305, 1.5387253761291504, 1.5303728580474854, 1.5221349000930786, 1.5140132904052734, 1.5060100555419922, 1.4981271028518677, 1.4903662204742432, 1.4827293157577515, 1.475218415260315, 1.467835545539856, 1.4605823755264282, 1.453460931777954, 1.4464733600616455, 1.4396214485168457, 1.4329071044921875, 1.4263323545455933, 1.4198989868164062, 1.413609266281128, 1.4074647426605225, 1.4014675617218018, 1.395619511604309, 1.3899226188659668, 1.3843785524368286, 1.3789892196655273, 1.3737565279006958, 1.3686822652816772, 1.3637681007385254, 1.359015703201294, 1.3544270992279053, 1.3500036001205444, 1.3457471132278442, 1.3416589498519897, 1.3377408981323242, 1.3339943885803223, 1.3304208517074585, 1.327021598815918, 1.3237980604171753, 1.3207515478134155, 1.3178832530975342, 1.3151943683624268, 1.3126859664916992, 1.3103591203689575, 1.308214783668518, 1.3062537908554077, 1.3044769763946533, 1.3028851747512817, 1.3014789819717407, 1.3002591133117676, 1.2992260456085205, 1.2983801364898682, 1.2977218627929688, 1.2972514629364014, 1.2969691753387451, 1.28125, 1.281345248222351, 1.2816309928894043, 1.2821072340011597, 1.282773494720459, 1.2836296558380127, 1.2846752405166626, 1.2859100103378296, 1.2873331308364868, 1.288944125175476, 1.29074227809906, 1.292726755142212, 1.2948968410491943, 1.2972514629364014, 1.2997896671295166, 1.302510380744934, 1.3054124116897583, 1.3084946870803833, 1.3117557764053345, 1.3151943683624268, 1.3188092708587646, 1.3225988149642944, 1.3265615701675415, 1.3306959867477417, 1.3350006341934204, 1.3394736051559448, 1.3441133499145508, 1.348918080329895, 1.3538862466812134, 1.359015703201294, 1.364305019378662, 1.369752049446106, 1.3753551244735718, 1.3811120986938477, 1.3870213031768799, 1.393080711364746, 1.399288296699524, 1.4056422710418701, 1.4121404886245728, 1.4187809228897095, 1.425561785697937, 1.432481050491333, 1.4395365715026855, 1.4467265605926514, 1.454048752784729, 1.4615013599395752, 1.4690823554992676, 1.4767898321151733, 1.4846216440200806, 1.492576003074646, 1.5006508827209473, 1.5088443756103516, 1.5171544551849365, 1.5255794525146484, 1.5341172218322754, 1.5427659749984741, 1.5515239238739014, 1.5603891611099243, 1.5693598985671997, 1.5784343481063843, 1.5876107215881348, 1.596887230873108, 1.60626220703125, 1.6157337427139282, 1.625300407409668, 1.634960412979126, 1.644712209701538, 1.654554009437561, 1.6644842624664307, 1.6745014190673828, 1.6846040487289429, 1.6947903633117676, 1.7050590515136719, 1.7154086828231812, 1.7258377075195312, 1.736344575881958, 1.746928095817566, 1.7575868368148804, 1.7683192491531372, 1.7791242599487305, 1.7900004386901855, 1.8009464740753174, 1.8119611740112305, 1.8230431079864502, 1.8341913223266602, 1.8454045057296753, 1.8566813468933105, 1.8680208921432495, 1.8794218301773071, 1.890883207321167, 1.9024039506912231, 1.9139827489852905, 1.9256187677383423, 1.9373109340667725, 1.9490582942962646, 1.9608596563339233, 1.9727143049240112, 1.9846210479736328, 1.9965790510177612, 2.008587598800659, 2.0206453800201416, 2.0327517986297607, 2.0449059009552, 2.0571069717407227, 2.0693540573120117, 2.08164644241333, 2.0939831733703613, 2.106363534927368, 2.1187868118286133, 2.1312522888183594, 2.14375901222229, 2.156306505203247, 2.168894052505493, 2.181520938873291, 2.194186210632324, 2.2068896293640137, 2.219630002975464, 2.232407331466675, 2.24522066116333, 2.2580692768096924, 2.2709527015686035, 2.2838704586029053, 2.2968218326568604, 2.3098063468933105, 2.3228232860565186, 2.335872173309326, 2.348952531814575, 2.3620638847351074, 2.3752055168151855, 2.3620638847351074, 2.348952531814575, 2.335872173309326, 2.3228232860565186, 2.3098063468933105, 2.2968218326568604, 2.2838704586029053, 2.2709527015686035, 2.2580692768096924, 2.24522066116333, 2.232407331466675, 2.219630002975464, 2.2068896293640137, 2.194186210632324, 2.181520938873291, 2.168894052505493, 2.156306505203247, 2.14375901222229, 2.1312522888183594, 2.1187868118286133, 2.106363534927368, 2.0939831733703613, 2.08164644241333, 2.0693540573120117, 2.0571069717407227, 2.0449059009552, 2.0327517986297607, 2.0206453800201416, 2.008587598800659, 1.9965790510177612, 1.9846210479736328, 1.9727143049240112, 1.9608596563339233, 1.9490582942962646, 1.9373109340667725, 1.9256187677383423, 1.9139827489852905, 1.9024039506912231, 1.890883207321167, 1.8794218301773071, 1.8680208921432495, 1.8566813468933105, 1.8454045057296753, 1.8341913223266602, 1.8230431079864502, 1.8119611740112305, 1.8009464740753174, 1.7900004386901855, 1.7791242599487305, 1.7683192491531372, 1.7575868368148804, 1.746928095817566, 1.736344575881958, 1.7258377075195312, 1.7154086828231812, 1.7050590515136719, 1.6947903633117676, 1.6846040487289429, 1.6745014190673828, 1.6644842624664307, 1.654554009437561, 1.644712209701538, 1.634960412979126, 1.625300407409668, 1.6157337427139282, 1.60626220703125, 1.596887230873108, 1.5876107215881348, 1.5784343481063843, 1.5693598985671997, 1.5603891611099243, 1.5515239238739014, 1.5427659749984741, 1.5341172218322754, 1.5255794525146484, 1.5171544551849365, 1.5088443756103516, 1.5006508827209473, 1.492576003074646, 1.4846216440200806, 1.4767898321151733, 1.4690823554992676, 1.4615013599395752, 1.454048752784729, 1.4467265605926514, 1.4395365715026855, 1.432481050491333, 1.425561785697937, 1.4187809228897095, 1.4121404886245728, 1.4056422710418701, 1.399288296699524, 1.393080711364746, 1.3870213031768799, 1.3811120986938477, 1.3753551244735718, 1.369752049446106, 1.364305019378662, 1.359015703201294, 1.3538862466812134, 1.348918080329895, 1.3441133499145508, 1.3394736051559448, 1.3350006341934204, 1.3306959867477417, 1.3265615701675415, 1.3225988149642944, 1.3188092708587646, 1.3151943683624268, 1.3117557764053345, 1.3084946870803833, 1.3054124116897583, 1.302510380744934, 1.2997896671295166, 1.2972514629364014, 1.2948968410491943, 1.292726755142212, 1.29074227809906, 1.288944125175476, 1.2873331308364868, 1.2859100103378296, 1.2846752405166626, 1.2836296558380127, 1.282773494720459, 1.2821072340011597, 1.2816309928894043, 1.281345248222351, 1.265625, 1.2657214403152466, 1.2660107612609863, 1.2664927244186401, 1.267167329788208, 1.2680339813232422, 1.2690924406051636, 1.270342230796814, 1.2717828750610352, 1.2734135389328003, 1.2752336263656616, 1.2772421836853027, 1.2794384956359863, 1.2818214893341064, 1.2843902111053467, 1.2871434688568115, 1.2900800704956055, 1.293198823928833, 1.296498417854309, 1.299977421760559, 1.303634524345398, 1.307468056678772, 1.3114765882492065, 1.315658450126648, 1.3200119733810425, 1.324535608291626, 1.3292274475097656, 1.3340859413146973, 1.339108943939209, 1.3442949056625366, 1.3496419191360474, 1.3551478385925293, 1.3608109951019287, 1.3666293621063232, 1.3726009130477905, 1.3787236213684082, 1.3849955797195435, 1.391414761543274, 1.3979791402816772, 1.404686689376831, 1.4115352630615234, 1.418522834777832, 1.425647497177124, 1.4329071044921875, 1.4402996301651, 1.4478230476379395, 1.4554752111434937, 1.4632543325424194, 1.4711582660675049, 1.4791849851608276, 1.4873325824737549, 1.4955990314483643, 1.5039823055267334, 1.512480616569519, 1.5210919380187988, 1.52981436252594, 1.5386459827423096, 1.5475850105285645, 1.5566295385360718, 1.5657777786254883, 1.5750279426574707, 1.5843781232833862, 1.5938265323638916, 1.6033717393875122, 1.6130117177963257, 1.6227447986602783, 1.6325695514678955, 1.6424840688705444, 1.6524869203567505, 1.6625763177871704, 1.6727509498596191, 1.6830090284347534, 1.6933492422103882, 1.7037699222564697, 1.714269757270813, 1.7248471975326538, 1.7355008125305176, 1.7462291717529297, 1.7570310831069946, 1.7679049968719482, 1.7788498401641846, 1.7898640632629395, 1.8009464740753174, 1.8120958805084229, 1.8233109712600708, 1.8345905542373657, 1.8459335565567017, 1.8573386669158936, 1.8688048124313354, 1.8803309202194214, 1.8919159173965454, 1.9035584926605225, 1.9152579307556152, 1.9270129203796387, 1.938822627067566, 1.950685977935791, 1.9626020193099976, 1.9745697975158691, 1.9865883588790894, 1.9986567497253418, 2.0107741355895996, 2.022939682006836, 2.0351524353027344, 2.0474116802215576, 2.0597164630889893, 2.072065830230713, 2.0844593048095703, 2.096895933151245, 2.109375, 2.1218957901000977, 2.1344573497772217, 2.147059202194214, 2.159700632095337, 2.1723806858062744, 2.1850991249084473, 2.197854995727539, 2.2106475830078125, 2.2234764099121094, 2.2363409996032715, 2.2492403984069824, 2.262174129486084, 2.275141716003418, 2.288142442703247, 2.301175832748413, 2.314241409301758, 2.327338457107544, 2.3404664993286133, 2.3536250591278076, 2.3668136596679688, 2.3536250591278076, 2.3404664993286133, 2.327338457107544, 2.314241409301758, 2.301175832748413, 2.288142442703247, 2.275141716003418, 2.262174129486084, 2.2492403984069824, 2.2363409996032715, 2.2234764099121094, 2.2106475830078125, 2.197854995727539, 2.1850991249084473, 2.1723806858062744, 2.159700632095337, 2.147059202194214, 2.1344573497772217, 2.1218957901000977, 2.109375, 2.096895933151245, 2.0844593048095703, 2.072065830230713, 2.0597164630889893, 2.0474116802215576, 2.0351524353027344, 2.022939682006836, 2.0107741355895996, 1.9986567497253418, 1.9865883588790894, 1.9745697975158691, 1.9626020193099976, 1.950685977935791, 1.938822627067566, 1.9270129203796387, 1.9152579307556152, 1.9035584926605225, 1.8919159173965454, 1.8803309202194214, 1.8688048124313354, 1.8573386669158936, 1.8459335565567017, 1.8345905542373657, 1.8233109712600708, 1.8120958805084229, 1.8009464740753174, 1.7898640632629395, 1.7788498401641846, 1.7679049968719482, 1.7570310831069946, 1.7462291717529297, 1.7355008125305176, 1.7248471975326538, 1.714269757270813, 1.7037699222564697, 1.6933492422103882, 1.6830090284347534, 1.6727509498596191, 1.6625763177871704, 1.6524869203567505, 1.6424840688705444, 1.6325695514678955, 1.6227447986602783, 1.6130117177963257, 1.6033717393875122, 1.5938265323638916, 1.5843781232833862, 1.5750279426574707, 1.5657777786254883, 1.5566295385360718, 1.5475850105285645, 1.5386459827423096, 1.52981436252594, 1.5210919380187988, 1.512480616569519, 1.5039823055267334, 1.4955990314483643, 1.4873325824737549, 1.4791849851608276, 1.4711582660675049, 1.4632543325424194, 1.4554752111434937, 1.4478230476379395, 1.4402996301651, 1.4329071044921875, 1.425647497177124, 1.418522834777832, 1.4115352630615234, 1.404686689376831, 1.3979791402816772, 1.391414761543274, 1.3849955797195435, 1.3787236213684082, 1.3726009130477905, 1.3666293621063232, 1.3608109951019287, 1.3551478385925293, 1.3496419191360474, 1.3442949056625366, 1.339108943939209, 1.3340859413146973, 1.3292274475097656, 1.324535608291626, 1.3200119733810425, 1.315658450126648, 1.3114765882492065, 1.307468056678772, 1.303634524345398, 1.299977421760559, 1.296498417854309, 1.293198823928833, 1.2900800704956055, 1.2871434688568115, 1.2843902111053467, 1.2818214893341064, 1.2794384956359863, 1.2772421836853027, 1.2752336263656616, 1.2734135389328003, 1.2717828750610352, 1.270342230796814, 1.2690924406051636, 1.2680339813232422, 1.267167329788208, 1.2664927244186401, 1.2660107612609863, 1.2657214403152466, 1.25, 1.250097632408142, 1.2503905296325684, 1.2508785724639893, 1.2515615224838257, 1.252439022064209, 1.2535107135772705, 1.2547760009765625, 1.2562344074249268, 1.2578853368759155, 1.2597277164459229, 1.2617610692977905, 1.2639843225479126, 1.266396403312683, 1.268996238708496, 1.2717828750610352, 1.2747548818588257, 1.2779110670089722, 1.28125, 1.2847703695297241, 1.2884705066680908, 1.2923489809036255, 1.296404242515564, 1.3006346225738525, 1.305038332939148, 1.309613585472107, 1.3143588304519653, 1.3192719221115112, 1.3243513107299805, 1.3295947313308716, 1.3350006341934204, 1.3405667543411255, 1.346291184425354, 1.3521720170974731, 1.358207106590271, 1.3643944263458252, 1.370732069015503, 1.3772176504135132, 1.3838493824005127, 1.390625, 1.3975424766540527, 1.404599666595459, 1.411794662475586, 1.4191250801086426, 1.426589012145996, 1.4341843128204346, 1.4419089555740356, 1.449760913848877, 1.457737922668457, 1.4658381938934326, 1.4740595817565918, 1.4824000597000122, 1.4908576011657715, 1.4994301795959473, 1.5081160068511963, 1.5169130563735962, 1.5258194208145142, 1.5348331928253174, 1.543952465057373, 1.5531753301620483, 1.5625, 1.5719246864318848, 1.5814476013183594, 1.5910669565200806, 1.6007810831069946, 1.6105881929397583, 1.6204864978790283, 1.63047456741333, 1.6405506134033203, 1.6507130861282349, 1.66096031665802, 1.6712907552719116, 1.681702971458435, 1.6921954154968262, 1.7027665376663208, 1.7134150266647339, 1.7241393327713013, 1.7349380254745483, 1.7458096742630005, 1.7567532062530518, 1.7677669525146484, 1.7788498401641846, 1.7900004386901855, 1.8012175559997559, 1.8125, 1.823846459388733, 1.8352558612823486, 1.846726894378662, 1.858258605003357, 1.869849681854248, 1.881499171257019, 1.8932058811187744, 1.9049688577651978, 1.9167869091033936, 1.9286593198776245, 1.9405847787857056, 1.9525624513626099, 1.964591383934021, 1.9766706228256226, 1.9887992143630981, 2.000976324081421, 2.0132009983062744, 2.025472640991211, 2.037790060043335, 2.050152540206909, 2.062559127807617, 2.075009346008301, 2.0875022411346436, 2.100037097930908, 2.1126132011413574, 2.125229835510254, 2.1378860473632812, 2.1505813598632812, 2.1633150577545166, 2.176086187362671, 2.188894748687744, 2.2017393112182617, 2.2146198749542236, 2.2275354862213135, 2.240485429763794, 2.253469467163086, 2.266486883163452, 2.2795369625091553, 2.292619466781616, 2.3057334423065186, 2.318878412246704, 2.3320541381835938, 2.34525990486145, 2.3584952354431152, 2.34525990486145, 2.3320541381835938, 2.318878412246704, 2.3057334423065186, 2.292619466781616, 2.2795369625091553, 2.266486883163452, 2.253469467163086, 2.240485429763794, 2.2275354862213135, 2.2146198749542236, 2.2017393112182617, 2.188894748687744, 2.176086187362671, 2.1633150577545166, 2.1505813598632812, 2.1378860473632812, 2.125229835510254, 2.1126132011413574, 2.100037097930908, 2.0875022411346436, 2.075009346008301, 2.062559127807617, 2.050152540206909, 2.037790060043335, 2.025472640991211, 2.0132009983062744, 2.000976324081421, 1.9887992143630981, 1.9766706228256226, 1.964591383934021, 1.9525624513626099, 1.9405847787857056, 1.9286593198776245, 1.9167869091033936, 1.9049688577651978, 1.8932058811187744, 1.881499171257019, 1.869849681854248, 1.858258605003357, 1.846726894378662, 1.8352558612823486, 1.823846459388733, 1.8125, 1.8012175559997559, 1.7900004386901855, 1.7788498401641846, 1.7677669525146484, 1.7567532062530518, 1.7458096742630005, 1.7349380254745483, 1.7241393327713013, 1.7134150266647339, 1.7027665376663208, 1.6921954154968262, 1.681702971458435, 1.6712907552719116, 1.66096031665802, 1.6507130861282349, 1.6405506134033203, 1.63047456741333, 1.6204864978790283, 1.6105881929397583, 1.6007810831069946, 1.5910669565200806, 1.5814476013183594, 1.5719246864318848, 1.5625, 1.5531753301620483, 1.543952465057373, 1.5348331928253174, 1.5258194208145142, 1.5169130563735962, 1.5081160068511963, 1.4994301795959473, 1.4908576011657715, 1.4824000597000122, 1.4740595817565918, 1.4658381938934326, 1.457737922668457, 1.449760913848877, 1.4419089555740356, 1.4341843128204346, 1.426589012145996, 1.4191250801086426, 1.411794662475586, 1.404599666595459, 1.3975424766540527, 1.390625, 1.3838493824005127, 1.3772176504135132, 1.370732069015503, 1.3643944263458252, 1.358207106590271, 1.3521720170974731, 1.346291184425354, 1.3405667543411255, 1.3350006341934204, 1.3295947313308716, 1.3243513107299805, 1.3192719221115112, 1.3143588304519653, 1.309613585472107, 1.305038332939148, 1.3006346225738525, 1.296404242515564, 1.2923489809036255, 1.2884705066680908, 1.2847703695297241, 1.28125, 1.2779110670089722, 1.2747548818588257, 1.2717828750610352, 1.268996238708496, 1.266396403312683, 1.2639843225479126, 1.2617610692977905, 1.2597277164459229, 1.2578853368759155, 1.2562344074249268, 1.2547760009765625, 1.2535107135772705, 1.252439022064209, 1.2515615224838257, 1.2508785724639893, 1.2503905296325684, 1.250097632408142, 1.234375, 1.2344739437103271, 1.2347705364227295, 1.2352646589279175, 1.2359563112258911, 1.2368448972702026, 1.2379300594329834, 1.2392112016677856, 1.2406879663467407, 1.2423595190048218, 1.2442249059677124, 1.2462835311889648, 1.2485343217849731, 1.2509762048721313, 1.2536081075668335, 1.256428837776184, 1.259437084197998, 1.2626315355300903, 1.2660107612609863, 1.2695733308792114, 1.2733176946640015, 1.2772421836853027, 1.281345248222351, 1.2856251001358032, 1.2900800704956055, 1.294708251953125, 1.2995078563690186, 1.3044769763946533, 1.309613585472107, 1.3149158954620361, 1.3203818798065186, 1.3260093927383423, 1.331796407699585, 1.3377408981323242, 1.3438408374786377, 1.3500940799713135, 1.35649836063385, 1.3630517721176147, 1.369752049446106, 1.3765970468521118, 1.38358473777771, 1.3907127380371094, 1.3979791402816772, 1.405381679534912, 1.412918210029602, 1.4205865859985352, 1.428384780883789, 1.4363106489181519, 1.4443620443344116, 1.4525368213653564, 1.4608330726623535, 1.4692485332489014, 1.4777814149856567, 1.4864294528961182, 1.4951908588409424, 1.5040634870529175, 1.5130454301834106, 1.5221349000930786, 1.5313297510147095, 1.54062819480896, 1.5500283241271973, 1.5595284700393677, 1.5691266059875488, 1.578821063041687, 1.5886099338531494, 1.5984916687011719, 1.6084645986557007, 1.618526816368103, 1.6286767721176147, 1.6389127969741821, 1.649233341217041, 1.6596368551254272, 1.6701217889785767, 1.6806864738464355, 1.6913295984268188, 1.7020494937896729, 1.712844967842102, 1.7237144708633423, 1.7346564531326294, 1.7456698417663574, 1.7567532062530518, 1.7679049968719482, 1.7791242599487305, 1.7904095649719238, 1.8017597198486328, 1.8131734132766724, 1.824649453163147, 1.8361867666244507, 1.8477842807769775, 1.8594406843185425, 1.8711549043655396, 1.8829259872436523, 1.8947527408599854, 1.9066342115402222, 1.9185693264007568, 1.930557131767273, 1.942596673965454, 1.9546868801116943, 1.9668269157409668, 1.9790159463882446, 1.9912528991699219, 2.0035369396209717, 2.015867233276367, 2.028243064880371, 2.040663242340088, 2.0531272888183594, 2.0656344890594482, 2.078183650970459, 2.0907745361328125, 2.1034059524536133, 2.116077423095703, 2.1287879943847656, 2.1415371894836426, 2.1543242931365967, 2.1671485900878906, 2.180009603500366, 2.192906379699707, 2.205838203430176, 2.2188050746917725, 2.2318058013916016, 2.244839906692505, 2.2579071521759033, 2.2710065841674805, 2.284137725830078, 2.297300100326538, 2.310493230819702, 2.323716402053833, 2.3369693756103516, 2.3502514362335205, 2.3369693756103516, 2.323716402053833, 2.310493230819702, 2.297300100326538, 2.284137725830078, 2.2710065841674805, 2.2579071521759033, 2.244839906692505, 2.2318058013916016, 2.2188050746917725, 2.205838203430176, 2.192906379699707, 2.180009603500366, 2.1671485900878906, 2.1543242931365967, 2.1415371894836426, 2.1287879943847656, 2.116077423095703, 2.1034059524536133, 2.0907745361328125, 2.078183650970459, 2.0656344890594482, 2.0531272888183594, 2.040663242340088, 2.028243064880371, 2.015867233276367, 2.0035369396209717, 1.9912528991699219, 1.9790159463882446, 1.9668269157409668, 1.9546868801116943, 1.942596673965454, 1.930557131767273, 1.9185693264007568, 1.9066342115402222, 1.8947527408599854, 1.8829259872436523, 1.8711549043655396, 1.8594406843185425, 1.8477842807769775, 1.8361867666244507, 1.824649453163147, 1.8131734132766724, 1.8017597198486328, 1.7904095649719238, 1.7791242599487305, 1.7679049968719482, 1.7567532062530518, 1.7456698417663574, 1.7346564531326294, 1.7237144708633423, 1.712844967842102, 1.7020494937896729, 1.6913295984268188, 1.6806864738464355, 1.6701217889785767, 1.6596368551254272, 1.649233341217041, 1.6389127969741821, 1.6286767721176147, 1.618526816368103, 1.6084645986557007, 1.5984916687011719, 1.5886099338531494, 1.578821063041687, 1.5691266059875488, 1.5595284700393677, 1.5500283241271973, 1.54062819480896, 1.5313297510147095, 1.5221349000930786, 1.5130454301834106, 1.5040634870529175, 1.4951908588409424, 1.4864294528961182, 1.4777814149856567, 1.4692485332489014, 1.4608330726623535, 1.4525368213653564, 1.4443620443344116, 1.4363106489181519, 1.428384780883789, 1.4205865859985352, 1.412918210029602, 1.405381679534912, 1.3979791402816772, 1.3907127380371094, 1.38358473777771, 1.3765970468521118, 1.369752049446106, 1.3630517721176147, 1.35649836063385, 1.3500940799713135, 1.3438408374786377, 1.3377408981323242, 1.331796407699585, 1.3260093927383423, 1.3203818798065186, 1.3149158954620361, 1.309613585472107, 1.3044769763946533, 1.2995078563690186, 1.294708251953125, 1.2900800704956055, 1.2856251001358032, 1.281345248222351, 1.2772421836853027, 1.2733176946640015, 1.2695733308792114, 1.2660107612609863, 1.2626315355300903, 1.259437084197998, 1.256428837776184, 1.2536081075668335, 1.2509762048721313, 1.2485343217849731, 1.2462835311889648, 1.2442249059677124, 1.2423595190048218, 1.2406879663467407, 1.2392112016677856, 1.2379300594329834, 1.2368448972702026, 1.2359563112258911, 1.2352646589279175, 1.2347705364227295, 1.2344739437103271, 1.21875, 1.2188501358032227, 1.2191505432128906, 1.2196511030197144, 1.2203514575958252, 1.2212514877319336, 1.2223504781723022, 1.223647952079773, 1.2251434326171875, 1.2268362045288086, 1.2287251949310303, 1.2308096885681152, 1.233088731765747, 1.2355611324310303, 1.2382258176803589, 1.2410814762115479, 1.244126796722412, 1.2473604679107666, 1.2507810592651367, 1.2543867826461792, 1.258176326751709, 1.2621480226516724, 1.2662999629974365, 1.2706304788589478, 1.2751379013061523, 1.2798200845718384, 1.2846752405166626, 1.2897015810012817, 1.2948968410491943, 1.3002591133117676, 1.305786371231079, 1.3114765882492065, 1.3173273801803589, 1.3233369588851929, 1.3295029401779175, 1.3358232975006104, 1.34229576587677, 1.348918080329895, 1.355688214302063, 1.3626039028167725, 1.369662880897522, 1.3768631219863892, 1.3842021226882935, 1.391677975654602, 1.399288296699524, 1.4070310592651367, 1.4149038791656494, 1.4229048490524292, 1.431031584739685, 1.4392821788787842, 1.447654366493225, 1.456146001815796, 1.4647551774978638, 1.4734797477722168, 1.4823176860809326, 1.4912668466567993, 1.5003254413604736, 1.5094914436340332, 1.5187628269195557, 1.5281378030776978, 1.537614345550537, 1.5471906661987305, 1.556864857673645, 1.5666351318359375, 1.5764998197555542, 1.5864570140838623, 1.5965049266815186, 1.6066421270370483, 1.6168667078018188, 1.6271770000457764, 1.6375715732574463, 1.6480486392974854, 1.658606767654419, 1.669244408607483, 1.679960012435913, 1.6907520294189453, 1.7016191482543945, 1.7125598192214966, 1.7235727310180664, 1.7346564531326294, 1.7458096742630005, 1.7570310831069946, 1.7683192491531372, 1.7796730995178223, 1.7910912036895752, 1.80257248878479, 1.8141156435012817, 1.8257195949554443, 1.8373830318450928, 1.8491050004959106, 1.8608843088150024, 1.8727200031280518, 1.8846107721328735, 1.896555781364441, 1.908553957939148, 1.9206042289733887, 1.9327057600021362, 1.9448574781417847, 1.9570585489273071, 1.9693078994750977, 1.981604814529419, 1.9939483404159546, 2.0063376426696777, 2.0187718868255615, 2.03125, 2.043771505355835, 2.05633544921875, 2.068941116333008, 2.081587791442871, 2.0942747592926025, 2.1070010662078857, 2.1197659969329834, 2.1325693130493164, 2.1454098224639893, 2.1582870483398438, 2.1712005138397217, 2.1841492652893066, 2.1971328258514404, 2.2101504802703857, 2.2232019901275635, 2.2362864017486572, 2.249403238296509, 2.262551784515381, 2.2757318019866943, 2.288942575454712, 2.3021833896636963, 2.3154542446136475, 2.328754186630249, 2.3420827388763428, 2.328754186630249, 2.3154542446136475, 2.3021833896636963, 2.288942575454712, 2.2757318019866943, 2.262551784515381, 2.249403238296509, 2.2362864017486572, 2.2232019901275635, 2.2101504802703857, 2.1971328258514404, 2.1841492652893066, 2.1712005138397217, 2.1582870483398438, 2.1454098224639893, 2.1325693130493164, 2.1197659969329834, 2.1070010662078857, 2.0942747592926025, 2.081587791442871, 2.068941116333008, 2.05633544921875, 2.043771505355835, 2.03125, 2.0187718868255615, 2.0063376426696777, 1.9939483404159546, 1.981604814529419, 1.9693078994750977, 1.9570585489273071, 1.9448574781417847, 1.9327057600021362, 1.9206042289733887, 1.908553957939148, 1.896555781364441, 1.8846107721328735, 1.8727200031280518, 1.8608843088150024, 1.8491050004959106, 1.8373830318450928, 1.8257195949554443, 1.8141156435012817, 1.80257248878479, 1.7910912036895752, 1.7796730995178223, 1.7683192491531372, 1.7570310831069946, 1.7458096742630005, 1.7346564531326294, 1.7235727310180664, 1.7125598192214966, 1.7016191482543945, 1.6907520294189453, 1.679960012435913, 1.669244408607483, 1.658606767654419, 1.6480486392974854, 1.6375715732574463, 1.6271770000457764, 1.6168667078018188, 1.6066421270370483, 1.5965049266815186, 1.5864570140838623, 1.5764998197555542, 1.5666351318359375, 1.556864857673645, 1.5471906661987305, 1.537614345550537, 1.5281378030776978, 1.5187628269195557, 1.5094914436340332, 1.5003254413604736, 1.4912668466567993, 1.4823176860809326, 1.4734797477722168, 1.4647551774978638, 1.456146001815796, 1.447654366493225, 1.4392821788787842, 1.431031584739685, 1.4229048490524292, 1.4149038791656494, 1.4070310592651367, 1.399288296699524, 1.391677975654602, 1.3842021226882935, 1.3768631219863892, 1.369662880897522, 1.3626039028167725, 1.355688214302063, 1.348918080329895, 1.34229576587677, 1.3358232975006104, 1.3295029401779175, 1.3233369588851929, 1.3173273801803589, 1.3114765882492065, 1.305786371231079, 1.3002591133117676, 1.2948968410491943, 1.2897015810012817, 1.2846752405166626, 1.2798200845718384, 1.2751379013061523, 1.2706304788589478, 1.2662999629974365, 1.2621480226516724, 1.258176326751709, 1.2543867826461792, 1.2507810592651367, 1.2473604679107666, 1.244126796722412, 1.2410814762115479, 1.2382258176803589, 1.2355611324310303, 1.233088731765747, 1.2308096885681152, 1.2287251949310303, 1.2268362045288086, 1.2251434326171875, 1.223647952079773, 1.2223504781723022, 1.2212514877319336, 1.2203514575958252, 1.2196511030197144, 1.2191505432128906, 1.2188501358032227, 1.203125, 1.2032264471054077, 1.2035307884216309, 1.2040377855300903, 1.2047473192214966, 1.2056589126586914, 1.2067720890045166, 1.208086371421814, 1.2096010446548462, 1.2113155126571655, 1.213228702545166, 1.2153397798538208, 1.2176477909088135, 1.220151424407959, 1.222849726676941, 1.2257411479949951, 1.228824496269226, 1.2320983409881592, 1.2355611324310303, 1.2392112016677856, 1.2430471181869507, 1.247066855430603, 1.2512688636779785, 1.2556512355804443, 1.2602121829986572, 1.2649496793746948, 1.2698616981506348, 1.2749463319778442, 1.2802015542984009, 1.2856251001358032, 1.2912150621414185, 1.2969691753387451, 1.3028851747512817, 1.308961033821106, 1.3151943683624268, 1.3215831518173218, 1.328125, 1.33481764793396, 1.3416589498519897, 1.348646640777588, 1.3557783365249634, 1.3630517721176147, 1.37046480178833, 1.378015160560608, 1.3857005834579468, 1.3935188055038452, 1.4014675617218018, 1.4095447063446045, 1.4177480936050415, 1.4260755777359009, 1.4345247745513916, 1.4430937767028809, 1.4517803192138672, 1.4605823755264282, 1.469497799873352, 1.4785246849060059, 1.4876608848571777, 1.4969043731689453, 1.5062532424926758, 1.5157055854797363, 1.5252593755722046, 1.5349127054214478, 1.5446637868881226, 1.5545108318328857, 1.5644519329071045, 1.5744853019714355, 1.5846091508865356, 1.5948219299316406, 1.6051218509674072, 1.6155071258544922, 1.625976324081421, 1.63652765750885, 1.6471595764160156, 1.6578706502914429, 1.6686593294143677, 1.6795239448547363, 1.6904633045196533, 1.701475739479065, 1.7125598192214966, 1.7237144708633423, 1.7349380254745483, 1.7462291717529297, 1.7575868368148804, 1.7690094709396362, 1.7804960012435913, 1.7920451164245605, 1.803655743598938, 1.815326452255249, 1.8270562887191772, 1.8388440608978271, 1.8506886959075928, 1.8625891208648682, 1.8745442628860474, 1.8865529298782349, 1.8986142873764038, 1.9107273817062378, 1.9228910207748413, 1.9351043701171875, 1.94736647605896, 1.9596765041351318, 1.9720335006713867, 1.9844365119934082, 1.996884822845459, 2.0093774795532227, 2.021913528442383, 2.0344924926757812, 2.0471134185791016, 2.0597755908966064, 2.0724782943725586, 2.0852205753326416, 2.098001718521118, 2.11082124710083, 2.12367844581604, 2.1365723609924316, 2.1495025157928467, 2.162468433380127, 2.175469160079956, 2.188504219055176, 2.201573133468628, 2.214674949645996, 2.227809429168701, 2.240975856781006, 2.254173755645752, 2.267402410507202, 2.2806613445281982, 2.293950080871582, 2.3072681427001953, 2.32061505317688, 2.3339900970458984, 2.32061505317688, 2.3072681427001953, 2.293950080871582, 2.2806613445281982, 2.267402410507202, 2.254173755645752, 2.240975856781006, 2.227809429168701, 2.214674949645996, 2.201573133468628, 2.188504219055176, 2.175469160079956, 2.162468433380127, 2.1495025157928467, 2.1365723609924316, 2.12367844581604, 2.11082124710083, 2.098001718521118, 2.0852205753326416, 2.0724782943725586, 2.0597755908966064, 2.0471134185791016, 2.0344924926757812, 2.021913528442383, 2.0093774795532227, 1.996884822845459, 1.9844365119934082, 1.9720335006713867, 1.9596765041351318, 1.94736647605896, 1.9351043701171875, 1.9228910207748413, 1.9107273817062378, 1.8986142873764038, 1.8865529298782349, 1.8745442628860474, 1.8625891208648682, 1.8506886959075928, 1.8388440608978271, 1.8270562887191772, 1.815326452255249, 1.803655743598938, 1.7920451164245605, 1.7804960012435913, 1.7690094709396362, 1.7575868368148804, 1.7462291717529297, 1.7349380254745483, 1.7237144708633423, 1.7125598192214966, 1.701475739479065, 1.6904633045196533, 1.6795239448547363, 1.6686593294143677, 1.6578706502914429, 1.6471595764160156, 1.63652765750885, 1.625976324081421, 1.6155071258544922, 1.6051218509674072, 1.5948219299316406, 1.5846091508865356, 1.5744853019714355, 1.5644519329071045, 1.5545108318328857, 1.5446637868881226, 1.5349127054214478, 1.5252593755722046, 1.5157055854797363, 1.5062532424926758, 1.4969043731689453, 1.4876608848571777, 1.4785246849060059, 1.469497799873352, 1.4605823755264282, 1.4517803192138672, 1.4430937767028809, 1.4345247745513916, 1.4260755777359009, 1.4177480936050415, 1.4095447063446045, 1.4014675617218018, 1.3935188055038452, 1.3857005834579468, 1.378015160560608, 1.37046480178833, 1.3630517721176147, 1.3557783365249634, 1.348646640777588, 1.3416589498519897, 1.33481764793396, 1.328125, 1.3215831518173218, 1.3151943683624268, 1.308961033821106, 1.3028851747512817, 1.2969691753387451, 1.2912150621414185, 1.2856251001358032, 1.2802015542984009, 1.2749463319778442, 1.2698616981506348, 1.2649496793746948, 1.2602121829986572, 1.2556512355804443, 1.2512688636779785, 1.247066855430603, 1.2430471181869507, 1.2392112016677856, 1.2355611324310303, 1.2320983409881592, 1.228824496269226, 1.2257411479949951, 1.222849726676941, 1.220151424407959, 1.2176477909088135, 1.2153397798538208, 1.213228702545166, 1.2113155126571655, 1.2096010446548462, 1.208086371421814, 1.2067720890045166, 1.2056589126586914, 1.2047473192214966, 1.2040377855300903, 1.2035307884216309, 1.2032264471054077, 1.1875, 1.1876027584075928, 1.1879111528396606, 1.188424825668335, 1.1891436576843262, 1.190067172050476, 1.1911948919296265, 1.1925263404846191, 1.1940608024597168, 1.1957974433898926, 1.1977355480194092, 1.1998738050460815, 1.2022114992141724, 1.2047473192214966, 1.2074799537658691, 1.210408091545105, 1.2135305404663086, 1.2168455123901367, 1.2203514575958252, 1.2240469455718994, 1.2279301881790161, 1.2319992780685425, 1.2362525463104248, 1.2406879663467407, 1.2453036308288574, 1.250097632408142, 1.2550678253173828, 1.2602121829986572, 1.2655285596847534, 1.2710148096084595, 1.276668667793274, 1.2824879884719849, 1.2884705066680908, 1.2946139574050903, 1.3009161949157715, 1.3073747158050537, 1.3139872550964355, 1.3207515478134155, 1.3276653289794922, 1.3347262144088745, 1.341931939125061, 1.3492799997329712, 1.3567683696746826, 1.3643944263458252, 1.3721561431884766, 1.3800511360168457, 1.3880770206451416, 1.3962316513061523, 1.4045127630233765, 1.412918210029602, 1.4214457273483276, 1.4300930500030518, 1.4388580322265625, 1.4477386474609375, 1.4567327499389648, 1.4658381938934326, 1.4750529527664185, 1.484375, 1.4938023090362549, 1.5033328533172607, 1.5129648447036743, 1.5226961374282837, 1.5325249433517456, 1.5424494743347168, 1.5524678230285645, 1.5625780820846558, 1.5727787017822266, 1.583067774772644, 1.5934436321258545, 1.6039044857025146, 1.61444890499115, 1.625075101852417, 1.6357815265655518, 1.64656662940979, 1.6574288606643677, 1.6683666706085205, 1.679378628730774, 1.6904633045196533, 1.7016191482543945, 1.712844967842102, 1.7241393327713013, 1.7355008125305176, 1.746928095817566, 1.7584199905395508, 1.7699753046035767, 1.781592607498169, 1.7932708263397217, 1.8050087690353394, 1.8168052434921265, 1.8286590576171875, 1.840569257736206, 1.8525346517562866, 1.8645542860031128, 1.8766268491744995, 1.8887516260147095, 1.9009275436401367, 1.9131535291671753, 1.9254286289215088, 1.9377520084381104, 1.9501227140426636, 1.962539792060852, 1.9750025272369385, 1.987509846687317, 2.00006103515625, 2.012655258178711, 2.025291681289673, 2.0379695892333984, 2.0506882667541504, 2.0634467601776123, 2.076244354248047, 2.089080572128296, 2.101954460144043, 2.11486554145813, 2.1278128623962402, 2.140796184539795, 2.1538143157958984, 2.1668670177459717, 2.1799535751342773, 2.193073272705078, 2.206225633621216, 2.2194101810455322, 2.232625961303711, 2.245872974395752, 2.259150266647339, 2.2724573612213135, 2.2857937812805176, 2.299159049987793, 2.3125526905059814, 2.325974225997925, 2.3125526905059814, 2.299159049987793, 2.2857937812805176, 2.2724573612213135, 2.259150266647339, 2.245872974395752, 2.232625961303711, 2.2194101810455322, 2.206225633621216, 2.193073272705078, 2.1799535751342773, 2.1668670177459717, 2.1538143157958984, 2.140796184539795, 2.1278128623962402, 2.11486554145813, 2.101954460144043, 2.089080572128296, 2.076244354248047, 2.0634467601776123, 2.0506882667541504, 2.0379695892333984, 2.025291681289673, 2.012655258178711, 2.00006103515625, 1.987509846687317, 1.9750025272369385, 1.962539792060852, 1.9501227140426636, 1.9377520084381104, 1.9254286289215088, 1.9131535291671753, 1.9009275436401367, 1.8887516260147095, 1.8766268491744995, 1.8645542860031128, 1.8525346517562866, 1.840569257736206, 1.8286590576171875, 1.8168052434921265, 1.8050087690353394, 1.7932708263397217, 1.781592607498169, 1.7699753046035767, 1.7584199905395508, 1.746928095817566, 1.7355008125305176, 1.7241393327713013, 1.712844967842102, 1.7016191482543945, 1.6904633045196533, 1.679378628730774, 1.6683666706085205, 1.6574288606643677, 1.64656662940979, 1.6357815265655518, 1.625075101852417, 1.61444890499115, 1.6039044857025146, 1.5934436321258545, 1.583067774772644, 1.5727787017822266, 1.5625780820846558, 1.5524678230285645, 1.5424494743347168, 1.5325249433517456, 1.5226961374282837, 1.5129648447036743, 1.5033328533172607, 1.4938023090362549, 1.484375, 1.4750529527664185, 1.4658381938934326, 1.4567327499389648, 1.4477386474609375, 1.4388580322265625, 1.4300930500030518, 1.4214457273483276, 1.412918210029602, 1.4045127630233765, 1.3962316513061523, 1.3880770206451416, 1.3800511360168457, 1.3721561431884766, 1.3643944263458252, 1.3567683696746826, 1.3492799997329712, 1.341931939125061, 1.3347262144088745, 1.3276653289794922, 1.3207515478134155, 1.3139872550964355, 1.3073747158050537, 1.3009161949157715, 1.2946139574050903, 1.2884705066680908, 1.2824879884719849, 1.276668667793274, 1.2710148096084595, 1.2655285596847534, 1.2602121829986572, 1.2550678253173828, 1.250097632408142, 1.2453036308288574, 1.2406879663467407, 1.2362525463104248, 1.2319992780685425, 1.2279301881790161, 1.2240469455718994, 1.2203514575958252, 1.2168455123901367, 1.2135305404663086, 1.210408091545105, 1.2074799537658691, 1.2047473192214966, 1.2022114992141724, 1.1998738050460815, 1.1977355480194092, 1.1957974433898926, 1.1940608024597168, 1.1925263404846191, 1.1911948919296265, 1.190067172050476, 1.1891436576843262, 1.188424825668335, 1.1879111528396606, 1.1876027584075928, 1.171875, 1.1719791889190674, 1.17229163646698, 1.1728121042251587, 1.173540472984314, 1.1744762659072876, 1.1756190061569214, 1.1769680976867676, 1.1785228252410889, 1.1802823543548584, 1.1822457313537598, 1.1844121217727661, 1.1867802143096924, 1.1893489360809326, 1.1921168565750122, 1.195082664489746, 1.1982449293136597, 1.2016021013259888, 1.2051525115966797, 1.2088944911956787, 1.212826132774353, 1.216945767402649, 1.2212514877319336, 1.2257411479949951, 1.2304129600524902, 1.2352646589279175, 1.240294337272644, 1.2454997301101685, 1.2508785724639893, 1.256428837776184, 1.2621480226516724, 1.2680339813232422, 1.2740843296051025, 1.2802969217300415, 1.286669135093689, 1.293198823928833, 1.2998836040496826, 1.3067208528518677, 1.3137085437774658, 1.320844054222107, 1.328125, 1.3355491161346436, 1.343113899230957, 1.3508172035217285, 1.358656406402588, 1.3666293621063232, 1.3747336864471436, 1.3829669952392578, 1.3913270235061646, 1.3998116254806519, 1.4084184169769287, 1.4171452522277832, 1.4259898662567139, 1.4349502325057983, 1.4440239667892456, 1.4532090425491333, 1.4625033140182495, 1.4719048738479614, 1.4814114570617676, 1.4910212755203247, 1.5007323026657104, 1.510542392730713, 1.5204497575759888, 1.5304526090621948, 1.5405489206314087, 1.5507370233535767, 1.5610148906707764, 1.5713809728622437, 1.5818334817886353, 1.5923707485198975, 1.602990984916687, 1.6136926412582397, 1.624474048614502, 1.635333776473999, 1.6462700366973877, 1.657281517982483, 1.6683666706085205, 1.6795239448547363, 1.6907520294189453, 1.7020494937896729, 1.7134150266647339, 1.7248471975326538, 1.736344575881958, 1.7479060888290405, 1.7595304250717163, 1.7712162733078003, 1.782962441444397, 1.7947677373886108, 1.806631088256836, 1.8185513019561768, 1.8305273056030273, 1.8425579071044922, 1.8546420335769653, 1.86677885055542, 1.8789671659469604, 1.8912060260772705, 1.9034944772720337, 1.915831446647644, 1.9282162189483643, 1.9406476020812988, 1.953125, 1.9656473398208618, 1.978213906288147, 1.9908236265182495, 2.0034759044647217, 2.016170024871826, 2.028904914855957, 2.041679859161377, 2.0544943809509277, 2.067347526550293, 2.0802385807037354, 2.0931668281555176, 2.1061317920684814, 2.1191325187683105, 2.1321685314178467, 2.1452391147613525, 2.158343553543091, 2.1714816093444824, 2.184652090072632, 2.197854995727539, 2.2110893726348877, 2.2243547439575195, 2.2376506328582764, 2.250976324081421, 2.264331579208374, 2.2777156829833984, 2.291127920150757, 2.304568290710449, 2.3180360794067383, 2.304568290710449, 2.291127920150757, 2.2777156829833984, 2.264331579208374, 2.250976324081421, 2.2376506328582764, 2.2243547439575195, 2.2110893726348877, 2.197854995727539, 2.184652090072632, 2.1714816093444824, 2.158343553543091, 2.1452391147613525, 2.1321685314178467, 2.1191325187683105, 2.1061317920684814, 2.0931668281555176, 2.0802385807037354, 2.067347526550293, 2.0544943809509277, 2.041679859161377, 2.028904914855957, 2.016170024871826, 2.0034759044647217, 1.9908236265182495, 1.978213906288147, 1.9656473398208618, 1.953125, 1.9406476020812988, 1.9282162189483643, 1.915831446647644, 1.9034944772720337, 1.8912060260772705, 1.8789671659469604, 1.86677885055542, 1.8546420335769653, 1.8425579071044922, 1.8305273056030273, 1.8185513019561768, 1.806631088256836, 1.7947677373886108, 1.782962441444397, 1.7712162733078003, 1.7595304250717163, 1.7479060888290405, 1.736344575881958, 1.7248471975326538, 1.7134150266647339, 1.7020494937896729, 1.6907520294189453, 1.6795239448547363, 1.6683666706085205, 1.657281517982483, 1.6462700366973877, 1.635333776473999, 1.624474048614502, 1.6136926412582397, 1.602990984916687, 1.5923707485198975, 1.5818334817886353, 1.5713809728622437, 1.5610148906707764, 1.5507370233535767, 1.5405489206314087, 1.5304526090621948, 1.5204497575759888, 1.510542392730713, 1.5007323026657104, 1.4910212755203247, 1.4814114570617676, 1.4719048738479614, 1.4625033140182495, 1.4532090425491333, 1.4440239667892456, 1.4349502325057983, 1.4259898662567139, 1.4171452522277832, 1.4084184169769287, 1.3998116254806519, 1.3913270235061646, 1.3829669952392578, 1.3747336864471436, 1.3666293621063232, 1.358656406402588, 1.3508172035217285, 1.343113899230957, 1.3355491161346436, 1.328125, 1.320844054222107, 1.3137085437774658, 1.3067208528518677, 1.2998836040496826, 1.293198823928833, 1.286669135093689, 1.2802969217300415, 1.2740843296051025, 1.2680339813232422, 1.2621480226516724, 1.256428837776184, 1.2508785724639893, 1.2454997301101685, 1.240294337272644, 1.2352646589279175, 1.2304129600524902, 1.2257411479949951, 1.2212514877319336, 1.216945767402649, 1.212826132774353, 1.2088944911956787, 1.2051525115966797, 1.2016021013259888, 1.1982449293136597, 1.195082664489746, 1.1921168565750122, 1.1893489360809326, 1.1867802143096924, 1.1844121217727661, 1.1822457313537598, 1.1802823543548584, 1.1785228252410889, 1.1769680976867676, 1.1756190061569214, 1.1744762659072876, 1.173540472984314, 1.1728121042251587, 1.17229163646698, 1.1719791889190674, 1.15625, 1.156355619430542, 1.1566722393035889, 1.157199740409851, 1.157938003540039, 1.1588863134384155, 1.1600444316864014, 1.1614116430282593, 1.1629871129989624, 1.1647701263427734, 1.1667596101760864, 1.1689547300338745, 1.171354055404663, 1.1739565134048462, 1.1767606735229492, 1.1797651052474976, 1.1829683780670166, 1.186368703842163, 1.1899645328521729, 1.1937540769577026, 1.1977355480194092, 1.2019068002700806, 1.206266164779663, 1.2108114957809448, 1.2155406475067139, 1.2204515933990479, 1.2255419492721558, 1.2308096885681152, 1.2362525463104248, 1.2418681383132935, 1.2476540803909302, 1.2536081075668335, 1.2597277164459229, 1.2660107612609863, 1.2724546194076538, 1.2790567874908447, 1.2858150005340576, 1.292726755142212, 1.2997896671295166, 1.3070011138916016, 1.3143588304519653, 1.3218601942062378, 1.3295029401779175, 1.3372845649719238, 1.3452026844024658, 1.3532549142837524, 1.3614387512207031, 1.369752049446106, 1.3781923055648804, 1.386757254600525, 1.395444631576538, 1.404252052307129, 1.4131773710250854, 1.4222183227539062, 1.4313727617263794, 1.440638542175293, 1.450013518333435, 1.4594954252243042, 1.4690823554992676, 1.4787722826004028, 1.4885631799697876, 1.4984530210494995, 1.5084397792816162, 1.5185216665267944, 1.528696894645691, 1.5389633178710938, 1.5493193864822388, 1.5597631931304932, 1.5702930688858032, 1.5809072256088257, 1.5916039943695068, 1.602381706237793, 1.6132386922836304, 1.6241735219955444, 1.635184407234192, 1.6462700366973877, 1.6574288606643677, 1.6686593294143677, 1.679960012435913, 1.6913295984268188, 1.7027665376663208, 1.714269757270813, 1.7258377075195312, 1.7374690771102905, 1.7491627931594849, 1.7609174251556396, 1.7727317810058594, 1.784604787826538, 1.7965352535247803, 1.8085219860076904, 1.8205639123916626, 1.8326599597930908, 1.8448090553283691, 1.857010006904602, 1.8692620992660522, 1.8815640211105347, 1.893915057182312, 1.9063140153884888, 1.9187601804733276, 1.9312524795532227, 1.9437901973724365, 1.9563722610473633, 1.9689979553222656, 1.9816664457321167, 1.9943768978118896, 2.0071284770965576, 2.0199203491210938, 2.0327517986297607, 2.0456223487854004, 2.058530807495117, 2.071476697921753, 2.0844593048095703, 2.097477912902832, 2.11053204536438, 2.1236209869384766, 2.1367437839508057, 2.149899959564209, 2.1630892753601074, 2.1763107776641846, 2.189563751220703, 2.202847957611084, 2.21616268157959, 2.2295074462890625, 2.2428815364837646, 2.256284713745117, 2.2697160243988037, 2.283175468444824, 2.2966623306274414, 2.310176134109497, 2.2966623306274414, 2.283175468444824, 2.2697160243988037, 2.256284713745117, 2.2428815364837646, 2.2295074462890625, 2.21616268157959, 2.202847957611084, 2.189563751220703, 2.1763107776641846, 2.1630892753601074, 2.149899959564209, 2.1367437839508057, 2.1236209869384766, 2.11053204536438, 2.097477912902832, 2.0844593048095703, 2.071476697921753, 2.058530807495117, 2.0456223487854004, 2.0327517986297607, 2.0199203491210938, 2.0071284770965576, 1.9943768978118896, 1.9816664457321167, 1.9689979553222656, 1.9563722610473633, 1.9437901973724365, 1.9312524795532227, 1.9187601804733276, 1.9063140153884888, 1.893915057182312, 1.8815640211105347, 1.8692620992660522, 1.857010006904602, 1.8448090553283691, 1.8326599597930908, 1.8205639123916626, 1.8085219860076904, 1.7965352535247803, 1.784604787826538, 1.7727317810058594, 1.7609174251556396, 1.7491627931594849, 1.7374690771102905, 1.7258377075195312, 1.714269757270813, 1.7027665376663208, 1.6913295984268188, 1.679960012435913, 1.6686593294143677, 1.6574288606643677, 1.6462700366973877, 1.635184407234192, 1.6241735219955444, 1.6132386922836304, 1.602381706237793, 1.5916039943695068, 1.5809072256088257, 1.5702930688858032, 1.5597631931304932, 1.5493193864822388, 1.5389633178710938, 1.528696894645691, 1.5185216665267944, 1.5084397792816162, 1.4984530210494995, 1.4885631799697876, 1.4787722826004028, 1.4690823554992676, 1.4594954252243042, 1.450013518333435, 1.440638542175293, 1.4313727617263794, 1.4222183227539062, 1.4131773710250854, 1.404252052307129, 1.395444631576538, 1.386757254600525, 1.3781923055648804, 1.369752049446106, 1.3614387512207031, 1.3532549142837524, 1.3452026844024658, 1.3372845649719238, 1.3295029401779175, 1.3218601942062378, 1.3143588304519653, 1.3070011138916016, 1.2997896671295166, 1.292726755142212, 1.2858150005340576, 1.2790567874908447, 1.2724546194076538, 1.2660107612609863, 1.2597277164459229, 1.2536081075668335, 1.2476540803909302, 1.2418681383132935, 1.2362525463104248, 1.2308096885681152, 1.2255419492721558, 1.2204515933990479, 1.2155406475067139, 1.2108114957809448, 1.206266164779663, 1.2019068002700806, 1.1977355480194092, 1.1937540769577026, 1.1899645328521729, 1.186368703842163, 1.1829683780670166, 1.1797651052474976, 1.1767606735229492, 1.1739565134048462, 1.171354055404663, 1.1689547300338745, 1.1667596101760864, 1.1647701263427734, 1.1629871129989624, 1.1614116430282593, 1.1600444316864014, 1.1588863134384155, 1.157938003540039, 1.157199740409851, 1.1566722393035889, 1.156355619430542, 1.140625, 1.1407320499420166, 1.1410529613494873, 1.141587734222412, 1.1423360109329224, 1.1432974338531494, 1.144471287727356, 1.1458569765090942, 1.1474539041519165, 1.1492609977722168, 1.1512773036956787, 1.1535017490386963, 1.1559332609176636, 1.1585702896118164, 1.1614116430282593, 1.1644556522369385, 1.1677008867263794, 1.1711455583572388, 1.174787998199463, 1.1786264181137085, 1.1826586723327637, 1.1868830919265747, 1.1912974119186401, 1.1958996057510376, 1.2006874084472656, 1.2056589126586914, 1.2108114957809448, 1.216143012046814, 1.2216511964797974, 1.2273335456848145, 1.2331876754760742, 1.2392112016677856, 1.2454017400741577, 1.2517565488815308, 1.2582733631134033, 1.2649496793746948, 1.2717828750610352, 1.2787704467773438, 1.2859100103378296, 1.293198823928833, 1.3006346225738525, 1.308214783668518, 1.3159366846084595, 1.3237980604171753, 1.331796407699585, 1.3399291038513184, 1.3481940031051636, 1.356588363647461, 1.3651100397109985, 1.3737565279006958, 1.3825255632400513, 1.391414761543274, 1.4004219770431519, 1.4095447063446045, 1.4187809228897095, 1.4281283617019653, 1.4375848770141602, 1.447148323059082, 1.456816554069519, 1.4665875434875488, 1.4764591455459595, 1.4864294528961182, 1.496496558189392, 1.5066584348678589, 1.5169130563735962, 1.5272588729858398, 1.537693738937378, 1.5482159852981567, 1.558823823928833, 1.5695154666900635, 1.580289363861084, 1.5911437273025513, 1.6020768880844116, 1.6130872964859009, 1.6241735219955444, 1.635333776473999, 1.64656662940979, 1.6578706502914429, 1.669244408607483, 1.6806864738464355, 1.6921954154968262, 1.7037699222564697, 1.7154086828231812, 1.7271103858947754, 1.7388737201690674, 1.750697374343872, 1.762580394744873, 1.7745212316513062, 1.7865190505981445, 1.7985725402832031, 1.810680627822876, 1.8228422403335571, 1.8350563049316406, 1.8473217487335205, 1.8596376180648804, 1.8720028400421143, 1.8844164609909058, 1.8968775272369385, 1.9093852043151855, 1.9219385385513306, 1.9345365762710571, 1.9471784830093384, 1.9598634243011475, 1.972590446472168, 1.9853589534759521, 1.9981681108474731, 2.011017084121704, 2.023905038833618, 2.0368313789367676, 2.049795150756836, 2.062795877456665, 2.0758328437805176, 2.0889053344726562, 2.1020126342773438, 2.1151540279388428, 2.128329277038574, 2.1415371894836426, 2.1547775268554688, 2.1680495738983154, 2.1813528537750244, 2.1946868896484375, 2.2080507278442383, 2.2214441299438477, 2.2348666191101074, 2.2483174800872803, 2.261796236038208, 2.2753026485443115, 2.2888357639312744, 2.3023955821990967, 2.2888357639312744, 2.2753026485443115, 2.261796236038208, 2.2483174800872803, 2.2348666191101074, 2.2214441299438477, 2.2080507278442383, 2.1946868896484375, 2.1813528537750244, 2.1680495738983154, 2.1547775268554688, 2.1415371894836426, 2.128329277038574, 2.1151540279388428, 2.1020126342773438, 2.0889053344726562, 2.0758328437805176, 2.062795877456665, 2.049795150756836, 2.0368313789367676, 2.023905038833618, 2.011017084121704, 1.9981681108474731, 1.9853589534759521, 1.972590446472168, 1.9598634243011475, 1.9471784830093384, 1.9345365762710571, 1.9219385385513306, 1.9093852043151855, 1.8968775272369385, 1.8844164609909058, 1.8720028400421143, 1.8596376180648804, 1.8473217487335205, 1.8350563049316406, 1.8228422403335571, 1.810680627822876, 1.7985725402832031, 1.7865190505981445, 1.7745212316513062, 1.762580394744873, 1.750697374343872, 1.7388737201690674, 1.7271103858947754, 1.7154086828231812, 1.7037699222564697, 1.6921954154968262, 1.6806864738464355, 1.669244408607483, 1.6578706502914429, 1.64656662940979, 1.635333776473999, 1.6241735219955444, 1.6130872964859009, 1.6020768880844116, 1.5911437273025513, 1.580289363861084, 1.5695154666900635, 1.558823823928833, 1.5482159852981567, 1.537693738937378, 1.5272588729858398, 1.5169130563735962, 1.5066584348678589, 1.496496558189392, 1.4864294528961182, 1.4764591455459595, 1.4665875434875488, 1.456816554069519, 1.447148323059082, 1.4375848770141602, 1.4281283617019653, 1.4187809228897095, 1.4095447063446045, 1.4004219770431519, 1.391414761543274, 1.3825255632400513, 1.3737565279006958, 1.3651100397109985, 1.356588363647461, 1.3481940031051636, 1.3399291038513184, 1.331796407699585, 1.3237980604171753, 1.3159366846084595, 1.308214783668518, 1.3006346225738525, 1.293198823928833, 1.2859100103378296, 1.2787704467773438, 1.2717828750610352, 1.2649496793746948, 1.2582733631134033, 1.2517565488815308, 1.2454017400741577, 1.2392112016677856, 1.2331876754760742, 1.2273335456848145, 1.2216511964797974, 1.216143012046814, 1.2108114957809448, 1.2056589126586914, 1.2006874084472656, 1.1958996057510376, 1.1912974119186401, 1.1868830919265747, 1.1826586723327637, 1.1786264181137085, 1.174787998199463, 1.1711455583572388, 1.1677008867263794, 1.1644556522369385, 1.1614116430282593, 1.1585702896118164, 1.1559332609176636, 1.1535017490386963, 1.1512773036956787, 1.1492609977722168, 1.1474539041519165, 1.1458569765090942, 1.144471287727356, 1.1432974338531494, 1.1423360109329224, 1.141587734222412, 1.1410529613494873, 1.1407320499420166, 1.125, 1.1251084804534912, 1.1254339218139648, 1.1259760856628418, 1.126734733581543, 1.1277093887329102, 1.1288994550704956, 1.1303043365478516, 1.1319231986999512, 1.1337549686431885, 1.1357988119125366, 1.1380536556243896, 1.1405179500579834, 1.143190622329712, 1.1460700035095215, 1.149154782295227, 1.1524430513381958, 1.1559332609176636, 1.1596235036849976, 1.163511872291565, 1.1675963401794434, 1.171875, 1.1763455867767334, 1.1810060739517212, 1.1858540773391724, 1.190887451171875, 1.1961036920547485, 1.2015005350112915, 1.2070754766464233, 1.212826132774353, 1.21875, 1.2248445749282837, 1.231107234954834, 1.2375354766845703, 1.244126796722412, 1.2508785724639893, 1.2577881813049316, 1.2648531198501587, 1.2720707654953003, 1.2794384956359863, 1.2869538068771362, 1.2946139574050903, 1.3024166822433472, 1.3103591203689575, 1.3184388875961304, 1.3266535997390747, 1.3350006341934204, 1.343477487564087, 1.3520817756652832, 1.3608109951019287, 1.369662880897522, 1.3786351680755615, 1.3877252340316772, 1.3969309329986572, 1.40625, 1.415680170059204, 1.4252192974090576, 1.434865117073059, 1.4446154832839966, 1.4544684886932373, 1.4644218683242798, 1.4744735956192017, 1.4846216440200806, 1.4948642253875732, 1.5051993131637573, 1.515625, 1.5261393785476685, 1.536740779876709, 1.5474272966384888, 1.558197259902954, 1.5690487623214722, 1.5799803733825684, 1.5909903049468994, 1.6020768880844116, 1.6132386922836304, 1.624474048614502, 1.6357815265655518, 1.6471595764160156, 1.658606767654419, 1.6701217889785767, 1.681702971458435, 1.6933492422103882, 1.7050590515136719, 1.7168313264846802, 1.7286646366119385, 1.7405576705932617, 1.752509355545044, 1.7645184993743896, 1.7765837907791138, 1.7887042760849, 1.800878643989563, 1.8131060600280762, 1.8253852128982544, 1.8377152681350708, 1.8500950336456299, 1.8625235557556152, 1.875, 1.8875232934951782, 1.9000924825668335, 1.912706732749939, 1.9253652095794678, 1.9380669593811035, 1.9508111476898193, 1.9635969400405884, 1.9764235019683838, 1.9892901182174683, 2.0021960735321045, 2.0151405334472656, 2.028122663497925, 2.0411417484283447, 2.054197311401367, 2.067288398742676, 2.0804145336151123, 2.0935750007629395, 2.106769323348999, 2.1199963092803955, 2.133255958557129, 2.146547555923462, 2.159870147705078, 2.1732234954833984, 2.1866068840026855, 2.2000200748443604, 2.2134621143341064, 2.2269325256347656, 2.240431070327759, 2.2539570331573486, 2.267509937286377, 2.2810895442962646, 2.2946949005126953, 2.2810895442962646, 2.267509937286377, 2.2539570331573486, 2.240431070327759, 2.2269325256347656, 2.2134621143341064, 2.2000200748443604, 2.1866068840026855, 2.1732234954833984, 2.159870147705078, 2.146547555923462, 2.133255958557129, 2.1199963092803955, 2.106769323348999, 2.0935750007629395, 2.0804145336151123, 2.067288398742676, 2.054197311401367, 2.0411417484283447, 2.028122663497925, 2.0151405334472656, 2.0021960735321045, 1.9892901182174683, 1.9764235019683838, 1.9635969400405884, 1.9508111476898193, 1.9380669593811035, 1.9253652095794678, 1.912706732749939, 1.9000924825668335, 1.8875232934951782, 1.875, 1.8625235557556152, 1.8500950336456299, 1.8377152681350708, 1.8253852128982544, 1.8131060600280762, 1.800878643989563, 1.7887042760849, 1.7765837907791138, 1.7645184993743896, 1.752509355545044, 1.7405576705932617, 1.7286646366119385, 1.7168313264846802, 1.7050590515136719, 1.6933492422103882, 1.681702971458435, 1.6701217889785767, 1.658606767654419, 1.6471595764160156, 1.6357815265655518, 1.624474048614502, 1.6132386922836304, 1.6020768880844116, 1.5909903049468994, 1.5799803733825684, 1.5690487623214722, 1.558197259902954, 1.5474272966384888, 1.536740779876709, 1.5261393785476685, 1.515625, 1.5051993131637573, 1.4948642253875732, 1.4846216440200806, 1.4744735956192017, 1.4644218683242798, 1.4544684886932373, 1.4446154832839966, 1.434865117073059, 1.4252192974090576, 1.415680170059204, 1.40625, 1.3969309329986572, 1.3877252340316772, 1.3786351680755615, 1.369662880897522, 1.3608109951019287, 1.3520817756652832, 1.343477487564087, 1.3350006341934204, 1.3266535997390747, 1.3184388875961304, 1.3103591203689575, 1.3024166822433472, 1.2946139574050903, 1.2869538068771362, 1.2794384956359863, 1.2720707654953003, 1.2648531198501587, 1.2577881813049316, 1.2508785724639893, 1.244126796722412, 1.2375354766845703, 1.231107234954834, 1.2248445749282837, 1.21875, 1.212826132774353, 1.2070754766464233, 1.2015005350112915, 1.1961036920547485, 1.190887451171875, 1.1858540773391724, 1.1810060739517212, 1.1763455867767334, 1.171875, 1.1675963401794434, 1.163511872291565, 1.1596235036849976, 1.1559332609176636, 1.1524430513381958, 1.149154782295227, 1.1460700035095215, 1.143190622329712, 1.1405179500579834, 1.1380536556243896, 1.1357988119125366, 1.1337549686431885, 1.1319231986999512, 1.1303043365478516, 1.1288994550704956, 1.1277093887329102, 1.126734733581543, 1.1259760856628418, 1.1254339218139648, 1.1251084804534912, 1.109375, 1.1094850301742554, 1.109815001487732, 1.1103649139404297, 1.1111341714859009, 1.1121225357055664, 1.1133291721343994, 1.1147537231445312, 1.1163949966430664, 1.1182522773742676, 1.1203244924545288, 1.122610330581665, 1.1251084804534912, 1.1278176307678223, 1.130736231803894, 1.1338626146316528, 1.1371952295303345, 1.1407320499420166, 1.144471287727356, 1.1484109163284302, 1.1525490283966064, 1.1568832397460938, 1.1614116430282593, 1.1661317348480225, 1.1710413694381714, 1.1761380434036255, 1.1814194917678833, 1.1868830919265747, 1.1925263404846191, 1.1983468532562256, 1.2043418884277344, 1.210508942604065, 1.2168455123901367, 1.2233487367630005, 1.2300159931182861, 1.2368448972702026, 1.2438324689865112, 1.2509762048721313, 1.2582733631134033, 1.2657214403152466, 1.2733176946640015, 1.2810593843460083, 1.288944125175476, 1.2969691753387451, 1.3051317930221558, 1.3134297132492065, 1.3218601942062378, 1.3304208517074585, 1.339108943939209, 1.3479223251342773, 1.356858253479004, 1.3659145832061768, 1.3750888109207153, 1.3843785524368286, 1.3937815427780151, 1.4032955169677734, 1.412918210029602, 1.422647476196289, 1.432481050491333, 1.4424169063568115, 1.4524527788162231, 1.462586760520935, 1.472816824913025, 1.4831409454345703, 1.493557095527649, 1.5040634870529175, 1.5146582126617432, 1.5253393650054932, 1.5361051559448242, 1.5469539165496826, 1.557883858680725, 1.5688931941986084, 1.5799803733825684, 1.5911437273025513, 1.602381706237793, 1.6136926412582397, 1.625075101852417, 1.63652765750885, 1.6480486392974854, 1.6596368551254272, 1.6712907552719116, 1.6830090284347534, 1.6947903633117676, 1.706633448600769, 1.7185369729995728, 1.7304996252059937, 1.7425203323364258, 1.754597783088684, 1.7667309045791626, 1.7789183855056763, 1.7911593914031982, 1.8034526109695435, 1.8157970905303955, 1.8281917572021484, 1.8406356573104858, 1.8531275987625122, 1.8656668663024902, 1.878252387046814, 1.890883207321167, 1.9035584926605225, 1.9162774085998535, 1.9290390014648438, 1.9418424367904663, 1.9546868801116943, 1.9675716161727905, 1.9804956912994385, 1.9934585094451904, 2.0064592361450195, 2.0194971561431885, 2.032571792602539, 2.045681953430176, 2.0588271617889404, 2.072006940841675, 2.0852205753326416, 2.0984671115875244, 2.111746311187744, 2.1250574588775635, 2.138399839401245, 2.151772975921631, 2.1651761531829834, 2.1786091327667236, 2.1920711994171143, 2.205561637878418, 2.2190799713134766, 2.232625961303711, 2.246199131011963, 2.259798526763916, 2.2734241485595703, 2.2870752811431885, 2.2734241485595703, 2.259798526763916, 2.246199131011963, 2.232625961303711, 2.2190799713134766, 2.205561637878418, 2.1920711994171143, 2.1786091327667236, 2.1651761531829834, 2.151772975921631, 2.138399839401245, 2.1250574588775635, 2.111746311187744, 2.0984671115875244, 2.0852205753326416, 2.072006940841675, 2.0588271617889404, 2.045681953430176, 2.032571792602539, 2.0194971561431885, 2.0064592361450195, 1.9934585094451904, 1.9804956912994385, 1.9675716161727905, 1.9546868801116943, 1.9418424367904663, 1.9290390014648438, 1.9162774085998535, 1.9035584926605225, 1.890883207321167, 1.878252387046814, 1.8656668663024902, 1.8531275987625122, 1.8406356573104858, 1.8281917572021484, 1.8157970905303955, 1.8034526109695435, 1.7911593914031982, 1.7789183855056763, 1.7667309045791626, 1.754597783088684, 1.7425203323364258, 1.7304996252059937, 1.7185369729995728, 1.706633448600769, 1.6947903633117676, 1.6830090284347534, 1.6712907552719116, 1.6596368551254272, 1.6480486392974854, 1.63652765750885, 1.625075101852417, 1.6136926412582397, 1.602381706237793, 1.5911437273025513, 1.5799803733825684, 1.5688931941986084, 1.557883858680725, 1.5469539165496826, 1.5361051559448242, 1.5253393650054932, 1.5146582126617432, 1.5040634870529175, 1.493557095527649, 1.4831409454345703, 1.472816824913025, 1.462586760520935, 1.4524527788162231, 1.4424169063568115, 1.432481050491333, 1.422647476196289, 1.412918210029602, 1.4032955169677734, 1.3937815427780151, 1.3843785524368286, 1.3750888109207153, 1.3659145832061768, 1.356858253479004, 1.3479223251342773, 1.339108943939209, 1.3304208517074585, 1.3218601942062378, 1.3134297132492065, 1.3051317930221558, 1.2969691753387451, 1.288944125175476, 1.2810593843460083, 1.2733176946640015, 1.2657214403152466, 1.2582733631134033, 1.2509762048721313, 1.2438324689865112, 1.2368448972702026, 1.2300159931182861, 1.2233487367630005, 1.2168455123901367, 1.210508942604065, 1.2043418884277344, 1.1983468532562256, 1.1925263404846191, 1.1868830919265747, 1.1814194917678833, 1.1761380434036255, 1.1710413694381714, 1.1661317348480225, 1.1614116430282593, 1.1568832397460938, 1.1525490283966064, 1.1484109163284302, 1.144471287727356, 1.1407320499420166, 1.1371952295303345, 1.1338626146316528, 1.130736231803894, 1.1278176307678223, 1.1251084804534912, 1.122610330581665, 1.1203244924545288, 1.1182522773742676, 1.1163949966430664, 1.1147537231445312, 1.1133291721343994, 1.1121225357055664, 1.1111341714859009, 1.1103649139404297, 1.109815001487732, 1.1094850301742554, 1.09375, 1.0938615798950195, 1.0941963195800781, 1.0947539806365967, 1.0955342054367065, 1.096536636352539, 1.097760558128357, 1.0992051362991333, 1.1008696556091309, 1.1027531623840332, 1.1048543453216553, 1.1071721315383911, 1.1097050905227661, 1.1124516725540161, 1.115410566329956, 1.1185797452926636, 1.1219576597213745, 1.125542402267456, 1.1293319463729858, 1.1333242654800415, 1.1375172138214111, 1.1419085264205933, 1.146496057510376, 1.1512773036956787, 1.15625, 1.1614116430282593, 1.1667596101760864, 1.17229163646698, 1.1780048608779907, 1.1838966608047485, 1.1899645328521729, 1.196205735206604, 1.2026176452636719, 1.2091972827911377, 1.2159422636032104, 1.222849726676941, 1.2299168109893799, 1.2371408939361572, 1.2445192337036133, 1.2520490884780884, 1.2597277164459229, 1.2675524950027466, 1.2755206823349, 1.2836296558380127, 1.2918766736984253, 1.3002591133117676, 1.308774471282959, 1.3174201250076294, 1.3261934518814087, 1.3350920677185059, 1.3441133499145508, 1.3532549142837524, 1.3625143766403198, 1.3718892335891724, 1.3813772201538086, 1.390976071357727, 1.4006834030151367, 1.4104970693588257, 1.4204148054122925, 1.4304343461990356, 1.4405537843704224, 1.4507709741592407, 1.4610837697982788, 1.4714901447296143, 1.4819881916046143, 1.492576003074646, 1.5032516717910767, 1.5140132904052734, 1.524859070777893, 1.5357872247695923, 1.5467960834503174, 1.557883858680725, 1.5690487623214722, 1.580289363861084, 1.5916039943695068, 1.602990984916687, 1.61444890499115, 1.625976324081421, 1.6375715732574463, 1.649233341217041, 1.66096031665802, 1.6727509498596191, 1.6846040487289429, 1.6965181827545166, 1.7084921598434448, 1.7205246686935425, 1.732614517211914, 1.744760513305664, 1.7569615840911865, 1.769216537475586, 1.7815240621566772, 1.7938833236694336, 1.806293249130249, 1.818752646446228, 1.8312606811523438, 1.8438161611557007, 1.8564183712005615, 1.8690661191940308, 1.881758689880371, 1.8944950103759766, 1.9072743654251099, 1.920095682144165, 1.9329583644866943, 1.9458614587783813, 1.9588042497634888, 1.9717859029769897, 1.9848055839538574, 1.9978625774383545, 2.010956287384033, 2.0240859985351562, 2.0372507572174072, 2.050450086593628, 2.063683271408081, 2.0769498348236084, 2.0902488231658936, 2.1035799980163574, 2.1169424057006836, 2.130335569381714, 2.14375901222229, 2.157212257385254, 2.170694351196289, 2.1842050552368164, 2.1977438926696777, 2.2113101482391357, 2.2249033451080322, 2.238523244857788, 2.252169132232666, 2.265840530395508, 2.2795369625091553, 2.265840530395508, 2.252169132232666, 2.238523244857788, 2.2249033451080322, 2.2113101482391357, 2.1977438926696777, 2.1842050552368164, 2.170694351196289, 2.157212257385254, 2.14375901222229, 2.130335569381714, 2.1169424057006836, 2.1035799980163574, 2.0902488231658936, 2.0769498348236084, 2.063683271408081, 2.050450086593628, 2.0372507572174072, 2.0240859985351562, 2.010956287384033, 1.9978625774383545, 1.9848055839538574, 1.9717859029769897, 1.9588042497634888, 1.9458614587783813, 1.9329583644866943, 1.920095682144165, 1.9072743654251099, 1.8944950103759766, 1.881758689880371, 1.8690661191940308, 1.8564183712005615, 1.8438161611557007, 1.8312606811523438, 1.818752646446228, 1.806293249130249, 1.7938833236694336, 1.7815240621566772, 1.769216537475586, 1.7569615840911865, 1.744760513305664, 1.732614517211914, 1.7205246686935425, 1.7084921598434448, 1.6965181827545166, 1.6846040487289429, 1.6727509498596191, 1.66096031665802, 1.649233341217041, 1.6375715732574463, 1.625976324081421, 1.61444890499115, 1.602990984916687, 1.5916039943695068, 1.580289363861084, 1.5690487623214722, 1.557883858680725, 1.5467960834503174, 1.5357872247695923, 1.524859070777893, 1.5140132904052734, 1.5032516717910767, 1.492576003074646, 1.4819881916046143, 1.4714901447296143, 1.4610837697982788, 1.4507709741592407, 1.4405537843704224, 1.4304343461990356, 1.4204148054122925, 1.4104970693588257, 1.4006834030151367, 1.390976071357727, 1.3813772201538086, 1.3718892335891724, 1.3625143766403198, 1.3532549142837524, 1.3441133499145508, 1.3350920677185059, 1.3261934518814087, 1.3174201250076294, 1.308774471282959, 1.3002591133117676, 1.2918766736984253, 1.2836296558380127, 1.2755206823349, 1.2675524950027466, 1.2597277164459229, 1.2520490884780884, 1.2445192337036133, 1.2371408939361572, 1.2299168109893799, 1.222849726676941, 1.2159422636032104, 1.2091972827911377, 1.2026176452636719, 1.196205735206604, 1.1899645328521729, 1.1838966608047485, 1.1780048608779907, 1.17229163646698, 1.1667596101760864, 1.1614116430282593, 1.15625, 1.1512773036956787, 1.146496057510376, 1.1419085264205933, 1.1375172138214111, 1.1333242654800415, 1.1293319463729858, 1.125542402267456, 1.1219576597213745, 1.1185797452926636, 1.115410566329956, 1.1124516725540161, 1.1097050905227661, 1.1071721315383911, 1.1048543453216553, 1.1027531623840332, 1.1008696556091309, 1.0992051362991333, 1.097760558128357, 1.096536636352539, 1.0955342054367065, 1.0947539806365967, 1.0941963195800781, 1.0938615798950195, 1.078125, 1.0782382488250732, 1.0785777568817139, 1.0791435241699219, 1.079935073852539, 1.0809519290924072, 1.082193374633789, 1.0836588144302368, 1.0853471755981445, 1.0872575044631958, 1.0893886089324951, 1.0917391777038574, 1.0943078994750977, 1.097093105316162, 1.1000932455062866, 1.1033064126968384, 1.1067310571670532, 1.1103649139404297, 1.114206075668335, 1.1182522773742676, 1.1225016117095947, 1.1269514560699463, 1.1315995454788208, 1.1364434957504272, 1.141480803489685, 1.1467089653015137, 1.1521252393722534, 1.1577271223068237, 1.163511872291565, 1.1694767475128174, 1.1756190061569214, 1.1819360256195068, 1.188424825668335, 1.195082664489746, 1.2019068002700806, 1.2088944911956787, 1.2160426378250122, 1.2233487367630005, 1.2308096885681152, 1.2384229898452759, 1.246185541152954, 1.2540948390960693, 1.2621480226516724, 1.270342230796814, 1.2786749601364136, 1.2871434688568115, 1.2957450151443481, 1.3044769763946533, 1.313336730003357, 1.322321891784668, 1.3314297199249268, 1.3406578302383423, 1.3500036001205444, 1.3594647645950317, 1.3690389394760132, 1.3787236213684082, 1.3885166645050049, 1.3984156847000122, 1.4084184169769287, 1.418522834777832, 1.4287266731262207, 1.4390276670455933, 1.4494240283966064, 1.4599136114120483, 1.470494270324707, 1.4811643362045288, 1.4919216632843018, 1.502764344215393, 1.5136908292770386, 1.5246989727020264, 1.5357872247695923, 1.5469539165496826, 1.558197259902954, 1.5695154666900635, 1.5809072256088257, 1.5923707485198975, 1.6039044857025146, 1.6155071258544922, 1.6271770000457764, 1.6389127969741821, 1.6507130861282349, 1.6625763177871704, 1.6745014190673828, 1.6864869594573975, 1.6985316276550293, 1.7106342315673828, 1.7227935791015625, 1.7350083589553833, 1.7472774982452393, 1.7595998048782349, 1.7719742059707642, 1.7843996286392212, 1.796875, 1.8093992471694946, 1.8219715356826782, 1.8345905542373657, 1.8472557067871094, 1.8599658012390137, 1.8727200031280518, 1.8855173587799072, 1.8983571529388428, 1.9112383127212524, 1.9241602420806885, 1.9371219873428345, 1.9501227140426636, 1.9631617069244385, 1.9762382507324219, 1.989351511001587, 2.0025007724761963, 2.015685558319092, 2.028904914855957, 2.0421581268310547, 2.0554449558258057, 2.0687642097473145, 2.082115411758423, 2.0954983234405518, 2.1089119911193848, 2.1223559379577637, 2.135829448699951, 2.149332284927368, 2.1628634929656982, 2.1764228343963623, 2.190009832382202, 2.2036235332489014, 2.21726393699646, 2.2309305667877197, 2.2446224689483643, 2.2583396434783936, 2.2720813751220703, 2.2583396434783936, 2.2446224689483643, 2.2309305667877197, 2.21726393699646, 2.2036235332489014, 2.190009832382202, 2.1764228343963623, 2.1628634929656982, 2.149332284927368, 2.135829448699951, 2.1223559379577637, 2.1089119911193848, 2.0954983234405518, 2.082115411758423, 2.0687642097473145, 2.0554449558258057, 2.0421581268310547, 2.028904914855957, 2.015685558319092, 2.0025007724761963, 1.989351511001587, 1.9762382507324219, 1.9631617069244385, 1.9501227140426636, 1.9371219873428345, 1.9241602420806885, 1.9112383127212524, 1.8983571529388428, 1.8855173587799072, 1.8727200031280518, 1.8599658012390137, 1.8472557067871094, 1.8345905542373657, 1.8219715356826782, 1.8093992471694946, 1.796875, 1.7843996286392212, 1.7719742059707642, 1.7595998048782349, 1.7472774982452393, 1.7350083589553833, 1.7227935791015625, 1.7106342315673828, 1.6985316276550293, 1.6864869594573975, 1.6745014190673828, 1.6625763177871704, 1.6507130861282349, 1.6389127969741821, 1.6271770000457764, 1.6155071258544922, 1.6039044857025146, 1.5923707485198975, 1.5809072256088257, 1.5695154666900635, 1.558197259902954, 1.5469539165496826, 1.5357872247695923, 1.5246989727020264, 1.5136908292770386, 1.502764344215393, 1.4919216632843018, 1.4811643362045288, 1.470494270324707, 1.4599136114120483, 1.4494240283966064, 1.4390276670455933, 1.4287266731262207, 1.418522834777832, 1.4084184169769287, 1.3984156847000122, 1.3885166645050049, 1.3787236213684082, 1.3690389394760132, 1.3594647645950317, 1.3500036001205444, 1.3406578302383423, 1.3314297199249268, 1.322321891784668, 1.313336730003357, 1.3044769763946533, 1.2957450151443481, 1.2871434688568115, 1.2786749601364136, 1.270342230796814, 1.2621480226516724, 1.2540948390960693, 1.246185541152954, 1.2384229898452759, 1.2308096885681152, 1.2233487367630005, 1.2160426378250122, 1.2088944911956787, 1.2019068002700806, 1.195082664489746, 1.188424825668335, 1.1819360256195068, 1.1756190061569214, 1.1694767475128174, 1.163511872291565, 1.1577271223068237, 1.1521252393722534, 1.1467089653015137, 1.141480803489685, 1.1364434957504272, 1.1315995454788208, 1.1269514560699463, 1.1225016117095947, 1.1182522773742676, 1.114206075668335, 1.1103649139404297, 1.1067310571670532, 1.1033064126968384, 1.1000932455062866, 1.097093105316162, 1.0943078994750977, 1.0917391777038574, 1.0893886089324951, 1.0872575044631958, 1.0853471755981445, 1.0836588144302368, 1.082193374633789, 1.0809519290924072, 1.079935073852539, 1.0791435241699219, 1.0785777568817139, 1.0782382488250732, 1.0625, 1.062614917755127, 1.0629594326019287, 1.0635335445404053, 1.0643366575241089, 1.065368413925171, 1.0666279792785645, 1.0681147575378418, 1.069827675819397, 1.071765661239624, 1.0739275217056274, 1.0763118267059326, 1.0789172649383545, 1.0817421674728394, 1.0847846269607544, 1.0880430936813354, 1.0915155410766602, 1.0951999425888062, 1.099094033241272, 1.1031957864761353, 1.107502818107605, 1.1120127439498901, 1.1167230606079102, 1.1216312646865845, 1.126734733581543, 1.132030963897705, 1.1375172138214111, 1.143190622329712, 1.1490485668182373, 1.1550880670547485, 1.1613065004348755, 1.1677008867263794, 1.174268364906311, 1.1810060739517212, 1.1879111528396606, 1.194980502128601, 1.2022114992141724, 1.2096010446548462, 1.217146396636963, 1.2248445749282837, 1.2326927185058594, 1.2406879663467407, 1.248827576637268, 1.2571086883544922, 1.2655285596847534, 1.2740843296051025, 1.282773494720459, 1.2915931940078735, 1.300540804862976, 1.309613585472107, 1.3188092708587646, 1.328125, 1.337558388710022, 1.3471070528030396, 1.3567683696746826, 1.3665400743484497, 1.3764196634292603, 1.386405110359192, 1.396493911743164, 1.4066839218139648, 1.4169729948043823, 1.4273589849472046, 1.4378396272659302, 1.4484130144119263, 1.45907723903656, 1.46983003616333, 1.4806697368621826, 1.4915943145751953, 1.5026018619537354, 1.5136908292770386, 1.524859070777893, 1.5361051559448242, 1.5474272966384888, 1.558823823928833, 1.5702930688858032, 1.5818334817886353, 1.5934436321258545, 1.6051218509674072, 1.6168667078018188, 1.6286767721176147, 1.6405506134033203, 1.6524869203567505, 1.6644842624664307, 1.6765413284301758, 1.6886570453643799, 1.7008298635482788, 1.7130587100982666, 1.7253425121307373, 1.7376798391342163, 1.7500697374343872, 1.762511134147644, 1.7750027179718018, 1.7875436544418335, 1.8001328706741333, 1.8127694129943848, 1.8254520893096924, 1.8381801843643188, 1.8509525060653687, 1.863768458366394, 1.8766268491744995, 1.8895270824432373, 1.9024680852890015, 1.9154491424560547, 1.9284694194793701, 1.941528081893921, 1.9546244144439697, 1.9677577018737793, 1.9809271097183228, 1.9941320419311523, 2.007371664047241, 2.0206453800201416, 2.033952474594116, 2.047292470932007, 2.060664415359497, 2.0740678310394287, 2.0875022411346436, 2.1009669303894043, 2.1144614219665527, 2.1279850006103516, 2.1415371894836426, 2.1551175117492676, 2.1687252521514893, 2.1823599338531494, 2.196021318435669, 2.2097086906433105, 2.223421573638916, 2.237159490585327, 2.250922203063965, 2.2647087574005127, 2.250922203063965, 2.237159490585327, 2.223421573638916, 2.2097086906433105, 2.196021318435669, 2.1823599338531494, 2.1687252521514893, 2.1551175117492676, 2.1415371894836426, 2.1279850006103516, 2.1144614219665527, 2.1009669303894043, 2.0875022411346436, 2.0740678310394287, 2.060664415359497, 2.047292470932007, 2.033952474594116, 2.0206453800201416, 2.007371664047241, 1.9941320419311523, 1.9809271097183228, 1.9677577018737793, 1.9546244144439697, 1.941528081893921, 1.9284694194793701, 1.9154491424560547, 1.9024680852890015, 1.8895270824432373, 1.8766268491744995, 1.863768458366394, 1.8509525060653687, 1.8381801843643188, 1.8254520893096924, 1.8127694129943848, 1.8001328706741333, 1.7875436544418335, 1.7750027179718018, 1.762511134147644, 1.7500697374343872, 1.7376798391342163, 1.7253425121307373, 1.7130587100982666, 1.7008298635482788, 1.6886570453643799, 1.6765413284301758, 1.6644842624664307, 1.6524869203567505, 1.6405506134033203, 1.6286767721176147, 1.6168667078018188, 1.6051218509674072, 1.5934436321258545, 1.5818334817886353, 1.5702930688858032, 1.558823823928833, 1.5474272966384888, 1.5361051559448242, 1.524859070777893, 1.5136908292770386, 1.5026018619537354, 1.4915943145751953, 1.4806697368621826, 1.46983003616333, 1.45907723903656, 1.4484130144119263, 1.4378396272659302, 1.4273589849472046, 1.4169729948043823, 1.4066839218139648, 1.396493911743164, 1.386405110359192, 1.3764196634292603, 1.3665400743484497, 1.3567683696746826, 1.3471070528030396, 1.337558388710022, 1.328125, 1.3188092708587646, 1.309613585472107, 1.300540804862976, 1.2915931940078735, 1.282773494720459, 1.2740843296051025, 1.2655285596847534, 1.2571086883544922, 1.248827576637268, 1.2406879663467407, 1.2326927185058594, 1.2248445749282837, 1.217146396636963, 1.2096010446548462, 1.2022114992141724, 1.194980502128601, 1.1879111528396606, 1.1810060739517212, 1.174268364906311, 1.1677008867263794, 1.1613065004348755, 1.1550880670547485, 1.1490485668182373, 1.143190622329712, 1.1375172138214111, 1.132030963897705, 1.126734733581543, 1.1216312646865845, 1.1167230606079102, 1.1120127439498901, 1.107502818107605, 1.1031957864761353, 1.099094033241272, 1.0951999425888062, 1.0915155410766602, 1.0880430936813354, 1.0847846269607544, 1.0817421674728394, 1.0789172649383545, 1.0763118267059326, 1.0739275217056274, 1.071765661239624, 1.069827675819397, 1.0681147575378418, 1.0666279792785645, 1.065368413925171, 1.0643366575241089, 1.0635335445404053, 1.0629594326019287, 1.062614917755127, 1.046875, 1.0469915866851807, 1.0473413467407227, 1.0479239225387573, 1.048738956451416, 1.04978609085083, 1.051064372062683, 1.0525730848312378, 1.0543112754821777, 1.0562777519226074, 1.0584712028503418, 1.0608903169631958, 1.0635335445404053, 1.066399097442627, 1.0694853067398071, 1.072790265083313, 1.0763118267059326, 1.0800480842590332, 1.0839966535568237, 1.0881553888320923, 1.0925216674804688, 1.097093105316162, 1.1018671989440918, 1.1068413257598877, 1.1120127439498901, 1.1173787117004395, 1.122936487197876, 1.1286832094192505, 1.1346160173416138, 1.1407320499420166, 1.1470282077789307, 1.1535017490386963, 1.1601496934890747, 1.1669689416885376, 1.1739565134048462, 1.1811094284057617, 1.188424825668335, 1.1958996057510376, 1.2035307884216309, 1.2113155126571655, 1.2192506790161133, 1.2273335456848145, 1.2355611324310303, 1.2439305782318115, 1.252439022064209, 1.261083722114563, 1.2698616981506348, 1.2787704467773438, 1.2878071069717407, 1.2969691753387451, 1.3062537908554077, 1.315658450126648, 1.3251805305480957, 1.33481764793396, 1.3445672988891602, 1.3544270992279053, 1.3643944263458252, 1.3744672536849976, 1.3846430778503418, 1.3949196338653564, 1.4052947759628296, 1.4157663583755493, 1.4263323545455933, 1.4369903802871704, 1.4477386474609375, 1.4585751295089722, 1.469497799873352, 1.4805048704147339, 1.4915943145751953, 1.502764344215393, 1.5140132904052734, 1.5253393650054932, 1.536740779876709, 1.5482159852981567, 1.5597631931304932, 1.5713809728622437, 1.583067774772644, 1.5948219299316406, 1.6066421270370483, 1.618526816368103, 1.63047456741333, 1.6424840688705444, 1.654554009437561, 1.6666829586029053, 1.6788697242736816, 1.691112995147705, 1.7034116983413696, 1.7157644033432007, 1.7281701564788818, 1.7406277656555176, 1.753136157989502, 1.7656941413879395, 1.7783007621765137, 1.7909549474716187, 1.803655743598938, 1.8164020776748657, 1.829193115234375, 1.8420277833938599, 1.854905366897583, 1.8678247928619385, 1.880785346031189, 1.893786072731018, 1.9068262577056885, 1.9199049472808838, 1.9330215454101562, 1.9461750984191895, 1.9593650102615356, 1.972590446472168, 1.9858508110046387, 1.999145269393921, 2.0124733448028564, 2.025834083557129, 2.03922700881958, 2.0526516437530518, 2.0661072731018066, 2.0795929431915283, 2.093108654022217, 2.1066534519195557, 2.1202266216278076, 2.1338281631469727, 2.1474571228027344, 2.1611132621765137, 2.174795627593994, 2.188504219055176, 2.2022383213043213, 2.2159974575042725, 2.229781150817871, 2.243588924407959, 2.257420539855957, 2.243588924407959, 2.229781150817871, 2.2159974575042725, 2.2022383213043213, 2.188504219055176, 2.174795627593994, 2.1611132621765137, 2.1474571228027344, 2.1338281631469727, 2.1202266216278076, 2.1066534519195557, 2.093108654022217, 2.0795929431915283, 2.0661072731018066, 2.0526516437530518, 2.03922700881958, 2.025834083557129, 2.0124733448028564, 1.999145269393921, 1.9858508110046387, 1.972590446472168, 1.9593650102615356, 1.9461750984191895, 1.9330215454101562, 1.9199049472808838, 1.9068262577056885, 1.893786072731018, 1.880785346031189, 1.8678247928619385, 1.854905366897583, 1.8420277833938599, 1.829193115234375, 1.8164020776748657, 1.803655743598938, 1.7909549474716187, 1.7783007621765137, 1.7656941413879395, 1.753136157989502, 1.7406277656555176, 1.7281701564788818, 1.7157644033432007, 1.7034116983413696, 1.691112995147705, 1.6788697242736816, 1.6666829586029053, 1.654554009437561, 1.6424840688705444, 1.63047456741333, 1.618526816368103, 1.6066421270370483, 1.5948219299316406, 1.583067774772644, 1.5713809728622437, 1.5597631931304932, 1.5482159852981567, 1.536740779876709, 1.5253393650054932, 1.5140132904052734, 1.502764344215393, 1.4915943145751953, 1.4805048704147339, 1.469497799873352, 1.4585751295089722, 1.4477386474609375, 1.4369903802871704, 1.4263323545455933, 1.4157663583755493, 1.4052947759628296, 1.3949196338653564, 1.3846430778503418, 1.3744672536849976, 1.3643944263458252, 1.3544270992279053, 1.3445672988891602, 1.33481764793396, 1.3251805305480957, 1.315658450126648, 1.3062537908554077, 1.2969691753387451, 1.2878071069717407, 1.2787704467773438, 1.2698616981506348, 1.261083722114563, 1.252439022064209, 1.2439305782318115, 1.2355611324310303, 1.2273335456848145, 1.2192506790161133, 1.2113155126571655, 1.2035307884216309, 1.1958996057510376, 1.188424825668335, 1.1811094284057617, 1.1739565134048462, 1.1669689416885376, 1.1601496934890747, 1.1535017490386963, 1.1470282077789307, 1.1407320499420166, 1.1346160173416138, 1.1286832094192505, 1.122936487197876, 1.1173787117004395, 1.1120127439498901, 1.1068413257598877, 1.1018671989440918, 1.097093105316162, 1.0925216674804688, 1.0881553888320923, 1.0839966535568237, 1.0800480842590332, 1.0763118267059326, 1.072790265083313, 1.0694853067398071, 1.066399097442627, 1.0635335445404053, 1.0608903169631958, 1.0584712028503418, 1.0562777519226074, 1.0543112754821777, 1.0525730848312378, 1.051064372062683, 1.04978609085083, 1.048738956451416, 1.0479239225387573, 1.0473413467407227, 1.0469915866851807, 1.03125, 1.031368374824524, 1.0317233800888062, 1.0323147773742676, 1.0331422090530396, 1.0342050790786743, 1.035502552986145, 1.0370339155197144, 1.0387980937957764, 1.0407938957214355, 1.0430200099945068, 1.0454747676849365, 1.0481568574905396, 1.051064372062683, 1.054195523262024, 1.05754816532135, 1.0611203908920288, 1.0649099349975586, 1.0689144134521484, 1.0731315612792969, 1.0775587558746338, 1.082193374633789, 1.0870329141616821, 1.0920746326446533, 1.0973156690597534, 1.1027531623840332, 1.1083842515945435, 1.114206075668335, 1.1202155351638794, 1.126409649848938, 1.1327855587005615, 1.1393400430679321, 1.1460700035095215, 1.1529725790023804, 1.1600444316864014, 1.1672827005386353, 1.1746841669082642, 1.1822457313537598, 1.1899645328521729, 1.1978373527526855, 1.2058613300323486, 1.2140333652496338, 1.2223504781723022, 1.2308096885681152, 1.239408254623413, 1.248143196105957, 1.2570115327835083, 1.2660107612609863, 1.2751379013061523, 1.2843902111053467, 1.2937650680541992, 1.3032598495483398, 1.3128719329833984, 1.3225988149642944, 1.3324378728866577, 1.3423867225646973, 1.3524428606033325, 1.3626039028167725, 1.3728677034378052, 1.38323175907135, 1.3936939239501953, 1.404252052307129, 1.4149038791656494, 1.425647497177124, 1.4364806413650513, 1.4474014043807983, 1.4584077596664429, 1.469497799873352, 1.4806697368621826, 1.4919216632843018, 1.5032516717910767, 1.5146582126617432, 1.5261393785476685, 1.537693738937378, 1.5493193864822388, 1.5610148906707764, 1.5727787017822266, 1.5846091508865356, 1.5965049266815186, 1.6084645986557007, 1.6204864978790283, 1.6325695514678955, 1.644712209701538, 1.656913161277771, 1.6691713333129883, 1.6814851760864258, 1.693853735923767, 1.7062757015228271, 1.71875, 1.7312754392623901, 1.743850827217102, 1.7564752101898193, 1.769147515296936, 1.7818666696548462, 1.7946317195892334, 1.8074417114257812, 1.8202956914901733, 1.8331927061080933, 1.8461319208145142, 1.8591123819351196, 1.8721332550048828, 1.8851935863494873, 1.8982927799224854, 1.91143000125885, 1.9246042966842651, 1.9378149509429932, 1.9510613679885864, 1.9643428325653076, 1.9776583909988403, 1.9910075664520264, 2.004389762878418, 2.0178041458129883, 2.03125, 2.044726848602295, 2.058234214782715, 2.0717713832855225, 2.0853376388549805, 2.0989325046539307, 2.112555503845215, 2.1262059211730957, 2.139883518218994, 2.153587579727173, 2.1673176288604736, 2.1810731887817383, 2.1948537826538086, 2.2086589336395264, 2.2224881649017334, 2.2363409996032715, 2.2502169609069824, 2.2363409996032715, 2.2224881649017334, 2.2086589336395264, 2.1948537826538086, 2.1810731887817383, 2.1673176288604736, 2.153587579727173, 2.139883518218994, 2.1262059211730957, 2.112555503845215, 2.0989325046539307, 2.0853376388549805, 2.0717713832855225, 2.058234214782715, 2.044726848602295, 2.03125, 2.0178041458129883, 2.004389762878418, 1.9910075664520264, 1.9776583909988403, 1.9643428325653076, 1.9510613679885864, 1.9378149509429932, 1.9246042966842651, 1.91143000125885, 1.8982927799224854, 1.8851935863494873, 1.8721332550048828, 1.8591123819351196, 1.8461319208145142, 1.8331927061080933, 1.8202956914901733, 1.8074417114257812, 1.7946317195892334, 1.7818666696548462, 1.769147515296936, 1.7564752101898193, 1.743850827217102, 1.7312754392623901, 1.71875, 1.7062757015228271, 1.693853735923767, 1.6814851760864258, 1.6691713333129883, 1.656913161277771, 1.644712209701538, 1.6325695514678955, 1.6204864978790283, 1.6084645986557007, 1.5965049266815186, 1.5846091508865356, 1.5727787017822266, 1.5610148906707764, 1.5493193864822388, 1.537693738937378, 1.5261393785476685, 1.5146582126617432, 1.5032516717910767, 1.4919216632843018, 1.4806697368621826, 1.469497799873352, 1.4584077596664429, 1.4474014043807983, 1.4364806413650513, 1.425647497177124, 1.4149038791656494, 1.404252052307129, 1.3936939239501953, 1.38323175907135, 1.3728677034378052, 1.3626039028167725, 1.3524428606033325, 1.3423867225646973, 1.3324378728866577, 1.3225988149642944, 1.3128719329833984, 1.3032598495483398, 1.2937650680541992, 1.2843902111053467, 1.2751379013061523, 1.2660107612609863, 1.2570115327835083, 1.248143196105957, 1.239408254623413, 1.2308096885681152, 1.2223504781723022, 1.2140333652496338, 1.2058613300323486, 1.1978373527526855, 1.1899645328521729, 1.1822457313537598, 1.1746841669082642, 1.1672827005386353, 1.1600444316864014, 1.1529725790023804, 1.1460700035095215, 1.1393400430679321, 1.1327855587005615, 1.126409649848938, 1.1202155351638794, 1.114206075668335, 1.1083842515945435, 1.1027531623840332, 1.0973156690597534, 1.0920746326446533, 1.0870329141616821, 1.082193374633789, 1.0775587558746338, 1.0731315612792969, 1.0689144134521484, 1.0649099349975586, 1.0611203908920288, 1.05754816532135, 1.054195523262024, 1.051064372062683, 1.0481568574905396, 1.0454747676849365, 1.0430200099945068, 1.0407938957214355, 1.0387980937957764, 1.0370339155197144, 1.035502552986145, 1.0342050790786743, 1.0331422090530396, 1.0323147773742676, 1.0317233800888062, 1.031368374824524, 1.015625, 1.0157451629638672, 1.0161056518554688, 1.016706109046936, 1.01754629611969, 1.0186253786087036, 1.0199427604675293, 1.0214974880218506, 1.023288369178772, 1.0253143310546875, 1.0275739431381226, 1.030065655708313, 1.0327876806259155, 1.0357383489608765, 1.0389156341552734, 1.042317509651184, 1.045941710472107, 1.04978609085083, 1.0538480281829834, 1.0581251382827759, 1.062614917755127, 1.0673145055770874, 1.0722211599349976, 1.0773321390151978, 1.0826444625854492, 1.0881553888320923, 1.0938615798950195, 1.0997602939605713, 1.1058483123779297, 1.1121225357055664, 1.1185797452926636, 1.1252169609069824, 1.132030963897705, 1.1390185356140137, 1.1461765766143799, 1.1535017490386963, 1.1609910726547241, 1.1686413288116455, 1.1764494180679321, 1.1844121217727661, 1.1925263404846191, 1.2007890939712524, 1.2091972827911377, 1.2177479267120361, 1.226438045501709, 1.2352646589279175, 1.2442249059677124, 1.2533159255981445, 1.2625348567962646, 1.2718788385391235, 1.281345248222351, 1.2909314632415771, 1.3006346225738525, 1.3104522228240967, 1.3203818798065186, 1.3304208517074585, 1.3405667543411255, 1.3508172035217285, 1.3611698150634766, 1.3716223239898682, 1.3821723461151123, 1.392817735671997, 1.4035564661026, 1.4143861532211304, 1.425304889678955, 1.4363106489181519, 1.4474014043807983, 1.4585751295089722, 1.46983003616333, 1.4811643362045288, 1.492576003074646, 1.5040634870529175, 1.515625, 1.5272588729858398, 1.5389633178710938, 1.5507370233535767, 1.5625780820846558, 1.5744853019714355, 1.5864570140838623, 1.5984916687011719, 1.6105881929397583, 1.6227447986602783, 1.634960412979126, 1.6472337245941162, 1.6595633029937744, 1.671947956085205, 1.6843866109848022, 1.6968778371810913, 1.7094206809997559, 1.7220139503479004, 1.7346564531326294, 1.747347354888916, 1.7600853443145752, 1.77286958694458, 1.7856988906860352, 1.7985725402832031, 1.811489462852478, 1.8244487047195435, 1.837449550628662, 1.8504908084869385, 1.8635720014572144, 1.8766919374465942, 1.8898500204086304, 1.903045415878296, 1.9162774085998535, 1.9295451641082764, 1.9428479671478271, 1.9561851024627686, 1.9695558547973633, 1.9829596281051636, 1.9963957071304321, 2.0098633766174316, 2.023362159729004, 2.036891222000122, 2.050450086593628, 2.0640382766723633, 2.077655076980591, 2.0912997722625732, 2.1049723625183105, 2.1186716556549072, 2.132397413253784, 2.1461493968963623, 2.159926652908325, 2.1737289428710938, 2.1875557899475098, 2.201406717300415, 2.2152812480926514, 2.2291789054870605, 2.2430992126464844, 2.2291789054870605, 2.2152812480926514, 2.201406717300415, 2.1875557899475098, 2.1737289428710938, 2.159926652908325, 2.1461493968963623, 2.132397413253784, 2.1186716556549072, 2.1049723625183105, 2.0912997722625732, 2.077655076980591, 2.0640382766723633, 2.050450086593628, 2.036891222000122, 2.023362159729004, 2.0098633766174316, 1.9963957071304321, 1.9829596281051636, 1.9695558547973633, 1.9561851024627686, 1.9428479671478271, 1.9295451641082764, 1.9162774085998535, 1.903045415878296, 1.8898500204086304, 1.8766919374465942, 1.8635720014572144, 1.8504908084869385, 1.837449550628662, 1.8244487047195435, 1.811489462852478, 1.7985725402832031, 1.7856988906860352, 1.77286958694458, 1.7600853443145752, 1.747347354888916, 1.7346564531326294, 1.7220139503479004, 1.7094206809997559, 1.6968778371810913, 1.6843866109848022, 1.671947956085205, 1.6595633029937744, 1.6472337245941162, 1.634960412979126, 1.6227447986602783, 1.6105881929397583, 1.5984916687011719, 1.5864570140838623, 1.5744853019714355, 1.5625780820846558, 1.5507370233535767, 1.5389633178710938, 1.5272588729858398, 1.515625, 1.5040634870529175, 1.492576003074646, 1.4811643362045288, 1.46983003616333, 1.4585751295089722, 1.4474014043807983, 1.4363106489181519, 1.425304889678955, 1.4143861532211304, 1.4035564661026, 1.392817735671997, 1.3821723461151123, 1.3716223239898682, 1.3611698150634766, 1.3508172035217285, 1.3405667543411255, 1.3304208517074585, 1.3203818798065186, 1.3104522228240967, 1.3006346225738525, 1.2909314632415771, 1.281345248222351, 1.2718788385391235, 1.2625348567962646, 1.2533159255981445, 1.2442249059677124, 1.2352646589279175, 1.226438045501709, 1.2177479267120361, 1.2091972827911377, 1.2007890939712524, 1.1925263404846191, 1.1844121217727661, 1.1764494180679321, 1.1686413288116455, 1.1609910726547241, 1.1535017490386963, 1.1461765766143799, 1.1390185356140137, 1.132030963897705, 1.1252169609069824, 1.1185797452926636, 1.1121225357055664, 1.1058483123779297, 1.0997602939605713, 1.0938615798950195, 1.0881553888320923, 1.0826444625854492, 1.0773321390151978, 1.0722211599349976, 1.0673145055770874, 1.062614917755127, 1.0581251382827759, 1.0538480281829834, 1.04978609085083, 1.045941710472107, 1.042317509651184, 1.0389156341552734, 1.0357383489608765, 1.0327876806259155, 1.030065655708313, 1.0275739431381226, 1.0253143310546875, 1.023288369178772, 1.0214974880218506, 1.0199427604675293, 1.0186253786087036, 1.01754629611969, 1.016706109046936, 1.0161056518554688, 1.0157451629638672, 1.0, 1.0001220703125, 1.0004881620407104, 1.0010980367660522, 1.0019512176513672, 1.0030471086502075, 1.0043848752975464, 1.005963683128357, 1.007782220840454, 1.0098392963409424, 1.0121334791183472, 1.0146629810333252, 1.0174262523651123, 1.0204213857650757, 1.0236462354660034, 1.0270986557006836, 1.0307763814926147, 1.0346770286560059, 1.0387980937957764, 1.0431369543075562, 1.0476908683776855, 1.0524570941925049, 1.057432770729065, 1.062614917755127, 1.0680004358291626, 1.0735864639282227, 1.0793697834014893, 1.0853471755981445, 1.0915155410766602, 1.0978716611862183, 1.104412317276001, 1.1111341714859009, 1.1180340051651, 1.1251084804534912, 1.1323543787002563, 1.1397684812545776, 1.1473474502563477, 1.1550880670547485, 1.1629871129989624, 1.1710413694381714, 1.1792476177215576, 1.1876027584075928, 1.1961036920547485, 1.2047473192214966, 1.2135305404663086, 1.2224502563476562, 1.2315037250518799, 1.2406879663467407, 1.25, 1.259437084197998, 1.268996238708496, 1.2786749601364136, 1.2884705066680908, 1.2983801364898682, 1.308401346206665, 1.3185315132141113, 1.328768253326416, 1.339108943939209, 1.3495514392852783, 1.3600932359695435, 1.370732069015503, 1.3814656734466553, 1.392291784286499, 1.4032084941864014, 1.4142135381698608, 1.425304889678955, 1.4364806413650513, 1.4477386474609375, 1.45907723903656, 1.470494270324707, 1.4819881916046143, 1.493557095527649, 1.5051993131637573, 1.5169130563735962, 1.528696894645691, 1.5405489206314087, 1.5524678230285645, 1.5644519329071045, 1.5764998197555542, 1.5886099338531494, 1.6007810831069946, 1.6130117177963257, 1.625300407409668, 1.6376460790634155, 1.6500473022460938, 1.6625028848648071, 1.6750116348266602, 1.6875723600387573, 1.7001838684082031, 1.712844967842102, 1.7255547046661377, 1.738312005996704, 1.7511156797409058, 1.7639648914337158, 1.7768585681915283, 1.7897958755493164, 1.8027756214141846, 1.8157970905303955, 1.8288593292236328, 1.8419615030288696, 1.855102777481079, 1.8682821989059448, 1.881499171257019, 1.8947527408599854, 1.9080421924591064, 1.921366810798645, 1.9347258806228638, 1.9481185674667358, 1.961544394493103, 1.9750025272369385, 1.9884922504425049, 2.0020132064819336, 2.015564441680908, 2.0291454792022705, 2.0427558422088623, 2.0563948154449463, 2.0700619220733643, 2.083756446838379, 2.097477912902832, 2.1112260818481445, 2.125, 2.1387994289398193, 2.1526236534118652, 2.1664726734161377, 2.1803455352783203, 2.194241762161255, 2.2081613540649414, 2.2221035957336426, 2.2360680103302, 2.2221035957336426, 2.2081613540649414, 2.194241762161255, 2.1803455352783203, 2.1664726734161377, 2.1526236534118652, 2.1387994289398193, 2.125, 2.1112260818481445, 2.097477912902832, 2.083756446838379, 2.0700619220733643, 2.0563948154449463, 2.0427558422088623, 2.0291454792022705, 2.015564441680908, 2.0020132064819336, 1.9884922504425049, 1.9750025272369385, 1.961544394493103, 1.9481185674667358, 1.9347258806228638, 1.921366810798645, 1.9080421924591064, 1.8947527408599854, 1.881499171257019, 1.8682821989059448, 1.855102777481079, 1.8419615030288696, 1.8288593292236328, 1.8157970905303955, 1.8027756214141846, 1.7897958755493164, 1.7768585681915283, 1.7639648914337158, 1.7511156797409058, 1.738312005996704, 1.7255547046661377, 1.712844967842102, 1.7001838684082031, 1.6875723600387573, 1.6750116348266602, 1.6625028848648071, 1.6500473022460938, 1.6376460790634155, 1.625300407409668, 1.6130117177963257, 1.6007810831069946, 1.5886099338531494, 1.5764998197555542, 1.5644519329071045, 1.5524678230285645, 1.5405489206314087, 1.528696894645691, 1.5169130563735962, 1.5051993131637573, 1.493557095527649, 1.4819881916046143, 1.470494270324707, 1.45907723903656, 1.4477386474609375, 1.4364806413650513, 1.425304889678955, 1.4142135381698608, 1.4032084941864014, 1.392291784286499, 1.3814656734466553, 1.370732069015503, 1.3600932359695435, 1.3495514392852783, 1.339108943939209, 1.328768253326416, 1.3185315132141113, 1.308401346206665, 1.2983801364898682, 1.2884705066680908, 1.2786749601364136, 1.268996238708496, 1.259437084197998, 1.25, 1.2406879663467407, 1.2315037250518799, 1.2224502563476562, 1.2135305404663086, 1.2047473192214966, 1.1961036920547485, 1.1876027584075928, 1.1792476177215576, 1.1710413694381714, 1.1629871129989624, 1.1550880670547485, 1.1473474502563477, 1.1397684812545776, 1.1323543787002563, 1.1251084804534912, 1.1180340051651, 1.1111341714859009, 1.104412317276001, 1.0978716611862183, 1.0915155410766602, 1.0853471755981445, 1.0793697834014893, 1.0735864639282227, 1.0680004358291626, 1.062614917755127, 1.057432770729065, 1.0524570941925049, 1.0476908683776855, 1.0431369543075562, 1.0387980937957764, 1.0346770286560059, 1.0307763814926147, 1.0270986557006836, 1.0236462354660034, 1.0204213857650757, 1.0174262523651123, 1.0146629810333252, 1.0121334791183472, 1.0098392963409424, 1.007782220840454, 1.005963683128357, 1.0043848752975464, 1.0030471086502075, 1.0019512176513672, 1.0010980367660522, 1.0004881620407104, 1.0001220703125, 0.984375, 0.9844989776611328, 0.9848709106445312, 0.9854904413223267, 0.9863571524620056, 0.9874703288078308, 0.9888291954994202, 0.9904327392578125, 0.9922797679901123, 0.9943689107894897, 0.9966986775398254, 0.9992672801017761, 1.002073049545288, 1.0051138401031494, 1.0083876848220825, 1.0118921995162964, 1.015625, 1.0195835828781128, 1.0237654447555542, 1.028167724609375, 1.0327876806259155, 1.037622332572937, 1.0426688194274902, 1.0479239225387573, 1.0533846616744995, 1.0590476989746094, 1.0649099349975586, 1.0709681510925293, 1.077218770980835, 1.0836588144302368, 1.0902847051620483, 1.097093105316162, 1.1040806770324707, 1.1112440824508667, 1.1185797452926636, 1.126084566116333, 1.1337549686431885, 1.141587734222412, 1.1495795249938965, 1.1577271223068237, 1.1660270690917969, 1.1744762659072876, 1.183071494102478, 1.1918096542358398, 1.2006874084472656, 1.2097020149230957, 1.2188501358032227, 1.2281290292739868, 1.2375354766845703, 1.247066855430603, 1.2567201852798462, 1.2664927244186401, 1.2763817310333252, 1.2863845825195312, 1.296498417854309, 1.3067208528518677, 1.3170493841171265, 1.3274815082550049, 1.3380146026611328, 1.348646640777588, 1.359375, 1.3701975345611572, 1.3811120986938477, 1.3921164274215698, 1.4032084941864014, 1.4143861532211304, 1.425647497177124, 1.4369903802871704, 1.4484130144119263, 1.4599136114120483, 1.4714901447296143, 1.4831409454345703, 1.4948642253875732, 1.5066584348678589, 1.5185216665267944, 1.5304526090621948, 1.5424494743347168, 1.5545108318328857, 1.5666351318359375, 1.578821063041687, 1.5910669565200806, 1.6033717393875122, 1.6157337427139282, 1.6281520128250122, 1.640625, 1.6531516313552856, 1.6657304763793945, 1.6783607006072998, 1.6910408735275269, 1.7037699222564697, 1.716546893119812, 1.7293705940246582, 1.742240071296692, 1.7551542520523071, 1.7681121826171875, 1.7811129093170166, 1.7941555976867676, 1.8072391748428345, 1.8203628063201904, 1.8335256576538086, 1.846726894378662, 1.8599658012390137, 1.8732413053512573, 1.8865529298782349, 1.8998997211456299, 1.9132810831069946, 1.9266961812973022, 1.940144419670105, 1.953624963760376, 1.9671372175216675, 1.9806805849075317, 1.994254469871521, 2.0078580379486084, 2.021491050720215, 2.0351524353027344, 2.048842191696167, 2.062559127807617, 2.076303243637085, 2.090073823928833, 2.103870153427124, 2.117691993713379, 2.1315386295318604, 2.1454098224639893, 2.1593048572540283, 2.1732234954833984, 2.1871652603149414, 2.20112943649292, 2.215115785598755, 2.229124069213867, 2.215115785598755, 2.20112943649292, 2.1871652603149414, 2.1732234954833984, 2.1593048572540283, 2.1454098224639893, 2.1315386295318604, 2.117691993713379, 2.103870153427124, 2.090073823928833, 2.076303243637085, 2.062559127807617, 2.048842191696167, 2.0351524353027344, 2.021491050720215, 2.0078580379486084, 1.994254469871521, 1.9806805849075317, 1.9671372175216675, 1.953624963760376, 1.940144419670105, 1.9266961812973022, 1.9132810831069946, 1.8998997211456299, 1.8865529298782349, 1.8732413053512573, 1.8599658012390137, 1.846726894378662, 1.8335256576538086, 1.8203628063201904, 1.8072391748428345, 1.7941555976867676, 1.7811129093170166, 1.7681121826171875, 1.7551542520523071, 1.742240071296692, 1.7293705940246582, 1.716546893119812, 1.7037699222564697, 1.6910408735275269, 1.6783607006072998, 1.6657304763793945, 1.6531516313552856, 1.640625, 1.6281520128250122, 1.6157337427139282, 1.6033717393875122, 1.5910669565200806, 1.578821063041687, 1.5666351318359375, 1.5545108318328857, 1.5424494743347168, 1.5304526090621948, 1.5185216665267944, 1.5066584348678589, 1.4948642253875732, 1.4831409454345703, 1.4714901447296143, 1.4599136114120483, 1.4484130144119263, 1.4369903802871704, 1.425647497177124, 1.4143861532211304, 1.4032084941864014, 1.3921164274215698, 1.3811120986938477, 1.3701975345611572, 1.359375, 1.348646640777588, 1.3380146026611328, 1.3274815082550049, 1.3170493841171265, 1.3067208528518677, 1.296498417854309, 1.2863845825195312, 1.2763817310333252, 1.2664927244186401, 1.2567201852798462, 1.247066855430603, 1.2375354766845703, 1.2281290292739868, 1.2188501358032227, 1.2097020149230957, 1.2006874084472656, 1.1918096542358398, 1.183071494102478, 1.1744762659072876, 1.1660270690917969, 1.1577271223068237, 1.1495795249938965, 1.141587734222412, 1.1337549686431885, 1.126084566116333, 1.1185797452926636, 1.1112440824508667, 1.1040806770324707, 1.097093105316162, 1.0902847051620483, 1.0836588144302368, 1.077218770980835, 1.0709681510925293, 1.0649099349975586, 1.0590476989746094, 1.0533846616744995, 1.0479239225387573, 1.0426688194274902, 1.037622332572937, 1.0327876806259155, 1.028167724609375, 1.0237654447555542, 1.0195835828781128, 1.015625, 1.0118921995162964, 1.0083876848220825, 1.0051138401031494, 1.002073049545288, 0.9992672801017761, 0.9966986775398254, 0.9943689107894897, 0.9922797679901123, 0.9904327392578125, 0.9888291954994202, 0.9874703288078308, 0.9863571524620056, 0.9854904413223267, 0.9848709106445312, 0.9844989776611328, 0.96875, 0.9688760042190552, 0.9692538976669312, 0.969883382320404, 0.9707640409469604, 0.9718950986862183, 0.9732757210731506, 0.9749048352241516, 0.9767812490463257, 0.9789034724235535, 0.981269896030426, 0.9838788509368896, 0.986728310585022, 0.9898163080215454, 0.9931405186653137, 0.9966986775398254, 1.0004881620407104, 1.0045064687728882, 1.0087507963180542, 1.0132182836532593, 1.0179060697555542, 1.0228111743927002, 1.0279302597045898, 1.0332603454589844, 1.0387980937957764, 1.044540286064148, 1.0504834651947021, 1.056624412536621, 1.0629594326019287, 1.0694853067398071, 1.0761984586715698, 1.0830954313278198, 1.0901727676391602, 1.0974268913269043, 1.1048543453216553, 1.1124516725540161, 1.1202155351638794, 1.1281423568725586, 1.1362286806106567, 1.144471287727356, 1.1528667211532593, 1.1614116430282593, 1.170102834701538, 1.1789370775222778, 1.1879111528396606, 1.1970218420028687, 1.206266164779663, 1.2156410217285156, 1.2251434326171875, 1.2347705364227295, 1.2445192337036133, 1.2543867826461792, 1.2643705606460571, 1.2744675874710083, 1.2846752405166626, 1.294991135597229, 1.3054124116897583, 1.3159366846084595, 1.3265615701675415, 1.3372845649719238, 1.348103404045105, 1.359015703201294, 1.3700194358825684, 1.3811120986938477, 1.392291784286499, 1.4035564661026, 1.4149038791656494, 1.4263323545455933, 1.4378396272659302, 1.4494240283966064, 1.4610837697982788, 1.472816824913025, 1.4846216440200806, 1.496496558189392, 1.5084397792816162, 1.5204497575759888, 1.5325249433517456, 1.5446637868881226, 1.556864857673645, 1.5691266059875488, 1.5814476013183594, 1.5938265323638916, 1.60626220703125, 1.6187530755996704, 1.6312979459762573, 1.6438955068588257, 1.656544804573059, 1.669244408607483, 1.6819933652877808, 1.6947903633117676, 1.7076345682144165, 1.7205246686935425, 1.7334598302841187, 1.7464388608932495, 1.7594610452651978, 1.7725251913070679, 1.7856305837631226, 1.7987761497497559, 1.8119611740112305, 1.8251845836639404, 1.838445782661438, 1.8517438173294067, 1.8650779724121094, 1.8784472942352295, 1.8918513059616089, 1.9052891731262207, 1.9187601804733276, 1.9322636127471924, 1.9457987546920776, 1.9593650102615356, 1.9729617834091187, 1.9865883588790894, 2.000244140625, 2.0139286518096924, 2.0276410579681396, 2.0413808822631836, 2.055147886276245, 2.068941116333008, 2.0827603340148926, 2.096604824066162, 2.1104743480682373, 2.1243679523468018, 2.1382856369018555, 2.152226686477661, 2.1661908626556396, 2.1801774501800537, 2.194186210632324, 2.208216667175293, 2.2222683429718018, 2.208216667175293, 2.194186210632324, 2.1801774501800537, 2.1661908626556396, 2.152226686477661, 2.1382856369018555, 2.1243679523468018, 2.1104743480682373, 2.096604824066162, 2.0827603340148926, 2.068941116333008, 2.055147886276245, 2.0413808822631836, 2.0276410579681396, 2.0139286518096924, 2.000244140625, 1.9865883588790894, 1.9729617834091187, 1.9593650102615356, 1.9457987546920776, 1.9322636127471924, 1.9187601804733276, 1.9052891731262207, 1.8918513059616089, 1.8784472942352295, 1.8650779724121094, 1.8517438173294067, 1.838445782661438, 1.8251845836639404, 1.8119611740112305, 1.7987761497497559, 1.7856305837631226, 1.7725251913070679, 1.7594610452651978, 1.7464388608932495, 1.7334598302841187, 1.7205246686935425, 1.7076345682144165, 1.6947903633117676, 1.6819933652877808, 1.669244408607483, 1.656544804573059, 1.6438955068588257, 1.6312979459762573, 1.6187530755996704, 1.60626220703125, 1.5938265323638916, 1.5814476013183594, 1.5691266059875488, 1.556864857673645, 1.5446637868881226, 1.5325249433517456, 1.5204497575759888, 1.5084397792816162, 1.496496558189392, 1.4846216440200806, 1.472816824913025, 1.4610837697982788, 1.4494240283966064, 1.4378396272659302, 1.4263323545455933, 1.4149038791656494, 1.4035564661026, 1.392291784286499, 1.3811120986938477, 1.3700194358825684, 1.359015703201294, 1.348103404045105, 1.3372845649719238, 1.3265615701675415, 1.3159366846084595, 1.3054124116897583, 1.294991135597229, 1.2846752405166626, 1.2744675874710083, 1.2643705606460571, 1.2543867826461792, 1.2445192337036133, 1.2347705364227295, 1.2251434326171875, 1.2156410217285156, 1.206266164779663, 1.1970218420028687, 1.1879111528396606, 1.1789370775222778, 1.170102834701538, 1.1614116430282593, 1.1528667211532593, 1.144471287727356, 1.1362286806106567, 1.1281423568725586, 1.1202155351638794, 1.1124516725540161, 1.1048543453216553, 1.0974268913269043, 1.0901727676391602, 1.0830954313278198, 1.0761984586715698, 1.0694853067398071, 1.0629594326019287, 1.056624412536621, 1.0504834651947021, 1.044540286064148, 1.0387980937957764, 1.0332603454589844, 1.0279302597045898, 1.0228111743927002, 1.0179060697555542, 1.0132182836532593, 1.0087507963180542, 1.0045064687728882, 1.0004881620407104, 0.9966986775398254, 0.9931405186653137, 0.9898163080215454, 0.986728310585022, 0.9838788509368896, 0.981269896030426, 0.9789034724235535, 0.9767812490463257, 0.9749048352241516, 0.9732757210731506, 0.9718950986862183, 0.9707640409469604, 0.969883382320404, 0.9692538976669312, 0.9688760042190552, 0.953125, 0.9532530903816223, 0.9536371827125549, 0.954276978969574, 0.9551720023155212, 0.9563214778900146, 0.9577245712280273, 0.9593800902366638, 0.9612867832183838, 0.9634431004524231, 0.9658474922180176, 0.9684979319572449, 0.9713925719261169, 0.9745291471481323, 0.9779053330421448, 0.9815186858177185, 0.9853665828704834, 0.9894462823867798, 0.9937549233436584, 0.9982895255088806, 1.0030471086502075, 1.0080244541168213, 1.0132182836532593, 1.0186253786087036, 1.0242422819137573, 1.030065655708313, 1.0360918045043945, 1.042317509651184, 1.048738956451416, 1.055352807044983, 1.0621552467346191, 1.0691428184509277, 1.0763118267059326, 1.0836588144302368, 1.0911799669265747, 1.0988719463348389, 1.1067310571670532, 1.1147537231445312, 1.122936487197876, 1.1312758922576904, 1.1397684812545776, 1.1484109163284302, 1.157199740409851, 1.1661317348480225, 1.175203561782837, 1.1844121217727661, 1.1937540769577026, 1.2032264471054077, 1.212826132774353, 1.2225501537322998, 1.2323955297470093, 1.2423595190048218, 1.252439022064209, 1.2626315355300903, 1.2729341983795166, 1.2833442687988281, 1.2938594818115234, 1.3044769763946533, 1.3151943683624268, 1.3260093927383423, 1.3369194269180298, 1.3479223251342773, 1.359015703201294, 1.3701975345611572, 1.3814656734466553, 1.392817735671997, 1.404252052307129, 1.4157663583755493, 1.4273589849472046, 1.4390276670455933, 1.4507709741592407, 1.462586760520935, 1.4744735956192017, 1.4864294528961182, 1.4984530210494995, 1.510542392730713, 1.5226961374282837, 1.5349127054214478, 1.5471906661987305, 1.5595284700393677, 1.5719246864318848, 1.5843781232833862, 1.596887230873108, 1.6094508171081543, 1.6220676898956299, 1.63473641872406, 1.6474560499191284, 1.6602251529693604, 1.6730427742004395, 1.6859078407287598, 1.6988190412521362, 1.7117756605148315, 1.7247763872146606, 1.7378203868865967, 1.7509065866470337, 1.7640341520309448, 1.7772021293640137, 1.7904095649719238, 1.803655743598938, 1.8169395923614502, 1.8302605152130127, 1.843617558479309, 1.857010006904602, 1.8704371452331543, 1.883898138999939, 1.8973922729492188, 1.910918951034546, 1.924477458000183, 1.9380669593811035, 1.951686978340149, 1.965336799621582, 1.9790159463882446, 1.9927235841751099, 2.0064592361450195, 2.0202224254608154, 2.03401255607605, 2.0478289127349854, 2.061671257019043, 2.0755388736724854, 2.0894312858581543, 2.1033477783203125, 2.11728835105896, 2.1312522888183594, 2.1452391147613525, 2.1592483520507812, 2.1732797622680664, 2.1873326301574707, 2.201406717300415, 2.215501546859741, 2.201406717300415, 2.1873326301574707, 2.1732797622680664, 2.1592483520507812, 2.1452391147613525, 2.1312522888183594, 2.11728835105896, 2.1033477783203125, 2.0894312858581543, 2.0755388736724854, 2.061671257019043, 2.0478289127349854, 2.03401255607605, 2.0202224254608154, 2.0064592361450195, 1.9927235841751099, 1.9790159463882446, 1.965336799621582, 1.951686978340149, 1.9380669593811035, 1.924477458000183, 1.910918951034546, 1.8973922729492188, 1.883898138999939, 1.8704371452331543, 1.857010006904602, 1.843617558479309, 1.8302605152130127, 1.8169395923614502, 1.803655743598938, 1.7904095649719238, 1.7772021293640137, 1.7640341520309448, 1.7509065866470337, 1.7378203868865967, 1.7247763872146606, 1.7117756605148315, 1.6988190412521362, 1.6859078407287598, 1.6730427742004395, 1.6602251529693604, 1.6474560499191284, 1.63473641872406, 1.6220676898956299, 1.6094508171081543, 1.596887230873108, 1.5843781232833862, 1.5719246864318848, 1.5595284700393677, 1.5471906661987305, 1.5349127054214478, 1.5226961374282837, 1.510542392730713, 1.4984530210494995, 1.4864294528961182, 1.4744735956192017, 1.462586760520935, 1.4507709741592407, 1.4390276670455933, 1.4273589849472046, 1.4157663583755493, 1.404252052307129, 1.392817735671997, 1.3814656734466553, 1.3701975345611572, 1.359015703201294, 1.3479223251342773, 1.3369194269180298, 1.3260093927383423, 1.3151943683624268, 1.3044769763946533, 1.2938594818115234, 1.2833442687988281, 1.2729341983795166, 1.2626315355300903, 1.252439022064209, 1.2423595190048218, 1.2323955297470093, 1.2225501537322998, 1.212826132774353, 1.2032264471054077, 1.1937540769577026, 1.1844121217727661, 1.175203561782837, 1.1661317348480225, 1.157199740409851, 1.1484109163284302, 1.1397684812545776, 1.1312758922576904, 1.122936487197876, 1.1147537231445312, 1.1067310571670532, 1.0988719463348389, 1.0911799669265747, 1.0836588144302368, 1.0763118267059326, 1.0691428184509277, 1.0621552467346191, 1.055352807044983, 1.048738956451416, 1.042317509651184, 1.0360918045043945, 1.030065655708313, 1.0242422819137573, 1.0186253786087036, 1.0132182836532593, 1.0080244541168213, 1.0030471086502075, 0.9982895255088806, 0.9937549233436584, 0.9894462823867798, 0.9853665828704834, 0.9815186858177185, 0.9779053330421448, 0.9745291471481323, 0.9713925719261169, 0.9684979319572449, 0.9658474922180176, 0.9634431004524231, 0.9612867832183838, 0.9593800902366638, 0.9577245712280273, 0.9563214778900146, 0.9551720023155212, 0.954276978969574, 0.9536371827125549, 0.9532530903816223, 0.9375, 0.9376301765441895, 0.9380207061767578, 0.9386711716651917, 0.939581036567688, 0.9407495856285095, 0.9421758651733398, 0.9438586235046387, 0.9457966089248657, 0.9479882121086121, 0.9504316449165344, 0.953125, 0.9560661315917969, 0.9592528343200684, 0.9626826047897339, 0.9663528800010681, 0.9702609181404114, 0.9744038581848145, 0.9787787199020386, 0.9833824634552002, 0.9882117509841919, 0.9932634234428406, 0.998534083366394, 1.0040202140808105, 1.009718418121338, 1.015625, 1.0217363834381104, 1.0280489921569824, 1.0345591306686401, 1.0412629842758179, 1.0481568574905396, 1.0552371740341187, 1.0625, 1.069941759109497, 1.0775587558746338, 1.0853471755981445, 1.0933034420013428, 1.101423978805542, 1.1097050905227661, 1.1181432008743286, 1.126734733581543, 1.1354763507843018, 1.144364595413208, 1.1533960103988647, 1.1625672578811646, 1.171875, 1.1813161373138428, 1.190887451171875, 1.2005858421325684, 1.210408091545105, 1.2203514575958252, 1.2304129600524902, 1.2405896186828613, 1.2508785724639893, 1.261277198791504, 1.2717828750610352, 1.2823927402496338, 1.2931044101715088, 1.3039153814315796, 1.3148231506347656, 1.3258252143859863, 1.3369194269180298, 1.348103404045105, 1.359375, 1.370732069015503, 1.3821723461151123, 1.3936939239501953, 1.4052947759628296, 1.4169729948043823, 1.4287266731262207, 1.4405537843704224, 1.4524527788162231, 1.4644218683242798, 1.4764591455459595, 1.4885631799697876, 1.5007323026657104, 1.5129648447036743, 1.5252593755722046, 1.537614345550537, 1.5500283241271973, 1.5625, 1.5750279426574707, 1.5876107215881348, 1.6002471446990967, 1.612936019897461, 1.625675916671753, 1.6384658813476562, 1.6513044834136963, 1.6641908884048462, 1.677123785018921, 1.690102219581604, 1.703125, 1.716191291809082, 1.7293000221252441, 1.74245023727417, 1.755640983581543, 1.7688714265823364, 1.7821407318115234, 1.795447826385498, 1.808791995048523, 1.8221725225448608, 1.8355884552001953, 1.849039077758789, 1.8625235557556152, 1.8760414123535156, 1.8895916938781738, 1.903173804283142, 1.9167869091033936, 1.9304306507110596, 1.9441041946411133, 1.957806944847107, 1.9715381860733032, 1.9852975606918335, 1.999084234237671, 2.0128979682922363, 2.026737689971924, 2.0406033992767334, 2.0544943809509277, 2.0684101581573486, 2.082350015640259, 2.096313714981079, 2.1103007793426514, 2.1243104934692383, 2.13834285736084, 2.1523969173431396, 2.1664726734161377, 2.1805694103240967, 2.1946868896484375, 2.208824634552002, 2.1946868896484375, 2.1805694103240967, 2.1664726734161377, 2.1523969173431396, 2.13834285736084, 2.1243104934692383, 2.1103007793426514, 2.096313714981079, 2.082350015640259, 2.0684101581573486, 2.0544943809509277, 2.0406033992767334, 2.026737689971924, 2.0128979682922363, 1.999084234237671, 1.9852975606918335, 1.9715381860733032, 1.957806944847107, 1.9441041946411133, 1.9304306507110596, 1.9167869091033936, 1.903173804283142, 1.8895916938781738, 1.8760414123535156, 1.8625235557556152, 1.849039077758789, 1.8355884552001953, 1.8221725225448608, 1.808791995048523, 1.795447826385498, 1.7821407318115234, 1.7688714265823364, 1.755640983581543, 1.74245023727417, 1.7293000221252441, 1.716191291809082, 1.703125, 1.690102219581604, 1.677123785018921, 1.6641908884048462, 1.6513044834136963, 1.6384658813476562, 1.625675916671753, 1.612936019897461, 1.6002471446990967, 1.5876107215881348, 1.5750279426574707, 1.5625, 1.5500283241271973, 1.537614345550537, 1.5252593755722046, 1.5129648447036743, 1.5007323026657104, 1.4885631799697876, 1.4764591455459595, 1.4644218683242798, 1.4524527788162231, 1.4405537843704224, 1.4287266731262207, 1.4169729948043823, 1.4052947759628296, 1.3936939239501953, 1.3821723461151123, 1.370732069015503, 1.359375, 1.348103404045105, 1.3369194269180298, 1.3258252143859863, 1.3148231506347656, 1.3039153814315796, 1.2931044101715088, 1.2823927402496338, 1.2717828750610352, 1.261277198791504, 1.2508785724639893, 1.2405896186828613, 1.2304129600524902, 1.2203514575958252, 1.210408091545105, 1.2005858421325684, 1.190887451171875, 1.1813161373138428, 1.171875, 1.1625672578811646, 1.1533960103988647, 1.144364595413208, 1.1354763507843018, 1.126734733581543, 1.1181432008743286, 1.1097050905227661, 1.101423978805542, 1.0933034420013428, 1.0853471755981445, 1.0775587558746338, 1.069941759109497, 1.0625, 1.0552371740341187, 1.0481568574905396, 1.0412629842758179, 1.0345591306686401, 1.0280489921569824, 1.0217363834381104, 1.015625, 1.009718418121338, 1.0040202140808105, 0.998534083366394, 0.9932634234428406, 0.9882117509841919, 0.9833824634552002, 0.9787787199020386, 0.9744038581848145, 0.9702609181404114, 0.9663528800010681, 0.9626826047897339, 0.9592528343200684, 0.9560661315917969, 0.953125, 0.9504316449165344, 0.9479882121086121, 0.9457966089248657, 0.9438586235046387, 0.9421758651733398, 0.9407495856285095, 0.939581036567688, 0.9386711716651917, 0.9380207061767578, 0.9376301765441895, 0.921875, 0.9220073819160461, 0.9224045276641846, 0.9230659604072571, 0.9239912033081055, 0.9251794815063477, 0.9266296625137329, 0.9283406734466553, 0.9303109645843506, 0.9325389862060547, 0.93502277135849, 0.9377603530883789, 0.9407495856285095, 0.9439879655838013, 0.9474729895591736, 0.9512019753456116, 0.9551720023155212, 0.9593800902366638, 0.963823139667511, 0.9684979319572449, 0.9734011292457581, 0.9785292744636536, 0.9838788509368896, 0.9894462823867798, 0.9952278733253479, 1.0012199878692627, 1.0074187517166138, 1.0138205289840698, 1.0204213857650757, 1.0272175073623657, 1.0342050790786743, 1.0413801670074463, 1.048738956451416, 1.0562777519226074, 1.0639925003051758, 1.071879506111145, 1.079935073852539, 1.0881553888320923, 1.096536636352539, 1.1050752401351929, 1.1137677431106567, 1.122610330581665, 1.1315995454788208, 1.1407320499420166, 1.150004267692566, 1.1594128608703613, 1.1689547300338745, 1.1786264181137085, 1.188424825668335, 1.1983468532562256, 1.208389401435852, 1.2185496091842651, 1.228824496269226, 1.2392112016677856, 1.2497069835662842, 1.260309100151062, 1.2710148096084595, 1.2818214893341064, 1.292726755142212, 1.3037281036376953, 1.3148231506347656, 1.3260093927383423, 1.3372845649719238, 1.348646640777588, 1.3600932359695435, 1.3716223239898682, 1.38323175907135, 1.3949196338653564, 1.4066839218139648, 1.418522834777832, 1.4304343461990356, 1.4424169063568115, 1.4544684886932373, 1.4665875434875488, 1.4787722826004028, 1.4910212755203247, 1.5033328533172607, 1.5157055854797363, 1.5281378030776978, 1.54062819480896, 1.5531753301620483, 1.5657777786254883, 1.5784343481063843, 1.5911437273025513, 1.6039044857025146, 1.616715669631958, 1.6295758485794067, 1.6424840688705444, 1.655439019203186, 1.6684398651123047, 1.6814851760864258, 1.694574236869812, 1.7077059745788574, 1.720879316329956, 1.734093427658081, 1.747347354888916, 1.7606401443481445, 1.7739708423614502, 1.7873388528823853, 1.8007431030273438, 1.814182996749878, 1.8276575803756714, 1.8411661386489868, 1.854707956314087, 1.8682821989059448, 1.8818883895874023, 1.8955256938934326, 1.9091933965682983, 1.9228910207748413, 1.9366177320480347, 1.9503730535507202, 1.9641563892364502, 1.9779670238494873, 1.9918044805526733, 2.0056681632995605, 2.0195577144622803, 2.0334722995758057, 2.0474116802215576, 2.061375141143799, 2.07536244392395, 2.0893728733062744, 2.1034059524536133, 2.1174614429473877, 2.1315386295318604, 2.145637273788452, 2.159757137298584, 2.1738975048065186, 2.1880578994750977, 2.2022383213043213, 2.1880578994750977, 2.1738975048065186, 2.159757137298584, 2.145637273788452, 2.1315386295318604, 2.1174614429473877, 2.1034059524536133, 2.0893728733062744, 2.07536244392395, 2.061375141143799, 2.0474116802215576, 2.0334722995758057, 2.0195577144622803, 2.0056681632995605, 1.9918044805526733, 1.9779670238494873, 1.9641563892364502, 1.9503730535507202, 1.9366177320480347, 1.9228910207748413, 1.9091933965682983, 1.8955256938934326, 1.8818883895874023, 1.8682821989059448, 1.854707956314087, 1.8411661386489868, 1.8276575803756714, 1.814182996749878, 1.8007431030273438, 1.7873388528823853, 1.7739708423614502, 1.7606401443481445, 1.747347354888916, 1.734093427658081, 1.720879316329956, 1.7077059745788574, 1.694574236869812, 1.6814851760864258, 1.6684398651123047, 1.655439019203186, 1.6424840688705444, 1.6295758485794067, 1.616715669631958, 1.6039044857025146, 1.5911437273025513, 1.5784343481063843, 1.5657777786254883, 1.5531753301620483, 1.54062819480896, 1.5281378030776978, 1.5157055854797363, 1.5033328533172607, 1.4910212755203247, 1.4787722826004028, 1.4665875434875488, 1.4544684886932373, 1.4424169063568115, 1.4304343461990356, 1.418522834777832, 1.4066839218139648, 1.3949196338653564, 1.38323175907135, 1.3716223239898682, 1.3600932359695435, 1.348646640777588, 1.3372845649719238, 1.3260093927383423, 1.3148231506347656, 1.3037281036376953, 1.292726755142212, 1.2818214893341064, 1.2710148096084595, 1.260309100151062, 1.2497069835662842, 1.2392112016677856, 1.228824496269226, 1.2185496091842651, 1.208389401435852, 1.1983468532562256, 1.188424825668335, 1.1786264181137085, 1.1689547300338745, 1.1594128608703613, 1.150004267692566, 1.1407320499420166, 1.1315995454788208, 1.122610330581665, 1.1137677431106567, 1.1050752401351929, 1.096536636352539, 1.0881553888320923, 1.079935073852539, 1.071879506111145, 1.0639925003051758, 1.0562777519226074, 1.048738956451416, 1.0413801670074463, 1.0342050790786743, 1.0272175073623657, 1.0204213857650757, 1.0138205289840698, 1.0074187517166138, 1.0012199878692627, 0.9952278733253479, 0.9894462823867798, 0.9838788509368896, 0.9785292744636536, 0.9734011292457581, 0.9684979319572449, 0.963823139667511, 0.9593800902366638, 0.9551720023155212, 0.9512019753456116, 0.9474729895591736, 0.9439879655838013, 0.9407495856285095, 0.9377603530883789, 0.93502277135849, 0.9325389862060547, 0.9303109645843506, 0.9283406734466553, 0.9266296625137329, 0.9251794815063477, 0.9239912033081055, 0.9230659604072571, 0.9224045276641846, 0.9220073819160461, 0.90625, 0.9063847064971924, 0.9067886471748352, 0.9074614644050598, 0.9084026217460632, 0.9096112251281738, 0.9110862612724304, 0.9128263592720032, 0.9148300886154175, 0.9170956611633301, 0.9196211695671082, 0.9224045276641846, 0.9254432916641235, 0.928735077381134, 0.9322771430015564, 0.9360666275024414, 0.9401005506515503, 0.9443758130073547, 0.9488891363143921, 0.9536371827125549, 0.9586163759231567, 0.963823139667511, 0.9692538976669312, 0.9749048352241516, 0.9807721972465515, 0.9868520498275757, 0.9931405186653137, 0.9996337294578552, 1.0063276290893555, 1.0132182836532593, 1.0203016996383667, 1.0275739431381226, 1.0350309610366821, 1.0426688194274902, 1.0504834651947021, 1.0584712028503418, 1.0666279792785645, 1.0749499797821045, 1.0834335088729858, 1.0920746326446533, 1.1008696556091309, 1.109815001487732, 1.11890709400177, 1.1281423568725586, 1.1375172138214111, 1.1470282077789307, 1.1566722393035889, 1.1664457321166992, 1.1763455867767334, 1.186368703842163, 1.1965118646621704, 1.2067720890045166, 1.217146396636963, 1.22763192653656, 1.2382258176803589, 1.2489253282546997, 1.2597277164459229, 1.2706304788589478, 1.2816309928894043, 1.292726755142212, 1.3039153814315796, 1.3151943683624268, 1.3265615701675415, 1.3380146026611328, 1.3495514392852783, 1.3611698150634766, 1.3728677034378052, 1.3846430778503418, 1.396493911743164, 1.4084184169769287, 1.4204148054122925, 1.432481050491333, 1.4446154832839966, 1.456816554069519, 1.4690823554992676, 1.4814114570617676, 1.4938023090362549, 1.5062532424926758, 1.5187628269195557, 1.5313297510147095, 1.543952465057373, 1.5566295385360718, 1.5693598985671997, 1.5821421146392822, 1.5949749946594238, 1.607857346534729, 1.6207878589630127, 1.633765459060669, 1.6467890739440918, 1.6598575115203857, 1.6729698181152344, 1.6861250400543213, 1.699321985244751, 1.7125598192214966, 1.7258377075195312, 1.7391544580459595, 1.752509355545044, 1.7659015655517578, 1.7793301343917847, 1.7927942276000977, 1.806293249130249, 1.8198262453079224, 1.8333925008773804, 1.8469913005828857, 1.8606219291687012, 1.8742836713790894, 1.8879759311676025, 1.9016979932785034, 1.9154491424560547, 1.9292287826538086, 1.943036437034607, 1.9568713903427124, 1.9707331657409668, 1.9846210479736328, 1.9985345602035522, 2.0124733448028564, 2.0264365673065186, 2.040424108505249, 2.0544350147247314, 2.0684690475463867, 2.0825259685516357, 2.096604824066162, 2.110705614089966, 2.1248276233673096, 2.1389706134796143, 2.1531341075897217, 2.1673176288604736, 2.181520938873291, 2.1957433223724365, 2.181520938873291, 2.1673176288604736, 2.1531341075897217, 2.1389706134796143, 2.1248276233673096, 2.110705614089966, 2.096604824066162, 2.0825259685516357, 2.0684690475463867, 2.0544350147247314, 2.040424108505249, 2.0264365673065186, 2.0124733448028564, 1.9985345602035522, 1.9846210479736328, 1.9707331657409668, 1.9568713903427124, 1.943036437034607, 1.9292287826538086, 1.9154491424560547, 1.9016979932785034, 1.8879759311676025, 1.8742836713790894, 1.8606219291687012, 1.8469913005828857, 1.8333925008773804, 1.8198262453079224, 1.806293249130249, 1.7927942276000977, 1.7793301343917847, 1.7659015655517578, 1.752509355545044, 1.7391544580459595, 1.7258377075195312, 1.7125598192214966, 1.699321985244751, 1.6861250400543213, 1.6729698181152344, 1.6598575115203857, 1.6467890739440918, 1.633765459060669, 1.6207878589630127, 1.607857346534729, 1.5949749946594238, 1.5821421146392822, 1.5693598985671997, 1.5566295385360718, 1.543952465057373, 1.5313297510147095, 1.5187628269195557, 1.5062532424926758, 1.4938023090362549, 1.4814114570617676, 1.4690823554992676, 1.456816554069519, 1.4446154832839966, 1.432481050491333, 1.4204148054122925, 1.4084184169769287, 1.396493911743164, 1.3846430778503418, 1.3728677034378052, 1.3611698150634766, 1.3495514392852783, 1.3380146026611328, 1.3265615701675415, 1.3151943683624268, 1.3039153814315796, 1.292726755142212, 1.2816309928894043, 1.2706304788589478, 1.2597277164459229, 1.2489253282546997, 1.2382258176803589, 1.22763192653656, 1.217146396636963, 1.2067720890045166, 1.1965118646621704, 1.186368703842163, 1.1763455867767334, 1.1664457321166992, 1.1566722393035889, 1.1470282077789307, 1.1375172138214111, 1.1281423568725586, 1.11890709400177, 1.109815001487732, 1.1008696556091309, 1.0920746326446533, 1.0834335088729858, 1.0749499797821045, 1.0666279792785645, 1.0584712028503418, 1.0504834651947021, 1.0426688194274902, 1.0350309610366821, 1.0275739431381226, 1.0203016996383667, 1.0132182836532593, 1.0063276290893555, 0.9996337294578552, 0.9931405186653137, 0.9868520498275757, 0.9807721972465515, 0.9749048352241516, 0.9692538976669312, 0.963823139667511, 0.9586163759231567, 0.9536371827125549, 0.9488891363143921, 0.9443758130073547, 0.9401005506515503, 0.9360666275024414, 0.9322771430015564, 0.928735077381134, 0.9254432916641235, 0.9224045276641846, 0.9196211695671082, 0.9170956611633301, 0.9148300886154175, 0.9128263592720032, 0.9110862612724304, 0.9096112251281738, 0.9084026217460632, 0.9074614644050598, 0.9067886471748352, 0.9063847064971924, 0.890625, 0.8907620310783386, 0.8911730647087097, 0.8918576836585999, 0.8928152918815613, 0.8940449953079224, 0.8955456018447876, 0.8973158597946167, 0.8993541598320007, 0.9016586542129517, 0.9042272567749023, 0.9070578217506409, 0.9101478457450867, 0.9134947657585144, 0.9170956611633301, 0.9209476113319397, 0.9250475168228149, 0.9293920397758484, 0.9339777827262878, 0.9388011693954468, 0.9438586235046387, 0.9491463899612427, 0.9546606540679932, 0.960397481918335, 0.9663528800010681, 0.9725229144096375, 0.9789034724235535, 0.9854904413223267, 0.9922797679901123, 0.9992672801017761, 1.0064489841461182, 1.0138205289840698, 1.0213779211044312, 1.0291171073913574, 1.0370339155197144, 1.0451244115829468, 1.0533846616744995, 1.0618104934692383, 1.0703980922698975, 1.0791435241699219, 1.0880430936813354, 1.097093105316162, 1.1062897443771362, 1.1156294345855713, 1.1251084804534912, 1.1347235441207886, 1.144471287727356, 1.1543481349945068, 1.1643508672714233, 1.1744762659072876, 1.1847212314605713, 1.195082664489746, 1.2055575847625732, 1.216143012046814, 1.2268362045288086, 1.2376341819763184, 1.2485343217849731, 1.2595340013504028, 1.2706304788589478, 1.2818214893341064, 1.2931044101715088, 1.3044769763946533, 1.3159366846084595, 1.3274815082550049, 1.339108943939209, 1.3508172035217285, 1.3626039028167725, 1.3744672536849976, 1.386405110359192, 1.3984156847000122, 1.4104970693588257, 1.422647476196289, 1.434865117073059, 1.447148323059082, 1.4594954252243042, 1.4719048738479614, 1.484375, 1.4969043731689453, 1.5094914436340332, 1.5221349000930786, 1.5348331928253174, 1.5475850105285645, 1.5603891611099243, 1.573244333267212, 1.5861490964889526, 1.59910249710083, 1.6121032238006592, 1.625150203704834, 1.6382423639297485, 1.6513783931732178, 1.6645575761795044, 1.677778720855713, 1.6910408735275269, 1.7043430805206299, 1.7176843881607056, 1.7310638427734375, 1.7444807291030884, 1.7579339742660522, 1.7714229822158813, 1.7849467992782593, 1.7985047101974487, 1.8120958805084229, 1.8257195949554443, 1.8393751382827759, 1.8530617952346802, 1.86677885055542, 1.8805257081985474, 1.8943016529083252, 1.9081062078475952, 1.9219385385513306, 1.935798168182373, 1.949684500694275, 1.9635969400405884, 1.9775350093841553, 1.9914979934692383, 2.0054855346679688, 2.0194971561431885, 2.0335323810577393, 2.047590494155884, 2.061671257019043, 2.0757739543914795, 2.0898985862731934, 2.104044198989868, 2.118210554122925, 2.132397413253784, 2.146604299545288, 2.1608307361602783, 2.1750762462615967, 2.189340829849243, 2.1750762462615967, 2.1608307361602783, 2.146604299545288, 2.132397413253784, 2.118210554122925, 2.104044198989868, 2.0898985862731934, 2.0757739543914795, 2.061671257019043, 2.047590494155884, 2.0335323810577393, 2.0194971561431885, 2.0054855346679688, 1.9914979934692383, 1.9775350093841553, 1.9635969400405884, 1.949684500694275, 1.935798168182373, 1.9219385385513306, 1.9081062078475952, 1.8943016529083252, 1.8805257081985474, 1.86677885055542, 1.8530617952346802, 1.8393751382827759, 1.8257195949554443, 1.8120958805084229, 1.7985047101974487, 1.7849467992782593, 1.7714229822158813, 1.7579339742660522, 1.7444807291030884, 1.7310638427734375, 1.7176843881607056, 1.7043430805206299, 1.6910408735275269, 1.677778720855713, 1.6645575761795044, 1.6513783931732178, 1.6382423639297485, 1.625150203704834, 1.6121032238006592, 1.59910249710083, 1.5861490964889526, 1.573244333267212, 1.5603891611099243, 1.5475850105285645, 1.5348331928253174, 1.5221349000930786, 1.5094914436340332, 1.4969043731689453, 1.484375, 1.4719048738479614, 1.4594954252243042, 1.447148323059082, 1.434865117073059, 1.422647476196289, 1.4104970693588257, 1.3984156847000122, 1.386405110359192, 1.3744672536849976, 1.3626039028167725, 1.3508172035217285, 1.339108943939209, 1.3274815082550049, 1.3159366846084595, 1.3044769763946533, 1.2931044101715088, 1.2818214893341064, 1.2706304788589478, 1.2595340013504028, 1.2485343217849731, 1.2376341819763184, 1.2268362045288086, 1.216143012046814, 1.2055575847625732, 1.195082664489746, 1.1847212314605713, 1.1744762659072876, 1.1643508672714233, 1.1543481349945068, 1.144471287727356, 1.1347235441207886, 1.1251084804534912, 1.1156294345855713, 1.1062897443771362, 1.097093105316162, 1.0880430936813354, 1.0791435241699219, 1.0703980922698975, 1.0618104934692383, 1.0533846616744995, 1.0451244115829468, 1.0370339155197144, 1.0291171073913574, 1.0213779211044312, 1.0138205289840698, 1.0064489841461182, 0.9992672801017761, 0.9922797679901123, 0.9854904413223267, 0.9789034724235535, 0.9725229144096375, 0.9663528800010681, 0.960397481918335, 0.9546606540679932, 0.9491463899612427, 0.9438586235046387, 0.9388011693954468, 0.9339777827262878, 0.9293920397758484, 0.9250475168228149, 0.9209476113319397, 0.9170956611633301, 0.9134947657585144, 0.9101478457450867, 0.9070578217506409, 0.9042272567749023, 0.9016586542129517, 0.8993541598320007, 0.8973158597946167, 0.8955456018447876, 0.8940449953079224, 0.8928152918815613, 0.8918576836585999, 0.8911730647087097, 0.8907620310783386, 0.875, 0.8751394748687744, 0.8755578398704529, 0.876254677772522, 0.8772292733192444, 0.8784807920455933, 0.8800079822540283, 0.881809413433075, 0.8838834762573242, 0.8862282037734985, 0.8888413906097412, 0.8917208313941956, 0.8948638439178467, 0.8982676267623901, 0.9019293785095215, 0.9058458209037781, 0.910013735294342, 0.9144296646118164, 0.9190900921821594, 0.9239912033081055, 0.9291293025016785, 0.9345003962516785, 0.9401005506515503, 0.9459256529808044, 0.9519716501235962, 0.9582342505455017, 0.9647093415260315, 0.9713925719261169, 0.9782797694206238, 0.9853665828704834, 0.9926487803459167, 1.0001220703125, 1.007782220840454, 1.015625, 1.0236462354660034, 1.0318416357040405, 1.0402072668075562, 1.048738956451416, 1.057432770729065, 1.0662846565246582, 1.0752906799316406, 1.0844470262527466, 1.09375, 1.1031957864761353, 1.1127808094024658, 1.1225016117095947, 1.1323543787002563, 1.1423360109329224, 1.1524430513381958, 1.1626721620559692, 1.1730202436447144, 1.1834841966629028, 1.1940608024597168, 1.2047473192214966, 1.2155406475067139, 1.226438045501709, 1.2374368906021118, 1.2485343217849731, 1.2597277164459229, 1.2710148096084595, 1.2823927402496338, 1.2938594818115234, 1.3054124116897583, 1.3170493841171265, 1.328768253326416, 1.3405667543411255, 1.3524428606033325, 1.3643944263458252, 1.3764196634292603, 1.3885166645050049, 1.4006834030151367, 1.412918210029602, 1.4252192974090576, 1.4375848770141602, 1.450013518333435, 1.4625033140182495, 1.4750529527664185, 1.4876608848571777, 1.5003254413604736, 1.5130454301834106, 1.5258194208145142, 1.5386459827423096, 1.5515239238739014, 1.5644519329071045, 1.5774286985397339, 1.590453028678894, 1.6035239696502686, 1.6166402101516724, 1.62980055809021, 1.6430041790008545, 1.65625, 1.6695369482040405, 1.6828639507293701, 1.6962302923202515, 1.7096349000930786, 1.7230769395828247, 1.7365554571151733, 1.7500697374343872, 1.76361882686615, 1.7772021293640137, 1.7908185720443726, 1.8044676780700684, 1.8181484937667847, 1.8318605422973633, 1.8456028699874878, 1.859375, 1.8731762170791626, 1.8870058059692383, 1.9008632898330688, 1.914747953414917, 1.9286593198776245, 1.942596673965454, 1.9565595388412476, 1.9705473184585571, 1.9845595359802246, 1.9985957145690918, 2.012655258178711, 2.026737689971924, 2.0408427715301514, 2.0549697875976562, 2.0691182613372803, 2.0832877159118652, 2.097477912902832, 2.1116886138916016, 2.1259188652038574, 2.1401686668395996, 2.15443754196167, 2.1687252521514893, 2.1830310821533203, 2.1687252521514893, 2.15443754196167, 2.1401686668395996, 2.1259188652038574, 2.1116886138916016, 2.097477912902832, 2.0832877159118652, 2.0691182613372803, 2.0549697875976562, 2.0408427715301514, 2.026737689971924, 2.012655258178711, 1.9985957145690918, 1.9845595359802246, 1.9705473184585571, 1.9565595388412476, 1.942596673965454, 1.9286593198776245, 1.914747953414917, 1.9008632898330688, 1.8870058059692383, 1.8731762170791626, 1.859375, 1.8456028699874878, 1.8318605422973633, 1.8181484937667847, 1.8044676780700684, 1.7908185720443726, 1.7772021293640137, 1.76361882686615, 1.7500697374343872, 1.7365554571151733, 1.7230769395828247, 1.7096349000930786, 1.6962302923202515, 1.6828639507293701, 1.6695369482040405, 1.65625, 1.6430041790008545, 1.62980055809021, 1.6166402101516724, 1.6035239696502686, 1.590453028678894, 1.5774286985397339, 1.5644519329071045, 1.5515239238739014, 1.5386459827423096, 1.5258194208145142, 1.5130454301834106, 1.5003254413604736, 1.4876608848571777, 1.4750529527664185, 1.4625033140182495, 1.450013518333435, 1.4375848770141602, 1.4252192974090576, 1.412918210029602, 1.4006834030151367, 1.3885166645050049, 1.3764196634292603, 1.3643944263458252, 1.3524428606033325, 1.3405667543411255, 1.328768253326416, 1.3170493841171265, 1.3054124116897583, 1.2938594818115234, 1.2823927402496338, 1.2710148096084595, 1.2597277164459229, 1.2485343217849731, 1.2374368906021118, 1.226438045501709, 1.2155406475067139, 1.2047473192214966, 1.1940608024597168, 1.1834841966629028, 1.1730202436447144, 1.1626721620559692, 1.1524430513381958, 1.1423360109329224, 1.1323543787002563, 1.1225016117095947, 1.1127808094024658, 1.1031957864761353, 1.09375, 1.0844470262527466, 1.0752906799316406, 1.0662846565246582, 1.057432770729065, 1.048738956451416, 1.0402072668075562, 1.0318416357040405, 1.0236462354660034, 1.015625, 1.007782220840454, 1.0001220703125, 0.9926487803459167, 0.9853665828704834, 0.9782797694206238, 0.9713925719261169, 0.9647093415260315, 0.9582342505455017, 0.9519716501235962, 0.9459256529808044, 0.9401005506515503, 0.9345003962516785, 0.9291293025016785, 0.9239912033081055, 0.9190900921821594, 0.9144296646118164, 0.910013735294342, 0.9058458209037781, 0.9019293785095215, 0.8982676267623901, 0.8948638439178467, 0.8917208313941956, 0.8888413906097412, 0.8862282037734985, 0.8838834762573242, 0.881809413433075, 0.8800079822540283, 0.8784807920455933, 0.8772292733192444, 0.876254677772522, 0.8755578398704529, 0.8751394748687744, 0.859375, 0.8595170378684998, 0.8599429726600647, 0.8606524467468262, 0.8616447448730469, 0.8629188537597656, 0.8644735217094421, 0.866307258605957, 0.8684183359146118, 0.8708046674728394, 0.873464047908783, 0.8763939738273621, 0.8795917630195618, 0.8830544352531433, 0.8867789506912231, 0.8907620310783386, 0.8950002193450928, 0.8994898796081543, 0.9042272567749023, 0.9092085361480713, 0.9144296646118164, 0.9198866486549377, 0.9255751967430115, 0.9314911365509033, 0.9376301765441895, 0.9439879655838013, 0.9505600929260254, 0.9573420882225037, 0.9643296599388123, 0.9715182185173035, 0.9789034724235535, 0.9864808917045593, 0.9942461252212524, 1.002194881439209, 1.0103226900100708, 1.0186253786087036, 1.0270986557006836, 1.0357383489608765, 1.044540286064148, 1.0535005331039429, 1.062614917755127, 1.071879506111145, 1.081290602684021, 1.0908443927764893, 1.1005369424819946, 1.1103649139404297, 1.1203244924545288, 1.1304123401641846, 1.140625, 1.1509591341018677, 1.1614116430282593, 1.1719791889190674, 1.1826586723327637, 1.193447232246399, 1.2043418884277344, 1.2153397798538208, 1.226438045501709, 1.2376341819763184, 1.2489253282546997, 1.260309100151062, 1.2717828750610352, 1.2833442687988281, 1.294991135597229, 1.3067208528518677, 1.3185315132141113, 1.3304208517074585, 1.3423867225646973, 1.3544270992279053, 1.3665400743484497, 1.3787236213684082, 1.390976071357727, 1.4032955169677734, 1.415680170059204, 1.4281283617019653, 1.440638542175293, 1.4532090425491333, 1.4658381938934326, 1.4785246849060059, 1.4912668466567993, 1.5040634870529175, 1.5169130563735962, 1.52981436252594, 1.5427659749984741, 1.5557667016983032, 1.5688153505325317, 1.5819107294082642, 1.5950515270233154, 1.6082369089126587, 1.6214655637741089, 1.63473641872406, 1.6480486392974854, 1.6614011526107788, 1.674793004989624, 1.6882232427597046, 1.701690912246704, 1.7151951789855957, 1.7287352085113525, 1.7423101663589478, 1.755919098854065, 1.7695614099502563, 1.7832362651824951, 1.796942949295044, 1.810680627822876, 1.8244487047195435, 1.8382465839385986, 1.8520734310150146, 1.8659285306930542, 1.8798115253448486, 1.893721580505371, 1.907658338546753, 1.9216209650039673, 1.935608983039856, 1.9496219158172607, 1.9636590480804443, 1.9777201414108276, 1.9918044805526733, 2.0059115886688232, 2.0200412273406982, 2.0341925621032715, 2.048365354537964, 2.062559127807617, 2.0767736434936523, 2.091007947921753, 2.105262279510498, 2.1195356845855713, 2.1338281631469727, 2.148139238357544, 2.162468433380127, 2.1768155097961426, 2.162468433380127, 2.148139238357544, 2.1338281631469727, 2.1195356845855713, 2.105262279510498, 2.091007947921753, 2.0767736434936523, 2.062559127807617, 2.048365354537964, 2.0341925621032715, 2.0200412273406982, 2.0059115886688232, 1.9918044805526733, 1.9777201414108276, 1.9636590480804443, 1.9496219158172607, 1.935608983039856, 1.9216209650039673, 1.907658338546753, 1.893721580505371, 1.8798115253448486, 1.8659285306930542, 1.8520734310150146, 1.8382465839385986, 1.8244487047195435, 1.810680627822876, 1.796942949295044, 1.7832362651824951, 1.7695614099502563, 1.755919098854065, 1.7423101663589478, 1.7287352085113525, 1.7151951789855957, 1.701690912246704, 1.6882232427597046, 1.674793004989624, 1.6614011526107788, 1.6480486392974854, 1.63473641872406, 1.6214655637741089, 1.6082369089126587, 1.5950515270233154, 1.5819107294082642, 1.5688153505325317, 1.5557667016983032, 1.5427659749984741, 1.52981436252594, 1.5169130563735962, 1.5040634870529175, 1.4912668466567993, 1.4785246849060059, 1.4658381938934326, 1.4532090425491333, 1.440638542175293, 1.4281283617019653, 1.415680170059204, 1.4032955169677734, 1.390976071357727, 1.3787236213684082, 1.3665400743484497, 1.3544270992279053, 1.3423867225646973, 1.3304208517074585, 1.3185315132141113, 1.3067208528518677, 1.294991135597229, 1.2833442687988281, 1.2717828750610352, 1.260309100151062, 1.2489253282546997, 1.2376341819763184, 1.226438045501709, 1.2153397798538208, 1.2043418884277344, 1.193447232246399, 1.1826586723327637, 1.1719791889190674, 1.1614116430282593, 1.1509591341018677, 1.140625, 1.1304123401641846, 1.1203244924545288, 1.1103649139404297, 1.1005369424819946, 1.0908443927764893, 1.081290602684021, 1.071879506111145, 1.062614917755127, 1.0535005331039429, 1.044540286064148, 1.0357383489608765, 1.0270986557006836, 1.0186253786087036, 1.0103226900100708, 1.002194881439209, 0.9942461252212524, 0.9864808917045593, 0.9789034724235535, 0.9715182185173035, 0.9643296599388123, 0.9573420882225037, 0.9505600929260254, 0.9439879655838013, 0.9376301765441895, 0.9314911365509033, 0.9255751967430115, 0.9198866486549377, 0.9144296646118164, 0.9092085361480713, 0.9042272567749023, 0.8994898796081543, 0.8950002193450928, 0.8907620310783386, 0.8867789506912231, 0.8830544352531433, 0.8795917630195618, 0.8763939738273621, 0.873464047908783, 0.8708046674728394, 0.8684183359146118, 0.866307258605957, 0.8644735217094421, 0.8629188537597656, 0.8616447448730469, 0.8606524467468262, 0.8599429726600647, 0.8595170378684998, 0.84375, 0.8438946604728699, 0.8443285226821899, 0.845051109790802, 0.846061646938324, 0.8473591804504395, 0.8489423394203186, 0.8508095741271973, 0.8529589772224426, 0.8553884625434875, 0.858095645904541, 0.8610778450965881, 0.8643323183059692, 0.8678559064865112, 0.8716453313827515, 0.8756972551345825, 0.8800079822540283, 0.884573757648468, 0.8893905878067017, 0.8944544792175293, 0.8997612595558167, 0.9053066372871399, 0.9110862612724304, 0.9170956611633301, 0.9233304262161255, 0.929785966873169, 0.9364577531814575, 0.9433411955833435, 0.9504316449165344, 0.9577245712280273, 0.9652153253555298, 0.9728993773460388, 0.9807721972465515, 0.9888291954994202, 0.9970660209655762, 1.0054781436920166, 1.0140613317489624, 1.0228111743927002, 1.0317233800888062, 1.0407938957214355, 1.050018548965454, 1.0593934059143066, 1.0689144134521484, 1.0785777568817139, 1.0883796215057373, 1.0983163118362427, 1.1083842515945435, 1.1185797452926636, 1.1288994550704956, 1.1393400430679321, 1.1498980522155762, 1.160570502281189, 1.171354055404663, 1.1822457313537598, 1.1932426691055298, 1.2043418884277344, 1.2155406475067139, 1.2268362045288086, 1.2382258176803589, 1.2497069835662842, 1.261277198791504, 1.2729341983795166, 1.2846752405166626, 1.296498417854309, 1.308401346206665, 1.3203818798065186, 1.3324378728866577, 1.3445672988891602, 1.3567683696746826, 1.3690389394760132, 1.3813772201538086, 1.3937815427780151, 1.40625, 1.4187809228897095, 1.4313727617263794, 1.4440239667892456, 1.4567327499389648, 1.469497799873352, 1.4823176860809326, 1.4951908588409424, 1.5081160068511963, 1.5210919380187988, 1.5341172218322754, 1.5471906661987305, 1.560310959815979, 1.573477029800415, 1.5866878032684326, 1.5999419689178467, 1.6132386922836304, 1.6265767812728882, 1.6399551630020142, 1.653373122215271, 1.6668294668197632, 1.6803232431411743, 1.693853735923767, 1.707419991493225, 1.7210211753845215, 1.7346564531326294, 1.7483251094818115, 1.7620261907577515, 1.7757591009140015, 1.7895230054855347, 1.8033173084259033, 1.8171411752700806, 1.8309940099716187, 1.8448752164840698, 1.8587840795516968, 1.8727200031280518, 1.886682391166687, 1.9006706476211548, 1.9146841764450073, 1.9287225008010864, 1.9427851438522339, 1.9568713903427124, 1.9709808826446533, 1.9851130247116089, 1.9992674589157104, 2.0134434700012207, 2.0276410579681396, 2.0418593883514404, 2.056097984313965, 2.070356607437134, 2.084635019302368, 2.0989325046539307, 2.113248825073242, 2.1275835037231445, 2.1419363021850586, 2.156306505203247, 2.170694351196289, 2.156306505203247, 2.1419363021850586, 2.1275835037231445, 2.113248825073242, 2.0989325046539307, 2.084635019302368, 2.070356607437134, 2.056097984313965, 2.0418593883514404, 2.0276410579681396, 2.0134434700012207, 1.9992674589157104, 1.9851130247116089, 1.9709808826446533, 1.9568713903427124, 1.9427851438522339, 1.9287225008010864, 1.9146841764450073, 1.9006706476211548, 1.886682391166687, 1.8727200031280518, 1.8587840795516968, 1.8448752164840698, 1.8309940099716187, 1.8171411752700806, 1.8033173084259033, 1.7895230054855347, 1.7757591009140015, 1.7620261907577515, 1.7483251094818115, 1.7346564531326294, 1.7210211753845215, 1.707419991493225, 1.693853735923767, 1.6803232431411743, 1.6668294668197632, 1.653373122215271, 1.6399551630020142, 1.6265767812728882, 1.6132386922836304, 1.5999419689178467, 1.5866878032684326, 1.573477029800415, 1.560310959815979, 1.5471906661987305, 1.5341172218322754, 1.5210919380187988, 1.5081160068511963, 1.4951908588409424, 1.4823176860809326, 1.469497799873352, 1.4567327499389648, 1.4440239667892456, 1.4313727617263794, 1.4187809228897095, 1.40625, 1.3937815427780151, 1.3813772201538086, 1.3690389394760132, 1.3567683696746826, 1.3445672988891602, 1.3324378728866577, 1.3203818798065186, 1.308401346206665, 1.296498417854309, 1.2846752405166626, 1.2729341983795166, 1.261277198791504, 1.2497069835662842, 1.2382258176803589, 1.2268362045288086, 1.2155406475067139, 1.2043418884277344, 1.1932426691055298, 1.1822457313537598, 1.171354055404663, 1.160570502281189, 1.1498980522155762, 1.1393400430679321, 1.1288994550704956, 1.1185797452926636, 1.1083842515945435, 1.0983163118362427, 1.0883796215057373, 1.0785777568817139, 1.0689144134521484, 1.0593934059143066, 1.050018548965454, 1.0407938957214355, 1.0317233800888062, 1.0228111743927002, 1.0140613317489624, 1.0054781436920166, 0.9970660209655762, 0.9888291954994202, 0.9807721972465515, 0.9728993773460388, 0.9652153253555298, 0.9577245712280273, 0.9504316449165344, 0.9433411955833435, 0.9364577531814575, 0.929785966873169, 0.9233304262161255, 0.9170956611633301, 0.9110862612724304, 0.9053066372871399, 0.8997612595558167, 0.8944544792175293, 0.8893905878067017, 0.884573757648468, 0.8800079822540283, 0.8756972551345825, 0.8716453313827515, 0.8678559064865112, 0.8643323183059692, 0.8610778450965881, 0.858095645904541, 0.8553884625434875, 0.8529589772224426, 0.8508095741271973, 0.8489423394203186, 0.8473591804504395, 0.846061646938324, 0.845051109790802, 0.8443285226821899, 0.8438946604728699, 0.828125, 0.8282724022865295, 0.8287144303321838, 0.8294506072998047, 0.83048015832901, 0.8318019509315491, 0.8334147334098816, 0.8353166580200195, 0.8375058174133301, 0.8399800062179565, 0.8427366614341736, 0.8457730412483215, 0.8490861058235168, 0.8526727557182312, 0.8565293550491333, 0.8606524467468262, 0.8650381565093994, 0.8696824908256531, 0.8745813965797424, 0.8797305226325989, 0.8851255774497986, 0.8907620310783386, 0.8966354131698608, 0.9027410745620728, 0.9090742468833923, 0.9156303405761719, 0.9224045276641846, 0.9293920397758484, 0.9365881085395813, 0.9439879655838013, 0.951586902141571, 0.9593800902366638, 0.9673629403114319, 0.9755306839942932, 0.9838788509368896, 0.9924027919769287, 1.0010980367660522, 1.0099601745605469, 1.0189847946166992, 1.028167724609375, 1.0375046730041504, 1.0469915866851807, 1.056624412536621, 1.066399097442627, 1.0763118267059326, 1.086358904838562, 1.096536636352539, 1.1068413257598877, 1.1172693967819214, 1.1278176307678223, 1.1384825706481934, 1.1492609977722168, 1.1601496934890747, 1.1711455583572388, 1.1822457313537598, 1.193447232246399, 1.2047473192214966, 1.216143012046814, 1.22763192653656, 1.2392112016677856, 1.2508785724639893, 1.2626315355300903, 1.2744675874710083, 1.2863845825195312, 1.2983801364898682, 1.3104522228240967, 1.3225988149642944, 1.33481764793396, 1.3471070528030396, 1.3594647645950317, 1.3718892335891724, 1.3843785524368286, 1.3969309329986572, 1.4095447063446045, 1.4222183227539062, 1.4349502325057983, 1.4477386474609375, 1.4605823755264282, 1.4734797477722168, 1.4864294528961182, 1.4994301795959473, 1.512480616569519, 1.5255794525146484, 1.5387253761291504, 1.551917314529419, 1.565153956413269, 1.5784343481063843, 1.5917572975158691, 1.6051218509674072, 1.618526816368103, 1.6319712400436401, 1.6454541683197021, 1.6589747667312622, 1.6725319623947144, 1.6861250400543213, 1.699752926826477, 1.7134150266647339, 1.7271103858947754, 1.7408381700515747, 1.754597783088684, 1.768388271331787, 1.7822091579437256, 1.7960596084594727, 1.809938907623291, 1.823846459388733, 1.8377816677093506, 1.8517438173294067, 1.8657323122024536, 1.8797465562820435, 1.893786072731018, 1.9078502655029297, 1.9219385385513306, 1.9360504150390625, 1.9501852989196777, 1.9643428325653076, 1.9785224199295044, 1.9927235841751099, 2.006945848464966, 2.021188974380493, 2.035452365875244, 2.0497355461120605, 2.0640382766723633, 2.078359842300415, 2.092700242996216, 2.1070590019226074, 2.1214354038238525, 2.135829448699951, 2.150240659713745, 2.1646687984466553, 2.150240659713745, 2.135829448699951, 2.1214354038238525, 2.1070590019226074, 2.092700242996216, 2.078359842300415, 2.0640382766723633, 2.0497355461120605, 2.035452365875244, 2.021188974380493, 2.006945848464966, 1.9927235841751099, 1.9785224199295044, 1.9643428325653076, 1.9501852989196777, 1.9360504150390625, 1.9219385385513306, 1.9078502655029297, 1.893786072731018, 1.8797465562820435, 1.8657323122024536, 1.8517438173294067, 1.8377816677093506, 1.823846459388733, 1.809938907623291, 1.7960596084594727, 1.7822091579437256, 1.768388271331787, 1.754597783088684, 1.7408381700515747, 1.7271103858947754, 1.7134150266647339, 1.699752926826477, 1.6861250400543213, 1.6725319623947144, 1.6589747667312622, 1.6454541683197021, 1.6319712400436401, 1.618526816368103, 1.6051218509674072, 1.5917572975158691, 1.5784343481063843, 1.565153956413269, 1.551917314529419, 1.5387253761291504, 1.5255794525146484, 1.512480616569519, 1.4994301795959473, 1.4864294528961182, 1.4734797477722168, 1.4605823755264282, 1.4477386474609375, 1.4349502325057983, 1.4222183227539062, 1.4095447063446045, 1.3969309329986572, 1.3843785524368286, 1.3718892335891724, 1.3594647645950317, 1.3471070528030396, 1.33481764793396, 1.3225988149642944, 1.3104522228240967, 1.2983801364898682, 1.2863845825195312, 1.2744675874710083, 1.2626315355300903, 1.2508785724639893, 1.2392112016677856, 1.22763192653656, 1.216143012046814, 1.2047473192214966, 1.193447232246399, 1.1822457313537598, 1.1711455583572388, 1.1601496934890747, 1.1492609977722168, 1.1384825706481934, 1.1278176307678223, 1.1172693967819214, 1.1068413257598877, 1.096536636352539, 1.086358904838562, 1.0763118267059326, 1.066399097442627, 1.056624412536621, 1.0469915866851807, 1.0375046730041504, 1.028167724609375, 1.0189847946166992, 1.0099601745605469, 1.0010980367660522, 0.9924027919769287, 0.9838788509368896, 0.9755306839942932, 0.9673629403114319, 0.9593800902366638, 0.951586902141571, 0.9439879655838013, 0.9365881085395813, 0.9293920397758484, 0.9224045276641846, 0.9156303405761719, 0.9090742468833923, 0.9027410745620728, 0.8966354131698608, 0.8907620310783386, 0.8851255774497986, 0.8797305226325989, 0.8745813965797424, 0.8696824908256531, 0.8650381565093994, 0.8606524467468262, 0.8565293550491333, 0.8526727557182312, 0.8490861058235168, 0.8457730412483215, 0.8427366614341736, 0.8399800062179565, 0.8375058174133301, 0.8353166580200195, 0.8334147334098816, 0.8318019509315491, 0.83048015832901, 0.8294506072998047, 0.8287144303321838, 0.8282724022865295, 0.8125, 0.812650203704834, 0.8131007552146912, 0.8138510584831238, 0.814900279045105, 0.8162473440170288, 0.8178907632827759, 0.8198287487030029, 0.822059154510498, 0.824579656124115, 0.8273876309394836, 0.83048015832901, 0.8338540196418762, 0.8375058174133301, 0.8414319753646851, 0.8456286787986755, 0.8500919342041016, 0.8548174500465393, 0.8598010540008545, 0.8650381565093994, 0.8705242872238159, 0.876254677772522, 0.8822246193885803, 0.8884292840957642, 0.8948638439178467, 0.901523232460022, 0.9084026217460632, 0.9154970049858093, 0.9228014349937439, 0.9303109645843506, 0.9380207061767578, 0.9459256529808044, 0.9540210962295532, 0.9623021483421326, 0.9707640409469604, 0.9794021248817444, 0.9882117509841919, 0.9971884489059448, 1.0063276290893555, 1.015625, 1.0250762701034546, 1.0346770286560059, 1.0444234609603882, 1.0543112754821777, 1.0643366575241089, 1.0744956731796265, 1.0847846269607544, 1.0951999425888062, 1.1057379245758057, 1.1163949966430664, 1.12716805934906, 1.1380536556243896, 1.1490485668182373, 1.1601496934890747, 1.171354055404663, 1.1826586723327637, 1.1940608024597168, 1.2055575847625732, 1.217146396636963, 1.228824496269226, 1.2405896186828613, 1.252439022064209, 1.2643705606460571, 1.2763817310333252, 1.2884705066680908, 1.3006346225738525, 1.3128719329833984, 1.3251805305480957, 1.337558388710022, 1.3500036001205444, 1.3625143766403198, 1.3750888109207153, 1.3877252340316772, 1.4004219770431519, 1.4131773710250854, 1.4259898662567139, 1.4388580322265625, 1.4517803192138672, 1.4647551774978638, 1.4777814149856567, 1.4908576011657715, 1.5039823055267334, 1.5171544551849365, 1.5303728580474854, 1.5436360836029053, 1.5569432973861694, 1.5702930688858032, 1.5836845636367798, 1.5971165895462036, 1.6105881929397583, 1.624098300933838, 1.6376460790634155, 1.6512305736541748, 1.6648509502410889, 1.6785061359405518, 1.6921954154968262, 1.7059179544448853, 1.7196730375289917, 1.7334598302841187, 1.7472774982452393, 1.7611253261566162, 1.7750027179718018, 1.7889089584350586, 1.8028433322906494, 1.8168052434921265, 1.8307939767837524, 1.8448090553283691, 1.8588497638702393, 1.872915506362915, 1.8870058059692383, 1.9011201858520508, 1.9152579307556152, 1.929418683052063, 1.9436017274856567, 1.957806944847107, 1.9720335006713867, 1.9862810373306274, 2.00054931640625, 2.0148375034332275, 2.0291454792022705, 2.0434727668762207, 2.057819128036499, 2.072183609008789, 2.08656644821167, 2.1009669303894043, 2.115385055541992, 2.129819869995117, 2.1442716121673584, 2.1587395668029785, 2.1442716121673584, 2.129819869995117, 2.115385055541992, 2.1009669303894043, 2.08656644821167, 2.072183609008789, 2.057819128036499, 2.0434727668762207, 2.0291454792022705, 2.0148375034332275, 2.00054931640625, 1.9862810373306274, 1.9720335006713867, 1.957806944847107, 1.9436017274856567, 1.929418683052063, 1.9152579307556152, 1.9011201858520508, 1.8870058059692383, 1.872915506362915, 1.8588497638702393, 1.8448090553283691, 1.8307939767837524, 1.8168052434921265, 1.8028433322906494, 1.7889089584350586, 1.7750027179718018, 1.7611253261566162, 1.7472774982452393, 1.7334598302841187, 1.7196730375289917, 1.7059179544448853, 1.6921954154968262, 1.6785061359405518, 1.6648509502410889, 1.6512305736541748, 1.6376460790634155, 1.624098300933838, 1.6105881929397583, 1.5971165895462036, 1.5836845636367798, 1.5702930688858032, 1.5569432973861694, 1.5436360836029053, 1.5303728580474854, 1.5171544551849365, 1.5039823055267334, 1.4908576011657715, 1.4777814149856567, 1.4647551774978638, 1.4517803192138672, 1.4388580322265625, 1.4259898662567139, 1.4131773710250854, 1.4004219770431519, 1.3877252340316772, 1.3750888109207153, 1.3625143766403198, 1.3500036001205444, 1.337558388710022, 1.3251805305480957, 1.3128719329833984, 1.3006346225738525, 1.2884705066680908, 1.2763817310333252, 1.2643705606460571, 1.252439022064209, 1.2405896186828613, 1.228824496269226, 1.217146396636963, 1.2055575847625732, 1.1940608024597168, 1.1826586723327637, 1.171354055404663, 1.1601496934890747, 1.1490485668182373, 1.1380536556243896, 1.12716805934906, 1.1163949966430664, 1.1057379245758057, 1.0951999425888062, 1.0847846269607544, 1.0744956731796265, 1.0643366575241089, 1.0543112754821777, 1.0444234609603882, 1.0346770286560059, 1.0250762701034546, 1.015625, 1.0063276290893555, 0.9971884489059448, 0.9882117509841919, 0.9794021248817444, 0.9707640409469604, 0.9623021483421326, 0.9540210962295532, 0.9459256529808044, 0.9380207061767578, 0.9303109645843506, 0.9228014349937439, 0.9154970049858093, 0.9084026217460632, 0.901523232460022, 0.8948638439178467, 0.8884292840957642, 0.8822246193885803, 0.876254677772522, 0.8705242872238159, 0.8650381565093994, 0.8598010540008545, 0.8548174500465393, 0.8500919342041016, 0.8456286787986755, 0.8414319753646851, 0.8375058174133301, 0.8338540196418762, 0.83048015832901, 0.8273876309394836, 0.824579656124115, 0.822059154510498, 0.8198287487030029, 0.8178907632827759, 0.8162473440170288, 0.814900279045105, 0.8138510584831238, 0.8131007552146912, 0.812650203704834, 0.796875, 0.7970281839370728, 0.7974874973297119, 0.7982524633407593, 0.799322247505188, 0.8006954789161682, 0.8023707270622253, 0.8043460845947266, 0.8066193461418152, 0.8091879487037659, 0.812049150466919, 0.8151998519897461, 0.8186366558074951, 0.822356104850769, 0.8263542652130127, 0.8306271433830261, 0.8351705074310303, 0.8399800062179565, 0.845051109790802, 0.8503790497779846, 0.8559591174125671, 0.8617863655090332, 0.8678559064865112, 0.8741625547409058, 0.8807013034820557, 0.8874669671058655, 0.8944544792175293, 0.9016586542129517, 0.9090742468833923, 0.9166962504386902, 0.9245195388793945, 0.9325389862060547, 0.9407495856285095, 0.9491463899612427, 0.9577245712280273, 0.9664791822433472, 0.9754055738449097, 0.9844989776611328, 0.9937549233436584, 1.0031688213348389, 1.0127363204956055, 1.0224529504776, 1.0323147773742676, 1.042317509651184, 1.0524570941925049, 1.0627297163009644, 1.0731315612792969, 1.0836588144302368, 1.0943078994750977, 1.1050752401351929, 1.1159576177597046, 1.1269514560699463, 1.1380536556243896, 1.1492609977722168, 1.160570502281189, 1.1719791889190674, 1.1834841966629028, 1.195082664489746, 1.2067720890045166, 1.2185496091842651, 1.2304129600524902, 1.2423595190048218, 1.2543867826461792, 1.2664927244186401, 1.2786749601364136, 1.2909314632415771, 1.3032598495483398, 1.315658450126648, 1.328125, 1.3406578302383423, 1.3532549142837524, 1.3659145832061768, 1.3786351680755615, 1.391414761543274, 1.404252052307129, 1.4171452522277832, 1.4300930500030518, 1.4430937767028809, 1.456146001815796, 1.4692485332489014, 1.4824000597000122, 1.4955990314483643, 1.5088443756103516, 1.5221349000930786, 1.5354692935943604, 1.5488466024398804, 1.5622656345367432, 1.5757253170013428, 1.5892245769500732, 1.6027624607086182, 1.6163381338119507, 1.6299504041671753, 1.6435984373092651, 1.657281517982483, 1.6709985733032227, 1.684748888015747, 1.6985316276550293, 1.712346076965332, 1.7261912822723389, 1.740066647529602, 1.7539714574813843, 1.7679049968719482, 1.7818666696548462, 1.7958556413650513, 1.8098714351654053, 1.8239134550094604, 1.83798086643219, 1.8520734310150146, 1.8661901950836182, 1.8803309202194214, 1.8944950103759766, 1.908681869506836, 1.9228910207748413, 1.9371219873428345, 1.9513741731643677, 1.9656473398208618, 1.9799408912658691, 1.994254469871521, 2.008587598800659, 2.022939682006836, 2.0373106002807617, 2.0516998767852783, 2.0661072731018066, 2.0805320739746094, 2.0949740409851074, 2.1094329357147217, 2.123908281326294, 2.138399839401245, 2.152907371520996, 2.138399839401245, 2.123908281326294, 2.1094329357147217, 2.0949740409851074, 2.0805320739746094, 2.0661072731018066, 2.0516998767852783, 2.0373106002807617, 2.022939682006836, 2.008587598800659, 1.994254469871521, 1.9799408912658691, 1.9656473398208618, 1.9513741731643677, 1.9371219873428345, 1.9228910207748413, 1.908681869506836, 1.8944950103759766, 1.8803309202194214, 1.8661901950836182, 1.8520734310150146, 1.83798086643219, 1.8239134550094604, 1.8098714351654053, 1.7958556413650513, 1.7818666696548462, 1.7679049968719482, 1.7539714574813843, 1.740066647529602, 1.7261912822723389, 1.712346076965332, 1.6985316276550293, 1.684748888015747, 1.6709985733032227, 1.657281517982483, 1.6435984373092651, 1.6299504041671753, 1.6163381338119507, 1.6027624607086182, 1.5892245769500732, 1.5757253170013428, 1.5622656345367432, 1.5488466024398804, 1.5354692935943604, 1.5221349000930786, 1.5088443756103516, 1.4955990314483643, 1.4824000597000122, 1.4692485332489014, 1.456146001815796, 1.4430937767028809, 1.4300930500030518, 1.4171452522277832, 1.404252052307129, 1.391414761543274, 1.3786351680755615, 1.3659145832061768, 1.3532549142837524, 1.3406578302383423, 1.328125, 1.315658450126648, 1.3032598495483398, 1.2909314632415771, 1.2786749601364136, 1.2664927244186401, 1.2543867826461792, 1.2423595190048218, 1.2304129600524902, 1.2185496091842651, 1.2067720890045166, 1.195082664489746, 1.1834841966629028, 1.1719791889190674, 1.160570502281189, 1.1492609977722168, 1.1380536556243896, 1.1269514560699463, 1.1159576177597046, 1.1050752401351929, 1.0943078994750977, 1.0836588144302368, 1.0731315612792969, 1.0627297163009644, 1.0524570941925049, 1.042317509651184, 1.0323147773742676, 1.0224529504776, 1.0127363204956055, 1.0031688213348389, 0.9937549233436584, 0.9844989776611328, 0.9754055738449097, 0.9664791822433472, 0.9577245712280273, 0.9491463899612427, 0.9407495856285095, 0.9325389862060547, 0.9245195388793945, 0.9166962504386902, 0.9090742468833923, 0.9016586542129517, 0.8944544792175293, 0.8874669671058655, 0.8807013034820557, 0.8741625547409058, 0.8678559064865112, 0.8617863655090332, 0.8559591174125671, 0.8503790497779846, 0.845051109790802, 0.8399800062179565, 0.8351705074310303, 0.8306271433830261, 0.8263542652130127, 0.822356104850769, 0.8186366558074951, 0.8151998519897461, 0.812049150466919, 0.8091879487037659, 0.8066193461418152, 0.8043460845947266, 0.8023707270622253, 0.8006954789161682, 0.799322247505188, 0.7982524633407593, 0.7974874973297119, 0.7970281839370728, 0.78125, 0.7814062237739563, 0.7818747758865356, 0.7826550006866455, 0.7837460041046143, 0.7851465344429016, 0.7868549227714539, 0.7888690829277039, 0.7911868095397949, 0.7938053607940674, 0.7967218160629272, 0.7999328374862671, 0.8034350275993347, 0.807224452495575, 0.8112971782684326, 0.8156489729881287, 0.8202753067016602, 0.8251716494560242, 0.8303331136703491, 0.835754930973053, 0.8414319753646851, 0.8473591804504395, 0.8535312414169312, 0.8599429726600647, 0.8665890097618103, 0.873464047908783, 0.8805626630783081, 0.8878795504570007, 0.8954092860221863, 0.9031466245651245, 0.9110862612724304, 0.919222891330719, 0.9275513887405396, 0.9360666275024414, 0.9447635412216187, 0.9536371827125549, 0.9626826047897339, 0.9718950986862183, 0.981269896030426, 0.9908024072647095, 1.0004881620407104, 1.0103226900100708, 1.0203016996383667, 1.0304210186004639, 1.0406765937805176, 1.051064372062683, 1.0615805387496948, 1.0722211599349976, 1.0829826593399048, 1.0938615798950195, 1.1048543453216553, 1.1159576177597046, 1.12716805934906, 1.1384825706481934, 1.1498980522155762, 1.1614116430282593, 1.1730202436447144, 1.1847212314605713, 1.1965118646621704, 1.208389401435852, 1.2203514575958252, 1.2323955297470093, 1.2445192337036133, 1.2567201852798462, 1.268996238708496, 1.281345248222351, 1.2937650680541992, 1.3062537908554077, 1.3188092708587646, 1.3314297199249268, 1.3441133499145508, 1.356858253479004, 1.369662880897522, 1.3825255632400513, 1.395444631576538, 1.4084184169769287, 1.4214457273483276, 1.4345247745513916, 1.447654366493225, 1.4608330726623535, 1.4740595817565918, 1.4873325824737549, 1.5006508827209473, 1.5140132904052734, 1.5274187326431274, 1.5408658981323242, 1.5543537139892578, 1.5678813457489014, 1.5814476013183594, 1.5950515270233154, 1.6086921691894531, 1.6223686933517456, 1.636080026626587, 1.6498253345489502, 1.6636039018630981, 1.677414894104004, 1.691257357597351, 1.705130696296692, 1.7190340757369995, 1.7329667806625366, 1.746928095817566, 1.7609174251556396, 1.774933934211731, 1.7889772653579712, 1.803046464920044, 1.8171411752700806, 1.8312606811523438, 1.8454045057296753, 1.859571933746338, 1.873762607574463, 1.8879759311676025, 1.9022114276885986, 1.9164685010910034, 1.9307467937469482, 1.945045828819275, 1.9593650102615356, 1.9737040996551514, 1.9880625009536743, 2.0024399757385254, 2.016835927963257, 2.03125, 2.045681953430176, 2.060131311416626, 2.0745975971221924, 2.089080572128296, 2.1035799980163574, 2.1180953979492188, 2.132626533508301, 2.1471729278564453, 2.132626533508301, 2.1180953979492188, 2.1035799980163574, 2.089080572128296, 2.0745975971221924, 2.060131311416626, 2.045681953430176, 2.03125, 2.016835927963257, 2.0024399757385254, 1.9880625009536743, 1.9737040996551514, 1.9593650102615356, 1.945045828819275, 1.9307467937469482, 1.9164685010910034, 1.9022114276885986, 1.8879759311676025, 1.873762607574463, 1.859571933746338, 1.8454045057296753, 1.8312606811523438, 1.8171411752700806, 1.803046464920044, 1.7889772653579712, 1.774933934211731, 1.7609174251556396, 1.746928095817566, 1.7329667806625366, 1.7190340757369995, 1.705130696296692, 1.691257357597351, 1.677414894104004, 1.6636039018630981, 1.6498253345489502, 1.636080026626587, 1.6223686933517456, 1.6086921691894531, 1.5950515270233154, 1.5814476013183594, 1.5678813457489014, 1.5543537139892578, 1.5408658981323242, 1.5274187326431274, 1.5140132904052734, 1.5006508827209473, 1.4873325824737549, 1.4740595817565918, 1.4608330726623535, 1.447654366493225, 1.4345247745513916, 1.4214457273483276, 1.4084184169769287, 1.395444631576538, 1.3825255632400513, 1.369662880897522, 1.356858253479004, 1.3441133499145508, 1.3314297199249268, 1.3188092708587646, 1.3062537908554077, 1.2937650680541992, 1.281345248222351, 1.268996238708496, 1.2567201852798462, 1.2445192337036133, 1.2323955297470093, 1.2203514575958252, 1.208389401435852, 1.1965118646621704, 1.1847212314605713, 1.1730202436447144, 1.1614116430282593, 1.1498980522155762, 1.1384825706481934, 1.12716805934906, 1.1159576177597046, 1.1048543453216553, 1.0938615798950195, 1.0829826593399048, 1.0722211599349976, 1.0615805387496948, 1.051064372062683, 1.0406765937805176, 1.0304210186004639, 1.0203016996383667, 1.0103226900100708, 1.0004881620407104, 0.9908024072647095, 0.981269896030426, 0.9718950986862183, 0.9626826047897339, 0.9536371827125549, 0.9447635412216187, 0.9360666275024414, 0.9275513887405396, 0.919222891330719, 0.9110862612724304, 0.9031466245651245, 0.8954092860221863, 0.8878795504570007, 0.8805626630783081, 0.873464047908783, 0.8665890097618103, 0.8599429726600647, 0.8535312414169312, 0.8473591804504395, 0.8414319753646851, 0.835754930973053, 0.8303331136703491, 0.8251716494560242, 0.8202753067016602, 0.8156489729881287, 0.8112971782684326, 0.807224452495575, 0.8034350275993347, 0.7999328374862671, 0.7967218160629272, 0.7938053607940674, 0.7911868095397949, 0.7888690829277039, 0.7868549227714539, 0.7851465344429016, 0.7837460041046143, 0.7826550006866455, 0.7818747758865356, 0.7814062237739563, 0.765625, 0.7657844424247742, 0.7662624716758728, 0.7670586109161377, 0.7681717872619629, 0.7696006298065186, 0.771343469619751, 0.7733980417251587, 0.7757619619369507, 0.7784324288368225, 0.7814062237739563, 0.7846799492835999, 0.7882499098777771, 0.7921119928359985, 0.7962620258331299, 0.8006954789161682, 0.8054077625274658, 0.8103939294815063, 0.8156489729881287, 0.8211677074432373, 0.826944887638092, 0.8329752087593079, 0.8392530679702759, 0.8457730412483215, 0.8525295257568359, 0.8595170378684998, 0.8667299151420593, 0.8741625547409058, 0.881809413433075, 0.8896650671958923, 0.897723913192749, 0.9059805870056152, 0.9144296646118164, 0.9230659604072571, 0.931884229183197, 0.9408793449401855, 0.9500462412834167, 0.9593800902366638, 0.9688760042190552, 0.9785292744636536, 0.9883353114128113, 0.9982895255088806, 1.0083876848220825, 1.0186253786087036, 1.0289984941482544, 1.0395029783248901, 1.0501348972320557, 1.0608903169631958, 1.071765661239624, 1.0827572345733643, 1.0938615798950195, 1.1050752401351929, 1.1163949966430664, 1.1278176307678223, 1.1393400430679321, 1.1509591341018677, 1.1626721620559692, 1.1744762659072876, 1.186368703842163, 1.1983468532562256, 1.210408091545105, 1.2225501537322998, 1.2347705364227295, 1.247066855430603, 1.259437084197998, 1.2718788385391235, 1.2843902111053467, 1.2969691753387451, 1.309613585472107, 1.322321891784668, 1.3350920677185059, 1.3479223251342773, 1.3608109951019287, 1.3737565279006958, 1.386757254600525, 1.3998116254806519, 1.412918210029602, 1.4260755777359009, 1.4392821788787842, 1.4525368213653564, 1.4658381938934326, 1.4791849851608276, 1.492576003074646, 1.5060100555419922, 1.5194860696792603, 1.5330028533935547, 1.5465593338012695, 1.5601544380187988, 1.5737873315811157, 1.5874569416046143, 1.601162314414978, 1.6149024963378906, 1.6286767721176147, 1.6424840688705444, 1.6563236713409424, 1.6701948642730713, 1.6840966939926147, 1.6980284452438354, 1.7119895219802856, 1.7259790897369385, 1.7399965524673462, 1.754041075706482, 1.7681121826171875, 1.7822091579437256, 1.7963314056396484, 1.8104784488677979, 1.824649453163147, 1.8388440608978271, 1.8530617952346802, 1.8673019409179688, 1.8815640211105347, 1.8958476781845093, 1.9101521968841553, 1.924477458000183, 1.938822627067566, 1.9531874656677246, 1.9675716161727905, 1.981974482536316, 1.9963957071304321, 2.0108349323272705, 2.025291681289673, 2.0397658348083496, 2.0542566776275635, 2.0687642097473145, 2.0832877159118652, 2.097827196121216, 2.112382173538208, 2.1269521713256836, 2.1415371894836426, 2.1269521713256836, 2.112382173538208, 2.097827196121216, 2.0832877159118652, 2.0687642097473145, 2.0542566776275635, 2.0397658348083496, 2.025291681289673, 2.0108349323272705, 1.9963957071304321, 1.981974482536316, 1.9675716161727905, 1.9531874656677246, 1.938822627067566, 1.924477458000183, 1.9101521968841553, 1.8958476781845093, 1.8815640211105347, 1.8673019409179688, 1.8530617952346802, 1.8388440608978271, 1.824649453163147, 1.8104784488677979, 1.7963314056396484, 1.7822091579437256, 1.7681121826171875, 1.754041075706482, 1.7399965524673462, 1.7259790897369385, 1.7119895219802856, 1.6980284452438354, 1.6840966939926147, 1.6701948642730713, 1.6563236713409424, 1.6424840688705444, 1.6286767721176147, 1.6149024963378906, 1.601162314414978, 1.5874569416046143, 1.5737873315811157, 1.5601544380187988, 1.5465593338012695, 1.5330028533935547, 1.5194860696792603, 1.5060100555419922, 1.492576003074646, 1.4791849851608276, 1.4658381938934326, 1.4525368213653564, 1.4392821788787842, 1.4260755777359009, 1.412918210029602, 1.3998116254806519, 1.386757254600525, 1.3737565279006958, 1.3608109951019287, 1.3479223251342773, 1.3350920677185059, 1.322321891784668, 1.309613585472107, 1.2969691753387451, 1.2843902111053467, 1.2718788385391235, 1.259437084197998, 1.247066855430603, 1.2347705364227295, 1.2225501537322998, 1.210408091545105, 1.1983468532562256, 1.186368703842163, 1.1744762659072876, 1.1626721620559692, 1.1509591341018677, 1.1393400430679321, 1.1278176307678223, 1.1163949966430664, 1.1050752401351929, 1.0938615798950195, 1.0827572345733643, 1.071765661239624, 1.0608903169631958, 1.0501348972320557, 1.0395029783248901, 1.0289984941482544, 1.0186253786087036, 1.0083876848220825, 0.9982895255088806, 0.9883353114128113, 0.9785292744636536, 0.9688760042190552, 0.9593800902366638, 0.9500462412834167, 0.9408793449401855, 0.931884229183197, 0.9230659604072571, 0.9144296646118164, 0.9059805870056152, 0.897723913192749, 0.8896650671958923, 0.881809413433075, 0.8741625547409058, 0.8667299151420593, 0.8595170378684998, 0.8525295257568359, 0.8457730412483215, 0.8392530679702759, 0.8329752087593079, 0.826944887638092, 0.8211677074432373, 0.8156489729881287, 0.8103939294815063, 0.8054077625274658, 0.8006954789161682, 0.7962620258331299, 0.7921119928359985, 0.7882499098777771, 0.7846799492835999, 0.7814062237739563, 0.7784324288368225, 0.7757619619369507, 0.7733980417251587, 0.771343469619751, 0.7696006298065186, 0.7681717872619629, 0.7670586109161377, 0.7662624716758728, 0.7657844424247742, 0.75, 0.7501627206802368, 0.7506507635116577, 0.7514634132385254, 0.7525996565818787, 0.7540580034255981, 0.7558366656303406, 0.7579333186149597, 0.7603453397750854, 0.7630696892738342, 0.7661031484603882, 0.7694420218467712, 0.7730823159217834, 0.7770197987556458, 0.78125, 0.7857682108879089, 0.7905694246292114, 0.7956485748291016, 0.8010003566741943, 0.8066193461418152, 0.8125, 0.8186366558074951, 0.8250236511230469, 0.8316552042961121, 0.8385254740715027, 0.8456286787986755, 0.8529589772224426, 0.8605105876922607, 0.8682777285575867, 0.876254677772522, 0.8844357132911682, 0.8928152918815613, 0.9013878107070923, 0.9101478457450867, 0.9190900921821594, 0.9282091856002808, 0.9375, 0.946957528591156, 0.9565767645835876, 0.9663528800010681, 0.9762812256813049, 0.9863571524620056, 0.996576189994812, 1.0069339275360107, 1.0174262523651123, 1.0280489921569824, 1.0387980937957764, 1.0496697425842285, 1.0606601238250732, 1.071765661239624, 1.0829826593399048, 1.0943078994750977, 1.1057379245758057, 1.1172693967819214, 1.1288994550704956, 1.140625, 1.1524430513381958, 1.1643508672714233, 1.1763455867767334, 1.188424825668335, 1.2005858421325684, 1.212826132774353, 1.2251434326171875, 1.2375354766845703, 1.25, 1.2625348567962646, 1.2751379013061523, 1.2878071069717407, 1.300540804862976, 1.313336730003357, 1.3261934518814087, 1.339108943939209, 1.3520817756652832, 1.3651100397109985, 1.3781923055648804, 1.3913270235061646, 1.4045127630233765, 1.4177480936050415, 1.431031584739685, 1.4443620443344116, 1.457737922668457, 1.4711582660675049, 1.4846216440200806, 1.4981271028518677, 1.5116733312606812, 1.5252593755722046, 1.5388840436935425, 1.5525463819503784, 1.5662455558776855, 1.5799803733825684, 1.59375, 1.6075536012649536, 1.6213902235031128, 1.6352590322494507, 1.64915931224823, 1.6630902290344238, 1.6770509481430054, 1.6910408735275269, 1.7050590515136719, 1.7191051244735718, 1.7331780195236206, 1.7472774982452393, 1.7614026069641113, 1.7755528688430786, 1.7897276878356934, 1.8039263486862183, 1.8181484937667847, 1.8323935270309448, 1.846660852432251, 1.860949993133545, 1.875260353088379, 1.8895916938781738, 1.9039433002471924, 1.918314814567566, 1.9327057600021362, 1.9471157789230347, 1.961544394493103, 1.975991129875183, 1.9904557466506958, 2.0049376487731934, 2.019436836242676, 2.033952474594116, 2.0484845638275146, 2.063032627105713, 2.0775961875915527, 2.092175245285034, 2.106769323348999, 2.121377944946289, 2.136000871658325, 2.121377944946289, 2.106769323348999, 2.092175245285034, 2.0775961875915527, 2.063032627105713, 2.0484845638275146, 2.033952474594116, 2.019436836242676, 2.0049376487731934, 1.9904557466506958, 1.975991129875183, 1.961544394493103, 1.9471157789230347, 1.9327057600021362, 1.918314814567566, 1.9039433002471924, 1.8895916938781738, 1.875260353088379, 1.860949993133545, 1.846660852432251, 1.8323935270309448, 1.8181484937667847, 1.8039263486862183, 1.7897276878356934, 1.7755528688430786, 1.7614026069641113, 1.7472774982452393, 1.7331780195236206, 1.7191051244735718, 1.7050590515136719, 1.6910408735275269, 1.6770509481430054, 1.6630902290344238, 1.64915931224823, 1.6352590322494507, 1.6213902235031128, 1.6075536012649536, 1.59375, 1.5799803733825684, 1.5662455558776855, 1.5525463819503784, 1.5388840436935425, 1.5252593755722046, 1.5116733312606812, 1.4981271028518677, 1.4846216440200806, 1.4711582660675049, 1.457737922668457, 1.4443620443344116, 1.431031584739685, 1.4177480936050415, 1.4045127630233765, 1.3913270235061646, 1.3781923055648804, 1.3651100397109985, 1.3520817756652832, 1.339108943939209, 1.3261934518814087, 1.313336730003357, 1.300540804862976, 1.2878071069717407, 1.2751379013061523, 1.2625348567962646, 1.25, 1.2375354766845703, 1.2251434326171875, 1.212826132774353, 1.2005858421325684, 1.188424825668335, 1.1763455867767334, 1.1643508672714233, 1.1524430513381958, 1.140625, 1.1288994550704956, 1.1172693967819214, 1.1057379245758057, 1.0943078994750977, 1.0829826593399048, 1.071765661239624, 1.0606601238250732, 1.0496697425842285, 1.0387980937957764, 1.0280489921569824, 1.0174262523651123, 1.0069339275360107, 0.996576189994812, 0.9863571524620056, 0.9762812256813049, 0.9663528800010681, 0.9565767645835876, 0.946957528591156, 0.9375, 0.9282091856002808, 0.9190900921821594, 0.9101478457450867, 0.9013878107070923, 0.8928152918815613, 0.8844357132911682, 0.876254677772522, 0.8682777285575867, 0.8605105876922607, 0.8529589772224426, 0.8456286787986755, 0.8385254740715027, 0.8316552042961121, 0.8250236511230469, 0.8186366558074951, 0.8125, 0.8066193461418152, 0.8010003566741943, 0.7956485748291016, 0.7905694246292114, 0.7857682108879089, 0.78125, 0.7770197987556458, 0.7730823159217834, 0.7694420218467712, 0.7661031484603882, 0.7630696892738342, 0.7603453397750854, 0.7579333186149597, 0.7558366656303406, 0.7540580034255981, 0.7525996565818787, 0.7514634132385254, 0.7506507635116577, 0.7501627206802368, 0.734375, 0.7345411777496338, 0.7350395917892456, 0.7358694672584534, 0.7370297908782959, 0.7385188937187195, 0.7403348684310913, 0.7424752712249756, 0.7449373602867126, 0.7477178573608398, 0.750813364982605, 0.7542198896408081, 0.7579333186149597, 0.7619490623474121, 0.7662624716758728, 0.7708685398101807, 0.7757619619369507, 0.7809374332427979, 0.7863893508911133, 0.7921119928359985, 0.7980995774269104, 0.8043460845947266, 0.810845673084259, 0.817592203617096, 0.824579656124115, 0.8318019509315491, 0.8392530679702759, 0.8469268679618835, 0.8548174500465393, 0.8629188537597656, 0.871225118637085, 0.8797305226325989, 0.8884292840957642, 0.8973158597946167, 0.9063847064971924, 0.9156303405761719, 0.9250475168228149, 0.9346310496330261, 0.9443758130073547, 0.954276978969574, 0.9643296599388123, 0.9745291471481323, 0.9848709106445312, 0.9953505396842957, 1.005963683128357, 1.016706109046936, 1.0275739431381226, 1.0385631322860718, 1.0496697425842285, 1.0608903169631958, 1.0722211599349976, 1.0836588144302368, 1.0951999425888062, 1.1068413257598877, 1.1185797452926636, 1.1304123401641846, 1.1423360109329224, 1.1543481349945068, 1.1664457321166992, 1.1786264181137085, 1.190887451171875, 1.2032264471054077, 1.2156410217285156, 1.2281290292739868, 1.2406879663467407, 1.2533159255981445, 1.2660107612609863, 1.2787704467773438, 1.2915931940078735, 1.3044769763946533, 1.3174201250076294, 1.3304208517074585, 1.343477487564087, 1.356588363647461, 1.369752049446106, 1.3829669952392578, 1.3962316513061523, 1.4095447063446045, 1.4229048490524292, 1.4363106489181519, 1.449760913848877, 1.4632543325424194, 1.4767898321151733, 1.4903662204742432, 1.5039823055267334, 1.5176372528076172, 1.5313297510147095, 1.5450589656829834, 1.558823823928833, 1.5726234912872314, 1.5864570140838623, 1.6003234386444092, 1.6142220497131348, 1.6281520128250122, 1.642112374305725, 1.6561025381088257, 1.6701217889785767, 1.6841691732406616, 1.6982440948486328, 1.712346076965332, 1.7264741659164429, 1.7406277656555176, 1.754806399345398, 1.7690094709396362, 1.7832362651824951, 1.7974863052368164, 1.8117589950561523, 1.8260538578033447, 1.8403702974319458, 1.854707956314087, 1.8690661191940308, 1.8834445476531982, 1.8978426456451416, 1.9122599363327026, 1.9266961812973022, 1.9411507844924927, 1.9556233882904053, 1.9701136350631714, 1.9846210479736328, 1.999145269393921, 2.013686180114746, 2.028243064880371, 2.042815685272217, 2.057403802871704, 2.072006940841675, 2.086625099182129, 2.101257562637329, 2.1159043312072754, 2.1305649280548096, 2.1159043312072754, 2.101257562637329, 2.086625099182129, 2.072006940841675, 2.057403802871704, 2.042815685272217, 2.028243064880371, 2.013686180114746, 1.999145269393921, 1.9846210479736328, 1.9701136350631714, 1.9556233882904053, 1.9411507844924927, 1.9266961812973022, 1.9122599363327026, 1.8978426456451416, 1.8834445476531982, 1.8690661191940308, 1.854707956314087, 1.8403702974319458, 1.8260538578033447, 1.8117589950561523, 1.7974863052368164, 1.7832362651824951, 1.7690094709396362, 1.754806399345398, 1.7406277656555176, 1.7264741659164429, 1.712346076965332, 1.6982440948486328, 1.6841691732406616, 1.6701217889785767, 1.6561025381088257, 1.642112374305725, 1.6281520128250122, 1.6142220497131348, 1.6003234386444092, 1.5864570140838623, 1.5726234912872314, 1.558823823928833, 1.5450589656829834, 1.5313297510147095, 1.5176372528076172, 1.5039823055267334, 1.4903662204742432, 1.4767898321151733, 1.4632543325424194, 1.449760913848877, 1.4363106489181519, 1.4229048490524292, 1.4095447063446045, 1.3962316513061523, 1.3829669952392578, 1.369752049446106, 1.356588363647461, 1.343477487564087, 1.3304208517074585, 1.3174201250076294, 1.3044769763946533, 1.2915931940078735, 1.2787704467773438, 1.2660107612609863, 1.2533159255981445, 1.2406879663467407, 1.2281290292739868, 1.2156410217285156, 1.2032264471054077, 1.190887451171875, 1.1786264181137085, 1.1664457321166992, 1.1543481349945068, 1.1423360109329224, 1.1304123401641846, 1.1185797452926636, 1.1068413257598877, 1.0951999425888062, 1.0836588144302368, 1.0722211599349976, 1.0608903169631958, 1.0496697425842285, 1.0385631322860718, 1.0275739431381226, 1.016706109046936, 1.005963683128357, 0.9953505396842957, 0.9848709106445312, 0.9745291471481323, 0.9643296599388123, 0.954276978969574, 0.9443758130073547, 0.9346310496330261, 0.9250475168228149, 0.9156303405761719, 0.9063847064971924, 0.8973158597946167, 0.8884292840957642, 0.8797305226325989, 0.871225118637085, 0.8629188537597656, 0.8548174500465393, 0.8469268679618835, 0.8392530679702759, 0.8318019509315491, 0.824579656124115, 0.817592203617096, 0.810845673084259, 0.8043460845947266, 0.7980995774269104, 0.7921119928359985, 0.7863893508911133, 0.7809374332427979, 0.7757619619369507, 0.7708685398101807, 0.7662624716758728, 0.7619490623474121, 0.7579333186149597, 0.7542198896408081, 0.750813364982605, 0.7477178573608398, 0.7449373602867126, 0.7424752712249756, 0.7403348684310913, 0.7385188937187195, 0.7370297908782959, 0.7358694672584534, 0.7350395917892456, 0.7345411777496338, 0.71875, 0.7189198136329651, 0.7194290161132812, 0.7202768921852112, 0.7214622497558594, 0.7229834794998169, 0.7248383164405823, 0.7270243763923645, 0.72953861951828, 0.7323775887489319, 0.7355376482009888, 0.7390146255493164, 0.7428039908409119, 0.7469011545181274, 0.7513009309768677, 0.7559981346130371, 0.7609872221946716, 0.7662624716758728, 0.7718180418014526, 0.7776479721069336, 0.7837460041046143, 0.7901060581207275, 0.7967218160629272, 0.8035869002342224, 0.8106951117515564, 0.8180400133132935, 0.8256152868270874, 0.8334147334098816, 0.8414319753646851, 0.8496609926223755, 0.858095645904541, 0.8667299151420593, 0.8755578398704529, 0.884573757648468, 0.8937718272209167, 0.9031466245651245, 0.9126926064491272, 0.9224045276641846, 0.9322771430015564, 0.9423053860664368, 0.9524844288825989, 0.9628093838691711, 0.9732757210731506, 0.9838788509368896, 0.9946144223213196, 1.0054781436920166, 1.0164660215377808, 1.0275739431381226, 1.0387980937957764, 1.0501348972320557, 1.0615805387496948, 1.0731315612792969, 1.0847846269607544, 1.096536636352539, 1.1083842515945435, 1.1203244924545288, 1.1323543787002563, 1.144471287727356, 1.1566722393035889, 1.1689547300338745, 1.1813161373138428, 1.1937540769577026, 1.206266164779663, 1.2188501358032227, 1.2315037250518799, 1.2442249059677124, 1.2570115327835083, 1.2698616981506348, 1.282773494720459, 1.2957450151443481, 1.308774471282959, 1.3218601942062378, 1.3350006341934204, 1.3481940031051636, 1.3614387512207031, 1.3747336864471436, 1.3880770206451416, 1.4014675617218018, 1.4149038791656494, 1.428384780883789, 1.4419089555740356, 1.4554752111434937, 1.4690823554992676, 1.4827293157577515, 1.4964150190353394, 1.5101382732391357, 1.5238981246948242, 1.537693738937378, 1.5515239238739014, 1.5653879642486572, 1.5792847871780396, 1.5932137966156006, 1.6071738004684448, 1.621164321899414, 1.635184407234192, 1.649233341217041, 1.6633104085922241, 1.677414894104004, 1.691546082496643, 1.7057033777236938, 1.7198859453201294, 1.734093427658081, 1.7483251094818115, 1.762580394744873, 1.7768585681915283, 1.7911593914031982, 1.8054821491241455, 1.8198262453079224, 1.8341913223266602, 1.8485767841339111, 1.8629822731018066, 1.8774073123931885, 1.8918513059616089, 1.9063140153884888, 1.92079496383667, 1.9352935552597046, 1.9498096704483032, 1.9643428325653076, 1.9788925647735596, 1.9934585094451904, 2.008040428161621, 2.0226380825042725, 2.0372507572174072, 2.0518784523010254, 2.0665206909179688, 2.081177234649658, 2.0958478450775146, 2.11053204536438, 2.125229835510254, 2.11053204536438, 2.0958478450775146, 2.081177234649658, 2.0665206909179688, 2.0518784523010254, 2.0372507572174072, 2.0226380825042725, 2.008040428161621, 1.9934585094451904, 1.9788925647735596, 1.9643428325653076, 1.9498096704483032, 1.9352935552597046, 1.92079496383667, 1.9063140153884888, 1.8918513059616089, 1.8774073123931885, 1.8629822731018066, 1.8485767841339111, 1.8341913223266602, 1.8198262453079224, 1.8054821491241455, 1.7911593914031982, 1.7768585681915283, 1.762580394744873, 1.7483251094818115, 1.734093427658081, 1.7198859453201294, 1.7057033777236938, 1.691546082496643, 1.677414894104004, 1.6633104085922241, 1.649233341217041, 1.635184407234192, 1.621164321899414, 1.6071738004684448, 1.5932137966156006, 1.5792847871780396, 1.5653879642486572, 1.5515239238739014, 1.537693738937378, 1.5238981246948242, 1.5101382732391357, 1.4964150190353394, 1.4827293157577515, 1.4690823554992676, 1.4554752111434937, 1.4419089555740356, 1.428384780883789, 1.4149038791656494, 1.4014675617218018, 1.3880770206451416, 1.3747336864471436, 1.3614387512207031, 1.3481940031051636, 1.3350006341934204, 1.3218601942062378, 1.308774471282959, 1.2957450151443481, 1.282773494720459, 1.2698616981506348, 1.2570115327835083, 1.2442249059677124, 1.2315037250518799, 1.2188501358032227, 1.206266164779663, 1.1937540769577026, 1.1813161373138428, 1.1689547300338745, 1.1566722393035889, 1.144471287727356, 1.1323543787002563, 1.1203244924545288, 1.1083842515945435, 1.096536636352539, 1.0847846269607544, 1.0731315612792969, 1.0615805387496948, 1.0501348972320557, 1.0387980937957764, 1.0275739431381226, 1.0164660215377808, 1.0054781436920166, 0.9946144223213196, 0.9838788509368896, 0.9732757210731506, 0.9628093838691711, 0.9524844288825989, 0.9423053860664368, 0.9322771430015564, 0.9224045276641846, 0.9126926064491272, 0.9031466245651245, 0.8937718272209167, 0.884573757648468, 0.8755578398704529, 0.8667299151420593, 0.858095645904541, 0.8496609926223755, 0.8414319753646851, 0.8334147334098816, 0.8256152868270874, 0.8180400133132935, 0.8106951117515564, 0.8035869002342224, 0.7967218160629272, 0.7901060581207275, 0.7837460041046143, 0.7776479721069336, 0.7718180418014526, 0.7662624716758728, 0.7609872221946716, 0.7559981346130371, 0.7513009309768677, 0.7469011545181274, 0.7428039908409119, 0.7390146255493164, 0.7355376482009888, 0.7323775887489319, 0.72953861951828, 0.7270243763923645, 0.7248383164405823, 0.7229834794998169, 0.7214622497558594, 0.7202768921852112, 0.7194290161132812, 0.7189198136329651, 0.703125, 0.7032985687255859, 0.7038190960884094, 0.7046857476234436, 0.705897331237793, 0.7074519395828247, 0.7093474864959717, 0.7115811109542847, 0.7141496539115906, 0.7170495986938477, 0.7202768921852112, 0.7238271832466125, 0.7276957035064697, 0.7318773865699768, 0.7363669872283936, 0.7411588430404663, 0.7462471127510071, 0.7516258358955383, 0.7572888135910034, 0.7632296681404114, 0.7694420218467712, 0.7759193181991577, 0.7826550006866455, 0.7896423935890198, 0.796875, 0.8043460845947266, 0.812049150466919, 0.8199775815010071, 0.828125, 0.8364849090576172, 0.845051109790802, 0.8538172841072083, 0.8627773523330688, 0.871925413608551, 0.881255567073822, 0.8907620310783386, 0.9004393219947815, 0.9102819561958313, 0.920284628868103, 0.9304421544075012, 0.9407495856285095, 0.9512019753456116, 0.9617946147918701, 0.9725229144096375, 0.9833824634552002, 0.9943689107894897, 1.0054781436920166, 1.016706109046936, 1.0280489921569824, 1.0395029783248901, 1.051064372062683, 1.0627297163009644, 1.0744956731796265, 1.086358904838562, 1.0983163118362427, 1.1103649139404297, 1.1225016117095947, 1.1347235441207886, 1.1470282077789307, 1.1594128608703613, 1.171875, 1.1844121217727661, 1.1970218420028687, 1.2097020149230957, 1.2224502563476562, 1.2352646589279175, 1.248143196105957, 1.261083722114563, 1.2740843296051025, 1.2871434688568115, 1.3002591133117676, 1.3134297132492065, 1.3266535997390747, 1.3399291038513184, 1.3532549142837524, 1.3666293621063232, 1.3800511360168457, 1.3935188055038452, 1.4070310592651367, 1.4205865859985352, 1.4341843128204346, 1.4478230476379395, 1.4615013599395752, 1.475218415260315, 1.4889731407165527, 1.502764344215393, 1.516591191291809, 1.5304526090621948, 1.5443476438522339, 1.558275580406189, 1.572235345840454, 1.5862261056900024, 1.6002471446990967, 1.6142977476119995, 1.628376841545105, 1.6424840688705444, 1.6566184759140015, 1.6707794666290283, 1.6849663257598877, 1.6991783380508423, 1.7134150266647339, 1.7276756763458252, 1.741959810256958, 1.756266713142395, 1.770595908164978, 1.7849467992782593, 1.7993190288543701, 1.8137118816375732, 1.828125, 1.8425579071044922, 1.857010006904602, 1.8714810609817505, 1.8859704732894897, 1.9004778861999512, 1.9150029420852661, 1.9295451641082764, 1.9441041946411133, 1.9586795568466187, 1.973271131515503, 1.9878783226013184, 2.0025007724761963, 2.0171384811401367, 2.0317907333374023, 2.046457529067993, 2.061138391494751, 2.0758328437805176, 2.090540885925293, 2.105262279510498, 2.1199963092803955, 2.105262279510498, 2.090540885925293, 2.0758328437805176, 2.061138391494751, 2.046457529067993, 2.0317907333374023, 2.0171384811401367, 2.0025007724761963, 1.9878783226013184, 1.973271131515503, 1.9586795568466187, 1.9441041946411133, 1.9295451641082764, 1.9150029420852661, 1.9004778861999512, 1.8859704732894897, 1.8714810609817505, 1.857010006904602, 1.8425579071044922, 1.828125, 1.8137118816375732, 1.7993190288543701, 1.7849467992782593, 1.770595908164978, 1.756266713142395, 1.741959810256958, 1.7276756763458252, 1.7134150266647339, 1.6991783380508423, 1.6849663257598877, 1.6707794666290283, 1.6566184759140015, 1.6424840688705444, 1.628376841545105, 1.6142977476119995, 1.6002471446990967, 1.5862261056900024, 1.572235345840454, 1.558275580406189, 1.5443476438522339, 1.5304526090621948, 1.516591191291809, 1.502764344215393, 1.4889731407165527, 1.475218415260315, 1.4615013599395752, 1.4478230476379395, 1.4341843128204346, 1.4205865859985352, 1.4070310592651367, 1.3935188055038452, 1.3800511360168457, 1.3666293621063232, 1.3532549142837524, 1.3399291038513184, 1.3266535997390747, 1.3134297132492065, 1.3002591133117676, 1.2871434688568115, 1.2740843296051025, 1.261083722114563, 1.248143196105957, 1.2352646589279175, 1.2224502563476562, 1.2097020149230957, 1.1970218420028687, 1.1844121217727661, 1.171875, 1.1594128608703613, 1.1470282077789307, 1.1347235441207886, 1.1225016117095947, 1.1103649139404297, 1.0983163118362427, 1.086358904838562, 1.0744956731796265, 1.0627297163009644, 1.051064372062683, 1.0395029783248901, 1.0280489921569824, 1.016706109046936, 1.0054781436920166, 0.9943689107894897, 0.9833824634552002, 0.9725229144096375, 0.9617946147918701, 0.9512019753456116, 0.9407495856285095, 0.9304421544075012, 0.920284628868103, 0.9102819561958313, 0.9004393219947815, 0.8907620310783386, 0.881255567073822, 0.871925413608551, 0.8627773523330688, 0.8538172841072083, 0.845051109790802, 0.8364849090576172, 0.828125, 0.8199775815010071, 0.812049150466919, 0.8043460845947266, 0.796875, 0.7896423935890198, 0.7826550006866455, 0.7759193181991577, 0.7694420218467712, 0.7632296681404114, 0.7572888135910034, 0.7516258358955383, 0.7462471127510071, 0.7411588430404663, 0.7363669872283936, 0.7318773865699768, 0.7276957035064697, 0.7238271832466125, 0.7202768921852112, 0.7170495986938477, 0.7141496539115906, 0.7115811109542847, 0.7093474864959717, 0.7074519395828247, 0.705897331237793, 0.7046857476234436, 0.7038190960884094, 0.7032985687255859, 0.6875, 0.6876775622367859, 0.6882098317146301, 0.6890961527824402, 0.6903350353240967, 0.6919246912002563, 0.6938626170158386, 0.6961458921432495, 0.6987712383270264, 0.701734721660614, 0.7050321102142334, 0.708658754825592, 0.7126096487045288, 0.7168793678283691, 0.7214622497558594, 0.7263524532318115, 0.7315437197685242, 0.7370297908782959, 0.7428039908409119, 0.7488598227500916, 0.755190372467041, 0.7617888450622559, 0.7686483860015869, 0.7757619619369507, 0.7831227779388428, 0.7907238006591797, 0.7985582947731018, 0.8066193461418152, 0.814900279045105, 0.8233945369720459, 0.8320954442024231, 0.8409966826438904, 0.8500919342041016, 0.859375, 0.8688399195671082, 0.8784807920455933, 0.8882918953895569, 0.8982676267623901, 0.9084026217460632, 0.9186915159225464, 0.9291293025016785, 0.9397109150886536, 0.9504316449165344, 0.9612867832183838, 0.9722718000411987, 0.9833824634552002, 0.9946144223213196, 1.005963683128357, 1.0174262523651123, 1.0289984941482544, 1.0406765937805176, 1.0524570941925049, 1.0643366575241089, 1.0763118267059326, 1.0883796215057373, 1.1005369424819946, 1.1127808094024658, 1.1251084804534912, 1.1375172138214111, 1.150004267692566, 1.1625672578811646, 1.175203561782837, 1.1879111528396606, 1.2006874084472656, 1.2135305404663086, 1.226438045501709, 1.239408254623413, 1.252439022064209, 1.2655285596847534, 1.2786749601364136, 1.2918766736984253, 1.3051317930221558, 1.3184388875961304, 1.331796407699585, 1.3452026844024658, 1.358656406402588, 1.3721561431884766, 1.3857005834579468, 1.399288296699524, 1.412918210029602, 1.426589012145996, 1.4402996301651, 1.454048752784729, 1.467835545539856, 1.481658697128296, 1.495517373085022, 1.5094106197357178, 1.5233373641967773, 1.5372967720031738, 1.5512878894805908, 1.565310001373291, 1.579362154006958, 1.5934436321258545, 1.6075536012649536, 1.621691346168518, 1.6358561515808105, 1.6500473022460938, 1.66426420211792, 1.6785061359405518, 1.692772388458252, 1.7070624828338623, 1.721375823020935, 1.7357118129730225, 1.7500697374343872, 1.7644492387771606, 1.7788498401641846, 1.7932708263397217, 1.8077118396759033, 1.8221725225448608, 1.836652159690857, 1.851150393486023, 1.8656668663024902, 1.8802011013031006, 1.8947527408599854, 1.9093213081359863, 1.9239064455032349, 1.9385077953338623, 1.953125, 1.9677577018737793, 1.9824055433273315, 1.997068166732788, 2.0117452144622803, 2.0264365673065186, 2.0411417484283447, 2.0558605194091797, 2.0705926418304443, 2.0853376388549805, 2.100095272064209, 2.11486554145813, 2.100095272064209, 2.0853376388549805, 2.0705926418304443, 2.0558605194091797, 2.0411417484283447, 2.0264365673065186, 2.0117452144622803, 1.997068166732788, 1.9824055433273315, 1.9677577018737793, 1.953125, 1.9385077953338623, 1.9239064455032349, 1.9093213081359863, 1.8947527408599854, 1.8802011013031006, 1.8656668663024902, 1.851150393486023, 1.836652159690857, 1.8221725225448608, 1.8077118396759033, 1.7932708263397217, 1.7788498401641846, 1.7644492387771606, 1.7500697374343872, 1.7357118129730225, 1.721375823020935, 1.7070624828338623, 1.692772388458252, 1.6785061359405518, 1.66426420211792, 1.6500473022460938, 1.6358561515808105, 1.621691346168518, 1.6075536012649536, 1.5934436321258545, 1.579362154006958, 1.565310001373291, 1.5512878894805908, 1.5372967720031738, 1.5233373641967773, 1.5094106197357178, 1.495517373085022, 1.481658697128296, 1.467835545539856, 1.454048752784729, 1.4402996301651, 1.426589012145996, 1.412918210029602, 1.399288296699524, 1.3857005834579468, 1.3721561431884766, 1.358656406402588, 1.3452026844024658, 1.331796407699585, 1.3184388875961304, 1.3051317930221558, 1.2918766736984253, 1.2786749601364136, 1.2655285596847534, 1.252439022064209, 1.239408254623413, 1.226438045501709, 1.2135305404663086, 1.2006874084472656, 1.1879111528396606, 1.175203561782837, 1.1625672578811646, 1.150004267692566, 1.1375172138214111, 1.1251084804534912, 1.1127808094024658, 1.1005369424819946, 1.0883796215057373, 1.0763118267059326, 1.0643366575241089, 1.0524570941925049, 1.0406765937805176, 1.0289984941482544, 1.0174262523651123, 1.005963683128357, 0.9946144223213196, 0.9833824634552002, 0.9722718000411987, 0.9612867832183838, 0.9504316449165344, 0.9397109150886536, 0.9291293025016785, 0.9186915159225464, 0.9084026217460632, 0.8982676267623901, 0.8882918953895569, 0.8784807920455933, 0.8688399195671082, 0.859375, 0.8500919342041016, 0.8409966826438904, 0.8320954442024231, 0.8233945369720459, 0.814900279045105, 0.8066193461418152, 0.7985582947731018, 0.7907238006591797, 0.7831227779388428, 0.7757619619369507, 0.7686483860015869, 0.7617888450622559, 0.755190372467041, 0.7488598227500916, 0.7428039908409119, 0.7370297908782959, 0.7315437197685242, 0.7263524532318115, 0.7214622497558594, 0.7168793678283691, 0.7126096487045288, 0.708658754825592, 0.7050321102142334, 0.701734721660614, 0.6987712383270264, 0.6961458921432495, 0.6938626170158386, 0.6919246912002563, 0.6903350353240967, 0.6890961527824402, 0.6882098317146301, 0.6876775622367859, 0.671875, 0.6720566749572754, 0.6726013422012329, 0.6735081672668457, 0.6747757196426392, 0.6764019131660461, 0.6783841848373413, 0.6807193756103516, 0.6834039688110352, 0.6864338517189026, 0.6898043751716614, 0.6935106515884399, 0.6975473165512085, 0.7019086480140686, 0.7065886855125427, 0.7115811109542847, 0.7168793678283691, 0.7224767804145813, 0.7283663749694824, 0.7345411777496338, 0.7409940958023071, 0.7477178573608398, 0.7547053098678589, 0.7619490623474121, 0.7694420218467712, 0.7771768569946289, 0.7851465344429016, 0.7933439016342163, 0.8017619848251343, 0.8103939294815063, 0.8192329406738281, 0.8282724022865295, 0.8375058174133301, 0.8469268679618835, 0.8565293550491333, 0.866307258605957, 0.876254677772522, 0.8863658905029297, 0.8966354131698608, 0.9070578217506409, 0.9176279306411743, 0.9283406734466553, 0.9391911625862122, 0.9501747488975525, 0.9612867832183838, 0.9725229144096375, 0.9838788509368896, 0.9953505396842957, 1.0069339275360107, 1.0186253786087036, 1.0304210186004639, 1.042317509651184, 1.0543112754821777, 1.066399097442627, 1.0785777568817139, 1.0908443927764893, 1.1031957864761353, 1.1156294345855713, 1.1281423568725586, 1.1407320499420166, 1.1533960103988647, 1.1661317348480225, 1.1789370775222778, 1.1918096542358398, 1.2047473192214966, 1.2177479267120361, 1.2308096885681152, 1.2439305782318115, 1.2571086883544922, 1.270342230796814, 1.2836296558380127, 1.2969691753387451, 1.3103591203689575, 1.3237980604171753, 1.3372845649719238, 1.3508172035217285, 1.3643944263458252, 1.378015160560608, 1.391677975654602, 1.405381679534912, 1.4191250801086426, 1.4329071044921875, 1.4467265605926514, 1.4605823755264282, 1.4744735956192017, 1.4883991479873657, 1.5023581981658936, 1.5163496732711792, 1.5303728580474854, 1.544426679611206, 1.5585105419158936, 1.5726234912872314, 1.5867646932601929, 1.60093355178833, 1.6151292324066162, 1.6293511390686035, 1.6435984373092651, 1.6578706502914429, 1.6721670627593994, 1.6864869594573975, 1.7008298635482788, 1.7151951789855957, 1.7295823097229004, 1.7439907789230347, 1.7584199905395508, 1.77286958694458, 1.7873388528823853, 1.8018274307250977, 1.816334843635559, 1.8308606147766113, 1.8454045057296753, 1.8599658012390137, 1.8745442628860474, 1.8891394138336182, 1.9037508964538574, 1.918378472328186, 1.9330215454101562, 1.947679877281189, 1.962353229522705, 1.9770411252975464, 1.9917432069778442, 2.0064592361450195, 2.021188974380493, 2.0359320640563965, 2.0506882667541504, 2.0654571056365967, 2.0802385807037354, 2.095032215118408, 2.1098380088806152, 2.095032215118408, 2.0802385807037354, 2.0654571056365967, 2.0506882667541504, 2.0359320640563965, 2.021188974380493, 2.0064592361450195, 1.9917432069778442, 1.9770411252975464, 1.962353229522705, 1.947679877281189, 1.9330215454101562, 1.918378472328186, 1.9037508964538574, 1.8891394138336182, 1.8745442628860474, 1.8599658012390137, 1.8454045057296753, 1.8308606147766113, 1.816334843635559, 1.8018274307250977, 1.7873388528823853, 1.77286958694458, 1.7584199905395508, 1.7439907789230347, 1.7295823097229004, 1.7151951789855957, 1.7008298635482788, 1.6864869594573975, 1.6721670627593994, 1.6578706502914429, 1.6435984373092651, 1.6293511390686035, 1.6151292324066162, 1.60093355178833, 1.5867646932601929, 1.5726234912872314, 1.5585105419158936, 1.544426679611206, 1.5303728580474854, 1.5163496732711792, 1.5023581981658936, 1.4883991479873657, 1.4744735956192017, 1.4605823755264282, 1.4467265605926514, 1.4329071044921875, 1.4191250801086426, 1.405381679534912, 1.391677975654602, 1.378015160560608, 1.3643944263458252, 1.3508172035217285, 1.3372845649719238, 1.3237980604171753, 1.3103591203689575, 1.2969691753387451, 1.2836296558380127, 1.270342230796814, 1.2571086883544922, 1.2439305782318115, 1.2308096885681152, 1.2177479267120361, 1.2047473192214966, 1.1918096542358398, 1.1789370775222778, 1.1661317348480225, 1.1533960103988647, 1.1407320499420166, 1.1281423568725586, 1.1156294345855713, 1.1031957864761353, 1.0908443927764893, 1.0785777568817139, 1.066399097442627, 1.0543112754821777, 1.042317509651184, 1.0304210186004639, 1.0186253786087036, 1.0069339275360107, 0.9953505396842957, 0.9838788509368896, 0.9725229144096375, 0.9612867832183838, 0.9501747488975525, 0.9391911625862122, 0.9283406734466553, 0.9176279306411743, 0.9070578217506409, 0.8966354131698608, 0.8863658905029297, 0.876254677772522, 0.866307258605957, 0.8565293550491333, 0.8469268679618835, 0.8375058174133301, 0.8282724022865295, 0.8192329406738281, 0.8103939294815063, 0.8017619848251343, 0.7933439016342163, 0.7851465344429016, 0.7771768569946289, 0.7694420218467712, 0.7619490623474121, 0.7547053098678589, 0.7477178573608398, 0.7409940958023071, 0.7345411777496338, 0.7283663749694824, 0.7224767804145813, 0.7168793678283691, 0.7115811109542847, 0.7065886855125427, 0.7019086480140686, 0.6975473165512085, 0.6935106515884399, 0.6898043751716614, 0.6864338517189026, 0.6834039688110352, 0.6807193756103516, 0.6783841848373413, 0.6764019131660461, 0.6747757196426392, 0.6735081672668457, 0.6726013422012329, 0.6720566749572754, 0.65625, 0.6564359664916992, 0.6569936275482178, 0.6579219698905945, 0.6592194437980652, 0.6608839631080627, 0.6629126071929932, 0.6653021574020386, 0.6680486798286438, 0.671147882938385, 0.6745947599411011, 0.6783841848373413, 0.6825103163719177, 0.686967134475708, 0.6917482614517212, 0.6968469619750977, 0.7022563815116882, 0.7079694271087646, 0.7139787077903748, 0.7202768921852112, 0.7268564701080322, 0.7337098121643066, 0.740829348564148, 0.7482075095176697, 0.7558366656303406, 0.7637093663215637, 0.7718180418014526, 0.7801554799079895, 0.7887143492698669, 0.7974874973297119, 0.8064680099487305, 0.8156489729881287, 0.8250236511230469, 0.8345856666564941, 0.8443285226821899, 0.8542460799217224, 0.8643323183059692, 0.8745813965797424, 0.8849876523017883, 0.8955456018447876, 0.90625, 0.9170956611633301, 0.9280776381492615, 0.9391911625862122, 0.9504316449165344, 0.9617946147918701, 0.9732757210731506, 0.9848709106445312, 0.996576189994812, 1.0083876848220825, 1.0203016996383667, 1.0323147773742676, 1.0444234609603882, 1.056624412536621, 1.0689144134521484, 1.081290602684021, 1.09375, 1.1062897443771362, 1.11890709400177, 1.1315995454788208, 1.144364595413208, 1.157199740409851, 1.170102834701538, 1.183071494102478, 1.1961036920547485, 1.2091972827911377, 1.2223504781723022, 1.2355611324310303, 1.248827576637268, 1.2621480226516724, 1.2755206823349, 1.288944125175476, 1.3024166822433472, 1.3159366846084595, 1.3295029401779175, 1.343113899230957, 1.3567683696746826, 1.37046480178833, 1.3842021226882935, 1.3979791402816772, 1.411794662475586, 1.425647497177124, 1.4395365715026855, 1.453460931777954, 1.4674196243286133, 1.4814114570617676, 1.4954357147216797, 1.5094914436340332, 1.5235776901245117, 1.537693738937378, 1.5518386363983154, 1.566011667251587, 1.580212116241455, 1.594439148902893, 1.6086921691894531, 1.622970461845398, 1.6372733116149902, 1.6516002416610718, 1.6659504175186157, 1.6803232431411743, 1.694718360900879, 1.7091350555419922, 1.7235727310180664, 1.738031029701233, 1.752509355545044, 1.7670072317123413, 1.7815240621566772, 1.7960596084594727, 1.8106132745742798, 1.8251845836639404, 1.8397732973098755, 1.8543788194656372, 1.869000792503357, 1.8836389780044556, 1.8982927799224854, 1.9129620790481567, 1.927646279335022, 1.9423452615737915, 1.9570585489273071, 1.9717859029769897, 1.9865268468856812, 2.001281261444092, 2.0160489082336426, 2.0308291912078857, 2.0456223487854004, 2.06042742729187, 2.075244665145874, 2.090073823928833, 2.1049141883850098, 2.090073823928833, 2.075244665145874, 2.06042742729187, 2.0456223487854004, 2.0308291912078857, 2.0160489082336426, 2.001281261444092, 1.9865268468856812, 1.9717859029769897, 1.9570585489273071, 1.9423452615737915, 1.927646279335022, 1.9129620790481567, 1.8982927799224854, 1.8836389780044556, 1.869000792503357, 1.8543788194656372, 1.8397732973098755, 1.8251845836639404, 1.8106132745742798, 1.7960596084594727, 1.7815240621566772, 1.7670072317123413, 1.752509355545044, 1.738031029701233, 1.7235727310180664, 1.7091350555419922, 1.694718360900879, 1.6803232431411743, 1.6659504175186157, 1.6516002416610718, 1.6372733116149902, 1.622970461845398, 1.6086921691894531, 1.594439148902893, 1.580212116241455, 1.566011667251587, 1.5518386363983154, 1.537693738937378, 1.5235776901245117, 1.5094914436340332, 1.4954357147216797, 1.4814114570617676, 1.4674196243286133, 1.453460931777954, 1.4395365715026855, 1.425647497177124, 1.411794662475586, 1.3979791402816772, 1.3842021226882935, 1.37046480178833, 1.3567683696746826, 1.343113899230957, 1.3295029401779175, 1.3159366846084595, 1.3024166822433472, 1.288944125175476, 1.2755206823349, 1.2621480226516724, 1.248827576637268, 1.2355611324310303, 1.2223504781723022, 1.2091972827911377, 1.1961036920547485, 1.183071494102478, 1.170102834701538, 1.157199740409851, 1.144364595413208, 1.1315995454788208, 1.11890709400177, 1.1062897443771362, 1.09375, 1.081290602684021, 1.0689144134521484, 1.056624412536621, 1.0444234609603882, 1.0323147773742676, 1.0203016996383667, 1.0083876848220825, 0.996576189994812, 0.9848709106445312, 0.9732757210731506, 0.9617946147918701, 0.9504316449165344, 0.9391911625862122, 0.9280776381492615, 0.9170956611633301, 0.90625, 0.8955456018447876, 0.8849876523017883, 0.8745813965797424, 0.8643323183059692, 0.8542460799217224, 0.8443285226821899, 0.8345856666564941, 0.8250236511230469, 0.8156489729881287, 0.8064680099487305, 0.7974874973297119, 0.7887143492698669, 0.7801554799079895, 0.7718180418014526, 0.7637093663215637, 0.7558366656303406, 0.7482075095176697, 0.740829348564148, 0.7337098121643066, 0.7268564701080322, 0.7202768921852112, 0.7139787077903748, 0.7079694271087646, 0.7022563815116882, 0.6968469619750977, 0.6917482614517212, 0.686967134475708, 0.6825103163719177, 0.6783841848373413, 0.6745947599411011, 0.671147882938385, 0.6680486798286438, 0.6653021574020386, 0.6629126071929932, 0.6608839631080627, 0.6592194437980652, 0.6579219698905945, 0.6569936275482178, 0.6564359664916992, 0.640625, 0.6408154964447021, 0.6413867473602295, 0.6423376202583313, 0.6436665654182434, 0.64537113904953, 0.6474484205245972, 0.6498948335647583, 0.6527062058448792, 0.6558778882026672, 0.6594046354293823, 0.6632807850837708, 0.6675003170967102, 0.6720566749572754, 0.6769431233406067, 0.682152509689331, 0.6876775622367859, 0.6935106515884399, 0.699644148349762, 0.7060702443122864, 0.7127808928489685, 0.7197682857513428, 0.7270243763923645, 0.7345411777496338, 0.7423108220100403, 0.7503254413604736, 0.7585772275924683, 0.7670586109161377, 0.7757619619369507, 0.7846799492835999, 0.7938053607940674, 0.803131103515625, 0.812650203704834, 0.822356104850769, 0.8322421312332153, 0.8423020243644714, 0.8525295257568359, 0.8629188537597656, 0.873464047908783, 0.8841596245765686, 0.8950002193450928, 0.9059805870056152, 0.9170956611633301, 0.9283406734466553, 0.9397109150886536, 0.9512019753456116, 0.9628093838691711, 0.9745291471481323, 0.9863571524620056, 0.9982895255088806, 1.0103226900100708, 1.0224529504776, 1.0346770286560059, 1.0469915866851807, 1.0593934059143066, 1.071879506111145, 1.0844470262527466, 1.097093105316162, 1.109815001487732, 1.122610330581665, 1.1354763507843018, 1.1484109163284302, 1.1614116430282593, 1.1744762659072876, 1.1876027584075928, 1.2007890939712524, 1.2140333652496338, 1.2273335456848145, 1.2406879663467407, 1.2540948390960693, 1.2675524950027466, 1.2810593843460083, 1.2946139574050903, 1.308214783668518, 1.3218601942062378, 1.3355491161346436, 1.3492799997329712, 1.3630517721176147, 1.3768631219863892, 1.3907127380371094, 1.404599666595459, 1.418522834777832, 1.432481050491333, 1.4464733600616455, 1.4604988098144531, 1.47455632686615, 1.4886451959609985, 1.502764344215393, 1.5169130563735962, 1.531090497970581, 1.5452959537506104, 1.5595284700393677, 1.5737873315811157, 1.5880719423294067, 1.602381706237793, 1.616715669631958, 1.6310733556747437, 1.6454541683197021, 1.6598575115203857, 1.6742826700210571, 1.6887292861938477, 1.70319664478302, 1.7176843881607056, 1.732191801071167, 1.746718406677246, 1.7612639665603638, 1.7758277654647827, 1.7904095649719238, 1.8050087690353394, 1.8196250200271606, 1.8342578411102295, 1.8489069938659668, 1.8635720014572144, 1.878252387046814, 1.8929479122161865, 1.907658338546753, 1.9223830699920654, 1.9371219873428345, 1.9518746137619019, 1.9666407108306885, 1.9814200401306152, 1.9962122440338135, 2.011017084121704, 2.025834083557129, 2.040663242340088, 2.055504322052002, 2.070356607437134, 2.0852205753326416, 2.100095272064209, 2.0852205753326416, 2.070356607437134, 2.055504322052002, 2.040663242340088, 2.025834083557129, 2.011017084121704, 1.9962122440338135, 1.9814200401306152, 1.9666407108306885, 1.9518746137619019, 1.9371219873428345, 1.9223830699920654, 1.907658338546753, 1.8929479122161865, 1.878252387046814, 1.8635720014572144, 1.8489069938659668, 1.8342578411102295, 1.8196250200271606, 1.8050087690353394, 1.7904095649719238, 1.7758277654647827, 1.7612639665603638, 1.746718406677246, 1.732191801071167, 1.7176843881607056, 1.70319664478302, 1.6887292861938477, 1.6742826700210571, 1.6598575115203857, 1.6454541683197021, 1.6310733556747437, 1.616715669631958, 1.602381706237793, 1.5880719423294067, 1.5737873315811157, 1.5595284700393677, 1.5452959537506104, 1.531090497970581, 1.5169130563735962, 1.502764344215393, 1.4886451959609985, 1.47455632686615, 1.4604988098144531, 1.4464733600616455, 1.432481050491333, 1.418522834777832, 1.404599666595459, 1.3907127380371094, 1.3768631219863892, 1.3630517721176147, 1.3492799997329712, 1.3355491161346436, 1.3218601942062378, 1.308214783668518, 1.2946139574050903, 1.2810593843460083, 1.2675524950027466, 1.2540948390960693, 1.2406879663467407, 1.2273335456848145, 1.2140333652496338, 1.2007890939712524, 1.1876027584075928, 1.1744762659072876, 1.1614116430282593, 1.1484109163284302, 1.1354763507843018, 1.122610330581665, 1.109815001487732, 1.097093105316162, 1.0844470262527466, 1.071879506111145, 1.0593934059143066, 1.0469915866851807, 1.0346770286560059, 1.0224529504776, 1.0103226900100708, 0.9982895255088806, 0.9863571524620056, 0.9745291471481323, 0.9628093838691711, 0.9512019753456116, 0.9397109150886536, 0.9283406734466553, 0.9170956611633301, 0.9059805870056152, 0.8950002193450928, 0.8841596245765686, 0.873464047908783, 0.8629188537597656, 0.8525295257568359, 0.8423020243644714, 0.8322421312332153, 0.822356104850769, 0.812650203704834, 0.803131103515625, 0.7938053607940674, 0.7846799492835999, 0.7757619619369507, 0.7670586109161377, 0.7585772275924683, 0.7503254413604736, 0.7423108220100403, 0.7345411777496338, 0.7270243763923645, 0.7197682857513428, 0.7127808928489685, 0.7060702443122864, 0.699644148349762, 0.6935106515884399, 0.6876775622367859, 0.682152509689331, 0.6769431233406067, 0.6720566749572754, 0.6675003170967102, 0.6632807850837708, 0.6594046354293823, 0.6558778882026672, 0.6527062058448792, 0.6498948335647583, 0.6474484205245972, 0.64537113904953, 0.6436665654182434, 0.6423376202583313, 0.6413867473602295, 0.6408154964447021, 0.625, 0.6251952648162842, 0.6257807612419128, 0.6267553567886353, 0.6281172037124634, 0.6298638582229614, 0.6319921612739563, 0.634498119354248, 0.6373774409294128, 0.640625, 0.6442352533340454, 0.648202121257782, 0.652519166469574, 0.6571794152259827, 0.6621756553649902, 0.6675003170967102, 0.673145592212677, 0.6791035532951355, 0.6853660345077515, 0.6919246912002563, 0.6987712383270264, 0.705897331237793, 0.713294506072998, 0.7209544777870178, 0.7288689613342285, 0.7370297908782959, 0.7454288005828857, 0.7540580034255981, 0.7629097104072571, 0.7719762325286865, 0.78125, 0.7907238006591797, 0.8003905415534973, 0.8102432489395142, 0.8202753067016602, 0.83048015832901, 0.8408514857292175, 0.8513832688331604, 0.8620696663856506, 0.8729048371315002, 0.8838834762573242, 0.8950002193450928, 0.90625, 0.9176279306411743, 0.9291293025016785, 0.9407495856285095, 0.9524844288825989, 0.9643296599388123, 0.9762812256813049, 0.9883353114128113, 1.0004881620407104, 1.0127363204956055, 1.0250762701034546, 1.0375046730041504, 1.050018548965454, 1.062614917755127, 1.0752906799316406, 1.0880430936813354, 1.1008696556091309, 1.1137677431106567, 1.126734733581543, 1.1397684812545776, 1.1528667211532593, 1.1660270690917969, 1.1792476177215576, 1.1925263404846191, 1.2058613300323486, 1.2192506790161133, 1.2326927185058594, 1.246185541152954, 1.2597277164459229, 1.2733176946640015, 1.2869538068771362, 1.3006346225738525, 1.3143588304519653, 1.328125, 1.341931939125061, 1.3557783365249634, 1.369662880897522, 1.38358473777771, 1.3975424766540527, 1.4115352630615234, 1.425561785697937, 1.4396214485168457, 1.4537129402160645, 1.467835545539856, 1.4819881916046143, 1.4961702823638916, 1.510380744934082, 1.5246189832687378, 1.5388840436935425, 1.5531753301620483, 1.5674920082092285, 1.5818334817886353, 1.5961991548538208, 1.6105881929397583, 1.625, 1.6394340991973877, 1.653889775276184, 1.6683666706085205, 1.6828639507293701, 1.6973813772201538, 1.7119182348251343, 1.7264741659164429, 1.7410485744476318, 1.755640983581543, 1.7702511548995972, 1.7848783731460571, 1.7995225191116333, 1.814182996749878, 1.8288593292236328, 1.8435513973236084, 1.858258605003357, 1.8729807138442993, 1.8877172470092773, 1.9024680852890015, 1.9172327518463135, 1.9320108890533447, 1.9468022584915161, 1.9616066217422485, 1.9764235019683838, 1.9912528991699219, 2.006094217300415, 2.0209474563598633, 2.0358121395111084, 2.0506882667541504, 2.065575361251831, 2.0804731845855713, 2.095381736755371, 2.0804731845855713, 2.065575361251831, 2.0506882667541504, 2.0358121395111084, 2.0209474563598633, 2.006094217300415, 1.9912528991699219, 1.9764235019683838, 1.9616066217422485, 1.9468022584915161, 1.9320108890533447, 1.9172327518463135, 1.9024680852890015, 1.8877172470092773, 1.8729807138442993, 1.858258605003357, 1.8435513973236084, 1.8288593292236328, 1.814182996749878, 1.7995225191116333, 1.7848783731460571, 1.7702511548995972, 1.755640983581543, 1.7410485744476318, 1.7264741659164429, 1.7119182348251343, 1.6973813772201538, 1.6828639507293701, 1.6683666706085205, 1.653889775276184, 1.6394340991973877, 1.625, 1.6105881929397583, 1.5961991548538208, 1.5818334817886353, 1.5674920082092285, 1.5531753301620483, 1.5388840436935425, 1.5246189832687378, 1.510380744934082, 1.4961702823638916, 1.4819881916046143, 1.467835545539856, 1.4537129402160645, 1.4396214485168457, 1.425561785697937, 1.4115352630615234, 1.3975424766540527, 1.38358473777771, 1.369662880897522, 1.3557783365249634, 1.341931939125061, 1.328125, 1.3143588304519653, 1.3006346225738525, 1.2869538068771362, 1.2733176946640015, 1.2597277164459229, 1.246185541152954, 1.2326927185058594, 1.2192506790161133, 1.2058613300323486, 1.1925263404846191, 1.1792476177215576, 1.1660270690917969, 1.1528667211532593, 1.1397684812545776, 1.126734733581543, 1.1137677431106567, 1.1008696556091309, 1.0880430936813354, 1.0752906799316406, 1.062614917755127, 1.050018548965454, 1.0375046730041504, 1.0250762701034546, 1.0127363204956055, 1.0004881620407104, 0.9883353114128113, 0.9762812256813049, 0.9643296599388123, 0.9524844288825989, 0.9407495856285095, 0.9291293025016785, 0.9176279306411743, 0.90625, 0.8950002193450928, 0.8838834762573242, 0.8729048371315002, 0.8620696663856506, 0.8513832688331604, 0.8408514857292175, 0.83048015832901, 0.8202753067016602, 0.8102432489395142, 0.8003905415534973, 0.7907238006591797, 0.78125, 0.7719762325286865, 0.7629097104072571, 0.7540580034255981, 0.7454288005828857, 0.7370297908782959, 0.7288689613342285, 0.7209544777870178, 0.713294506072998, 0.705897331237793, 0.6987712383270264, 0.6919246912002563, 0.6853660345077515, 0.6791035532951355, 0.673145592212677, 0.6675003170967102, 0.6621756553649902, 0.6571794152259827, 0.652519166469574, 0.648202121257782, 0.6442352533340454, 0.640625, 0.6373774409294128, 0.634498119354248, 0.6319921612739563, 0.6298638582229614, 0.6281172037124634, 0.6267553567886353, 0.6257807612419128, 0.6251952648162842, 0.609375, 0.6095752716064453, 0.6101757287979126, 0.6111752390861511, 0.6125717163085938, 0.6143625974655151, 0.6165443658828735, 0.6191129088401794, 0.622063398361206, 0.6253905296325684, 0.6290881633758545, 0.6331499814987183, 0.6375689506530762, 0.6423376202583313, 0.6474484205245972, 0.6528931856155396, 0.6586636900901794, 0.6647514700889587, 0.671147882938385, 0.6778441071510315, 0.684831440448761, 0.6921010613441467, 0.699644148349762, 0.7074519395828247, 0.7155157923698425, 0.7238271832466125, 0.7323775887489319, 0.7411588430404663, 0.7501627206802368, 0.7593814134597778, 0.7688071727752686, 0.7784324288368225, 0.7882499098777771, 0.7982524633407593, 0.8084333539009094, 0.8187857866287231, 0.8293033838272095, 0.8399800062179565, 0.8508095741271973, 0.8617863655090332, 0.8729048371315002, 0.8841596245765686, 0.8955456018447876, 0.9070578217506409, 0.9186915159225464, 0.9304421544075012, 0.9423053860664368, 0.954276978969574, 0.9663528800010681, 0.9785292744636536, 0.9908024072647095, 1.0031688213348389, 1.015625, 1.028167724609375, 1.0407938957214355, 1.0535005331039429, 1.0662846565246582, 1.0791435241699219, 1.0920746326446533, 1.1050752401351929, 1.1181432008743286, 1.1312758922576904, 1.144471287727356, 1.1577271223068237, 1.1710413694381714, 1.1844121217727661, 1.1978373527526855, 1.2113155126571655, 1.2248445749282837, 1.2384229898452759, 1.2520490884780884, 1.2657214403152466, 1.2794384956359863, 1.293198823928833, 1.3070011138916016, 1.320844054222107, 1.3347262144088745, 1.348646640777588, 1.3626039028167725, 1.3765970468521118, 1.390625, 1.404686689376831, 1.4187809228897095, 1.4329071044921875, 1.44706392288208, 1.4612507820129395, 1.4754667282104492, 1.489710807800293, 1.5039823055267334, 1.5182805061340332, 1.5326045751571655, 1.5469539165496826, 1.5613276958465576, 1.5757253170013428, 1.5901460647583008, 1.6045893430709839, 1.6190546751022339, 1.633541226387024, 1.6480486392974854, 1.6625763177871704, 1.677123785018921, 1.691690444946289, 1.7062757015228271, 1.720879316329956, 1.7355008125305176, 1.7501394748687744, 1.764795184135437, 1.7794673442840576, 1.7941555976867676, 1.8088594675064087, 1.8235787153244019, 1.8383129835128784, 1.8530617952346802, 1.8678247928619385, 1.8826017379760742, 1.8973922729492188, 1.912196159362793, 1.9270129203796387, 1.9418424367904663, 1.9566842317581177, 1.9715381860733032, 1.9864039421081543, 2.001281261444092, 2.016170024871826, 2.031069755554199, 2.045980215072632, 2.060901403427124, 2.0758328437805176, 2.0907745361328125, 2.0758328437805176, 2.060901403427124, 2.045980215072632, 2.031069755554199, 2.016170024871826, 2.001281261444092, 1.9864039421081543, 1.9715381860733032, 1.9566842317581177, 1.9418424367904663, 1.9270129203796387, 1.912196159362793, 1.8973922729492188, 1.8826017379760742, 1.8678247928619385, 1.8530617952346802, 1.8383129835128784, 1.8235787153244019, 1.8088594675064087, 1.7941555976867676, 1.7794673442840576, 1.764795184135437, 1.7501394748687744, 1.7355008125305176, 1.720879316329956, 1.7062757015228271, 1.691690444946289, 1.677123785018921, 1.6625763177871704, 1.6480486392974854, 1.633541226387024, 1.6190546751022339, 1.6045893430709839, 1.5901460647583008, 1.5757253170013428, 1.5613276958465576, 1.5469539165496826, 1.5326045751571655, 1.5182805061340332, 1.5039823055267334, 1.489710807800293, 1.4754667282104492, 1.4612507820129395, 1.44706392288208, 1.4329071044921875, 1.4187809228897095, 1.404686689376831, 1.390625, 1.3765970468521118, 1.3626039028167725, 1.348646640777588, 1.3347262144088745, 1.320844054222107, 1.3070011138916016, 1.293198823928833, 1.2794384956359863, 1.2657214403152466, 1.2520490884780884, 1.2384229898452759, 1.2248445749282837, 1.2113155126571655, 1.1978373527526855, 1.1844121217727661, 1.1710413694381714, 1.1577271223068237, 1.144471287727356, 1.1312758922576904, 1.1181432008743286, 1.1050752401351929, 1.0920746326446533, 1.0791435241699219, 1.0662846565246582, 1.0535005331039429, 1.0407938957214355, 1.028167724609375, 1.015625, 1.0031688213348389, 0.9908024072647095, 0.9785292744636536, 0.9663528800010681, 0.954276978969574, 0.9423053860664368, 0.9304421544075012, 0.9186915159225464, 0.9070578217506409, 0.8955456018447876, 0.8841596245765686, 0.8729048371315002, 0.8617863655090332, 0.8508095741271973, 0.8399800062179565, 0.8293033838272095, 0.8187857866287231, 0.8084333539009094, 0.7982524633407593, 0.7882499098777771, 0.7784324288368225, 0.7688071727752686, 0.7593814134597778, 0.7501627206802368, 0.7411588430404663, 0.7323775887489319, 0.7238271832466125, 0.7155157923698425, 0.7074519395828247, 0.699644148349762, 0.6921010613441467, 0.684831440448761, 0.6778441071510315, 0.671147882938385, 0.6647514700889587, 0.6586636900901794, 0.6528931856155396, 0.6474484205245972, 0.6423376202583313, 0.6375689506530762, 0.6331499814987183, 0.6290881633758545, 0.6253905296325684, 0.622063398361206, 0.6191129088401794, 0.6165443658828735, 0.6143625974655151, 0.6125717163085938, 0.6111752390861511, 0.6101757287979126, 0.6095752716064453, 0.59375, 0.5939555764198303, 0.5945718288421631, 0.5955974459648132, 0.5970304012298584, 0.5988677740097046, 0.6011057496070862, 0.6037399768829346, 0.6067652702331543, 0.6101757287979126, 0.6139650940895081, 0.6181262731552124, 0.6226518154144287, 0.6275339126586914, 0.6327642798423767, 0.638334333896637, 0.6442352533340454, 0.6504580974578857, 0.6569936275482178, 0.6638326644897461, 0.6709659695625305, 0.6783841848373413, 0.6860780715942383, 0.6940385103225708, 0.7022563815116882, 0.7107228636741638, 0.7194290161132812, 0.7283663749694824, 0.7375264763832092, 0.7469011545181274, 0.7564824223518372, 0.7662624716758728, 0.7762339115142822, 0.7863893508911133, 0.7967218160629272, 0.807224452495575, 0.8178907632827759, 0.8287144303321838, 0.839689314365387, 0.8508095741271973, 0.8620696663856506, 0.873464047908783, 0.8849876523017883, 0.8966354131698608, 0.9084026217460632, 0.920284628868103, 0.9322771430015564, 0.9443758130073547, 0.9565767645835876, 0.9688760042190552, 0.981269896030426, 0.9937549233436584, 1.0063276290893555, 1.0189847946166992, 1.0317233800888062, 1.044540286064148, 1.057432770729065, 1.0703980922698975, 1.0834335088729858, 1.096536636352539, 1.1097050905227661, 1.122936487197876, 1.1362286806106567, 1.1495795249938965, 1.1629871129989624, 1.1764494180679321, 1.1899645328521729, 1.2035307884216309, 1.217146396636963, 1.2308096885681152, 1.2445192337036133, 1.2582733631134033, 1.2720707654953003, 1.2859100103378296, 1.2997896671295166, 1.3137085437774658, 1.3276653289794922, 1.3416589498519897, 1.355688214302063, 1.369752049446106, 1.3838493824005127, 1.3979791402816772, 1.4121404886245728, 1.4263323545455933, 1.4405537843704224, 1.4548041820526123, 1.4690823554992676, 1.48338782787323, 1.497719645500183, 1.5120769739151, 1.5264593362808228, 1.5408658981323242, 1.5552959442138672, 1.5697487592697144, 1.584223985671997, 1.5987207889556885, 1.6132386922836304, 1.627777099609375, 1.6423354148864746, 1.656913161277771, 1.671509861946106, 1.6861250400543213, 1.7007580995559692, 1.7154086828231812, 1.7300763130187988, 1.744760513305664, 1.7594610452651978, 1.7741773128509521, 1.7889089584350586, 1.803655743598938, 1.8184170722961426, 1.8331927061080933, 1.847982406616211, 1.8627856969833374, 1.8776023387908936, 1.8924319744110107, 1.9072743654251099, 1.9221290349960327, 1.9369958639144897, 1.9518746137619019, 1.9667649269104004, 1.9816664457321167, 1.9965790510177612, 2.011502504348755, 2.0264365673065186, 2.0413808822631836, 2.05633544921875, 2.0712997913360596, 2.0862739086151123, 2.0712997913360596, 2.05633544921875, 2.0413808822631836, 2.0264365673065186, 2.011502504348755, 1.9965790510177612, 1.9816664457321167, 1.9667649269104004, 1.9518746137619019, 1.9369958639144897, 1.9221290349960327, 1.9072743654251099, 1.8924319744110107, 1.8776023387908936, 1.8627856969833374, 1.847982406616211, 1.8331927061080933, 1.8184170722961426, 1.803655743598938, 1.7889089584350586, 1.7741773128509521, 1.7594610452651978, 1.744760513305664, 1.7300763130187988, 1.7154086828231812, 1.7007580995559692, 1.6861250400543213, 1.671509861946106, 1.656913161277771, 1.6423354148864746, 1.627777099609375, 1.6132386922836304, 1.5987207889556885, 1.584223985671997, 1.5697487592697144, 1.5552959442138672, 1.5408658981323242, 1.5264593362808228, 1.5120769739151, 1.497719645500183, 1.48338782787323, 1.4690823554992676, 1.4548041820526123, 1.4405537843704224, 1.4263323545455933, 1.4121404886245728, 1.3979791402816772, 1.3838493824005127, 1.369752049446106, 1.355688214302063, 1.3416589498519897, 1.3276653289794922, 1.3137085437774658, 1.2997896671295166, 1.2859100103378296, 1.2720707654953003, 1.2582733631134033, 1.2445192337036133, 1.2308096885681152, 1.217146396636963, 1.2035307884216309, 1.1899645328521729, 1.1764494180679321, 1.1629871129989624, 1.1495795249938965, 1.1362286806106567, 1.122936487197876, 1.1097050905227661, 1.096536636352539, 1.0834335088729858, 1.0703980922698975, 1.057432770729065, 1.044540286064148, 1.0317233800888062, 1.0189847946166992, 1.0063276290893555, 0.9937549233436584, 0.981269896030426, 0.9688760042190552, 0.9565767645835876, 0.9443758130073547, 0.9322771430015564, 0.920284628868103, 0.9084026217460632, 0.8966354131698608, 0.8849876523017883, 0.873464047908783, 0.8620696663856506, 0.8508095741271973, 0.839689314365387, 0.8287144303321838, 0.8178907632827759, 0.807224452495575, 0.7967218160629272, 0.7863893508911133, 0.7762339115142822, 0.7662624716758728, 0.7564824223518372, 0.7469011545181274, 0.7375264763832092, 0.7283663749694824, 0.7194290161132812, 0.7107228636741638, 0.7022563815116882, 0.6940385103225708, 0.6860780715942383, 0.6783841848373413, 0.6709659695625305, 0.6638326644897461, 0.6569936275482178, 0.6504580974578857, 0.6442352533340454, 0.638334333896637, 0.6327642798423767, 0.6275339126586914, 0.6226518154144287, 0.6181262731552124, 0.6139650940895081, 0.6101757287979126, 0.6067652702331543, 0.6037399768829346, 0.6011057496070862, 0.5988677740097046, 0.5970304012298584, 0.5955974459648132, 0.5945718288421631, 0.5939555764198303, 0.578125, 0.5783361196517944, 0.5789690017700195, 0.5800222158432007, 0.5814935564994812, 0.5833798050880432, 0.5856770277023315, 0.5883803367614746, 0.5914841890335083, 0.5949822664260864, 0.5988677740097046, 0.6031330823898315, 0.6077703237533569, 0.6127709746360779, 0.6181262731552124, 0.6238270401954651, 0.6298638582229614, 0.6362273097038269, 0.6429075002670288, 0.6498948335647583, 0.6571794152259827, 0.6647514700889587, 0.6726013422012329, 0.6807193756103516, 0.6890961527824402, 0.697722315788269, 0.7065886855125427, 0.7156863808631897, 0.7250067591667175, 0.7345411777496338, 0.7442815899848938, 0.7542198896408081, 0.7643484473228455, 0.7746596932411194, 0.7851465344429016, 0.7958019971847534, 0.8066193461418152, 0.817592203617096, 0.8287144303321838, 0.8399800062179565, 0.8513832688331604, 0.8629188537597656, 0.8745813965797424, 0.8863658905029297, 0.8982676267623901, 0.9102819561958313, 0.9224045276641846, 0.9346310496330261, 0.946957528591156, 0.9593800902366638, 0.9718950986862183, 0.9844989776611328, 0.9971884489059448, 1.0099601745605469, 1.0228111743927002, 1.0357383489608765, 1.048738956451416, 1.0618104934692383, 1.0749499797821045, 1.0881553888320923, 1.101423978805542, 1.1147537231445312, 1.1281423568725586, 1.141587734222412, 1.1550880670547485, 1.1686413288116455, 1.1822457313537598, 1.1958996057510376, 1.2096010446548462, 1.2233487367630005, 1.2371408939361572, 1.2509762048721313, 1.2648531198501587, 1.2787704467773438, 1.292726755142212, 1.3067208528518677, 1.3207515478134155, 1.33481764793396, 1.348918080329895, 1.3630517721176147, 1.3772176504135132, 1.391414761543274, 1.4056422710418701, 1.4198989868164062, 1.4341843128204346, 1.4484972953796387, 1.4628372192382812, 1.4772030115127563, 1.4915943145751953, 1.5060100555419922, 1.5204497575759888, 1.5349127054214478, 1.5493981838226318, 1.5639055967330933, 1.5784343481063843, 1.5929838418960571, 1.6075536012649536, 1.6221429109573364, 1.636751413345337, 1.6513783931732178, 1.6660236120224, 1.6806864738464355, 1.6953665018081665, 1.7100632190704346, 1.7247763872146606, 1.739505410194397, 1.7542498111724854, 1.7690094709396362, 1.7837837934494019, 1.7985725402832031, 1.8133753538131714, 1.8281917572021484, 1.8430216312408447, 1.8578643798828125, 1.8727200031280518, 1.8875879049301147, 1.9024680852890015, 1.9173600673675537, 1.9322636127471924, 1.9471784830093384, 1.962104320526123, 1.9770411252975464, 1.9919883012771606, 2.006945848464966, 2.021913528442383, 2.036891222000122, 2.0518784523010254, 2.0668749809265137, 2.081881046295166, 2.0668749809265137, 2.0518784523010254, 2.036891222000122, 2.021913528442383, 2.006945848464966, 1.9919883012771606, 1.9770411252975464, 1.962104320526123, 1.9471784830093384, 1.9322636127471924, 1.9173600673675537, 1.9024680852890015, 1.8875879049301147, 1.8727200031280518, 1.8578643798828125, 1.8430216312408447, 1.8281917572021484, 1.8133753538131714, 1.7985725402832031, 1.7837837934494019, 1.7690094709396362, 1.7542498111724854, 1.739505410194397, 1.7247763872146606, 1.7100632190704346, 1.6953665018081665, 1.6806864738464355, 1.6660236120224, 1.6513783931732178, 1.636751413345337, 1.6221429109573364, 1.6075536012649536, 1.5929838418960571, 1.5784343481063843, 1.5639055967330933, 1.5493981838226318, 1.5349127054214478, 1.5204497575759888, 1.5060100555419922, 1.4915943145751953, 1.4772030115127563, 1.4628372192382812, 1.4484972953796387, 1.4341843128204346, 1.4198989868164062, 1.4056422710418701, 1.391414761543274, 1.3772176504135132, 1.3630517721176147, 1.348918080329895, 1.33481764793396, 1.3207515478134155, 1.3067208528518677, 1.292726755142212, 1.2787704467773438, 1.2648531198501587, 1.2509762048721313, 1.2371408939361572, 1.2233487367630005, 1.2096010446548462, 1.1958996057510376, 1.1822457313537598, 1.1686413288116455, 1.1550880670547485, 1.141587734222412, 1.1281423568725586, 1.1147537231445312, 1.101423978805542, 1.0881553888320923, 1.0749499797821045, 1.0618104934692383, 1.048738956451416, 1.0357383489608765, 1.0228111743927002, 1.0099601745605469, 0.9971884489059448, 0.9844989776611328, 0.9718950986862183, 0.9593800902366638, 0.946957528591156, 0.9346310496330261, 0.9224045276641846, 0.9102819561958313, 0.8982676267623901, 0.8863658905029297, 0.8745813965797424, 0.8629188537597656, 0.8513832688331604, 0.8399800062179565, 0.8287144303321838, 0.817592203617096, 0.8066193461418152, 0.7958019971847534, 0.7851465344429016, 0.7746596932411194, 0.7643484473228455, 0.7542198896408081, 0.7442815899848938, 0.7345411777496338, 0.7250067591667175, 0.7156863808631897, 0.7065886855125427, 0.697722315788269, 0.6890961527824402, 0.6807193756103516, 0.6726013422012329, 0.6647514700889587, 0.6571794152259827, 0.6498948335647583, 0.6429075002670288, 0.6362273097038269, 0.6298638582229614, 0.6238270401954651, 0.6181262731552124, 0.6127709746360779, 0.6077703237533569, 0.6031330823898315, 0.5988677740097046, 0.5949822664260864, 0.5914841890335083, 0.5883803367614746, 0.5856770277023315, 0.5833798050880432, 0.5814935564994812, 0.5800222158432007, 0.5789690017700195, 0.5783361196517944, 0.5625, 0.5627169609069824, 0.5633673667907715, 0.5644497275352478, 0.5659615993499756, 0.5678994059562683, 0.5702589750289917, 0.5730350017547607, 0.5762215256690979, 0.5798117518424988, 0.5837981700897217, 0.5881727933883667, 0.5929270386695862, 0.5980518460273743, 0.6035377383232117, 0.609375, 0.615553617477417, 0.622063398361206, 0.6288940906524658, 0.6360353827476501, 0.6434769034385681, 0.6512083411216736, 0.6592194437980652, 0.6675003170967102, 0.6760408878326416, 0.684831440448761, 0.6938626170158386, 0.703125, 0.7126096487045288, 0.7223077416419983, 0.7322109341621399, 0.7423108220100403, 0.7525996565818787, 0.7630696892738342, 0.7737136483192444, 0.7845243811607361, 0.7954951524734497, 0.8066193461418152, 0.8178907632827759, 0.8293033838272095, 0.8408514857292175, 0.8525295257568359, 0.8643323183059692, 0.876254677772522, 0.8882918953895569, 0.9004393219947815, 0.9126926064491272, 0.9250475168228149, 0.9375, 0.9500462412834167, 0.9626826047897339, 0.9754055738449097, 0.9882117509841919, 1.0010980367660522, 1.0140613317489624, 1.0270986557006836, 1.0402072668075562, 1.0533846616744995, 1.0666279792785645, 1.079935073852539, 1.0933034420013428, 1.1067310571670532, 1.1202155351638794, 1.1337549686431885, 1.1473474502563477, 1.1609910726547241, 1.1746841669082642, 1.188424825668335, 1.2022114992141724, 1.2160426378250122, 1.2299168109893799, 1.2438324689865112, 1.2577881813049316, 1.2717828750610352, 1.2858150005340576, 1.2998836040496826, 1.3139872550964355, 1.328125, 1.34229576587677, 1.35649836063385, 1.370732069015503, 1.3849955797195435, 1.399288296699524, 1.413609266281128, 1.4279574155807495, 1.4423322677612305, 1.4567327499389648, 1.4711582660675049, 1.4856079816818237, 1.5000814199447632, 1.5145776271820068, 1.529096007347107, 1.5436360836029053, 1.558197259902954, 1.5727787017822266, 1.587380051612854, 1.6020007133483887, 1.6166402101516724, 1.6312979459762573, 1.6459734439849854, 1.6606662273406982, 1.675376057624817, 1.690102219581604, 1.704844355583191, 1.719602108001709, 1.734375, 1.7491627931594849, 1.7639648914337158, 1.7787811756134033, 1.7936111688613892, 1.8084545135498047, 1.8233109712600708, 1.8381801843643188, 1.8530617952346802, 1.8679555654525757, 1.8828611373901367, 1.8977782726287842, 1.912706732749939, 1.927646279335022, 1.942596673965454, 1.9575574398040771, 1.9725285768508911, 1.987509846687317, 2.0025007724761963, 2.0175015926361084, 2.0325117111206055, 2.0475308895111084, 2.062559127807617, 2.0775961875915527, 2.062559127807617, 2.0475308895111084, 2.0325117111206055, 2.0175015926361084, 2.0025007724761963, 1.987509846687317, 1.9725285768508911, 1.9575574398040771, 1.942596673965454, 1.927646279335022, 1.912706732749939, 1.8977782726287842, 1.8828611373901367, 1.8679555654525757, 1.8530617952346802, 1.8381801843643188, 1.8233109712600708, 1.8084545135498047, 1.7936111688613892, 1.7787811756134033, 1.7639648914337158, 1.7491627931594849, 1.734375, 1.719602108001709, 1.704844355583191, 1.690102219581604, 1.675376057624817, 1.6606662273406982, 1.6459734439849854, 1.6312979459762573, 1.6166402101516724, 1.6020007133483887, 1.587380051612854, 1.5727787017822266, 1.558197259902954, 1.5436360836029053, 1.529096007347107, 1.5145776271820068, 1.5000814199447632, 1.4856079816818237, 1.4711582660675049, 1.4567327499389648, 1.4423322677612305, 1.4279574155807495, 1.413609266281128, 1.399288296699524, 1.3849955797195435, 1.370732069015503, 1.35649836063385, 1.34229576587677, 1.328125, 1.3139872550964355, 1.2998836040496826, 1.2858150005340576, 1.2717828750610352, 1.2577881813049316, 1.2438324689865112, 1.2299168109893799, 1.2160426378250122, 1.2022114992141724, 1.188424825668335, 1.1746841669082642, 1.1609910726547241, 1.1473474502563477, 1.1337549686431885, 1.1202155351638794, 1.1067310571670532, 1.0933034420013428, 1.079935073852539, 1.0666279792785645, 1.0533846616744995, 1.0402072668075562, 1.0270986557006836, 1.0140613317489624, 1.0010980367660522, 0.9882117509841919, 0.9754055738449097, 0.9626826047897339, 0.9500462412834167, 0.9375, 0.9250475168228149, 0.9126926064491272, 0.9004393219947815, 0.8882918953895569, 0.876254677772522, 0.8643323183059692, 0.8525295257568359, 0.8408514857292175, 0.8293033838272095, 0.8178907632827759, 0.8066193461418152, 0.7954951524734497, 0.7845243811607361, 0.7737136483192444, 0.7630696892738342, 0.7525996565818787, 0.7423108220100403, 0.7322109341621399, 0.7223077416419983, 0.7126096487045288, 0.703125, 0.6938626170158386, 0.684831440448761, 0.6760408878326416, 0.6675003170967102, 0.6592194437980652, 0.6512083411216736, 0.6434769034385681, 0.6360353827476501, 0.6288940906524658, 0.622063398361206, 0.615553617477417, 0.609375, 0.6035377383232117, 0.5980518460273743, 0.5929270386695862, 0.5881727933883667, 0.5837981700897217, 0.5798117518424988, 0.5762215256690979, 0.5730350017547607, 0.5702589750289917, 0.5678994059562683, 0.5659615993499756, 0.5644497275352478, 0.5633673667907715, 0.5627169609069824, 0.546875, 0.5470981597900391, 0.5477671027183533, 0.5488802790641785, 0.5504348278045654, 0.5524271726608276, 0.5548525452613831, 0.557705283164978, 0.5609788298606873, 0.5646659731864929, 0.5687586069107056, 0.573248028755188, 0.578125, 0.5833798050880432, 0.5890024304389954, 0.5949822664260864, 0.6013088226318359, 0.6079711318016052, 0.6149584054946899, 0.6222596168518066, 0.6298638582229614, 0.63776034116745, 0.6459383368492126, 0.6543872356414795, 0.6630967259407043, 0.6720566749572754, 0.6812571883201599, 0.6906886100769043, 0.7003417015075684, 0.7102074027061462, 0.7202768921852112, 0.7305418848991394, 0.7409940958023071, 0.7516258358955383, 0.7624295353889465, 0.7733980417251587, 0.7845243811607361, 0.7958019971847534, 0.807224452495575, 0.8187857866287231, 0.83048015832901, 0.8423020243644714, 0.8542460799217224, 0.866307258605957, 0.8784807920455933, 0.8907620310783386, 0.9031466245651245, 0.9156303405761719, 0.9282091856002808, 0.9408793449401855, 0.9536371827125549, 0.9664791822433472, 0.9794021248817444, 0.9924027919769287, 1.0054781436920166, 1.0186253786087036, 1.0318416357040405, 1.0451244115829468, 1.0584712028503418, 1.071879506111145, 1.0853471755981445, 1.0988719463348389, 1.1124516725540161, 1.126084566116333, 1.1397684812545776, 1.1535017490386963, 1.1672827005386353, 1.1811094284057617, 1.194980502128601, 1.2088944911956787, 1.222849726676941, 1.2368448972702026, 1.2508785724639893, 1.2649496793746948, 1.2790567874908447, 1.293198823928833, 1.3073747158050537, 1.3215831518173218, 1.3358232975006104, 1.3500940799713135, 1.3643944263458252, 1.3787236213684082, 1.393080711364746, 1.4074647426605225, 1.421875, 1.4363106489181519, 1.4507709741592407, 1.4652551412582397, 1.4797625541687012, 1.4942924976348877, 1.5088443756103516, 1.5234174728393555, 1.5380111932754517, 1.552625060081482, 1.567258358001709, 1.5819107294082642, 1.5965814590454102, 1.6112700700759888, 1.625976324081421, 1.6406993865966797, 1.655439019203186, 1.6701948642730713, 1.6849663257598877, 1.699752926826477, 1.7145545482635498, 1.7293705940246582, 1.7442008256912231, 1.7590447664260864, 1.7739020586013794, 1.788772463798523, 1.803655743598938, 1.8185513019561768, 1.8334591388702393, 1.8483787775039673, 1.8633098602294922, 1.878252387046814, 1.8932058811187744, 1.9081701040267944, 1.9231449365615845, 1.9381299018859863, 1.953125, 1.9681298732757568, 1.9831442832946777, 1.9981681108474731, 2.0132009983062744, 2.028243064880371, 2.0432937145233154, 2.0583529472351074, 2.073420524597168, 2.0583529472351074, 2.0432937145233154, 2.028243064880371, 2.0132009983062744, 1.9981681108474731, 1.9831442832946777, 1.9681298732757568, 1.953125, 1.9381299018859863, 1.9231449365615845, 1.9081701040267944, 1.8932058811187744, 1.878252387046814, 1.8633098602294922, 1.8483787775039673, 1.8334591388702393, 1.8185513019561768, 1.803655743598938, 1.788772463798523, 1.7739020586013794, 1.7590447664260864, 1.7442008256912231, 1.7293705940246582, 1.7145545482635498, 1.699752926826477, 1.6849663257598877, 1.6701948642730713, 1.655439019203186, 1.6406993865966797, 1.625976324081421, 1.6112700700759888, 1.5965814590454102, 1.5819107294082642, 1.567258358001709, 1.552625060081482, 1.5380111932754517, 1.5234174728393555, 1.5088443756103516, 1.4942924976348877, 1.4797625541687012, 1.4652551412582397, 1.4507709741592407, 1.4363106489181519, 1.421875, 1.4074647426605225, 1.393080711364746, 1.3787236213684082, 1.3643944263458252, 1.3500940799713135, 1.3358232975006104, 1.3215831518173218, 1.3073747158050537, 1.293198823928833, 1.2790567874908447, 1.2649496793746948, 1.2508785724639893, 1.2368448972702026, 1.222849726676941, 1.2088944911956787, 1.194980502128601, 1.1811094284057617, 1.1672827005386353, 1.1535017490386963, 1.1397684812545776, 1.126084566116333, 1.1124516725540161, 1.0988719463348389, 1.0853471755981445, 1.071879506111145, 1.0584712028503418, 1.0451244115829468, 1.0318416357040405, 1.0186253786087036, 1.0054781436920166, 0.9924027919769287, 0.9794021248817444, 0.9664791822433472, 0.9536371827125549, 0.9408793449401855, 0.9282091856002808, 0.9156303405761719, 0.9031466245651245, 0.8907620310783386, 0.8784807920455933, 0.866307258605957, 0.8542460799217224, 0.8423020243644714, 0.83048015832901, 0.8187857866287231, 0.807224452495575, 0.7958019971847534, 0.7845243811607361, 0.7733980417251587, 0.7624295353889465, 0.7516258358955383, 0.7409940958023071, 0.7305418848991394, 0.7202768921852112, 0.7102074027061462, 0.7003417015075684, 0.6906886100769043, 0.6812571883201599, 0.6720566749572754, 0.6630967259407043, 0.6543872356414795, 0.6459383368492126, 0.63776034116745, 0.6298638582229614, 0.6222596168518066, 0.6149584054946899, 0.6079711318016052, 0.6013088226318359, 0.5949822664260864, 0.5890024304389954, 0.5833798050880432, 0.578125, 0.573248028755188, 0.5687586069107056, 0.5646659731864929, 0.5609788298606873, 0.557705283164978, 0.5548525452613831, 0.5524271726608276, 0.5504348278045654, 0.5488802790641785, 0.5477671027183533, 0.5470981597900391, 0.53125, 0.5314797163009644, 0.5321683287620544, 0.5333139896392822, 0.5349138379096985, 0.5369637608528137, 0.5394586324691772, 0.5423923134803772, 0.5457577705383301, 0.549547016620636, 0.5537514090538025, 0.5583615303039551, 0.5633673667907715, 0.5687586069107056, 0.5745242834091187, 0.5806532502174377, 0.5871341824531555, 0.5939555764198303, 0.6011057496070862, 0.6085731983184814, 0.6163463592529297, 0.624413788318634, 0.6327642798423767, 0.6413867473602295, 0.650270402431488, 0.6594046354293823, 0.668779194355011, 0.6783841848373413, 0.6882098317146301, 0.698246955871582, 0.7084864974021912, 0.7189198136329651, 0.72953861951828, 0.7403348684310913, 0.7513009309768677, 0.7624295353889465, 0.7737136483192444, 0.7851465344429016, 0.7967218160629272, 0.8084333539009094, 0.8202753067016602, 0.8322421312332153, 0.8443285226821899, 0.8565293550491333, 0.8688399195671082, 0.881255567073822, 0.8937718272209167, 0.9063847064971924, 0.9190900921821594, 0.931884229183197, 0.9447635412216187, 0.9577245712280273, 0.9707640409469604, 0.9838788509368896, 0.9970660209655762, 1.0103226900100708, 1.0236462354660034, 1.0370339155197144, 1.0504834651947021, 1.0639925003051758, 1.0775587558746338, 1.0911799669265747, 1.1048543453216553, 1.1185797452926636, 1.1323543787002563, 1.1461765766143799, 1.1600444316864014, 1.1739565134048462, 1.1879111528396606, 1.2019068002700806, 1.2159422636032104, 1.2300159931182861, 1.244126796722412, 1.2582733631134033, 1.2724546194076538, 1.286669135093689, 1.3009161949157715, 1.3151943683624268, 1.3295029401779175, 1.3438408374786377, 1.358207106590271, 1.3726009130477905, 1.3870213031768799, 1.4014675617218018, 1.4159388542175293, 1.4304343461990356, 1.4449535608291626, 1.4594954252243042, 1.4740595817565918, 1.4886451959609985, 1.5032516717910767, 1.517878532409668, 1.5325249433517456, 1.5471906661987305, 1.5618748664855957, 1.5765771865844727, 1.5912971496582031, 1.6060341596603394, 1.6207878589630127, 1.6355576515197754, 1.6503432989120483, 1.6651442050933838, 1.679960012435913, 1.6947903633117676, 1.7096349000930786, 1.7244932651519775, 1.7393649816513062, 1.7542498111724854, 1.769147515296936, 1.7840574979782104, 1.7989797592163086, 1.8139138221740723, 1.8288593292236328, 1.8438161611557007, 1.8587840795516968, 1.873762607574463, 1.8887516260147095, 1.9037508964538574, 1.9187601804733276, 1.933779239654541, 1.948807716369629, 1.9638456106185913, 1.9788925647735596, 1.9939483404159546, 2.0090129375457764, 2.0240859985351562, 2.0391671657562256, 2.0542566776275635, 2.0693540573120117, 2.0542566776275635, 2.0391671657562256, 2.0240859985351562, 2.0090129375457764, 1.9939483404159546, 1.9788925647735596, 1.9638456106185913, 1.948807716369629, 1.933779239654541, 1.9187601804733276, 1.9037508964538574, 1.8887516260147095, 1.873762607574463, 1.8587840795516968, 1.8438161611557007, 1.8288593292236328, 1.8139138221740723, 1.7989797592163086, 1.7840574979782104, 1.769147515296936, 1.7542498111724854, 1.7393649816513062, 1.7244932651519775, 1.7096349000930786, 1.6947903633117676, 1.679960012435913, 1.6651442050933838, 1.6503432989120483, 1.6355576515197754, 1.6207878589630127, 1.6060341596603394, 1.5912971496582031, 1.5765771865844727, 1.5618748664855957, 1.5471906661987305, 1.5325249433517456, 1.517878532409668, 1.5032516717910767, 1.4886451959609985, 1.4740595817565918, 1.4594954252243042, 1.4449535608291626, 1.4304343461990356, 1.4159388542175293, 1.4014675617218018, 1.3870213031768799, 1.3726009130477905, 1.358207106590271, 1.3438408374786377, 1.3295029401779175, 1.3151943683624268, 1.3009161949157715, 1.286669135093689, 1.2724546194076538, 1.2582733631134033, 1.244126796722412, 1.2300159931182861, 1.2159422636032104, 1.2019068002700806, 1.1879111528396606, 1.1739565134048462, 1.1600444316864014, 1.1461765766143799, 1.1323543787002563, 1.1185797452926636, 1.1048543453216553, 1.0911799669265747, 1.0775587558746338, 1.0639925003051758, 1.0504834651947021, 1.0370339155197144, 1.0236462354660034, 1.0103226900100708, 0.9970660209655762, 0.9838788509368896, 0.9707640409469604, 0.9577245712280273, 0.9447635412216187, 0.931884229183197, 0.9190900921821594, 0.9063847064971924, 0.8937718272209167, 0.881255567073822, 0.8688399195671082, 0.8565293550491333, 0.8443285226821899, 0.8322421312332153, 0.8202753067016602, 0.8084333539009094, 0.7967218160629272, 0.7851465344429016, 0.7737136483192444, 0.7624295353889465, 0.7513009309768677, 0.7403348684310913, 0.72953861951828, 0.7189198136329651, 0.7084864974021912, 0.698246955871582, 0.6882098317146301, 0.6783841848373413, 0.668779194355011, 0.6594046354293823, 0.650270402431488, 0.6413867473602295, 0.6327642798423767, 0.624413788318634, 0.6163463592529297, 0.6085731983184814, 0.6011057496070862, 0.5939555764198303, 0.5871341824531555, 0.5806532502174377, 0.5745242834091187, 0.5687586069107056, 0.5633673667907715, 0.5583615303039551, 0.5537514090538025, 0.549547016620636, 0.5457577705383301, 0.5423923134803772, 0.5394586324691772, 0.5369637608528137, 0.5349138379096985, 0.5333139896392822, 0.5321683287620544, 0.5314797163009644, 0.515625, 0.5158616900444031, 0.5165711045265198, 0.5177512764930725, 0.5193990468978882, 0.5215100049972534, 0.5240784287452698, 0.527097761631012, 0.5305601954460144, 0.5344572067260742, 0.5387793779373169, 0.5435164570808411, 0.5486578345298767, 0.5541921257972717, 0.5601077675819397, 0.5663927793502808, 0.5730350017547607, 0.5800222158432007, 0.5873420834541321, 0.5949822664260864, 0.6029306650161743, 0.6111752390861511, 0.6197041273117065, 0.6285057663917542, 0.6375689506530762, 0.6468825340270996, 0.6564359664916992, 0.6662189364433289, 0.6762214303016663, 0.6864338517189026, 0.6968469619750977, 0.7074519395828247, 0.7182403206825256, 0.7292038798332214, 0.7403348684310913, 0.7516258358955383, 0.7630696892738342, 0.7746596932411194, 0.7863893508911133, 0.7982524633407593, 0.8102432489395142, 0.822356104850769, 0.8345856666564941, 0.8469268679618835, 0.859375, 0.871925413608551, 0.884573757648468, 0.8973158597946167, 0.9101478457450867, 0.9230659604072571, 0.9360666275024414, 0.9491463899612427, 0.9623021483421326, 0.9755306839942932, 0.9888291954994202, 1.002194881439209, 1.015625, 1.0291171073913574, 1.0426688194274902, 1.0562777519226074, 1.069941759109497, 1.0836588144302368, 1.0974268913269043, 1.1112440824508667, 1.1251084804534912, 1.1390185356140137, 1.1529725790023804, 1.1669689416885376, 1.1810060739517212, 1.195082664489746, 1.2091972827911377, 1.2233487367630005, 1.2375354766845703, 1.2517565488815308, 1.2660107612609863, 1.2802969217300415, 1.2946139574050903, 1.308961033821106, 1.3233369588851929, 1.3377408981323242, 1.3521720170974731, 1.3666293621063232, 1.3811120986938477, 1.395619511604309, 1.4101508855819702, 1.4247052669525146, 1.4392821788787842, 1.4538809061050415, 1.4685006141662598, 1.4831409454345703, 1.4978010654449463, 1.512480616569519, 1.5271788835525513, 1.5418953895568848, 1.5566295385360718, 1.5713809728622437, 1.5861490964889526, 1.60093355178833, 1.6157337427139282, 1.630549430847168, 1.6453800201416016, 1.6602251529693604, 1.6750845909118652, 1.6899577379226685, 1.704844355583191, 1.719744086265564, 1.7346564531326294, 1.7495814561843872, 1.7645184993743896, 1.7794673442840576, 1.7944276332855225, 1.8093992471694946, 1.8243818283081055, 1.8393751382827759, 1.8543788194656372, 1.8693926334381104, 1.8844164609909058, 1.8994499444961548, 1.9144929647445679, 1.9295451641082764, 1.9446064233779907, 1.9596765041351318, 1.9747551679611206, 1.989842414855957, 2.0049376487731934, 2.0200412273406982, 2.0351524353027344, 2.050271511077881, 2.0653979778289795, 2.050271511077881, 2.0351524353027344, 2.0200412273406982, 2.0049376487731934, 1.989842414855957, 1.9747551679611206, 1.9596765041351318, 1.9446064233779907, 1.9295451641082764, 1.9144929647445679, 1.8994499444961548, 1.8844164609909058, 1.8693926334381104, 1.8543788194656372, 1.8393751382827759, 1.8243818283081055, 1.8093992471694946, 1.7944276332855225, 1.7794673442840576, 1.7645184993743896, 1.7495814561843872, 1.7346564531326294, 1.719744086265564, 1.704844355583191, 1.6899577379226685, 1.6750845909118652, 1.6602251529693604, 1.6453800201416016, 1.630549430847168, 1.6157337427139282, 1.60093355178833, 1.5861490964889526, 1.5713809728622437, 1.5566295385360718, 1.5418953895568848, 1.5271788835525513, 1.512480616569519, 1.4978010654449463, 1.4831409454345703, 1.4685006141662598, 1.4538809061050415, 1.4392821788787842, 1.4247052669525146, 1.4101508855819702, 1.395619511604309, 1.3811120986938477, 1.3666293621063232, 1.3521720170974731, 1.3377408981323242, 1.3233369588851929, 1.308961033821106, 1.2946139574050903, 1.2802969217300415, 1.2660107612609863, 1.2517565488815308, 1.2375354766845703, 1.2233487367630005, 1.2091972827911377, 1.195082664489746, 1.1810060739517212, 1.1669689416885376, 1.1529725790023804, 1.1390185356140137, 1.1251084804534912, 1.1112440824508667, 1.0974268913269043, 1.0836588144302368, 1.069941759109497, 1.0562777519226074, 1.0426688194274902, 1.0291171073913574, 1.015625, 1.002194881439209, 0.9888291954994202, 0.9755306839942932, 0.9623021483421326, 0.9491463899612427, 0.9360666275024414, 0.9230659604072571, 0.9101478457450867, 0.8973158597946167, 0.884573757648468, 0.871925413608551, 0.859375, 0.8469268679618835, 0.8345856666564941, 0.822356104850769, 0.8102432489395142, 0.7982524633407593, 0.7863893508911133, 0.7746596932411194, 0.7630696892738342, 0.7516258358955383, 0.7403348684310913, 0.7292038798332214, 0.7182403206825256, 0.7074519395828247, 0.6968469619750977, 0.6864338517189026, 0.6762214303016663, 0.6662189364433289, 0.6564359664916992, 0.6468825340270996, 0.6375689506530762, 0.6285057663917542, 0.6197041273117065, 0.6111752390861511, 0.6029306650161743, 0.5949822664260864, 0.5873420834541321, 0.5800222158432007, 0.5730350017547607, 0.5663927793502808, 0.5601077675819397, 0.5541921257972717, 0.5486578345298767, 0.5435164570808411, 0.5387793779373169, 0.5344572067260742, 0.5305601954460144, 0.527097761631012, 0.5240784287452698, 0.5215100049972534, 0.5193990468978882, 0.5177512764930725, 0.5165711045265198, 0.5158616900444031, 0.5, 0.5002440810203552, 0.5009756088256836, 0.5021924376487732, 0.503891110420227, 0.5060667395591736, 0.5087131261825562, 0.5118231177330017, 0.5153881907463074, 0.5193990468978882, 0.5238454341888428, 0.5287163853645325, 0.5340002179145813, 0.5396848917007446, 0.5457577705383301, 0.5522061586380005, 0.55901700258255, 0.5661771893501282, 0.5736737251281738, 0.5814935564994812, 0.5896238088607788, 0.5980518460273743, 0.6067652702331543, 0.6157518625259399, 0.625, 0.634498119354248, 0.6442352533340454, 0.6542006731033325, 0.664384126663208, 0.6747757196426392, 0.6853660345077515, 0.6961458921432495, 0.7071067690849304, 0.7182403206825256, 0.72953861951828, 0.7409940958023071, 0.7525996565818787, 0.7643484473228455, 0.7762339115142822, 0.7882499098777771, 0.8003905415534973, 0.812650203704834, 0.8250236511230469, 0.8375058174133301, 0.8500919342041016, 0.8627773523330688, 0.8755578398704529, 0.8884292840957642, 0.9013878107070923, 0.9144296646118164, 0.9275513887405396, 0.9407495856285095, 0.9540210962295532, 0.9673629403114319, 0.9807721972465515, 0.9942461252212524, 1.007782220840454, 1.0213779211044312, 1.0350309610366821, 1.048738956451416, 1.0625, 1.0763118267059326, 1.0901727676391602, 1.1040806770324707, 1.1180340051651, 1.132030963897705, 1.1460700035095215, 1.1601496934890747, 1.174268364906311, 1.188424825668335, 1.2026176452636719, 1.2168455123901367, 1.231107234954834, 1.2454017400741577, 1.2597277164459229, 1.2740843296051025, 1.2884705066680908, 1.3028851747512817, 1.3173273801803589, 1.331796407699585, 1.346291184425354, 1.3608109951019287, 1.3753551244735718, 1.3899226188659668, 1.4045127630233765, 1.4191250801086426, 1.4337587356567383, 1.4484130144119263, 1.4630874395370483, 1.4777814149856567, 1.4924942255020142, 1.5072253942489624, 1.5219744443893433, 1.536740779876709, 1.5515239238739014, 1.5663233995437622, 1.5811388492584229, 1.5959696769714355, 1.6108155250549316, 1.625675916671753, 1.6405506134033203, 1.655439019203186, 1.6703410148620605, 1.685256004333496, 1.7001838684082031, 1.7151240110397339, 1.7300763130187988, 1.7450404167175293, 1.7600159645080566, 1.7750027179718018, 1.7900004386901855, 1.8050087690353394, 1.820027470588684, 1.8350563049316406, 1.8500950336456299, 1.8651434183120728, 1.8802011013031006, 1.8952680826187134, 1.9103440046310425, 1.9254286289215088, 1.9405218362808228, 1.9556233882904053, 1.9707331657409668, 1.9858508110046387, 2.000976324081421, 2.0161094665527344, 2.03125, 2.0463979244232178, 2.0615527629852295, 2.0463979244232178, 2.03125, 2.0161094665527344, 2.000976324081421, 1.9858508110046387, 1.9707331657409668, 1.9556233882904053, 1.9405218362808228, 1.9254286289215088, 1.9103440046310425, 1.8952680826187134, 1.8802011013031006, 1.8651434183120728, 1.8500950336456299, 1.8350563049316406, 1.820027470588684, 1.8050087690353394, 1.7900004386901855, 1.7750027179718018, 1.7600159645080566, 1.7450404167175293, 1.7300763130187988, 1.7151240110397339, 1.7001838684082031, 1.685256004333496, 1.6703410148620605, 1.655439019203186, 1.6405506134033203, 1.625675916671753, 1.6108155250549316, 1.5959696769714355, 1.5811388492584229, 1.5663233995437622, 1.5515239238739014, 1.536740779876709, 1.5219744443893433, 1.5072253942489624, 1.4924942255020142, 1.4777814149856567, 1.4630874395370483, 1.4484130144119263, 1.4337587356567383, 1.4191250801086426, 1.4045127630233765, 1.3899226188659668, 1.3753551244735718, 1.3608109951019287, 1.346291184425354, 1.331796407699585, 1.3173273801803589, 1.3028851747512817, 1.2884705066680908, 1.2740843296051025, 1.2597277164459229, 1.2454017400741577, 1.231107234954834, 1.2168455123901367, 1.2026176452636719, 1.188424825668335, 1.174268364906311, 1.1601496934890747, 1.1460700035095215, 1.132030963897705, 1.1180340051651, 1.1040806770324707, 1.0901727676391602, 1.0763118267059326, 1.0625, 1.048738956451416, 1.0350309610366821, 1.0213779211044312, 1.007782220840454, 0.9942461252212524, 0.9807721972465515, 0.9673629403114319, 0.9540210962295532, 0.9407495856285095, 0.9275513887405396, 0.9144296646118164, 0.9013878107070923, 0.8884292840957642, 0.8755578398704529, 0.8627773523330688, 0.8500919342041016, 0.8375058174133301, 0.8250236511230469, 0.812650203704834, 0.8003905415534973, 0.7882499098777771, 0.7762339115142822, 0.7643484473228455, 0.7525996565818787, 0.7409940958023071, 0.72953861951828, 0.7182403206825256, 0.7071067690849304, 0.6961458921432495, 0.6853660345077515, 0.6747757196426392, 0.664384126663208, 0.6542006731033325, 0.6442352533340454, 0.634498119354248, 0.625, 0.6157518625259399, 0.6067652702331543, 0.5980518460273743, 0.5896238088607788, 0.5814935564994812, 0.5736737251281738, 0.5661771893501282, 0.55901700258255, 0.5522061586380005, 0.5457577705383301, 0.5396848917007446, 0.5340002179145813, 0.5287163853645325, 0.5238454341888428, 0.5193990468978882, 0.5153881907463074, 0.5118231177330017, 0.5087131261825562, 0.5060667395591736, 0.503891110420227, 0.5021924376487732, 0.5009756088256836, 0.5002440810203552, 0.484375, 0.4846269488334656, 0.4853820204734802, 0.4866378605365753, 0.48839062452316284, 0.490634948015213, 0.493364155292511, 0.49657025933265686, 0.5002440810203552, 0.5043753981590271, 0.5089530348777771, 0.5139651298522949, 0.5193990468978882, 0.5252417325973511, 0.5314797163009644, 0.5380992293357849, 0.5450863838195801, 0.5524271726608276, 0.5601077675819397, 0.5681143403053284, 0.5764333605766296, 0.585051417350769, 0.5939555764198303, 0.6031330823898315, 0.6125717163085938, 0.6222596168518066, 0.6321852803230286, 0.6423376202583313, 0.6527062058448792, 0.6632807850837708, 0.6740517020225525, 0.6850097179412842, 0.6961458921432495, 0.7074519395828247, 0.7189198136329651, 0.7305418848991394, 0.7423108220100403, 0.7542198896408081, 0.7662624716758728, 0.7784324288368225, 0.7907238006591797, 0.803131103515625, 0.8156489729881287, 0.8282724022865295, 0.8409966826438904, 0.8538172841072083, 0.8667299151420593, 0.8797305226325989, 0.8928152918815613, 0.9059805870056152, 0.919222891330719, 0.9325389862060547, 0.9459256529808044, 0.9593800902366638, 0.9728993773460388, 0.9864808917045593, 1.0001220703125, 1.0138205289840698, 1.0275739431381226, 1.0413801670074463, 1.0552371740341187, 1.0691428184509277, 1.0830954313278198, 1.097093105316162, 1.1111341714859009, 1.1252169609069824, 1.1393400430679321, 1.1535017490386963, 1.1677008867263794, 1.1819360256195068, 1.196205735206604, 1.210508942604065, 1.2248445749282837, 1.2392112016677856, 1.2536081075668335, 1.2680339813232422, 1.2824879884719849, 1.2969691753387451, 1.3114765882492065, 1.3260093927383423, 1.3405667543411255, 1.3551478385925293, 1.369752049446106, 1.3843785524368286, 1.39902663230896, 1.4136955738067627, 1.428384780883789, 1.4430937767028809, 1.4578217267990112, 1.472568154335022, 1.4873325824737549, 1.5021144151687622, 1.5169130563735962, 1.5317282676696777, 1.5465593338012695, 1.561405897140503, 1.5762674808502197, 1.5911437273025513, 1.6060341596603394, 1.6209384202957153, 1.6358561515808105, 1.6507869958877563, 1.6657304763793945, 1.6806864738464355, 1.6956545114517212, 1.7106342315673828, 1.7256253957748413, 1.7406277656555176, 1.755640983581543, 1.7706648111343384, 1.7856988906860352, 1.8007431030273438, 1.8157970905303955, 1.8308606147766113, 1.8459335565567017, 1.8610155582427979, 1.8761065006256104, 1.8912060260772705, 1.9063140153884888, 1.9214303493499756, 1.9365546703338623, 1.951686978340149, 1.9668269157409668, 1.981974482536316, 1.9971293210983276, 2.012291431427002, 2.0274603366851807, 2.0426363945007324, 2.057819128036499, 2.0426363945007324, 2.0274603366851807, 2.012291431427002, 1.9971293210983276, 1.981974482536316, 1.9668269157409668, 1.951686978340149, 1.9365546703338623, 1.9214303493499756, 1.9063140153884888, 1.8912060260772705, 1.8761065006256104, 1.8610155582427979, 1.8459335565567017, 1.8308606147766113, 1.8157970905303955, 1.8007431030273438, 1.7856988906860352, 1.7706648111343384, 1.755640983581543, 1.7406277656555176, 1.7256253957748413, 1.7106342315673828, 1.6956545114517212, 1.6806864738464355, 1.6657304763793945, 1.6507869958877563, 1.6358561515808105, 1.6209384202957153, 1.6060341596603394, 1.5911437273025513, 1.5762674808502197, 1.561405897140503, 1.5465593338012695, 1.5317282676696777, 1.5169130563735962, 1.5021144151687622, 1.4873325824737549, 1.472568154335022, 1.4578217267990112, 1.4430937767028809, 1.428384780883789, 1.4136955738067627, 1.39902663230896, 1.3843785524368286, 1.369752049446106, 1.3551478385925293, 1.3405667543411255, 1.3260093927383423, 1.3114765882492065, 1.2969691753387451, 1.2824879884719849, 1.2680339813232422, 1.2536081075668335, 1.2392112016677856, 1.2248445749282837, 1.210508942604065, 1.196205735206604, 1.1819360256195068, 1.1677008867263794, 1.1535017490386963, 1.1393400430679321, 1.1252169609069824, 1.1111341714859009, 1.097093105316162, 1.0830954313278198, 1.0691428184509277, 1.0552371740341187, 1.0413801670074463, 1.0275739431381226, 1.0138205289840698, 1.0001220703125, 0.9864808917045593, 0.9728993773460388, 0.9593800902366638, 0.9459256529808044, 0.9325389862060547, 0.919222891330719, 0.9059805870056152, 0.8928152918815613, 0.8797305226325989, 0.8667299151420593, 0.8538172841072083, 0.8409966826438904, 0.8282724022865295, 0.8156489729881287, 0.803131103515625, 0.7907238006591797, 0.7784324288368225, 0.7662624716758728, 0.7542198896408081, 0.7423108220100403, 0.7305418848991394, 0.7189198136329651, 0.7074519395828247, 0.6961458921432495, 0.6850097179412842, 0.6740517020225525, 0.6632807850837708, 0.6527062058448792, 0.6423376202583313, 0.6321852803230286, 0.6222596168518066, 0.6125717163085938, 0.6031330823898315, 0.5939555764198303, 0.585051417350769, 0.5764333605766296, 0.5681143403053284, 0.5601077675819397, 0.5524271726608276, 0.5450863838195801, 0.5380992293357849, 0.5314797163009644, 0.5252417325973511, 0.5193990468978882, 0.5139651298522949, 0.5089530348777771, 0.5043753981590271, 0.5002440810203552, 0.49657025933265686, 0.493364155292511, 0.490634948015213, 0.48839062452316284, 0.4866378605365753, 0.4853820204734802, 0.4846269488334656, 0.46875, 0.4690103530883789, 0.469790518283844, 0.4710879325866699, 0.47289830446243286, 0.4752158224582672, 0.47803306579589844, 0.48134130239486694, 0.4851304590702057, 0.4893893599510193, 0.49410587549209595, 0.499267041683197, 0.504859209060669, 0.5108681917190552, 0.5172795653343201, 0.5240784287452698, 0.53125, 0.5387793779373169, 0.5466517210006714, 0.5548525452613831, 0.5633673667907715, 0.572182297706604, 0.5812836289405823, 0.5906580686569214, 0.6002929210662842, 0.6101757287979126, 0.6202948093414307, 0.630638599395752, 0.6411963701248169, 0.6519576907157898, 0.6629126071929932, 0.6740517020225525, 0.6853660345077515, 0.6968469619750977, 0.7084864974021912, 0.7202768921852112, 0.7322109341621399, 0.7442815899848938, 0.7564824223518372, 0.7688071727752686, 0.78125, 0.7938053607940674, 0.8064680099487305, 0.8192329406738281, 0.8320954442024231, 0.845051109790802, 0.858095645904541, 0.871225118637085, 0.8844357132911682, 0.897723913192749, 0.9110862612724304, 0.9245195388793945, 0.9380207061767578, 0.951586902141571, 0.9652153253555298, 0.9789034724235535, 0.9926487803459167, 1.0064489841461182, 1.0203016996383667, 1.0342050790786743, 1.0481568574905396, 1.0621552467346191, 1.0761984586715698, 1.0902847051620483, 1.104412317276001, 1.1185797452926636, 1.1327855587005615, 1.1470282077789307, 1.1613065004348755, 1.1756190061569214, 1.1899645328521729, 1.2043418884277344, 1.21875, 1.2331876754760742, 1.2476540803909302, 1.2621480226516724, 1.276668667793274, 1.2912150621414185, 1.305786371231079, 1.3203818798065186, 1.3350006341934204, 1.3496419191360474, 1.364305019378662, 1.3789892196655273, 1.3936939239501953, 1.4084184169769287, 1.4231622219085693, 1.4379245042800903, 1.452704906463623, 1.4675028324127197, 1.4823176860809326, 1.4971489906311035, 1.5119962692260742, 1.526859164237976, 1.5417370796203613, 1.5566295385360718, 1.5715364217758179, 1.5864570140838623, 1.6013909578323364, 1.6163381338119507, 1.6312979459762573, 1.6462700366973877, 1.6612542867660522, 1.6762501001358032, 1.691257357597351, 1.7062757015228271, 1.7213048934936523, 1.736344575881958, 1.751394510269165, 1.7664544582366943, 1.7815240621566772, 1.7966032028198242, 1.8116916418075562, 1.8267890214920044, 1.8418952226638794, 1.857010006904602, 1.8721332550048828, 1.887264609336853, 1.9024039506912231, 1.917551040649414, 1.9327057600021362, 1.9478678703308105, 1.963037371635437, 1.978213906288147, 1.9933973550796509, 2.008587598800659, 2.0237843990325928, 2.038987636566162, 2.054197311401367, 2.038987636566162, 2.0237843990325928, 2.008587598800659, 1.9933973550796509, 1.978213906288147, 1.963037371635437, 1.9478678703308105, 1.9327057600021362, 1.917551040649414, 1.9024039506912231, 1.887264609336853, 1.8721332550048828, 1.857010006904602, 1.8418952226638794, 1.8267890214920044, 1.8116916418075562, 1.7966032028198242, 1.7815240621566772, 1.7664544582366943, 1.751394510269165, 1.736344575881958, 1.7213048934936523, 1.7062757015228271, 1.691257357597351, 1.6762501001358032, 1.6612542867660522, 1.6462700366973877, 1.6312979459762573, 1.6163381338119507, 1.6013909578323364, 1.5864570140838623, 1.5715364217758179, 1.5566295385360718, 1.5417370796203613, 1.526859164237976, 1.5119962692260742, 1.4971489906311035, 1.4823176860809326, 1.4675028324127197, 1.452704906463623, 1.4379245042800903, 1.4231622219085693, 1.4084184169769287, 1.3936939239501953, 1.3789892196655273, 1.364305019378662, 1.3496419191360474, 1.3350006341934204, 1.3203818798065186, 1.305786371231079, 1.2912150621414185, 1.276668667793274, 1.2621480226516724, 1.2476540803909302, 1.2331876754760742, 1.21875, 1.2043418884277344, 1.1899645328521729, 1.1756190061569214, 1.1613065004348755, 1.1470282077789307, 1.1327855587005615, 1.1185797452926636, 1.104412317276001, 1.0902847051620483, 1.0761984586715698, 1.0621552467346191, 1.0481568574905396, 1.0342050790786743, 1.0203016996383667, 1.0064489841461182, 0.9926487803459167, 0.9789034724235535, 0.9652153253555298, 0.951586902141571, 0.9380207061767578, 0.9245195388793945, 0.9110862612724304, 0.897723913192749, 0.8844357132911682, 0.871225118637085, 0.858095645904541, 0.845051109790802, 0.8320954442024231, 0.8192329406738281, 0.8064680099487305, 0.7938053607940674, 0.78125, 0.7688071727752686, 0.7564824223518372, 0.7442815899848938, 0.7322109341621399, 0.7202768921852112, 0.7084864974021912, 0.6968469619750977, 0.6853660345077515, 0.6740517020225525, 0.6629126071929932, 0.6519576907157898, 0.6411963701248169, 0.630638599395752, 0.6202948093414307, 0.6101757287979126, 0.6002929210662842, 0.5906580686569214, 0.5812836289405823, 0.572182297706604, 0.5633673667907715, 0.5548525452613831, 0.5466517210006714, 0.5387793779373169, 0.53125, 0.5240784287452698, 0.5172795653343201, 0.5108681917190552, 0.504859209060669, 0.499267041683197, 0.49410587549209595, 0.4893893599510193, 0.4851304590702057, 0.48134130239486694, 0.47803306579589844, 0.4752158224582672, 0.47289830446243286, 0.4710879325866699, 0.469790518283844, 0.4690103530883789, 0.453125, 0.4533943235874176, 0.4542013108730316, 0.4555431306362152, 0.45741504430770874, 0.4598105847835541, 0.46272164583206177, 0.4661385715007782, 0.47005027532577515, 0.47444456815719604, 0.47930818796157837, 0.4846269488334656, 0.49038609862327576, 0.49657025933265686, 0.5031638145446777, 0.5101508498191833, 0.5175154805183411, 0.5252417325973511, 0.5333139896392822, 0.5417167544364929, 0.5504348278045654, 0.559453547000885, 0.5687586069107056, 0.5783361196517944, 0.5881727933883667, 0.5982559323310852, 0.6085731983184814, 0.6191129088401794, 0.6298638582229614, 0.6408154964447021, 0.6519576907157898, 0.6632807850837708, 0.6747757196426392, 0.6864338517189026, 0.698246955871582, 0.7102074027061462, 0.7223077416419983, 0.7345411777496338, 0.7469011545181274, 0.7593814134597778, 0.7719762325286865, 0.7846799492835999, 0.7974874973297119, 0.8103939294815063, 0.8233945369720459, 0.8364849090576172, 0.8496609926223755, 0.8629188537597656, 0.876254677772522, 0.8896650671958923, 0.9031466245651245, 0.9166962504386902, 0.9303109645843506, 0.9439879655838013, 0.9577245712280273, 0.9715182185173035, 0.9853665828704834, 0.9992672801017761, 1.0132182836532593, 1.0272175073623657, 1.0412629842758179, 1.055352807044983, 1.0694853067398071, 1.0836588144302368, 1.0978716611862183, 1.1121225357055664, 1.126409649848938, 1.1407320499420166, 1.1550880670547485, 1.1694767475128174, 1.1838966608047485, 1.1983468532562256, 1.212826132774353, 1.2273335456848145, 1.2418681383132935, 1.256428837776184, 1.2710148096084595, 1.2856251001358032, 1.3002591133117676, 1.3149158954620361, 1.3295947313308716, 1.3442949056625366, 1.359015703201294, 1.3737565279006958, 1.3885166645050049, 1.4032955169677734, 1.4180924892425537, 1.4329071044921875, 1.4477386474609375, 1.462586760520935, 1.477450966835022, 1.4923306703567505, 1.5072253942489624, 1.5221349000930786, 1.5370584726333618, 1.5519959926605225, 1.5669467449188232, 1.5819107294082642, 1.596887230873108, 1.611876130104065, 1.626876950263977, 1.6418894529342651, 1.656913161277771, 1.671947956085205, 1.6869935989379883, 1.7020494937896729, 1.7171157598495483, 1.732191801071167, 1.7472774982452393, 1.762372612953186, 1.7774767875671387, 1.7925900220870972, 1.8077118396759033, 1.8228422403335571, 1.83798086643219, 1.8531275987625122, 1.8682821989059448, 1.8834445476531982, 1.8986142873764038, 1.9137914180755615, 1.9289757013320923, 1.944166898727417, 1.9593650102615356, 1.9745697975158691, 1.9897810220718384, 2.0049986839294434, 2.0202224254608154, 2.035452365875244, 2.0506882667541504, 2.035452365875244, 2.0202224254608154, 2.0049986839294434, 1.9897810220718384, 1.9745697975158691, 1.9593650102615356, 1.944166898727417, 1.9289757013320923, 1.9137914180755615, 1.8986142873764038, 1.8834445476531982, 1.8682821989059448, 1.8531275987625122, 1.83798086643219, 1.8228422403335571, 1.8077118396759033, 1.7925900220870972, 1.7774767875671387, 1.762372612953186, 1.7472774982452393, 1.732191801071167, 1.7171157598495483, 1.7020494937896729, 1.6869935989379883, 1.671947956085205, 1.656913161277771, 1.6418894529342651, 1.626876950263977, 1.611876130104065, 1.596887230873108, 1.5819107294082642, 1.5669467449188232, 1.5519959926605225, 1.5370584726333618, 1.5221349000930786, 1.5072253942489624, 1.4923306703567505, 1.477450966835022, 1.462586760520935, 1.4477386474609375, 1.4329071044921875, 1.4180924892425537, 1.4032955169677734, 1.3885166645050049, 1.3737565279006958, 1.359015703201294, 1.3442949056625366, 1.3295947313308716, 1.3149158954620361, 1.3002591133117676, 1.2856251001358032, 1.2710148096084595, 1.256428837776184, 1.2418681383132935, 1.2273335456848145, 1.212826132774353, 1.1983468532562256, 1.1838966608047485, 1.1694767475128174, 1.1550880670547485, 1.1407320499420166, 1.126409649848938, 1.1121225357055664, 1.0978716611862183, 1.0836588144302368, 1.0694853067398071, 1.055352807044983, 1.0412629842758179, 1.0272175073623657, 1.0132182836532593, 0.9992672801017761, 0.9853665828704834, 0.9715182185173035, 0.9577245712280273, 0.9439879655838013, 0.9303109645843506, 0.9166962504386902, 0.9031466245651245, 0.8896650671958923, 0.876254677772522, 0.8629188537597656, 0.8496609926223755, 0.8364849090576172, 0.8233945369720459, 0.8103939294815063, 0.7974874973297119, 0.7846799492835999, 0.7719762325286865, 0.7593814134597778, 0.7469011545181274, 0.7345411777496338, 0.7223077416419983, 0.7102074027061462, 0.698246955871582, 0.6864338517189026, 0.6747757196426392, 0.6632807850837708, 0.6519576907157898, 0.6408154964447021, 0.6298638582229614, 0.6191129088401794, 0.6085731983184814, 0.5982559323310852, 0.5881727933883667, 0.5783361196517944, 0.5687586069107056, 0.559453547000885, 0.5504348278045654, 0.5417167544364929, 0.5333139896392822, 0.5252417325973511, 0.5175154805183411, 0.5101508498191833, 0.5031638145446777, 0.49657025933265686, 0.49038609862327576, 0.4846269488334656, 0.47930818796157837, 0.47444456815719604, 0.47005027532577515, 0.4661385715007782, 0.46272164583206177, 0.4598105847835541, 0.45741504430770874, 0.4555431306362152, 0.4542013108730316, 0.4533943235874176, 0.4375, 0.43777891993522644, 0.4386146366596222, 0.44000399112701416, 0.4419417381286621, 0.4444206953048706, 0.44743192195892334, 0.45096468925476074, 0.455006867647171, 0.4595450460910797, 0.46456465125083923, 0.47005027532577515, 0.4759858250617981, 0.48235467076301575, 0.4891398847103119, 0.4963243901729584, 0.503891110420227, 0.5118231177330017, 0.5201036334037781, 0.5287163853645325, 0.5376453399658203, 0.546875, 0.5563904047012329, 0.5661771893501282, 0.5762215256690979, 0.5865101218223572, 0.5970304012298584, 0.6077703237533569, 0.6187184453010559, 0.6298638582229614, 0.6411963701248169, 0.6527062058448792, 0.664384126663208, 0.6762214303016663, 0.6882098317146301, 0.7003417015075684, 0.7126096487045288, 0.7250067591667175, 0.7375264763832092, 0.7501627206802368, 0.7629097104072571, 0.7757619619369507, 0.7887143492698669, 0.8017619848251343, 0.814900279045105, 0.828125, 0.8414319753646851, 0.8548174500465393, 0.8682777285575867, 0.881809413433075, 0.8954092860221863, 0.9090742468833923, 0.9228014349937439, 0.9365881085395813, 0.9504316449165344, 0.9643296599388123, 0.9782797694206238, 0.9922797679901123, 1.0063276290893555, 1.0204213857650757, 1.0345591306686401, 1.048738956451416, 1.0629594326019287, 1.077218770980835, 1.0915155410766602, 1.1058483123779297, 1.1202155351638794, 1.1346160173416138, 1.1490485668182373, 1.163511872291565, 1.1780048608779907, 1.1925263404846191, 1.2070754766464233, 1.2216511964797974, 1.2362525463104248, 1.2508785724639893, 1.2655285596847534, 1.2802015542984009, 1.2948968410491943, 1.309613585472107, 1.3243513107299805, 1.339108943939209, 1.3538862466812134, 1.3686822652816772, 1.3834965229034424, 1.398328423500061, 1.4131773710250854, 1.4280428886413574, 1.4429244995117188, 1.4578217267990112, 1.472733974456787, 1.4876608848571777, 1.5026018619537354, 1.5175567865371704, 1.5325249433517456, 1.5475062131881714, 1.5625, 1.5775060653686523, 1.5925240516662598, 1.6075536012649536, 1.6225943565368652, 1.6376460790634155, 1.6527085304260254, 1.6677812337875366, 1.6828639507293701, 1.6979565620422363, 1.7130587100982666, 1.7281701564788818, 1.743290662765503, 1.7584199905395508, 1.7735579013824463, 1.7887042760849, 1.803858757019043, 1.8190211057662964, 1.8341913223266602, 1.8493690490722656, 1.8645542860031128, 1.8797465562820435, 1.8949459791183472, 1.9101521968841553, 1.9253652095794678, 1.9405847787857056, 1.9558106660842896, 1.9710427522659302, 1.9862810373306274, 2.001525402069092, 2.016775369644165, 2.0320310592651367, 2.047292470932007, 2.0320310592651367, 2.016775369644165, 2.001525402069092, 1.9862810373306274, 1.9710427522659302, 1.9558106660842896, 1.9405847787857056, 1.9253652095794678, 1.9101521968841553, 1.8949459791183472, 1.8797465562820435, 1.8645542860031128, 1.8493690490722656, 1.8341913223266602, 1.8190211057662964, 1.803858757019043, 1.7887042760849, 1.7735579013824463, 1.7584199905395508, 1.743290662765503, 1.7281701564788818, 1.7130587100982666, 1.6979565620422363, 1.6828639507293701, 1.6677812337875366, 1.6527085304260254, 1.6376460790634155, 1.6225943565368652, 1.6075536012649536, 1.5925240516662598, 1.5775060653686523, 1.5625, 1.5475062131881714, 1.5325249433517456, 1.5175567865371704, 1.5026018619537354, 1.4876608848571777, 1.472733974456787, 1.4578217267990112, 1.4429244995117188, 1.4280428886413574, 1.4131773710250854, 1.398328423500061, 1.3834965229034424, 1.3686822652816772, 1.3538862466812134, 1.339108943939209, 1.3243513107299805, 1.309613585472107, 1.2948968410491943, 1.2802015542984009, 1.2655285596847534, 1.2508785724639893, 1.2362525463104248, 1.2216511964797974, 1.2070754766464233, 1.1925263404846191, 1.1780048608779907, 1.163511872291565, 1.1490485668182373, 1.1346160173416138, 1.1202155351638794, 1.1058483123779297, 1.0915155410766602, 1.077218770980835, 1.0629594326019287, 1.048738956451416, 1.0345591306686401, 1.0204213857650757, 1.0063276290893555, 0.9922797679901123, 0.9782797694206238, 0.9643296599388123, 0.9504316449165344, 0.9365881085395813, 0.9228014349937439, 0.9090742468833923, 0.8954092860221863, 0.881809413433075, 0.8682777285575867, 0.8548174500465393, 0.8414319753646851, 0.828125, 0.814900279045105, 0.8017619848251343, 0.7887143492698669, 0.7757619619369507, 0.7629097104072571, 0.7501627206802368, 0.7375264763832092, 0.7250067591667175, 0.7126096487045288, 0.7003417015075684, 0.6882098317146301, 0.6762214303016663, 0.664384126663208, 0.6527062058448792, 0.6411963701248169, 0.6298638582229614, 0.6187184453010559, 0.6077703237533569, 0.5970304012298584, 0.5865101218223572, 0.5762215256690979, 0.5661771893501282, 0.5563904047012329, 0.546875, 0.5376453399658203, 0.5287163853645325, 0.5201036334037781, 0.5118231177330017, 0.503891110420227, 0.4963243901729584, 0.4891398847103119, 0.48235467076301575, 0.4759858250617981, 0.47005027532577515, 0.46456465125083923, 0.4595450460910797, 0.455006867647171, 0.45096468925476074, 0.44743192195892334, 0.4444206953048706, 0.4419417381286621, 0.44000399112701416, 0.4386146366596222, 0.43777891993522644, 0.421875, 0.42216426134109497, 0.423030823469162, 0.4244711697101593, 0.4264794886112213, 0.4290478229522705, 0.4321661591529846, 0.43582266569137573, 0.44000399112701416, 0.44469529390335083, 0.4498806297779083, 0.4555431306362152, 0.46166521310806274, 0.46822887659072876, 0.4752158224582672, 0.4826076626777649, 0.49038609862327576, 0.4985330104827881, 0.5070306658744812, 0.5158616900444031, 0.525009274482727, 0.5344572067260742, 0.5441898107528687, 0.5541921257972717, 0.5644497275352478, 0.5749490261077881, 0.5856770277023315, 0.5966213345527649, 0.6077703237533569, 0.6191129088401794, 0.630638599395752, 0.6423376202583313, 0.6542006731033325, 0.6662189364433289, 0.6783841848373413, 0.6906886100769043, 0.703125, 0.7156863808631897, 0.7283663749694824, 0.7411588430404663, 0.7540580034255981, 0.7670586109161377, 0.7801554799079895, 0.7933439016342163, 0.8066193461418152, 0.8199775815010071, 0.8334147334098816, 0.8469268679618835, 0.8605105876922607, 0.8741625547409058, 0.8878795504570007, 0.9016586542129517, 0.9154970049858093, 0.9293920397758484, 0.9433411955833435, 0.9573420882225037, 0.9713925719261169, 0.9854904413223267, 0.9996337294578552, 1.0138205289840698, 1.0280489921569824, 1.042317509651184, 1.056624412536621, 1.0709681510925293, 1.0853471755981445, 1.0997602939605713, 1.114206075668335, 1.1286832094192505, 1.143190622329712, 1.1577271223068237, 1.17229163646698, 1.1868830919265747, 1.2015005350112915, 1.216143012046814, 1.2308096885681152, 1.2454997301101685, 1.2602121829986572, 1.2749463319778442, 1.2897015810012817, 1.3044769763946533, 1.3192719221115112, 1.3340859413146973, 1.348918080329895, 1.3637681007385254, 1.3786351680755615, 1.3935188055038452, 1.4084184169769287, 1.423333764076233, 1.438264012336731, 1.4532090425491333, 1.4681681394577026, 1.4831409454345703, 1.4981271028518677, 1.5131261348724365, 1.5281378030776978, 1.5431616306304932, 1.558197259902954, 1.573244333267212, 1.5883026123046875, 1.6033717393875122, 1.6184513568878174, 1.633541226387024, 1.6486411094665527, 1.6637506484985352, 1.6788697242736816, 1.693997859954834, 1.7091350555419922, 1.724280834197998, 1.7394351959228516, 1.754597783088684, 1.7697683572769165, 1.7849467992782593, 1.8001328706741333, 1.815326452255249, 1.8305273056030273, 1.8457351922988892, 1.860949993133545, 1.8761714696884155, 1.891399621963501, 1.9066342115402222, 1.921875, 1.9371219873428345, 1.952374815940857, 1.967633605003357, 1.9828981161117554, 1.9981681108474731, 2.0134434700012207, 2.028724431991577, 2.0440104007720947, 2.028724431991577, 2.0134434700012207, 1.9981681108474731, 1.9828981161117554, 1.967633605003357, 1.952374815940857, 1.9371219873428345, 1.921875, 1.9066342115402222, 1.891399621963501, 1.8761714696884155, 1.860949993133545, 1.8457351922988892, 1.8305273056030273, 1.815326452255249, 1.8001328706741333, 1.7849467992782593, 1.7697683572769165, 1.754597783088684, 1.7394351959228516, 1.724280834197998, 1.7091350555419922, 1.693997859954834, 1.6788697242736816, 1.6637506484985352, 1.6486411094665527, 1.633541226387024, 1.6184513568878174, 1.6033717393875122, 1.5883026123046875, 1.573244333267212, 1.558197259902954, 1.5431616306304932, 1.5281378030776978, 1.5131261348724365, 1.4981271028518677, 1.4831409454345703, 1.4681681394577026, 1.4532090425491333, 1.438264012336731, 1.423333764076233, 1.4084184169769287, 1.3935188055038452, 1.3786351680755615, 1.3637681007385254, 1.348918080329895, 1.3340859413146973, 1.3192719221115112, 1.3044769763946533, 1.2897015810012817, 1.2749463319778442, 1.2602121829986572, 1.2454997301101685, 1.2308096885681152, 1.216143012046814, 1.2015005350112915, 1.1868830919265747, 1.17229163646698, 1.1577271223068237, 1.143190622329712, 1.1286832094192505, 1.114206075668335, 1.0997602939605713, 1.0853471755981445, 1.0709681510925293, 1.056624412536621, 1.042317509651184, 1.0280489921569824, 1.0138205289840698, 0.9996337294578552, 0.9854904413223267, 0.9713925719261169, 0.9573420882225037, 0.9433411955833435, 0.9293920397758484, 0.9154970049858093, 0.9016586542129517, 0.8878795504570007, 0.8741625547409058, 0.8605105876922607, 0.8469268679618835, 0.8334147334098816, 0.8199775815010071, 0.8066193461418152, 0.7933439016342163, 0.7801554799079895, 0.7670586109161377, 0.7540580034255981, 0.7411588430404663, 0.7283663749694824, 0.7156863808631897, 0.703125, 0.6906886100769043, 0.6783841848373413, 0.6662189364433289, 0.6542006731033325, 0.6423376202583313, 0.630638599395752, 0.6191129088401794, 0.6077703237533569, 0.5966213345527649, 0.5856770277023315, 0.5749490261077881, 0.5644497275352478, 0.5541921257972717, 0.5441898107528687, 0.5344572067260742, 0.525009274482727, 0.5158616900444031, 0.5070306658744812, 0.4985330104827881, 0.49038609862327576, 0.4826076626777649, 0.4752158224582672, 0.46822887659072876, 0.46166521310806274, 0.4555431306362152, 0.4498806297779083, 0.44469529390335083, 0.44000399112701416, 0.43582266569137573, 0.4321661591529846, 0.4290478229522705, 0.4264794886112213, 0.4244711697101593, 0.423030823469162, 0.42216426134109497, 0.40625, 0.4065503776073456, 0.4074501395225525, 0.40894538164138794, 0.411029577255249, 0.4136938154697418, 0.4169270098209381, 0.42071598768234253, 0.4250459671020508, 0.42990052700042725, 0.43526214361190796, 0.44111230969429016, 0.44743192195892334, 0.4542013108730316, 0.46140071749687195, 0.4690103530883789, 0.4770105481147766, 0.4853820204734802, 0.49410587549209595, 0.5031638145446777, 0.5125381350517273, 0.5222117304801941, 0.5321683287620544, 0.5423923134803772, 0.5528689622879028, 0.56358402967453, 0.5745242834091187, 0.5856770277023315, 0.5970304012298584, 0.6085731983184814, 0.6202948093414307, 0.6321852803230286, 0.6442352533340454, 0.6564359664916992, 0.668779194355011, 0.6812571883201599, 0.6938626170158386, 0.7065886855125427, 0.7194290161132812, 0.7323775887489319, 0.7454288005828857, 0.7585772275924683, 0.7718180418014526, 0.7851465344429016, 0.7985582947731018, 0.812049150466919, 0.8256152868270874, 0.8392530679702759, 0.8529589772224426, 0.8667299151420593, 0.8805626630783081, 0.8944544792175293, 0.9084026217460632, 0.9224045276641846, 0.9364577531814575, 0.9505600929260254, 0.9647093415260315, 0.9789034724235535, 0.9931405186653137, 1.0074187517166138, 1.0217363834381104, 1.0360918045043945, 1.0504834651947021, 1.0649099349975586, 1.0793697834014893, 1.0938615798950195, 1.1083842515945435, 1.122936487197876, 1.1375172138214111, 1.1521252393722534, 1.1667596101760864, 1.1814194917678833, 1.1961036920547485, 1.2108114957809448, 1.2255419492721558, 1.240294337272644, 1.2550678253173828, 1.2698616981506348, 1.2846752405166626, 1.2995078563690186, 1.3143588304519653, 1.3292274475097656, 1.3441133499145508, 1.359015703201294, 1.373934268951416, 1.3888683319091797, 1.4038172960281372, 1.4187809228897095, 1.4337587356567383, 1.4487501382827759, 1.4637547731399536, 1.4787722826004028, 1.4938023090362549, 1.5088443756103516, 1.5238981246948242, 1.5389633178710938, 1.5540395975112915, 1.5691266059875488, 1.584223985671997, 1.5993314981460571, 1.61444890499115, 1.6295758485794067, 1.644712209701538, 1.6598575115203857, 1.6750116348266602, 1.6901743412017822, 1.7053455114364624, 1.7205246686935425, 1.7357118129730225, 1.7509065866470337, 1.7661088705062866, 1.7813185453414917, 1.7965352535247803, 1.8117589950561523, 1.8269895315170288, 1.8422266244888306, 1.857470154762268, 1.8727200031280518, 1.8879759311676025, 1.9032379388809204, 1.9185056686401367, 1.933779239654541, 1.9490582942962646, 1.9643428325653076, 1.9796326160430908, 1.9949276447296143, 2.010227680206299, 2.0255327224731445, 2.0408427715301514, 2.0255327224731445, 2.010227680206299, 1.9949276447296143, 1.9796326160430908, 1.9643428325653076, 1.9490582942962646, 1.933779239654541, 1.9185056686401367, 1.9032379388809204, 1.8879759311676025, 1.8727200031280518, 1.857470154762268, 1.8422266244888306, 1.8269895315170288, 1.8117589950561523, 1.7965352535247803, 1.7813185453414917, 1.7661088705062866, 1.7509065866470337, 1.7357118129730225, 1.7205246686935425, 1.7053455114364624, 1.6901743412017822, 1.6750116348266602, 1.6598575115203857, 1.644712209701538, 1.6295758485794067, 1.61444890499115, 1.5993314981460571, 1.584223985671997, 1.5691266059875488, 1.5540395975112915, 1.5389633178710938, 1.5238981246948242, 1.5088443756103516, 1.4938023090362549, 1.4787722826004028, 1.4637547731399536, 1.4487501382827759, 1.4337587356567383, 1.4187809228897095, 1.4038172960281372, 1.3888683319091797, 1.373934268951416, 1.359015703201294, 1.3441133499145508, 1.3292274475097656, 1.3143588304519653, 1.2995078563690186, 1.2846752405166626, 1.2698616981506348, 1.2550678253173828, 1.240294337272644, 1.2255419492721558, 1.2108114957809448, 1.1961036920547485, 1.1814194917678833, 1.1667596101760864, 1.1521252393722534, 1.1375172138214111, 1.122936487197876, 1.1083842515945435, 1.0938615798950195, 1.0793697834014893, 1.0649099349975586, 1.0504834651947021, 1.0360918045043945, 1.0217363834381104, 1.0074187517166138, 0.9931405186653137, 0.9789034724235535, 0.9647093415260315, 0.9505600929260254, 0.9364577531814575, 0.9224045276641846, 0.9084026217460632, 0.8944544792175293, 0.8805626630783081, 0.8667299151420593, 0.8529589772224426, 0.8392530679702759, 0.8256152868270874, 0.812049150466919, 0.7985582947731018, 0.7851465344429016, 0.7718180418014526, 0.7585772275924683, 0.7454288005828857, 0.7323775887489319, 0.7194290161132812, 0.7065886855125427, 0.6938626170158386, 0.6812571883201599, 0.668779194355011, 0.6564359664916992, 0.6442352533340454, 0.6321852803230286, 0.6202948093414307, 0.6085731983184814, 0.5970304012298584, 0.5856770277023315, 0.5745242834091187, 0.56358402967453, 0.5528689622879028, 0.5423923134803772, 0.5321683287620544, 0.5222117304801941, 0.5125381350517273, 0.5031638145446777, 0.49410587549209595, 0.4853820204734802, 0.4770105481147766, 0.4690103530883789, 0.46140071749687195, 0.4542013108730316, 0.44743192195892334, 0.44111230969429016, 0.43526214361190796, 0.42990052700042725, 0.4250459671020508, 0.42071598768234253, 0.4169270098209381, 0.4136938154697418, 0.411029577255249, 0.40894538164138794, 0.4074501395225525, 0.4065503776073456, 0.390625, 0.3909373879432678, 0.39187300205230713, 0.39342746138572693, 0.39559340476989746, 0.3983609080314636, 0.40171751379966736, 0.4056485891342163, 0.4101376533508301, 0.41516655683517456, 0.42071598768234253, 0.4267656207084656, 0.43329450488090515, 0.44028133153915405, 0.44770464301109314, 0.4555431306362152, 0.4637756943702698, 0.4723817706108093, 0.48134130239486694, 0.490634948015213, 0.5002440810203552, 0.5101508498191833, 0.5203382968902588, 0.5307902693748474, 0.5414913296699524, 0.5524271726608276, 0.56358402967453, 0.5749490261077881, 0.5865101218223572, 0.5982559323310852, 0.6101757287979126, 0.6222596168518066, 0.634498119354248, 0.6468825340270996, 0.6594046354293823, 0.6720566749572754, 0.684831440448761, 0.697722315788269, 0.7107228636741638, 0.7238271832466125, 0.7370297908782959, 0.7503254413604736, 0.7637093663215637, 0.7771768569946289, 0.7907238006591797, 0.8043460845947266, 0.8180400133132935, 0.8318019509315491, 0.8456286787986755, 0.8595170378684998, 0.873464047908783, 0.8874669671058655, 0.901523232460022, 0.9156303405761719, 0.929785966873169, 0.9439879655838013, 0.9582342505455017, 0.9725229144096375, 0.9868520498275757, 1.0012199878692627, 1.015625, 1.030065655708313, 1.044540286064148, 1.0590476989746094, 1.0735864639282227, 1.0881553888320923, 1.1027531623840332, 1.1173787117004395, 1.132030963897705, 1.1467089653015137, 1.1614116430282593, 1.1761380434036255, 1.190887451171875, 1.2056589126586914, 1.2204515933990479, 1.2352646589279175, 1.250097632408142, 1.2649496793746948, 1.2798200845718384, 1.294708251953125, 1.309613585472107, 1.324535608291626, 1.3394736051559448, 1.3544270992279053, 1.3693954944610596, 1.3843785524368286, 1.399375557899475, 1.4143861532211304, 1.4294099807739258, 1.4444465637207031, 1.4594954252243042, 1.47455632686615, 1.4896289110183716, 1.504712700843811, 1.5198073387145996, 1.5349127054214478, 1.5500283241271973, 1.565153956413269, 1.580289363861084, 1.5954341888427734, 1.6105881929397583, 1.62575101852417, 1.6409225463867188, 1.6561025381088257, 1.6712907552719116, 1.6864869594573975, 1.701690912246704, 1.7169023752212524, 1.732121229171753, 1.747347354888916, 1.762580394744873, 1.777820110321045, 1.7930666208267212, 1.8083195686340332, 1.8235787153244019, 1.8388440608978271, 1.8541154861450195, 1.8693926334381104, 1.8846755027770996, 1.8999639749526978, 1.9152579307556152, 1.930557131767273, 1.9458614587783813, 1.9611709117889404, 1.976485252380371, 1.9918044805526733, 2.0071284770965576, 2.0224568843841553, 2.037790060043335, 2.0224568843841553, 2.0071284770965576, 1.9918044805526733, 1.976485252380371, 1.9611709117889404, 1.9458614587783813, 1.930557131767273, 1.9152579307556152, 1.8999639749526978, 1.8846755027770996, 1.8693926334381104, 1.8541154861450195, 1.8388440608978271, 1.8235787153244019, 1.8083195686340332, 1.7930666208267212, 1.777820110321045, 1.762580394744873, 1.747347354888916, 1.732121229171753, 1.7169023752212524, 1.701690912246704, 1.6864869594573975, 1.6712907552719116, 1.6561025381088257, 1.6409225463867188, 1.62575101852417, 1.6105881929397583, 1.5954341888427734, 1.580289363861084, 1.565153956413269, 1.5500283241271973, 1.5349127054214478, 1.5198073387145996, 1.504712700843811, 1.4896289110183716, 1.47455632686615, 1.4594954252243042, 1.4444465637207031, 1.4294099807739258, 1.4143861532211304, 1.399375557899475, 1.3843785524368286, 1.3693954944610596, 1.3544270992279053, 1.3394736051559448, 1.324535608291626, 1.309613585472107, 1.294708251953125, 1.2798200845718384, 1.2649496793746948, 1.250097632408142, 1.2352646589279175, 1.2204515933990479, 1.2056589126586914, 1.190887451171875, 1.1761380434036255, 1.1614116430282593, 1.1467089653015137, 1.132030963897705, 1.1173787117004395, 1.1027531623840332, 1.0881553888320923, 1.0735864639282227, 1.0590476989746094, 1.044540286064148, 1.030065655708313, 1.015625, 1.0012199878692627, 0.9868520498275757, 0.9725229144096375, 0.9582342505455017, 0.9439879655838013, 0.929785966873169, 0.9156303405761719, 0.901523232460022, 0.8874669671058655, 0.873464047908783, 0.8595170378684998, 0.8456286787986755, 0.8318019509315491, 0.8180400133132935, 0.8043460845947266, 0.7907238006591797, 0.7771768569946289, 0.7637093663215637, 0.7503254413604736, 0.7370297908782959, 0.7238271832466125, 0.7107228636741638, 0.697722315788269, 0.684831440448761, 0.6720566749572754, 0.6594046354293823, 0.6468825340270996, 0.634498119354248, 0.6222596168518066, 0.6101757287979126, 0.5982559323310852, 0.5865101218223572, 0.5749490261077881, 0.56358402967453, 0.5524271726608276, 0.5414913296699524, 0.5307902693748474, 0.5203382968902588, 0.5101508498191833, 0.5002440810203552, 0.490634948015213, 0.48134130239486694, 0.4723817706108093, 0.4637756943702698, 0.4555431306362152, 0.44770464301109314, 0.44028133153915405, 0.43329450488090515, 0.4267656207084656, 0.42071598768234253, 0.41516655683517456, 0.4101376533508301, 0.4056485891342163, 0.40171751379966736, 0.3983609080314636, 0.39559340476989746, 0.39342746138572693, 0.39187300205230713, 0.3909373879432678, 0.375, 0.37532538175582886, 0.37629982829093933, 0.3779183328151703, 0.3801726698875427, 0.3830515742301941, 0.3865411579608917, 0.390625, 0.3952847123146057, 0.40050017833709717, 0.40625, 0.41251182556152344, 0.41926273703575134, 0.4264794886112213, 0.43413886427879333, 0.4422178566455841, 0.45069390535354614, 0.4595450460910797, 0.46875, 0.4782883822917938, 0.48814061284065247, 0.498288094997406, 0.5087131261825562, 0.5193990468978882, 0.5303300619125366, 0.5414913296699524, 0.5528689622879028, 0.5644497275352478, 0.5762215256690979, 0.5881727933883667, 0.6002929210662842, 0.6125717163085938, 0.625, 0.6375689506530762, 0.650270402431488, 0.6630967259407043, 0.6760408878326416, 0.6890961527824402, 0.7022563815116882, 0.7155157923698425, 0.7288689613342285, 0.7423108220100403, 0.7558366656303406, 0.7694420218467712, 0.7831227779388428, 0.796875, 0.8106951117515564, 0.824579656124115, 0.8385254740715027, 0.8525295257568359, 0.8665890097618103, 0.8807013034820557, 0.8948638439178467, 0.9090742468833923, 0.9233304262161255, 0.9376301765441895, 0.9519716501235962, 0.9663528800010681, 0.9807721972465515, 0.9952278733253479, 1.009718418121338, 1.0242422819137573, 1.0387980937957764, 1.0533846616744995, 1.0680004358291626, 1.0826444625854492, 1.0973156690597534, 1.1120127439498901, 1.126734733581543, 1.141480803489685, 1.15625, 1.1710413694381714, 1.1858540773391724, 1.2006874084472656, 1.2155406475067139, 1.2304129600524902, 1.2453036308288574, 1.2602121829986572, 1.2751379013061523, 1.2900800704956055, 1.305038332939148, 1.3200119733810425, 1.3350006341934204, 1.3500036001205444, 1.3650206327438354, 1.3800511360168457, 1.395094633102417, 1.4101508855819702, 1.4252192974090576, 1.4402996301651, 1.4553914070129395, 1.470494270324707, 1.4856079816818237, 1.5007323026657104, 1.5158666372299194, 1.5310108661651611, 1.546164631843567, 1.5613276958465576, 1.5764998197555542, 1.591680645942688, 1.6068700551986694, 1.6220676898956299, 1.6372733116149902, 1.6524869203567505, 1.6677080392837524, 1.6829365491867065, 1.6981722116470337, 1.7134150266647339, 1.7286646366119385, 1.7439208030700684, 1.7591835260391235, 1.7744524478912354, 1.7897276878356934, 1.8050087690353394, 1.8202956914901733, 1.8355884552001953, 1.850886583328247, 1.8661901950836182, 1.881499171257019, 1.8968132734298706, 1.9121322631835938, 1.9274563789367676, 1.9427851438522339, 1.9581185579299927, 1.973456621170044, 1.9887992143630981, 2.004146099090576, 2.0194971561431885, 2.0348525047302246, 2.0194971561431885, 2.004146099090576, 1.9887992143630981, 1.973456621170044, 1.9581185579299927, 1.9427851438522339, 1.9274563789367676, 1.9121322631835938, 1.8968132734298706, 1.881499171257019, 1.8661901950836182, 1.850886583328247, 1.8355884552001953, 1.8202956914901733, 1.8050087690353394, 1.7897276878356934, 1.7744524478912354, 1.7591835260391235, 1.7439208030700684, 1.7286646366119385, 1.7134150266647339, 1.6981722116470337, 1.6829365491867065, 1.6677080392837524, 1.6524869203567505, 1.6372733116149902, 1.6220676898956299, 1.6068700551986694, 1.591680645942688, 1.5764998197555542, 1.5613276958465576, 1.546164631843567, 1.5310108661651611, 1.5158666372299194, 1.5007323026657104, 1.4856079816818237, 1.470494270324707, 1.4553914070129395, 1.4402996301651, 1.4252192974090576, 1.4101508855819702, 1.395094633102417, 1.3800511360168457, 1.3650206327438354, 1.3500036001205444, 1.3350006341934204, 1.3200119733810425, 1.305038332939148, 1.2900800704956055, 1.2751379013061523, 1.2602121829986572, 1.2453036308288574, 1.2304129600524902, 1.2155406475067139, 1.2006874084472656, 1.1858540773391724, 1.1710413694381714, 1.15625, 1.141480803489685, 1.126734733581543, 1.1120127439498901, 1.0973156690597534, 1.0826444625854492, 1.0680004358291626, 1.0533846616744995, 1.0387980937957764, 1.0242422819137573, 1.009718418121338, 0.9952278733253479, 0.9807721972465515, 0.9663528800010681, 0.9519716501235962, 0.9376301765441895, 0.9233304262161255, 0.9090742468833923, 0.8948638439178467, 0.8807013034820557, 0.8665890097618103, 0.8525295257568359, 0.8385254740715027, 0.824579656124115, 0.8106951117515564, 0.796875, 0.7831227779388428, 0.7694420218467712, 0.7558366656303406, 0.7423108220100403, 0.7288689613342285, 0.7155157923698425, 0.7022563815116882, 0.6890961527824402, 0.6760408878326416, 0.6630967259407043, 0.650270402431488, 0.6375689506530762, 0.625, 0.6125717163085938, 0.6002929210662842, 0.5881727933883667, 0.5762215256690979, 0.5644497275352478, 0.5528689622879028, 0.5414913296699524, 0.5303300619125366, 0.5193990468978882, 0.5087131261825562, 0.498288094997406, 0.48814061284065247, 0.4782883822917938, 0.46875, 0.4595450460910797, 0.45069390535354614, 0.4422178566455841, 0.43413886427879333, 0.4264794886112213, 0.41926273703575134, 0.41251182556152344, 0.40625, 0.40050017833709717, 0.3952847123146057, 0.390625, 0.3865411579608917, 0.3830515742301941, 0.3801726698875427, 0.3779183328151703, 0.37629982829093933, 0.37532538175582886, 0.359375, 0.3597145080566406, 0.3607311248779297, 0.36241915822029114, 0.36476930975914, 0.3677688241004944, 0.37140199542045593, 0.37565046548843384, 0.3804936110973358, 0.3859090209007263, 0.39187300205230713, 0.3983609080314636, 0.4053475558757782, 0.4128076434135437, 0.42071598768234253, 0.4290478229522705, 0.43777891993522644, 0.4468859136104584, 0.4563463032245636, 0.4661385715007782, 0.47624221444129944, 0.4866378605365753, 0.4973072111606598, 0.5082330107688904, 0.5193990468978882, 0.5307902693748474, 0.5423923134803772, 0.5541921257972717, 0.5661771893501282, 0.5783361196517944, 0.5906580686569214, 0.6031330823898315, 0.6157518625259399, 0.6285057663917542, 0.6413867473602295, 0.6543872356414795, 0.6675003170967102, 0.6807193756103516, 0.6940385103225708, 0.7074519395828247, 0.7209544777870178, 0.7345411777496338, 0.7482075095176697, 0.7619490623474121, 0.7757619619369507, 0.7896423935890198, 0.8035869002342224, 0.817592203617096, 0.8316552042961121, 0.8457730412483215, 0.8599429726600647, 0.8741625547409058, 0.8884292840957642, 0.9027410745620728, 0.9170956611633301, 0.9314911365509033, 0.9459256529808044, 0.960397481918335, 0.9749048352241516, 0.9894462823867798, 1.0040202140808105, 1.0186253786087036, 1.0332603454589844, 1.0479239225387573, 1.062614917755127, 1.0773321390151978, 1.0920746326446533, 1.1068413257598877, 1.1216312646865845, 1.1364434957504272, 1.1512773036956787, 1.1661317348480225, 1.1810060739517212, 1.1958996057510376, 1.2108114957809448, 1.2257411479949951, 1.2406879663467407, 1.2556512355804443, 1.2706304788589478, 1.2856251001358032, 1.3006346225738525, 1.315658450126648, 1.3306959867477417, 1.3457471132278442, 1.3608109951019287, 1.3758875131607056, 1.390976071357727, 1.406076431274414, 1.4211879968643188, 1.4363106489181519, 1.4514439105987549, 1.4665875434875488, 1.4817410707473755, 1.4969043731689453, 1.5120769739151, 1.5272588729858398, 1.5424494743347168, 1.557648777961731, 1.5728563070297241, 1.5880719423294067, 1.6032955646514893, 1.618526816368103, 1.633765459060669, 1.649011254310608, 1.66426420211792, 1.6795239448547363, 1.6947903633117676, 1.7100632190704346, 1.7253425121307373, 1.7406277656555176, 1.755919098854065, 1.7712162733078003, 1.7865190505981445, 1.8018274307250977, 1.8171411752700806, 1.8324601650238037, 1.8477842807769775, 1.8631134033203125, 1.8784472942352295, 1.893786072731018, 1.9091295003890991, 1.924477458000183, 1.939829707145691, 1.955186367034912, 1.9705473184585571, 1.9859123229980469, 2.001281261444092, 2.0166542530059814, 2.0320310592651367, 2.0166542530059814, 2.001281261444092, 1.9859123229980469, 1.9705473184585571, 1.955186367034912, 1.939829707145691, 1.924477458000183, 1.9091295003890991, 1.893786072731018, 1.8784472942352295, 1.8631134033203125, 1.8477842807769775, 1.8324601650238037, 1.8171411752700806, 1.8018274307250977, 1.7865190505981445, 1.7712162733078003, 1.755919098854065, 1.7406277656555176, 1.7253425121307373, 1.7100632190704346, 1.6947903633117676, 1.6795239448547363, 1.66426420211792, 1.649011254310608, 1.633765459060669, 1.618526816368103, 1.6032955646514893, 1.5880719423294067, 1.5728563070297241, 1.557648777961731, 1.5424494743347168, 1.5272588729858398, 1.5120769739151, 1.4969043731689453, 1.4817410707473755, 1.4665875434875488, 1.4514439105987549, 1.4363106489181519, 1.4211879968643188, 1.406076431274414, 1.390976071357727, 1.3758875131607056, 1.3608109951019287, 1.3457471132278442, 1.3306959867477417, 1.315658450126648, 1.3006346225738525, 1.2856251001358032, 1.2706304788589478, 1.2556512355804443, 1.2406879663467407, 1.2257411479949951, 1.2108114957809448, 1.1958996057510376, 1.1810060739517212, 1.1661317348480225, 1.1512773036956787, 1.1364434957504272, 1.1216312646865845, 1.1068413257598877, 1.0920746326446533, 1.0773321390151978, 1.062614917755127, 1.0479239225387573, 1.0332603454589844, 1.0186253786087036, 1.0040202140808105, 0.9894462823867798, 0.9749048352241516, 0.960397481918335, 0.9459256529808044, 0.9314911365509033, 0.9170956611633301, 0.9027410745620728, 0.8884292840957642, 0.8741625547409058, 0.8599429726600647, 0.8457730412483215, 0.8316552042961121, 0.817592203617096, 0.8035869002342224, 0.7896423935890198, 0.7757619619369507, 0.7619490623474121, 0.7482075095176697, 0.7345411777496338, 0.7209544777870178, 0.7074519395828247, 0.6940385103225708, 0.6807193756103516, 0.6675003170967102, 0.6543872356414795, 0.6413867473602295, 0.6285057663917542, 0.6157518625259399, 0.6031330823898315, 0.5906580686569214, 0.5783361196517944, 0.5661771893501282, 0.5541921257972717, 0.5423923134803772, 0.5307902693748474, 0.5193990468978882, 0.5082330107688904, 0.4973072111606598, 0.4866378605365753, 0.47624221444129944, 0.4661385715007782, 0.4563463032245636, 0.4468859136104584, 0.43777891993522644, 0.4290478229522705, 0.42071598768234253, 0.4128076434135437, 0.4053475558757782, 0.3983609080314636, 0.39187300205230713, 0.3859090209007263, 0.3804936110973358, 0.37565046548843384, 0.37140199542045593, 0.3677688241004944, 0.36476930975914, 0.36241915822029114, 0.3607311248779297, 0.3597145080566406, 0.34375, 0.34410491585731506, 0.34516751766204834, 0.3469313085079193, 0.3493856191635132, 0.3525160551071167, 0.3563048243522644, 0.3607311248779297, 0.3657718598842621, 0.37140199542045593, 0.3775951862335205, 0.38432419300079346, 0.3915613889694214, 0.3992791473865509, 0.4074501395225525, 0.41604772210121155, 0.4250459671020508, 0.4344199597835541, 0.44414594769477844, 0.4542013108730316, 0.46456465125083923, 0.4752158224582672, 0.48613590002059937, 0.4973072111606598, 0.5087131261825562, 0.5203382968902588, 0.5321683287620544, 0.5441898107528687, 0.5563904047012329, 0.5687586069107056, 0.5812836289405823, 0.5939555764198303, 0.6067652702331543, 0.6197041273117065, 0.6327642798423767, 0.6459383368492126, 0.6592194437980652, 0.6726013422012329, 0.6860780715942383, 0.699644148349762, 0.713294506072998, 0.7270243763923645, 0.740829348564148, 0.7547053098678589, 0.7686483860015869, 0.7826550006866455, 0.7967218160629272, 0.810845673084259, 0.8250236511230469, 0.8392530679702759, 0.8535312414169312, 0.8678559064865112, 0.8822246193885803, 0.8966354131698608, 0.9110862612724304, 0.9255751967430115, 0.9401005506515503, 0.9546606540679932, 0.9692538976669312, 0.9838788509368896, 0.998534083366394, 1.0132182836532593, 1.0279302597045898, 1.0426688194274902, 1.057432770729065, 1.0722211599349976, 1.0870329141616821, 1.1018671989440918, 1.1167230606079102, 1.1315995454788208, 1.146496057510376, 1.1614116430282593, 1.1763455867767334, 1.1912974119186401, 1.206266164779663, 1.2212514877319336, 1.2362525463104248, 1.2512688636779785, 1.2662999629974365, 1.281345248222351, 1.296404242515564, 1.3114765882492065, 1.3265615701675415, 1.3416589498519897, 1.3567683696746826, 1.3718892335891724, 1.3870213031768799, 1.4021642208099365, 1.417317509651184, 1.432481050491333, 1.447654366493225, 1.4628372192382812, 1.4780292510986328, 1.4932302236557007, 1.5084397792816162, 1.5236577987670898, 1.5388840436935425, 1.5541181564331055, 1.5693598985671997, 1.5846091508865356, 1.5998656749725342, 1.6151292324066162, 1.6303997039794922, 1.6456767320632935, 1.66096031665802, 1.6762501001358032, 1.691546082496643, 1.7068480253219604, 1.7221556901931763, 1.7374690771102905, 1.7527879476547241, 1.7681121826171875, 1.7834416627883911, 1.7987761497497559, 1.8141156435012817, 1.8294600248336792, 1.8448090553283691, 1.860162615776062, 1.8755207061767578, 1.890883207321167, 1.90625, 1.9216209650039673, 1.9369958639144897, 1.952374815940857, 1.9677577018737793, 1.9831442832946777, 1.9985345602035522, 2.0139286518096924, 2.0293259620666504, 2.0139286518096924, 1.9985345602035522, 1.9831442832946777, 1.9677577018737793, 1.952374815940857, 1.9369958639144897, 1.9216209650039673, 1.90625, 1.890883207321167, 1.8755207061767578, 1.860162615776062, 1.8448090553283691, 1.8294600248336792, 1.8141156435012817, 1.7987761497497559, 1.7834416627883911, 1.7681121826171875, 1.7527879476547241, 1.7374690771102905, 1.7221556901931763, 1.7068480253219604, 1.691546082496643, 1.6762501001358032, 1.66096031665802, 1.6456767320632935, 1.6303997039794922, 1.6151292324066162, 1.5998656749725342, 1.5846091508865356, 1.5693598985671997, 1.5541181564331055, 1.5388840436935425, 1.5236577987670898, 1.5084397792816162, 1.4932302236557007, 1.4780292510986328, 1.4628372192382812, 1.447654366493225, 1.432481050491333, 1.417317509651184, 1.4021642208099365, 1.3870213031768799, 1.3718892335891724, 1.3567683696746826, 1.3416589498519897, 1.3265615701675415, 1.3114765882492065, 1.296404242515564, 1.281345248222351, 1.2662999629974365, 1.2512688636779785, 1.2362525463104248, 1.2212514877319336, 1.206266164779663, 1.1912974119186401, 1.1763455867767334, 1.1614116430282593, 1.146496057510376, 1.1315995454788208, 1.1167230606079102, 1.1018671989440918, 1.0870329141616821, 1.0722211599349976, 1.057432770729065, 1.0426688194274902, 1.0279302597045898, 1.0132182836532593, 0.998534083366394, 0.9838788509368896, 0.9692538976669312, 0.9546606540679932, 0.9401005506515503, 0.9255751967430115, 0.9110862612724304, 0.8966354131698608, 0.8822246193885803, 0.8678559064865112, 0.8535312414169312, 0.8392530679702759, 0.8250236511230469, 0.810845673084259, 0.7967218160629272, 0.7826550006866455, 0.7686483860015869, 0.7547053098678589, 0.740829348564148, 0.7270243763923645, 0.713294506072998, 0.699644148349762, 0.6860780715942383, 0.6726013422012329, 0.6592194437980652, 0.6459383368492126, 0.6327642798423767, 0.6197041273117065, 0.6067652702331543, 0.5939555764198303, 0.5812836289405823, 0.5687586069107056, 0.5563904047012329, 0.5441898107528687, 0.5321683287620544, 0.5203382968902588, 0.5087131261825562, 0.4973072111606598, 0.48613590002059937, 0.4752158224582672, 0.46456465125083923, 0.4542013108730316, 0.44414594769477844, 0.4344199597835541, 0.4250459671020508, 0.41604772210121155, 0.4074501395225525, 0.3992791473865509, 0.3915613889694214, 0.38432419300079346, 0.3775951862335205, 0.37140199542045593, 0.3657718598842621, 0.3607311248779297, 0.3563048243522644, 0.3525160551071167, 0.3493856191635132, 0.3469313085079193, 0.34516751766204834, 0.34410491585731506, 0.328125, 0.3284968137741089, 0.3296097218990326, 0.3314563035964966, 0.3340243399143219, 0.33729737997055054, 0.34125515818595886, 0.3458741307258606, 0.3511281907558441, 0.3569893538951874, 0.3634282350540161, 0.370414674282074, 0.3779183328151703, 0.3859090209007263, 0.39435717463493347, 0.40323400497436523, 0.41251182556152344, 0.42216426134109497, 0.4321661591529846, 0.44249382615089417, 0.453125, 0.46403881907463074, 0.4752158224582672, 0.4866378605365753, 0.498288094997406, 0.5101508498191833, 0.5222117304801941, 0.5344572067260742, 0.546875, 0.559453547000885, 0.572182297706604, 0.585051417350769, 0.5980518460273743, 0.6111752390861511, 0.624413788318634, 0.63776034116745, 0.6512083411216736, 0.6647514700889587, 0.6783841848373413, 0.6921010613441467, 0.705897331237793, 0.7197682857513428, 0.7337098121643066, 0.7477178573608398, 0.7617888450622559, 0.7759193181991577, 0.7901060581207275, 0.8043460845947266, 0.8186366558074951, 0.8329752087593079, 0.8473591804504395, 0.8617863655090332, 0.876254677772522, 0.8907620310783386, 0.9053066372871399, 0.9198866486549377, 0.9345003962516785, 0.9491463899612427, 0.963823139667511, 0.9785292744636536, 0.9932634234428406, 1.0080244541168213, 1.0228111743927002, 1.037622332572937, 1.0524570941925049, 1.0673145055770874, 1.082193374633789, 1.097093105316162, 1.1120127439498901, 1.1269514560699463, 1.1419085264205933, 1.1568832397460938, 1.171875, 1.1868830919265747, 1.2019068002700806, 1.216945767402649, 1.2319992780685425, 1.247066855430603, 1.2621480226516724, 1.2772421836853027, 1.2923489809036255, 1.307468056678772, 1.3225988149642944, 1.3377408981323242, 1.3528940677642822, 1.3680577278137207, 1.38323175907135, 1.3984156847000122, 1.413609266281128, 1.428812026977539, 1.4440239667892456, 1.4592444896697998, 1.4744735956192017, 1.489710807800293, 1.5049560070037842, 1.5202089548110962, 1.5354692935943604, 1.5507370233535767, 1.566011667251587, 1.5812932252883911, 1.5965814590454102, 1.611876130104065, 1.6271770000457764, 1.6424840688705444, 1.6577969789505005, 1.6731157302856445, 1.6884400844573975, 1.7037699222564697, 1.7191051244735718, 1.734445333480835, 1.7497906684875488, 1.7651410102844238, 1.7804960012435913, 1.7958556413650513, 1.8112199306488037, 1.82658851146698, 1.8419615030288696, 1.8573386669158936, 1.8727200031280518, 1.8881052732467651, 1.9034944772720337, 1.9188873767852783, 1.9342840909957886, 1.949684500694275, 1.9650883674621582, 1.9804956912994385, 1.9959064722061157, 2.0113205909729004, 2.026737689971924, 2.0113205909729004, 1.9959064722061157, 1.9804956912994385, 1.9650883674621582, 1.949684500694275, 1.9342840909957886, 1.9188873767852783, 1.9034944772720337, 1.8881052732467651, 1.8727200031280518, 1.8573386669158936, 1.8419615030288696, 1.82658851146698, 1.8112199306488037, 1.7958556413650513, 1.7804960012435913, 1.7651410102844238, 1.7497906684875488, 1.734445333480835, 1.7191051244735718, 1.7037699222564697, 1.6884400844573975, 1.6731157302856445, 1.6577969789505005, 1.6424840688705444, 1.6271770000457764, 1.611876130104065, 1.5965814590454102, 1.5812932252883911, 1.566011667251587, 1.5507370233535767, 1.5354692935943604, 1.5202089548110962, 1.5049560070037842, 1.489710807800293, 1.4744735956192017, 1.4592444896697998, 1.4440239667892456, 1.428812026977539, 1.413609266281128, 1.3984156847000122, 1.38323175907135, 1.3680577278137207, 1.3528940677642822, 1.3377408981323242, 1.3225988149642944, 1.307468056678772, 1.2923489809036255, 1.2772421836853027, 1.2621480226516724, 1.247066855430603, 1.2319992780685425, 1.216945767402649, 1.2019068002700806, 1.1868830919265747, 1.171875, 1.1568832397460938, 1.1419085264205933, 1.1269514560699463, 1.1120127439498901, 1.097093105316162, 1.082193374633789, 1.0673145055770874, 1.0524570941925049, 1.037622332572937, 1.0228111743927002, 1.0080244541168213, 0.9932634234428406, 0.9785292744636536, 0.963823139667511, 0.9491463899612427, 0.9345003962516785, 0.9198866486549377, 0.9053066372871399, 0.8907620310783386, 0.876254677772522, 0.8617863655090332, 0.8473591804504395, 0.8329752087593079, 0.8186366558074951, 0.8043460845947266, 0.7901060581207275, 0.7759193181991577, 0.7617888450622559, 0.7477178573608398, 0.7337098121643066, 0.7197682857513428, 0.705897331237793, 0.6921010613441467, 0.6783841848373413, 0.6647514700889587, 0.6512083411216736, 0.63776034116745, 0.624413788318634, 0.6111752390861511, 0.5980518460273743, 0.585051417350769, 0.572182297706604, 0.559453547000885, 0.546875, 0.5344572067260742, 0.5222117304801941, 0.5101508498191833, 0.498288094997406, 0.4866378605365753, 0.4752158224582672, 0.46403881907463074, 0.453125, 0.44249382615089417, 0.4321661591529846, 0.42216426134109497, 0.41251182556152344, 0.40323400497436523, 0.39435717463493347, 0.3859090209007263, 0.3779183328151703, 0.370414674282074, 0.3634282350540161, 0.3569893538951874, 0.3511281907558441, 0.3458741307258606, 0.34125515818595886, 0.33729737997055054, 0.3340243399143219, 0.3314563035964966, 0.3296097218990326, 0.3284968137741089, 0.3125, 0.3128903806209564, 0.3140586018562317, 0.31599608063697815, 0.3186887204647064, 0.3221176266670227, 0.326259583234787, 0.3310878276824951, 0.3365727961063385, 0.34268301725387573, 0.3493856191635132, 0.356647253036499, 0.36443448066711426, 0.37271440029144287, 0.38145485520362854, 0.390625, 0.40019527077674866, 0.4101376533508301, 0.42042574286460876, 0.4310348331928253, 0.4419417381286621, 0.453125, 0.46456465125083923, 0.47624221444129944, 0.48814061284065247, 0.5002440810203552, 0.5125381350517273, 0.525009274482727, 0.5376453399658203, 0.5504348278045654, 0.5633673667907715, 0.5764333605766296, 0.5896238088607788, 0.6029306650161743, 0.6163463592529297, 0.6298638582229614, 0.6434769034385681, 0.6571794152259827, 0.6709659695625305, 0.684831440448761, 0.6987712383270264, 0.7127808928489685, 0.7268564701080322, 0.7409940958023071, 0.755190372467041, 0.7694420218467712, 0.7837460041046143, 0.7980995774269104, 0.8125, 0.826944887638092, 0.8414319753646851, 0.8559591174125671, 0.8705242872238159, 0.8851255774497986, 0.8997612595558167, 0.9144296646118164, 0.9291293025016785, 0.9438586235046387, 0.9586163759231567, 0.9734011292457581, 0.9882117509841919, 1.0030471086502075, 1.0179060697555542, 1.0327876806259155, 1.0476908683776855, 1.062614917755127, 1.0775587558746338, 1.0925216674804688, 1.107502818107605, 1.1225016117095947, 1.1375172138214111, 1.1525490283966064, 1.1675963401794434, 1.1826586723327637, 1.1977355480194092, 1.212826132774353, 1.2279301881790161, 1.2430471181869507, 1.258176326751709, 1.2733176946640015, 1.2884705066680908, 1.303634524345398, 1.3188092708587646, 1.3339943885803223, 1.3491895198822021, 1.3643944263458252, 1.3796087503433228, 1.3948321342468262, 1.4100642204284668, 1.425304889678955, 1.4405537843704224, 1.4558106660842896, 1.4710752964019775, 1.4863473176956177, 1.50162672996521, 1.5169130563735962, 1.5322062969207764, 1.5475062131881714, 1.5628124475479126, 1.578125, 1.5934436321258545, 1.608768105506897, 1.624098300933838, 1.6394340991973877, 1.6547752618789673, 1.6701217889785767, 1.6854733228683472, 1.7008298635482788, 1.716191291809082, 1.7315573692321777, 1.746928095817566, 1.7623032331466675, 1.7776827812194824, 1.7930666208267212, 1.8084545135498047, 1.823846459388733, 1.8392423391342163, 1.8546420335769653, 1.87004554271698, 1.8854526281356812, 1.9008632898330688, 1.9162774085998535, 1.9316949844360352, 1.9471157789230347, 1.962539792060852, 1.9779670238494873, 1.9933973550796509, 2.0088305473327637, 2.0242669582366943, 2.0088305473327637, 1.9933973550796509, 1.9779670238494873, 1.962539792060852, 1.9471157789230347, 1.9316949844360352, 1.9162774085998535, 1.9008632898330688, 1.8854526281356812, 1.87004554271698, 1.8546420335769653, 1.8392423391342163, 1.823846459388733, 1.8084545135498047, 1.7930666208267212, 1.7776827812194824, 1.7623032331466675, 1.746928095817566, 1.7315573692321777, 1.716191291809082, 1.7008298635482788, 1.6854733228683472, 1.6701217889785767, 1.6547752618789673, 1.6394340991973877, 1.624098300933838, 1.608768105506897, 1.5934436321258545, 1.578125, 1.5628124475479126, 1.5475062131881714, 1.5322062969207764, 1.5169130563735962, 1.50162672996521, 1.4863473176956177, 1.4710752964019775, 1.4558106660842896, 1.4405537843704224, 1.425304889678955, 1.4100642204284668, 1.3948321342468262, 1.3796087503433228, 1.3643944263458252, 1.3491895198822021, 1.3339943885803223, 1.3188092708587646, 1.303634524345398, 1.2884705066680908, 1.2733176946640015, 1.258176326751709, 1.2430471181869507, 1.2279301881790161, 1.212826132774353, 1.1977355480194092, 1.1826586723327637, 1.1675963401794434, 1.1525490283966064, 1.1375172138214111, 1.1225016117095947, 1.107502818107605, 1.0925216674804688, 1.0775587558746338, 1.062614917755127, 1.0476908683776855, 1.0327876806259155, 1.0179060697555542, 1.0030471086502075, 0.9882117509841919, 0.9734011292457581, 0.9586163759231567, 0.9438586235046387, 0.9291293025016785, 0.9144296646118164, 0.8997612595558167, 0.8851255774497986, 0.8705242872238159, 0.8559591174125671, 0.8414319753646851, 0.826944887638092, 0.8125, 0.7980995774269104, 0.7837460041046143, 0.7694420218467712, 0.755190372467041, 0.7409940958023071, 0.7268564701080322, 0.7127808928489685, 0.6987712383270264, 0.684831440448761, 0.6709659695625305, 0.6571794152259827, 0.6434769034385681, 0.6298638582229614, 0.6163463592529297, 0.6029306650161743, 0.5896238088607788, 0.5764333605766296, 0.5633673667907715, 0.5504348278045654, 0.5376453399658203, 0.525009274482727, 0.5125381350517273, 0.5002440810203552, 0.48814061284065247, 0.47624221444129944, 0.46456465125083923, 0.453125, 0.4419417381286621, 0.4310348331928253, 0.42042574286460876, 0.4101376533508301, 0.40019527077674866, 0.390625, 0.38145485520362854, 0.37271440029144287, 0.36443448066711426, 0.356647253036499, 0.3493856191635132, 0.34268301725387573, 0.3365727961063385, 0.3310878276824951, 0.326259583234787, 0.3221176266670227, 0.3186887204647064, 0.31599608063697815, 0.3140586018562317, 0.3128903806209564, 0.296875, 0.29728591442108154, 0.2985152006149292, 0.3005528748035431, 0.30338263511657715, 0.30698254704475403, 0.31132590770721436, 0.31638213992118835, 0.3221176266670227, 0.3284968137741089, 0.33548298478126526, 0.34303903579711914, 0.3511281907558441, 0.3597145080566406, 0.3687632381916046, 0.3782412111759186, 0.3881169557571411, 0.3983609080314636, 0.40894538164138794, 0.4198446571826935, 0.4310348331928253, 0.44249382615089417, 0.4542013108730316, 0.4661385715007782, 0.4782883822917938, 0.490634948015213, 0.5031638145446777, 0.5158616900444031, 0.5287163853645325, 0.5417167544364929, 0.5548525452613831, 0.5681143403053284, 0.5814935564994812, 0.5949822664260864, 0.6085731983184814, 0.6222596168518066, 0.6360353827476501, 0.6498948335647583, 0.6638326644897461, 0.6778441071510315, 0.6919246912002563, 0.7060702443122864, 0.7202768921852112, 0.7345411777496338, 0.7488598227500916, 0.7632296681404114, 0.7776479721069336, 0.7921119928359985, 0.8066193461418152, 0.8211677074432373, 0.835754930973053, 0.8503790497779846, 0.8650381565093994, 0.8797305226325989, 0.8944544792175293, 0.9092085361480713, 0.9239912033081055, 0.9388011693954468, 0.9536371827125549, 0.9684979319572449, 0.9833824634552002, 0.9982895255088806, 1.0132182836532593, 1.028167724609375, 1.0431369543075562, 1.0581251382827759, 1.0731315612792969, 1.0881553888320923, 1.1031957864761353, 1.1182522773742676, 1.1333242654800415, 1.1484109163284302, 1.163511872291565, 1.1786264181137085, 1.1937540769577026, 1.2088944911956787, 1.2240469455718994, 1.2392112016677856, 1.2543867826461792, 1.2695733308792114, 1.2847703695297241, 1.299977421760559, 1.3151943683624268, 1.3304208517074585, 1.345656394958496, 1.3609007596969604, 1.376153588294983, 1.391414761543274, 1.4066839218139648, 1.4219608306884766, 1.43724524974823, 1.4525368213653564, 1.467835545539856, 1.4831409454345703, 1.4984530210494995, 1.513771414756775, 1.529096007347107, 1.544426679611206, 1.5597631931304932, 1.5751054286956787, 1.590453028678894, 1.6058061122894287, 1.621164321899414, 1.63652765750885, 1.6518957614898682, 1.6672687530517578, 1.68264639377594, 1.6980284452438354, 1.7134150266647339, 1.7288057804107666, 1.7442008256912231, 1.7595998048782349, 1.7750027179718018, 1.7904095649719238, 1.805820107460022, 1.8212343454360962, 1.836652159690857, 1.8520734310150146, 1.8674980401992798, 1.8829259872436523, 1.8983571529388428, 1.9137914180755615, 1.9292287826538086, 1.944669246673584, 1.960112452507019, 1.9755586385726929, 1.9910075664520264, 2.0064592361450195, 2.021913528442383, 2.0064592361450195, 1.9910075664520264, 1.9755586385726929, 1.960112452507019, 1.944669246673584, 1.9292287826538086, 1.9137914180755615, 1.8983571529388428, 1.8829259872436523, 1.8674980401992798, 1.8520734310150146, 1.836652159690857, 1.8212343454360962, 1.805820107460022, 1.7904095649719238, 1.7750027179718018, 1.7595998048782349, 1.7442008256912231, 1.7288057804107666, 1.7134150266647339, 1.6980284452438354, 1.68264639377594, 1.6672687530517578, 1.6518957614898682, 1.63652765750885, 1.621164321899414, 1.6058061122894287, 1.590453028678894, 1.5751054286956787, 1.5597631931304932, 1.544426679611206, 1.529096007347107, 1.513771414756775, 1.4984530210494995, 1.4831409454345703, 1.467835545539856, 1.4525368213653564, 1.43724524974823, 1.4219608306884766, 1.4066839218139648, 1.391414761543274, 1.376153588294983, 1.3609007596969604, 1.345656394958496, 1.3304208517074585, 1.3151943683624268, 1.299977421760559, 1.2847703695297241, 1.2695733308792114, 1.2543867826461792, 1.2392112016677856, 1.2240469455718994, 1.2088944911956787, 1.1937540769577026, 1.1786264181137085, 1.163511872291565, 1.1484109163284302, 1.1333242654800415, 1.1182522773742676, 1.1031957864761353, 1.0881553888320923, 1.0731315612792969, 1.0581251382827759, 1.0431369543075562, 1.028167724609375, 1.0132182836532593, 0.9982895255088806, 0.9833824634552002, 0.9684979319572449, 0.9536371827125549, 0.9388011693954468, 0.9239912033081055, 0.9092085361480713, 0.8944544792175293, 0.8797305226325989, 0.8650381565093994, 0.8503790497779846, 0.835754930973053, 0.8211677074432373, 0.8066193461418152, 0.7921119928359985, 0.7776479721069336, 0.7632296681404114, 0.7488598227500916, 0.7345411777496338, 0.7202768921852112, 0.7060702443122864, 0.6919246912002563, 0.6778441071510315, 0.6638326644897461, 0.6498948335647583, 0.6360353827476501, 0.6222596168518066, 0.6085731983184814, 0.5949822664260864, 0.5814935564994812, 0.5681143403053284, 0.5548525452613831, 0.5417167544364929, 0.5287163853645325, 0.5158616900444031, 0.5031638145446777, 0.490634948015213, 0.4782883822917938, 0.4661385715007782, 0.4542013108730316, 0.44249382615089417, 0.4310348331928253, 0.4198446571826935, 0.40894538164138794, 0.3983609080314636, 0.3881169557571411, 0.3782412111759186, 0.3687632381916046, 0.3597145080566406, 0.3511281907558441, 0.34303903579711914, 0.33548298478126526, 0.3284968137741089, 0.3221176266670227, 0.31638213992118835, 0.31132590770721436, 0.30698254704475403, 0.30338263511657715, 0.3005528748035431, 0.2985152006149292, 0.29728591442108154, 0.28125, 0.28168368339538574, 0.2829807996749878, 0.28512948751449585, 0.28811076283454895, 0.29189908504486084, 0.2964635193347931, 0.30176886916160583, 0.3077768087387085, 0.3144470453262329, 0.32173845171928406, 0.3296097218990326, 0.3380204439163208, 0.3469313085079193, 0.3563048243522644, 0.36610546708106995, 0.37629982829093933, 0.3868568241596222, 0.39774757623672485, 0.40894538164138794, 0.42042574286460876, 0.4321661591529846, 0.44414594769477844, 0.4563463032245636, 0.46875, 0.48134130239486694, 0.49410587549209595, 0.5070306658744812, 0.5201036334037781, 0.5333139896392822, 0.5466517210006714, 0.5601077675819397, 0.5736737251281738, 0.5873420834541321, 0.6011057496070862, 0.6149584054946899, 0.6288940906524658, 0.6429075002670288, 0.6569936275482178, 0.671147882938385, 0.6853660345077515, 0.699644148349762, 0.7139787077903748, 0.7283663749694824, 0.7428039908409119, 0.7572888135910034, 0.7718180418014526, 0.7863893508911133, 0.8010003566741943, 0.8156489729881287, 0.8303331136703491, 0.845051109790802, 0.8598010540008545, 0.8745813965797424, 0.8893905878067017, 0.9042272567749023, 0.9190900921821594, 0.9339777827262878, 0.9488891363143921, 0.963823139667511, 0.9787787199020386, 0.9937549233436584, 1.0087507963180542, 1.0237654447555542, 1.0387980937957764, 1.0538480281829834, 1.0689144134521484, 1.0839966535568237, 1.099094033241272, 1.114206075668335, 1.1293319463729858, 1.144471287727356, 1.1596235036849976, 1.174787998199463, 1.1899645328521729, 1.2051525115966797, 1.2203514575958252, 1.2355611324310303, 1.2507810592651367, 1.2660107612609863, 1.28125, 1.296498417854309, 1.3117557764053345, 1.327021598815918, 1.34229576587677, 1.3575778007507324, 1.3728677034378052, 1.38816499710083, 1.403469443321228, 1.4187809228897095, 1.4340991973876953, 1.4494240283966064, 1.4647551774978638, 1.4800925254821777, 1.4954357147216797, 1.5107847452163696, 1.5261393785476685, 1.5414994955062866, 1.556864857673645, 1.572235345840454, 1.5876107215881348, 1.602990984916687, 1.6183758974075317, 1.633765459060669, 1.64915931224823, 1.6645575761795044, 1.679960012435913, 1.6953665018081665, 1.710776925086975, 1.7261912822723389, 1.7416093349456787, 1.7570310831069946, 1.772456407546997, 1.787885069847107, 1.8033173084259033, 1.818752646446228, 1.8341913223266602, 1.8496330976486206, 1.8650779724121094, 1.8805257081985474, 1.8959764242172241, 1.91143000125885, 1.9268862009048462, 1.9423452615737915, 1.957806944847107, 1.973271131515503, 1.9887378215789795, 2.004206895828247, 2.0196785926818848, 2.004206895828247, 1.9887378215789795, 1.973271131515503, 1.957806944847107, 1.9423452615737915, 1.9268862009048462, 1.91143000125885, 1.8959764242172241, 1.8805257081985474, 1.8650779724121094, 1.8496330976486206, 1.8341913223266602, 1.818752646446228, 1.8033173084259033, 1.787885069847107, 1.772456407546997, 1.7570310831069946, 1.7416093349456787, 1.7261912822723389, 1.710776925086975, 1.6953665018081665, 1.679960012435913, 1.6645575761795044, 1.64915931224823, 1.633765459060669, 1.6183758974075317, 1.602990984916687, 1.5876107215881348, 1.572235345840454, 1.556864857673645, 1.5414994955062866, 1.5261393785476685, 1.5107847452163696, 1.4954357147216797, 1.4800925254821777, 1.4647551774978638, 1.4494240283966064, 1.4340991973876953, 1.4187809228897095, 1.403469443321228, 1.38816499710083, 1.3728677034378052, 1.3575778007507324, 1.34229576587677, 1.327021598815918, 1.3117557764053345, 1.296498417854309, 1.28125, 1.2660107612609863, 1.2507810592651367, 1.2355611324310303, 1.2203514575958252, 1.2051525115966797, 1.1899645328521729, 1.174787998199463, 1.1596235036849976, 1.144471287727356, 1.1293319463729858, 1.114206075668335, 1.099094033241272, 1.0839966535568237, 1.0689144134521484, 1.0538480281829834, 1.0387980937957764, 1.0237654447555542, 1.0087507963180542, 0.9937549233436584, 0.9787787199020386, 0.963823139667511, 0.9488891363143921, 0.9339777827262878, 0.9190900921821594, 0.9042272567749023, 0.8893905878067017, 0.8745813965797424, 0.8598010540008545, 0.845051109790802, 0.8303331136703491, 0.8156489729881287, 0.8010003566741943, 0.7863893508911133, 0.7718180418014526, 0.7572888135910034, 0.7428039908409119, 0.7283663749694824, 0.7139787077903748, 0.699644148349762, 0.6853660345077515, 0.671147882938385, 0.6569936275482178, 0.6429075002670288, 0.6288940906524658, 0.6149584054946899, 0.6011057496070862, 0.5873420834541321, 0.5736737251281738, 0.5601077675819397, 0.5466517210006714, 0.5333139896392822, 0.5201036334037781, 0.5070306658744812, 0.49410587549209595, 0.48134130239486694, 0.46875, 0.4563463032245636, 0.44414594769477844, 0.4321661591529846, 0.42042574286460876, 0.40894538164138794, 0.39774757623672485, 0.3868568241596222, 0.37629982829093933, 0.36610546708106995, 0.3563048243522644, 0.3469313085079193, 0.3380204439163208, 0.3296097218990326, 0.32173845171928406, 0.3144470453262329, 0.3077768087387085, 0.30176886916160583, 0.2964635193347931, 0.29189908504486084, 0.28811076283454895, 0.28512948751449585, 0.2829807996749878, 0.28168368339538574, 0.265625, 0.2660841643810272, 0.26745691895484924, 0.2697293162345886, 0.27287888526916504, 0.27687570452690125, 0.28168368339538574, 0.2872621417045593, 0.29356709122657776, 0.3005528748035431, 0.30817317962646484, 0.31638213992118835, 0.325135201215744, 0.3343895971775055, 0.34410491585731506, 0.3542432487010956, 0.36476930975914, 0.37565046548843384, 0.3868568241596222, 0.3983609080314636, 0.4101376533508301, 0.42216426134109497, 0.4344199597835541, 0.4468859136104584, 0.4595450460910797, 0.4723817706108093, 0.4853820204734802, 0.4985330104827881, 0.5118231177330017, 0.5252417325973511, 0.5387793779373169, 0.5524271726608276, 0.5661771893501282, 0.5800222158432007, 0.5939555764198303, 0.6079711318016052, 0.622063398361206, 0.6362273097038269, 0.6504580974578857, 0.6647514700889587, 0.6791035532951355, 0.6935106515884399, 0.7079694271087646, 0.7224767804145813, 0.7370297908782959, 0.7516258358955383, 0.7662624716758728, 0.7809374332427979, 0.7956485748291016, 0.8103939294815063, 0.8251716494560242, 0.8399800062179565, 0.8548174500465393, 0.8696824908256531, 0.884573757648468, 0.8994898796081543, 0.9144296646118164, 0.9293920397758484, 0.9443758130073547, 0.9593800902366638, 0.9744038581848145, 0.9894462823867798, 1.0045064687728882, 1.0195835828781128, 1.0346770286560059, 1.04978609085083, 1.0649099349975586, 1.0800480842590332, 1.0951999425888062, 1.1103649139404297, 1.125542402267456, 1.1407320499420166, 1.1559332609176636, 1.1711455583572388, 1.186368703842163, 1.2016021013259888, 1.2168455123901367, 1.2320983409881592, 1.2473604679107666, 1.2626315355300903, 1.2779110670089722, 1.293198823928833, 1.3084946870803833, 1.3237980604171753, 1.339108943939209, 1.3544270992279053, 1.369752049446106, 1.385083794593811, 1.4004219770431519, 1.4157663583755493, 1.4311169385910034, 1.4464733600616455, 1.461835503578186, 1.4772030115127563, 1.492576003074646, 1.5079541206359863, 1.5233373641967773, 1.5387253761291504, 1.5541181564331055, 1.5695154666900635, 1.5849173069000244, 1.6003234386444092, 1.6157337427139282, 1.6311482191085815, 1.64656662940979, 1.6619888544082642, 1.677414894104004, 1.6928445100784302, 1.708277702331543, 1.7237144708633423, 1.7391544580459595, 1.754597783088684, 1.770044207572937, 1.7854938507080078, 1.8009464740753174, 1.8164020776748657, 1.8318605422973633, 1.8473217487335205, 1.8627856969833374, 1.878252387046814, 1.893721580505371, 1.9091933965682983, 1.9246677160263062, 1.940144419670105, 1.9556233882904053, 1.9711047410964966, 1.9865883588790894, 2.0020740032196045, 2.0175621509552, 2.0020740032196045, 1.9865883588790894, 1.9711047410964966, 1.9556233882904053, 1.940144419670105, 1.9246677160263062, 1.9091933965682983, 1.893721580505371, 1.878252387046814, 1.8627856969833374, 1.8473217487335205, 1.8318605422973633, 1.8164020776748657, 1.8009464740753174, 1.7854938507080078, 1.770044207572937, 1.754597783088684, 1.7391544580459595, 1.7237144708633423, 1.708277702331543, 1.6928445100784302, 1.677414894104004, 1.6619888544082642, 1.64656662940979, 1.6311482191085815, 1.6157337427139282, 1.6003234386444092, 1.5849173069000244, 1.5695154666900635, 1.5541181564331055, 1.5387253761291504, 1.5233373641967773, 1.5079541206359863, 1.492576003074646, 1.4772030115127563, 1.461835503578186, 1.4464733600616455, 1.4311169385910034, 1.4157663583755493, 1.4004219770431519, 1.385083794593811, 1.369752049446106, 1.3544270992279053, 1.339108943939209, 1.3237980604171753, 1.3084946870803833, 1.293198823928833, 1.2779110670089722, 1.2626315355300903, 1.2473604679107666, 1.2320983409881592, 1.2168455123901367, 1.2016021013259888, 1.186368703842163, 1.1711455583572388, 1.1559332609176636, 1.1407320499420166, 1.125542402267456, 1.1103649139404297, 1.0951999425888062, 1.0800480842590332, 1.0649099349975586, 1.04978609085083, 1.0346770286560059, 1.0195835828781128, 1.0045064687728882, 0.9894462823867798, 0.9744038581848145, 0.9593800902366638, 0.9443758130073547, 0.9293920397758484, 0.9144296646118164, 0.8994898796081543, 0.884573757648468, 0.8696824908256531, 0.8548174500465393, 0.8399800062179565, 0.8251716494560242, 0.8103939294815063, 0.7956485748291016, 0.7809374332427979, 0.7662624716758728, 0.7516258358955383, 0.7370297908782959, 0.7224767804145813, 0.7079694271087646, 0.6935106515884399, 0.6791035532951355, 0.6647514700889587, 0.6504580974578857, 0.6362273097038269, 0.622063398361206, 0.6079711318016052, 0.5939555764198303, 0.5800222158432007, 0.5661771893501282, 0.5524271726608276, 0.5387793779373169, 0.5252417325973511, 0.5118231177330017, 0.4985330104827881, 0.4853820204734802, 0.4723817706108093, 0.4595450460910797, 0.4468859136104584, 0.4344199597835541, 0.42216426134109497, 0.4101376533508301, 0.3983609080314636, 0.3868568241596222, 0.37565046548843384, 0.36476930975914, 0.3542432487010956, 0.34410491585731506, 0.3343895971775055, 0.325135201215744, 0.31638213992118835, 0.30817317962646484, 0.3005528748035431, 0.29356709122657776, 0.2872621417045593, 0.28168368339538574, 0.27687570452690125, 0.27287888526916504, 0.2697293162345886, 0.26745691895484924, 0.2660841643810272, 0.25, 0.2504878044128418, 0.2519455552101135, 0.2543565630912781, 0.2576940953731537, 0.2619227170944214, 0.26700010895729065, 0.27287888526916504, 0.279508501291275, 0.2868368625640869, 0.2948119044303894, 0.30338263511657715, 0.3125, 0.3221176266670227, 0.332192063331604, 0.34268301725387573, 0.3535533845424652, 0.36476930975914, 0.37629982829093933, 0.3881169557571411, 0.40019527077674866, 0.41251182556152344, 0.4250459671020508, 0.43777891993522644, 0.45069390535354614, 0.4637756943702698, 0.4770105481147766, 0.49038609862327576, 0.503891110420227, 0.5175154805183411, 0.53125, 0.5450863838195801, 0.55901700258255, 0.5730350017547607, 0.5871341824531555, 0.6013088226318359, 0.615553617477417, 0.6298638582229614, 0.6442352533340454, 0.6586636900901794, 0.673145592212677, 0.6876775622367859, 0.7022563815116882, 0.7168793678283691, 0.7315437197685242, 0.7462471127510071, 0.7609872221946716, 0.7757619619369507, 0.7905694246292114, 0.8054077625274658, 0.8202753067016602, 0.8351705074310303, 0.8500919342041016, 0.8650381565093994, 0.8800079822540283, 0.8950002193450928, 0.910013735294342, 0.9250475168228149, 0.9401005506515503, 0.9551720023155212, 0.9702609181404114, 0.9853665828704834, 1.0004881620407104, 1.015625, 1.0307763814926147, 1.045941710472107, 1.0611203908920288, 1.0763118267059326, 1.0915155410766602, 1.1067310571670532, 1.1219576597213745, 1.1371952295303345, 1.1524430513381958, 1.1677008867263794, 1.1829683780670166, 1.1982449293136597, 1.2135305404663086, 1.228824496269226, 1.244126796722412, 1.259437084197998, 1.2747548818588257, 1.2900800704956055, 1.3054124116897583, 1.3207515478134155, 1.3360973596572876, 1.3514496088027954, 1.3668079376220703, 1.3821723461151123, 1.3975424766540527, 1.412918210029602, 1.4282993078231812, 1.44368577003479, 1.45907723903656, 1.4744735956192017, 1.4898747205734253, 1.5052803754806519, 1.520690679550171, 1.5361051559448242, 1.5515239238739014, 1.5669467449188232, 1.5823736190795898, 1.597804307937622, 1.6132386922836304, 1.6286767721176147, 1.644118309020996, 1.6595633029937744, 1.6750116348266602, 1.6904633045196533, 1.7059179544448853, 1.721375823020935, 1.7368366718292236, 1.7523003816604614, 1.7677669525146484, 1.7832362651824951, 1.7987083196640015, 1.814182996749878, 1.829660177230835, 1.8451398611068726, 1.8606219291687012, 1.8761065006256104, 1.8915932178497314, 1.9070823192596436, 1.9225735664367676, 1.9380669593811035, 1.9535624980926514, 1.969059944152832, 1.9845595359802246, 2.00006103515625, 2.015564441680908, 2.00006103515625, 1.9845595359802246, 1.969059944152832, 1.9535624980926514, 1.9380669593811035, 1.9225735664367676, 1.9070823192596436, 1.8915932178497314, 1.8761065006256104, 1.8606219291687012, 1.8451398611068726, 1.829660177230835, 1.814182996749878, 1.7987083196640015, 1.7832362651824951, 1.7677669525146484, 1.7523003816604614, 1.7368366718292236, 1.721375823020935, 1.7059179544448853, 1.6904633045196533, 1.6750116348266602, 1.6595633029937744, 1.644118309020996, 1.6286767721176147, 1.6132386922836304, 1.597804307937622, 1.5823736190795898, 1.5669467449188232, 1.5515239238739014, 1.5361051559448242, 1.520690679550171, 1.5052803754806519, 1.4898747205734253, 1.4744735956192017, 1.45907723903656, 1.44368577003479, 1.4282993078231812, 1.412918210029602, 1.3975424766540527, 1.3821723461151123, 1.3668079376220703, 1.3514496088027954, 1.3360973596572876, 1.3207515478134155, 1.3054124116897583, 1.2900800704956055, 1.2747548818588257, 1.259437084197998, 1.244126796722412, 1.228824496269226, 1.2135305404663086, 1.1982449293136597, 1.1829683780670166, 1.1677008867263794, 1.1524430513381958, 1.1371952295303345, 1.1219576597213745, 1.1067310571670532, 1.0915155410766602, 1.0763118267059326, 1.0611203908920288, 1.045941710472107, 1.0307763814926147, 1.015625, 1.0004881620407104, 0.9853665828704834, 0.9702609181404114, 0.9551720023155212, 0.9401005506515503, 0.9250475168228149, 0.910013735294342, 0.8950002193450928, 0.8800079822540283, 0.8650381565093994, 0.8500919342041016, 0.8351705074310303, 0.8202753067016602, 0.8054077625274658, 0.7905694246292114, 0.7757619619369507, 0.7609872221946716, 0.7462471127510071, 0.7315437197685242, 0.7168793678283691, 0.7022563815116882, 0.6876775622367859, 0.673145592212677, 0.6586636900901794, 0.6442352533340454, 0.6298638582229614, 0.615553617477417, 0.6013088226318359, 0.5871341824531555, 0.5730350017547607, 0.55901700258255, 0.5450863838195801, 0.53125, 0.5175154805183411, 0.503891110420227, 0.49038609862327576, 0.4770105481147766, 0.4637756943702698, 0.45069390535354614, 0.43777891993522644, 0.4250459671020508, 0.41251182556152344, 0.40019527077674866, 0.3881169557571411, 0.37629982829093933, 0.36476930975914, 0.3535533845424652, 0.34268301725387573, 0.332192063331604, 0.3221176266670227, 0.3125, 0.30338263511657715, 0.2948119044303894, 0.2868368625640869, 0.279508501291275, 0.27287888526916504, 0.26700010895729065, 0.2619227170944214, 0.2576940953731537, 0.2543565630912781, 0.2519455552101135, 0.2504878044128418, 0.234375, 0.234895259141922, 0.23644915223121643, 0.23901653289794922, 0.24256522953510284, 0.24705293774604797, 0.2524296045303345, 0.25863978266716003, 0.265625, 0.2733258605003357, 0.28168368339538574, 0.29064181447029114, 0.3001464605331421, 0.31014740467071533, 0.32059818506240845, 0.3314563035964966, 0.34268301725387573, 0.3542432487010956, 0.36610546708106995, 0.3782412111759186, 0.390625, 0.40323400497436523, 0.41604772210121155, 0.4290478229522705, 0.4422178566455841, 0.4555431306362152, 0.4690103530883789, 0.4826076626777649, 0.4963243901729584, 0.5101508498191833, 0.5240784287452698, 0.5380992293357849, 0.5522061586380005, 0.5663927793502808, 0.5806532502174377, 0.5949822664260864, 0.609375, 0.6238270401954651, 0.638334333896637, 0.6528931856155396, 0.6675003170967102, 0.682152509689331, 0.6968469619750977, 0.7115811109542847, 0.7263524532318115, 0.7411588430404663, 0.7559981346130371, 0.7708685398101807, 0.7857682108879089, 0.8006954789161682, 0.8156489729881287, 0.8306271433830261, 0.8456286787986755, 0.8606524467468262, 0.8756972551345825, 0.8907620310783386, 0.9058458209037781, 0.9209476113319397, 0.9360666275024414, 0.9512019753456116, 0.9663528800010681, 0.9815186858177185, 0.9966986775398254, 1.0118921995162964, 1.0270986557006836, 1.042317509651184, 1.05754816532135, 1.072790265083313, 1.0880430936813354, 1.1033064126968384, 1.1185797452926636, 1.1338626146316528, 1.149154782295227, 1.1644556522369385, 1.1797651052474976, 1.195082664489746, 1.210408091545105, 1.2257411479949951, 1.2410814762115479, 1.256428837776184, 1.2717828750610352, 1.2871434688568115, 1.302510380744934, 1.3178832530975342, 1.3332620859146118, 1.348646640777588, 1.3640365600585938, 1.3794317245483398, 1.3948321342468262, 1.410237431526184, 1.425647497177124, 1.4410622119903564, 1.4564813375473022, 1.4719048738479614, 1.4873325824737549, 1.502764344215393, 1.518200159072876, 1.533639669418335, 1.5490829944610596, 1.5645298957824707, 1.5799803733825684, 1.5954341888427734, 1.6108912229537964, 1.6263515949249268, 1.6418150663375854, 1.657281517982483, 1.6727509498596191, 1.6882232427597046, 1.7036982774734497, 1.7191760540008545, 1.7346564531326294, 1.7501394748687744, 1.765625, 1.7811129093170166, 1.7966032028198242, 1.8120958805084229, 1.8275907039642334, 1.8430877923965454, 1.8585870265960693, 1.8740882873535156, 1.8895916938781738, 1.9050970077514648, 1.9206042289733887, 1.9361133575439453, 1.9516243934631348, 1.9671372175216675, 1.9826518297195435, 1.9981681108474731, 2.013686180114746, 1.9981681108474731, 1.9826518297195435, 1.9671372175216675, 1.9516243934631348, 1.9361133575439453, 1.9206042289733887, 1.9050970077514648, 1.8895916938781738, 1.8740882873535156, 1.8585870265960693, 1.8430877923965454, 1.8275907039642334, 1.8120958805084229, 1.7966032028198242, 1.7811129093170166, 1.765625, 1.7501394748687744, 1.7346564531326294, 1.7191760540008545, 1.7036982774734497, 1.6882232427597046, 1.6727509498596191, 1.657281517982483, 1.6418150663375854, 1.6263515949249268, 1.6108912229537964, 1.5954341888427734, 1.5799803733825684, 1.5645298957824707, 1.5490829944610596, 1.533639669418335, 1.518200159072876, 1.502764344215393, 1.4873325824737549, 1.4719048738479614, 1.4564813375473022, 1.4410622119903564, 1.425647497177124, 1.410237431526184, 1.3948321342468262, 1.3794317245483398, 1.3640365600585938, 1.348646640777588, 1.3332620859146118, 1.3178832530975342, 1.302510380744934, 1.2871434688568115, 1.2717828750610352, 1.256428837776184, 1.2410814762115479, 1.2257411479949951, 1.210408091545105, 1.195082664489746, 1.1797651052474976, 1.1644556522369385, 1.149154782295227, 1.1338626146316528, 1.1185797452926636, 1.1033064126968384, 1.0880430936813354, 1.072790265083313, 1.05754816532135, 1.042317509651184, 1.0270986557006836, 1.0118921995162964, 0.9966986775398254, 0.9815186858177185, 0.9663528800010681, 0.9512019753456116, 0.9360666275024414, 0.9209476113319397, 0.9058458209037781, 0.8907620310783386, 0.8756972551345825, 0.8606524467468262, 0.8456286787986755, 0.8306271433830261, 0.8156489729881287, 0.8006954789161682, 0.7857682108879089, 0.7708685398101807, 0.7559981346130371, 0.7411588430404663, 0.7263524532318115, 0.7115811109542847, 0.6968469619750977, 0.682152509689331, 0.6675003170967102, 0.6528931856155396, 0.638334333896637, 0.6238270401954651, 0.609375, 0.5949822664260864, 0.5806532502174377, 0.5663927793502808, 0.5522061586380005, 0.5380992293357849, 0.5240784287452698, 0.5101508498191833, 0.4963243901729584, 0.4826076626777649, 0.4690103530883789, 0.4555431306362152, 0.4422178566455841, 0.4290478229522705, 0.41604772210121155, 0.40323400497436523, 0.390625, 0.3782412111759186, 0.36610546708106995, 0.3542432487010956, 0.34268301725387573, 0.3314563035964966, 0.32059818506240845, 0.31014740467071533, 0.3001464605331421, 0.29064181447029114, 0.28168368339538574, 0.2733258605003357, 0.265625, 0.25863978266716003, 0.2524296045303345, 0.24705293774604797, 0.24256522953510284, 0.23901653289794922, 0.23644915223121643, 0.234895259141922, 0.21875, 0.2193073183298111, 0.22097086906433105, 0.22371596097946167, 0.2275034338235855, 0.23228232562541962, 0.23799291253089905, 0.24456994235515594, 0.2519455552101135, 0.26005181670188904, 0.26882266998291016, 0.27819520235061646, 0.28811076283454895, 0.2985152006149292, 0.30935922265052795, 0.32059818506240845, 0.332192063331604, 0.34410491585731506, 0.3563048243522644, 0.3687632381916046, 0.38145485520362854, 0.39435717463493347, 0.4074501395225525, 0.42071598768234253, 0.43413886427879333, 0.44770464301109314, 0.46140071749687195, 0.4752158224582672, 0.4891398847103119, 0.5031638145446777, 0.5172795653343201, 0.5314797163009644, 0.5457577705383301, 0.5601077675819397, 0.5745242834091187, 0.5890024304389954, 0.6035377383232117, 0.6181262731552124, 0.6327642798423767, 0.6474484205245972, 0.6621756553649902, 0.6769431233406067, 0.6917482614517212, 0.7065886855125427, 0.7214622497558594, 0.7363669872283936, 0.7513009309768677, 0.7662624716758728, 0.78125, 0.7962620258331299, 0.8112971782684326, 0.8263542652130127, 0.8414319753646851, 0.8565293550491333, 0.8716453313827515, 0.8867789506912231, 0.9019293785095215, 0.9170956611633301, 0.9322771430015564, 0.9474729895591736, 0.9626826047897339, 0.9779053330421448, 0.9931405186653137, 1.0083876848220825, 1.0236462354660034, 1.0389156341552734, 1.054195523262024, 1.0694853067398071, 1.0847846269607544, 1.1000932455062866, 1.115410566329956, 1.130736231803894, 1.1460700035095215, 1.1614116430282593, 1.1767606735229492, 1.1921168565750122, 1.2074799537658691, 1.222849726676941, 1.2382258176803589, 1.2536081075668335, 1.268996238708496, 1.2843902111053467, 1.2997896671295166, 1.3151943683624268, 1.3306043148040771, 1.3460191488265991, 1.3614387512207031, 1.3768631219863892, 1.392291784286499, 1.4077249765396118, 1.4231622219085693, 1.4386035203933716, 1.454048752784729, 1.469497799873352, 1.4849505424499512, 1.5004068613052368, 1.5158666372299194, 1.5313297510147095, 1.5467960834503174, 1.5622656345367432, 1.5777381658554077, 1.5932137966156006, 1.6086921691894531, 1.6241735219955444, 1.6396574974060059, 1.6551440954208374, 1.670633316040039, 1.6861250400543213, 1.7016191482543945, 1.7171157598495483, 1.732614517211914, 1.7481156587600708, 1.76361882686615, 1.7791242599487305, 1.7946317195892334, 1.8101412057876587, 1.8256527185440063, 1.8411661386489868, 1.8566813468933105, 1.872198462486267, 1.8877172470092773, 1.9032379388809204, 1.9187601804733276, 1.9342840909957886, 1.9498096704483032, 1.965336799621582, 1.980865478515625, 1.9963957071304321, 2.011927366256714, 1.9963957071304321, 1.980865478515625, 1.965336799621582, 1.9498096704483032, 1.9342840909957886, 1.9187601804733276, 1.9032379388809204, 1.8877172470092773, 1.872198462486267, 1.8566813468933105, 1.8411661386489868, 1.8256527185440063, 1.8101412057876587, 1.7946317195892334, 1.7791242599487305, 1.76361882686615, 1.7481156587600708, 1.732614517211914, 1.7171157598495483, 1.7016191482543945, 1.6861250400543213, 1.670633316040039, 1.6551440954208374, 1.6396574974060059, 1.6241735219955444, 1.6086921691894531, 1.5932137966156006, 1.5777381658554077, 1.5622656345367432, 1.5467960834503174, 1.5313297510147095, 1.5158666372299194, 1.5004068613052368, 1.4849505424499512, 1.469497799873352, 1.454048752784729, 1.4386035203933716, 1.4231622219085693, 1.4077249765396118, 1.392291784286499, 1.3768631219863892, 1.3614387512207031, 1.3460191488265991, 1.3306043148040771, 1.3151943683624268, 1.2997896671295166, 1.2843902111053467, 1.268996238708496, 1.2536081075668335, 1.2382258176803589, 1.222849726676941, 1.2074799537658691, 1.1921168565750122, 1.1767606735229492, 1.1614116430282593, 1.1460700035095215, 1.130736231803894, 1.115410566329956, 1.1000932455062866, 1.0847846269607544, 1.0694853067398071, 1.054195523262024, 1.0389156341552734, 1.0236462354660034, 1.0083876848220825, 0.9931405186653137, 0.9779053330421448, 0.9626826047897339, 0.9474729895591736, 0.9322771430015564, 0.9170956611633301, 0.9019293785095215, 0.8867789506912231, 0.8716453313827515, 0.8565293550491333, 0.8414319753646851, 0.8263542652130127, 0.8112971782684326, 0.7962620258331299, 0.78125, 0.7662624716758728, 0.7513009309768677, 0.7363669872283936, 0.7214622497558594, 0.7065886855125427, 0.6917482614517212, 0.6769431233406067, 0.6621756553649902, 0.6474484205245972, 0.6327642798423767, 0.6181262731552124, 0.6035377383232117, 0.5890024304389954, 0.5745242834091187, 0.5601077675819397, 0.5457577705383301, 0.5314797163009644, 0.5172795653343201, 0.5031638145446777, 0.4891398847103119, 0.4752158224582672, 0.46140071749687195, 0.44770464301109314, 0.43413886427879333, 0.42071598768234253, 0.4074501395225525, 0.39435717463493347, 0.38145485520362854, 0.3687632381916046, 0.3563048243522644, 0.34410491585731506, 0.332192063331604, 0.32059818506240845, 0.30935922265052795, 0.2985152006149292, 0.28811076283454895, 0.27819520235061646, 0.26882266998291016, 0.26005181670188904, 0.2519455552101135, 0.24456994235515594, 0.23799291253089905, 0.23228232562541962, 0.2275034338235855, 0.22371596097946167, 0.22097086906433105, 0.2193073183298111, 0.203125, 0.20372506976127625, 0.2055147886276245, 0.20846350491046906, 0.2125229835510254, 0.21763107180595398, 0.22371596097946167, 0.23070035874843597, 0.2385052740573883, 0.24705293774604797, 0.25626906752586365, 0.2660841643810272, 0.2764344811439514, 0.2872621417045593, 0.2985152006149292, 0.31014740467071533, 0.3221176266670227, 0.3343895971775055, 0.3469313085079193, 0.3597145080566406, 0.37271440029144287, 0.3859090209007263, 0.3992791473865509, 0.4128076434135437, 0.4264794886112213, 0.44028133153915405, 0.4542013108730316, 0.46822887659072876, 0.48235467076301575, 0.49657025933265686, 0.5108681917190552, 0.5252417325973511, 0.5396848917007446, 0.5541921257972717, 0.5687586069107056, 0.5833798050880432, 0.5980518460273743, 0.6127709746360779, 0.6275339126586914, 0.6423376202583313, 0.6571794152259827, 0.6720566749572754, 0.686967134475708, 0.7019086480140686, 0.7168793678283691, 0.7318773865699768, 0.7469011545181274, 0.7619490623474121, 0.7770197987556458, 0.7921119928359985, 0.807224452495575, 0.822356104850769, 0.8375058174133301, 0.8526727557182312, 0.8678559064865112, 0.8830544352531433, 0.8982676267623901, 0.9134947657585144, 0.928735077381134, 0.9439879655838013, 0.9592528343200684, 0.9745291471481323, 0.9898163080215454, 1.0051138401031494, 1.0204213857650757, 1.0357383489608765, 1.051064372062683, 1.066399097442627, 1.0817421674728394, 1.097093105316162, 1.1124516725540161, 1.1278176307678223, 1.143190622329712, 1.1585702896118164, 1.1739565134048462, 1.1893489360809326, 1.2047473192214966, 1.220151424407959, 1.2355611324310303, 1.2509762048721313, 1.266396403312683, 1.2818214893341064, 1.2972514629364014, 1.3126859664916992, 1.328125, 1.3435683250427246, 1.359015703201294, 1.3744672536849976, 1.3899226188659668, 1.405381679534912, 1.4208444356918335, 1.4363106489181519, 1.4517803192138672, 1.4672532081604004, 1.4827293157577515, 1.4982085227966309, 1.5136908292770386, 1.529175877571106, 1.5446637868881226, 1.5601544380187988, 1.5756478309631348, 1.5911437273025513, 1.6066421270370483, 1.6221429109573364, 1.6376460790634155, 1.6531516313552856, 1.6686593294143677, 1.6841691732406616, 1.6996811628341675, 1.7151951789855957, 1.7307112216949463, 1.7462291717529297, 1.761749029159546, 1.777270793914795, 1.7927942276000977, 1.8083195686340332, 1.823846459388733, 1.8393751382827759, 1.854905366897583, 1.8704371452331543, 1.8859704732894897, 1.9015053510665894, 1.9170416593551636, 1.9325793981552124, 1.9481185674667358, 1.9636590480804443, 1.9792009592056274, 1.994744062423706, 2.0102884769439697, 1.994744062423706, 1.9792009592056274, 1.9636590480804443, 1.9481185674667358, 1.9325793981552124, 1.9170416593551636, 1.9015053510665894, 1.8859704732894897, 1.8704371452331543, 1.854905366897583, 1.8393751382827759, 1.823846459388733, 1.8083195686340332, 1.7927942276000977, 1.777270793914795, 1.761749029159546, 1.7462291717529297, 1.7307112216949463, 1.7151951789855957, 1.6996811628341675, 1.6841691732406616, 1.6686593294143677, 1.6531516313552856, 1.6376460790634155, 1.6221429109573364, 1.6066421270370483, 1.5911437273025513, 1.5756478309631348, 1.5601544380187988, 1.5446637868881226, 1.529175877571106, 1.5136908292770386, 1.4982085227966309, 1.4827293157577515, 1.4672532081604004, 1.4517803192138672, 1.4363106489181519, 1.4208444356918335, 1.405381679534912, 1.3899226188659668, 1.3744672536849976, 1.359015703201294, 1.3435683250427246, 1.328125, 1.3126859664916992, 1.2972514629364014, 1.2818214893341064, 1.266396403312683, 1.2509762048721313, 1.2355611324310303, 1.220151424407959, 1.2047473192214966, 1.1893489360809326, 1.1739565134048462, 1.1585702896118164, 1.143190622329712, 1.1278176307678223, 1.1124516725540161, 1.097093105316162, 1.0817421674728394, 1.066399097442627, 1.051064372062683, 1.0357383489608765, 1.0204213857650757, 1.0051138401031494, 0.9898163080215454, 0.9745291471481323, 0.9592528343200684, 0.9439879655838013, 0.928735077381134, 0.9134947657585144, 0.8982676267623901, 0.8830544352531433, 0.8678559064865112, 0.8526727557182312, 0.8375058174133301, 0.822356104850769, 0.807224452495575, 0.7921119928359985, 0.7770197987556458, 0.7619490623474121, 0.7469011545181274, 0.7318773865699768, 0.7168793678283691, 0.7019086480140686, 0.686967134475708, 0.6720566749572754, 0.6571794152259827, 0.6423376202583313, 0.6275339126586914, 0.6127709746360779, 0.5980518460273743, 0.5833798050880432, 0.5687586069107056, 0.5541921257972717, 0.5396848917007446, 0.5252417325973511, 0.5108681917190552, 0.49657025933265686, 0.48235467076301575, 0.46822887659072876, 0.4542013108730316, 0.44028133153915405, 0.4264794886112213, 0.4128076434135437, 0.3992791473865509, 0.3859090209007263, 0.37271440029144287, 0.3597145080566406, 0.3469313085079193, 0.3343895971775055, 0.3221176266670227, 0.31014740467071533, 0.2985152006149292, 0.2872621417045593, 0.2764344811439514, 0.2660841643810272, 0.25626906752586365, 0.24705293774604797, 0.2385052740573883, 0.23070035874843597, 0.22371596097946167, 0.21763107180595398, 0.2125229835510254, 0.20846350491046906, 0.2055147886276245, 0.20372506976127625, 0.1875, 0.18814991414546967, 0.19008633494377136, 0.19327057898044586, 0.19764235615730286, 0.203125, 0.20963136851787567, 0.21706943213939667, 0.22534695267677307, 0.234375, 0.24407030642032623, 0.2543565630912781, 0.2651650309562683, 0.2764344811439514, 0.28811076283454895, 0.3001464605331421, 0.3125, 0.325135201215744, 0.3380204439163208, 0.3511281907558441, 0.36443448066711426, 0.3779183328151703, 0.3915613889694214, 0.4053475558757782, 0.41926273703575134, 0.43329450488090515, 0.44743192195892334, 0.46166521310806274, 0.4759858250617981, 0.49038609862327576, 0.504859209060669, 0.5193990468978882, 0.5340002179145813, 0.5486578345298767, 0.5633673667907715, 0.578125, 0.5929270386695862, 0.6077703237533569, 0.6226518154144287, 0.6375689506530762, 0.652519166469574, 0.6675003170967102, 0.6825103163719177, 0.6975473165512085, 0.7126096487045288, 0.7276957035064697, 0.7428039908409119, 0.7579333186149597, 0.7730823159217834, 0.7882499098777771, 0.8034350275993347, 0.8186366558074951, 0.8338540196418762, 0.8490861058235168, 0.8643323183059692, 0.8795917630195618, 0.8948638439178467, 0.9101478457450867, 0.9254432916641235, 0.9407495856285095, 0.9560661315917969, 0.9713925719261169, 0.986728310585022, 1.002073049545288, 1.0174262523651123, 1.0327876806259155, 1.0481568574905396, 1.0635335445404053, 1.0789172649383545, 1.0943078994750977, 1.1097050905227661, 1.1251084804534912, 1.1405179500579834, 1.1559332609176636, 1.171354055404663, 1.1867802143096924, 1.2022114992141724, 1.2176477909088135, 1.233088731765747, 1.2485343217849731, 1.2639843225479126, 1.2794384956359863, 1.2948968410491943, 1.3103591203689575, 1.3258252143859863, 1.3412950038909912, 1.3567683696746826, 1.3722450733184814, 1.3877252340316772, 1.4032084941864014, 1.4186949729919434, 1.4341843128204346, 1.4496766328811646, 1.4651718139648438, 1.4806697368621826, 1.4961702823638916, 1.5116733312606812, 1.5271788835525513, 1.542686939239502, 1.558197259902954, 1.5737098455429077, 1.5892245769500732, 1.6047414541244507, 1.62026047706604, 1.6357815265655518, 1.6513044834136963, 1.6668294668197632, 1.6823561191558838, 1.6978846788406372, 1.7134150266647339, 1.7289470434188843, 1.7444807291030884, 1.7600159645080566, 1.7755528688430786, 1.7910912036895752, 1.806631088256836, 1.8221725225448608, 1.8377152681350708, 1.8532593250274658, 1.8688048124313354, 1.8843517303466797, 1.8998997211456299, 1.9154491424560547, 1.9309996366500854, 1.9465514421463013, 1.962104320526123, 1.9776583909988403, 1.9932135343551636, 2.0087697505950928, 1.9932135343551636, 1.9776583909988403, 1.962104320526123, 1.9465514421463013, 1.9309996366500854, 1.9154491424560547, 1.8998997211456299, 1.8843517303466797, 1.8688048124313354, 1.8532593250274658, 1.8377152681350708, 1.8221725225448608, 1.806631088256836, 1.7910912036895752, 1.7755528688430786, 1.7600159645080566, 1.7444807291030884, 1.7289470434188843, 1.7134150266647339, 1.6978846788406372, 1.6823561191558838, 1.6668294668197632, 1.6513044834136963, 1.6357815265655518, 1.62026047706604, 1.6047414541244507, 1.5892245769500732, 1.5737098455429077, 1.558197259902954, 1.542686939239502, 1.5271788835525513, 1.5116733312606812, 1.4961702823638916, 1.4806697368621826, 1.4651718139648438, 1.4496766328811646, 1.4341843128204346, 1.4186949729919434, 1.4032084941864014, 1.3877252340316772, 1.3722450733184814, 1.3567683696746826, 1.3412950038909912, 1.3258252143859863, 1.3103591203689575, 1.2948968410491943, 1.2794384956359863, 1.2639843225479126, 1.2485343217849731, 1.233088731765747, 1.2176477909088135, 1.2022114992141724, 1.1867802143096924, 1.171354055404663, 1.1559332609176636, 1.1405179500579834, 1.1251084804534912, 1.1097050905227661, 1.0943078994750977, 1.0789172649383545, 1.0635335445404053, 1.0481568574905396, 1.0327876806259155, 1.0174262523651123, 1.002073049545288, 0.986728310585022, 0.9713925719261169, 0.9560661315917969, 0.9407495856285095, 0.9254432916641235, 0.9101478457450867, 0.8948638439178467, 0.8795917630195618, 0.8643323183059692, 0.8490861058235168, 0.8338540196418762, 0.8186366558074951, 0.8034350275993347, 0.7882499098777771, 0.7730823159217834, 0.7579333186149597, 0.7428039908409119, 0.7276957035064697, 0.7126096487045288, 0.6975473165512085, 0.6825103163719177, 0.6675003170967102, 0.652519166469574, 0.6375689506530762, 0.6226518154144287, 0.6077703237533569, 0.5929270386695862, 0.578125, 0.5633673667907715, 0.5486578345298767, 0.5340002179145813, 0.5193990468978882, 0.504859209060669, 0.49038609862327576, 0.4759858250617981, 0.46166521310806274, 0.44743192195892334, 0.43329450488090515, 0.41926273703575134, 0.4053475558757782, 0.3915613889694214, 0.3779183328151703, 0.36443448066711426, 0.3511281907558441, 0.3380204439163208, 0.325135201215744, 0.3125, 0.3001464605331421, 0.28811076283454895, 0.2764344811439514, 0.2651650309562683, 0.2543565630912781, 0.24407030642032623, 0.234375, 0.22534695267677307, 0.21706943213939667, 0.20963136851787567, 0.203125, 0.19764235615730286, 0.19327057898044586, 0.19008633494377136, 0.18814991414546967, 0.171875, 0.17258375883102417, 0.1746928095817566, 0.1781524121761322, 0.18288592994213104, 0.18879759311676025, 0.1957806944847107, 0.20372506976127625, 0.2125229835510254, 0.22207297384738922, 0.23228232562541962, 0.24306795001029968, 0.2543565630912781, 0.2660841643810272, 0.27819520235061646, 0.29064181447029114, 0.30338263511657715, 0.31638213992118835, 0.3296097218990326, 0.34303903579711914, 0.356647253036499, 0.370414674282074, 0.38432419300079346, 0.3983609080314636, 0.41251182556152344, 0.4267656207084656, 0.44111230969429016, 0.4555431306362152, 0.47005027532577515, 0.4846269488334656, 0.499267041683197, 0.5139651298522949, 0.5287163853645325, 0.5435164570808411, 0.5583615303039551, 0.573248028755188, 0.5881727933883667, 0.6031330823898315, 0.6181262731552124, 0.6331499814987183, 0.648202121257782, 0.6632807850837708, 0.6783841848373413, 0.6935106515884399, 0.708658754825592, 0.7238271832466125, 0.7390146255493164, 0.7542198896408081, 0.7694420218467712, 0.7846799492835999, 0.7999328374862671, 0.8151998519897461, 0.83048015832901, 0.8457730412483215, 0.8610778450965881, 0.8763939738273621, 0.8917208313941956, 0.9070578217506409, 0.9224045276641846, 0.9377603530883789, 0.953125, 0.9684979319572449, 0.9838788509368896, 0.9992672801017761, 1.0146629810333252, 1.030065655708313, 1.0454747676849365, 1.0608903169631958, 1.0763118267059326, 1.0917391777038574, 1.1071721315383911, 1.122610330581665, 1.1380536556243896, 1.1535017490386963, 1.1689547300338745, 1.1844121217727661, 1.1998738050460815, 1.2153397798538208, 1.2308096885681152, 1.2462835311889648, 1.2617610692977905, 1.2772421836853027, 1.292726755142212, 1.308214783668518, 1.3237059116363525, 1.3392001390457153, 1.3546974658966064, 1.3701975345611572, 1.3857005834579468, 1.4012062549591064, 1.4167145490646362, 1.4322253465652466, 1.4477386474609375, 1.4632543325424194, 1.4787722826004028, 1.4942924976348877, 1.5098148584365845, 1.5253393650054932, 1.5408658981323242, 1.556394338607788, 1.5719246864318848, 1.5874569416046143, 1.602990984916687, 1.618526816368103, 1.6340643167495728, 1.6496033668518066, 1.6651442050933838, 1.6806864738464355, 1.6962302923202515, 1.7117756605148315, 1.7273223400115967, 1.742870569229126, 1.7584199905395508, 1.7739708423614502, 1.7895230054855347, 1.8050763607025146, 1.8206310272216797, 1.8361867666244507, 1.8517438173294067, 1.8673019409179688, 1.8828611373901367, 1.8984214067459106, 1.9139827489852905, 1.9295451641082764, 1.9451085329055786, 1.9606729745864868, 1.9762382507324219, 1.9918044805526733, 2.007371664047241, 1.9918044805526733, 1.9762382507324219, 1.9606729745864868, 1.9451085329055786, 1.9295451641082764, 1.9139827489852905, 1.8984214067459106, 1.8828611373901367, 1.8673019409179688, 1.8517438173294067, 1.8361867666244507, 1.8206310272216797, 1.8050763607025146, 1.7895230054855347, 1.7739708423614502, 1.7584199905395508, 1.742870569229126, 1.7273223400115967, 1.7117756605148315, 1.6962302923202515, 1.6806864738464355, 1.6651442050933838, 1.6496033668518066, 1.6340643167495728, 1.618526816368103, 1.602990984916687, 1.5874569416046143, 1.5719246864318848, 1.556394338607788, 1.5408658981323242, 1.5253393650054932, 1.5098148584365845, 1.4942924976348877, 1.4787722826004028, 1.4632543325424194, 1.4477386474609375, 1.4322253465652466, 1.4167145490646362, 1.4012062549591064, 1.3857005834579468, 1.3701975345611572, 1.3546974658966064, 1.3392001390457153, 1.3237059116363525, 1.308214783668518, 1.292726755142212, 1.2772421836853027, 1.2617610692977905, 1.2462835311889648, 1.2308096885681152, 1.2153397798538208, 1.1998738050460815, 1.1844121217727661, 1.1689547300338745, 1.1535017490386963, 1.1380536556243896, 1.122610330581665, 1.1071721315383911, 1.0917391777038574, 1.0763118267059326, 1.0608903169631958, 1.0454747676849365, 1.030065655708313, 1.0146629810333252, 0.9992672801017761, 0.9838788509368896, 0.9684979319572449, 0.953125, 0.9377603530883789, 0.9224045276641846, 0.9070578217506409, 0.8917208313941956, 0.8763939738273621, 0.8610778450965881, 0.8457730412483215, 0.83048015832901, 0.8151998519897461, 0.7999328374862671, 0.7846799492835999, 0.7694420218467712, 0.7542198896408081, 0.7390146255493164, 0.7238271832466125, 0.708658754825592, 0.6935106515884399, 0.6783841848373413, 0.6632807850837708, 0.648202121257782, 0.6331499814987183, 0.6181262731552124, 0.6031330823898315, 0.5881727933883667, 0.573248028755188, 0.5583615303039551, 0.5435164570808411, 0.5287163853645325, 0.5139651298522949, 0.499267041683197, 0.4846269488334656, 0.47005027532577515, 0.4555431306362152, 0.44111230969429016, 0.4267656207084656, 0.41251182556152344, 0.3983609080314636, 0.38432419300079346, 0.370414674282074, 0.356647253036499, 0.34303903579711914, 0.3296097218990326, 0.31638213992118835, 0.30338263511657715, 0.29064181447029114, 0.27819520235061646, 0.2660841643810272, 0.2543565630912781, 0.24306795001029968, 0.23228232562541962, 0.22207297384738922, 0.2125229835510254, 0.20372506976127625, 0.1957806944847107, 0.18879759311676025, 0.18288592994213104, 0.1781524121761322, 0.1746928095817566, 0.17258375883102417, 0.15625, 0.15702930092811584, 0.1593443602323532, 0.1631297916173935, 0.16828639805316925, 0.1746928095817566, 0.18221724033355713, 0.19072742760181427, 0.20009763538837433, 0.21021287143230438, 0.22097086906433105, 0.23228232562541962, 0.24407030642032623, 0.25626906752586365, 0.26882266998291016, 0.28168368339538574, 0.2948119044303894, 0.30817317962646484, 0.32173845171928406, 0.33548298478126526, 0.3493856191635132, 0.3634282350540161, 0.3775951862335205, 0.39187300205230713, 0.40625, 0.42071598768234253, 0.43526214361190796, 0.4498806297779083, 0.46456465125083923, 0.47930818796157837, 0.49410587549209595, 0.5089530348777771, 0.5238454341888428, 0.5387793779373169, 0.5537514090538025, 0.5687586069107056, 0.5837981700897217, 0.5988677740097046, 0.6139650940895081, 0.6290881633758545, 0.6442352533340454, 0.6594046354293823, 0.6745947599411011, 0.6898043751716614, 0.7050321102142334, 0.7202768921852112, 0.7355376482009888, 0.750813364982605, 0.7661031484603882, 0.7814062237739563, 0.7967218160629272, 0.812049150466919, 0.8273876309394836, 0.8427366614341736, 0.858095645904541, 0.873464047908783, 0.8888413906097412, 0.9042272567749023, 0.9196211695671082, 0.93502277135849, 0.9504316449165344, 0.9658474922180176, 0.981269896030426, 0.9966986775398254, 1.0121334791183472, 1.0275739431381226, 1.0430200099945068, 1.0584712028503418, 1.0739275217056274, 1.0893886089324951, 1.1048543453216553, 1.1203244924545288, 1.1357988119125366, 1.1512773036956787, 1.1667596101760864, 1.1822457313537598, 1.1977355480194092, 1.213228702545166, 1.2287251949310303, 1.2442249059677124, 1.2597277164459229, 1.2752336263656616, 1.29074227809906, 1.3062537908554077, 1.3217679262161255, 1.3372845649719238, 1.3528038263320923, 1.3683254718780518, 1.3838493824005127, 1.399375557899475, 1.4149038791656494, 1.4304343461990356, 1.4459669589996338, 1.4615013599395752, 1.477037787437439, 1.492576003074646, 1.5081160068511963, 1.5236577987670898, 1.539201259613037, 1.554746389389038, 1.5702930688858032, 1.5858412981033325, 1.6013909578323364, 1.6169421672821045, 1.6324946880340576, 1.6480486392974854, 1.6636039018630981, 1.679160475730896, 1.694718360900879, 1.7102774381637573, 1.7258377075195312, 1.7413990497589111, 1.7569615840911865, 1.7725251913070679, 1.7880899906158447, 1.803655743598938, 1.8192224502563477, 1.8347902297973633, 1.8503589630126953, 1.8659285306930542, 1.881499171257019, 1.8970706462860107, 1.9126429557800293, 1.9282162189483643, 1.9437901973724365, 1.9593650102615356, 1.9749406576156616, 1.990517020225525, 2.006094217300415, 1.990517020225525, 1.9749406576156616, 1.9593650102615356, 1.9437901973724365, 1.9282162189483643, 1.9126429557800293, 1.8970706462860107, 1.881499171257019, 1.8659285306930542, 1.8503589630126953, 1.8347902297973633, 1.8192224502563477, 1.803655743598938, 1.7880899906158447, 1.7725251913070679, 1.7569615840911865, 1.7413990497589111, 1.7258377075195312, 1.7102774381637573, 1.694718360900879, 1.679160475730896, 1.6636039018630981, 1.6480486392974854, 1.6324946880340576, 1.6169421672821045, 1.6013909578323364, 1.5858412981033325, 1.5702930688858032, 1.554746389389038, 1.539201259613037, 1.5236577987670898, 1.5081160068511963, 1.492576003074646, 1.477037787437439, 1.4615013599395752, 1.4459669589996338, 1.4304343461990356, 1.4149038791656494, 1.399375557899475, 1.3838493824005127, 1.3683254718780518, 1.3528038263320923, 1.3372845649719238, 1.3217679262161255, 1.3062537908554077, 1.29074227809906, 1.2752336263656616, 1.2597277164459229, 1.2442249059677124, 1.2287251949310303, 1.213228702545166, 1.1977355480194092, 1.1822457313537598, 1.1667596101760864, 1.1512773036956787, 1.1357988119125366, 1.1203244924545288, 1.1048543453216553, 1.0893886089324951, 1.0739275217056274, 1.0584712028503418, 1.0430200099945068, 1.0275739431381226, 1.0121334791183472, 0.9966986775398254, 0.981269896030426, 0.9658474922180176, 0.9504316449165344, 0.93502277135849, 0.9196211695671082, 0.9042272567749023, 0.8888413906097412, 0.873464047908783, 0.858095645904541, 0.8427366614341736, 0.8273876309394836, 0.812049150466919, 0.7967218160629272, 0.7814062237739563, 0.7661031484603882, 0.750813364982605, 0.7355376482009888, 0.7202768921852112, 0.7050321102142334, 0.6898043751716614, 0.6745947599411011, 0.6594046354293823, 0.6442352533340454, 0.6290881633758545, 0.6139650940895081, 0.5988677740097046, 0.5837981700897217, 0.5687586069107056, 0.5537514090538025, 0.5387793779373169, 0.5238454341888428, 0.5089530348777771, 0.49410587549209595, 0.47930818796157837, 0.46456465125083923, 0.4498806297779083, 0.43526214361190796, 0.42071598768234253, 0.40625, 0.39187300205230713, 0.3775951862335205, 0.3634282350540161, 0.3493856191635132, 0.33548298478126526, 0.32173845171928406, 0.30817317962646484, 0.2948119044303894, 0.28168368339538574, 0.26882266998291016, 0.25626906752586365, 0.24407030642032623, 0.23228232562541962, 0.22097086906433105, 0.21021287143230438, 0.20009763538837433, 0.19072742760181427, 0.18221724033355713, 0.1746928095817566, 0.16828639805316925, 0.1631297916173935, 0.1593443602323532, 0.15702930092811584, 0.140625, 0.1414903998374939, 0.14405538141727448, 0.14823175966739655, 0.15388840436935425, 0.16086922585964203, 0.1690102219581604, 0.1781524121761322, 0.18814991414546967, 0.19887378811836243, 0.21021287143230438, 0.22207297384738922, 0.234375, 0.24705293774604797, 0.26005181670188904, 0.2733258605003357, 0.2868368625640869, 0.3005528748035431, 0.3144470453262329, 0.3284968137741089, 0.34268301725387573, 0.3569893538951874, 0.37140199542045593, 0.3859090209007263, 0.40050017833709717, 0.41516655683517456, 0.42990052700042725, 0.44469529390335083, 0.4595450460910797, 0.47444456815719604, 0.4893893599510193, 0.5043753981590271, 0.5193990468978882, 0.5344572067260742, 0.549547016620636, 0.5646659731864929, 0.5798117518424988, 0.5949822664260864, 0.6101757287979126, 0.6253905296325684, 0.640625, 0.6558778882026672, 0.671147882938385, 0.6864338517189026, 0.701734721660614, 0.7170495986938477, 0.7323775887489319, 0.7477178573608398, 0.7630696892738342, 0.7784324288368225, 0.7938053607940674, 0.8091879487037659, 0.824579656124115, 0.8399800062179565, 0.8553884625434875, 0.8708046674728394, 0.8862282037734985, 0.9016586542129517, 0.9170956611633301, 0.9325389862060547, 0.9479882121086121, 0.9634431004524231, 0.9789034724235535, 0.9943689107894897, 1.0098392963409424, 1.0253143310546875, 1.0407938957214355, 1.0562777519226074, 1.071765661239624, 1.0872575044631958, 1.1027531623840332, 1.1182522773742676, 1.1337549686431885, 1.1492609977722168, 1.1647701263427734, 1.1802823543548584, 1.1957974433898926, 1.2113155126571655, 1.2268362045288086, 1.2423595190048218, 1.2578853368759155, 1.2734135389328003, 1.288944125175476, 1.3044769763946533, 1.3200119733810425, 1.3355491161346436, 1.351088285446167, 1.3666293621063232, 1.3821723461151123, 1.3977171182632446, 1.4132637977600098, 1.428812026977539, 1.4443620443344116, 1.4599136114120483, 1.4754667282104492, 1.4910212755203247, 1.5065773725509644, 1.5221349000930786, 1.537693738937378, 1.5532538890838623, 1.5688153505325317, 1.5843781232833862, 1.5999419689178467, 1.6155071258544922, 1.6310733556747437, 1.6466407775878906, 1.662209153175354, 1.677778720855713, 1.6933492422103882, 1.7089207172393799, 1.7244932651519775, 1.740066647529602, 1.755640983581543, 1.7712162733078003, 1.7867923974990845, 1.8023693561553955, 1.8179471492767334, 1.8335256576538086, 1.8491050004959106, 1.8646851778030396, 1.8802660703659058, 1.8958476781845093, 1.91143000125885, 1.9270129203796387, 1.942596673965454, 1.9581809043884277, 1.9737659692764282, 1.989351511001587, 2.0049376487731934, 1.989351511001587, 1.9737659692764282, 1.9581809043884277, 1.942596673965454, 1.9270129203796387, 1.91143000125885, 1.8958476781845093, 1.8802660703659058, 1.8646851778030396, 1.8491050004959106, 1.8335256576538086, 1.8179471492767334, 1.8023693561553955, 1.7867923974990845, 1.7712162733078003, 1.755640983581543, 1.740066647529602, 1.7244932651519775, 1.7089207172393799, 1.6933492422103882, 1.677778720855713, 1.662209153175354, 1.6466407775878906, 1.6310733556747437, 1.6155071258544922, 1.5999419689178467, 1.5843781232833862, 1.5688153505325317, 1.5532538890838623, 1.537693738937378, 1.5221349000930786, 1.5065773725509644, 1.4910212755203247, 1.4754667282104492, 1.4599136114120483, 1.4443620443344116, 1.428812026977539, 1.4132637977600098, 1.3977171182632446, 1.3821723461151123, 1.3666293621063232, 1.351088285446167, 1.3355491161346436, 1.3200119733810425, 1.3044769763946533, 1.288944125175476, 1.2734135389328003, 1.2578853368759155, 1.2423595190048218, 1.2268362045288086, 1.2113155126571655, 1.1957974433898926, 1.1802823543548584, 1.1647701263427734, 1.1492609977722168, 1.1337549686431885, 1.1182522773742676, 1.1027531623840332, 1.0872575044631958, 1.071765661239624, 1.0562777519226074, 1.0407938957214355, 1.0253143310546875, 1.0098392963409424, 0.9943689107894897, 0.9789034724235535, 0.9634431004524231, 0.9479882121086121, 0.9325389862060547, 0.9170956611633301, 0.9016586542129517, 0.8862282037734985, 0.8708046674728394, 0.8553884625434875, 0.8399800062179565, 0.824579656124115, 0.8091879487037659, 0.7938053607940674, 0.7784324288368225, 0.7630696892738342, 0.7477178573608398, 0.7323775887489319, 0.7170495986938477, 0.701734721660614, 0.6864338517189026, 0.671147882938385, 0.6558778882026672, 0.640625, 0.6253905296325684, 0.6101757287979126, 0.5949822664260864, 0.5798117518424988, 0.5646659731864929, 0.549547016620636, 0.5344572067260742, 0.5193990468978882, 0.5043753981590271, 0.4893893599510193, 0.47444456815719604, 0.4595450460910797, 0.44469529390335083, 0.42990052700042725, 0.41516655683517456, 0.40050017833709717, 0.3859090209007263, 0.37140199542045593, 0.3569893538951874, 0.34268301725387573, 0.3284968137741089, 0.3144470453262329, 0.3005528748035431, 0.2868368625640869, 0.2733258605003357, 0.26005181670188904, 0.24705293774604797, 0.234375, 0.22207297384738922, 0.21021287143230438, 0.19887378811836243, 0.18814991414546967, 0.1781524121761322, 0.1690102219581604, 0.16086922585964203, 0.15388840436935425, 0.14823175966739655, 0.14405538141727448, 0.1414903998374939, 0.125, 0.12597277760505676, 0.12884704768657684, 0.13350005447864532, 0.1397542506456375, 0.1474059522151947, 0.15625, 0.166096031665802, 0.1767766922712326, 0.18814991414546967, 0.20009763538837433, 0.2125229835510254, 0.22534695267677307, 0.2385052740573883, 0.2519455552101135, 0.265625, 0.279508501291275, 0.29356709122657776, 0.3077768087387085, 0.3221176266670227, 0.3365727961063385, 0.3511281907558441, 0.3657718598842621, 0.3804936110973358, 0.3952847123146057, 0.4101376533508301, 0.4250459671020508, 0.44000399112701416, 0.455006867647171, 0.47005027532577515, 0.4851304590702057, 0.5002440810203552, 0.5153881907463074, 0.5305601954460144, 0.5457577705383301, 0.5609788298606873, 0.5762215256690979, 0.5914841890335083, 0.6067652702331543, 0.622063398361206, 0.6373774409294128, 0.6527062058448792, 0.6680486798286438, 0.6834039688110352, 0.6987712383270264, 0.7141496539115906, 0.72953861951828, 0.7449373602867126, 0.7603453397750854, 0.7757619619369507, 0.7911868095397949, 0.8066193461418152, 0.822059154510498, 0.8375058174133301, 0.8529589772224426, 0.8684183359146118, 0.8838834762573242, 0.8993541598320007, 0.9148300886154175, 0.9303109645843506, 0.9457966089248657, 0.9612867832183838, 0.9767812490463257, 0.9922797679901123, 1.007782220840454, 1.023288369178772, 1.0387980937957764, 1.0543112754821777, 1.069827675819397, 1.0853471755981445, 1.1008696556091309, 1.1163949966430664, 1.1319231986999512, 1.1474539041519165, 1.1629871129989624, 1.1785228252410889, 1.1940608024597168, 1.2096010446548462, 1.2251434326171875, 1.2406879663467407, 1.2562344074249268, 1.2717828750610352, 1.2873331308364868, 1.3028851747512817, 1.3184388875961304, 1.3339943885803223, 1.3495514392852783, 1.3651100397109985, 1.3806700706481934, 1.3962316513061523, 1.411794662475586, 1.4273589849472046, 1.4429244995117188, 1.4584914445877075, 1.4740595817565918, 1.4896289110183716, 1.5051993131637573, 1.5207709074020386, 1.5363435745239258, 1.551917314529419, 1.5674920082092285, 1.583067774772644, 1.598644495010376, 1.6142220497131348, 1.62980055809021, 1.6453800201416016, 1.66096031665802, 1.6765413284301758, 1.692123293876648, 1.7077059745788574, 1.7232894897460938, 1.7388737201690674, 1.7544585466384888, 1.770044207572937, 1.7856305837631226, 1.8012175559997559, 1.8168052434921265, 1.8323935270309448, 1.847982406616211, 1.8635720014572144, 1.879162073135376, 1.8947527408599854, 1.9103440046310425, 1.9259357452392578, 1.941528081893921, 1.9571208953857422, 1.9727143049240112, 1.988308072090149, 2.0039024353027344, 1.988308072090149, 1.9727143049240112, 1.9571208953857422, 1.941528081893921, 1.9259357452392578, 1.9103440046310425, 1.8947527408599854, 1.879162073135376, 1.8635720014572144, 1.847982406616211, 1.8323935270309448, 1.8168052434921265, 1.8012175559997559, 1.7856305837631226, 1.770044207572937, 1.7544585466384888, 1.7388737201690674, 1.7232894897460938, 1.7077059745788574, 1.692123293876648, 1.6765413284301758, 1.66096031665802, 1.6453800201416016, 1.62980055809021, 1.6142220497131348, 1.598644495010376, 1.583067774772644, 1.5674920082092285, 1.551917314529419, 1.5363435745239258, 1.5207709074020386, 1.5051993131637573, 1.4896289110183716, 1.4740595817565918, 1.4584914445877075, 1.4429244995117188, 1.4273589849472046, 1.411794662475586, 1.3962316513061523, 1.3806700706481934, 1.3651100397109985, 1.3495514392852783, 1.3339943885803223, 1.3184388875961304, 1.3028851747512817, 1.2873331308364868, 1.2717828750610352, 1.2562344074249268, 1.2406879663467407, 1.2251434326171875, 1.2096010446548462, 1.1940608024597168, 1.1785228252410889, 1.1629871129989624, 1.1474539041519165, 1.1319231986999512, 1.1163949966430664, 1.1008696556091309, 1.0853471755981445, 1.069827675819397, 1.0543112754821777, 1.0387980937957764, 1.023288369178772, 1.007782220840454, 0.9922797679901123, 0.9767812490463257, 0.9612867832183838, 0.9457966089248657, 0.9303109645843506, 0.9148300886154175, 0.8993541598320007, 0.8838834762573242, 0.8684183359146118, 0.8529589772224426, 0.8375058174133301, 0.822059154510498, 0.8066193461418152, 0.7911868095397949, 0.7757619619369507, 0.7603453397750854, 0.7449373602867126, 0.72953861951828, 0.7141496539115906, 0.6987712383270264, 0.6834039688110352, 0.6680486798286438, 0.6527062058448792, 0.6373774409294128, 0.622063398361206, 0.6067652702331543, 0.5914841890335083, 0.5762215256690979, 0.5609788298606873, 0.5457577705383301, 0.5305601954460144, 0.5153881907463074, 0.5002440810203552, 0.4851304590702057, 0.47005027532577515, 0.455006867647171, 0.44000399112701416, 0.4250459671020508, 0.4101376533508301, 0.3952847123146057, 0.3804936110973358, 0.3657718598842621, 0.3511281907558441, 0.3365727961063385, 0.3221176266670227, 0.3077768087387085, 0.29356709122657776, 0.279508501291275, 0.265625, 0.2519455552101135, 0.2385052740573883, 0.22534695267677307, 0.2125229835510254, 0.20009763538837433, 0.18814991414546967, 0.1767766922712326, 0.166096031665802, 0.15625, 0.1474059522151947, 0.1397542506456375, 0.13350005447864532, 0.12884704768657684, 0.12597277760505676, 0.109375, 0.11048543453216553, 0.11375171691179276, 0.11899645626544952, 0.12597277760505676, 0.13441133499145508, 0.14405538141727448, 0.15467961132526398, 0.166096031665802, 0.1781524121761322, 0.19072742760181427, 0.20372506976127625, 0.21706943213939667, 0.23070035874843597, 0.24456994235515594, 0.25863978266716003, 0.27287888526916504, 0.2872621417045593, 0.30176886916160583, 0.31638213992118835, 0.3310878276824951, 0.3458741307258606, 0.3607311248779297, 0.37565046548843384, 0.390625, 0.4056485891342163, 0.42071598768234253, 0.43582266569137573, 0.45096468925476074, 0.4661385715007782, 0.48134130239486694, 0.49657025933265686, 0.5118231177330017, 0.527097761631012, 0.5423923134803772, 0.557705283164978, 0.5730350017547607, 0.5883803367614746, 0.6037399768829346, 0.6191129088401794, 0.634498119354248, 0.6498948335647583, 0.6653021574020386, 0.6807193756103516, 0.6961458921432495, 0.7115811109542847, 0.7270243763923645, 0.7424752712249756, 0.7579333186149597, 0.7733980417251587, 0.7888690829277039, 0.8043460845947266, 0.8198287487030029, 0.8353166580200195, 0.8508095741271973, 0.866307258605957, 0.881809413433075, 0.8973158597946167, 0.9128263592720032, 0.9283406734466553, 0.9438586235046387, 0.9593800902366638, 0.9749048352241516, 0.9904327392578125, 1.005963683128357, 1.0214974880218506, 1.0370339155197144, 1.0525730848312378, 1.0681147575378418, 1.0836588144302368, 1.0992051362991333, 1.1147537231445312, 1.1303043365478516, 1.1458569765090942, 1.1614116430282593, 1.1769680976867676, 1.1925263404846191, 1.208086371421814, 1.223647952079773, 1.2392112016677856, 1.2547760009765625, 1.270342230796814, 1.2859100103378296, 1.3014789819717407, 1.3170493841171265, 1.3326210975646973, 1.3481940031051636, 1.3637681007385254, 1.3793432712554932, 1.3949196338653564, 1.4104970693588257, 1.4260755777359009, 1.4416550397872925, 1.4572354555130005, 1.472816824913025, 1.4883991479873657, 1.5039823055267334, 1.5195664167404175, 1.5351512432098389, 1.5507370233535767, 1.5663233995437622, 1.5819107294082642, 1.5974986553192139, 1.6130872964859009, 1.6286767721176147, 1.6442668437957764, 1.6598575115203857, 1.6754488945007324, 1.6910408735275269, 1.706633448600769, 1.722226619720459, 1.7378203868865967, 1.7534146308898926, 1.7690094709396362, 1.784604787826538, 1.8002007007598877, 1.8157970905303955, 1.8313939571380615, 1.8469913005828857, 1.8625891208648682, 1.8781874179840088, 1.893786072731018, 1.9093852043151855, 1.9249848127365112, 1.9405847787857056, 1.9561851024627686, 1.9717859029769897, 1.98738694190979, 2.002988576889038, 1.98738694190979, 1.9717859029769897, 1.9561851024627686, 1.9405847787857056, 1.9249848127365112, 1.9093852043151855, 1.893786072731018, 1.8781874179840088, 1.8625891208648682, 1.8469913005828857, 1.8313939571380615, 1.8157970905303955, 1.8002007007598877, 1.784604787826538, 1.7690094709396362, 1.7534146308898926, 1.7378203868865967, 1.722226619720459, 1.706633448600769, 1.6910408735275269, 1.6754488945007324, 1.6598575115203857, 1.6442668437957764, 1.6286767721176147, 1.6130872964859009, 1.5974986553192139, 1.5819107294082642, 1.5663233995437622, 1.5507370233535767, 1.5351512432098389, 1.5195664167404175, 1.5039823055267334, 1.4883991479873657, 1.472816824913025, 1.4572354555130005, 1.4416550397872925, 1.4260755777359009, 1.4104970693588257, 1.3949196338653564, 1.3793432712554932, 1.3637681007385254, 1.3481940031051636, 1.3326210975646973, 1.3170493841171265, 1.3014789819717407, 1.2859100103378296, 1.270342230796814, 1.2547760009765625, 1.2392112016677856, 1.223647952079773, 1.208086371421814, 1.1925263404846191, 1.1769680976867676, 1.1614116430282593, 1.1458569765090942, 1.1303043365478516, 1.1147537231445312, 1.0992051362991333, 1.0836588144302368, 1.0681147575378418, 1.0525730848312378, 1.0370339155197144, 1.0214974880218506, 1.005963683128357, 0.9904327392578125, 0.9749048352241516, 0.9593800902366638, 0.9438586235046387, 0.9283406734466553, 0.9128263592720032, 0.8973158597946167, 0.881809413433075, 0.866307258605957, 0.8508095741271973, 0.8353166580200195, 0.8198287487030029, 0.8043460845947266, 0.7888690829277039, 0.7733980417251587, 0.7579333186149597, 0.7424752712249756, 0.7270243763923645, 0.7115811109542847, 0.6961458921432495, 0.6807193756103516, 0.6653021574020386, 0.6498948335647583, 0.634498119354248, 0.6191129088401794, 0.6037399768829346, 0.5883803367614746, 0.5730350017547607, 0.557705283164978, 0.5423923134803772, 0.527097761631012, 0.5118231177330017, 0.49657025933265686, 0.48134130239486694, 0.4661385715007782, 0.45096468925476074, 0.43582266569137573, 0.42071598768234253, 0.4056485891342163, 0.390625, 0.37565046548843384, 0.3607311248779297, 0.3458741307258606, 0.3310878276824951, 0.31638213992118835, 0.30176886916160583, 0.2872621417045593, 0.27287888526916504, 0.25863978266716003, 0.24456994235515594, 0.23070035874843597, 0.21706943213939667, 0.20372506976127625, 0.19072742760181427, 0.1781524121761322, 0.166096031665802, 0.15467961132526398, 0.14405538141727448, 0.13441133499145508, 0.12597277760505676, 0.11899645626544952, 0.11375171691179276, 0.11048543453216553, 0.09375, 0.09504316747188568, 0.09882117807865143, 0.10481568425893784, 0.11267347633838654, 0.12203515321016312, 0.13258251547813416, 0.14405538141727448, 0.15625, 0.1690102219581604, 0.18221724033355713, 0.1957806944847107, 0.20963136851787567, 0.22371596097946167, 0.23799291253089905, 0.2524296045303345, 0.26700010895729065, 0.28168368339538574, 0.2964635193347931, 0.31132590770721436, 0.326259583234787, 0.34125515818595886, 0.3563048243522644, 0.37140199542045593, 0.3865411579608917, 0.40171751379966736, 0.4169270098209381, 0.4321661591529846, 0.44743192195892334, 0.46272164583206177, 0.47803306579589844, 0.493364155292511, 0.5087131261825562, 0.5240784287452698, 0.5394586324691772, 0.5548525452613831, 0.5702589750289917, 0.5856770277023315, 0.6011057496070862, 0.6165443658828735, 0.6319921612739563, 0.6474484205245972, 0.6629126071929932, 0.6783841848373413, 0.6938626170158386, 0.7093474864959717, 0.7248383164405823, 0.7403348684310913, 0.7558366656303406, 0.771343469619751, 0.7868549227714539, 0.8023707270622253, 0.8178907632827759, 0.8334147334098816, 0.8489423394203186, 0.8644735217094421, 0.8800079822540283, 0.8955456018447876, 0.9110862612724304, 0.9266296625137329, 0.9421758651733398, 0.9577245712280273, 0.9732757210731506, 0.9888291954994202, 1.0043848752975464, 1.0199427604675293, 1.035502552986145, 1.051064372062683, 1.0666279792785645, 1.082193374633789, 1.097760558128357, 1.1133291721343994, 1.1288994550704956, 1.144471287727356, 1.1600444316864014, 1.1756190061569214, 1.1911948919296265, 1.2067720890045166, 1.2223504781723022, 1.2379300594329834, 1.2535107135772705, 1.2690924406051636, 1.2846752405166626, 1.3002591133117676, 1.315843939781189, 1.3314297199249268, 1.3470163345336914, 1.3626039028167725, 1.3781923055648804, 1.3937815427780151, 1.4093714952468872, 1.4249622821807861, 1.4405537843704224, 1.456146001815796, 1.4717389345169067, 1.4873325824737549, 1.5029268264770508, 1.5185216665267944, 1.5341172218322754, 1.5497132539749146, 1.565310001373291, 1.5809072256088257, 1.5965049266815186, 1.6121032238006592, 1.6277021169662476, 1.6433013677597046, 1.6589012145996094, 1.6745014190673828, 1.690102219581604, 1.7057033777236938, 1.7213048934936523, 1.736906886100769, 1.752509355545044, 1.7681121826171875, 1.7837153673171997, 1.7993190288543701, 1.8149229288101196, 1.8305273056030273, 1.8461319208145142, 1.8617368936538696, 1.8773423433303833, 1.8929479122161865, 1.908553957939148, 1.9241602420806885, 1.939766764640808, 1.955373764038086, 1.9709808826446533, 1.9865883588790894, 2.0021960735321045, 1.9865883588790894, 1.9709808826446533, 1.955373764038086, 1.939766764640808, 1.9241602420806885, 1.908553957939148, 1.8929479122161865, 1.8773423433303833, 1.8617368936538696, 1.8461319208145142, 1.8305273056030273, 1.8149229288101196, 1.7993190288543701, 1.7837153673171997, 1.7681121826171875, 1.752509355545044, 1.736906886100769, 1.7213048934936523, 1.7057033777236938, 1.690102219581604, 1.6745014190673828, 1.6589012145996094, 1.6433013677597046, 1.6277021169662476, 1.6121032238006592, 1.5965049266815186, 1.5809072256088257, 1.565310001373291, 1.5497132539749146, 1.5341172218322754, 1.5185216665267944, 1.5029268264770508, 1.4873325824737549, 1.4717389345169067, 1.456146001815796, 1.4405537843704224, 1.4249622821807861, 1.4093714952468872, 1.3937815427780151, 1.3781923055648804, 1.3626039028167725, 1.3470163345336914, 1.3314297199249268, 1.315843939781189, 1.3002591133117676, 1.2846752405166626, 1.2690924406051636, 1.2535107135772705, 1.2379300594329834, 1.2223504781723022, 1.2067720890045166, 1.1911948919296265, 1.1756190061569214, 1.1600444316864014, 1.144471287727356, 1.1288994550704956, 1.1133291721343994, 1.097760558128357, 1.082193374633789, 1.0666279792785645, 1.051064372062683, 1.035502552986145, 1.0199427604675293, 1.0043848752975464, 0.9888291954994202, 0.9732757210731506, 0.9577245712280273, 0.9421758651733398, 0.9266296625137329, 0.9110862612724304, 0.8955456018447876, 0.8800079822540283, 0.8644735217094421, 0.8489423394203186, 0.8334147334098816, 0.8178907632827759, 0.8023707270622253, 0.7868549227714539, 0.771343469619751, 0.7558366656303406, 0.7403348684310913, 0.7248383164405823, 0.7093474864959717, 0.6938626170158386, 0.6783841848373413, 0.6629126071929932, 0.6474484205245972, 0.6319921612739563, 0.6165443658828735, 0.6011057496070862, 0.5856770277023315, 0.5702589750289917, 0.5548525452613831, 0.5394586324691772, 0.5240784287452698, 0.5087131261825562, 0.493364155292511, 0.47803306579589844, 0.46272164583206177, 0.44743192195892334, 0.4321661591529846, 0.4169270098209381, 0.40171751379966736, 0.3865411579608917, 0.37140199542045593, 0.3563048243522644, 0.34125515818595886, 0.326259583234787, 0.31132590770721436, 0.2964635193347931, 0.28168368339538574, 0.26700010895729065, 0.2524296045303345, 0.23799291253089905, 0.22371596097946167, 0.20963136851787567, 0.1957806944847107, 0.18221724033355713, 0.1690102219581604, 0.15625, 0.14405538141727448, 0.13258251547813416, 0.12203515321016312, 0.11267347633838654, 0.10481568425893784, 0.09882117807865143, 0.09504316747188568, 0.078125, 0.0796721801161766, 0.08414319902658463, 0.09110862016677856, 0.10004881769418716, 0.11048543453216553, 0.12203515321016312, 0.13441133499145508, 0.1474059522151947, 0.16086922585964203, 0.1746928095817566, 0.18879759311676025, 0.203125, 0.21763107180595398, 0.23228232562541962, 0.24705293774604797, 0.2619227170944214, 0.27687570452690125, 0.29189908504486084, 0.30698254704475403, 0.3221176266670227, 0.33729737997055054, 0.3525160551071167, 0.3677688241004944, 0.3830515742301941, 0.3983609080314636, 0.4136938154697418, 0.4290478229522705, 0.4444206953048706, 0.4598105847835541, 0.4752158224582672, 0.490634948015213, 0.5060667395591736, 0.5215100049972534, 0.5369637608528137, 0.5524271726608276, 0.5678994059562683, 0.5833798050880432, 0.5988677740097046, 0.6143625974655151, 0.6298638582229614, 0.64537113904953, 0.6608839631080627, 0.6764019131660461, 0.6919246912002563, 0.7074519395828247, 0.7229834794998169, 0.7385188937187195, 0.7540580034255981, 0.7696006298065186, 0.7851465344429016, 0.8006954789161682, 0.8162473440170288, 0.8318019509315491, 0.8473591804504395, 0.8629188537597656, 0.8784807920455933, 0.8940449953079224, 0.9096112251281738, 0.9251794815063477, 0.9407495856285095, 0.9563214778900146, 0.9718950986862183, 0.9874703288078308, 1.0030471086502075, 1.0186253786087036, 1.0342050790786743, 1.04978609085083, 1.065368413925171, 1.0809519290924072, 1.096536636352539, 1.1121225357055664, 1.1277093887329102, 1.1432974338531494, 1.1588863134384155, 1.1744762659072876, 1.190067172050476, 1.2056589126586914, 1.2212514877319336, 1.2368448972702026, 1.252439022064209, 1.2680339813232422, 1.2836296558380127, 1.2992260456085205, 1.3148231506347656, 1.3304208517074585, 1.3460191488265991, 1.361618161201477, 1.3772176504135132, 1.392817735671997, 1.4084184169769287, 1.424019694328308, 1.4396214485168457, 1.455223560333252, 1.470826268196106, 1.4864294528961182, 1.5020331144332886, 1.5176372528076172, 1.5332417488098145, 1.5488466024398804, 1.5644519329071045, 1.5800576210021973, 1.5956636667251587, 1.6112700700759888, 1.626876950263977, 1.6424840688705444, 1.6580915451049805, 1.6736993789672852, 1.689307451248169, 1.7049158811569214, 1.7205246686935425, 1.7361336946487427, 1.751742959022522, 1.76735258102417, 1.782962441444397, 1.7985725402832031, 1.814182996749878, 1.8297935724258423, 1.8454045057296753, 1.8610155582427979, 1.8766268491744995, 1.8922384977340698, 1.9078502655029297, 1.9234622716903687, 1.9390745162963867, 1.9546868801116943, 1.970299482345581, 1.9859123229980469, 2.001525402069092, 1.9859123229980469, 1.970299482345581, 1.9546868801116943, 1.9390745162963867, 1.9234622716903687, 1.9078502655029297, 1.8922384977340698, 1.8766268491744995, 1.8610155582427979, 1.8454045057296753, 1.8297935724258423, 1.814182996749878, 1.7985725402832031, 1.782962441444397, 1.76735258102417, 1.751742959022522, 1.7361336946487427, 1.7205246686935425, 1.7049158811569214, 1.689307451248169, 1.6736993789672852, 1.6580915451049805, 1.6424840688705444, 1.626876950263977, 1.6112700700759888, 1.5956636667251587, 1.5800576210021973, 1.5644519329071045, 1.5488466024398804, 1.5332417488098145, 1.5176372528076172, 1.5020331144332886, 1.4864294528961182, 1.470826268196106, 1.455223560333252, 1.4396214485168457, 1.424019694328308, 1.4084184169769287, 1.392817735671997, 1.3772176504135132, 1.361618161201477, 1.3460191488265991, 1.3304208517074585, 1.3148231506347656, 1.2992260456085205, 1.2836296558380127, 1.2680339813232422, 1.252439022064209, 1.2368448972702026, 1.2212514877319336, 1.2056589126586914, 1.190067172050476, 1.1744762659072876, 1.1588863134384155, 1.1432974338531494, 1.1277093887329102, 1.1121225357055664, 1.096536636352539, 1.0809519290924072, 1.065368413925171, 1.04978609085083, 1.0342050790786743, 1.0186253786087036, 1.0030471086502075, 0.9874703288078308, 0.9718950986862183, 0.9563214778900146, 0.9407495856285095, 0.9251794815063477, 0.9096112251281738, 0.8940449953079224, 0.8784807920455933, 0.8629188537597656, 0.8473591804504395, 0.8318019509315491, 0.8162473440170288, 0.8006954789161682, 0.7851465344429016, 0.7696006298065186, 0.7540580034255981, 0.7385188937187195, 0.7229834794998169, 0.7074519395828247, 0.6919246912002563, 0.6764019131660461, 0.6608839631080627, 0.64537113904953, 0.6298638582229614, 0.6143625974655151, 0.5988677740097046, 0.5833798050880432, 0.5678994059562683, 0.5524271726608276, 0.5369637608528137, 0.5215100049972534, 0.5060667395591736, 0.490634948015213, 0.4752158224582672, 0.4598105847835541, 0.4444206953048706, 0.4290478229522705, 0.4136938154697418, 0.3983609080314636, 0.3830515742301941, 0.3677688241004944, 0.3525160551071167, 0.33729737997055054, 0.3221176266670227, 0.30698254704475403, 0.29189908504486084, 0.27687570452690125, 0.2619227170944214, 0.24705293774604797, 0.23228232562541962, 0.21763107180595398, 0.203125, 0.18879759311676025, 0.1746928095817566, 0.16086922585964203, 0.1474059522151947, 0.13441133499145508, 0.12203515321016312, 0.11048543453216553, 0.10004881769418716, 0.09110862016677856, 0.08414319902658463, 0.0796721801161766, 0.0625, 0.06442352384328842, 0.06987712532281876, 0.078125, 0.0883883461356163, 0.10004881769418716, 0.11267347633838654, 0.12597277760505676, 0.1397542506456375, 0.15388840436935425, 0.16828639805316925, 0.18288592994213104, 0.19764235615730286, 0.2125229835510254, 0.2275034338235855, 0.24256522953510284, 0.2576940953731537, 0.27287888526916504, 0.28811076283454895, 0.30338263511657715, 0.3186887204647064, 0.3340243399143219, 0.3493856191635132, 0.36476930975914, 0.3801726698875427, 0.39559340476989746, 0.411029577255249, 0.4264794886112213, 0.4419417381286621, 0.45741504430770874, 0.47289830446243286, 0.48839062452316284, 0.503891110420227, 0.5193990468978882, 0.5349138379096985, 0.5504348278045654, 0.5659615993499756, 0.5814935564994812, 0.5970304012298584, 0.6125717163085938, 0.6281172037124634, 0.6436665654182434, 0.6592194437980652, 0.6747757196426392, 0.6903350353240967, 0.705897331237793, 0.7214622497558594, 0.7370297908782959, 0.7525996565818787, 0.7681717872619629, 0.7837460041046143, 0.799322247505188, 0.814900279045105, 0.83048015832901, 0.846061646938324, 0.8616447448730469, 0.8772292733192444, 0.8928152918815613, 0.9084026217460632, 0.9239912033081055, 0.939581036567688, 0.9551720023155212, 0.9707640409469604, 0.9863571524620056, 1.0019512176513672, 1.01754629611969, 1.0331422090530396, 1.048738956451416, 1.0643366575241089, 1.079935073852539, 1.0955342054367065, 1.1111341714859009, 1.126734733581543, 1.1423360109329224, 1.157938003540039, 1.173540472984314, 1.1891436576843262, 1.2047473192214966, 1.2203514575958252, 1.2359563112258911, 1.2515615224838257, 1.267167329788208, 1.282773494720459, 1.2983801364898682, 1.3139872550964355, 1.3295947313308716, 1.3452026844024658, 1.3608109951019287, 1.3764196634292603, 1.39202880859375, 1.4076381921768188, 1.4232479333877563, 1.4388580322265625, 1.4544684886932373, 1.4700791835784912, 1.4856902360916138, 1.5013015270233154, 1.5169130563735962, 1.5325249433517456, 1.5481370687484741, 1.5637495517730713, 1.579362154006958, 1.5949749946594238, 1.6105881929397583, 1.6262015104293823, 1.6418150663375854, 1.6574288606643677, 1.6730427742004395, 1.6886570453643799, 1.7042714357376099, 1.7198859453201294, 1.7355008125305176, 1.7511156797409058, 1.7667309045791626, 1.7823461294174194, 1.7979615926742554, 1.8135772943496704, 1.829193115234375, 1.8448090553283691, 1.8604251146316528, 1.8760414123535156, 1.891657829284668, 1.9072743654251099, 1.9228910207748413, 1.9385077953338623, 1.9541246891021729, 1.9697418212890625, 1.9853589534759521, 2.000976324081421, 1.9853589534759521, 1.9697418212890625, 1.9541246891021729, 1.9385077953338623, 1.9228910207748413, 1.9072743654251099, 1.891657829284668, 1.8760414123535156, 1.8604251146316528, 1.8448090553283691, 1.829193115234375, 1.8135772943496704, 1.7979615926742554, 1.7823461294174194, 1.7667309045791626, 1.7511156797409058, 1.7355008125305176, 1.7198859453201294, 1.7042714357376099, 1.6886570453643799, 1.6730427742004395, 1.6574288606643677, 1.6418150663375854, 1.6262015104293823, 1.6105881929397583, 1.5949749946594238, 1.579362154006958, 1.5637495517730713, 1.5481370687484741, 1.5325249433517456, 1.5169130563735962, 1.5013015270233154, 1.4856902360916138, 1.4700791835784912, 1.4544684886932373, 1.4388580322265625, 1.4232479333877563, 1.4076381921768188, 1.39202880859375, 1.3764196634292603, 1.3608109951019287, 1.3452026844024658, 1.3295947313308716, 1.3139872550964355, 1.2983801364898682, 1.282773494720459, 1.267167329788208, 1.2515615224838257, 1.2359563112258911, 1.2203514575958252, 1.2047473192214966, 1.1891436576843262, 1.173540472984314, 1.157938003540039, 1.1423360109329224, 1.126734733581543, 1.1111341714859009, 1.0955342054367065, 1.079935073852539, 1.0643366575241089, 1.048738956451416, 1.0331422090530396, 1.01754629611969, 1.0019512176513672, 0.9863571524620056, 0.9707640409469604, 0.9551720023155212, 0.939581036567688, 0.9239912033081055, 0.9084026217460632, 0.8928152918815613, 0.8772292733192444, 0.8616447448730469, 0.846061646938324, 0.83048015832901, 0.814900279045105, 0.799322247505188, 0.7837460041046143, 0.7681717872619629, 0.7525996565818787, 0.7370297908782959, 0.7214622497558594, 0.705897331237793, 0.6903350353240967, 0.6747757196426392, 0.6592194437980652, 0.6436665654182434, 0.6281172037124634, 0.6125717163085938, 0.5970304012298584, 0.5814935564994812, 0.5659615993499756, 0.5504348278045654, 0.5349138379096985, 0.5193990468978882, 0.503891110420227, 0.48839062452316284, 0.47289830446243286, 0.45741504430770874, 0.4419417381286621, 0.4264794886112213, 0.411029577255249, 0.39559340476989746, 0.3801726698875427, 0.36476930975914, 0.3493856191635132, 0.3340243399143219, 0.3186887204647064, 0.30338263511657715, 0.28811076283454895, 0.27287888526916504, 0.2576940953731537, 0.24256522953510284, 0.2275034338235855, 0.2125229835510254, 0.19764235615730286, 0.18288592994213104, 0.16828639805316925, 0.15388840436935425, 0.1397542506456375, 0.12597277760505676, 0.11267347633838654, 0.10004881769418716, 0.0883883461356163, 0.078125, 0.06987712532281876, 0.06442352384328842, 0.046875, 0.049410589039325714, 0.05633673816919327, 0.06629125773906708, 0.078125, 0.09110862016677856, 0.10481568425893784, 0.11899645626544952, 0.13350005447864532, 0.14823175966739655, 0.1631297916173935, 0.1781524121761322, 0.19327057898044586, 0.20846350491046906, 0.22371596097946167, 0.23901653289794922, 0.2543565630912781, 0.2697293162345886, 0.28512948751449585, 0.3005528748035431, 0.31599608063697815, 0.3314563035964966, 0.3469313085079193, 0.36241915822029114, 0.3779183328151703, 0.39342746138572693, 0.40894538164138794, 0.4244711697101593, 0.44000399112701416, 0.4555431306362152, 0.4710879325866699, 0.4866378605365753, 0.5021924376487732, 0.5177512764930725, 0.5333139896392822, 0.5488802790641785, 0.5644497275352478, 0.5800222158432007, 0.5955974459648132, 0.6111752390861511, 0.6267553567886353, 0.6423376202583313, 0.6579219698905945, 0.6735081672668457, 0.6890961527824402, 0.7046857476234436, 0.7202768921852112, 0.7358694672584534, 0.7514634132385254, 0.7670586109161377, 0.7826550006866455, 0.7982524633407593, 0.8138510584831238, 0.8294506072998047, 0.845051109790802, 0.8606524467468262, 0.876254677772522, 0.8918576836585999, 0.9074614644050598, 0.9230659604072571, 0.9386711716651917, 0.954276978969574, 0.969883382320404, 0.9854904413223267, 1.0010980367660522, 1.016706109046936, 1.0323147773742676, 1.0479239225387573, 1.0635335445404053, 1.0791435241699219, 1.0947539806365967, 1.1103649139404297, 1.1259760856628418, 1.141587734222412, 1.157199740409851, 1.1728121042251587, 1.188424825668335, 1.2040377855300903, 1.2196511030197144, 1.2352646589279175, 1.2508785724639893, 1.2664927244186401, 1.2821072340011597, 1.2977218627929688, 1.313336730003357, 1.3289519548416138, 1.3445672988891602, 1.3601830005645752, 1.3757988214492798, 1.391414761543274, 1.4070310592651367, 1.422647476196289, 1.438264012336731, 1.4538809061050415, 1.469497799873352, 1.4851149320602417, 1.5007323026657104, 1.5163496732711792, 1.531967282295227, 1.5475850105285645, 1.563202977180481, 1.578821063041687, 1.594439148902893, 1.6100574731826782, 1.625675916671753, 1.6412944793701172, 1.656913161277771, 1.6725319623947144, 1.6881508827209473, 1.7037699222564697, 1.7193890810012817, 1.7350083589553833, 1.7506276369094849, 1.7662471532821655, 1.7818666696548462, 1.7974863052368164, 1.8131060600280762, 1.828725814819336, 1.8443458080291748, 1.8599658012390137, 1.8755857944488525, 1.8912060260772705, 1.9068262577056885, 1.922446608543396, 1.9380669593811035, 1.9536874294281006, 1.9693078994750977, 1.9849286079406738, 2.00054931640625, 1.9849286079406738, 1.9693078994750977, 1.9536874294281006, 1.9380669593811035, 1.922446608543396, 1.9068262577056885, 1.8912060260772705, 1.8755857944488525, 1.8599658012390137, 1.8443458080291748, 1.828725814819336, 1.8131060600280762, 1.7974863052368164, 1.7818666696548462, 1.7662471532821655, 1.7506276369094849, 1.7350083589553833, 1.7193890810012817, 1.7037699222564697, 1.6881508827209473, 1.6725319623947144, 1.656913161277771, 1.6412944793701172, 1.625675916671753, 1.6100574731826782, 1.594439148902893, 1.578821063041687, 1.563202977180481, 1.5475850105285645, 1.531967282295227, 1.5163496732711792, 1.5007323026657104, 1.4851149320602417, 1.469497799873352, 1.4538809061050415, 1.438264012336731, 1.422647476196289, 1.4070310592651367, 1.391414761543274, 1.3757988214492798, 1.3601830005645752, 1.3445672988891602, 1.3289519548416138, 1.313336730003357, 1.2977218627929688, 1.2821072340011597, 1.2664927244186401, 1.2508785724639893, 1.2352646589279175, 1.2196511030197144, 1.2040377855300903, 1.188424825668335, 1.1728121042251587, 1.157199740409851, 1.141587734222412, 1.1259760856628418, 1.1103649139404297, 1.0947539806365967, 1.0791435241699219, 1.0635335445404053, 1.0479239225387573, 1.0323147773742676, 1.016706109046936, 1.0010980367660522, 0.9854904413223267, 0.969883382320404, 0.954276978969574, 0.9386711716651917, 0.9230659604072571, 0.9074614644050598, 0.8918576836585999, 0.876254677772522, 0.8606524467468262, 0.845051109790802, 0.8294506072998047, 0.8138510584831238, 0.7982524633407593, 0.7826550006866455, 0.7670586109161377, 0.7514634132385254, 0.7358694672584534, 0.7202768921852112, 0.7046857476234436, 0.6890961527824402, 0.6735081672668457, 0.6579219698905945, 0.6423376202583313, 0.6267553567886353, 0.6111752390861511, 0.5955974459648132, 0.5800222158432007, 0.5644497275352478, 0.5488802790641785, 0.5333139896392822, 0.5177512764930725, 0.5021924376487732, 0.4866378605365753, 0.4710879325866699, 0.4555431306362152, 0.44000399112701416, 0.4244711697101593, 0.40894538164138794, 0.39342746138572693, 0.3779183328151703, 0.36241915822029114, 0.3469313085079193, 0.3314563035964966, 0.31599608063697815, 0.3005528748035431, 0.28512948751449585, 0.2697293162345886, 0.2543565630912781, 0.23901653289794922, 0.22371596097946167, 0.20846350491046906, 0.19327057898044586, 0.1781524121761322, 0.1631297916173935, 0.14823175966739655, 0.13350005447864532, 0.11899645626544952, 0.10481568425893784, 0.09110862016677856, 0.078125, 0.06629125773906708, 0.05633673816919327, 0.049410589039325714, 0.03125, 0.03493856266140938, 0.04419417306780815, 0.05633673816919327, 0.06987712532281876, 0.08414319902658463, 0.09882117807865143, 0.11375171691179276, 0.12884704768657684, 0.14405538141727448, 0.1593443602323532, 0.1746928095817566, 0.19008633494377136, 0.2055147886276245, 0.22097086906433105, 0.23644915223121643, 0.2519455552101135, 0.26745691895484924, 0.2829807996749878, 0.2985152006149292, 0.3140586018562317, 0.3296097218990326, 0.34516751766204834, 0.3607311248779297, 0.37629982829093933, 0.39187300205230713, 0.4074501395225525, 0.423030823469162, 0.4386146366596222, 0.4542013108730316, 0.469790518283844, 0.4853820204734802, 0.5009756088256836, 0.5165711045265198, 0.5321683287620544, 0.5477671027183533, 0.5633673667907715, 0.5789690017700195, 0.5945718288421631, 0.6101757287979126, 0.6257807612419128, 0.6413867473602295, 0.6569936275482178, 0.6726013422012329, 0.6882098317146301, 0.7038190960884094, 0.7194290161132812, 0.7350395917892456, 0.7506507635116577, 0.7662624716758728, 0.7818747758865356, 0.7974874973297119, 0.8131007552146912, 0.8287144303321838, 0.8443285226821899, 0.8599429726600647, 0.8755578398704529, 0.8911730647087097, 0.9067886471748352, 0.9224045276641846, 0.9380207061767578, 0.9536371827125549, 0.9692538976669312, 0.9848709106445312, 1.0004881620407104, 1.0161056518554688, 1.0317233800888062, 1.0473413467407227, 1.0629594326019287, 1.0785777568817139, 1.0941963195800781, 1.109815001487732, 1.1254339218139648, 1.1410529613494873, 1.1566722393035889, 1.17229163646698, 1.1879111528396606, 1.2035307884216309, 1.2191505432128906, 1.2347705364227295, 1.2503905296325684, 1.2660107612609863, 1.2816309928894043, 1.2972514629364014, 1.3128719329833984, 1.3284926414489746, 1.3441133499145508, 1.3597341775894165, 1.3753551244735718, 1.390976071357727, 1.4065971374511719, 1.4222183227539062, 1.4378396272659302, 1.453460931777954, 1.4690823554992676, 1.4847038984298706, 1.5003254413604736, 1.5159471035003662, 1.5315688848495483, 1.5471906661987305, 1.5628124475479126, 1.5784343481063843, 1.5940563678741455, 1.6096783876419067, 1.625300407409668, 1.6409225463867188, 1.656544804573059, 1.6721670627593994, 1.6877893209457397, 1.7034116983413696, 1.7190340757369995, 1.7346564531326294, 1.7502789497375488, 1.7659015655517578, 1.7815240621566772, 1.7971466779708862, 1.8127694129943848, 1.8283920288085938, 1.8440147638320923, 1.8596376180648804, 1.875260353088379, 1.890883207321167, 1.9065061807632446, 1.9221290349960327, 1.9377520084381104, 1.953374981880188, 1.9689979553222656, 1.9846210479736328, 2.000244140625, 1.9846210479736328, 1.9689979553222656, 1.953374981880188, 1.9377520084381104, 1.9221290349960327, 1.9065061807632446, 1.890883207321167, 1.875260353088379, 1.8596376180648804, 1.8440147638320923, 1.8283920288085938, 1.8127694129943848, 1.7971466779708862, 1.7815240621566772, 1.7659015655517578, 1.7502789497375488, 1.7346564531326294, 1.7190340757369995, 1.7034116983413696, 1.6877893209457397, 1.6721670627593994, 1.656544804573059, 1.6409225463867188, 1.625300407409668, 1.6096783876419067, 1.5940563678741455, 1.5784343481063843, 1.5628124475479126, 1.5471906661987305, 1.5315688848495483, 1.5159471035003662, 1.5003254413604736, 1.4847038984298706, 1.4690823554992676, 1.453460931777954, 1.4378396272659302, 1.4222183227539062, 1.4065971374511719, 1.390976071357727, 1.3753551244735718, 1.3597341775894165, 1.3441133499145508, 1.3284926414489746, 1.3128719329833984, 1.2972514629364014, 1.2816309928894043, 1.2660107612609863, 1.2503905296325684, 1.2347705364227295, 1.2191505432128906, 1.2035307884216309, 1.1879111528396606, 1.17229163646698, 1.1566722393035889, 1.1410529613494873, 1.1254339218139648, 1.109815001487732, 1.0941963195800781, 1.0785777568817139, 1.0629594326019287, 1.0473413467407227, 1.0317233800888062, 1.0161056518554688, 1.0004881620407104, 0.9848709106445312, 0.9692538976669312, 0.9536371827125549, 0.9380207061767578, 0.9224045276641846, 0.9067886471748352, 0.8911730647087097, 0.8755578398704529, 0.8599429726600647, 0.8443285226821899, 0.8287144303321838, 0.8131007552146912, 0.7974874973297119, 0.7818747758865356, 0.7662624716758728, 0.7506507635116577, 0.7350395917892456, 0.7194290161132812, 0.7038190960884094, 0.6882098317146301, 0.6726013422012329, 0.6569936275482178, 0.6413867473602295, 0.6257807612419128, 0.6101757287979126, 0.5945718288421631, 0.5789690017700195, 0.5633673667907715, 0.5477671027183533, 0.5321683287620544, 0.5165711045265198, 0.5009756088256836, 0.4853820204734802, 0.469790518283844, 0.4542013108730316, 0.4386146366596222, 0.423030823469162, 0.4074501395225525, 0.39187300205230713, 0.37629982829093933, 0.3607311248779297, 0.34516751766204834, 0.3296097218990326, 0.3140586018562317, 0.2985152006149292, 0.2829807996749878, 0.26745691895484924, 0.2519455552101135, 0.23644915223121643, 0.22097086906433105, 0.2055147886276245, 0.19008633494377136, 0.1746928095817566, 0.1593443602323532, 0.14405538141727448, 0.12884704768657684, 0.11375171691179276, 0.09882117807865143, 0.08414319902658463, 0.06987712532281876, 0.05633673816919327, 0.04419417306780815, 0.03493856266140938, 0.015625, 0.022097086533904076, 0.03493856266140938, 0.049410589039325714, 0.06442352384328842, 0.0796721801161766, 0.09504316747188568, 0.11048543453216553, 0.12597277760505676, 0.1414903998374939, 0.15702930092811584, 0.17258375883102417, 0.18814991414546967, 0.20372506976127625, 0.2193073183298111, 0.234895259141922, 0.2504878044128418, 0.2660841643810272, 0.28168368339538574, 0.29728591442108154, 0.3128903806209564, 0.3284968137741089, 0.34410491585731506, 0.3597145080566406, 0.37532538175582886, 0.3909373879432678, 0.4065503776073456, 0.42216426134109497, 0.43777891993522644, 0.4533943235874176, 0.4690103530883789, 0.4846269488334656, 0.5002440810203552, 0.5158616900444031, 0.5314797163009644, 0.5470981597900391, 0.5627169609069824, 0.5783361196517944, 0.5939555764198303, 0.6095752716064453, 0.6251952648162842, 0.6408154964447021, 0.6564359664916992, 0.6720566749572754, 0.6876775622367859, 0.7032985687255859, 0.7189198136329651, 0.7345411777496338, 0.7501627206802368, 0.7657844424247742, 0.7814062237739563, 0.7970281839370728, 0.812650203704834, 0.8282724022865295, 0.8438946604728699, 0.8595170378684998, 0.8751394748687744, 0.8907620310783386, 0.9063847064971924, 0.9220073819160461, 0.9376301765441895, 0.9532530903816223, 0.9688760042190552, 0.9844989776611328, 1.0001220703125, 1.0157451629638672, 1.031368374824524, 1.0469915866851807, 1.062614917755127, 1.0782382488250732, 1.0938615798950195, 1.1094850301742554, 1.1251084804534912, 1.1407320499420166, 1.156355619430542, 1.1719791889190674, 1.1876027584075928, 1.2032264471054077, 1.2188501358032227, 1.2344739437103271, 1.250097632408142, 1.2657214403152466, 1.281345248222351, 1.2969691753387451, 1.3125929832458496, 1.3282169103622437, 1.3438408374786377, 1.3594647645950317, 1.3750888109207153, 1.3907127380371094, 1.406336784362793, 1.4219608306884766, 1.4375848770141602, 1.4532090425491333, 1.468833088874817, 1.48445725440979, 1.5000814199447632, 1.5157055854797363, 1.5313297510147095, 1.5469539165496826, 1.5625780820846558, 1.5782023668289185, 1.5938265323638916, 1.6094508171081543, 1.625075101852417, 1.6406993865966797, 1.6563236713409424, 1.671947956085205, 1.6875723600387573, 1.70319664478302, 1.7188210487365723, 1.734445333480835, 1.7500697374343872, 1.7656941413879395, 1.7813185453414917, 1.796942949295044, 1.8125673532485962, 1.8281917572021484, 1.8438161611557007, 1.8594406843185425, 1.8750650882720947, 1.8906896114349365, 1.9063140153884888, 1.9219385385513306, 1.9375630617141724, 1.9531874656677246, 1.9688119888305664, 1.9844365119934082, 2.00006103515625, 1.9844365119934082, 1.9688119888305664, 1.9531874656677246, 1.9375630617141724, 1.9219385385513306, 1.9063140153884888, 1.8906896114349365, 1.8750650882720947, 1.8594406843185425, 1.8438161611557007, 1.8281917572021484, 1.8125673532485962, 1.796942949295044, 1.7813185453414917, 1.7656941413879395, 1.7500697374343872, 1.734445333480835, 1.7188210487365723, 1.70319664478302, 1.6875723600387573, 1.671947956085205, 1.6563236713409424, 1.6406993865966797, 1.625075101852417, 1.6094508171081543, 1.5938265323638916, 1.5782023668289185, 1.5625780820846558, 1.5469539165496826, 1.5313297510147095, 1.5157055854797363, 1.5000814199447632, 1.48445725440979, 1.468833088874817, 1.4532090425491333, 1.4375848770141602, 1.4219608306884766, 1.406336784362793, 1.3907127380371094, 1.3750888109207153, 1.3594647645950317, 1.3438408374786377, 1.3282169103622437, 1.3125929832458496, 1.2969691753387451, 1.281345248222351, 1.2657214403152466, 1.250097632408142, 1.2344739437103271, 1.2188501358032227, 1.2032264471054077, 1.1876027584075928, 1.1719791889190674, 1.156355619430542, 1.1407320499420166, 1.1251084804534912, 1.1094850301742554, 1.0938615798950195, 1.0782382488250732, 1.062614917755127, 1.0469915866851807, 1.031368374824524, 1.0157451629638672, 1.0001220703125, 0.9844989776611328, 0.9688760042190552, 0.9532530903816223, 0.9376301765441895, 0.9220073819160461, 0.9063847064971924, 0.8907620310783386, 0.8751394748687744, 0.8595170378684998, 0.8438946604728699, 0.8282724022865295, 0.812650203704834, 0.7970281839370728, 0.7814062237739563, 0.7657844424247742, 0.7501627206802368, 0.7345411777496338, 0.7189198136329651, 0.7032985687255859, 0.6876775622367859, 0.6720566749572754, 0.6564359664916992, 0.6408154964447021, 0.6251952648162842, 0.6095752716064453, 0.5939555764198303, 0.5783361196517944, 0.5627169609069824, 0.5470981597900391, 0.5314797163009644, 0.5158616900444031, 0.5002440810203552, 0.4846269488334656, 0.4690103530883789, 0.4533943235874176, 0.43777891993522644, 0.42216426134109497, 0.4065503776073456, 0.3909373879432678, 0.37532538175582886, 0.3597145080566406, 0.34410491585731506, 0.3284968137741089, 0.3128903806209564, 0.29728591442108154, 0.28168368339538574, 0.2660841643810272, 0.2504878044128418, 0.234895259141922, 0.2193073183298111, 0.20372506976127625, 0.18814991414546967, 0.17258375883102417, 0.15702930092811584, 0.1414903998374939, 0.12597277760505676, 0.11048543453216553, 0.09504316747188568, 0.0796721801161766, 0.06442352384328842, 0.049410589039325714, 0.03493856266140938, 0.022097086533904076, };
# 6 "cordiccart2pol.cpp" 2


__attribute__((sdx_kernel("cordiccart2pol", 0))) void cordiccart2pol(data_t x, data_t y, data_t * r, data_t * theta)
{
#line 9 "/home/linux/ieng6/students/769/zeh003/Desktop/CSE-237C-Starter/project_files/project2/cordic/HLS/cordic_LUT/cordiccart2pol.tcl"
#pragma HLSDIRECTIVE TOP name=cordiccart2pol
# 9 "cordiccart2pol.cpp"


    ap_fixed<8, 2, AP_RND, AP_WRAP, 1> fixed_x = x;
    ap_fixed<8, 2, AP_RND, AP_WRAP, 1> fixed_y = y;


    ap_uint<2*8> index;


    VITIS_LOOP_18_1: for(int i = 0; i < 8; i++)
    {
#pragma HLS UNROLL
 index[2*8 -1-i] = fixed_x[8 -1-i];
        index[8 -1-i] = fixed_y[8 -1-i];
    }


    *r = my_LUT_r[index];
    *theta = my_LUT_th[index];
}
