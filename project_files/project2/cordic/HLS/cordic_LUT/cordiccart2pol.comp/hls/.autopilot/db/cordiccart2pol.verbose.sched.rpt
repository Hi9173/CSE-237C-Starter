

================================================================
== Vitis HLS Report for 'cordiccart2pol'
================================================================
* Date:           Thu Oct 23 18:11:50 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        cordiccart2pol.comp
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.420 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1|  10.000 ns|  10.000 ns|    2|    2|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.42>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%y_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %y" [cordiccart2pol.cpp:8]   --->   Operation 3 'read' 'y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%x_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %x" [cordiccart2pol.cpp:8]   --->   Operation 4 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %x_read, i32 5" [cordiccart2pol.cpp:11]   --->   Operation 5 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns) (grouped into LUT with out node fixed_x_2)   --->   "%fixed_x = shl i6 %x_read, i6 1" [cordiccart2pol.cpp:11]   --->   Operation 6 'shl' 'fixed_x' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %x_read, i32 4" [cordiccart2pol.cpp:11]   --->   Operation 7 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns) (grouped into LUT with out node xor_ln11_1)   --->   "%xor_ln11 = xor i1 %tmp, i1 1" [cordiccart2pol.cpp:11]   --->   Operation 8 'xor' 'xor_ln11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (0.00ns) (grouped into LUT with out node xor_ln11_1)   --->   "%and_ln11 = and i1 %tmp_1, i1 %xor_ln11" [cordiccart2pol.cpp:11]   --->   Operation 9 'and' 'and_ln11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (0.00ns) (grouped into LUT with out node xor_ln11_1)   --->   "%and_ln11_1 = and i1 %tmp_1, i1 %tmp" [cordiccart2pol.cpp:11]   --->   Operation 10 'and' 'and_ln11_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns) (grouped into LUT with out node xor_ln11_1)   --->   "%or_ln11 = or i1 %tmp, i1 %and_ln11" [cordiccart2pol.cpp:11]   --->   Operation 11 'or' 'or_ln11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.00ns) (grouped into LUT with out node fixed_x_2)   --->   "%trunc_ln11 = trunc i6 %x_read" [cordiccart2pol.cpp:11]   --->   Operation 12 'trunc' 'trunc_ln11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node fixed_x_2)   --->   "%fixed_x_1 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i1.i4.i1, i1 %tmp, i4 %trunc_ln11, i1 0" [cordiccart2pol.cpp:11]   --->   Operation 13 'bitconcatenate' 'fixed_x_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.97ns) (out node of the LUT)   --->   "%xor_ln11_1 = xor i1 %and_ln11_1, i1 %or_ln11" [cordiccart2pol.cpp:11]   --->   Operation 14 'xor' 'xor_ln11_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (1.18ns) (out node of the LUT)   --->   "%fixed_x_2 = select i1 %xor_ln11_1, i6 %fixed_x_1, i6 %fixed_x" [cordiccart2pol.cpp:11]   --->   Operation 15 'select' 'fixed_x_2' <Predicate = true> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %y_read, i32 5" [cordiccart2pol.cpp:12]   --->   Operation 16 'bitselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node fixed_y_2)   --->   "%fixed_y = shl i6 %y_read, i6 1" [cordiccart2pol.cpp:12]   --->   Operation 17 'shl' 'fixed_y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %y_read, i32 4" [cordiccart2pol.cpp:12]   --->   Operation 18 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node xor_ln12_1)   --->   "%xor_ln12 = xor i1 %tmp_2, i1 1" [cordiccart2pol.cpp:12]   --->   Operation 19 'xor' 'xor_ln12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node xor_ln12_1)   --->   "%and_ln12 = and i1 %tmp_3, i1 %xor_ln12" [cordiccart2pol.cpp:12]   --->   Operation 20 'and' 'and_ln12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node xor_ln12_1)   --->   "%and_ln12_1 = and i1 %tmp_3, i1 %tmp_2" [cordiccart2pol.cpp:12]   --->   Operation 21 'and' 'and_ln12_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node xor_ln12_1)   --->   "%or_ln12 = or i1 %tmp_2, i1 %and_ln12" [cordiccart2pol.cpp:12]   --->   Operation 22 'or' 'or_ln12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node fixed_y_2)   --->   "%trunc_ln12 = trunc i6 %y_read" [cordiccart2pol.cpp:12]   --->   Operation 23 'trunc' 'trunc_ln12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node fixed_y_2)   --->   "%fixed_y_1 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i1.i4.i1, i1 %tmp_2, i4 %trunc_ln12, i1 0" [cordiccart2pol.cpp:12]   --->   Operation 24 'bitconcatenate' 'fixed_y_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.97ns) (out node of the LUT)   --->   "%xor_ln12_1 = xor i1 %and_ln12_1, i1 %or_ln12" [cordiccart2pol.cpp:12]   --->   Operation 25 'xor' 'xor_ln12_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (1.18ns) (out node of the LUT)   --->   "%fixed_y_2 = select i1 %xor_ln12_1, i6 %fixed_y_1, i6 %fixed_y" [cordiccart2pol.cpp:12]   --->   Operation 26 'select' 'fixed_y_2' <Predicate = true> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%index = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i6.i6, i6 %fixed_x_2, i6 %fixed_y_2" [cordiccart2pol.cpp:22]   --->   Operation 27 'bitconcatenate' 'index' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i12 %index" [cordiccart2pol.cpp:26]   --->   Operation 28 'zext' 'zext_ln26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%my_LUT_r_addr = getelementptr i5 %my_LUT_r, i64 0, i64 %zext_ln26" [cordiccart2pol.cpp:26]   --->   Operation 29 'getelementptr' 'my_LUT_r_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [2/2] (3.25ns)   --->   "%my_LUT_r_load = load i12 %my_LUT_r_addr" [cordiccart2pol.cpp:26]   --->   Operation 30 'load' 'my_LUT_r_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 5> <Depth = 4096> <ROM>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%my_LUT_th_addr = getelementptr i6 %my_LUT_th, i64 0, i64 %zext_ln26" [cordiccart2pol.cpp:27]   --->   Operation 31 'getelementptr' 'my_LUT_th_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [2/2] (3.25ns)   --->   "%my_LUT_th_load = load i12 %my_LUT_th_addr" [cordiccart2pol.cpp:27]   --->   Operation 32 'load' 'my_LUT_th_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 6> <Depth = 4096> <ROM>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%spectopmodule_ln8 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [cordiccart2pol.cpp:8]   --->   Operation 33 'spectopmodule' 'spectopmodule_ln8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i6 %x"   --->   Operation 34 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i6 %x, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 35 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i6 %y"   --->   Operation 36 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i6 %y, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 37 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i6 %r"   --->   Operation 38 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i6 %r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 39 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i6 %theta"   --->   Operation 40 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i6 %theta, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 41 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/2] ( I:3.25ns O:3.25ns )   --->   "%my_LUT_r_load = load i12 %my_LUT_r_addr" [cordiccart2pol.cpp:26]   --->   Operation 42 'load' 'my_LUT_r_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 5> <Depth = 4096> <ROM>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln26_1 = zext i5 %my_LUT_r_load" [cordiccart2pol.cpp:26]   --->   Operation 43 'zext' 'zext_ln26_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%write_ln26 = write void @_ssdm_op_Write.ap_auto.i6P0A, i6 %r, i6 %zext_ln26_1" [cordiccart2pol.cpp:26]   --->   Operation 44 'write' 'write_ln26' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/2] ( I:3.25ns O:3.25ns )   --->   "%my_LUT_th_load = load i12 %my_LUT_th_addr" [cordiccart2pol.cpp:27]   --->   Operation 45 'load' 'my_LUT_th_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 6> <Depth = 4096> <ROM>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%write_ln27 = write void @_ssdm_op_Write.ap_auto.i6P0A, i6 %theta, i6 %my_LUT_th_load" [cordiccart2pol.cpp:27]   --->   Operation 46 'write' 'write_ln27' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%ret_ln28 = ret" [cordiccart2pol.cpp:28]   --->   Operation 47 'ret' 'ret_ln28' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.420ns
The critical path consists of the following:
	wire read operation ('y_read', cordiccart2pol.cpp:8) on port 'y' (cordiccart2pol.cpp:8) [16]  (0.000 ns)
	'and' operation 1 bit ('and_ln12_1', cordiccart2pol.cpp:12) [34]  (0.000 ns)
	'xor' operation 1 bit ('xor_ln12_1', cordiccart2pol.cpp:12) [38]  (0.978 ns)
	'select' operation 6 bit ('fixed_y', cordiccart2pol.cpp:12) [39]  (1.188 ns)
	'getelementptr' operation 12 bit ('my_LUT_r_addr', cordiccart2pol.cpp:26) [42]  (0.000 ns)
	'load' operation 5 bit ('my_LUT_r_load', cordiccart2pol.cpp:26) on array 'my_LUT_r' [43]  (3.254 ns)

 <State 2>: 3.254ns
The critical path consists of the following:
	'load' operation 5 bit ('my_LUT_r_load', cordiccart2pol.cpp:26) on array 'my_LUT_r' [43]  (3.254 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
